{"index": 0, "beams": [{"score_history": [-2.288818359375e-05, -1.33514404296875e-05, -0.0005559840355999768, -0.0007657030364498496, -0.00024413742357864976, -2.145764938177308e-06, -1.1897645890712738e-07, -2.6822088329936378e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.034308433532714844, -1.6245231628417969, -0.0005869357264600694, -1.5735626220703125e-05, -0.00033211708068847656, -2.6702880859375e-05, -0.0006873607635498047, -4.291534423828125e-06, -6.675733857264277e-06, -1.3470649719238281e-05, -0.008493781089782715, -3.3378591979271732e-06, -0.0004668619658332318, -0.0014132215874269605, -0.02179090306162834, -8.594989776611328e-05, -4.768370445162873e-07, -0.0037555694580078125, -0.00016021728515625, 0.0, -0.0007412433624267578, -0.00013506411050911993, 0.0, -0.0010252099018543959, 0.0, -7.414817082462832e-05, 0.0, -6.67572021484375e-05, -5.91278076171875e-05, -8.96453857421875e-05, -1.1920928244535389e-07, 0.0, -3.1948089599609375e-05, 0.0], "choice_history": [97, 283, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 204, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Destroy", "<EOS>", "Weapon", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "AcidicSwampOoze", "_type": "Template5", "hole2": [{"hole6": [{"_type": "Template79", "hole0": "EnemyPlayer"}], "hole3": "Destroy", "hole0": "Acidic Swamp Ooze", "_type": "Template15", "hole2": "COMMON", "hole5": "WeaponSelector", "hole1": 2}], "hole1": "MinionCard"}, "score": -1.7005489315063969, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score_history": [-2.288818359375e-05, -1.33514404296875e-05, -0.0005559840355999768, -0.0007657030364498496, -0.00024413742357864976, -2.145764938177308e-06, -1.1897645890712738e-07, -2.6822088329936378e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.034308433532714844, -1.541724681854248, -1.0013547580456361e-05, -1.2159347534179688e-05, -0.0024139881134033203, -0.00023889541625976562, -0.0001800060272216797, -2.2768972485209815e-05, -2.6712310500442982e-05, -5.7220458984375e-06, -0.00577545166015625, 0.0, -0.004829070530831814, -0.0005336980102583766, -8.58306884765625e-05, -0.024483680725097656, -3.814697265625e-06, -1.575670599937439, -0.0050966739654541016, 0.0, -0.04669447988271713, -1.1682462172757369e-05, -2.1457672119140625e-06, -3.4570541174616665e-05, -1.9073486328125e-06, -0.00026833900483325124, 0.0, -5.14984130859375e-05, -4.57763671875e-05, -5.91278076171875e-05, 0.0, 0.0, -5.7697296142578125e-05, 0.0], "choice_history": [97, 283, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Destroy", "<EOS>", 346, 88, 325, "Weapon", "Selector", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "AcidicSwampOoze", "_type": "Template5", "hole2": [{"hole4": [{"_type": "Template79", "hole0": "WeaponSelector"}], "hole3": "Destroy", "hole0": "Acidic Swamp Ooze", "_type": "Template15", "hole2": "COMMON", "hole5": "PlayerSelector", "hole1": 2}], "hole1": "MinionCard"}, "score": -3.244299889127859, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(WeaponSelector(\n            )), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score_history": [-2.288818359375e-05, -1.33514404296875e-05, -0.0005559840355999768, -0.0007657030364498496, -0.00024413742357864976, -2.145764938177308e-06, -1.1897645890712738e-07, -2.6822088329936378e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.034308433532714844, -2.8270459175109863, -3.0279072234407067e-05, -1.9311904907226562e-05, -0.0031021833419799805, -0.0006198883056640625, -0.00017654895782470703, 0.0, -1.0252135325572453e-05, -1.9073486328125e-06, -0.000667572021484375, -3.933906555175781e-06, -0.618864893913269, -1.1086402082582936e-05, -0.02391902357339859, -8.964352309703827e-05, -0.015597343444824219, -8.7738037109375e-05, -3.4332275390625e-05, -0.00016021728515625, 0.0, -0.000263214111328125, -1.9073486328125e-06, -0.002277374267578125, -1.9073486328125e-06, -3.814697265625e-06, -8.392333984375e-05, -0.0002593994140625, -0.0072193145751953125, 0.0, -0.011178016662597656, -1.9073486328125e-06, -0.0004100799560546875, -0.0001773834228515625, 0.0, -1.609325408935547e-05, 0.0, -0.0002968311309814453, 0.0, -2.47955322265625e-05, -5.53131103515625e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -4.303455352783203e-05, 0.0], "choice_history": [97, 283, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 202, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Bounce", "<EOS>", "Destroy", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "AcidicSwampOoze", "_type": "Template5", "hole2": [{"hole3": "Bounce", "hole0": "Acidic Swamp Ooze", "_type": "Template15", "hole2": "COMMON", "hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": "Destroy", "hole1": 2}], "hole1": "MinionCard"}, "score": -3.5487763145769975, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Bounce(), Destroy(\n            players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score_history": [-2.288818359375e-05, -1.33514404296875e-05, -0.0005559840355999768, -0.0007657030364498496, -0.00024413742357864976, -2.145764938177308e-06, -1.1897645890712738e-07, -2.6822088329936378e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.034308433532714844, -1.541724681854248, -1.0013547580456361e-05, -1.2159347534179688e-05, -0.0024139881134033203, -0.00023889541625976562, -0.0001800060272216797, -2.2768972485209815e-05, -2.6712310500442982e-05, -5.7220458984375e-06, -0.00577545166015625, 0.0, -0.004829070530831814, -0.0005336980102583766, -8.58306884765625e-05, -0.024483680725097656, -3.814697265625e-06, -1.9471129179000854, -0.0017818212509155273, 0.0, -0.07438531517982483, -3.254391413065605e-05, -2.3841855067985307e-07, -2.5033919882844202e-05, -1.9073486328125e-06, -0.0001744016190059483, 0.0, -4.9591064453125e-05, -4.38690185546875e-05, -6.866455078125e-05, 0.0, 0.0, -6.914138793945312e-05, 0.0], "choice_history": [97, 283, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Destroy", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "AcidicSwampOoze", "_type": "Template5", "hole2": [{"hole4": [{"_type": "Template79", "hole0": "EnemyPlayer"}], "hole3": "Destroy", "hole0": "Acidic Swamp Ooze", "_type": "Template15", "hole2": "COMMON", "hole5": "PlayerSelector", "hole1": 2}], "hole1": "MinionCard"}, "score": -3.6400508359069477, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(EnemyPlayer()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score_history": [-2.288818359375e-05, -1.33514404296875e-05, -0.0005559840355999768, -0.0007657030364498496, -0.00024413742357864976, -2.145764938177308e-06, -1.1897645890712738e-07, -2.6822088329936378e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.034308433532714844, -1.8404979705810547, -2.193450927734375e-05, -3.0159888410707936e-05, -0.0008406639099121094, -0.0001245737075805664, -0.0003666877746582031, -1.2755313036905136e-05, -3.481149178696796e-05, -5.14984130859375e-05, -0.0007460117340087891, -2.09808349609375e-05, -0.8491923809051514, -0.0003032645909115672, -5.7220458984375e-06, -0.0033206939697265625, -1.9073486328125e-06, -0.3144276440143585, -5.7220458984375e-06, -0.0006164312362670898, -3.826618194580078e-05, -5.7220458984375e-06, -0.0022754669189453125, -2.86102294921875e-05, -1.1444091796875e-05, -2.86102294921875e-05, 0.0, -0.000102996826171875, -1.9073486328125e-06, -0.6277227401733398, -1.9073486328125e-06, -3.814697265625e-06, -8.392333984375e-05, -0.0001049041748046875, -0.013217926025390625, 0.0, -0.005054473876953125, -1.9073486328125e-06, -0.000865936279296875, -6.67572021484375e-05, 0.0, -1.430511474609375e-05, 0.0, -0.0003142356872558594, 0.0, -2.09808349609375e-05, -5.14984130859375e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -4.303455352783203e-05, 0.0], "choice_history": [97, 283, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "2", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "AcidicSwampOoze", "_type": "Template5", "hole2": [{"hole4": [{"n": 2, "_type": "Num"}], "hole3": "Damage", "hole0": "Acidic Swamp Ooze", "_type": "Template15", "hole2": "COMMON", "hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": "CharacterSelector", "hole1": 2}], "hole1": "MinionCard"}, "score": -3.6967031148001013, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(2),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score_history": [-2.288818359375e-05, -1.33514404296875e-05, -0.0005559840355999768, -0.0007657030364498496, -0.00024413742357864976, -2.145764938177308e-06, -1.1897645890712738e-07, -2.6822088329936378e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.034308433532714844, -1.8404979705810547, -2.193450927734375e-05, -3.0159888410707936e-05, -0.0008406639099121094, -0.0001245737075805664, -0.0003666877746582031, -1.2755313036905136e-05, -3.481149178696796e-05, -5.14984130859375e-05, -0.0007460117340087891, -2.09808349609375e-05, -0.7724149227142334, -0.3956669270992279, -6.103515625e-05, -0.3661031723022461, -3.814697265625e-06, -0.12224841117858887, -0.0005611154483631253, -0.1749035120010376, -8.094310760498047e-05, 0.0, -0.004834175109863281, -2.47955322265625e-05, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001316070556640625, 0.0, -0.1410980224609375, -1.9073486328125e-06, -5.7220458984375e-06, -6.4849853515625e-05, -0.0001087188720703125, -0.004802703857421875, 0.0, -0.0048236846923828125, -1.9073486328125e-06, -0.0007038116455078125, -7.2479248046875e-05, 0.0, -1.430511474609375e-05, 0.0, -0.0003142356872558594, 0.0, -2.288818359375e-05, -5.340576171875e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -3.921985626220703e-05, 0.0], "choice_history": [97, 283, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Give", "<EOS>", 346, 88, 325, "Frozen", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "AcidicSwampOoze", "_type": "Template5", "hole2": [{"hole4": [{"_type": "Template79", "hole0": "Frozen"}], "hole3": "Give", "hole0": "Acidic Swamp Ooze", "_type": "Template15", "hole2": "COMMON", "hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": "CharacterSelector", "hole1": 2}], "hole1": "MinionCard"}, "score": -3.8679550686124173, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give(Frozen()),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score_history": [-2.288818359375e-05, -1.33514404296875e-05, -0.0005559840355999768, -0.0007657030364498496, -0.00024413742357864976, -2.145764938177308e-06, -1.1897645890712738e-07, -2.6822088329936378e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.034308433532714844, -1.8404979705810547, -2.193450927734375e-05, -3.0159888410707936e-05, -0.0008406639099121094, -0.0001245737075805664, -0.0003666877746582031, -1.2755313036905136e-05, -3.481149178696796e-05, -5.14984130859375e-05, -0.0007460117340087891, -2.09808349609375e-05, -0.8491923809051514, -0.0003032645909115672, -5.7220458984375e-06, -0.0033206939697265625, -1.9073486328125e-06, -0.3144276440143585, -5.7220458984375e-06, -0.0006164312362670898, -3.826618194580078e-05, -5.7220458984375e-06, -0.0022754669189453125, -2.86102294921875e-05, -1.1444091796875e-05, -2.86102294921875e-05, 0.0, -0.000102996826171875, -1.9073486328125e-06, -0.8016872406005859, -8.463859558105469e-06, 0.0, -7.2479248046875e-05, -0.000171661376953125, -0.016683578491210938, 0.0, -0.0080413818359375, -1.9073486328125e-06, -0.000720977783203125, -6.29425048828125e-05, 0.0, -1.2159347534179688e-05, 0.0, -0.00032520294189453125, 0.0, -2.288818359375e-05, -5.14984130859375e-05, -5.340576171875e-05, -3.814697265625e-06, 0.0, -3.921985626220703e-05, 0.0], "choice_history": [97, 283, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "2", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Enemy", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "AcidicSwampOoze", "_type": "Template5", "hole2": [{"hole4": [{"n": 2, "_type": "Num"}], "hole3": "Damage", "hole0": "Acidic Swamp Ooze", "_type": "Template15", "hole2": "COMMON", "hole7": [{"value": {"_type": "Template79", "hole0": "EnemyPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": "CharacterSelector", "hole1": 2}], "hole1": "MinionCard"}, "score": -3.8770325568243322, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(2),\n            CharacterSelector(players=EnemyPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score_history": [-2.288818359375e-05, -1.33514404296875e-05, -0.0005559840355999768, -0.0007657030364498496, -0.00024413742357864976, -2.145764938177308e-06, -1.1897645890712738e-07, -2.6822088329936378e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.034308433532714844, -2.8270459175109863, -3.0279072234407067e-05, -1.9311904907226562e-05, -0.0031021833419799805, -0.0006198883056640625, -0.00017654895782470703, 0.0, -1.0252135325572453e-05, -1.9073486328125e-06, -0.000667572021484375, -3.933906555175781e-06, -0.9844787120819092, -0.00011265211651334539, -0.5067387223243713, -0.0018010139465332031, -5.245195097813848e-06, -0.005932807922363281, -4.38690185546875e-05, -5.7220458984375e-06, -6.103515625e-05, 0.0, -0.0001850128173828125, -1.9073486328125e-06, -0.004009246826171875, -2.0265579223632812e-06, -1.9073486328125e-06, -5.14984130859375e-05, -0.0001354217529296875, -0.0081634521484375, 0.0, -0.008532524108886719, -1.9073486328125e-06, -0.00029754638671875, -0.00012969970703125, 0.0, -1.442432312614983e-05, 0.0, -0.0002835988998413086, 0.0, -2.6702880859375e-05, -5.53131103515625e-05, -5.91278076171875e-05, -3.814697265625e-06, 0.0, -4.291534423828125e-05, 0.0], "choice_history": [97, 283, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 202, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Destroy", "<EOS>", "Weapon", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "AcidicSwampOoze", "_type": "Template5", "hole2": [{"hole3": "Destroy", "hole0": "Acidic Swamp Ooze", "_type": "Template15", "hole2": "COMMON", "hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": "WeaponSelector", "hole1": 2}], "hole1": "MinionCard"}, "score": -4.388814518527823, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score_history": [-2.288818359375e-05, -1.33514404296875e-05, -0.0005559840355999768, -0.0007657030364498496, -0.00024413742357864976, -2.145764938177308e-06, -1.1897645890712738e-07, -2.6822088329936378e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.034308433532714844, -1.541724681854248, -1.0013547580456361e-05, -1.2159347534179688e-05, -0.0024139881134033203, -0.00023889541625976562, -0.0001800060272216797, -2.2768972485209815e-05, -2.6712310500442982e-05, -5.7220458984375e-06, -0.00577545166015625, 0.0, -0.004829070530831814, -0.0005336980102583766, -8.58306884765625e-05, -0.024483680725097656, -3.814697265625e-06, -3.0270657539367676, -6.079673767089844e-05, -0.009987235069274902, -1.1920922133867862e-06, -2.1457672119140625e-06, -2.6941281248582527e-05, -1.9073486328125e-06, -0.00021648165420629084, 0.0, -5.7220458984375e-05, -4.38690185546875e-05, -5.7220458984375e-05, 0.0, 0.0, -6.532669067382812e-05, 0.0], "choice_history": [97, 283, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Destroy", "<EOS>", 346, 88, 325, "ALL", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "AcidicSwampOoze", "_type": "Template5", "hole2": [{"hole4": [{"_type": "Template79", "hole0": "ALL"}], "hole3": "Destroy", "hole0": "Acidic Swamp Ooze", "_type": "Template15", "hole2": "COMMON", "hole5": "PlayerSelector", "hole1": 2}], "hole1": "MinionCard"}, "score": -4.653891480848614, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(ALL()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score_history": [-2.288818359375e-05, -1.33514404296875e-05, -0.0005559840355999768, -0.0007657030364498496, -0.00024413742357864976, -2.145764938177308e-06, -1.1897645890712738e-07, -2.6822088329936378e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.034308433532714844, -1.541724681854248, -1.0013547580456361e-05, -1.2159347534179688e-05, -0.0024139881134033203, -0.00023889541625976562, -0.0001800060272216797, -2.2768972485209815e-05, -2.6712310500442982e-05, -5.7220458984375e-06, -0.00577545166015625, 0.0, -0.004829070530831814, -0.0005336980102583766, -8.58306884765625e-05, -0.024483680725097656, -3.814697265625e-06, -2.4214906692504883, -0.573540210723877, 0.0, -0.15147358179092407, -9.894352842820808e-06, -2.1457672119140625e-06, -3.3974472898989916e-05, -1.9073486328125e-06, -0.00027477607363834977, 0.0, -5.14984130859375e-05, -4.57763671875e-05, -5.91278076171875e-05, 0.0, 0.0, -6.914138793945312e-05, 0.0], "choice_history": [97, 283, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Destroy", "<EOS>", 346, 88, 325, "Hero", "Selector", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "AcidicSwampOoze", "_type": "Template5", "hole2": [{"hole4": [{"_type": "Template79", "hole0": "HeroSelector"}], "hole3": "Destroy", "hole0": "Acidic Swamp Ooze", "_type": "Template15", "hole2": "COMMON", "hole5": "PlayerSelector", "hole1": 2}], "hole1": "MinionCard"}, "score": -4.763358094090535, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(HeroSelector()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score_history": [-2.288818359375e-05, -1.33514404296875e-05, -0.0005559840355999768, -0.0007657030364498496, -0.00024413742357864976, -2.145764938177308e-06, -1.1897645890712738e-07, -2.6822088329936378e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.034308433532714844, -4.455617427825928, -0.0001755919074639678, -3.600120544433594e-05, -0.0024569034576416016, -0.0001888275146484375, -0.00014519691467285156, -3.4570680327306036e-06, -6.318137820926495e-06, -9.5367431640625e-06, -0.035259246826171875, 0.0, -0.007415823172777891, -0.00038250969373621047, -0.2420559525489807, -0.0001621246337890625, -1.7881377516459906e-06, -5.8412548241904005e-05, 0.0, -0.00019573357712943107, 0.0, -7.43865966796875e-05, -4.57763671875e-05, -6.4849853515625e-05, 0.0, -1.1920928244535389e-07, -3.4809112548828125e-05, 0.0], "choice_history": [97, 283, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 201, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Destroy", "<EOS>", "Weapon", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "AcidicSwampOoze", "_type": "Template5", "hole2": [{"hole3": "Destroy", "hole0": "Acidic Swamp Ooze", "_type": "Template15", "hole2": "COMMON", "hole5": "WeaponSelector", "hole1": 2}], "hole1": "MinionCard"}, "score": -4.780349689439582, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score_history": [-2.288818359375e-05, -1.33514404296875e-05, -0.0005559840355999768, -0.0007657030364498496, -0.00024413742357864976, -2.145764938177308e-06, -1.1897645890712738e-07, -2.6822088329936378e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.034308433532714844, -1.8404979705810547, -2.193450927734375e-05, -3.0159888410707936e-05, -0.0008406639099121094, -0.0001245737075805664, -0.0003666877746582031, -1.2755313036905136e-05, -3.481149178696796e-05, -5.14984130859375e-05, -0.0007460117340087891, -2.09808349609375e-05, -0.8491923809051514, -0.0003032645909115672, -5.7220458984375e-06, -0.0033206939697265625, -1.9073486328125e-06, -1.5189117193222046, -5.7220458984375e-06, -0.0028532743453979492, -6.496906280517578e-05, -3.814697265625e-06, -0.0021963119506835938, -3.24249267578125e-05, -1.33514404296875e-05, -2.6702880859375e-05, 0.0, -0.000125885009765625, -1.9073486328125e-06, -0.6055793762207031, -1.9073486328125e-06, -3.814697265625e-06, -8.58306884765625e-05, -0.000102996826171875, -0.010465621948242188, 0.0, -0.00545501708984375, -1.9073486328125e-06, -0.0008144378662109375, -6.866455078125e-05, 0.0, -1.4185905456542969e-05, 0.0, -0.0003198385238647461, 0.0, -2.09808349609375e-05, -5.14984130859375e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -3.921985626220703e-05, 0.0], "choice_history": [97, 283, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "3", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "AcidicSwampOoze", "_type": "Template5", "hole2": [{"hole4": [{"n": 3, "_type": "Num"}], "hole3": "Damage", "hole0": "Acidic Swamp Ooze", "_type": "Template15", "hole2": "COMMON", "hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": "CharacterSelector", "hole1": 2}], "hole1": "MinionCard"}, "score": -4.8788533297106085, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score_history": [-2.288818359375e-05, -1.33514404296875e-05, -0.0005559840355999768, -0.0007657030364498496, -0.00024413742357864976, -2.145764938177308e-06, -1.1897645890712738e-07, -2.6822088329936378e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -3.4379940032958984, -0.000141143798828125, -2.0265579223632812e-06, -1.71661376953125e-05, -0.00039708614349365234, -9.72747802734375e-05, -0.0014957189559936523, -0.0003833770751953125, -2.026579386438243e-05, 0.0, -0.00896453857421875, 0.0, -0.40149569511413574, -1.2278556823730469e-05, -0.048087120056152344, -0.006252288818359375, -0.019205093383789062, -0.12846755981445312, -0.014868736267089844, -0.005899310111999512, -1.9073486328125e-06, -1.9073486328125e-06, -0.0010509490966796875, -0.0017032623291015625, -1.33514404296875e-05, 0.0, -0.015358567237854004, -0.0028891563415527344, -0.0001125335693359375, -0.000560760498046875, -2.288818359375e-05, -0.4225529432296753, -2.09808349609375e-05, -0.15340232849121094, -0.0006809234619140625, -0.012948751449584961, -2.86102294921875e-05, -7.152555099310121e-07, -0.0667339563369751, -0.001263260841369629, -8.404254913330078e-05, -0.05689239501953125, -0.04748725891113281, -0.008552820421755314, -0.004921349231153727, -0.005991162732243538, -1.537799835205078e-05, -2.9802276912960224e-06, -0.0001239776611328125, -1.9073486328125e-05, -3.814697265625e-06, -0.018442869186401367, -0.00016248226165771484, 0.0, -0.0032582408748567104, 0.0, -9.989738464355469e-05, 0.0, -4.76837158203125e-05, -3.814697265625e-05, -6.103515625e-05, -3.933906555175781e-06, 0.0, -3.5643577575683594e-05, 0.0], "choice_history": [97, 283, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 40, 329, 347, 62, 261, "Draw", "<EOS>", 346, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "<UNK>", "<EOS>", 70, 292, "Weapon", "Selector", "<EOS>", "Enemy", "Player", "<EOS>", 63, 264, "Destroy", "<EOS>", "Weapon", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "AcidicSwampOoze", "_type": "Template5", "hole2": [{"hole4": {"elts": [{"_type": "Template42", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "Attribute"}, "args": [{"_type": "Str", "s": "<UNK>"}, {"_type": "Template55", "hole1": "EnemyPlayer", "hole0": "WeaponSelector"}]}], "hole0": "Draw"}, {"hole3": [{"_type": "Template79", "hole0": "EnemyPlayer"}], "hole2": "WeaponSelector", "_type": "Template43", "hole0": "Destroy"}], "_type": "Tuple"}, "hole3": "battlecry", "hole0": "Acidic Swamp Ooze", "_type": "Template26", "hole2": "COMMON", "hole1": 2}], "hole1": "MinionCard"}, "score": -4.901043085587133, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=(Battlecry(Draw(Attribute('<UNK>',\n            WeaponSelector(EnemyPlayer()))), PlayerSelector()), Battlecry(\n            Destroy(), WeaponSelector(EnemyPlayer()))))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score_history": [-2.288818359375e-05, -1.33514404296875e-05, -0.0005559840355999768, -0.0007657030364498496, -0.00024413742357864976, -2.145764938177308e-06, -1.1897645890712738e-07, -2.6822088329936378e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.034308433532714844, -1.8404979705810547, -2.193450927734375e-05, -3.0159888410707936e-05, -0.0008406639099121094, -0.0001245737075805664, -0.0003666877746582031, -1.2755313036905136e-05, -3.481149178696796e-05, -5.14984130859375e-05, -0.0007460117340087891, -2.09808349609375e-05, -0.8491923809051514, -0.0003032645909115672, -5.7220458984375e-06, -0.0033206939697265625, -1.9073486328125e-06, -1.5189117193222046, -5.7220458984375e-06, -0.0028532743453979492, -6.496906280517578e-05, -3.814697265625e-06, -0.0021963119506835938, -3.24249267578125e-05, -1.33514404296875e-05, -2.6702880859375e-05, 0.0, -0.000125885009765625, -1.9073486328125e-06, -0.8251552581787109, -6.556510470545618e-06, 0.0, -7.82012939453125e-05, -0.0001678466796875, -0.01354217529296875, 0.0, -0.008863449096679688, -1.9073486328125e-06, -0.0007038116455078125, -6.67572021484375e-05, 0.0, -1.2040138244628906e-05, 0.0, -0.00033092498779296875, 0.0, -2.09808349609375e-05, -5.14984130859375e-05, -5.340576171875e-05, -3.814697265625e-06, 0.0, -3.921985626220703e-05, 0.0], "choice_history": [97, 283, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "3", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Enemy", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "AcidicSwampOoze", "_type": "Template5", "hole2": [{"hole4": [{"n": 3, "_type": "Num"}], "hole3": "Damage", "hole0": "Acidic Swamp Ooze", "_type": "Template15", "hole2": "COMMON", "hole7": [{"value": {"_type": "Template79", "hole0": "EnemyPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": "CharacterSelector", "hole1": 2}], "hole1": "MinionCard"}, "score": -5.10486484437385, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=EnemyPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score_history": [-2.288818359375e-05, -1.33514404296875e-05, -0.0005559840355999768, -0.0007657030364498496, -0.00024413742357864976, -2.145764938177308e-06, -1.1897645890712738e-07, -2.6822088329936378e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.034308433532714844, -3.326993942260742, -3.6835059290751815e-05, -2.193450927734375e-05, -0.0020867586135864258, -0.0001049041748046875, -0.00032079219818115234, -2.515309097361751e-05, -7.987557182786986e-06, -4.172325134277344e-06, -0.10873019695281982, 0.0, -0.756945013999939, -4.649158654501662e-06, -0.03633873164653778, -0.010921478271484375, -2.3841855067985307e-07, -0.08001041412353516, -0.000331878662109375, -1.9073486328125e-06, -6.103515625e-05, 0.0, -0.000171661376953125, -1.9073486328125e-06, -0.1461334228515625, -1.9073486328125e-06, -3.814697265625e-06, -9.918212890625e-05, -0.0001583099365234375, -0.0076885223388671875, 0.0, -0.0050373077392578125, -3.814697265625e-06, -0.001064300537109375, -7.82012939453125e-05, 0.0, -6.866455078125e-05, -0.34551429748535156, -0.0001125335693359375, -0.03319008648395538, -0.5428932309150696, -0.6815447807312012, -0.0063784122467041016, -0.04294312000274658, -0.03256988525390625, -2.372264862060547e-05, -0.02669033780694008, -2.288818359375e-05, -0.004680633544921875, 0.0, -0.00012540766329038888, 0.0, -5.7220458984375e-06, -0.0006008148193359375, -0.0002689361572265625, -7.152555099310121e-07, -4.768370445162873e-07, -0.0001264810562133789, 0.0], "choice_history": [97, 283, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 203, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Destroy", "<EOS>", "Weapon", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", 346, 84, 315, "Opponent", "Minion", "Count", "Is", "Greater", "Than", "<EOS>", "3", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "AcidicSwampOoze", "_type": "Template5", "hole2": [{"hole3": "Destroy", "hole0": "Acidic Swamp Ooze", "_type": "Template15", "hole2": "COMMON", "hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole8": [{"_type": "Template74", "hole1": 3, "hole0": "OpponentMinionCountIsGreaterThan"}], "hole5": "WeaponSelector", "hole1": 2}], "hole1": "MinionCard"}, "score": -6.237110419467228, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(players=BothPlayer(), picker=UserPicker()),\n            OpponentMinionCountIsGreaterThan(3)))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}]}
{"index": 1, "beams": [{"score_history": [-0.0018634796142578125, -0.00049591064453125, -5.125986263010418e-06, -0.0003696010971907526, -4.291534423828125e-06, -3.838422708213329e-05, -9.226799011230469e-05, -1.537799835205078e-05, -0.0001697540283203125, -0.0001220703125, -0.0043239593505859375, -2.288818359375e-05, -1.9073486328125e-06, -3.6954863844584906e-06, 0.0, -5.340576171875e-05, -3.24249267578125e-05, -0.0004291534423828125, -2.09808349609375e-05, -0.004917144775390625, -7.271752110682428e-06, -2.4080276489257812e-05, -8.535385131835938e-05, -0.0028476715087890625, -4.38690185546875e-05, -2.288818359375e-05, -2.0265579223632812e-06, -3.814697265625e-06, -4.00543212890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00012969970703125, -1.9073486328125e-06, -0.001323699951171875, 0.0, -2.288818359375e-05, -8.96453857421875e-05, -6.866455078125e-05, 0.0, -0.000118255615234375, -0.0001811981201171875, -0.0003452301025390625, -5.7220458984375e-06, -0.0001201629638671875, -3.814697265625e-05, -9.5367431640625e-06, -0.00048100948333740234, -1.9073486328125e-05, -0.0021209716796875, -8.7738037109375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -0.00023651123046875, -1.9073486328125e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0056591033935546875, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.1563301086425781e-05, 0.0, -5.14984130859375e-05, -0.00018310546875, -1.1444091796875e-05, -4.0531158447265625e-06, -0.009328842163085938, -0.000110626220703125, -6.4849853515625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.0008336305618286133, 0.0, -0.010908126831054688, -7.43865966796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.006038665771484375, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.0001068115234375, 0.0, -0.027899503707885742, 0.0, -0.0003032684326171875, -0.1095743179321289, -0.004935264587402344, -0.0009403228759765625, -1.9073486328125e-06, -5.841255187988281e-06, -1.1920928244535389e-07, -0.0014307498931884766, -3.62396240234375e-05, -0.0002384185791015625, -2.288818359375e-05, -0.002643585205078125, -3.814697265625e-06, -8.20159912109375e-05, 0.0, -0.0015840530395507812, 0.0, -0.00023663043975830078, 0.0, -0.055609941482543945, -3.0517578125e-05, -0.001495361328125, -1.52587890625e-05, -0.0022974014282226562, -1.9073486328125e-06, -0.0046215057373046875, -5.7220458984375e-06, -5.7220458984375e-06, -6.67572021484375e-05, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -0.0003204345703125, 0.0, -0.0022258758544921875, -1.9073486328125e-06, -0.003292083740234375, -1.9073486328125e-06, -0.023197174072265625, 0.0, -0.0015697479248046875, -3.24249267578125e-05, -0.00018322467803955078, -1.1920928244535389e-07], "choice_history": [97, 285, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Ancestral", " ", "Healing", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 72, 294, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"hole2": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}, "_type": "Template57", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"targets": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "taunt"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole3": "use", "hole0": "AncestralHealing", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -0.300324252689947, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n"}, {"score_history": [-0.0018634796142578125, -0.00049591064453125, -5.125986263010418e-06, -0.0003696010971907526, -4.291534423828125e-06, -3.838422708213329e-05, -9.226799011230469e-05, -1.537799835205078e-05, -0.0001697540283203125, -0.0001220703125, -0.0043239593505859375, -2.288818359375e-05, -1.9073486328125e-06, -3.6954863844584906e-06, 0.0, -5.340576171875e-05, -3.24249267578125e-05, -0.0004291534423828125, -2.09808349609375e-05, -0.004917144775390625, -7.271752110682428e-06, -2.4080276489257812e-05, -8.535385131835938e-05, -0.0028476715087890625, -4.38690185546875e-05, -2.288818359375e-05, -2.0265579223632812e-06, -3.814697265625e-06, -4.00543212890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00012969970703125, -1.9073486328125e-06, -0.001323699951171875, 0.0, -2.288818359375e-05, -8.96453857421875e-05, -6.866455078125e-05, 0.0, -0.000118255615234375, -0.0001811981201171875, -0.0003452301025390625, -5.7220458984375e-06, -0.0001201629638671875, -3.814697265625e-05, -9.5367431640625e-06, -0.00048100948333740234, -1.9073486328125e-05, -0.0021209716796875, -8.7738037109375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -0.00023651123046875, -1.9073486328125e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0056591033935546875, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.1563301086425781e-05, 0.0, -5.14984130859375e-05, -0.00018310546875, -1.1444091796875e-05, -4.0531158447265625e-06, -0.009328842163085938, -0.000110626220703125, -6.4849853515625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.0008336305618286133, 0.0, -0.010908126831054688, -7.43865966796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.006038665771484375, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.0001068115234375, 0.0, -0.027899503707885742, 0.0, -0.0003032684326171875, -0.1095743179321289, -0.004935264587402344, -0.0009403228759765625, -1.9073486328125e-06, -5.841255187988281e-06, -1.1920928244535389e-07, -0.0014307498931884766, -3.62396240234375e-05, -0.0002384185791015625, -2.288818359375e-05, -0.002643585205078125, -3.814697265625e-06, -8.20159912109375e-05, 0.0, -0.0015840530395507812, 0.0, -0.00023663043975830078, 0.0, -3.2347567081451416, 0.0, -0.02506256103515625, -5.7220458984375e-06, -0.0005092620849609375, 0.0, -0.00386810302734375, -5.7220458984375e-06, -5.7220458984375e-06, -5.53131103515625e-05, 0.0, -5.53131103515625e-05, -3.814697265625e-06, -0.0003032684326171875, 0.0, -0.001983642578125, -1.9073486328125e-06, -0.0038213729858398438, -1.9073486328125e-06, -0.02273845672607422, 0.0, -0.001201629638671875, -3.24249267578125e-05, -0.00015461444854736328, -1.1920928244535389e-07], "choice_history": [97, 285, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Ancestral", " ", "Healing", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 72, 294, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"hole2": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "taunt"}, "_type": "Template57", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"targets": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "taunt"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole3": "use", "hole0": "AncestralHealing", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -3.4998729740034236, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.taunt()), self\n            )\n        self.target.taunt = True\n"}, {"score_history": [-0.0018634796142578125, -0.00049591064453125, -5.125986263010418e-06, -0.0003696010971907526, -4.291534423828125e-06, -3.838422708213329e-05, -9.226799011230469e-05, -1.537799835205078e-05, -0.0001697540283203125, -0.0001220703125, -0.0043239593505859375, -2.288818359375e-05, -1.9073486328125e-06, -3.6954863844584906e-06, 0.0, -5.340576171875e-05, -3.24249267578125e-05, -0.0004291534423828125, -2.09808349609375e-05, -0.004917144775390625, -7.271752110682428e-06, -2.4080276489257812e-05, -8.535385131835938e-05, -0.0028476715087890625, -4.38690185546875e-05, -2.288818359375e-05, -2.0265579223632812e-06, -3.814697265625e-06, -4.00543212890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00012969970703125, -1.9073486328125e-06, -0.001323699951171875, 0.0, -2.288818359375e-05, -8.96453857421875e-05, -6.866455078125e-05, 0.0, -0.000118255615234375, -0.0001811981201171875, -0.0003452301025390625, -5.7220458984375e-06, -0.0001201629638671875, -3.814697265625e-05, -9.5367431640625e-06, -0.00048100948333740234, -1.9073486328125e-05, -0.0021209716796875, -8.7738037109375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -0.00023651123046875, -1.9073486328125e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0056591033935546875, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.1563301086425781e-05, 0.0, -5.14984130859375e-05, -0.00018310546875, -1.1444091796875e-05, -4.0531158447265625e-06, -0.009328842163085938, -0.000110626220703125, -6.4849853515625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.0008336305618286133, 0.0, -0.010908126831054688, -7.43865966796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.006038665771484375, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.0001068115234375, 0.0, -4.2174906730651855, 0.0, -7.62939453125e-06, -0.0913991928100586, 0.0, -0.052272796630859375, -2.3841855067985307e-07, -0.0077953338623046875, -5.7220458984375e-06, -5.7220458984375e-06, -0.0013370513916015625, -1.9073486328125e-06, -0.02199554443359375, -2.47955322265625e-05, -0.0001354217529296875, 0.0, -0.000339508056640625, -1.9073486328125e-06, -0.015542984008789062, -1.9073486328125e-06, -0.019346237182617188, 0.0, -0.00154876708984375, -4.00543212890625e-05, -9.930133819580078e-05, -1.1920928244535389e-07], "choice_history": [97, 285, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Ancestral", " ", "Healing", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>", 102, 142, 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"targets": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "taunt"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole3": "use", "hole0": "AncestralHealing", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.4847592626462855, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        self.target.taunt = True\n"}, {"score_history": [-0.0018634796142578125, -0.00049591064453125, -5.125986263010418e-06, -0.0003696010971907526, -4.291534423828125e-06, -3.838422708213329e-05, -9.226799011230469e-05, -1.537799835205078e-05, -0.0001697540283203125, -0.0001220703125, -0.0043239593505859375, -2.288818359375e-05, -1.9073486328125e-06, -3.6954863844584906e-06, 0.0, -5.340576171875e-05, -3.24249267578125e-05, -0.0004291534423828125, -2.09808349609375e-05, -0.004917144775390625, -7.271752110682428e-06, -2.4080276489257812e-05, -8.535385131835938e-05, -0.0028476715087890625, -4.38690185546875e-05, -2.288818359375e-05, -2.0265579223632812e-06, -3.814697265625e-06, -4.00543212890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00012969970703125, -1.9073486328125e-06, -0.001323699951171875, 0.0, -2.288818359375e-05, -8.96453857421875e-05, -6.866455078125e-05, 0.0, -0.000118255615234375, -0.0001811981201171875, -0.0003452301025390625, -5.7220458984375e-06, -0.0001201629638671875, -3.814697265625e-05, -9.5367431640625e-06, -0.00048100948333740234, -1.9073486328125e-05, -0.0021209716796875, -8.7738037109375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -0.00023651123046875, -1.9073486328125e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0056591033935546875, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.1563301086425781e-05, 0.0, -5.14984130859375e-05, -0.00018310546875, -1.1444091796875e-05, -4.0531158447265625e-06, -0.009328842163085938, -0.000110626220703125, -6.4849853515625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.0008336305618286133, 0.0, -0.010908126831054688, -7.43865966796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.006038665771484375, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.0001068115234375, 0.0, -0.027899503707885742, 0.0, -0.0003032684326171875, -0.1095743179321289, -0.004935264587402344, -0.0009403228759765625, -1.9073486328125e-06, -5.841255187988281e-06, -1.1920928244535389e-07, -0.0014307498931884766, -3.62396240234375e-05, -0.0002384185791015625, -2.288818359375e-05, -0.002643585205078125, -3.814697265625e-06, -8.20159912109375e-05, 0.0, -0.0015840530395507812, 0.0, -0.00023663043975830078, 0.0, -0.055609941482543945, -3.0517578125e-05, -0.001495361328125, -1.52587890625e-05, -0.0022974014282226562, -1.9073486328125e-06, -0.0046215057373046875, -5.7220458984375e-06, -5.7220458984375e-06, -6.67572021484375e-05, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -0.0003204345703125, 0.0, -0.0022258758544921875, -1.9073486328125e-06, -0.003292083740234375, -1.9073486328125e-06, -5.100705623626709, 0.0, -0.2901010513305664, -5.14984130859375e-05, -0.00019657611846923828, 0.0], "choice_history": [97, 285, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Ancestral", " ", "Healing", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 72, 294, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"hole2": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}, "_type": "Template57", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"targets": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "divine_shield"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole3": "use", "hole0": "AncestralHealing", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.6663963113676274, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.divine_shield = True\n"}, {"score_history": [-0.0018634796142578125, -0.00049591064453125, -5.125986263010418e-06, -0.0003696010971907526, -4.291534423828125e-06, -3.838422708213329e-05, -9.226799011230469e-05, -1.537799835205078e-05, -0.0001697540283203125, -0.0001220703125, -0.0043239593505859375, -2.288818359375e-05, -1.9073486328125e-06, -3.6954863844584906e-06, 0.0, -5.340576171875e-05, -3.24249267578125e-05, -0.0004291534423828125, -2.09808349609375e-05, -0.004917144775390625, -7.271752110682428e-06, -2.4080276489257812e-05, -8.535385131835938e-05, -0.0028476715087890625, -4.38690185546875e-05, -2.288818359375e-05, -2.0265579223632812e-06, -3.814697265625e-06, -4.00543212890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00012969970703125, -1.9073486328125e-06, -0.001323699951171875, 0.0, -2.288818359375e-05, -8.96453857421875e-05, -6.866455078125e-05, 0.0, -0.000118255615234375, -0.0001811981201171875, -0.0003452301025390625, -5.7220458984375e-06, -0.0001201629638671875, -3.814697265625e-05, -9.5367431640625e-06, -0.00048100948333740234, -1.9073486328125e-05, -0.0021209716796875, -8.7738037109375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -0.00023651123046875, -1.9073486328125e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0056591033935546875, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.1563301086425781e-05, 0.0, -5.14984130859375e-05, -0.00018310546875, -1.1444091796875e-05, -4.0531158447265625e-06, -0.009328842163085938, -0.000110626220703125, -6.4849853515625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.0008336305618286133, 0.0, -0.010908126831054688, -7.43865966796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.006038665771484375, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.0001068115234375, 0.0, -0.027899503707885742, 0.0, -0.0003032684326171875, -2.4994001388549805, -0.0007381439208984375, -0.0002346038818359375, 0.0, -2.47955322265625e-05, 0.0, -0.0006738901138305664, -3.24249267578125e-05, -0.034168533980846405, -1.1563301086425781e-05, -1.1444091796875e-05, -7.82012939453125e-05, -0.003520965576171875, -7.05718994140625e-05, -0.03391456604003906, -5.7220458984375e-06, -3.814697265625e-06, -0.001434326171875, -1.9073486328125e-06, -2.3526341915130615, -9.5367431640625e-05, -0.131256103515625, 0.0, -0.7344200611114502, -2.002716064453125e-05], "choice_history": [97, 285, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Ancestral", " ", "Healing", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "Taunt", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 50, 174, "wrath", "<EOS>", 21, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"hole2": 0, "_type": "Template69", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"targets": [{"_type": "Name", "id": "wrath"}], "value": {"_type": "Name", "id": "self"}, "_type": "Assign"}], "hole3": "use", "hole0": "AncestralHealing", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.876320584560517, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(0), self)\n        wrath = self\n"}, {"score_history": [-0.0018634796142578125, -0.00049591064453125, -5.125986263010418e-06, -0.0003696010971907526, -4.291534423828125e-06, -3.838422708213329e-05, -9.226799011230469e-05, -1.537799835205078e-05, -0.0001697540283203125, -0.0001220703125, -0.0043239593505859375, -2.288818359375e-05, -1.9073486328125e-06, -3.6954863844584906e-06, 0.0, -5.340576171875e-05, -3.24249267578125e-05, -0.0004291534423828125, -2.09808349609375e-05, -0.004917144775390625, -7.271752110682428e-06, -2.4080276489257812e-05, -8.535385131835938e-05, -0.0028476715087890625, -4.38690185546875e-05, -2.288818359375e-05, -2.0265579223632812e-06, -3.814697265625e-06, -4.00543212890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00012969970703125, -1.9073486328125e-06, -0.001323699951171875, 0.0, -2.288818359375e-05, -8.96453857421875e-05, -6.866455078125e-05, 0.0, -0.000118255615234375, -0.0001811981201171875, -0.0003452301025390625, -5.7220458984375e-06, -0.0001201629638671875, -3.814697265625e-05, -9.5367431640625e-06, -0.00048100948333740234, -1.9073486328125e-05, -0.0021209716796875, -8.7738037109375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -0.00023651123046875, -1.9073486328125e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0056591033935546875, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.1563301086425781e-05, 0.0, -5.14984130859375e-05, -0.00018310546875, -1.1444091796875e-05, -4.0531158447265625e-06, -0.009328842163085938, -0.000110626220703125, -6.4849853515625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.0008336305618286133, 0.0, -0.010908126831054688, -7.43865966796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -5.11745548248291, -3.814697265625e-06, -2.47955322265625e-05, -7.62939453125e-06, -0.028677940368652344, -1.1444091796875e-05, -7.82012939453125e-05, 0.0, -0.4560527801513672, 0.0, -0.039938926696777344, -1.9073486328125e-06, -3.24249267578125e-05, -0.21547412872314453, -0.007913589477539062, -0.000972747802734375, -1.9073486328125e-06, -5.841255187988281e-06, -1.1920928244535389e-07, -0.0024143457412719727, -2.47955322265625e-05, -0.0006103515625, -1.52587890625e-05, -0.0042209625244140625, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0013761520385742188, 0.0, -0.0002499818801879883, 0.0, -0.058936238288879395, -3.814697265625e-05, -0.001720428466796875, -1.52587890625e-05, -0.0025091171264648438, -1.9073486328125e-06, -0.004302978515625, -7.62939453125e-06, -5.7220458984375e-06, -5.91278076171875e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -0.0003261566162109375, 0.0, -0.0024356842041015625, -1.9073486328125e-06, -0.0031871795654296875, -1.9073486328125e-06, -0.023293495178222656, 0.0, -0.001552581787109375, -3.24249267578125e-05, -0.00018322467803955078, -1.1920928244535389e-07], "choice_history": [97, 285, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Ancestral", " ", "Healing", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", "heal", "<EOS>", 347, 72, 294, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"hole2": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}, "_type": "Template57", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "taunt"}}, {"targets": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "taunt"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole3": "use", "hole0": "AncestralHealing", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.023372939671148, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.taunt.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n"}, {"score_history": [-0.0018634796142578125, -0.00049591064453125, -5.125986263010418e-06, -0.0003696010971907526, -4.291534423828125e-06, -3.838422708213329e-05, -9.226799011230469e-05, -1.537799835205078e-05, -0.0001697540283203125, -0.0001220703125, -0.0043239593505859375, -2.288818359375e-05, -1.9073486328125e-06, -3.6954863844584906e-06, 0.0, -5.340576171875e-05, -3.24249267578125e-05, -0.0004291534423828125, -2.09808349609375e-05, -0.004917144775390625, -7.271752110682428e-06, -2.4080276489257812e-05, -8.535385131835938e-05, -0.0028476715087890625, -4.38690185546875e-05, -2.288818359375e-05, -2.0265579223632812e-06, -3.814697265625e-06, -4.00543212890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00012969970703125, -1.9073486328125e-06, -0.001323699951171875, 0.0, -2.288818359375e-05, -8.96453857421875e-05, -6.866455078125e-05, 0.0, -0.000118255615234375, -0.0001811981201171875, -0.0003452301025390625, -5.7220458984375e-06, -0.0001201629638671875, -3.814697265625e-05, -9.5367431640625e-06, -0.00048100948333740234, -1.9073486328125e-05, -0.0021209716796875, -8.7738037109375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -0.00023651123046875, -1.9073486328125e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0056591033935546875, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.1563301086425781e-05, 0.0, -5.14984130859375e-05, -0.00018310546875, -1.1444091796875e-05, -4.0531158447265625e-06, -0.009328842163085938, -0.000110626220703125, -6.4849853515625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.0008336305618286133, 0.0, -0.010908126831054688, -7.43865966796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.006038665771484375, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.0001068115234375, 0.0, -0.027899503707885742, 0.0, -0.0003032684326171875, -2.4994001388549805, -0.0007381439208984375, -0.0002346038818359375, 0.0, -2.47955322265625e-05, 0.0, -0.0006738901138305664, -3.24249267578125e-05, -0.034168533980846405, -1.1563301086425781e-05, -1.1444091796875e-05, -7.82012939453125e-05, -0.003520965576171875, -7.05718994140625e-05, -0.03391456604003906, -5.7220458984375e-06, -3.814697265625e-06, -0.001434326171875, -1.9073486328125e-06, -2.9702847003936768, -3.0517578125e-05, -0.32148265838623047, -7.62939453125e-06, -0.5007333755493164, 0.0, -0.0009212493896484375, -1.9073486328125e-06, -0.000453948974609375, 0.0], "choice_history": [97, 285, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Ancestral", " ", "Healing", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "Taunt", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 50, 174, "new_minon", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"hole2": 0, "_type": "Template69", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"targets": [{"_type": "Name", "id": "new_minon"}], "value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Assign"}], "hole3": "use", "hole0": "AncestralHealing", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.451810820842866, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(0), self)\n        new_minon = self.target\n"}, {"score_history": [-0.0018634796142578125, -0.00049591064453125, -5.125986263010418e-06, -0.0003696010971907526, -4.291534423828125e-06, -3.838422708213329e-05, -9.226799011230469e-05, -1.537799835205078e-05, -0.0001697540283203125, -0.0001220703125, -0.0043239593505859375, -2.288818359375e-05, -1.9073486328125e-06, -3.6954863844584906e-06, 0.0, -5.340576171875e-05, -3.24249267578125e-05, -0.0004291534423828125, -2.09808349609375e-05, -0.004917144775390625, -7.271752110682428e-06, -2.4080276489257812e-05, -8.535385131835938e-05, -0.0028476715087890625, -4.38690185546875e-05, -2.288818359375e-05, -2.0265579223632812e-06, -3.814697265625e-06, -4.00543212890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00012969970703125, -1.9073486328125e-06, -0.001323699951171875, 0.0, -2.288818359375e-05, -8.96453857421875e-05, -6.866455078125e-05, 0.0, -0.000118255615234375, -0.0001811981201171875, -0.0003452301025390625, -5.7220458984375e-06, -0.0001201629638671875, -3.814697265625e-05, -9.5367431640625e-06, -0.00048100948333740234, -1.9073486328125e-05, -0.0021209716796875, -8.7738037109375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -0.00023651123046875, -1.9073486328125e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0056591033935546875, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.1563301086425781e-05, 0.0, -5.14984130859375e-05, -0.00018310546875, -1.1444091796875e-05, -4.0531158447265625e-06, -0.009328842163085938, -0.000110626220703125, -6.4849853515625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.0008336305618286133, 0.0, -0.010908126831054688, -7.43865966796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.006038665771484375, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.0001068115234375, 0.0, -0.027899503707885742, 0.0, -0.0003032684326171875, -2.4994001388549805, -0.0007381439208984375, -0.0002346038818359375, 0.0, -2.47955322265625e-05, 0.0, -0.0006738901138305664, -3.24249267578125e-05, -0.034168533980846405, -1.1563301086425781e-05, -1.1444091796875e-05, -7.82012939453125e-05, -0.003520965576171875, -7.05718994140625e-05, -0.03391456604003906, -5.7220458984375e-06, -3.814697265625e-06, -0.001434326171875, -1.9073486328125e-06, -2.62766432762146, -0.0001659393310546875, -0.8433237075805664, -3.4332275390625e-05, -0.12631988525390625, -1.9073486328125e-06, -0.00019073486328125, 0.0, -0.0019207000732421875, -1.9073486328125e-06, -0.000453948974609375, 0.0, -0.2608844041824341, 0.0], "choice_history": [97, 285, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Ancestral", " ", "Healing", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "Taunt", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 50, 174, "draw_player", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"hole2": 0, "_type": "Template69", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"targets": [{"_type": "Name", "id": "draw_player"}], "value": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}, "_type": "Assign"}], "hole3": "use", "hole0": "AncestralHealing", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.518856628681306, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(0), self)\n        draw_player = self.target.calculate_max_health\n"}, {"score_history": [-0.0018634796142578125, -0.00049591064453125, -5.125986263010418e-06, -0.0003696010971907526, -4.291534423828125e-06, -3.838422708213329e-05, -9.226799011230469e-05, -1.537799835205078e-05, -0.0001697540283203125, -0.0001220703125, -0.0043239593505859375, -2.288818359375e-05, -1.9073486328125e-06, -3.6954863844584906e-06, 0.0, -5.340576171875e-05, -3.24249267578125e-05, -0.0004291534423828125, -2.09808349609375e-05, -0.004917144775390625, -7.271752110682428e-06, -2.4080276489257812e-05, -8.535385131835938e-05, -0.0028476715087890625, -4.38690185546875e-05, -2.288818359375e-05, -2.0265579223632812e-06, -3.814697265625e-06, -4.00543212890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00012969970703125, -1.9073486328125e-06, -0.001323699951171875, 0.0, -2.288818359375e-05, -8.96453857421875e-05, -6.866455078125e-05, 0.0, -0.000118255615234375, -0.0001811981201171875, -0.0003452301025390625, -5.7220458984375e-06, -0.0001201629638671875, -3.814697265625e-05, -9.5367431640625e-06, -0.00048100948333740234, -1.9073486328125e-05, -0.0021209716796875, -8.7738037109375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -0.00023651123046875, -1.9073486328125e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0056591033935546875, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.1563301086425781e-05, 0.0, -5.14984130859375e-05, -0.00018310546875, -1.1444091796875e-05, -4.0531158447265625e-06, -0.009328842163085938, -0.000110626220703125, -6.4849853515625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.0008336305618286133, 0.0, -0.010908126831054688, -7.43865966796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.006038665771484375, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.0001068115234375, 0.0, -0.027899503707885742, 0.0, -0.0003032684326171875, -2.4994001388549805, -0.0007381439208984375, -0.0002346038818359375, 0.0, -2.47955322265625e-05, 0.0, -0.0006738901138305664, -3.24249267578125e-05, -0.034168533980846405, -1.1563301086425781e-05, -1.1444091796875e-05, -7.82012939453125e-05, -0.003520965576171875, -7.05718994140625e-05, -0.03391456604003906, -5.7220458984375e-06, -3.814697265625e-06, -0.001434326171875, -1.9073486328125e-06, -1.8588955402374268, -7.62939453125e-06, -0.04251289367675781, -2.6702880859375e-05, -2.024582862854004, -0.012005805969238281], "choice_history": [97, 285, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Ancestral", " ", "Healing", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "Taunt", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 50, 174, "lightwarden", "<EOS>", 38, 325, "Wisps5", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"hole2": 0, "_type": "Template69", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"targets": [{"_type": "Name", "id": "lightwarden"}], "value": {"_type": "Template79", "hole0": "Wisps5"}, "_type": "Assign"}], "hole3": "use", "hole0": "AncestralHealing", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.595926268840913, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(0), self)\n        lightwarden = Wisps5()\n"}, {"score_history": [-0.0018634796142578125, -0.00049591064453125, -5.125986263010418e-06, -0.0003696010971907526, -4.291534423828125e-06, -3.838422708213329e-05, -9.226799011230469e-05, -1.537799835205078e-05, -0.0001697540283203125, -0.0001220703125, -0.0043239593505859375, -2.288818359375e-05, -1.9073486328125e-06, -3.6954863844584906e-06, 0.0, -5.340576171875e-05, -3.24249267578125e-05, -0.0004291534423828125, -2.09808349609375e-05, -0.004917144775390625, -7.271752110682428e-06, -2.4080276489257812e-05, -8.535385131835938e-05, -0.0028476715087890625, -4.38690185546875e-05, -2.288818359375e-05, -2.0265579223632812e-06, -3.814697265625e-06, -4.00543212890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00012969970703125, -1.9073486328125e-06, -0.001323699951171875, 0.0, -2.288818359375e-05, -8.96453857421875e-05, -6.866455078125e-05, 0.0, -0.000118255615234375, -0.0001811981201171875, -0.0003452301025390625, -5.7220458984375e-06, -0.0001201629638671875, -3.814697265625e-05, -9.5367431640625e-06, -0.00048100948333740234, -1.9073486328125e-05, -0.0021209716796875, -8.7738037109375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -0.00023651123046875, -1.9073486328125e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0056591033935546875, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.1563301086425781e-05, 0.0, -5.14984130859375e-05, -0.00018310546875, -1.1444091796875e-05, -4.0531158447265625e-06, -0.009328842163085938, -0.000110626220703125, -6.4849853515625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.0008336305618286133, 0.0, -0.010908126831054688, -7.43865966796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.006038665771484375, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.0001068115234375, 0.0, -0.027899503707885742, 0.0, -0.0003032684326171875, -2.4994001388549805, -0.0007381439208984375, -0.0002346038818359375, 0.0, -2.47955322265625e-05, 0.0, -0.0006738901138305664, -3.24249267578125e-05, -0.034168533980846405, -1.1563301086425781e-05, -1.1444091796875e-05, -7.82012939453125e-05, -0.003520965576171875, -7.05718994140625e-05, -0.03391456604003906, -5.7220458984375e-06, -3.814697265625e-06, -0.001434326171875, -1.9073486328125e-06, -1.8588955402374268, -7.62939453125e-06, -0.04251289367675781, -2.6702880859375e-05, -1.272585391998291, -0.8186870217323303, -0.14103762805461884, -0.000438690185546875], "choice_history": [97, 285, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Ancestral", " ", "Healing", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "Taunt", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 50, 174, "lightwarden", "<EOS>", 38, 325, "Shadow", "Of", "<UNK>", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"hole2": 0, "_type": "Template69", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"targets": [{"_type": "Name", "id": "lightwarden"}], "value": {"_type": "Template79", "hole0": "ShadowOf<UNK>"}, "_type": "Assign"}], "hole3": "use", "hole0": "AncestralHealing", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.7920863319884575, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(0), self)\n        lightwarden = ShadowOf<UNK>()\n"}, {"score_history": [-0.0018634796142578125, -0.00049591064453125, -5.125986263010418e-06, -0.0003696010971907526, -4.291534423828125e-06, -3.838422708213329e-05, -9.226799011230469e-05, -1.537799835205078e-05, -0.0001697540283203125, -0.0001220703125, -0.0043239593505859375, -2.288818359375e-05, -1.9073486328125e-06, -3.6954863844584906e-06, 0.0, -5.340576171875e-05, -3.24249267578125e-05, -0.0004291534423828125, -2.09808349609375e-05, -0.004917144775390625, -7.271752110682428e-06, -2.4080276489257812e-05, -8.535385131835938e-05, -0.0028476715087890625, -4.38690185546875e-05, -2.288818359375e-05, -2.0265579223632812e-06, -3.814697265625e-06, -4.00543212890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00012969970703125, -1.9073486328125e-06, -0.001323699951171875, 0.0, -2.288818359375e-05, -8.96453857421875e-05, -6.866455078125e-05, 0.0, -0.000118255615234375, -0.0001811981201171875, -0.0003452301025390625, -5.7220458984375e-06, -0.0001201629638671875, -3.814697265625e-05, -9.5367431640625e-06, -0.00048100948333740234, -1.9073486328125e-05, -0.0021209716796875, -8.7738037109375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -0.00023651123046875, -1.9073486328125e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0056591033935546875, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.1563301086425781e-05, 0.0, -5.14984130859375e-05, -0.00018310546875, -1.1444091796875e-05, -4.0531158447265625e-06, -0.009328842163085938, -0.000110626220703125, -6.4849853515625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.0008336305618286133, 0.0, -0.010908126831054688, -7.43865966796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.006038665771484375, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.0001068115234375, 0.0, -4.9693427085876465, 0.0, -0.0001220703125, -1.0625371932983398, -0.0001049041748046875, -0.4511790871620178, -1.2040138244628906e-05, -0.000141143798828125, -9.5367431640625e-06, -0.021309852600097656, -5.7220458984375e-05, -0.315673828125, -0.000339508056640625, -0.060962677001953125, -0.0001811981201171875, -0.13955307006835938, -3.814697265625e-06, -0.013391613960266113, 0.0, -0.0007619857788085938, -0.0001049041748046875], "choice_history": [97, 285, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Ancestral", " ", "Healing", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "0", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 0}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "AncestralHealing", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.091154805267934, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(0), self)\n        player.draw()\n"}, {"score_history": [-0.0018634796142578125, -0.00049591064453125, -5.125986263010418e-06, -0.0003696010971907526, -4.291534423828125e-06, -3.838422708213329e-05, -9.226799011230469e-05, -1.537799835205078e-05, -0.0001697540283203125, -0.0001220703125, -0.0043239593505859375, -2.288818359375e-05, -1.9073486328125e-06, -3.6954863844584906e-06, 0.0, -5.340576171875e-05, -3.24249267578125e-05, -0.0004291534423828125, -2.09808349609375e-05, -0.004917144775390625, -7.271752110682428e-06, -2.4080276489257812e-05, -8.535385131835938e-05, -0.0028476715087890625, -4.38690185546875e-05, -2.288818359375e-05, -2.0265579223632812e-06, -3.814697265625e-06, -4.00543212890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00012969970703125, -1.9073486328125e-06, -0.001323699951171875, 0.0, -2.288818359375e-05, -8.96453857421875e-05, -6.866455078125e-05, 0.0, -0.000118255615234375, -0.0001811981201171875, -0.0003452301025390625, -5.7220458984375e-06, -0.0001201629638671875, -3.814697265625e-05, -9.5367431640625e-06, -0.00048100948333740234, -1.9073486328125e-05, -0.0021209716796875, -8.7738037109375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -0.00023651123046875, -1.9073486328125e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0056591033935546875, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.1563301086425781e-05, 0.0, -5.14984130859375e-05, -0.00018310546875, -1.1444091796875e-05, -4.0531158447265625e-06, -0.009328842163085938, -0.000110626220703125, -6.4849853515625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.0008336305618286133, 0.0, -0.010908126831054688, -7.43865966796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.006038665771484375, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.0001068115234375, 0.0, -0.027899503707885742, 0.0, -0.0003032684326171875, -0.1095743179321289, -0.004935264587402344, -0.0009403228759765625, -1.9073486328125e-06, -5.841255187988281e-06, -1.1920928244535389e-07, -0.0014307498931884766, -3.62396240234375e-05, -0.0002384185791015625, -2.288818359375e-05, -0.002643585205078125, -3.814697265625e-06, -8.20159912109375e-05, 0.0, -0.0015840530395507812, 0.0, -0.00023663043975830078, 0.0, -0.055609941482543945, -3.0517578125e-05, -0.001495361328125, -1.52587890625e-05, -0.0022974014282226562, -1.9073486328125e-06, -0.0046215057373046875, -5.7220458984375e-06, -5.7220458984375e-06, -6.67572021484375e-05, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -0.0003204345703125, 0.0, -0.0022258758544921875, -1.9073486328125e-06, -0.003292083740234375, -1.9073486328125e-06, -5.713052749633789, 0.0, -0.2990398406982422, 0.0, -0.8109003305435181, -4.053113570989808e-06], "choice_history": [97, 285, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Ancestral", " ", "Healing", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 72, 294, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", 21, 174, "frog", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"hole2": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}, "_type": "Template57", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"targets": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "card"}], "value": {"_type": "Name", "id": "frog"}, "_type": "Assign"}], "hole3": "use", "hole0": "AncestralHealing", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.098338535867917, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.card = frog\n"}, {"score_history": [-0.0018634796142578125, -0.00049591064453125, -5.125986263010418e-06, -0.0003696010971907526, -4.291534423828125e-06, -3.838422708213329e-05, -9.226799011230469e-05, -1.537799835205078e-05, -0.0001697540283203125, -0.0001220703125, -0.0043239593505859375, -2.288818359375e-05, -1.9073486328125e-06, -3.6954863844584906e-06, 0.0, -5.340576171875e-05, -3.24249267578125e-05, -0.0004291534423828125, -2.09808349609375e-05, -0.004917144775390625, -7.271752110682428e-06, -2.4080276489257812e-05, -8.535385131835938e-05, -0.0028476715087890625, -4.38690185546875e-05, -2.288818359375e-05, -2.0265579223632812e-06, -3.814697265625e-06, -4.00543212890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00012969970703125, -1.9073486328125e-06, -0.001323699951171875, 0.0, -2.288818359375e-05, -8.96453857421875e-05, -6.866455078125e-05, 0.0, -0.000118255615234375, -0.0001811981201171875, -0.0003452301025390625, -5.7220458984375e-06, -0.0001201629638671875, -3.814697265625e-05, -9.5367431640625e-06, -0.00048100948333740234, -1.9073486328125e-05, -0.0021209716796875, -8.7738037109375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -0.00023651123046875, -1.9073486328125e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0056591033935546875, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.1563301086425781e-05, 0.0, -5.14984130859375e-05, -0.00018310546875, -1.1444091796875e-05, -4.0531158447265625e-06, -0.009328842163085938, -0.000110626220703125, -6.4849853515625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.0008336305618286133, 0.0, -0.010908126831054688, -7.43865966796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.006038665771484375, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.0001068115234375, 0.0, -0.027899503707885742, 0.0, -0.0003032684326171875, -0.1095743179321289, -0.004935264587402344, -0.0009403228759765625, -1.9073486328125e-06, -5.841255187988281e-06, -1.1920928244535389e-07, -0.0014307498931884766, -3.62396240234375e-05, -0.0002384185791015625, -2.288818359375e-05, -0.002643585205078125, -3.814697265625e-06, -8.20159912109375e-05, 0.0, -0.0015840530395507812, 0.0, -0.00023663043975830078, 0.0, -0.055609941482543945, -3.0517578125e-05, -0.001495361328125, -1.52587890625e-05, -0.0022974014282226562, -1.9073486328125e-06, -6.465400695800781, -0.000156402587890625, -0.016157150268554688, -1.71661376953125e-05, -0.21693801879882812, -1.9073486328125e-06, -0.3786468505859375, 0.0, -0.000522613525390625, -1.9073486328125e-05], "choice_history": [97, 285, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Ancestral", " ", "Healing", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 72, 294, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"hole2": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}, "_type": "Template57", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "AncestralHealing", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Ancestral Healing"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.342615655506727, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        player.draw()\n"}, {"score_history": [-6.837430953979492, -7.43865966796875e-05, -1.9073486328125e-06, -0.0001678466796875, -9.918212890625e-05, -4.410734163684538e-06, -4.768371127283899e-06, -0.0006641353247687221, -0.0001964569091796875, -5.7220458984375e-06, -5.7220458984375e-06, -0.00021341332467272878, -5.3763389587402344e-05, -1.0371208190917969e-05, -0.000286102294921875, -0.03210258483886719, -0.02621746063232422, -4.649161837733118e-06, -2.3484230041503906e-05, -5.233287811279297e-05, -0.0004558563232421875, -1.7881335224956274e-05, -1.33514404296875e-05, -0.0006542205810546875, -1.9073486328125e-06, -5.5789947509765625e-05, -1.9073486328125e-06, -8.0108642578125e-05, -7.05718994140625e-05, -3.814697265625e-06, -0.00034177303314208984, -1.1444091796875e-05, -0.00035858154296875, -4.76837158203125e-05, -9.5367431640625e-06, 0.0, -0.0001220703125, -1.9073486328125e-06, -0.0001678466796875, -5.7220458984375e-06, -3.0517578125e-05, -1.71661376953125e-05, -0.0024586915969848633, 0.0, -0.00234222412109375, -0.00482177734375, -9.5367431640625e-06, 0.0, -0.0051097869873046875, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -1.0269666910171509, -1.9073486328125e-06, -3.814697265625e-06, -0.0074462890625, 0.0, -0.0033532381057739258, -3.4570680327306036e-06], "choice_history": [96, 173, 358, 105, 152, "Ancestral", "Healing", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Ancestral", " ", "Healing", "<EOS>", "0", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Ancestral Healing", "_type": "Template14", "hole2": "SHAMAN", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 0}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "AncestralHealing"}], "_type": "Module"}, "score": -7.952734519366459, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score_history": [-6.837430953979492, -7.43865966796875e-05, -1.9073486328125e-06, -0.0001678466796875, -9.918212890625e-05, -4.410734163684538e-06, -4.768371127283899e-06, -0.0006641353247687221, -0.0001964569091796875, -5.7220458984375e-06, -5.7220458984375e-06, -0.00021341332467272878, -5.3763389587402344e-05, -1.0371208190917969e-05, -0.000286102294921875, -0.03210258483886719, -0.02621746063232422, -4.649161837733118e-06, -2.3484230041503906e-05, -5.233287811279297e-05, -0.0004558563232421875, -1.7881335224956274e-05, -1.33514404296875e-05, -0.0006542205810546875, -1.9073486328125e-06, -5.5789947509765625e-05, -1.9073486328125e-06, -8.0108642578125e-05, -7.05718994140625e-05, -3.814697265625e-06, -0.00034177303314208984, -1.1444091796875e-05, -0.00035858154296875, -4.76837158203125e-05, -9.5367431640625e-06, 0.0, -0.0001220703125, -1.9073486328125e-06, -0.0001678466796875, -5.7220458984375e-06, -3.0517578125e-05, -1.71661376953125e-05, -0.0024586915969848633, 0.0, -0.00234222412109375, -0.00482177734375, -9.5367431640625e-06, 0.0, -0.0051097869873046875, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.8322998285293579, 0.0, -1.9073486328125e-06, -0.06244087219238281, -5.7220458984375e-06, -0.5568057894706726, -7.843971252441406e-05], "choice_history": [96, 173, 358, 105, 152, "Ancestral", "Healing", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Ancestral", " ", "Healing", "<EOS>", "0", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 52, 179, "Taunt", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Ancestral Healing", "_type": "Template14", "hole2": "SHAMAN", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 0}, {"hole2": [{"n": 0, "_type": "Num"}], "_type": "Template3", "hole1": "increase_health", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "AncestralHealing"}], "_type": "Module"}, "score": -8.366591681366572, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(0)\n"}]}
{"index": 2, "beams": [{"score_history": [-9.5367431640625e-06, -0.004904747009277344, -3.683518662001006e-05, -3.4570634852570947e-06, -0.00010048838157672435, -8.344568414031528e-07, -0.0001142023247666657, -1.3351374946068972e-05, -6.4849853515625e-05, -0.01552581787109375, -6.103515625e-05, -2.264974000354414e-06, -4.637238089344464e-05, -4.768370445162873e-07, -3.814697265625e-06, -2.50339189733495e-06, 0.0, -0.00024640560150146484, -3.814697265625e-06, -0.0003032684326171875, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.0003490447998046875, -6.318092346191406e-06, -2.9802317840221804e-06, -0.009415626525878906, -0.010354995727539062, -2.6702880859375e-05, -2.288818359375e-05, -1.52587890625e-05, -1.52587890625e-05, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -9.655952453613281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1920928244535389e-07, -1.3470649719238281e-05, -1.1920922133867862e-06, -0.0092620849609375, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.009545261971652508, -7.6293927122605965e-06, -0.020424842834472656, -0.05449485778808594, -0.007479667663574219, -0.0030775070190429688, -0.0053863525390625, -0.0005950927734375, 0.0, -0.0024509429931640625, 0.0, -0.007651329040527344, 0.0, -0.005741119384765625, -1.1444091796875e-05, -0.000536321836989373, -4.231926504871808e-05, -0.00113677978515625, -1.9073486328125e-05, -0.0011688459198921919, -0.00010883806680794805, -0.00818562414497137, -0.003300905227661133, -0.676457941532135, -0.0016728639602661133, -0.0017299652099609375, -9.72747802734375e-05, -0.00029754638671875, -1.9073486328125e-06, -0.0008487701416015625, 0.0, -0.0035686492919921875, -1.9073486328125e-06, -0.013004302978515625, -3.4332275390625e-05, -0.0019572817254811525, -0.00015818874817341566, -0.0014171600341796875, -2.47955322265625e-05, -0.0016880023758858442, -0.00013434881111606956, -0.007208344992250204, -0.0031205415725708008, -0.7626868486404419, -8.344648813363165e-05, -0.0009107589721679688, -1.1444091796875e-05, -0.0001201629638671875, -3.814697265625e-06, -0.000598907470703125, 0.0, -0.0022602081298828125, -1.9073486328125e-06, -0.008401870727539062, -2.6702880859375e-05, -0.0016691570635885, -0.00010597628715913743, -0.0013322830200195312, -2.6702880859375e-05, -0.0011817195918411016, -9.822838183026761e-05, -0.00719224801287055, -0.0016090869903564453, -0.781501293182373, -0.00017118453979492188, -0.009320259094238281, -9.5367431640625e-06, -3.814697265625e-06, -9.1552734375e-05, -1.9073486328125e-06, -0.007333993446081877, -8.463837730232626e-06, -0.002689361572265625, -0.0005922317504882812, -0.0005054473876953125, -1.9073486328125e-06, -0.005825042724609375, 0.0, -0.014886260032653809, -1.1920928244535389e-07, -0.006784677505493164, -3.933906555175781e-06, -5.7220458984375e-06, -0.0026073455810546875, 0.0, -0.004566712770611048, -0.00023910524032544345, -0.0013065338134765625, -0.0005817413330078125, -0.00099945068359375, -3.814697265625e-06, -0.027737854048609734, -5.722029527532868e-06, -0.007399797439575195, 0.0, -0.002460479736328125, -0.0002155303955078125, -1.33514404296875e-05, -2.9325463401619345e-05, -4.768370445162873e-07, -0.000576019287109375, -3.814697265625e-06, -0.0002880096435546875, 0.0, -0.0002193450927734375, 0.0, -0.005083322525024414, 0.0, -0.000400543212890625, -0.0012798309326171875, -1.9073486328125e-06, -3.4332275390625e-05, -4.220008850097656e-05, -1.3470649719238281e-05, -5.7220458984375e-06, -0.0002231597900390625, -1.9073486328125e-06, -0.0004425048828125, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00033211708068847656, -1.9073486328125e-06, -0.000164031982421875, -0.0032253265380859375, -5.7220458984375e-06, -0.0004978179931640625, 0.0, -6.866455078125e-05, -0.0005588531494140625, -9.918212890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -4.768370445162873e-07, 0.0, -1.6808508007670753e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -2.300739288330078e-05, -9.536738616588991e-07, -5.14984130859375e-05, -0.00093841552734375, -4.00543212890625e-05, -0.001407623291015625, -0.0001125335693359375, -0.0001277923583984375, -0.000843048095703125, -6.29425048828125e-05, -1.1444091796875e-05, -5.14984130859375e-05, 0.0, -2.0623145246645436e-05, -2.09808349609375e-05, -0.0019036531448364258, 0.0, -4.410743713378906e-06, 0.0, -3.314018249511719e-05, -6.318072337307967e-06, -0.0056304931640625, -2.09808349609375e-05, -0.001148223876953125, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.5881996154785156e-05, -4.374980926513672e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.918212890625e-05, 0.0, -6.4849853515625e-05, 0.0, -0.001361846923828125, 0.0, -1.9073486328125e-05, -0.0003452301025390625, -0.0007495880126953125, -2.86102294921875e-05, -5.53131103515625e-05, -0.000723719596862793, -1.1444091796875e-05], "choice_history": [97, 286, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 19, 169, 348, 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 102, 142, 346, 50, 174, "card", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>", 136, 318, 21, 174, "card", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"elts": [{"_type": "Template76", "hole1": "Huffer", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Misha", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Leokk", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "card"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "<UNK>"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "player"}, {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}], "_type": "Template77", "hole1": "summon", "hole0": {"_type": "Name", "id": "card"}}], "hole3": "use", "hole0": "AnimalCompanion", "_type": "Template5", "hole2": [{"hole2": "HUNTER", "_type": "Template31", "hole1": 3, "hole0": "Animal Companion"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 7, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -2.5917454531045934, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score_history": [-9.5367431640625e-06, -0.004904747009277344, -3.683518662001006e-05, -3.4570634852570947e-06, -0.00010048838157672435, -8.344568414031528e-07, -0.0001142023247666657, -1.3351374946068972e-05, -6.4849853515625e-05, -0.01552581787109375, -6.103515625e-05, -2.264974000354414e-06, -4.637238089344464e-05, -4.768370445162873e-07, -3.814697265625e-06, -2.50339189733495e-06, 0.0, -0.00024640560150146484, -3.814697265625e-06, -0.0003032684326171875, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.0003490447998046875, -6.318092346191406e-06, -2.9802317840221804e-06, -0.009415626525878906, -0.010354995727539062, -2.6702880859375e-05, -2.288818359375e-05, -1.52587890625e-05, -1.52587890625e-05, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -9.655952453613281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1920928244535389e-07, -1.3470649719238281e-05, -1.1920922133867862e-06, -0.0092620849609375, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.009545261971652508, -7.6293927122605965e-06, -0.020424842834472656, -0.05449485778808594, -0.007479667663574219, -0.0030775070190429688, -0.0053863525390625, -0.0005950927734375, 0.0, -0.0024509429931640625, 0.0, -0.007651329040527344, 0.0, -0.005741119384765625, -1.1444091796875e-05, -0.000536321836989373, -4.231926504871808e-05, -0.00113677978515625, -1.9073486328125e-05, -0.0011688459198921919, -0.00010883806680794805, -0.00818562414497137, -0.003300905227661133, -0.676457941532135, -0.0016728639602661133, -0.0017299652099609375, -9.72747802734375e-05, -0.00029754638671875, -1.9073486328125e-06, -0.0008487701416015625, 0.0, -0.0035686492919921875, -1.9073486328125e-06, -0.013004302978515625, -3.4332275390625e-05, -0.0019572817254811525, -0.00015818874817341566, -0.0014171600341796875, -2.47955322265625e-05, -0.0016880023758858442, -0.00013434881111606956, -0.007208344992250204, -0.0031205415725708008, -0.7626868486404419, -8.344648813363165e-05, -0.0009107589721679688, -1.1444091796875e-05, -0.0001201629638671875, -3.814697265625e-06, -0.000598907470703125, 0.0, -0.0022602081298828125, -1.9073486328125e-06, -0.008401870727539062, -2.6702880859375e-05, -0.0016691570635885, -0.00010597628715913743, -0.0013322830200195312, -2.6702880859375e-05, -0.0011817195918411016, -9.822838183026761e-05, -0.00719224801287055, -0.0016090869903564453, -0.8781590461730957, -1.943108145496808e-05, -0.00177001953125, -1.9073486328125e-06, -5.7220458984375e-06, -0.000301361083984375, -1.9073486328125e-06, -0.02547871507704258, -1.0251946150674485e-05, -0.002956390380859375, -0.000949859619140625, -0.0006542205810546875, -1.9073486328125e-06, -0.00519561767578125, 0.0, -0.01719987392425537, -1.1920928244535389e-07, -0.006601810455322266, -3.933906555175781e-06, -5.7220458984375e-06, -0.0030498504638671875, 0.0, -0.004580186679959297, -0.00023147765023168176, -0.00128173828125, -0.0005664825439453125, -0.0010318756103515625, -3.814697265625e-06, -0.02837073616683483, -5.722029527532868e-06, -0.007539510726928711, 0.0, -0.0024585723876953125, -0.000217437744140625, -1.1444091796875e-05, -2.9444672691170126e-05, -4.768370445162873e-07, -0.00057220458984375, -3.814697265625e-06, -0.000286102294921875, 0.0, -0.0002231597900390625, 0.0, -0.0051004886627197266, 0.0, -0.000400543212890625, -0.0012798309326171875, -1.9073486328125e-06, -3.4332275390625e-05, -4.220008850097656e-05, -1.3470649719238281e-05, -5.7220458984375e-06, -0.0002231597900390625, -1.9073486328125e-06, -0.0004405975341796875, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00033211708068847656, -1.9073486328125e-06, -0.000164031982421875, -0.0032253265380859375, -5.7220458984375e-06, -0.0004978179931640625, 0.0, -6.866455078125e-05, -0.0005588531494140625, -9.918212890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -4.768370445162873e-07, 0.0, -1.6808508007670753e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -2.300739288330078e-05, -9.536738616588991e-07, -5.14984130859375e-05, -0.0009365081787109375, -4.00543212890625e-05, -0.0014057159423828125, -0.0001125335693359375, -0.0001277923583984375, -0.0008449554443359375, -6.29425048828125e-05, -1.1444091796875e-05, -5.14984130859375e-05, 0.0, -2.0623145246645436e-05, -2.09808349609375e-05, -0.0019036531448364258, 0.0, -4.410743713378906e-06, 0.0, -3.314018249511719e-05, -6.318072337307967e-06, -0.005631446838378906, -2.09808349609375e-05, -0.001148223876953125, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.5881996154785156e-05, -4.374980926513672e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.918212890625e-05, 0.0, -6.4849853515625e-05, 0.0, -0.001361846923828125, 0.0, -1.9073486328125e-05, -0.0003452301025390625, -0.0007495880126953125, -2.86102294921875e-05, -5.53131103515625e-05, -0.000723719596862793, -1.1444091796875e-05], "choice_history": [97, 286, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 19, 169, 348, 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 102, 142, 346, 50, 174, "card", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>", 136, 318, 21, 174, "card", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"elts": [{"_type": "Template76", "hole1": "Huffer", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Misha", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Misha", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "card"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "<UNK>"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "player"}, {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}], "_type": "Template77", "hole1": "summon", "hole0": {"_type": "Name", "id": "card"}}], "hole3": "use", "hole0": "AnimalCompanion", "_type": "Template5", "hole2": [{"hole2": "HUNTER", "_type": "Template31", "hole1": 3, "hole0": "Animal Companion"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 7, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -2.7025504876201722, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score_history": [-9.5367431640625e-06, -0.004904747009277344, -3.683518662001006e-05, -3.4570634852570947e-06, -0.00010048838157672435, -8.344568414031528e-07, -0.0001142023247666657, -1.3351374946068972e-05, -6.4849853515625e-05, -0.01552581787109375, -6.103515625e-05, -2.264974000354414e-06, -4.637238089344464e-05, -4.768370445162873e-07, -3.814697265625e-06, -2.50339189733495e-06, 0.0, -0.00024640560150146484, -3.814697265625e-06, -0.0003032684326171875, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.0003490447998046875, -6.318092346191406e-06, -2.9802317840221804e-06, -0.009415626525878906, -0.010354995727539062, -2.6702880859375e-05, -2.288818359375e-05, -1.52587890625e-05, -1.52587890625e-05, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -9.655952453613281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1920928244535389e-07, -1.3470649719238281e-05, -1.1920922133867862e-06, -0.0092620849609375, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.009545261971652508, -7.6293927122605965e-06, -0.020424842834472656, -0.05449485778808594, -0.007479667663574219, -0.0030775070190429688, -0.0053863525390625, -0.0005950927734375, 0.0, -0.0024509429931640625, 0.0, -0.007651329040527344, 0.0, -0.005741119384765625, -1.1444091796875e-05, -0.000536321836989373, -4.231926504871808e-05, -0.00113677978515625, -1.9073486328125e-05, -0.0011688459198921919, -0.00010883806680794805, -0.00818562414497137, -0.003300905227661133, -0.676457941532135, -0.0016728639602661133, -0.0017299652099609375, -9.72747802734375e-05, -0.00029754638671875, -1.9073486328125e-06, -0.0008487701416015625, 0.0, -0.0035686492919921875, -1.9073486328125e-06, -0.013004302978515625, -3.4332275390625e-05, -0.0019572817254811525, -0.00015818874817341566, -0.0014171600341796875, -2.47955322265625e-05, -0.0016880023758858442, -0.00013434881111606956, -0.007208344992250204, -0.0031205415725708008, -0.862733006477356, -0.0008759498596191406, -0.0013322830200195312, -5.7220458984375e-06, -0.0002593994140625, -1.33514404296875e-05, -0.00104522705078125, 0.0, -0.004215240478515625, -1.9073486328125e-06, -0.007778167724609375, -3.814697265625e-05, -0.0021136889699846506, -0.00012874527601525187, -0.0013570785522460938, -3.24249267578125e-05, -0.0015995488502085209, -7.891651330282912e-05, -0.008152002468705177, -0.0016127824783325195, -0.800315797328949, -0.0002683401107788086, -0.008176803588867188, -1.1444091796875e-05, -3.814697265625e-06, -7.82012939453125e-05, -1.9073486328125e-06, -0.008141040802001953, -7.867794920457527e-06, -0.0026798248291015625, -0.000583648681640625, -0.00049591064453125, -1.9073486328125e-06, -0.0059986114501953125, 0.0, -0.015110373497009277, -1.1920928244535389e-07, -0.006756305694580078, -3.933906555175781e-06, -5.7220458984375e-06, -0.002468109130859375, 0.0, -0.0046004485338926315, -0.00024053541710600257, -0.0013141632080078125, -0.0005817413330078125, -0.0009822845458984375, -3.814697265625e-06, -0.027523038908839226, -5.722029527532868e-06, -0.007394075393676758, 0.0, -0.00246429443359375, -0.0002155303955078125, -1.33514404296875e-05, -2.9325463401619345e-05, -4.768370445162873e-07, -0.000576019287109375, -3.814697265625e-06, -0.0002899169921875, 0.0, -0.000217437744140625, 0.0, -0.005060434341430664, 0.0, -0.000400543212890625, -0.0012798309326171875, -1.9073486328125e-06, -3.4332275390625e-05, -4.220008850097656e-05, -1.3470649719238281e-05, -5.7220458984375e-06, -0.0002231597900390625, -1.9073486328125e-06, -0.000446319580078125, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00033211708068847656, -1.9073486328125e-06, -0.000164031982421875, -0.003223419189453125, -5.7220458984375e-06, -0.0004978179931640625, 0.0, -6.866455078125e-05, -0.0005588531494140625, -9.918212890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -4.768370445162873e-07, 0.0, -1.6808508007670753e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -2.300739288330078e-05, -9.536738616588991e-07, -5.14984130859375e-05, -0.00093841552734375, -4.00543212890625e-05, -0.001407623291015625, -0.0001125335693359375, -0.0001277923583984375, -0.000843048095703125, -6.29425048828125e-05, -1.1444091796875e-05, -5.14984130859375e-05, 0.0, -2.0623145246645436e-05, -2.09808349609375e-05, -0.0019017457962036133, 0.0, -4.410743713378906e-06, 0.0, -3.314018249511719e-05, -6.318072337307967e-06, -0.0056304931640625, -2.09808349609375e-05, -0.001148223876953125, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.5881996154785156e-05, -4.374980926513672e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.918212890625e-05, 0.0, -6.4849853515625e-05, 0.0, -0.001361846923828125, 0.0, -1.9073486328125e-05, -0.0003452301025390625, -0.0007476806640625, -2.86102294921875e-05, -5.53131103515625e-05, -0.000723719596862793, -1.1444091796875e-05], "choice_history": [97, 286, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 19, 169, 348, 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 102, 142, 346, 50, 174, "card", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>", 136, 318, 21, 174, "card", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"elts": [{"_type": "Template76", "hole1": "Huffer", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Leokk", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Leokk", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "card"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "<UNK>"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "player"}, {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}], "_type": "Template77", "hole1": "summon", "hole0": {"_type": "Name", "id": "card"}}], "hole3": "use", "hole0": "AnimalCompanion", "_type": "Template5", "hole2": [{"hole2": "HUNTER", "_type": "Template31", "hole1": 3, "hole0": "Animal Companion"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 7, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -2.715347308316339, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Leokk(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score_history": [-9.5367431640625e-06, -0.004904747009277344, -3.683518662001006e-05, -3.4570634852570947e-06, -0.00010048838157672435, -8.344568414031528e-07, -0.0001142023247666657, -1.3351374946068972e-05, -6.4849853515625e-05, -0.01552581787109375, -6.103515625e-05, -2.264974000354414e-06, -4.637238089344464e-05, -4.768370445162873e-07, -3.814697265625e-06, -2.50339189733495e-06, 0.0, -0.00024640560150146484, -3.814697265625e-06, -0.0003032684326171875, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.0003490447998046875, -6.318092346191406e-06, -2.9802317840221804e-06, -0.009415626525878906, -0.010354995727539062, -2.6702880859375e-05, -2.288818359375e-05, -1.52587890625e-05, -1.52587890625e-05, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -9.655952453613281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1920928244535389e-07, -1.3470649719238281e-05, -1.1920922133867862e-06, -0.0092620849609375, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.009545261971652508, -7.6293927122605965e-06, -0.020424842834472656, -0.05449485778808594, -0.007479667663574219, -0.0030775070190429688, -0.0053863525390625, -0.0005950927734375, 0.0, -0.0024509429931640625, 0.0, -0.007651329040527344, 0.0, -0.005741119384765625, -1.1444091796875e-05, -0.000536321836989373, -4.231926504871808e-05, -0.00113677978515625, -1.9073486328125e-05, -0.0011688459198921919, -0.00010883806680794805, -0.00818562414497137, -0.003300905227661133, -0.676457941532135, -0.0016728639602661133, -0.0017299652099609375, -9.72747802734375e-05, -0.00029754638671875, -1.9073486328125e-06, -0.0008487701416015625, 0.0, -0.0035686492919921875, -1.9073486328125e-06, -0.013004302978515625, -3.4332275390625e-05, -0.0019572817254811525, -0.00015818874817341566, -0.0014171600341796875, -2.47955322265625e-05, -0.0016880023758858442, -0.00013434881111606956, -0.007208344992250204, -0.0031205415725708008, -0.862733006477356, -0.0008759498596191406, -0.0013322830200195312, -5.7220458984375e-06, -0.0002593994140625, -1.33514404296875e-05, -0.00104522705078125, 0.0, -0.004215240478515625, -1.9073486328125e-06, -0.007778167724609375, -3.814697265625e-05, -0.0021136889699846506, -0.00012874527601525187, -0.0013570785522460938, -3.24249267578125e-05, -0.0015995488502085209, -7.891651330282912e-05, -0.008152002468705177, -0.0016127824783325195, -0.8501166701316833, -2.586840491858311e-05, -0.0009784698486328125, -1.9073486328125e-06, -5.7220458984375e-06, -0.0003414154052734375, -1.9073486328125e-06, -0.025518890470266342, -1.0371154530730564e-05, -0.0029087066650390625, -0.00106048583984375, -0.000682830810546875, -1.9073486328125e-06, -0.005268096923828125, 0.0, -0.018963217735290527, -1.1920928244535389e-07, -0.006462574005126953, -3.933906555175781e-06, -5.7220458984375e-06, -0.00284576416015625, 0.0, -0.004651354625821114, -0.00023314618738368154, -0.0012989044189453125, -0.0005626678466796875, -0.0010051727294921875, -3.814697265625e-06, -0.02834904007613659, -5.602820692729438e-06, -0.007561326026916504, 0.0, -0.00246429443359375, -0.000217437744140625, -1.1444091796875e-05, -2.9444672691170126e-05, -4.768370445162873e-07, -0.0005702972412109375, -3.814697265625e-06, -0.0002880096435546875, 0.0, -0.00022125244140625, 0.0, -0.0050661563873291016, 0.0, -0.000400543212890625, -0.0012798309326171875, -1.9073486328125e-06, -3.4332275390625e-05, -4.220008850097656e-05, -1.3470649719238281e-05, -5.7220458984375e-06, -0.0002231597900390625, -1.9073486328125e-06, -0.0004444122314453125, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00033020973205566406, -1.9073486328125e-06, -0.000164031982421875, -0.0032215118408203125, -5.7220458984375e-06, -0.0004978179931640625, 0.0, -6.866455078125e-05, -0.0005588531494140625, -9.918212890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -4.768370445162873e-07, 0.0, -1.6808508007670753e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -2.300739288330078e-05, -9.536738616588991e-07, -5.14984130859375e-05, -0.0009365081787109375, -4.00543212890625e-05, -0.0014057159423828125, -0.000110626220703125, -0.0001277923583984375, -0.0008449554443359375, -6.29425048828125e-05, -1.1444091796875e-05, -5.14984130859375e-05, 0.0, -2.0623145246645436e-05, -2.09808349609375e-05, -0.0019017457962036133, 0.0, -4.410743713378906e-06, 0.0, -3.314018249511719e-05, -6.318072337307967e-06, -0.005631446838378906, -2.09808349609375e-05, -0.0011491775512695312, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.5881996154785156e-05, -4.374980926513672e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.918212890625e-05, 0.0, -6.4849853515625e-05, 0.0, -0.001361846923828125, 0.0, -1.9073486328125e-05, -0.0003452301025390625, -0.0007495880126953125, -2.86102294921875e-05, -5.53131103515625e-05, -0.000723719596862793, -1.1444091796875e-05], "choice_history": [97, 286, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 19, 169, 348, 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 102, 142, 346, 50, 174, "card", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>", 136, 318, 21, 174, "card", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"elts": [{"_type": "Template76", "hole1": "Huffer", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Leokk", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Misha", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "card"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "<UNK>"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "player"}, {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}], "_type": "Template77", "hole1": "summon", "hole0": {"_type": "Name", "id": "card"}}], "hole3": "use", "hole0": "AnimalCompanion", "_type": "Template5", "hole2": [{"hole2": "HUNTER", "_type": "Template31", "hole1": 3, "hole0": "Animal Companion"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 7, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -2.7804637155037, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Leokk(), hearthbreaker.cards.minions.\n            hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score_history": [-9.5367431640625e-06, -0.004904747009277344, -3.683518662001006e-05, -3.4570634852570947e-06, -0.00010048838157672435, -8.344568414031528e-07, -0.0001142023247666657, -1.3351374946068972e-05, -6.4849853515625e-05, -0.01552581787109375, -6.103515625e-05, -2.264974000354414e-06, -4.637238089344464e-05, -4.768370445162873e-07, -3.814697265625e-06, -2.50339189733495e-06, 0.0, -0.00024640560150146484, -3.814697265625e-06, -0.0003032684326171875, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.0003490447998046875, -6.318092346191406e-06, -2.9802317840221804e-06, -0.009415626525878906, -0.010354995727539062, -2.6702880859375e-05, -2.288818359375e-05, -1.52587890625e-05, -1.52587890625e-05, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -9.655952453613281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1920928244535389e-07, -1.3470649719238281e-05, -1.1920922133867862e-06, -0.0092620849609375, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.009545261971652508, -7.6293927122605965e-06, -0.020424842834472656, -0.05449485778808594, -0.007479667663574219, -0.0030775070190429688, -0.0053863525390625, -0.0005950927734375, 0.0, -0.0024509429931640625, 0.0, -0.007651329040527344, 0.0, -0.005741119384765625, -1.1444091796875e-05, -0.000536321836989373, -4.231926504871808e-05, -0.00113677978515625, -1.9073486328125e-05, -0.0011688459198921919, -0.00010883806680794805, -0.00818562414497137, -0.003300905227661133, -1.37459135055542, -6.914138793945312e-05, -0.0018329620361328125, -1.71661376953125e-05, -0.0002040863037109375, -1.52587890625e-05, -0.0016574859619140625, 0.0, -0.0076274871826171875, -1.9073486328125e-06, -0.0033626556396484375, -2.6702880859375e-05, -0.0018883857410401106, -0.0001329177903244272, -0.0012712478637695312, -3.814697265625e-05, -0.0015939462464302778, -9.906289051286876e-05, -0.007326834835112095, -0.0037871599197387695, -0.8345927596092224, -5.555151074077003e-05, -0.0008764266967773438, -9.5367431640625e-06, -6.866455078125e-05, -3.814697265625e-06, -0.0006313323974609375, 0.0, -0.002277374267578125, -1.9073486328125e-06, -0.008541107177734375, -3.0517578125e-05, -0.0017700090538710356, -0.00010836060391739011, -0.0012731552124023438, -2.86102294921875e-05, -0.0012308339355513453, -9.310239693149924e-05, -0.007771243806928396, -0.001291513442993164, -0.7903211712837219, -0.0001252889633178711, -0.009164810180664062, -1.1444091796875e-05, -3.814697265625e-06, -0.0001087188720703125, -1.9073486328125e-06, -0.00740015460178256, -8.225420970120467e-06, -0.002857208251953125, -0.00054931640625, -0.0004901885986328125, -1.9073486328125e-06, -0.0059337615966796875, 0.0, -0.01513516902923584, -1.1920928244535389e-07, -0.006798148155212402, -3.933906555175781e-06, -5.7220458984375e-06, -0.002513885498046875, 0.0, -0.0046788910403847694, -0.00024089295766316354, -0.00130462646484375, -0.000583648681640625, -0.00099945068359375, -3.814697265625e-06, -0.02767789177596569, -5.722029527532868e-06, -0.007383584976196289, 0.0, -0.0024623870849609375, -0.0002155303955078125, -1.33514404296875e-05, -2.9325463401619345e-05, -4.768370445162873e-07, -0.0005779266357421875, -3.814697265625e-06, -0.0002880096435546875, 0.0, -0.0002193450927734375, 0.0, -0.005083322525024414, 0.0, -0.000400543212890625, -0.0012798309326171875, -1.9073486328125e-06, -3.4332275390625e-05, -4.220008850097656e-05, -1.3470649719238281e-05, -5.7220458984375e-06, -0.0002231597900390625, -1.9073486328125e-06, -0.000438690185546875, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00033211708068847656, -1.9073486328125e-06, -0.000164031982421875, -0.00322723388671875, -5.7220458984375e-06, -0.000499725341796875, 0.0, -6.866455078125e-05, -0.0005588531494140625, -9.918212890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -4.768370445162873e-07, 0.0, -1.6808508007670753e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -2.300739288330078e-05, -9.536738616588991e-07, -5.14984130859375e-05, -0.0009365081787109375, -4.00543212890625e-05, -0.001399993896484375, -0.000110626220703125, -0.0001277923583984375, -0.00084686279296875, -6.29425048828125e-05, -1.1444091796875e-05, -5.14984130859375e-05, 0.0, -2.0623145246645436e-05, -2.09808349609375e-05, -0.0018998384475708008, 0.0, -4.410743713378906e-06, 0.0, -3.314018249511719e-05, -6.318072337307967e-06, -0.005634307861328125, -2.09808349609375e-05, -0.0011491775512695312, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.5881996154785156e-05, -4.374980926513672e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.918212890625e-05, 0.0, -6.4849853515625e-05, 0.0, -0.001361846923828125, 0.0, -1.9073486328125e-05, -0.0003452301025390625, -0.0007476806640625, -2.86102294921875e-05, -5.53131103515625e-05, -0.000723719596862793, -1.1444091796875e-05], "choice_history": [97, 286, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 19, 169, 348, 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 102, 142, 346, 50, 174, "card", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>", 136, 318, 21, 174, "card", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"elts": [{"_type": "Template76", "hole1": "Leokk", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Misha", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Leokk", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "card"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "<UNK>"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "player"}, {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}], "_type": "Template77", "hole1": "summon", "hole0": {"_type": "Name", "id": "card"}}], "hole3": "use", "hole0": "AnimalCompanion", "_type": "Template5", "hole2": [{"hole2": "HUNTER", "_type": "Template31", "hole1": 3, "hole0": "Animal Companion"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 7, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -3.365323444859385, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Leokk(), hearthbreaker.\n            cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score_history": [-9.5367431640625e-06, -0.004904747009277344, -3.683518662001006e-05, -3.4570634852570947e-06, -0.00010048838157672435, -8.344568414031528e-07, -0.0001142023247666657, -1.3351374946068972e-05, -6.4849853515625e-05, -0.01552581787109375, -6.103515625e-05, -2.264974000354414e-06, -4.637238089344464e-05, -4.768370445162873e-07, -3.814697265625e-06, -2.50339189733495e-06, 0.0, -0.00024640560150146484, -3.814697265625e-06, -0.0003032684326171875, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.0003490447998046875, -6.318092346191406e-06, -2.9802317840221804e-06, -0.009415626525878906, -0.010354995727539062, -2.6702880859375e-05, -2.288818359375e-05, -1.52587890625e-05, -1.52587890625e-05, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -9.655952453613281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1920928244535389e-07, -1.3470649719238281e-05, -1.1920922133867862e-06, -0.0092620849609375, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.009545261971652508, -7.6293927122605965e-06, -0.020424842834472656, -0.05449485778808594, -0.007479667663574219, -0.0030775070190429688, -0.0053863525390625, -0.0005950927734375, 0.0, -0.0024509429931640625, 0.0, -0.007651329040527344, 0.0, -0.005741119384765625, -1.1444091796875e-05, -0.000536321836989373, -4.231926504871808e-05, -0.00113677978515625, -1.9073486328125e-05, -0.0011688459198921919, -0.00010883806680794805, -0.00818562414497137, -0.003300905227661133, -1.37459135055542, -6.914138793945312e-05, -0.0018329620361328125, -1.71661376953125e-05, -0.0002040863037109375, -1.52587890625e-05, -0.0016574859619140625, 0.0, -0.0076274871826171875, -1.9073486328125e-06, -0.0033626556396484375, -2.6702880859375e-05, -0.0018883857410401106, -0.0001329177903244272, -0.0012712478637695312, -3.814697265625e-05, -0.0015939462464302778, -9.906289051286876e-05, -0.007326834835112095, -0.0037871599197387695, -0.8118152022361755, -0.0008487701416015625, -0.0015544891357421875, -5.7220458984375e-06, -0.000186920166015625, -1.71661376953125e-05, -0.001132965087890625, 0.0, -0.004451751708984375, -1.9073486328125e-06, -0.0074214935302734375, -3.814697265625e-05, -0.0021259677596390247, -0.00011777813779190183, -0.0013332366943359375, -3.24249267578125e-05, -0.0015076383715495467, -7.629391620866954e-05, -0.009027829393744469, -0.0012276172637939453, -0.8134744167327881, -0.0002092123031616211, -0.008162498474121094, -1.33514404296875e-05, -3.814697265625e-06, -8.96453857421875e-05, -1.9073486328125e-06, -0.008028507232666016, -7.867794920457527e-06, -0.0028057098388671875, -0.0005474090576171875, -0.00048065185546875, -1.9073486328125e-06, -0.006076812744140625, 0.0, -0.015270590782165527, -1.1920928244535389e-07, -0.006787896156311035, -3.933906555175781e-06, -5.7220458984375e-06, -0.002391815185546875, 0.0, -0.004696175456047058, -0.0002422039397060871, -0.001312255859375, -0.000583648681640625, -0.00098419189453125, -3.814697265625e-06, -0.0274734478443861, -5.722029527532868e-06, -0.007378816604614258, 0.0, -0.0024662017822265625, -0.0002155303955078125, -1.33514404296875e-05, -2.9325463401619345e-05, -4.768370445162873e-07, -0.0005779266357421875, -3.814697265625e-06, -0.0002899169921875, 0.0, -0.000217437744140625, 0.0, -0.0050661563873291016, 0.0, -0.000400543212890625, -0.0012798309326171875, -1.9073486328125e-06, -3.4332275390625e-05, -4.220008850097656e-05, -1.3470649719238281e-05, -5.7220458984375e-06, -0.0002231597900390625, -1.9073486328125e-06, -0.0004405975341796875, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00033211708068847656, -1.9073486328125e-06, -0.000164031982421875, -0.0032253265380859375, -5.7220458984375e-06, -0.0004978179931640625, 0.0, -6.866455078125e-05, -0.000560760498046875, -9.918212890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -4.768370445162873e-07, 0.0, -1.6808508007670753e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -2.300739288330078e-05, -9.536738616588991e-07, -5.14984130859375e-05, -0.0009365081787109375, -4.00543212890625e-05, -0.001399993896484375, -0.000110626220703125, -0.0001277923583984375, -0.00084686279296875, -6.29425048828125e-05, -1.1444091796875e-05, -5.14984130859375e-05, 0.0, -2.0623145246645436e-05, -2.09808349609375e-05, -0.0018979310989379883, 0.0, -4.410743713378906e-06, 0.0, -3.314018249511719e-05, -6.318072337307967e-06, -0.005633354187011719, -2.09808349609375e-05, -0.0011491775512695312, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.5881996154785156e-05, -4.374980926513672e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.918212890625e-05, 0.0, -6.4849853515625e-05, 0.0, -0.001361846923828125, 0.0, -1.9073486328125e-05, -0.0003452301025390625, -0.0007476806640625, -2.86102294921875e-05, -5.53131103515625e-05, -0.000723719596862793, -1.1444091796875e-05], "choice_history": [97, 286, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 19, 169, 348, 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 102, 142, 346, 50, 174, "card", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>", 136, 318, 21, 174, "card", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"elts": [{"_type": "Template76", "hole1": "Leokk", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Leokk", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Leokk", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "card"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "<UNK>"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "player"}, {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}], "_type": "Template77", "hole1": "summon", "hole0": {"_type": "Name", "id": "card"}}], "hole3": "use", "hole0": "AnimalCompanion", "_type": "Template5", "hole2": [{"hole2": "HUNTER", "_type": "Template31", "hole1": 3, "hole0": "Animal Companion"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 7, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -3.3703053798454476, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Leokk(), hearthbreaker.\n            cards.minions.hunter.Leokk(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score_history": [-9.5367431640625e-06, -0.004904747009277344, -3.683518662001006e-05, -3.4570634852570947e-06, -0.00010048838157672435, -8.344568414031528e-07, -0.0001142023247666657, -1.3351374946068972e-05, -6.4849853515625e-05, -0.01552581787109375, -6.103515625e-05, -2.264974000354414e-06, -4.637238089344464e-05, -4.768370445162873e-07, -3.814697265625e-06, -2.50339189733495e-06, 0.0, -0.00024640560150146484, -3.814697265625e-06, -0.0003032684326171875, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.0003490447998046875, -6.318092346191406e-06, -2.9802317840221804e-06, -0.009415626525878906, -0.010354995727539062, -2.6702880859375e-05, -2.288818359375e-05, -1.52587890625e-05, -1.52587890625e-05, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -9.655952453613281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1920928244535389e-07, -1.3470649719238281e-05, -1.1920922133867862e-06, -0.0092620849609375, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.009545261971652508, -7.6293927122605965e-06, -0.020424842834472656, -0.05449485778808594, -0.007479667663574219, -0.0030775070190429688, -0.0053863525390625, -0.0005950927734375, 0.0, -0.0024509429931640625, 0.0, -0.007651329040527344, 0.0, -0.005741119384765625, -1.1444091796875e-05, -0.000536321836989373, -4.231926504871808e-05, -0.00113677978515625, -1.9073486328125e-05, -0.0011688459198921919, -0.00010883806680794805, -0.00818562414497137, -0.003300905227661133, -1.37459135055542, -6.914138793945312e-05, -0.0018329620361328125, -1.71661376953125e-05, -0.0002040863037109375, -1.52587890625e-05, -0.0016574859619140625, 0.0, -0.0076274871826171875, -1.9073486328125e-06, -0.0033626556396484375, -2.6702880859375e-05, -0.0018883857410401106, -0.0001329177903244272, -0.0012712478637695312, -3.814697265625e-05, -0.0015939462464302778, -9.906289051286876e-05, -0.007326834835112095, -0.0037871599197387695, -0.8118152022361755, -0.0008487701416015625, -0.0015544891357421875, -5.7220458984375e-06, -0.000186920166015625, -1.71661376953125e-05, -0.001132965087890625, 0.0, -0.004451751708984375, -1.9073486328125e-06, -0.0074214935302734375, -3.814697265625e-05, -0.0021259677596390247, -0.00011777813779190183, -0.0013332366943359375, -3.24249267578125e-05, -0.0015076383715495467, -7.629391620866954e-05, -0.009027829393744469, -0.0012276172637939453, -0.8414199352264404, -2.4080263756331988e-05, -0.000965118408203125, -1.9073486328125e-06, -5.7220458984375e-06, -0.000377655029296875, -1.9073486328125e-06, -0.0269165001809597, -1.0371154530730564e-05, -0.0030498504638671875, -0.000980377197265625, -0.00066375732421875, -1.9073486328125e-06, -0.005329132080078125, 0.0, -0.019513487815856934, -1.1920928244535389e-07, -0.006439685821533203, -3.933906555175781e-06, -5.7220458984375e-06, -0.002777099609375, 0.0, -0.004785587079823017, -0.00023445718397852033, -0.001293182373046875, -0.0005626678466796875, -0.001007080078125, -3.814697265625e-06, -0.028347251936793327, -5.602820692729438e-06, -0.007558465003967285, 0.0, -0.00246429443359375, -0.000217437744140625, -1.1444091796875e-05, -2.9444672691170126e-05, -4.768370445162873e-07, -0.00057220458984375, -3.814697265625e-06, -0.0002880096435546875, 0.0, -0.00022125244140625, 0.0, -0.0050699710845947266, 0.0, -0.000400543212890625, -0.0012798309326171875, -1.9073486328125e-06, -3.4332275390625e-05, -4.220008850097656e-05, -1.3470649719238281e-05, -5.7220458984375e-06, -0.0002231597900390625, -1.9073486328125e-06, -0.0004405975341796875, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00033211708068847656, -1.9073486328125e-06, -0.000164031982421875, -0.0032253265380859375, -5.7220458984375e-06, -0.0004978179931640625, 0.0, -6.866455078125e-05, -0.0005588531494140625, -9.918212890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -4.768370445162873e-07, 0.0, -1.6808508007670753e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -2.300739288330078e-05, -9.536738616588991e-07, -5.14984130859375e-05, -0.000934600830078125, -4.00543212890625e-05, -0.0013980865478515625, -0.000110626220703125, -0.0001277923583984375, -0.0008487701416015625, -6.29425048828125e-05, -1.1444091796875e-05, -5.14984130859375e-05, 0.0, -2.0623145246645436e-05, -2.09808349609375e-05, -0.0018979310989379883, 0.0, -4.410743713378906e-06, 0.0, -3.314018249511719e-05, -6.318072337307967e-06, -0.005635261535644531, -2.09808349609375e-05, -0.0011491775512695312, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.5881996154785156e-05, -4.374980926513672e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.918212890625e-05, 0.0, -6.4849853515625e-05, 0.0, -0.001361846923828125, 0.0, -1.9073486328125e-05, -0.0003452301025390625, -0.0007476806640625, -2.86102294921875e-05, -5.53131103515625e-05, -0.000723719596862793, -1.1444091796875e-05], "choice_history": [97, 286, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 19, 169, 348, 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 102, 142, 346, 50, 174, "card", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>", 136, 318, 21, 174, "card", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"elts": [{"_type": "Template76", "hole1": "Leokk", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Leokk", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Misha", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "card"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "<UNK>"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "player"}, {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}], "_type": "Template77", "hole1": "summon", "hole0": {"_type": "Name", "id": "card"}}], "hole3": "use", "hole0": "AnimalCompanion", "_type": "Template5", "hole2": [{"hole2": "HUNTER", "_type": "Template31", "hole1": 3, "hole0": "Animal Companion"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 7, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -3.4155439966594514, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Leokk(), hearthbreaker.\n            cards.minions.hunter.Leokk(), hearthbreaker.cards.minions.\n            hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score_history": [-9.5367431640625e-06, -0.004904747009277344, -3.683518662001006e-05, -3.4570634852570947e-06, -0.00010048838157672435, -8.344568414031528e-07, -0.0001142023247666657, -1.3351374946068972e-05, -6.4849853515625e-05, -0.01552581787109375, -6.103515625e-05, -2.264974000354414e-06, -4.637238089344464e-05, -4.768370445162873e-07, -3.814697265625e-06, -2.50339189733495e-06, 0.0, -0.00024640560150146484, -3.814697265625e-06, -0.0003032684326171875, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.0003490447998046875, -6.318092346191406e-06, -2.9802317840221804e-06, -0.009415626525878906, -0.010354995727539062, -2.6702880859375e-05, -2.288818359375e-05, -1.52587890625e-05, -1.52587890625e-05, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -9.655952453613281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1920928244535389e-07, -1.3470649719238281e-05, -1.1920922133867862e-06, -0.0092620849609375, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.009545261971652508, -7.6293927122605965e-06, -0.020424842834472656, -0.05449485778808594, -0.007479667663574219, -0.0030775070190429688, -0.0053863525390625, -0.0005950927734375, 0.0, -0.0024509429931640625, 0.0, -0.007651329040527344, 0.0, -0.005741119384765625, -1.1444091796875e-05, -0.000536321836989373, -4.231926504871808e-05, -0.00113677978515625, -1.9073486328125e-05, -0.0011688459198921919, -0.00010883806680794805, -0.00818562414497137, -0.003300905227661133, -1.37459135055542, -6.914138793945312e-05, -0.0018329620361328125, -1.71661376953125e-05, -0.0002040863037109375, -1.52587890625e-05, -0.0016574859619140625, 0.0, -0.0076274871826171875, -1.9073486328125e-06, -0.0033626556396484375, -2.6702880859375e-05, -0.0018883857410401106, -0.0001329177903244272, -0.0012712478637695312, -3.814697265625e-05, -0.0015939462464302778, -9.906289051286876e-05, -0.007326834835112095, -0.0037871599197387695, -0.8345927596092224, -5.555151074077003e-05, -0.0008764266967773438, -9.5367431640625e-06, -6.866455078125e-05, -3.814697265625e-06, -0.0006313323974609375, 0.0, -0.002277374267578125, -1.9073486328125e-06, -0.008541107177734375, -3.0517578125e-05, -0.0017700090538710356, -0.00010836060391739011, -0.0012731552124023438, -2.86102294921875e-05, -0.0012308339355513453, -9.310239693149924e-05, -0.007771243806928396, -0.001291513442993164, -0.8633125424385071, -1.7046899301931262e-05, -0.0016803741455078125, -1.9073486328125e-06, -7.62939453125e-06, -0.0003204345703125, -1.9073486328125e-06, -0.030623430386185646, -1.0490362910786644e-05, -0.003040313720703125, -0.0008935928344726562, -0.000640869140625, -1.9073486328125e-06, -0.0052318572998046875, 0.0, -0.017667174339294434, -1.1920928244535389e-07, -0.006577968597412109, -3.933906555175781e-06, -5.7220458984375e-06, -0.0029735565185546875, 0.0, -0.004733373410999775, -0.00023314618738368154, -0.001277923583984375, -0.000568389892578125, -0.0010356903076171875, -3.814697265625e-06, -0.02835666947066784, -5.722029527532868e-06, -0.0075299739837646484, 0.0, -0.0024585723876953125, -0.000217437744140625, -1.1444091796875e-05, -2.9444672691170126e-05, -4.768370445162873e-07, -0.0005741119384765625, -3.814697265625e-06, -0.000286102294921875, 0.0, -0.00022125244140625, 0.0, -0.0051004886627197266, 0.0, -0.000400543212890625, -0.0012798309326171875, -1.9073486328125e-06, -3.4332275390625e-05, -4.220008850097656e-05, -1.3470649719238281e-05, -5.7220458984375e-06, -0.0002231597900390625, -1.9073486328125e-06, -0.000438690185546875, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00033211708068847656, -1.9073486328125e-06, -0.000164031982421875, -0.00322723388671875, -5.7220458984375e-06, -0.000499725341796875, 0.0, -6.866455078125e-05, -0.0005588531494140625, -9.918212890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -4.768370445162873e-07, 0.0, -1.6808508007670753e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -2.300739288330078e-05, -9.536738616588991e-07, -5.14984130859375e-05, -0.000934600830078125, -4.00543212890625e-05, -0.001399993896484375, -0.000110626220703125, -0.0001277923583984375, -0.0008487701416015625, -6.29425048828125e-05, -1.1444091796875e-05, -5.14984130859375e-05, 0.0, -2.0623145246645436e-05, -2.09808349609375e-05, -0.0018979310989379883, 0.0, -4.410743713378906e-06, 0.0, -3.314018249511719e-05, -6.318072337307967e-06, -0.005634307861328125, -2.09808349609375e-05, -0.0011491775512695312, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.5881996154785156e-05, -4.374980926513672e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.918212890625e-05, 0.0, -6.4849853515625e-05, 0.0, -0.001361846923828125, 0.0, -1.9073486328125e-05, -0.0003452301025390625, -0.0007495880126953125, -2.86102294921875e-05, -5.53131103515625e-05, -0.000723719596862793, -1.1444091796875e-05], "choice_history": [97, 286, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 19, 169, 348, 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 102, 142, 346, 50, 174, "card", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>", 136, 318, 21, 174, "card", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"elts": [{"_type": "Template76", "hole1": "Leokk", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Misha", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Misha", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "card"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "<UNK>"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "player"}, {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}], "_type": "Template77", "hole1": "summon", "hole0": {"_type": "Name", "id": "card"}}], "hole3": "use", "hole0": "AnimalCompanion", "_type": "Template5", "hole2": [{"hole2": "HUNTER", "_type": "Template31", "hole1": 3, "hole0": "Animal Companion"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 7, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -3.4577771634177026, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Leokk(), hearthbreaker.\n            cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score_history": [-9.5367431640625e-06, -0.004904747009277344, -3.683518662001006e-05, -3.4570634852570947e-06, -0.00010048838157672435, -8.344568414031528e-07, -0.0001142023247666657, -1.3351374946068972e-05, -6.4849853515625e-05, -0.01552581787109375, -6.103515625e-05, -2.264974000354414e-06, -4.637238089344464e-05, -4.768370445162873e-07, -3.814697265625e-06, -2.50339189733495e-06, 0.0, -0.00024640560150146484, -3.814697265625e-06, -0.0003032684326171875, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.0003490447998046875, -6.318092346191406e-06, -2.9802317840221804e-06, -0.009415626525878906, -0.010354995727539062, -2.6702880859375e-05, -2.288818359375e-05, -1.52587890625e-05, -1.52587890625e-05, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -9.655952453613281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1920928244535389e-07, -1.3470649719238281e-05, -1.1920922133867862e-06, -0.0092620849609375, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.009545261971652508, -7.6293927122605965e-06, -0.020424842834472656, -0.05449485778808594, -0.007479667663574219, -0.0030775070190429688, -0.0053863525390625, -0.0005950927734375, 0.0, -0.0024509429931640625, 0.0, -0.007651329040527344, 0.0, -0.005741119384765625, -1.1444091796875e-05, -0.000536321836989373, -4.231926504871808e-05, -0.00113677978515625, -1.9073486328125e-05, -0.0011688459198921919, -0.00010883806680794805, -0.00818562414497137, -0.003300905227661133, -1.784243106842041, -1.4185829968482722e-05, -0.0011501312255859375, -2.47955322265625e-05, -0.0001392364501953125, -5.7220458984375e-06, -0.0005474090576171875, 0.0, -0.00400543212890625, -1.9073486328125e-06, -0.003814697265625, -1.9073486328125e-05, -0.001487363246269524, -0.00010514192399568856, -0.0013971328735351562, -2.86102294921875e-05, -0.0010538077913224697, -8.463854464935139e-05, -0.007596010807901621, -0.0024968385696411133, -0.7988914251327515, -0.0009379386901855469, -0.00177764892578125, -7.62939453125e-06, -0.0002765655517578125, -1.71661376953125e-05, -0.00162506103515625, 0.0, -0.00498199462890625, -1.9073486328125e-06, -0.00762176513671875, -3.0517578125e-05, -0.002106177620589733, -0.00010824146011145785, -0.0013208389282226562, -3.24249267578125e-05, -0.0013822299661114812, -6.484982441179454e-05, -0.01254973653703928, -0.0011827945709228516, -0.8237423896789551, -0.00020194053649902344, -0.007977485656738281, -1.33514404296875e-05, -3.814697265625e-06, -0.0001010894775390625, -1.9073486328125e-06, -0.008056163787841797, -7.867794920457527e-06, -0.0028476715087890625, -0.00049591064453125, -0.0004634857177734375, -1.9073486328125e-06, -0.0062007904052734375, 0.0, -0.01524198055267334, -1.1920928244535389e-07, -0.006805062294006348, -3.933906555175781e-06, -5.7220458984375e-06, -0.0023956298828125, 0.0, -0.004654570482671261, -0.00024148885859176517, -0.0013141632080078125, -0.0005855560302734375, -0.0009822845458984375, -3.814697265625e-06, -0.027356265112757683, -5.722029527532868e-06, -0.0073511600494384766, 0.0, -0.0024662017822265625, -0.0002155303955078125, -1.33514404296875e-05, -2.9325463401619345e-05, -4.768370445162873e-07, -0.0005779266357421875, -3.814697265625e-06, -0.0002899169921875, 0.0, -0.0002193450927734375, 0.0, -0.0050737857818603516, 0.0, -0.000400543212890625, -0.00128173828125, -1.9073486328125e-06, -3.4332275390625e-05, -4.410743713378906e-05, -1.3470649719238281e-05, -5.7220458984375e-06, -0.0002231597900390625, -1.9073486328125e-06, -0.0004405975341796875, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00033211708068847656, -1.9073486328125e-06, -0.000164031982421875, -0.00322723388671875, -5.7220458984375e-06, -0.0004978179931640625, 0.0, -6.866455078125e-05, -0.0005588531494140625, -9.918212890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -4.768370445162873e-07, 0.0, -1.6808508007670753e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -2.300739288330078e-05, -9.536738616588991e-07, -5.14984130859375e-05, -0.0009365081787109375, -4.00543212890625e-05, -0.0013980865478515625, -0.000110626220703125, -0.0001277923583984375, -0.00084686279296875, -6.29425048828125e-05, -1.1444091796875e-05, -5.14984130859375e-05, 0.0, -2.0623145246645436e-05, -2.09808349609375e-05, -0.0018960237503051758, 0.0, -4.410743713378906e-06, 0.0, -3.314018249511719e-05, -6.318072337307967e-06, -0.005633354187011719, -2.09808349609375e-05, -0.0011491775512695312, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.5881996154785156e-05, -4.374980926513672e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.918212890625e-05, 0.0, -6.4849853515625e-05, 0.0, -0.001361846923828125, 0.0, -1.9073486328125e-05, -0.0003452301025390625, -0.0007476806640625, -2.86102294921875e-05, -5.53131103515625e-05, -0.000723719596862793, -1.1444091796875e-05], "choice_history": [97, 286, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 19, 169, 348, 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 102, 142, 346, 50, 174, "card", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>", 136, 318, 21, 174, "card", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"elts": [{"_type": "Template76", "hole1": "Misha", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Leokk", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Leokk", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "card"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "<UNK>"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "player"}, {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}], "_type": "Template77", "hole1": "summon", "hole0": {"_type": "Name", "id": "card"}}], "hole3": "use", "hole0": "AnimalCompanion", "_type": "Template5", "hole2": [{"hole2": "HUNTER", "_type": "Template31", "hole1": 3, "hole0": "Animal Companion"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 7, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -3.774999026126423, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Leokk(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score_history": [-9.5367431640625e-06, -0.004904747009277344, -3.683518662001006e-05, -3.4570634852570947e-06, -0.00010048838157672435, -8.344568414031528e-07, -0.0001142023247666657, -1.3351374946068972e-05, -6.4849853515625e-05, -0.01552581787109375, -6.103515625e-05, -2.264974000354414e-06, -4.637238089344464e-05, -4.768370445162873e-07, -3.814697265625e-06, -2.50339189733495e-06, 0.0, -0.00024640560150146484, -3.814697265625e-06, -0.0003032684326171875, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.0003490447998046875, -6.318092346191406e-06, -2.9802317840221804e-06, -0.009415626525878906, -0.010354995727539062, -2.6702880859375e-05, -2.288818359375e-05, -1.52587890625e-05, -1.52587890625e-05, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -9.655952453613281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1920928244535389e-07, -1.3470649719238281e-05, -1.1920922133867862e-06, -0.0092620849609375, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.009545261971652508, -7.6293927122605965e-06, -0.020424842834472656, -0.05449485778808594, -0.007479667663574219, -0.0030775070190429688, -0.0053863525390625, -0.0005950927734375, 0.0, -0.0024509429931640625, 0.0, -0.007651329040527344, 0.0, -0.005741119384765625, -1.1444091796875e-05, -0.000536321836989373, -4.231926504871808e-05, -0.00113677978515625, -1.9073486328125e-05, -0.0011688459198921919, -0.00010883806680794805, -0.00818562414497137, -0.003300905227661133, -1.784243106842041, -1.4185829968482722e-05, -0.0011501312255859375, -2.47955322265625e-05, -0.0001392364501953125, -5.7220458984375e-06, -0.0005474090576171875, 0.0, -0.00400543212890625, -1.9073486328125e-06, -0.003814697265625, -1.9073486328125e-05, -0.001487363246269524, -0.00010514192399568856, -0.0013971328735351562, -2.86102294921875e-05, -0.0010538077913224697, -8.463854464935139e-05, -0.007596010807901621, -0.0024968385696411133, -0.7988914251327515, -0.0009379386901855469, -0.00177764892578125, -7.62939453125e-06, -0.0002765655517578125, -1.71661376953125e-05, -0.00162506103515625, 0.0, -0.00498199462890625, -1.9073486328125e-06, -0.00762176513671875, -3.0517578125e-05, -0.002106177620589733, -0.00010824146011145785, -0.0013208389282226562, -3.24249267578125e-05, -0.0013822299661114812, -6.484982441179454e-05, -0.01254973653703928, -0.0011827945709228516, -0.8297381401062012, -2.6345238438807428e-05, -0.0009670257568359375, -1.9073486328125e-06, -5.7220458984375e-06, -0.0004138946533203125, -1.9073486328125e-06, -0.02773141674697399, -1.07287787614041e-05, -0.003063201904296875, -0.0009021759033203125, -0.000659942626953125, -1.9073486328125e-06, -0.0054187774658203125, 0.0, -0.01980149745941162, -1.1920928244535389e-07, -0.006415009498596191, -3.933906555175781e-06, -5.7220458984375e-06, -0.002758026123046875, 0.0, -0.004770447034388781, -0.0002337421028641984, -0.0012950897216796875, -0.0005645751953125, -0.0010051727294921875, -3.814697265625e-06, -0.028259513899683952, -5.602820692729438e-06, -0.007547974586486816, 0.0, -0.00246429443359375, -0.000217437744140625, -1.1444091796875e-05, -2.9444672691170126e-05, -4.768370445162873e-07, -0.00057220458984375, -3.814697265625e-06, -0.0002880096435546875, 0.0, -0.00022125244140625, 0.0, -0.005075693130493164, 0.0, -0.000400543212890625, -0.00128173828125, -1.9073486328125e-06, -3.4332275390625e-05, -4.220008850097656e-05, -1.3470649719238281e-05, -5.7220458984375e-06, -0.0002231597900390625, -1.9073486328125e-06, -0.000438690185546875, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00033211708068847656, -1.9073486328125e-06, -0.000164031982421875, -0.0032253265380859375, -5.7220458984375e-06, -0.0004978179931640625, 0.0, -6.866455078125e-05, -0.0005588531494140625, -9.918212890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -4.768370445162873e-07, 0.0, -1.6808508007670753e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -2.300739288330078e-05, -9.536738616588991e-07, -5.14984130859375e-05, -0.000934600830078125, -4.00543212890625e-05, -0.00139617919921875, -0.000110626220703125, -0.0001277923583984375, -0.0008487701416015625, -6.29425048828125e-05, -1.1444091796875e-05, -5.14984130859375e-05, 0.0, -2.0623145246645436e-05, -2.09808349609375e-05, -0.0018960237503051758, 0.0, -4.410743713378906e-06, 0.0, -3.314018249511719e-05, -6.318072337307967e-06, -0.005635261535644531, -2.09808349609375e-05, -0.0011491775512695312, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.5881996154785156e-05, -4.374980926513672e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.918212890625e-05, 0.0, -6.4849853515625e-05, 0.0, -0.001361846923828125, 0.0, -1.9073486328125e-05, -0.0003452301025390625, -0.0007476806640625, -2.86102294921875e-05, -5.53131103515625e-05, -0.0007256269454956055, -1.1444091796875e-05], "choice_history": [97, 286, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 19, 169, 348, 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 102, 142, 346, 50, 174, "card", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>", 136, 318, 21, 174, "card", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"elts": [{"_type": "Template76", "hole1": "Misha", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Leokk", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Misha", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "card"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "<UNK>"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "player"}, {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}], "_type": "Template77", "hole1": "summon", "hole0": {"_type": "Name", "id": "card"}}], "hole3": "use", "hole0": "AnimalCompanion", "_type": "Template5", "hole2": [{"hole2": "HUNTER", "_type": "Template31", "hole1": 3, "hole0": "Animal Companion"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 7, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -3.7995396939464428, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Leokk(), hearthbreaker.cards.minions.\n            hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score_history": [-9.5367431640625e-06, -0.004904747009277344, -3.683518662001006e-05, -3.4570634852570947e-06, -0.00010048838157672435, -8.344568414031528e-07, -0.0001142023247666657, -1.3351374946068972e-05, -6.4849853515625e-05, -0.01552581787109375, -6.103515625e-05, -2.264974000354414e-06, -4.637238089344464e-05, -4.768370445162873e-07, -3.814697265625e-06, -2.50339189733495e-06, 0.0, -0.00024640560150146484, -3.814697265625e-06, -0.0003032684326171875, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.0003490447998046875, -6.318092346191406e-06, -2.9802317840221804e-06, -0.009415626525878906, -0.010354995727539062, -2.6702880859375e-05, -2.288818359375e-05, -1.52587890625e-05, -1.52587890625e-05, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -9.655952453613281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1920928244535389e-07, -1.3470649719238281e-05, -1.1920922133867862e-06, -0.0092620849609375, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.009545261971652508, -7.6293927122605965e-06, -0.020424842834472656, -0.05449485778808594, -0.007479667663574219, -0.0030775070190429688, -0.0053863525390625, -0.0005950927734375, 0.0, -0.0024509429931640625, 0.0, -0.007651329040527344, 0.0, -0.005741119384765625, -1.1444091796875e-05, -0.000536321836989373, -4.231926504871808e-05, -0.00113677978515625, -1.9073486328125e-05, -0.0011688459198921919, -0.00010883806680794805, -0.00818562414497137, -0.003300905227661133, -1.784243106842041, -1.4185829968482722e-05, -0.0011501312255859375, -2.47955322265625e-05, -0.0001392364501953125, -5.7220458984375e-06, -0.0005474090576171875, 0.0, -0.00400543212890625, -1.9073486328125e-06, -0.003814697265625, -1.9073486328125e-05, -0.001487363246269524, -0.00010514192399568856, -0.0013971328735351562, -2.86102294921875e-05, -0.0010538077913224697, -8.463854464935139e-05, -0.007596010807901621, -0.0024968385696411133, -0.8610156774520874, -4.553790495265275e-05, -0.0008640289306640625, -1.1444091796875e-05, -7.62939453125e-05, -3.814697265625e-06, -0.000644683837890625, 0.0, -0.00234222412109375, -1.9073486328125e-06, -0.008852005004882812, -2.86102294921875e-05, -0.0017727504018694162, -0.00010716855467762798, -0.0012464523315429688, -2.86102294921875e-05, -0.0011458373628556728, -8.296960731968284e-05, -0.009502395987510681, -0.0011352300643920898, -0.799072265625, -0.00011980533599853516, -0.009450912475585938, -1.1444091796875e-05, -3.814697265625e-06, -0.000118255615234375, -1.9073486328125e-06, -0.007246255408972502, -8.225420970120467e-06, -0.002864837646484375, -0.000514984130859375, -0.0004825592041015625, -1.9073486328125e-06, -0.00600433349609375, 0.0, -0.015064597129821777, -1.1920928244535389e-07, -0.006804943084716797, -3.933906555175781e-06, -5.7220458984375e-06, -0.00250244140625, 0.0, -0.004641696810722351, -0.00024005869636312127, -0.001308441162109375, -0.0005855560302734375, -0.0009975433349609375, -3.814697265625e-06, -0.027584431692957878, -5.722029527532868e-06, -0.007363557815551758, 0.0, -0.0024623870849609375, -0.0002155303955078125, -1.33514404296875e-05, -2.9325463401619345e-05, -4.768370445162873e-07, -0.0005779266357421875, -3.814697265625e-06, -0.0002880096435546875, 0.0, -0.0002193450927734375, 0.0, -0.0050890445709228516, 0.0, -0.000400543212890625, -0.00128173828125, -1.9073486328125e-06, -3.4332275390625e-05, -4.220008850097656e-05, -1.3470649719238281e-05, -5.7220458984375e-06, -0.0002231597900390625, -1.9073486328125e-06, -0.000438690185546875, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00033211708068847656, -1.9073486328125e-06, -0.000164031982421875, -0.0032291412353515625, -5.7220458984375e-06, -0.000499725341796875, 0.0, -6.866455078125e-05, -0.0005588531494140625, -9.918212890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -4.768370445162873e-07, 0.0, -1.6808508007670753e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -2.300739288330078e-05, -9.536738616588991e-07, -5.14984130859375e-05, -0.0009365081787109375, -4.00543212890625e-05, -0.0013980865478515625, -0.000110626220703125, -0.0001277923583984375, -0.0008487701416015625, -6.29425048828125e-05, -1.1444091796875e-05, -5.14984130859375e-05, 0.0, -2.0623145246645436e-05, -2.09808349609375e-05, -0.0018979310989379883, 0.0, -4.410743713378906e-06, 0.0, -3.314018249511719e-05, -6.318072337307967e-06, -0.005634307861328125, -2.09808349609375e-05, -0.0011491775512695312, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.5881996154785156e-05, -4.374980926513672e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.918212890625e-05, 0.0, -6.4849853515625e-05, 0.0, -0.001361846923828125, 0.0, -1.9073486328125e-05, -0.0003452301025390625, -0.0007476806640625, -2.86102294921875e-05, -5.53131103515625e-05, -0.000723719596862793, -1.1444091796875e-05], "choice_history": [97, 286, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 19, 169, 348, 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 102, 142, 346, 50, 174, "card", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>", 136, 318, 21, 174, "card", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"elts": [{"_type": "Template76", "hole1": "Misha", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Misha", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Leokk", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "card"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "<UNK>"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "player"}, {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}], "_type": "Template77", "hole1": "summon", "hole0": {"_type": "Name", "id": "card"}}], "hole3": "use", "hole0": "AnimalCompanion", "_type": "Template5", "hole2": [{"hole2": "HUNTER", "_type": "Template31", "hole1": 3, "hole0": "Animal Companion"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 7, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -3.804954897898895, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score_history": [-9.5367431640625e-06, -0.004904747009277344, -3.683518662001006e-05, -3.4570634852570947e-06, -0.00010048838157672435, -8.344568414031528e-07, -0.0001142023247666657, -1.3351374946068972e-05, -6.4849853515625e-05, -0.01552581787109375, -6.103515625e-05, -2.264974000354414e-06, -4.637238089344464e-05, -4.768370445162873e-07, -3.814697265625e-06, -2.50339189733495e-06, 0.0, -0.00024640560150146484, -3.814697265625e-06, -0.0003032684326171875, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.0003490447998046875, -6.318092346191406e-06, -2.9802317840221804e-06, -0.009415626525878906, -0.010354995727539062, -2.6702880859375e-05, -2.288818359375e-05, -1.52587890625e-05, -1.52587890625e-05, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -9.655952453613281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1920928244535389e-07, -1.3470649719238281e-05, -1.1920922133867862e-06, -0.0092620849609375, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.009545261971652508, -7.6293927122605965e-06, -0.020424842834472656, -0.05449485778808594, -0.007479667663574219, -0.0030775070190429688, -0.0053863525390625, -0.0005950927734375, 0.0, -0.0024509429931640625, 0.0, -0.007651329040527344, 0.0, -0.005741119384765625, -1.1444091796875e-05, -0.000536321836989373, -4.231926504871808e-05, -0.00113677978515625, -1.9073486328125e-05, -0.0011688459198921919, -0.00010883806680794805, -0.00818562414497137, -0.003300905227661133, -1.784243106842041, -1.4185829968482722e-05, -0.0011501312255859375, -2.47955322265625e-05, -0.0001392364501953125, -5.7220458984375e-06, -0.0005474090576171875, 0.0, -0.00400543212890625, -1.9073486328125e-06, -0.003814697265625, -1.9073486328125e-05, -0.001487363246269524, -0.00010514192399568856, -0.0013971328735351562, -2.86102294921875e-05, -0.0010538077913224697, -8.463854464935139e-05, -0.007596010807901621, -0.0024968385696411133, -0.8610156774520874, -4.553790495265275e-05, -0.0008640289306640625, -1.1444091796875e-05, -7.62939453125e-05, -3.814697265625e-06, -0.000644683837890625, 0.0, -0.00234222412109375, -1.9073486328125e-06, -0.008852005004882812, -2.86102294921875e-05, -0.0017727504018694162, -0.00010716855467762798, -0.0012464523315429688, -2.86102294921875e-05, -0.0011458373628556728, -8.296960731968284e-05, -0.009502395987510681, -0.0011352300643920898, -0.8524961471557617, -1.7166108591482043e-05, -0.0015716552734375, -1.9073486328125e-06, -7.62939453125e-06, -0.000331878662109375, -1.9073486328125e-06, -0.02992510236799717, -1.07287787614041e-05, -0.0030422210693359375, -0.0008420944213867188, -0.0006389617919921875, -1.9073486328125e-06, -0.005283355712890625, 0.0, -0.017795920372009277, -1.1920928244535389e-07, -0.006561875343322754, -3.933906555175781e-06, -5.7220458984375e-06, -0.0029506683349609375, 0.0, -0.004707504995167255, -0.00023231192608363926, -0.0012798309326171875, -0.0005702972412109375, -0.001033782958984375, -3.814697265625e-06, -0.02829551510512829, -5.722029527532868e-06, -0.007517576217651367, 0.0, -0.0024585723876953125, -0.000217437744140625, -1.1444091796875e-05, -2.9444672691170126e-05, -4.768370445162873e-07, -0.0005741119384765625, -3.814697265625e-06, -0.000286102294921875, 0.0, -0.0002231597900390625, 0.0, -0.005106210708618164, 0.0, -0.000400543212890625, -0.00128173828125, -1.9073486328125e-06, -3.4332275390625e-05, -4.220008850097656e-05, -1.3470649719238281e-05, -5.7220458984375e-06, -0.000225067138671875, -1.9073486328125e-06, -0.0004367828369140625, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00033211708068847656, -1.9073486328125e-06, -0.000164031982421875, -0.00322723388671875, -5.7220458984375e-06, -0.000499725341796875, 0.0, -6.866455078125e-05, -0.0005588531494140625, -9.918212890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -4.768370445162873e-07, 0.0, -1.6808508007670753e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -2.300739288330078e-05, -9.536738616588991e-07, -5.14984130859375e-05, -0.000934600830078125, -4.00543212890625e-05, -0.0013980865478515625, -0.000110626220703125, -0.000125885009765625, -0.000850677490234375, -6.29425048828125e-05, -1.1444091796875e-05, -5.14984130859375e-05, 0.0, -2.0623145246645436e-05, -2.09808349609375e-05, -0.0018960237503051758, 0.0, -4.410743713378906e-06, 0.0, -3.314018249511719e-05, -6.318072337307967e-06, -0.005635261535644531, -2.09808349609375e-05, -0.0011491775512695312, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.5881996154785156e-05, -4.374980926513672e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.918212890625e-05, 0.0, -6.4849853515625e-05, 0.0, -0.001361846923828125, 0.0, -1.9073486328125e-05, -0.0003452301025390625, -0.0007495880126953125, -2.86102294921875e-05, -5.53131103515625e-05, -0.0007256269454956055, -1.1444091796875e-05], "choice_history": [97, 286, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 19, 169, 348, 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 102, 142, 346, 50, 174, "card", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>", 136, 318, 21, 174, "card", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"elts": [{"_type": "Template76", "hole1": "Misha", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Misha", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Misha", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "card"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "<UNK>"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "player"}, {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}], "_type": "Template77", "hole1": "summon", "hole0": {"_type": "Name", "id": "card"}}], "hole3": "use", "hole0": "AnimalCompanion", "_type": "Template5", "hole2": [{"hole2": "HUNTER", "_type": "Template31", "hole1": 3, "hole0": "Animal Companion"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 7, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -3.877088678726139, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score_history": [-9.5367431640625e-06, -0.004904747009277344, -3.683518662001006e-05, -3.4570634852570947e-06, -0.00010048838157672435, -8.344568414031528e-07, -0.0001142023247666657, -1.3351374946068972e-05, -6.4849853515625e-05, -0.01552581787109375, -6.103515625e-05, -2.264974000354414e-06, -4.637238089344464e-05, -4.768370445162873e-07, -3.814697265625e-06, -2.50339189733495e-06, 0.0, -0.00024640560150146484, -3.814697265625e-06, -0.0003032684326171875, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.0003490447998046875, -6.318092346191406e-06, -2.9802317840221804e-06, -0.009415626525878906, -0.010354995727539062, -2.6702880859375e-05, -2.288818359375e-05, -1.52587890625e-05, -1.52587890625e-05, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -9.655952453613281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1920928244535389e-07, -1.3470649719238281e-05, -1.1920922133867862e-06, -0.0092620849609375, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.009545261971652508, -7.6293927122605965e-06, -0.020424842834472656, -0.05449485778808594, -0.007479667663574219, -0.0030775070190429688, -0.0053863525390625, -0.0005950927734375, 0.0, -0.0024509429931640625, 0.0, -0.007651329040527344, 0.0, -0.005741119384765625, -1.1444091796875e-05, -0.000536321836989373, -4.231926504871808e-05, -0.00113677978515625, -1.9073486328125e-05, -0.0011688459198921919, -0.00010883806680794805, -0.00818562414497137, -0.003300905227661133, -0.676457941532135, -0.0016728639602661133, -0.0017299652099609375, -9.72747802734375e-05, -0.00029754638671875, -1.9073486328125e-06, -0.0008487701416015625, 0.0, -0.0035686492919921875, -1.9073486328125e-06, -0.013004302978515625, -3.4332275390625e-05, -0.0019572817254811525, -0.00015818874817341566, -0.0014171600341796875, -2.47955322265625e-05, -0.0016880023758858442, -0.00013434881111606956, -0.007208344992250204, -0.0031205415725708008, -0.7626868486404419, -8.344648813363165e-05, -0.0009107589721679688, -1.1444091796875e-05, -0.0001201629638671875, -3.814697265625e-06, -0.000598907470703125, 0.0, -0.0022602081298828125, -1.9073486328125e-06, -0.008401870727539062, -2.6702880859375e-05, -0.0016691570635885, -0.00010597628715913743, -0.0013322830200195312, -2.6702880859375e-05, -0.0011817195918411016, -9.822838183026761e-05, -0.00719224801287055, -0.0016090869903564453, -2.4222655296325684, -0.001958012580871582, -0.0026836395263671875, -1.9073486328125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.007836936041712761, -5.960446742392378e-06, -0.00147247314453125, -0.0006389617919921875, -0.0004940032958984375, -1.9073486328125e-06, -0.0051670074462890625, 0.0, -0.014490604400634766, -1.1920928244535389e-07, -0.0069732666015625, -5.841255187988281e-06, -5.7220458984375e-06, -0.0025234222412109375, 0.0, -0.004216242581605911, -0.00023850933939684182, -0.001312255859375, -0.0005779266357421875, -0.0010089874267578125, -3.814697265625e-06, -0.028091667219996452, -5.602820692729438e-06, -0.007304072380065918, 0.0, -0.0024585723876953125, -0.0002155303955078125, -1.33514404296875e-05, -2.9325463401619345e-05, -4.768370445162873e-07, -0.0005741119384765625, -5.7220458984375e-06, -0.0002918243408203125, 0.0, -0.00022125244140625, 0.0, -0.0050699710845947266, 0.0, -0.000400543212890625, -0.0012760162353515625, -1.9073486328125e-06, -3.4332275390625e-05, -4.220008850097656e-05, -1.3470649719238281e-05, -5.7220458984375e-06, -0.0002231597900390625, -1.9073486328125e-06, -0.000453948974609375, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00033020973205566406, -1.9073486328125e-06, -0.000164031982421875, -0.0032176971435546875, -5.7220458984375e-06, -0.0004978179931640625, 0.0, -6.67572021484375e-05, -0.00055694580078125, -9.918212890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -4.768370445162873e-07, 0.0, -1.6808508007670753e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -2.300739288330078e-05, -9.536738616588991e-07, -5.14984130859375e-05, -0.0009365081787109375, -4.00543212890625e-05, -0.00141143798828125, -0.0001125335693359375, -0.0001277923583984375, -0.000843048095703125, -6.29425048828125e-05, -1.1444091796875e-05, -5.14984130859375e-05, 0.0, -2.0623145246645436e-05, -2.09808349609375e-05, -0.0019055604934692383, 0.0, -4.410743713378906e-06, 0.0, -3.314018249511719e-05, -6.318072337307967e-06, -0.005633354187011719, -2.09808349609375e-05, -0.001148223876953125, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.5881996154785156e-05, -4.374980926513672e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.918212890625e-05, 0.0, -6.4849853515625e-05, 0.0, -0.001361846923828125, 0.0, -1.9073486328125e-05, -0.0003452301025390625, -0.0007495880126953125, -2.86102294921875e-05, -5.53131103515625e-05, -0.000723719596862793, -1.1444091796875e-05], "choice_history": [97, 286, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 19, 169, 348, 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 102, 142, 346, 50, 174, "card", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>", 136, 318, 21, 174, "card", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"elts": [{"_type": "Template76", "hole1": "Huffer", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Misha", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Huffer", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "card"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "<UNK>"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "player"}, {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}], "_type": "Template77", "hole1": "summon", "hole0": {"_type": "Name", "id": "card"}}], "hole3": "use", "hole0": "AnimalCompanion", "_type": "Template5", "hole2": [{"hole2": "HUNTER", "_type": "Template31", "hole1": 3, "hole0": "Animal Companion"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 7, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.225872716234406, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Huffer()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score_history": [-9.5367431640625e-06, -0.004904747009277344, -3.683518662001006e-05, -3.4570634852570947e-06, -0.00010048838157672435, -8.344568414031528e-07, -0.0001142023247666657, -1.3351374946068972e-05, -6.4849853515625e-05, -0.01552581787109375, -6.103515625e-05, -2.264974000354414e-06, -4.637238089344464e-05, -4.768370445162873e-07, -3.814697265625e-06, -2.50339189733495e-06, 0.0, -0.00024640560150146484, -3.814697265625e-06, -0.0003032684326171875, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.0003490447998046875, -6.318092346191406e-06, -2.9802317840221804e-06, -0.009415626525878906, -0.010354995727539062, -2.6702880859375e-05, -2.288818359375e-05, -1.52587890625e-05, -1.52587890625e-05, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -9.655952453613281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1920928244535389e-07, -1.3470649719238281e-05, -1.1920922133867862e-06, -0.0092620849609375, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.009545261971652508, -7.6293927122605965e-06, -0.020424842834472656, -0.05449485778808594, -0.007479667663574219, -0.0030775070190429688, -0.0053863525390625, -0.0005950927734375, 0.0, -0.0024509429931640625, 0.0, -0.007651329040527344, 0.0, -0.005741119384765625, -1.1444091796875e-05, -0.000536321836989373, -4.231926504871808e-05, -0.00113677978515625, -1.9073486328125e-05, -0.0011688459198921919, -0.00010883806680794805, -0.00818562414497137, -0.003300905227661133, -0.676457941532135, -0.0016728639602661133, -0.0017299652099609375, -9.72747802734375e-05, -0.00029754638671875, -1.9073486328125e-06, -0.0008487701416015625, 0.0, -0.0035686492919921875, -1.9073486328125e-06, -0.013004302978515625, -3.4332275390625e-05, -0.0019572817254811525, -0.00015818874817341566, -0.0014171600341796875, -2.47955322265625e-05, -0.0016880023758858442, -0.00013434881111606956, -0.007208344992250204, -0.0031205415725708008, -0.862733006477356, -0.0008759498596191406, -0.0013322830200195312, -5.7220458984375e-06, -0.0002593994140625, -1.33514404296875e-05, -0.00104522705078125, 0.0, -0.004215240478515625, -1.9073486328125e-06, -0.007778167724609375, -3.814697265625e-05, -0.0021136889699846506, -0.00012874527601525187, -0.0013570785522460938, -3.24249267578125e-05, -0.0015995488502085209, -7.891651330282912e-05, -0.008152002468705177, -0.0016127824783325195, -2.4985294342041016, -0.001167893409729004, -0.002620697021484375, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -0.008714674971997738, -5.364403477869928e-06, -0.0014438629150390625, -0.0006389617919921875, -0.000469207763671875, -1.9073486328125e-06, -0.0053539276123046875, 0.0, -0.014781475067138672, -1.1920928244535389e-07, -0.006919980049133301, -5.841255187988281e-06, -5.7220458984375e-06, -0.00243377685546875, 0.0, -0.004206348210573196, -0.0002397011558059603, -0.001323699951171875, -0.000576019287109375, -0.0009937286376953125, -3.814697265625e-06, -0.02801680378615856, -5.602820692729438e-06, -0.00730586051940918, 0.0, -0.0024623870849609375, -0.0002155303955078125, -1.33514404296875e-05, -2.9325463401619345e-05, -4.768370445162873e-07, -0.0005741119384765625, -5.7220458984375e-06, -0.0002918243408203125, 0.0, -0.0002193450927734375, 0.0, -0.005041360855102539, 0.0, -0.000400543212890625, -0.001277923583984375, -1.9073486328125e-06, -3.4332275390625e-05, -4.220008850097656e-05, -1.3470649719238281e-05, -5.7220458984375e-06, -0.0002231597900390625, -1.9073486328125e-06, -0.0004558563232421875, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.00033020973205566406, -1.9073486328125e-06, -0.000164031982421875, -0.003215789794921875, -5.7220458984375e-06, -0.00049591064453125, 0.0, -6.67572021484375e-05, -0.0005588531494140625, -9.918212890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -4.768370445162873e-07, 0.0, -1.6808508007670753e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -2.300739288330078e-05, -9.536738616588991e-07, -5.14984130859375e-05, -0.0009365081787109375, -4.00543212890625e-05, -0.0014095306396484375, -0.0001125335693359375, -0.0001277923583984375, -0.000843048095703125, -6.29425048828125e-05, -1.1444091796875e-05, -5.14984130859375e-05, 0.0, -2.0623145246645436e-05, -2.09808349609375e-05, -0.0019036531448364258, 0.0, -4.410743713378906e-06, 0.0, -3.314018249511719e-05, -6.318072337307967e-06, -0.005633354187011719, -2.09808349609375e-05, -0.001148223876953125, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.5881996154785156e-05, -4.374980926513672e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.918212890625e-05, 0.0, -6.4849853515625e-05, 0.0, -0.001361846923828125, 0.0, -1.9073486328125e-05, -0.0003452301025390625, -0.0007495880126953125, -2.86102294921875e-05, -5.53131103515625e-05, -0.000723719596862793, -1.1444091796875e-05], "choice_history": [97, 286, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 19, 169, 348, 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 102, 142, 346, 50, 174, "card", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>", 136, 318, 21, 174, "card", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"elts": [{"_type": "Template76", "hole1": "Huffer", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Leokk", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Huffer", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "card"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "<UNK>"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "player"}, {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}], "_type": "Template77", "hole1": "summon", "hole0": {"_type": "Name", "id": "card"}}], "hole3": "use", "hole0": "AnimalCompanion", "_type": "Template5", "hole2": [{"hole2": "HUNTER", "_type": "Template31", "hole1": 3, "hole0": "Animal Companion"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 7, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.407383882299271, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Leokk(), hearthbreaker.cards.minions.\n            hunter.Huffer()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score_history": [-9.5367431640625e-06, -0.004904747009277344, -3.683518662001006e-05, -3.4570634852570947e-06, -0.00010048838157672435, -8.344568414031528e-07, -0.0001142023247666657, -1.3351374946068972e-05, -6.4849853515625e-05, -0.01552581787109375, -6.103515625e-05, -2.264974000354414e-06, -4.637238089344464e-05, -4.768370445162873e-07, -3.814697265625e-06, -2.50339189733495e-06, 0.0, -0.00024640560150146484, -3.814697265625e-06, -0.0003032684326171875, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.0003490447998046875, -6.318092346191406e-06, -2.9802317840221804e-06, -0.009415626525878906, -0.010354995727539062, -2.6702880859375e-05, -2.288818359375e-05, -1.52587890625e-05, -1.52587890625e-05, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -9.655952453613281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1920928244535389e-07, -1.3470649719238281e-05, -1.1920922133867862e-06, -0.0092620849609375, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.009545261971652508, -7.6293927122605965e-06, -0.020424842834472656, -0.05449485778808594, -0.007479667663574219, -0.0030775070190429688, -0.0053863525390625, -0.0005950927734375, 0.0, -0.0024509429931640625, 0.0, -0.007651329040527344, 0.0, -0.005741119384765625, -1.1444091796875e-05, -0.000536321836989373, -4.231926504871808e-05, -0.00113677978515625, -1.9073486328125e-05, -0.0011688459198921919, -0.00010883806680794805, -0.00818562414497137, -0.003300905227661133, -0.676457941532135, -0.0016728639602661133, -0.0017299652099609375, -9.72747802734375e-05, -0.00029754638671875, -1.9073486328125e-06, -0.0008487701416015625, 0.0, -0.0035686492919921875, -1.9073486328125e-06, -0.013004302978515625, -3.4332275390625e-05, -0.0019572817254811525, -0.00015818874817341566, -0.0014171600341796875, -2.47955322265625e-05, -0.0016880023758858442, -0.00013434881111606956, -0.007208344992250204, -0.0031205415725708008, -2.6511106491088867, -0.008327245712280273, -0.0026798248291015625, -7.62939453125e-05, -0.0002384185791015625, -1.9073486328125e-06, -0.000698089599609375, 0.0, -0.0023670196533203125, -1.9073486328125e-06, -0.015161514282226562, -4.00543212890625e-05, -0.0019820760935544968, -0.00014889042358845472, -0.001468658447265625, -2.6702880859375e-05, -0.00156557431910187, -0.00012278551002964377, -0.007367012556642294, -0.002041935920715332, -0.7785387635231018, -4.851816993323155e-05, -0.001735687255859375, -1.9073486328125e-06, -5.7220458984375e-06, -0.00040435791015625, 0.0, -0.03002619557082653, -9.536697689327411e-06, -0.0026073455810546875, -0.0014171600341796875, -0.0007171630859375, -1.9073486328125e-06, -0.005016326904296875, 0.0, -0.01717984676361084, -1.1920928244535389e-07, -0.0065348148345947266, -3.933906555175781e-06, -5.7220458984375e-06, -0.00315093994140625, 0.0, -0.004502101335674524, -0.00023266946664080024, -0.0012969970703125, -0.0005626678466796875, -0.001018524169921875, -3.814697265625e-06, -0.028485534712672234, -5.722029527532868e-06, -0.00757753849029541, 0.0, -0.0024585723876953125, -0.000217437744140625, -1.1444091796875e-05, -2.9444672691170126e-05, -4.768370445162873e-07, -0.0005702972412109375, -3.814697265625e-06, -0.0002880096435546875, 0.0, -0.00022125244140625, 0.0, -0.0050661563873291016, 0.0, -0.000400543212890625, -0.0012798309326171875, -1.9073486328125e-06, -3.4332275390625e-05, -4.220008850097656e-05, -1.3470649719238281e-05, -5.7220458984375e-06, -0.0002231597900390625, -1.9073486328125e-06, -0.00045013427734375, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00033020973205566406, -1.9073486328125e-06, -0.000164031982421875, -0.0032176971435546875, -5.7220458984375e-06, -0.0004978179931640625, 0.0, -6.67572021484375e-05, -0.00055694580078125, -9.918212890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -4.768370445162873e-07, 0.0, -1.6808508007670753e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -2.300739288330078e-05, -9.536738616588991e-07, -5.14984130859375e-05, -0.00093841552734375, -4.00543212890625e-05, -0.0014133453369140625, -0.0001125335693359375, -0.0001277923583984375, -0.000843048095703125, -6.29425048828125e-05, -1.1444091796875e-05, -5.14984130859375e-05, 0.0, -2.0623145246645436e-05, -2.09808349609375e-05, -0.0019074678421020508, 0.0, -4.410743713378906e-06, 0.0, -3.314018249511719e-05, -6.318072337307967e-06, -0.005631446838378906, -2.09808349609375e-05, -0.001148223876953125, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.5881996154785156e-05, -4.374980926513672e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.918212890625e-05, 0.0, -6.4849853515625e-05, 0.0, -0.001361846923828125, 0.0, -1.9073486328125e-05, -0.0003452301025390625, -0.0007495880126953125, -2.86102294921875e-05, -5.53131103515625e-05, -0.000723719596862793, -1.1444091796875e-05], "choice_history": [97, 286, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 19, 169, 348, 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 102, 142, 346, 50, 174, "card", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>", 136, 318, 21, 174, "card", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"elts": [{"_type": "Template76", "hole1": "Huffer", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Huffer", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}, {"_type": "Template76", "hole1": "Misha", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "card"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "<UNK>"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "player"}, {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}], "_type": "Template77", "hole1": "summon", "hole0": {"_type": "Name", "id": "card"}}], "hole3": "use", "hole0": "AnimalCompanion", "_type": "Template5", "hole2": [{"hole2": "HUNTER", "_type": "Template31", "hole1": 3, "hole0": "Animal Companion"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 7, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.514739289994466, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Huffer(), hearthbreaker.cards.minions.\n            hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}]}
{"index": 3, "beams": [{"score_history": [-2.86102294921875e-05, -0.000675201416015625, 0.0, -7.152556463552173e-06, -1.311301275563892e-06, -9.536737479720614e-07, -3.492804535198957e-05, -2.9802276912960224e-06, -6.67572021484375e-05, -0.0002040863037109375, -0.0001506805419921875, 0.0, -3.7670110032195225e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1920928244535389e-07, 0.0, -0.00142669677734375, -1.33514404296875e-05, -0.0035573244094848633, -1.9073486328125e-06, -0.0007138252258300781, 0.0, -1.3709068298339844e-05, 0.0, -1.71661376953125e-05, -8.20159912109375e-05, -4.291534423828125e-06, -1.072883515007561e-05, -0.0055828094482421875, -0.0003223419189453125, -1.52587890625e-05, -0.0001316070556640625, -0.000217437744140625, -3.814697265625e-06, 0.0, -1.5616416931152344e-05, -2.288818359375e-05, -5.364416210795753e-05, 0.0, -2.360340477025602e-05, -1.1920928244535389e-07, -4.9709804443409666e-05, -4.768370445162873e-07, -0.000675201416015625, -0.0004215240478515625, -0.001262664794921875, -1.1444091796875e-05, -0.0011817216873168945, 0.0, -0.0001697540283203125, -0.0002040863037109375, -0.00023651123046875, -0.0001621246337890625, -5.340576171875e-05, 0.0, -0.0075626373291015625, -6.496906280517578e-05, -0.00013744831085205078, -1.1444091796875e-05, -5.53131103515625e-05, -0.000392913818359375, -0.0004024505615234375, -9.5367431640625e-06, -9.5367431640625e-06, -8.7738037109375e-05, -3.814697265625e-06, -2.777576446533203e-05, -3.814697265625e-06, -0.013510465621948242, 0.0, -0.0007616978837177157, -3.814697265625e-06, -1.1444091796875e-05, -0.000152587890625, -9.1552734375e-05, -0.001010894775390625, -0.0001735687255859375, -0.0003166195238009095, -5.483620952873025e-06, -0.001498881378211081, 0.0, -9.5367431640625e-06, -0.00078582763671875, -5.14984130859375e-05, -0.0006335876532830298, -5.0424259825376794e-05, -0.00023651123046875, -0.000186920166015625, -0.0004198546230327338, -0.00011873245239257812], "choice_history": [97, 285, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "hole3": "use", "hole0": "ArcaneExplosion", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 2, "hole0": "Arcane Explosion"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -0.04667246424854454, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score_history": [-2.86102294921875e-05, -0.000675201416015625, 0.0, -7.152556463552173e-06, -1.311301275563892e-06, -9.536737479720614e-07, -3.492804535198957e-05, -2.9802276912960224e-06, -6.67572021484375e-05, -0.0002040863037109375, -0.0001506805419921875, 0.0, -3.7670110032195225e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1920928244535389e-07, 0.0, -0.00142669677734375, -1.33514404296875e-05, -0.0035573244094848633, -1.9073486328125e-06, -0.0007138252258300781, 0.0, -1.3709068298339844e-05, 0.0, -1.71661376953125e-05, -8.20159912109375e-05, -4.291534423828125e-06, -1.072883515007561e-05, -0.0055828094482421875, -0.0003223419189453125, -1.52587890625e-05, -0.0001316070556640625, -0.000217437744140625, -3.814697265625e-06, 0.0, -1.5616416931152344e-05, -2.288818359375e-05, -5.364416210795753e-05, 0.0, -2.360340477025602e-05, -1.1920928244535389e-07, -4.9709804443409666e-05, -4.768370445162873e-07, -0.000675201416015625, -0.0004215240478515625, -0.001262664794921875, -1.1444091796875e-05, -0.0011817216873168945, 0.0, -0.0001697540283203125, -0.0002040863037109375, -0.00023651123046875, -0.0001621246337890625, -5.340576171875e-05, 0.0, -0.0075626373291015625, -6.496906280517578e-05, -0.00013744831085205078, -1.1444091796875e-05, -5.53131103515625e-05, -0.000392913818359375, -0.0004024505615234375, -9.5367431640625e-06, -9.5367431640625e-06, -8.7738037109375e-05, -3.814697265625e-06, -2.777576446533203e-05, -3.814697265625e-06, -4.8119940757751465, -5.7220458984375e-06, -0.0004470348358154297, -1.1444091796875e-05, -9.5367431640625e-06, -0.00107574462890625, -5.53131103515625e-05, -0.00211334228515625, -0.000186920166015625, -0.00027775747003033757, -5.125993993715383e-06, -0.0011373215820640326, 0.0, -9.5367431640625e-06, -0.0008487701416015625, -5.53131103515625e-05, -0.0006151106208562851, -5.674201020156033e-05, -0.000255584716796875, -0.0002117156982421875, -0.00042247716919519007, -0.00012063980102539062], "choice_history": [97, 285, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "minions"}]}}], "hole3": "use", "hole0": "ArcaneExplosion", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 2, "hole0": "Arcane Explosion"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.8465577888666616, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.current_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score_history": [-2.86102294921875e-05, -0.000675201416015625, 0.0, -7.152556463552173e-06, -1.311301275563892e-06, -9.536737479720614e-07, -3.492804535198957e-05, -2.9802276912960224e-06, -6.67572021484375e-05, -0.0002040863037109375, -0.0001506805419921875, 0.0, -3.7670110032195225e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1920928244535389e-07, 0.0, -0.00142669677734375, -1.33514404296875e-05, -0.0035573244094848633, -1.9073486328125e-06, -0.0007138252258300781, 0.0, -1.3709068298339844e-05, 0.0, -1.71661376953125e-05, -8.20159912109375e-05, -4.291534423828125e-06, -1.072883515007561e-05, -0.0055828094482421875, -0.0003223419189453125, -1.52587890625e-05, -0.0001316070556640625, -0.000217437744140625, -3.814697265625e-06, 0.0, -1.5616416931152344e-05, -2.288818359375e-05, -5.364416210795753e-05, 0.0, -2.360340477025602e-05, -1.1920928244535389e-07, -4.9709804443409666e-05, -4.768370445162873e-07, -0.000675201416015625, -0.0004215240478515625, -0.001262664794921875, -1.1444091796875e-05, -0.0011817216873168945, 0.0, -0.0001697540283203125, -0.0002040863037109375, -0.00023651123046875, -0.0001621246337890625, -5.340576171875e-05, 0.0, -5.03568172454834, -1.1920928244535389e-07, -0.0052607059478759766, -7.62939453125e-06, -0.01230621337890625, -0.10390472412109375, -5.14984130859375e-05, -4.00543212890625e-05, -3.62396240234375e-05, -6.866455078125e-05, -5.7220458984375e-06, -3.564357393770479e-05, -2.0265579223632812e-06, -0.006356239318847656, 0.0, -0.008229438215494156, -1.9073486328125e-06, -2.6702880859375e-05, -0.000148773193359375, -8.392333984375e-05, -0.00124359130859375, -0.000240325927734375, -0.0002787109697237611, -5.006785613659304e-06, -0.0017893913900479674, 0.0, -9.5367431640625e-06, -0.000766754150390625, -5.340576171875e-05, -0.0006495610577985644, -4.851700214203447e-05, -0.000232696533203125, -0.0001964569091796875, -0.0004432195273693651, -0.00011873245239257812], "choice_history": [97, 285, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "hole3": "use", "hole0": "ArcaneExplosion", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 2, "hole0": "Arcane Explosion"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.196197023662741, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.random_choice(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score_history": [-2.86102294921875e-05, -0.000675201416015625, 0.0, -7.152556463552173e-06, -1.311301275563892e-06, -9.536737479720614e-07, -3.492804535198957e-05, -2.9802276912960224e-06, -6.67572021484375e-05, -0.0002040863037109375, -0.0001506805419921875, 0.0, -3.7670110032195225e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1920928244535389e-07, 0.0, -0.00142669677734375, -1.33514404296875e-05, -5.8185882568359375, -1.9073486328125e-06, -0.015157699584960938, 0.0, -1.728534698486328e-05, 0.0, -1.9073486328125e-05, -3.814697265625e-05, -7.867813110351562e-06, -4.768371127283899e-06, -0.009318351745605469, -0.00067901611328125, -1.52587890625e-05, -0.0001544952392578125, -0.0002040863037109375, -3.814697265625e-06, 0.0, -1.3828277587890625e-05, -1.9073486328125e-05, -5.5909134971443564e-05, 0.0, -2.3961029000929557e-05, -1.1920928244535389e-07, -5.257073644315824e-05, -4.768370445162873e-07, -0.0007228851318359375, -0.000400543212890625, -0.00122833251953125, -1.1444091796875e-05, -0.0011397600173950195, 0.0, -0.000171661376953125, -0.0002040863037109375, -0.0002384185791015625, -0.0001621246337890625, -5.14984130859375e-05, 0.0, -0.0075550079345703125, -6.496906280517578e-05, -0.00013744831085205078, -1.33514404296875e-05, -5.53131103515625e-05, -0.000396728515625, -0.0004024505615234375, -9.5367431640625e-06, -9.5367431640625e-06, -8.7738037109375e-05, -3.814697265625e-06, -2.777576446533203e-05, -3.814697265625e-06, -0.013519048690795898, 0.0, -0.0007588385487906635, -3.814697265625e-06, -1.1444091796875e-05, -0.0001506805419921875, -9.34600830078125e-05, -0.0010089874267578125, -0.0001735687255859375, -0.0003166195238009095, -5.483620952873025e-06, -0.0014945963630452752, 0.0, -9.5367431640625e-06, -0.00078582763671875, -5.14984130859375e-05, -0.000633468443993479, -5.0424259825376794e-05, -0.0002346038818359375, -0.000186920166015625, -0.00042068908805958927, -0.00011873245239257812], "choice_history": [97, 285, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "hole3": "use", "hole0": "ArcaneExplosion", "_type": "Template5", "hole2": [{"hole3": "ROGUE", "hole2": "MAGE", "_type": "Template34", "hole1": 2, "hole0": "Arcane Explosion"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.880156883597678, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.ROGUE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score_history": [-2.86102294921875e-05, -0.000675201416015625, 0.0, -7.152556463552173e-06, -1.311301275563892e-06, -9.536737479720614e-07, -3.492804535198957e-05, -2.9802276912960224e-06, -6.67572021484375e-05, -0.0002040863037109375, -0.0001506805419921875, 0.0, -3.7670110032195225e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1920928244535389e-07, 0.0, -0.00142669677734375, -1.33514404296875e-05, -0.0035573244094848633, -1.9073486328125e-06, -0.0007138252258300781, 0.0, -1.3709068298339844e-05, 0.0, -1.71661376953125e-05, -8.20159912109375e-05, -4.291534423828125e-06, -1.072883515007561e-05, -6.229214668273926, -6.103515625e-05, -2.86102294921875e-05, -5.7220458984375e-05, -0.0001373291015625, -5.7220458984375e-06, 0.0, -1.5616416931152344e-05, -2.86102294921875e-05, -8.130071364575997e-05, 0.0, -2.2888118110131472e-05, -1.1920928244535389e-07, -4.875621380051598e-05, -3.576278118089249e-07, -0.0026760101318359375, -3.814697265625e-06, -4.76837158203125e-05, -3.0517578125e-05, -3.24249267578125e-05, -0.07391665875911713, -3.576278118089249e-07, -0.0012769699096679688, -4.1961669921875e-05, -2.86102294921875e-05, -2.47955322265625e-05, -0.000164031982421875, 0.0, -0.0004677772521972656, -3.814697265625e-06, -0.0004388093948364258, -1.1444091796875e-05, -2.86102294921875e-05, -0.0001850128173828125, -0.00072479248046875, -1.1444091796875e-05, -9.5367431640625e-06, -0.0001049041748046875, -3.814697265625e-06, -4.2438507080078125e-05, -3.814697265625e-06, -0.012729287147521973, 0.0, -0.00038990628672763705, -3.814697265625e-06, -2.288818359375e-05, -6.67572021484375e-05, -0.0005207061767578125, -6.67572021484375e-05, -0.023024320602416992, 0.0, -0.05913154408335686, -1.0371204552939162e-05, -0.0003147125244140625, -0.000244140625, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -9.918212890625e-05, -1.33514404296875e-05, -2.384185791015625e-05, -2.1457672119140625e-06, -0.004191160202026367, -1.9073486328125e-06, -0.0459132194519043, 0.0, -0.029125213623046875, -0.00072479248046875, -2.47955322265625e-05, -6.29425048828125e-05, -0.00037670135498046875, -1.1920928244535389e-07, -0.014516830444335938, -3.814697265625e-06, -0.001100778579711914, -9.536738616588991e-07, -0.00034332275390625, -0.05212211608886719, -4.57763671875e-05, -0.00217437744140625, -3.4332275390625e-05, -0.0006716251373291016, -8.344646857949556e-07, -0.0026658913120627403, 0.0, -3.814697265625e-06, -0.000545501708984375, -4.9591064453125e-05, -0.0011544525623321533, -4.756337511935271e-05, -0.00052642822265625, -5.53131103515625e-05, -0.00047850588453002274, -6.16312026977539e-05], "choice_history": [97, 285, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "extend", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 21, 174, "targets", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Template77", "hole1": "extend", "hole0": {"_type": "Name", "id": "targets"}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Name", "id": "targets"}}], "hole3": "use", "hole0": "ArcaneExplosion", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 2, "hole0": "Arcane Explosion"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.570784847632559, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score_history": [-2.86102294921875e-05, -0.000675201416015625, 0.0, -7.152556463552173e-06, -1.311301275563892e-06, -9.536737479720614e-07, -3.492804535198957e-05, -2.9802276912960224e-06, -6.67572021484375e-05, -0.0002040863037109375, -0.0001506805419921875, 0.0, -3.7670110032195225e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1920928244535389e-07, 0.0, -0.00142669677734375, -1.33514404296875e-05, -0.0035573244094848633, -1.9073486328125e-06, -0.0007138252258300781, 0.0, -1.3709068298339844e-05, 0.0, -1.71661376953125e-05, -8.20159912109375e-05, -4.291534423828125e-06, -1.072883515007561e-05, -0.0055828094482421875, -0.0003223419189453125, -1.52587890625e-05, -0.0001316070556640625, -0.000217437744140625, -3.814697265625e-06, 0.0, -1.5616416931152344e-05, -2.288818359375e-05, -5.364416210795753e-05, 0.0, -2.360340477025602e-05, -1.1920928244535389e-07, -4.9709804443409666e-05, -4.768370445162873e-07, -0.000675201416015625, -0.0004215240478515625, -0.001262664794921875, -1.1444091796875e-05, -0.0011817216873168945, 0.0, -0.0001697540283203125, -0.0002040863037109375, -0.00023651123046875, -0.0001621246337890625, -5.340576171875e-05, 0.0, -0.0075626373291015625, -6.496906280517578e-05, -0.00013744831085205078, -1.1444091796875e-05, -5.53131103515625e-05, -0.000392913818359375, -0.0004024505615234375, -9.5367431640625e-06, -9.5367431640625e-06, -8.7738037109375e-05, -3.814697265625e-06, -2.777576446533203e-05, -3.814697265625e-06, -6.580144882202148, 0.0, -0.002314925193786621, -1.9073486328125e-06, -1.52587890625e-05, -0.0003509521484375, -8.20159912109375e-05, -0.0008373260498046875, -0.0003643035888671875, -0.00028455216670408845, -5.841247457283316e-06, -0.0011672124965116382, 0.0, -9.5367431640625e-06, -0.0008563995361328125, -5.14984130859375e-05, -0.0006184490630403161, -5.340433563105762e-05, -0.0002384185791015625, -0.00017547607421875, -0.00041544390842318535, -0.00011301040649414062], "choice_history": [97, 285, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "minions", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "minions"}]}}], "hole3": "use", "hole0": "ArcaneExplosion", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 2, "hole0": "Arcane Explosion"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.614743374408803, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.minions.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score_history": [-2.86102294921875e-05, -0.000675201416015625, 0.0, -7.152556463552173e-06, -1.311301275563892e-06, -9.536737479720614e-07, -3.492804535198957e-05, -2.9802276912960224e-06, -6.67572021484375e-05, -0.0002040863037109375, -0.0001506805419921875, 0.0, -3.7670110032195225e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1920928244535389e-07, 0.0, -0.00142669677734375, -1.33514404296875e-05, -0.0035573244094848633, -1.9073486328125e-06, -0.0007138252258300781, 0.0, -1.3709068298339844e-05, 0.0, -1.71661376953125e-05, -8.20159912109375e-05, -4.291534423828125e-06, -1.072883515007561e-05, -6.212477684020996, -1.71661376953125e-05, -4.00543212890625e-05, -0.0001392364501953125, -0.00014495849609375, -5.7220458984375e-06, 0.0, -1.7404556274414062e-05, -2.09808349609375e-05, -3.778933751164004e-05, 0.0, -2.121924626408145e-05, -1.1920928244535389e-07, -6.401468999683857e-05, -4.768370445162873e-07, -0.0026760101318359375, -0.000217437744140625, -0.000988006591796875, -5.7220458984375e-06, -0.00019109249114990234, 0.0, -0.000225067138671875, -4.9591064453125e-05, -8.0108642578125e-05, -0.000194549560546875, -1.9073486328125e-05, 0.0, -0.008227348327636719, -6.29425048828125e-05, -0.00013363361358642578, -2.86102294921875e-05, -5.91278076171875e-05, -0.000362396240234375, -0.00034332275390625, -9.5367431640625e-06, -1.1444091796875e-05, -8.58306884765625e-05, -3.814697265625e-06, -2.574920654296875e-05, -3.814697265625e-06, -0.012566328048706055, 0.0, -0.0006824588635936379, -3.814697265625e-06, -1.1444091796875e-05, -0.0001659393310546875, -0.0001220703125, -0.000942230224609375, -0.000213623046875, -0.00033843499841168523, -5.483620952873025e-06, -0.0015617272583767772, 0.0, -9.5367431640625e-06, -0.0008106231689453125, -5.14984130859375e-05, -0.0006304886192083359, -4.708655978902243e-05, -0.000217437744140625, -0.0001678466796875, -0.0004200930707156658, -0.00011682510375976562, -0.4106483459472656, -0.0010700225830078125, -0.19514751434326172, -3.814697265625e-06, -0.001129150390625, -1.1444091796875e-05, -0.00028848458896391094, -1.4305104514278355e-06, -0.008690113201737404, -3.814697265625e-06], "choice_history": [97, 285, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "ArcaneExplosion", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 2, "hole0": "Arcane Explosion"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.8701255838233095, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score_history": [-2.86102294921875e-05, -0.000675201416015625, 0.0, -7.152556463552173e-06, -1.311301275563892e-06, -9.536737479720614e-07, -3.492804535198957e-05, -2.9802276912960224e-06, -6.67572021484375e-05, -0.0002040863037109375, -0.0001506805419921875, 0.0, -3.7670110032195225e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1920928244535389e-07, 0.0, -6.9155426025390625, -1.9073486328125e-06, -0.0002231597900390625, -1.9073486328125e-06, -0.00015294551849365234, 0.0, -7.987022399902344e-06, 0.0, -1.1444091796875e-05, -5.91278076171875e-05, -4.172325134277344e-06, -1.060962586052483e-05, -0.0072078704833984375, -0.000461578369140625, -1.52587890625e-05, -0.000118255615234375, -0.0002288818359375, -3.814697265625e-06, 0.0, -1.5616416931152344e-05, -2.47955322265625e-05, -5.5909134971443564e-05, 0.0, -2.4557069991715252e-05, -1.1920928244535389e-07, -4.899457053397782e-05, -4.768370445162873e-07, -0.0006618499755859375, -0.000423431396484375, -0.00128173828125, -1.1444091796875e-05, -0.001183629035949707, 0.0, -0.0001697540283203125, -0.00020599365234375, -0.0002384185791015625, -0.000164031982421875, -5.7220458984375e-05, 0.0, -0.007648468017578125, -6.687641143798828e-05, -0.00013935565948486328, -1.1444091796875e-05, -5.340576171875e-05, -0.0003948211669921875, -0.0004062652587890625, -9.5367431640625e-06, -9.5367431640625e-06, -8.7738037109375e-05, -3.814697265625e-06, -2.777576446533203e-05, -3.814697265625e-06, -0.013527631759643555, 0.0, -0.0007609830936416984, -3.814697265625e-06, -1.1444091796875e-05, -0.000152587890625, -9.1552734375e-05, -0.0010128021240234375, -0.0001735687255859375, -0.00031650031451135874, -5.483620952873025e-06, -0.0014993575168773532, 0.0, -9.5367431640625e-06, -0.0007839202880859375, -5.14984130859375e-05, -0.000633468443993479, -5.030505417380482e-05, -0.00023651123046875, -0.000186920166015625, -0.000419735413743183, -0.00011873245239257812], "choice_history": [97, 285, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "hole3": "use", "hole0": "ArcaneExplosion", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "ROGUE", "_type": "Template34", "hole1": 2, "hole0": "Arcane Explosion"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.958743096009343, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score_history": [-2.86102294921875e-05, -0.000675201416015625, 0.0, -7.152556463552173e-06, -1.311301275563892e-06, -9.536737479720614e-07, -3.492804535198957e-05, -2.9802276912960224e-06, -6.67572021484375e-05, -0.0002040863037109375, -0.0001506805419921875, 0.0, -3.7670110032195225e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1920928244535389e-07, 0.0, -0.00142669677734375, -1.33514404296875e-05, -0.0035573244094848633, -1.9073486328125e-06, -0.0007138252258300781, 0.0, -1.3709068298339844e-05, 0.0, -1.71661376953125e-05, -8.20159912109375e-05, -4.291534423828125e-06, -1.072883515007561e-05, -0.0055828094482421875, -0.0003223419189453125, -1.52587890625e-05, -0.0001316070556640625, -0.000217437744140625, -3.814697265625e-06, 0.0, -1.5616416931152344e-05, -2.288818359375e-05, -5.364416210795753e-05, 0.0, -2.360340477025602e-05, -1.1920928244535389e-07, -4.9709804443409666e-05, -4.768370445162873e-07, -0.000675201416015625, -0.0004215240478515625, -0.001262664794921875, -1.1444091796875e-05, -6.814746856689453, 0.0, -0.0005626678466796875, -1.9073486328125e-05, -0.20730876922607422, -0.00150299072265625, -5.14984130859375e-05, 0.0, -0.0019397735595703125, -2.288818359375e-05, -0.00012409687042236328, -1.33514404296875e-05, -3.0517578125e-05, -0.0004215240478515625, -0.000415802001953125, -7.62939453125e-06, -1.1444091796875e-05, -8.7738037109375e-05, -1.9073486328125e-06, -3.0875205993652344e-05, -3.814697265625e-06, -0.013679265975952148, 0.0, -0.0006423115846700966, -3.814697265625e-06, -1.1444091796875e-05, -0.0001621246337890625, -8.96453857421875e-05, -0.00096893310546875, -0.000179290771484375, -0.0003195997269358486, -5.6028297876764555e-06, -0.001446625916287303, 0.0, -9.5367431640625e-06, -0.0007724761962890625, -5.340576171875e-05, -0.0006304880953393877, -5.185469490243122e-05, -0.000255584716796875, -0.0001850128173828125, -0.000417828094214201, -0.00011491775512695312], "choice_history": [97, 285, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "hole3": "use", "hole0": "ArcaneExplosion", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 2, "hole0": "Arcane Explosion"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.063168545950006, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score_history": [-2.86102294921875e-05, -0.000675201416015625, 0.0, -7.152556463552173e-06, -1.311301275563892e-06, -9.536737479720614e-07, -3.492804535198957e-05, -2.9802276912960224e-06, -6.67572021484375e-05, -0.0002040863037109375, -0.0001506805419921875, 0.0, -3.7670110032195225e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1920928244535389e-07, 0.0, -0.00142669677734375, -1.33514404296875e-05, -0.0035573244094848633, -1.9073486328125e-06, -0.0007138252258300781, 0.0, -1.3709068298339844e-05, 0.0, -1.71661376953125e-05, -8.20159912109375e-05, -4.291534423828125e-06, -1.072883515007561e-05, -0.0055828094482421875, -0.0003223419189453125, -1.52587890625e-05, -0.0001316070556640625, -0.000217437744140625, -3.814697265625e-06, 0.0, -1.5616416931152344e-05, -2.288818359375e-05, -5.364416210795753e-05, 0.0, -2.360340477025602e-05, -1.1920928244535389e-07, -4.9709804443409666e-05, -4.768370445162873e-07, -0.000675201416015625, -0.0004215240478515625, -0.001262664794921875, -1.1444091796875e-05, -0.0011817216873168945, 0.0, -0.0001697540283203125, -0.0002040863037109375, -0.00023651123046875, -0.0001621246337890625, -5.340576171875e-05, 0.0, -0.0075626373291015625, -6.496906280517578e-05, -0.00013744831085205078, -1.1444091796875e-05, -5.53131103515625e-05, -0.000392913818359375, -0.0004024505615234375, -9.5367431640625e-06, -9.5367431640625e-06, -8.7738037109375e-05, -3.814697265625e-06, -2.777576446533203e-05, -3.814697265625e-06, -7.106489181518555, -3.814697265625e-06, -0.001892685890197754, -1.1444091796875e-05, -1.1444091796875e-05, -0.0004215240478515625, -6.103515625e-05, -0.0009517669677734375, -0.0006313323974609375, -0.0003535742580424994, -5.364412118069595e-06, -0.0010501600336283445, 0.0, -9.5367431640625e-06, -0.0007457733154296875, -5.14984130859375e-05, -0.0006149914115667343, -5.590759246842936e-05, -0.0002651214599609375, -0.0001888275146484375, -0.00040042350883595645, -0.00011301040649414062], "choice_history": [97, 285, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "_type": "Attribute", "attr": "minions"}]}}], "hole3": "use", "hole0": "ArcaneExplosion", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 2, "hole0": "Arcane Explosion"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.140970978055279, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.random_choice.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score_history": [-2.86102294921875e-05, -0.000675201416015625, 0.0, -7.152556463552173e-06, -1.311301275563892e-06, -9.536737479720614e-07, -3.492804535198957e-05, -2.9802276912960224e-06, -6.67572021484375e-05, -0.0002040863037109375, -0.0001506805419921875, 0.0, -3.7670110032195225e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1920928244535389e-07, 0.0, -0.00142669677734375, -1.33514404296875e-05, -0.0035573244094848633, -1.9073486328125e-06, -0.0007138252258300781, 0.0, -1.3709068298339844e-05, 0.0, -1.71661376953125e-05, -8.20159912109375e-05, -4.291534423828125e-06, -1.072883515007561e-05, -0.0055828094482421875, -0.0003223419189453125, -1.52587890625e-05, -0.0001316070556640625, -0.000217437744140625, -3.814697265625e-06, 0.0, -1.5616416931152344e-05, -2.288818359375e-05, -5.364416210795753e-05, 0.0, -2.360340477025602e-05, -1.1920928244535389e-07, -4.9709804443409666e-05, -4.768370445162873e-07, -0.000675201416015625, -0.0004215240478515625, -0.001262664794921875, -1.1444091796875e-05, -0.0011817216873168945, 0.0, -0.0001697540283203125, -0.0002040863037109375, -0.00023651123046875, -0.0001621246337890625, -5.340576171875e-05, 0.0, -0.0075626373291015625, -6.496906280517578e-05, -0.00013744831085205078, -1.1444091796875e-05, -5.53131103515625e-05, -0.000392913818359375, -0.0004024505615234375, -9.5367431640625e-06, -9.5367431640625e-06, -8.7738037109375e-05, -3.814697265625e-06, -2.777576446533203e-05, -3.814697265625e-06, -0.013510465621948242, 0.0, -0.0007616978837177157, -3.814697265625e-06, -1.1444091796875e-05, -0.000152587890625, -9.1552734375e-05, -0.001010894775390625, -0.0001735687255859375, -0.0003166195238009095, -5.483620952873025e-06, -7.181339263916016, -1.4305104514278355e-06, -0.0001850128173828125, -0.017479896545410156, -0.0034618377685546875, -0.009750181809067726, -0.00010919552005361766], "choice_history": [97, 285, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "add_buff", "<EOS>", 346, 69, 290, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template54", "hole0": "Frozen"}], "_type": "Template77", "hole1": "add_buff", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "hole3": "use", "hole0": "ArcaneExplosion", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 2, "hole0": "Arcane Explosion"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.255007508579283, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.add_buff(Buff(Frozen()))\n"}, {"score_history": [-2.86102294921875e-05, -0.000675201416015625, 0.0, -7.152556463552173e-06, -1.311301275563892e-06, -9.536737479720614e-07, -3.492804535198957e-05, -2.9802276912960224e-06, -6.67572021484375e-05, -0.0002040863037109375, -0.0001506805419921875, 0.0, -3.7670110032195225e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1920928244535389e-07, 0.0, -0.00142669677734375, -1.33514404296875e-05, -0.0035573244094848633, -1.9073486328125e-06, -0.0007138252258300781, 0.0, -1.3709068298339844e-05, 0.0, -1.71661376953125e-05, -8.20159912109375e-05, -4.291534423828125e-06, -1.072883515007561e-05, -0.0055828094482421875, -0.0003223419189453125, -1.52587890625e-05, -0.0001316070556640625, -0.000217437744140625, -3.814697265625e-06, 0.0, -1.5616416931152344e-05, -2.288818359375e-05, -5.364416210795753e-05, 0.0, -2.360340477025602e-05, -1.1920928244535389e-07, -4.9709804443409666e-05, -4.768370445162873e-07, -0.000675201416015625, -0.0004215240478515625, -0.001262664794921875, -1.1444091796875e-05, -0.0011817216873168945, 0.0, -0.0001697540283203125, -0.0002040863037109375, -0.00023651123046875, -0.0001621246337890625, -5.340576171875e-05, 0.0, -0.0075626373291015625, -6.496906280517578e-05, -0.00013744831085205078, -1.1444091796875e-05, -5.53131103515625e-05, -0.000392913818359375, -0.0004024505615234375, -9.5367431640625e-06, -9.5367431640625e-06, -8.7738037109375e-05, -3.814697265625e-06, -2.777576446533203e-05, -3.814697265625e-06, -7.3294219970703125, 0.0, -0.035298824310302734, -3.814697265625e-06, -1.52587890625e-05, -0.00057220458984375, -4.00543212890625e-05, -0.0017337799072265625, -0.0001964569091796875, -0.00031495073926635087, -5.722038622479886e-06, -0.0012644882081076503, 0.0, -9.5367431640625e-06, -0.0008087158203125, -5.14984130859375e-05, -0.0006341841071844101, -5.4238757002167404e-05, -0.0002346038818359375, -0.0001735687255859375, -0.00043892813846468925, -0.00011682510375976562], "choice_history": [97, 285, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "game", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "minions"}]}}], "hole3": "use", "hole0": "ArcaneExplosion", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 2, "hole0": "Arcane Explosion"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.398032211397762, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.game.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score_history": [-2.86102294921875e-05, -0.000675201416015625, 0.0, -7.152556463552173e-06, -1.311301275563892e-06, -9.536737479720614e-07, -3.492804535198957e-05, -2.9802276912960224e-06, -6.67572021484375e-05, -0.0002040863037109375, -0.0001506805419921875, 0.0, -3.7670110032195225e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1920928244535389e-07, 0.0, -0.00142669677734375, -1.33514404296875e-05, -0.0035573244094848633, -1.9073486328125e-06, -0.0007138252258300781, 0.0, -1.3709068298339844e-05, 0.0, -1.71661376953125e-05, -8.20159912109375e-05, -4.291534423828125e-06, -1.072883515007561e-05, -0.0055828094482421875, -0.0003223419189453125, -1.52587890625e-05, -0.0001316070556640625, -0.000217437744140625, -3.814697265625e-06, 0.0, -1.5616416931152344e-05, -2.288818359375e-05, -5.364416210795753e-05, 0.0, -2.360340477025602e-05, -1.1920928244535389e-07, -4.9709804443409666e-05, -4.768370445162873e-07, -0.000675201416015625, -0.0004215240478515625, -0.001262664794921875, -1.1444091796875e-05, -0.0011817216873168945, 0.0, -0.0001697540283203125, -0.0002040863037109375, -0.00023651123046875, -0.0001621246337890625, -5.340576171875e-05, 0.0, -0.0075626373291015625, -6.496906280517578e-05, -0.00013744831085205078, -1.1444091796875e-05, -5.53131103515625e-05, -0.000392913818359375, -0.0004024505615234375, -9.5367431640625e-06, -9.5367431640625e-06, -8.7738037109375e-05, -3.814697265625e-06, -2.777576446533203e-05, -3.814697265625e-06, -7.43239688873291, -0.0001468658447265625, -0.0004082917876075953, -9.5367431640625e-06, -1.1444091796875e-05, -0.0006427764892578125, -4.1961669921875e-05, -0.001476287841796875, -0.0002593994140625, -0.00026011443696916103, -5.6028297876764555e-06, -0.001160421292297542, 0.0, -9.5367431640625e-06, -0.0008392333984375, -5.14984130859375e-05, -0.0006177339237183332, -5.686121585313231e-05, -0.000270843505859375, -0.0002002716064453125, -0.0004496568872127682, -0.00011682510375976562], "choice_history": [97, 285, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "opponent", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "minions"}]}}], "hole3": "use", "hole0": "ArcaneExplosion", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 2, "hole0": "Arcane Explosion"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.466074612098723, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.opponent.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score_history": [-2.86102294921875e-05, -0.000675201416015625, 0.0, -7.152556463552173e-06, -1.311301275563892e-06, -9.536737479720614e-07, -3.492804535198957e-05, -2.9802276912960224e-06, -6.67572021484375e-05, -0.0002040863037109375, -0.0001506805419921875, 0.0, -3.7670110032195225e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1920928244535389e-07, 0.0, -0.00142669677734375, -1.33514404296875e-05, -0.0035573244094848633, -1.9073486328125e-06, -0.0007138252258300781, 0.0, -1.3709068298339844e-05, 0.0, -1.71661376953125e-05, -8.20159912109375e-05, -4.291534423828125e-06, -1.072883515007561e-05, -0.0055828094482421875, -0.0003223419189453125, -1.52587890625e-05, -0.0001316070556640625, -0.000217437744140625, -3.814697265625e-06, 0.0, -1.5616416931152344e-05, -2.288818359375e-05, -5.364416210795753e-05, 0.0, -2.360340477025602e-05, -1.1920928244535389e-07, -4.9709804443409666e-05, -4.768370445162873e-07, -0.000675201416015625, -0.0004215240478515625, -0.001262664794921875, -1.1444091796875e-05, -0.0011817216873168945, 0.0, -0.0001697540283203125, -0.0002040863037109375, -0.00023651123046875, -0.0001621246337890625, -5.340576171875e-05, 0.0, -0.0075626373291015625, -6.496906280517578e-05, -0.00013744831085205078, -1.1444091796875e-05, -5.53131103515625e-05, -0.000392913818359375, -0.0004024505615234375, -9.5367431640625e-06, -9.5367431640625e-06, -8.7738037109375e-05, -3.814697265625e-06, -2.777576446533203e-05, -3.814697265625e-06, -0.013510465621948242, 0.0, -0.0007616978837177157, -3.814697265625e-06, -1.1444091796875e-05, -0.000152587890625, -9.1552734375e-05, -0.001010894775390625, -0.0001735687255859375, -0.0003166195238009095, -5.483620952873025e-06, -0.001498881378211081, 0.0, -9.5367431640625e-06, -0.00078582763671875, -5.14984130859375e-05, -7.426082611083984, -0.00014125302550382912, -0.00011444091796875, -0.0002079010009765625, -0.00046132324496284127, -0.00012648104166146368], "choice_history": [97, 285, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "hole3": "use", "hole0": "ArcaneExplosion", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 2, "hole0": "Arcane Explosion"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.472160444178584, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-2.86102294921875e-05, -0.000675201416015625, 0.0, -7.152556463552173e-06, -1.311301275563892e-06, -9.536737479720614e-07, -3.492804535198957e-05, -2.9802276912960224e-06, -6.67572021484375e-05, -0.0002040863037109375, -0.0001506805419921875, 0.0, -3.7670110032195225e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1920928244535389e-07, 0.0, -0.00142669677734375, -1.33514404296875e-05, -0.0035573244094848633, -1.9073486328125e-06, -0.0007138252258300781, 0.0, -1.3709068298339844e-05, 0.0, -1.71661376953125e-05, -8.20159912109375e-05, -4.291534423828125e-06, -1.072883515007561e-05, -6.957416534423828, -0.00017547607421875, -1.33514404296875e-05, -5.7220458984375e-05, -0.000247955322265625, -7.62939453125e-06, 0.0, -1.9311904907226562e-05, -2.09808349609375e-05, -7.08102888893336e-05, 0.0, -2.3245793272508308e-05, -1.1920928244535389e-07, -3.3497679396532476e-05, -3.576278118089249e-07, -0.08631324768066406, -9.5367431640625e-06, -0.0017490386962890625, -0.0001125335693359375, -4.00543212890625e-05, -0.06891471147537231, -2.384185791015625e-06, -0.00257110595703125, -4.1961669921875e-05, -3.62396240234375e-05, -3.814697265625e-05, -0.0001678466796875, 0.0, -0.0004974603652954102, -3.814697265625e-06, -0.0004712343215942383, -9.5367431640625e-06, -2.6702880859375e-05, -0.00019073486328125, -0.00080108642578125, -1.1444091796875e-05, -9.5367431640625e-06, -0.000102996826171875, -1.9073486328125e-06, -4.2438507080078125e-05, -3.814697265625e-06, -0.014133214950561523, 0.0, -0.0004082600644323975, -3.814697265625e-06, -4.9591064453125e-05, -6.103515625e-05, -0.00018310546875, -8.20159912109375e-05, -0.007741332054138184, 0.0, -0.33226439356803894, -4.768371127283899e-06, -0.0004215240478515625, -0.0002193450927734375, -1.1444091796875e-05, -3.4332275390625e-05, 0.0, -7.2479248046875e-05, -1.1444091796875e-05, -1.811981201171875e-05, -2.1457672119140625e-06, -0.004294514190405607, -1.9073486328125e-06, -0.11230230331420898, 0.0, -0.09937572479248047, -6.29425048828125e-05, -0.0004138946533203125, -0.00011444091796875, -0.024623990058898926, 0.0, -0.4262513816356659, -5.364412118069595e-06, -0.0001392364501953125, -0.002063751220703125, -2.47955322265625e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0003795623779296875, -3.814697265625e-06, -1.58548318722751e-05, -3.814697265625e-06, -0.07533595710992813, 0.0, -0.0021806953009217978, -2.264974000354414e-06, -0.14065837860107422, -0.0001964569091796875, -1.9073486328125e-05, -5.7220458984375e-06, -0.11171460151672363, 0.0, -0.03784370422363281, -5.7220458984375e-06, -0.0008298158645629883, -5.9604644775390625e-06, -0.000255584716796875, -0.030858993530273438, -4.9591064453125e-05, -0.0030231475830078125, -7.82012939453125e-05, -0.0007811784162186086, -1.1920922133867862e-06, -0.0008320947526954114, 0.0, -1.9073486328125e-06, -0.0011425018310546875, -8.392333984375e-05, -0.0008200275478884578, -4.458328112377785e-05, -0.000774383544921875, -6.4849853515625e-05, -0.0005863900878466666, -5.0187110900878906e-05, -0.36606311798095703, -6.67572021484375e-05, -0.018560409545898438, -1.9073486328125e-05, -0.0015583038330078125, -3.814697265625e-06, -0.0015212821308523417, -4.768370445162873e-07, -0.0074578505009412766, -3.814697265625e-06], "choice_history": [97, 285, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 363, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "extend", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "append", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "hero", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 21, 174, "targets", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Template77", "hole1": "extend", "hole0": {"_type": "Name", "id": "targets"}}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Template77", "hole1": "append", "hole0": {"_type": "Name", "id": "targets"}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Name", "id": "targets"}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "ArcaneExplosion", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 2, "hole0": "Arcane Explosion"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -8.956653112651722, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        targets.append(game.current_player.hero)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}]}
{"index": 4, "beams": [{"score_history": [-3.24249267578125e-05, -0.000156402587890625, -2.0265579223632812e-06, -1.5973972040228546e-05, -1.311301275563892e-06, -1.2874601452494971e-05, -2.4199480321840383e-05, -5.841247457283316e-06, -5.14984130859375e-05, -0.0005207061767578125, -0.0002918243408203125, -2.384184699621983e-05, -4.8875728680286556e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.3841855067985307e-07, 0.0, -0.00213623046875, -0.00028228759765625, -0.0077381134033203125, -3.814697265625e-06, -0.0013580322265625, -3.814697265625e-06, -7.2479248046875e-05, 0.0, -0.00031280517578125, -0.0014400482177734375, -4.887576324108522e-06, -6.079673767089844e-06, -0.012002944946289062, -4.38690185546875e-05, -9.34600830078125e-05, -9.72747802734375e-05, -8.7738037109375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.849095471901819e-05, -2.682209014892578e-05, -3.886222839355469e-05, -1.7523765563964844e-05, -5.829300789628178e-05, 0.0, -3.898143404512666e-05, -1.0728830375228426e-06, -0.000797271728515625, -0.0003871917724609375, -0.00034332275390625, -3.24249267578125e-05, -0.006730477791279554, -1.1920928244535389e-07, -0.00226593017578125, -1.9073486328125e-05, -0.0001544952392578125, -0.0001277923583984375, -0.00037312493077479303, -9.536738616588991e-07, -0.0004444122314453125, -3.62396240234375e-05, -7.62939453125e-06, -0.0002087354368995875, -7.2479248046875e-05, -0.0015239715576171875, -1.9073486328125e-06, -0.00038803741335868835, -5.960446742392378e-06, -0.000308990478515625, -0.0013980865478515625, -0.00018310546875, -0.0012636184692382812, -5.340576171875e-05, -1.52587890625e-05, -2.86102294921875e-05, -0.00010692579962778836, 0.0, -0.000819087028503418, -5.7220458984375e-06], "choice_history": [97, 285, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "c", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "2", "<EOS>", 358, 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "c"}, "body": [{"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}]}}], "hole3": "use", "hole0": "ArcaneIntellect", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 3, "hole0": "Arcane Intellect"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -0.045213149268271025, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"score_history": [-3.24249267578125e-05, -0.000156402587890625, -2.0265579223632812e-06, -1.5973972040228546e-05, -1.311301275563892e-06, -1.2874601452494971e-05, -2.4199480321840383e-05, -5.841247457283316e-06, -5.14984130859375e-05, -0.0005207061767578125, -0.0002918243408203125, -2.384184699621983e-05, -4.8875728680286556e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.3841855067985307e-07, 0.0, -0.00213623046875, -0.00028228759765625, -5.013796806335449, -4.00543212890625e-05, -0.0006885528564453125, -5.7220458984375e-06, -7.82012939453125e-05, 0.0, -0.0003299713134765625, -0.0014286041259765625, -3.933904736186378e-06, -5.9604644775390625e-06, -0.005146980285644531, -3.24249267578125e-05, -8.96453857421875e-05, -0.000102996826171875, -9.34600830078125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.5391527742613107e-05, -2.682209014892578e-05, -4.076957702636719e-05, -1.5735626220703125e-05, -6.15115714026615e-05, -1.1920928244535389e-07, -3.9219852624228224e-05, -1.1920922133867862e-06, -0.000949859619140625, -0.0004177093505859375, -0.00032806396484375, -3.62396240234375e-05, -0.006564868614077568, -1.1920928244535389e-07, -0.0022916793823242188, -1.9073486328125e-05, -0.0001430511474609375, -0.00012969970703125, -0.0003759859537240118, -9.536738616588991e-07, -0.0004425048828125, -3.814697265625e-05, -7.62939453125e-06, -0.0002188682119594887, -7.05718994140625e-05, -0.0015773773193359375, -1.9073486328125e-06, -0.00039484165608882904, -6.079655122448457e-06, -0.0003070831298828125, -0.001407623291015625, -0.000186920166015625, -0.0012664794921875, -5.340576171875e-05, -1.52587890625e-05, -2.86102294921875e-05, -0.00011228967196075246, 0.0, -0.0008209943771362305, -5.7220458984375e-06], "choice_history": [97, 285, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "c", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "2", "<EOS>", 358, 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "c"}, "body": [{"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}]}}], "hole3": "use", "hole0": "ArcaneIntellect", "_type": "Template5", "hole2": [{"hole3": "ROGUE", "hole2": "MAGE", "_type": "Template34", "hole1": 3, "hole0": "Arcane Intellect"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.043907073499852, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.ROGUE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"score_history": [-3.24249267578125e-05, -0.000156402587890625, -2.0265579223632812e-06, -1.5973972040228546e-05, -1.311301275563892e-06, -1.2874601452494971e-05, -2.4199480321840383e-05, -5.841247457283316e-06, -5.14984130859375e-05, -0.0005207061767578125, -0.0002918243408203125, -2.384184699621983e-05, -4.8875728680286556e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.3841855067985307e-07, 0.0, -0.00213623046875, -0.00028228759765625, -0.0077381134033203125, -3.814697265625e-06, -0.0013580322265625, -3.814697265625e-06, -7.2479248046875e-05, 0.0, -0.00031280517578125, -0.0014400482177734375, -4.887576324108522e-06, -6.079673767089844e-06, -0.012002944946289062, -4.38690185546875e-05, -9.34600830078125e-05, -9.72747802734375e-05, -8.7738037109375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.849095471901819e-05, -2.682209014892578e-05, -3.886222839355469e-05, -1.7523765563964844e-05, -5.829300789628178e-05, 0.0, -3.898143404512666e-05, -1.0728830375228426e-06, -0.000797271728515625, -0.0003871917724609375, -0.00034332275390625, -3.24249267578125e-05, -5.2182536125183105, -4.0531158447265625e-06, -0.0015354156494140625, -1.33514404296875e-05, -0.000102996826171875, -2.6702880859375e-05, -0.0004427431267686188, -2.3841855067985307e-07, -0.0004367828369140625, -4.1961669921875e-05, -7.62939453125e-06, -0.00023269650409929454, -0.0001010894775390625, -0.0014209747314453125, -1.9073486328125e-06, -0.0002584774047136307, -5.125986263010418e-06, -0.00030517578125, -0.0012950897216796875, -0.000171661376953125, -0.00128173828125, -5.53131103515625e-05, -1.52587890625e-05, -2.86102294921875e-05, -0.00010048894182546064, 0.0, -0.000811457633972168, -5.7220458984375e-06], "choice_history": [97, 285, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "2", "<EOS>", 358, 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}]}}], "hole3": "use", "hole0": "ArcaneIntellect", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 3, "hole0": "Arcane Intellect"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.255625274325496, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            player.draw()\n"}, {"score_history": [-3.24249267578125e-05, -0.000156402587890625, -2.0265579223632812e-06, -1.5973972040228546e-05, -1.311301275563892e-06, -1.2874601452494971e-05, -2.4199480321840383e-05, -5.841247457283316e-06, -5.14984130859375e-05, -0.0005207061767578125, -0.0002918243408203125, -2.384184699621983e-05, -4.8875728680286556e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.3841855067985307e-07, 0.0, -6.520529747009277, -8.0108642578125e-05, -0.0016803741455078125, -1.33514404296875e-05, -0.0015145540237426758, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -0.0003108978271484375, -0.001560211181640625, -5.245203283266164e-06, -4.291534423828125e-06, -0.010480880737304688, -3.814697265625e-05, -9.34600830078125e-05, -9.72747802734375e-05, -8.58306884765625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -2.6226003683404997e-05, -2.872943878173828e-05, -3.898143768310547e-05, -1.7523765563964844e-05, -6.043871690053493e-05, 0.0, -4.1127201257040724e-05, -1.1920922133867862e-06, -0.0008392333984375, -0.000392913818359375, -0.0003376007080078125, -3.24249267578125e-05, -0.006809036247432232, -1.1920928244535389e-07, -0.002349853515625, -1.9073486328125e-05, -0.000148773193359375, -0.0001277923583984375, -0.0003757475351449102, -9.536738616588991e-07, -0.0004444122314453125, -3.62396240234375e-05, -7.62939453125e-06, -0.0002131461660610512, -7.05718994140625e-05, -0.0015392303466796875, -1.9073486328125e-06, -0.00039217062294483185, -6.079655122448457e-06, -0.0003070831298828125, -0.001407623291015625, -0.000186920166015625, -0.0012683868408203125, -5.340576171875e-05, -1.52587890625e-05, -2.86102294921875e-05, -0.00011002492828993127, 0.0, -0.000819087028503418, -5.7220458984375e-06], "choice_history": [97, 285, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "c", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "2", "<EOS>", 358, 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "c"}, "body": [{"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}]}}], "hole3": "use", "hole0": "ArcaneIntellect", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "ROGUE", "_type": "Template34", "hole1": 3, "hole0": "Arcane Intellect"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.5563086331591975, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"score_history": [-3.24249267578125e-05, -0.000156402587890625, -2.0265579223632812e-06, -1.5973972040228546e-05, -1.311301275563892e-06, -1.2874601452494971e-05, -2.4199480321840383e-05, -5.841247457283316e-06, -5.14984130859375e-05, -0.0005207061767578125, -0.0002918243408203125, -2.384184699621983e-05, -4.8875728680286556e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.3841855067985307e-07, 0.0, -0.00213623046875, -0.00028228759765625, -0.0077381134033203125, -3.814697265625e-06, -0.0013580322265625, -3.814697265625e-06, -7.2479248046875e-05, 0.0, -0.00031280517578125, -0.0014400482177734375, -4.887576324108522e-06, -6.079673767089844e-06, -6.6449127197265625, -0.001873016357421875, -0.0001468658447265625, -0.001552581787109375, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -5.161761509953067e-05, -2.5033950805664062e-05, -4.625318615580909e-05, -1.7762184143066406e-05, -0.00011205453483853489, 0.0, -5.4836247727507725e-05, -9.536738616588991e-07], "choice_history": [97, 285, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 358, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}], "hole3": "use", "hole0": "ArcaneIntellect", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 3, "hole0": "Arcane Intellect"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.6633881306160845, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n"}, {"score_history": [-3.24249267578125e-05, -0.000156402587890625, -2.0265579223632812e-06, -1.5973972040228546e-05, -1.311301275563892e-06, -1.2874601452494971e-05, -2.4199480321840383e-05, -5.841247457283316e-06, -5.14984130859375e-05, -0.0005207061767578125, -0.0002918243408203125, -2.384184699621983e-05, -4.8875728680286556e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.3841855067985307e-07, 0.0, -0.00213623046875, -0.00028228759765625, -0.0077381134033203125, -3.814697265625e-06, -0.0013580322265625, -3.814697265625e-06, -7.2479248046875e-05, 0.0, -0.00031280517578125, -0.0014400482177734375, -4.887576324108522e-06, -6.079673767089844e-06, -7.241373062133789, -2.6702880859375e-05, -5.7220458984375e-05, -9.1552734375e-05, -4.9591064453125e-05, -4.57763671875e-05, -1.9073486328125e-06, -3.68356668332126e-05, -3.4332275390625e-05, -3.0875205993652344e-05, -7.867813110351562e-06, -4.863715003011748e-05, 0.0, -2.5987625122070312e-05, -8.344646857949556e-07, -0.01648712158203125, -0.0028076171875, -0.0001811981201171875, -5.7220458984375e-06, -0.0064743696711957455, -1.1920928244535389e-07, -0.0047588348388671875, -1.71661376953125e-05, -0.00011444091796875, -5.340576171875e-05, -0.0005165338516235352, -4.768370445162873e-07, -0.000335693359375, -3.24249267578125e-05, -7.62939453125e-06, -0.0002100467390846461, -7.62939453125e-05, -0.0013103485107421875, -1.9073486328125e-06, -0.00042496994137763977, -5.722029527532868e-06, -0.000347137451171875, -0.00131988525390625, -0.00018310546875, -0.0011959075927734375, -5.53131103515625e-05, -1.52587890625e-05, -2.6702880859375e-05, -0.00010406506044091657, 0.0, -0.000788569450378418, -5.7220458984375e-06, -0.015027046203613281, -8.20159912109375e-05, -0.0037889480590820312, -1.33514404296875e-05, -0.0004749298095703125, -3.814697265625e-06, -4.267659824108705e-05, -2.3841855067985307e-07, -0.0002435445785522461, -3.24249267578125e-05], "choice_history": [97, 285, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "c", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "2", "<EOS>", 358, 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "c"}, "body": [{"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}]}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "ArcaneIntellect", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 3, "hole0": "Arcane Intellect"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.313954449861676, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n        player.draw()\n"}, {"score_history": [-3.24249267578125e-05, -0.000156402587890625, -2.0265579223632812e-06, -1.5973972040228546e-05, -1.311301275563892e-06, -1.2874601452494971e-05, -2.4199480321840383e-05, -5.841247457283316e-06, -5.14984130859375e-05, -0.0005207061767578125, -0.0002918243408203125, -2.384184699621983e-05, -4.8875728680286556e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.3841855067985307e-07, 0.0, -0.00213623046875, -0.00028228759765625, -0.0077381134033203125, -3.814697265625e-06, -7.276859283447266, -1.9073486328125e-06, -0.032108306884765625, 0.0, -0.0004100799560546875, -0.00229644775390625, -1.0371186363045126e-05, -4.649161837733118e-06, -0.011912345886230469, -4.57763671875e-05, -8.392333984375e-05, -8.58306884765625e-05, -6.29425048828125e-05, -1.52587890625e-05, 0.0, -3.230560105293989e-05, -3.254413604736328e-05, -4.291534423828125e-05, -1.9431114196777344e-05, -6.318050873233005e-05, 0.0, -3.957747685490176e-05, -1.311301275563892e-06, -0.0007991790771484375, -0.0003719329833984375, -0.0003490447998046875, -3.4332275390625e-05, -0.007036943919956684, -1.1920928244535389e-07, -0.00279998779296875, -1.9073486328125e-05, -0.0001430511474609375, -0.000141143798828125, -0.00039625141653232276, -1.311301275563892e-06, -0.0004596710205078125, -3.814697265625e-05, -9.5367431640625e-06, -0.00025379651924595237, -6.4849853515625e-05, -0.00160980224609375, -1.9073486328125e-06, -0.00042040087282657623, -6.318072337307967e-06, -0.0002918243408203125, -0.0013942718505859375, -0.000179290771484375, -0.0012912750244140625, -5.340576171875e-05, -1.52587890625e-05, -2.86102294921875e-05, -0.00011252806871198118, 0.0, -0.000838160514831543, -7.62939453125e-06], "choice_history": [97, 285, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "c", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "2", "<EOS>", 358, 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "c"}, "body": [{"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}]}}], "hole3": "create_weapon", "hole0": "ArcaneIntellect", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 3, "hole0": "Arcane Intellect"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.3546498640734725, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"score_history": [-3.24249267578125e-05, -0.000156402587890625, -2.0265579223632812e-06, -1.5973972040228546e-05, -1.311301275563892e-06, -1.2874601452494971e-05, -2.4199480321840383e-05, -5.841247457283316e-06, -5.14984130859375e-05, -0.0005207061767578125, -0.0002918243408203125, -2.384184699621983e-05, -4.8875728680286556e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.3841855067985307e-07, 0.0, -0.00213623046875, -0.00028228759765625, -0.0077381134033203125, -3.814697265625e-06, -0.0013580322265625, -3.814697265625e-06, -7.2479248046875e-05, 0.0, -0.00031280517578125, -0.0014400482177734375, -4.887576324108522e-06, -6.079673767089844e-06, -0.012002944946289062, -4.38690185546875e-05, -9.34600830078125e-05, -9.72747802734375e-05, -8.7738037109375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.849095471901819e-05, -2.682209014892578e-05, -3.886222839355469e-05, -1.7523765563964844e-05, -5.829300789628178e-05, 0.0, -3.898143404512666e-05, -1.0728830375228426e-06, -0.000797271728515625, -0.0003871917724609375, -0.00034332275390625, -3.24249267578125e-05, -0.006730477791279554, -1.1920928244535389e-07, -0.00226593017578125, -1.9073486328125e-05, -0.0001544952392578125, -0.0001277923583984375, -0.00037312493077479303, -9.536738616588991e-07, -0.0004444122314453125, -3.62396240234375e-05, -7.62939453125e-06, -0.0002087354368995875, -7.2479248046875e-05, -0.0015239715576171875, -1.9073486328125e-06, -0.00038803741335868835, -5.960446742392378e-06, -0.000308990478515625, -0.0013980865478515625, -0.00018310546875, -0.0012636184692382812, -5.340576171875e-05, -1.52587890625e-05, -2.86102294921875e-05, -0.00010692579962778836, 0.0, -7.352564811706543, -1.1920928244535389e-07], "choice_history": [97, 285, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "c", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "2", "<EOS>", 358, 106, 155, 36, 317, 21, 174, "player", "<EOS>", "game", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "c"}, "body": [{"value": {"_type": "Template76", "hole1": "game", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}]}}], "hole3": "use", "hole0": "ArcaneIntellect", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 3, "hole0": "Arcane Intellect"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.396953271109695, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.game()\n"}, {"score_history": [-3.24249267578125e-05, -0.000156402587890625, -2.0265579223632812e-06, -1.5973972040228546e-05, -1.311301275563892e-06, -1.2874601452494971e-05, -2.4199480321840383e-05, -5.841247457283316e-06, -5.14984130859375e-05, -0.0005207061767578125, -0.0002918243408203125, -2.384184699621983e-05, -4.8875728680286556e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.3841855067985307e-07, 0.0, -0.00213623046875, -0.00028228759765625, -0.0077381134033203125, -3.814697265625e-06, -0.0013580322265625, -3.814697265625e-06, -7.2479248046875e-05, 0.0, -0.00031280517578125, -0.0014400482177734375, -4.887576324108522e-06, -6.079673767089844e-06, -0.012002944946289062, -4.38690185546875e-05, -9.34600830078125e-05, -9.72747802734375e-05, -8.7738037109375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.849095471901819e-05, -2.682209014892578e-05, -3.886222839355469e-05, -1.7523765563964844e-05, -5.829300789628178e-05, 0.0, -3.898143404512666e-05, -1.0728830375228426e-06, -0.000797271728515625, -0.0003871917724609375, -0.00034332275390625, -3.24249267578125e-05, -0.006730477791279554, -1.1920928244535389e-07, -7.23448371887207, -0.000568389892578125, -0.027403853833675385, -0.0008721351623535156, -0.11320977658033371, 0.0, -1.71661376953125e-05, -0.000743865966796875, -0.0030117034912109375, -0.0021619796752929688, -9.72747802734375e-05, -4.9591064453125e-05, -1.52587890625e-05, -6.0200611187610775e-05, 0.0, -0.000722050666809082, -3.814697265625e-06], "choice_history": [97, 285, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "c", "<EOS>", 35, 315, "range", "<EOS>", "3", "<EOS>", 358, 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "c"}, "body": [{"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "_type": "For", "iter": {"_type": "Template74", "hole1": 3, "hole0": "range"}}], "hole3": "use", "hole0": "ArcaneIntellect", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 3, "hole0": "Arcane Intellect"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.418820376304971, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(3):\n            player.draw()\n"}, {"score_history": [-3.24249267578125e-05, -0.000156402587890625, -2.0265579223632812e-06, -1.5973972040228546e-05, -1.311301275563892e-06, -1.2874601452494971e-05, -2.4199480321840383e-05, -5.841247457283316e-06, -5.14984130859375e-05, -0.0005207061767578125, -0.0002918243408203125, -2.384184699621983e-05, -4.8875728680286556e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.3841855067985307e-07, 0.0, -0.00213623046875, -0.00028228759765625, -7.601711273193359, -1.9073486328125e-06, -0.0075397491455078125, -1.9073486328125e-06, -0.0071353912353515625, 0.0, -0.0007648468017578125, -0.0010662078857421875, -4.29153169534402e-06, -5.841255187988281e-06, -0.0062847137451171875, -3.814697265625e-05, -9.5367431640625e-05, -8.7738037109375e-05, -9.1552734375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.0279046768555418e-05, -2.682209014892578e-05, -4.267692565917969e-05, -1.5735626220703125e-05, -6.0081099945819005e-05, -1.1920928244535389e-07, -3.910064333467744e-05, -1.1920922133867862e-06, -0.0009059906005859375, -0.0004024505615234375, -0.00034332275390625, -3.62396240234375e-05, -0.006545074284076691, -1.1920928244535389e-07, -0.0024290084838867188, -1.9073486328125e-05, -0.000141143798828125, -0.0001373291015625, -0.00037908536614850163, -1.0728830375228426e-06, -0.000438690185546875, -3.814697265625e-05, -7.62939453125e-06, -0.0002244710485683754, -7.05718994140625e-05, -0.0016002655029296875, -1.9073486328125e-06, -0.00039459019899368286, -6.318072337307967e-06, -0.00030517578125, -0.0014209747314453125, -0.00019073486328125, -0.0012760162353515625, -5.340576171875e-05, -1.52587890625e-05, -2.6702880859375e-05, -0.0001157463775598444, 0.0, -0.000815272331237793, -5.7220458984375e-06], "choice_history": [97, 285, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "c", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "2", "<EOS>", 358, 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "c"}, "body": [{"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}]}}], "hole3": "use", "hole0": "ArcaneIntellect", "_type": "Template5", "hole2": [{"hole3": "EPIC", "hole2": "MAGE", "_type": "Template34", "hole1": 3, "hole0": "Arcane Intellect"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.647029646428635, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"score_history": [-3.24249267578125e-05, -0.000156402587890625, -2.0265579223632812e-06, -1.5973972040228546e-05, -1.311301275563892e-06, -1.2874601452494971e-05, -2.4199480321840383e-05, -5.841247457283316e-06, -5.14984130859375e-05, -0.0005207061767578125, -0.0002918243408203125, -2.384184699621983e-05, -4.8875728680286556e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.3841855067985307e-07, 0.0, -0.00213623046875, -0.00028228759765625, -0.0077381134033203125, -3.814697265625e-06, -0.0013580322265625, -3.814697265625e-06, -7.2479248046875e-05, 0.0, -0.00031280517578125, -0.0014400482177734375, -4.887576324108522e-06, -6.079673767089844e-06, -0.012002944946289062, -4.38690185546875e-05, -9.34600830078125e-05, -9.72747802734375e-05, -8.7738037109375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.849095471901819e-05, -2.682209014892578e-05, -3.886222839355469e-05, -1.7523765563964844e-05, -5.829300789628178e-05, 0.0, -3.898143404512666e-05, -1.0728830375228426e-06, -0.000797271728515625, -0.0003871917724609375, -0.00034332275390625, -3.24249267578125e-05, -0.006730477791279554, -1.1920928244535389e-07, -0.00226593017578125, -1.9073486328125e-05, -0.0001544952392578125, -0.0001277923583984375, -0.00037312493077479303, -9.536738616588991e-07, -0.0004444122314453125, -3.62396240234375e-05, -7.62939453125e-06, -0.0002087354368995875, -7.2479248046875e-05, -0.0015239715576171875, -1.9073486328125e-06, -7.982944488525391, -1.0967253729177173e-05, -0.0001373291015625, -0.001422882080078125, -0.0001850128173828125, -0.0008087158203125, -2.09808349609375e-05, -2.288818359375e-05, -1.71661376953125e-05, -9.417191904503852e-05, 0.0, -0.000990748405456543, -5.7220458984375e-06], "choice_history": [97, 285, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "c", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "3", "<EOS>", 358, 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "c"}, "body": [{"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"n": 3, "_type": "Num"}]}}], "hole3": "use", "hole0": "ArcaneIntellect", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 3, "hole0": "Arcane Intellect"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -8.027297413914617, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 3):\n            player.draw()\n"}, {"score_history": [-3.24249267578125e-05, -0.000156402587890625, -2.0265579223632812e-06, -1.5973972040228546e-05, -1.311301275563892e-06, -1.2874601452494971e-05, -2.4199480321840383e-05, -5.841247457283316e-06, -5.14984130859375e-05, -0.0005207061767578125, -0.0002918243408203125, -2.384184699621983e-05, -4.8875728680286556e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.3841855067985307e-07, 0.0, -0.00213623046875, -0.00028228759765625, -0.0077381134033203125, -3.814697265625e-06, -0.0013580322265625, -3.814697265625e-06, -7.2479248046875e-05, 0.0, -0.00031280517578125, -0.0014400482177734375, -4.887576324108522e-06, -6.079673767089844e-06, -5.324563026428223, -0.00812530517578125, -4.38690185546875e-05, -6.67572021484375e-05, -3.814697265625e-05, -1.33514404296875e-05, 0.0, -5.280965706333518e-05, -2.300739288330078e-05, -2.1457672119140625e-05, -9.775161743164062e-06, -6.115389987826347e-05, 0.0, -4.470347994356416e-05, -1.4305104514278355e-06, -0.45699405670166016, -5.14984130859375e-05, -1.0988750457763672, -0.00025177001953125, -4.9591064453125e-05, 0.0, -0.2934192419052124, 0.0, -0.16058504581451416, 0.0, -0.04901277646422386, 0.0, -3.24249267578125e-05, -0.04163837432861328, -0.000720977783203125, -0.0007648468017578125, -1.9073486328125e-06, -2.3841854272177443e-05, -1.1920928244535389e-07, -0.08798480033874512, -0.00028252601623535156, -0.0018321258248761296, -3.2186455882765586e-06, -0.5497636795043945, -0.0005664825439453125, -0.08469974994659424, -2.3841830625315197e-06, -0.09991168975830078, -5.53131103515625e-05, -0.00029754638671875, -0.0003948211669921875, -0.0002880096435546875, -1.9073486328125e-06, -5.2690465963678434e-05, -1.1920928244535389e-07, -0.0005246400833129883, -2.47955322265625e-05, -0.001407623291015625, -7.05718994140625e-05, -0.0004215240478515625, -7.43865966796875e-05, -0.0012989044189453125, -3.814697265625e-06, -9.05987253645435e-05, -3.576278118089249e-07, -0.00042939186096191406, -9.5367431640625e-06], "choice_history": [97, 285, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"hole2": 2, "_type": "Template69", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "ArcaneIntellect", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 3, "hole0": "Arcane Intellect"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -8.280530088529773, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.heal(player.effective_heal_power(2), self)\n        player.draw()\n        player.draw()\n"}, {"score_history": [-3.24249267578125e-05, -0.000156402587890625, -2.0265579223632812e-06, -1.5973972040228546e-05, -1.311301275563892e-06, -1.2874601452494971e-05, -2.4199480321840383e-05, -5.841247457283316e-06, -5.14984130859375e-05, -0.0005207061767578125, -0.0002918243408203125, -2.384184699621983e-05, -4.8875728680286556e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.3841855067985307e-07, 0.0, -0.00213623046875, -0.00028228759765625, -0.0077381134033203125, -3.814697265625e-06, -0.0013580322265625, -3.814697265625e-06, -7.2479248046875e-05, 0.0, -0.00031280517578125, -0.0014400482177734375, -4.887576324108522e-06, -6.079673767089844e-06, -0.012002944946289062, -4.38690185546875e-05, -9.34600830078125e-05, -9.72747802734375e-05, -8.7738037109375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.849095471901819e-05, -2.682209014892578e-05, -3.886222839355469e-05, -1.7523765563964844e-05, -5.829300789628178e-05, 0.0, -3.898143404512666e-05, -1.0728830375228426e-06, -0.000797271728515625, -0.0003871917724609375, -0.00034332275390625, -3.24249267578125e-05, -0.006730477791279554, -1.1920928244535389e-07, -0.00226593017578125, -1.9073486328125e-05, -0.0001544952392578125, -0.0001277923583984375, -0.00037312493077479303, -9.536738616588991e-07, -0.0004444122314453125, -3.62396240234375e-05, -7.62939453125e-06, -0.0002087354368995875, -7.2479248046875e-05, -0.0015239715576171875, -1.9073486328125e-06, -0.00038803741335868835, -5.960446742392378e-06, -0.000308990478515625, -0.0013980865478515625, -0.00018310546875, -9.04921817779541, -0.13662242889404297, -0.000457763671875, -5.53131103515625e-05, -0.03413808345794678, -8.344646857949556e-07, -0.12079260498285294, -2.622604142743512e-06, -0.021091461181640625, -0.0001697540283203125, -0.39949607849121094, 0.0, -0.0002918243408203125, -0.0002899169921875, -0.5936955213546753, -4.768370445162873e-07, -0.12733399868011475, 0.0, -0.040498360991477966, -3.3378591979271732e-06], "choice_history": [97, 285, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "c", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "2", "<EOS>", 358, 106, 155, 31, 294, 21, 174, "player", "<EOS>", "draw", "<EOS>", 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "c"}, "body": [{"value": {"hole2": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Template57", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}]}}], "hole3": "use", "hole0": "ArcaneIntellect", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 3, "hole0": "Arcane Intellect"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -10.567079080882728, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw(game.other_player.hero())\n"}, {"score_history": [-3.24249267578125e-05, -0.000156402587890625, -2.0265579223632812e-06, -1.5973972040228546e-05, -1.311301275563892e-06, -1.2874601452494971e-05, -2.4199480321840383e-05, -5.841247457283316e-06, -5.14984130859375e-05, -0.0005207061767578125, -0.0002918243408203125, -2.384184699621983e-05, -4.8875728680286556e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.3841855067985307e-07, 0.0, -0.00213623046875, -0.00028228759765625, -0.0077381134033203125, -3.814697265625e-06, -0.0013580322265625, -3.814697265625e-06, -7.2479248046875e-05, 0.0, -0.00031280517578125, -0.0014400482177734375, -4.887576324108522e-06, -6.079673767089844e-06, -5.324563026428223, -0.00812530517578125, -4.38690185546875e-05, -6.67572021484375e-05, -3.814697265625e-05, -1.33514404296875e-05, 0.0, -5.280965706333518e-05, -2.300739288330078e-05, -2.1457672119140625e-05, -9.775161743164062e-06, -6.115389987826347e-05, 0.0, -4.470347994356416e-05, -1.4305104514278355e-06, -1.022507667541504, -9.5367431640625e-06, -0.0001220703125, -4.1961669921875e-05, -5.53131103515625e-05, -1.2060468196868896, -1.0609603123157285e-05, -0.0017366409301757812, -1.52587890625e-05, -0.012632369995117188, -3.24249267578125e-05, -0.0001010894775390625, -1.1444091796875e-05, -0.006786227226257324, -3.814697265625e-06, -0.01819133758544922, -3.4332275390625e-05, -1.52587890625e-05, -0.2365856170654297, 0.0, -0.27889251708984375, -1.1444091796875e-05, -0.011833786964416504, 0.0, -0.11821651458740234, -5.7220458984375e-06, -0.0164642333984375, -2.6702880859375e-05, -0.0004901885986328125, -7.62939453125e-05, -1.440226674079895, -6.186770770000294e-05, -0.6207113265991211, -3.576278118089249e-07, -0.0001392364501953125, -0.03325843811035156, -0.00139617919921875, -0.0012340545654296875, -5.7220458984375e-06, -1.752376374497544e-05, -4.768370445162873e-07, -0.08291435241699219, -0.0001850128173828125, -0.001255985233001411, -3.814689989667386e-06, -0.3870401382446289, -0.000148773193359375, -0.09176182746887207, -3.218649908376392e-06, -0.14584064483642578, -3.24249267578125e-05, -0.00055694580078125, -0.0002918243408203125, -0.0004215240478515625, -1.9073486328125e-06, -7.879731856519356e-05, -1.1920928244535389e-07, -0.0007573366165161133, -2.6702880859375e-05], "choice_history": [97, 285, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "game", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"hole2": [{"hole2": 2, "_type": "Template69", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"_type": "Name", "id": "game"}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "ArcaneIntellect", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 3, "hole0": "Arcane Intellect"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -11.08694576564735, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.minions)\n        game.heal(player.effective_heal_power(2), self)\n        player.draw()\n"}, {"score_history": [-3.24249267578125e-05, -0.000156402587890625, -2.0265579223632812e-06, -1.5973972040228546e-05, -1.311301275563892e-06, -1.2874601452494971e-05, -2.4199480321840383e-05, -5.841247457283316e-06, -5.14984130859375e-05, -0.0005207061767578125, -0.0002918243408203125, -2.384184699621983e-05, -4.8875728680286556e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.3841855067985307e-07, 0.0, -0.00213623046875, -0.00028228759765625, -0.0077381134033203125, -3.814697265625e-06, -0.0013580322265625, -3.814697265625e-06, -7.2479248046875e-05, 0.0, -0.00031280517578125, -0.0014400482177734375, -4.887576324108522e-06, -6.079673767089844e-06, -0.012002944946289062, -4.38690185546875e-05, -9.34600830078125e-05, -9.72747802734375e-05, -8.7738037109375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.849095471901819e-05, -2.682209014892578e-05, -3.886222839355469e-05, -1.7523765563964844e-05, -5.829300789628178e-05, 0.0, -3.898143404512666e-05, -1.0728830375228426e-06, -0.000797271728515625, -0.0003871917724609375, -0.00034332275390625, -3.24249267578125e-05, -0.006730477791279554, -1.1920928244535389e-07, -0.00226593017578125, -1.9073486328125e-05, -0.0001544952392578125, -0.0001277923583984375, -0.00037312493077479303, -9.536738616588991e-07, -0.0004444122314453125, -3.62396240234375e-05, -7.62939453125e-06, -0.0002087354368995875, -7.2479248046875e-05, -0.0015239715576171875, -1.9073486328125e-06, -0.00038803741335868835, -5.960446742392378e-06, -0.000308990478515625, -0.0013980865478515625, -0.00018310546875, -9.04921817779541, -0.13662242889404297, -0.000457763671875, -5.53131103515625e-05, -0.03413808345794678, -8.344646857949556e-07, -0.12079260498285294, -2.622604142743512e-06, -0.021091461181640625, -0.0001697540283203125, -0.39949607849121094, 0.0, -0.0002918243408203125, -0.0002899169921875, -0.8984612226486206, -6.914137884450611e-06, -0.1779623031616211, 0.0, -0.4951608180999756, -1.1920928244535389e-07], "choice_history": [97, 285, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "c", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "2", "<EOS>", 358, 106, 155, 31, 294, 21, 174, "player", "<EOS>", "draw", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "c"}, "body": [{"value": {"hole2": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "Template57", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}]}}], "hole3": "use", "hole0": "ArcaneIntellect", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 3, "hole0": "Arcane Intellect"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -11.377138762417601, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw(hearthbreaker.targeting.find_spell_target())\n"}]}
{"index": 5, "beams": [{"score_history": [-2.288818359375e-05, -0.00026702880859375, 0.0, -5.483625955093885e-06, -7.152555099310121e-07, -3.933906555175781e-06, -7.045094389468431e-05, -1.4543427823809907e-05, -5.340576171875e-05, -0.0002880096435546875, -0.0004749298095703125, -5.841255187988281e-06, -4.923329470329918e-05, -2.0265579223632812e-06, 0.0, -1.1920926823449918e-07, 0.0, -0.004852294921875, -7.2479248046875e-05, -0.0031663179397583008, -1.9073486328125e-06, -0.00038182735443115234, 0.0, -3.743171691894531e-05, 0.0, -2.288818359375e-05, -6.29425048828125e-05, -2.2649765014648438e-06, -3.933906555175781e-06, -0.010865211486816406, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -6.115436553955078e-05, -4.76837158203125e-05, -1.8954269762616605e-05, 0.0, -1.1324880688334815e-05, 0.0, -2.574910467956215e-05, -7.152555099310121e-07, -0.0063343048095703125, -0.00017547607421875, -0.0051555633544921875, -4.00543212890625e-05, -0.0015213486040011048, -1.1920928244535389e-07, -0.000392913818359375, -1.1444091796875e-05, -0.00212860107421875, -2.47955322265625e-05, -0.004131426103413105, 0.0, -7.43865966796875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.004040956497192383, -3.814697265625e-06, -0.01833057403564453, -0.001277923583984375, -0.0010904055088758469, -0.0003041764139197767, -0.0022754669189453125, -0.016355514526367188, -2.288818359375e-05, -8.392333984375e-05, -2.6702880859375e-05, -0.0006351470947265625, -0.0006830610218457878, -2.0265579223632812e-06, -0.000156402587890625, -7.62939453125e-06, -0.002246856689453125, -0.00016021728515625, -0.0003452301025390625, -3.814697265625e-06, -0.005390286445617676, -3.933906555175781e-06, -0.0010700225830078125, 0.0, -1.1444091796875e-05, -0.001354217529296875, -1.52587890625e-05, -0.000171661376953125, -9.5367431640625e-06, -8.392333984375e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -0.0014882087707519531, 0.0, -0.007571220397949219, 0.0, -0.0001430511474609375, -6.4849853515625e-05, -0.000301361083984375, -1.9073486328125e-06, -0.001212119939737022, -1.1920928244535389e-07, -0.008428334258496761, -5.960462772236497e-07, -0.000152587890625, -0.008716583251953125, -6.866455078125e-05, -0.0001010894775390625, -9.5367431640625e-06, -0.0003566741943359375, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0274658203125, 0.0, -0.0006539727910421789, -9.536738616588991e-07, -0.05126476287841797, 0.0, -4.57763671875e-05, -0.0001125335693359375, -9.5367431640625e-06, -0.0028678178787231445, -5.483612312673358e-06, -0.0061664581298828125, -3.0517578125e-05, -0.0003643035888671875, -1.1444091796875e-05, -0.0007534027099609375, -1.9073486328125e-06, -0.0028498172760009766, -1.1920928244535389e-07, -0.002261160872876644, 0.0, -8.0108642578125e-05, -0.000659942626953125, 0.0, -0.01172792911529541, -3.576278118089249e-07, -0.0011310577392578125, -0.00274658203125, -0.0002574920654296875, -5.7220458984375e-06, -0.0008670062525197864, -3.7431014789035544e-05, -0.004266167525202036, 0.0, -0.00115966796875, -0.00127410888671875, -3.62396240234375e-05, -0.0016342857852578163, 0.0, -0.0004711151123046875, -5.7220458984375e-06, -0.0009012222290039062, -2.0265579223632812e-06], "choice_history": [97, 285, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 75, 298, "3", "<EOS>", 361, 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "append", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 102, 142, 346, 50, 174, "target", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "targets", "<EOS>", 136, 318, 21, 174, "target", "<EOS>", "damage", "<EOS>", 347, 52, 179, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Template77", "hole1": "append", "hole0": {"_type": "Name", "id": "targets"}}, {"targets": [{"_type": "Name", "id": "target"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "targets"}]}, "_type": "Assign"}, {"hole2": [{"n": 1, "_type": "Num"}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "target"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"_type": "Template61", "hole0": 3}]}}], "hole3": "use", "hole0": "ArcaneMissiles", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 1, "hole0": "Arcane Missiles"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -0.24799047587903544, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"score_history": [-2.288818359375e-05, -0.00026702880859375, 0.0, -5.483625955093885e-06, -7.152555099310121e-07, -3.933906555175781e-06, -7.045094389468431e-05, -1.4543427823809907e-05, -5.340576171875e-05, -0.0002880096435546875, -0.0004749298095703125, -5.841255187988281e-06, -4.923329470329918e-05, -2.0265579223632812e-06, 0.0, -1.1920926823449918e-07, 0.0, -0.004852294921875, -7.2479248046875e-05, -0.0031663179397583008, -1.9073486328125e-06, -0.00038182735443115234, 0.0, -3.743171691894531e-05, 0.0, -2.288818359375e-05, -6.29425048828125e-05, -2.2649765014648438e-06, -3.933906555175781e-06, -0.010865211486816406, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -6.115436553955078e-05, -4.76837158203125e-05, -1.8954269762616605e-05, 0.0, -1.1324880688334815e-05, 0.0, -2.574910467956215e-05, -7.152555099310121e-07, -0.0063343048095703125, -0.00017547607421875, -0.0051555633544921875, -4.00543212890625e-05, -0.0015213486040011048, -1.1920928244535389e-07, -0.000392913818359375, -1.1444091796875e-05, -0.00212860107421875, -2.47955322265625e-05, -0.004131426103413105, 0.0, -7.43865966796875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.004040956497192383, -3.814697265625e-06, -0.01833057403564453, -0.001277923583984375, -0.0010904055088758469, -0.0003041764139197767, -0.0022754669189453125, -0.016355514526367188, -2.288818359375e-05, -8.392333984375e-05, -2.6702880859375e-05, -0.0006351470947265625, -0.0006830610218457878, -2.0265579223632812e-06, -0.000156402587890625, -7.62939453125e-06, -0.002246856689453125, -0.00016021728515625, -0.0003452301025390625, -3.814697265625e-06, -0.005390286445617676, -3.933906555175781e-06, -0.0010700225830078125, 0.0, -1.1444091796875e-05, -0.001354217529296875, -1.52587890625e-05, -0.000171661376953125, -9.5367431640625e-06, -8.392333984375e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -0.0014882087707519531, 0.0, -0.007571220397949219, 0.0, -0.0001430511474609375, -6.4849853515625e-05, -0.000301361083984375, -1.9073486328125e-06, -0.001212119939737022, -1.1920928244535389e-07, -0.008428334258496761, -5.960462772236497e-07, -0.000152587890625, -0.008716583251953125, -6.866455078125e-05, -0.0001010894775390625, -9.5367431640625e-06, -0.0003566741943359375, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0274658203125, 0.0, -0.0006539727910421789, -9.536738616588991e-07, -3.026228904724121, -0.0001430511474609375, -0.08453941345214844, -1.9073486328125e-06, -0.08014321327209473, -1.1920928244535389e-07, -0.010293945670127869, -3.8146954466355965e-06, -0.0002002716064453125, -0.28360748291015625, -0.000141143798828125, -8.392333984375e-05, -2.6702880859375e-05, -0.000782012939453125, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.01842188835144043, 0.0, -0.0009223805973306298, -9.536738616588991e-07, -0.05657196044921875, 0.0, -4.57763671875e-05, -0.0001087188720703125, -9.5367431640625e-06, -0.0028848648071289062, -4.410734163684538e-06, -0.005599021911621094, -3.0517578125e-05, -0.000331878662109375, -1.1444091796875e-05, -0.00067138671875, -1.9073486328125e-06, -0.0025970935821533203, -1.1920928244535389e-07, -0.0022561540827155113, 0.0, -7.82012939453125e-05, -0.00066375732421875, 0.0, -0.011791467666625977, -3.576278118089249e-07], "choice_history": [97, 285, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 75, 298, "3", "<EOS>", 361, 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "append", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "append", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 102, 142, 346, 50, 174, "target", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "targets", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Template77", "hole1": "append", "hole0": {"_type": "Name", "id": "targets"}}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Template77", "hole1": "append", "hole0": {"_type": "Name", "id": "targets"}}, {"targets": [{"_type": "Name", "id": "target"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "targets"}]}, "_type": "Assign"}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"_type": "Template61", "hole0": 3}]}}], "hole3": "use", "hole0": "ArcaneMissiles", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 1, "hole0": "Arcane Missiles"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -3.7432133787426167, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n"}, {"score_history": [-2.288818359375e-05, -0.00026702880859375, 0.0, -5.483625955093885e-06, -7.152555099310121e-07, -3.933906555175781e-06, -7.045094389468431e-05, -1.4543427823809907e-05, -5.340576171875e-05, -0.0002880096435546875, -0.0004749298095703125, -5.841255187988281e-06, -4.923329470329918e-05, -2.0265579223632812e-06, 0.0, -1.1920926823449918e-07, 0.0, -0.004852294921875, -7.2479248046875e-05, -0.0031663179397583008, -1.9073486328125e-06, -0.00038182735443115234, 0.0, -3.743171691894531e-05, 0.0, -2.288818359375e-05, -6.29425048828125e-05, -2.2649765014648438e-06, -3.933906555175781e-06, -0.010865211486816406, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -6.115436553955078e-05, -4.76837158203125e-05, -1.8954269762616605e-05, 0.0, -1.1324880688334815e-05, 0.0, -2.574910467956215e-05, -7.152555099310121e-07, -0.0063343048095703125, -0.00017547607421875, -0.0051555633544921875, -4.00543212890625e-05, -0.0015213486040011048, -1.1920928244535389e-07, -0.000392913818359375, -1.1444091796875e-05, -0.00212860107421875, -2.47955322265625e-05, -0.004131426103413105, 0.0, -7.43865966796875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.004040956497192383, -3.814697265625e-06, -0.01833057403564453, -0.001277923583984375, -0.0010904055088758469, -0.0003041764139197767, -0.0022754669189453125, -0.016355514526367188, -2.288818359375e-05, -8.392333984375e-05, -2.6702880859375e-05, -0.0006351470947265625, -0.0006830610218457878, -2.0265579223632812e-06, -0.000156402587890625, -7.62939453125e-06, -0.002246856689453125, -0.00016021728515625, -0.0003452301025390625, -3.814697265625e-06, -0.005390286445617676, -3.933906555175781e-06, -0.0010700225830078125, 0.0, -1.1444091796875e-05, -0.001354217529296875, -1.52587890625e-05, -0.000171661376953125, -9.5367431640625e-06, -8.392333984375e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -0.0014882087707519531, 0.0, -0.007571220397949219, 0.0, -0.0001430511474609375, -6.4849853515625e-05, -0.000301361083984375, -1.9073486328125e-06, -0.001212119939737022, -1.1920928244535389e-07, -0.008428334258496761, -5.960462772236497e-07, -0.000152587890625, -0.008716583251953125, -6.866455078125e-05, -0.0001010894775390625, -9.5367431640625e-06, -0.0003566741943359375, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -3.6643829345703125, 0.0, -0.0006567239761352539, -4.768370445162873e-07, -0.003421783447265625, 0.0, -4.38690185546875e-05, -8.20159912109375e-05, -1.33514404296875e-05, -0.003248453140258789, -6.318072337307967e-06, -0.005705833435058594, -4.57763671875e-05, -0.000335693359375, -2.09808349609375e-05, -0.001094818115234375, -1.9073486328125e-06, -0.00417172908782959, -1.1920928244535389e-07, -0.0022609217558056116, 0.0, -8.7738037109375e-05, -0.0006542205810546875, 0.0, -0.012057185173034668, -2.3841855067985307e-07, -0.0011272430419921875, -0.002735137939453125, -0.000255584716796875, -5.7220458984375e-06, -0.0008729667169973254, -3.731181277544238e-05, -0.004233167972415686, 0.0, -0.0011615753173828125, -0.00127410888671875, -3.62396240234375e-05, -0.0016334448009729385, 0.0, -0.00046539306640625, -5.7220458984375e-06, -0.0009021759033203125, -2.0265579223632812e-06], "choice_history": [97, 285, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 75, 298, "3", "<EOS>", 361, 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "append", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "hero", "<EOS>", 102, 142, 346, 50, 174, "target", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "targets", "<EOS>", 136, 318, 21, 174, "target", "<EOS>", "damage", "<EOS>", 347, 52, 179, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Template77", "hole1": "append", "hole0": {"_type": "Name", "id": "targets"}}, {"targets": [{"_type": "Name", "id": "target"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "targets"}]}, "_type": "Assign"}, {"hole2": [{"n": 1, "_type": "Num"}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "target"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"_type": "Template61", "hole0": 3}]}}], "hole3": "use", "hole0": "ArcaneMissiles", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 1, "hole0": "Arcane Missiles"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -3.83890141101584, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.current_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"score_history": [-2.288818359375e-05, -0.00026702880859375, 0.0, -5.483625955093885e-06, -7.152555099310121e-07, -3.933906555175781e-06, -7.045094389468431e-05, -1.4543427823809907e-05, -5.340576171875e-05, -0.0002880096435546875, -0.0004749298095703125, -5.841255187988281e-06, -4.923329470329918e-05, -2.0265579223632812e-06, 0.0, -1.1920926823449918e-07, 0.0, -0.004852294921875, -7.2479248046875e-05, -0.0031663179397583008, -1.9073486328125e-06, -0.00038182735443115234, 0.0, -3.743171691894531e-05, 0.0, -2.288818359375e-05, -6.29425048828125e-05, -2.2649765014648438e-06, -3.933906555175781e-06, -0.010865211486816406, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -6.115436553955078e-05, -4.76837158203125e-05, -1.8954269762616605e-05, 0.0, -1.1324880688334815e-05, 0.0, -2.574910467956215e-05, -7.152555099310121e-07, -0.0063343048095703125, -0.00017547607421875, -0.0051555633544921875, -4.00543212890625e-05, -0.0015213486040011048, -1.1920928244535389e-07, -0.000392913818359375, -1.1444091796875e-05, -0.00212860107421875, -2.47955322265625e-05, -0.004131426103413105, 0.0, -7.43865966796875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.004040956497192383, -3.814697265625e-06, -4.200411796569824, -3.814697265625e-06, -0.09039656817913055, -2.0265579223632812e-06, -0.0599365234375, -0.05768585205078125, -3.814697265625e-05, -0.000171661376953125, -0.000286102294921875, -0.0008220672607421875, -0.0009238719358108938, 0.0, -0.0002384185791015625, -1.52587890625e-05, -0.009386062622070312, -9.5367431640625e-05, -0.0002422332763671875, -1.9073486328125e-06, -0.012684941291809082, -5.7220458984375e-06, -0.0012912750244140625, 0.0, -1.1444091796875e-05, -0.00199127197265625, -1.1444091796875e-05, -0.0002593994140625, -5.7220458984375e-06, -8.20159912109375e-05, -3.814697265625e-06, -3.445148468017578e-05, 0.0, -0.001701951026916504, 0.0, -0.02165663242340088, 0.0, -0.0001068115234375, -7.62939453125e-05, -0.00032806396484375, -1.9073486328125e-06, -0.0011998413829132915, -1.1920928244535389e-07, -0.007293938659131527, -7.152555099310121e-07, -0.000148773193359375, -0.01708984375, -6.4849853515625e-05, -9.5367431640625e-05, -9.5367431640625e-06, -0.0003528594970703125, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.02538454532623291, 0.0, -0.0006631467258557677, -9.536738616588991e-07, -0.2468700408935547, 0.0, -4.76837158203125e-05, -0.0001201629638671875, -1.52587890625e-05, -0.003057718276977539, -5.364403477869928e-06, -0.0050487518310546875, -3.24249267578125e-05, -0.00032806396484375, -1.33514404296875e-05, -0.000797271728515625, -1.9073486328125e-06, -0.0030205249786376953, -1.1920928244535389e-07, -0.0022581806406378746, 0.0, -8.20159912109375e-05, -0.000652313232421875, 0.0, -0.011585593223571777, -3.576278118089249e-07, -0.0005645751953125, -0.0018157958984375, -0.0002536773681640625, -5.7220458984375e-06, -0.0006352618220262229, -3.6954195820726454e-05, -0.004445877391844988, 0.0, -0.0011386871337890625, -0.0013217926025390625, -3.62396240234375e-05, -0.0018052011728286743, 0.0, -0.0005321502685546875, -5.7220458984375e-06, -0.0008687973022460938, -2.0265579223632812e-06], "choice_history": [97, 285, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "3", "<EOS>", 361, 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "append", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 102, 142, 346, 50, 174, "target", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "targets", "<EOS>", 136, 318, 21, 174, "target", "<EOS>", "damage", "<EOS>", 347, 52, 179, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Template77", "hole1": "append", "hole0": {"_type": "Name", "id": "targets"}}, {"targets": [{"_type": "Name", "id": "target"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "targets"}]}, "_type": "Assign"}, {"hole2": [{"n": 1, "_type": "Num"}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "target"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"n": 3, "_type": "Num"}]}}], "hole3": "use", "hole0": "ArcaneMissiles", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 1, "hole0": "Arcane Missiles"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.845690957724528, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 3):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"score_history": [-2.288818359375e-05, -0.00026702880859375, 0.0, -5.483625955093885e-06, -7.152555099310121e-07, -3.933906555175781e-06, -7.045094389468431e-05, -1.4543427823809907e-05, -5.340576171875e-05, -0.0002880096435546875, -0.0004749298095703125, -5.841255187988281e-06, -4.923329470329918e-05, -2.0265579223632812e-06, 0.0, -1.1920926823449918e-07, 0.0, -0.004852294921875, -7.2479248046875e-05, -0.0031663179397583008, -1.9073486328125e-06, -0.00038182735443115234, 0.0, -3.743171691894531e-05, 0.0, -2.288818359375e-05, -6.29425048828125e-05, -2.2649765014648438e-06, -3.933906555175781e-06, -0.010865211486816406, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -6.115436553955078e-05, -4.76837158203125e-05, -1.8954269762616605e-05, 0.0, -1.1324880688334815e-05, 0.0, -2.574910467956215e-05, -7.152555099310121e-07, -0.0063343048095703125, -0.00017547607421875, -0.0051555633544921875, -4.00543212890625e-05, -0.0015213486040011048, -1.1920928244535389e-07, -0.000392913818359375, -1.1444091796875e-05, -0.00212860107421875, -2.47955322265625e-05, -0.004131426103413105, 0.0, -7.43865966796875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.004040956497192383, -3.814697265625e-06, -0.01833057403564453, -0.001277923583984375, -0.0010904055088758469, -0.0003041764139197767, -0.0022754669189453125, -0.016355514526367188, -2.288818359375e-05, -8.392333984375e-05, -2.6702880859375e-05, -0.0006351470947265625, -0.0006830610218457878, -2.0265579223632812e-06, -0.000156402587890625, -7.62939453125e-06, -0.002246856689453125, -0.00016021728515625, -0.0003452301025390625, -3.814697265625e-06, -0.005390286445617676, -3.933906555175781e-06, -0.0010700225830078125, 0.0, -1.1444091796875e-05, -0.001354217529296875, -1.52587890625e-05, -0.000171661376953125, -9.5367431640625e-06, -8.392333984375e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -0.0014882087707519531, 0.0, -4.9456281661987305, -1.1920928244535389e-07, -0.24495697021484375, -0.000759124755859375, -0.010984420776367188, -1.9073486328125e-06, -0.011724114418029785, -1.1920928244535389e-07, -0.0097916005179286, -2.145764938177308e-06, -0.0001392364501953125, -0.04042625427246094, -0.0001125335693359375, -8.58306884765625e-05, -1.9073486328125e-05, -0.000522613525390625, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.025718212127685547, 0.0, -0.0008288660319522023, -1.0728830375228426e-06, -0.053215980529785156, 0.0, -4.57763671875e-05, -0.0001125335693359375, -9.5367431640625e-06, -0.00283050537109375, -5.364403477869928e-06, -0.006247520446777344, -3.0517578125e-05, -0.0003414154052734375, -1.1444091796875e-05, -0.0007534027099609375, -1.9073486328125e-06, -0.0028297901153564453, -1.1920928244535389e-07, -0.0022665252909064293, 0.0, -8.0108642578125e-05, -0.0006656646728515625, 0.0, -0.011806011199951172, -3.576278118089249e-07, -0.0011348724365234375, -0.0027475357055664062, -0.0002574920654296875, -5.7220458984375e-06, -0.0008649796945974231, -3.755022044060752e-05, -0.004261656664311886, 0.0, -0.0011577606201171875, -0.00127410888671875, -3.62396240234375e-05, -0.0016355020925402641, 0.0, -0.0004711151123046875, -5.7220458984375e-06, -0.0009002685546875, -2.0265579223632812e-06], "choice_history": [97, 285, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 75, 298, "3", "<EOS>", 361, 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "append", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 102, 142, 346, 50, 174, "target", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "targets", "<EOS>", 136, 318, 21, 174, "target", "<EOS>", "damage", "<EOS>", 347, 52, 179, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}]}, "_type": "Assign"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Template77", "hole1": "append", "hole0": {"_type": "Name", "id": "targets"}}, {"targets": [{"_type": "Name", "id": "target"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "targets"}]}, "_type": "Assign"}, {"hole2": [{"n": 1, "_type": "Num"}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "target"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"_type": "Template61", "hole0": 3}]}}], "hole3": "use", "hole0": "ArcaneMissiles", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 1, "hole0": "Arcane Missiles"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.486481222055552, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.hero)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"score_history": [-2.288818359375e-05, -0.00026702880859375, 0.0, -5.483625955093885e-06, -7.152555099310121e-07, -3.933906555175781e-06, -7.045094389468431e-05, -1.4543427823809907e-05, -5.340576171875e-05, -0.0002880096435546875, -0.0004749298095703125, -5.841255187988281e-06, -4.923329470329918e-05, -2.0265579223632812e-06, 0.0, -1.1920926823449918e-07, 0.0, -0.004852294921875, -7.2479248046875e-05, -0.0031663179397583008, -1.9073486328125e-06, -0.00038182735443115234, 0.0, -3.743171691894531e-05, 0.0, -2.288818359375e-05, -6.29425048828125e-05, -2.2649765014648438e-06, -3.933906555175781e-06, -0.010865211486816406, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -6.115436553955078e-05, -4.76837158203125e-05, -1.8954269762616605e-05, 0.0, -1.1324880688334815e-05, 0.0, -2.574910467956215e-05, -7.152555099310121e-07, -0.0063343048095703125, -0.00017547607421875, -0.0051555633544921875, -4.00543212890625e-05, -0.0015213486040011048, -1.1920928244535389e-07, -0.000392913818359375, -1.1444091796875e-05, -0.00212860107421875, -2.47955322265625e-05, -0.004131426103413105, 0.0, -7.43865966796875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.004040956497192383, -3.814697265625e-06, -0.01833057403564453, -0.001277923583984375, -0.0010904055088758469, -0.0003041764139197767, -0.0022754669189453125, -0.016355514526367188, -2.288818359375e-05, -8.392333984375e-05, -2.6702880859375e-05, -0.0006351470947265625, -0.0006830610218457878, -2.0265579223632812e-06, -0.000156402587890625, -7.62939453125e-06, -0.002246856689453125, -0.00016021728515625, -0.0003452301025390625, -3.814697265625e-06, -0.005390286445617676, -3.933906555175781e-06, -0.0010700225830078125, 0.0, -1.1444091796875e-05, -0.001354217529296875, -1.52587890625e-05, -0.000171661376953125, -9.5367431640625e-06, -8.392333984375e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -0.0014882087707519531, 0.0, -0.007571220397949219, 0.0, -0.0001430511474609375, -6.4849853515625e-05, -0.000301361083984375, -1.9073486328125e-06, -0.001212119939737022, -1.1920928244535389e-07, -0.008428334258496761, -5.960462772236497e-07, -0.000152587890625, -0.008716583251953125, -6.866455078125e-05, -0.0001010894775390625, -9.5367431640625e-06, -0.0003566741943359375, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0274658203125, 0.0, -0.0006539727910421789, -9.536738616588991e-07, -3.026228904724121, -0.0001430511474609375, -0.08453941345214844, -1.9073486328125e-06, -0.08014321327209473, -1.1920928244535389e-07, -0.010293945670127869, -3.8146954466355965e-06, -0.0002002716064453125, -1.4192619323730469, 0.0, -0.9479364156723022, 0.0, -0.000652313232421875, -0.0020771026611328125, -0.000396728515625, 0.0, -0.007788896560668945, -3.313963316031732e-05, -0.010747537016868591, 0.0, -0.00026702880859375, -0.00069427490234375, -3.62396240234375e-05, -0.00241706520318985, 0.0, -0.000423431396484375, -5.7220458984375e-06, -0.0011758804321289062, -2.0265579223632812e-06], "choice_history": [97, 285, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 75, 298, "3", "<EOS>", 361, 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "append", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "append", "<EOS>", 346, 50, 174, "targets", "<EOS>", 136, 318, 21, 174, "target", "<EOS>", "damage", "<EOS>", 347, 52, 179, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Template77", "hole1": "append", "hole0": {"_type": "Name", "id": "targets"}}, {"hole2": [{"_type": "Name", "id": "targets"}], "_type": "Template77", "hole1": "append", "hole0": {"_type": "Name", "id": "targets"}}, {"hole2": [{"n": 1, "_type": "Num"}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "target"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"_type": "Template61", "hole0": 3}]}}], "hole3": "use", "hole0": "ArcaneMissiles", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 1, "hole0": "Arcane Missiles"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.749451624889176, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            targets.append(targets)\n            target.damage(1, self)\n"}, {"score_history": [-2.288818359375e-05, -0.00026702880859375, 0.0, -5.483625955093885e-06, -7.152555099310121e-07, -3.933906555175781e-06, -7.045094389468431e-05, -1.4543427823809907e-05, -5.340576171875e-05, -0.0002880096435546875, -0.0004749298095703125, -5.841255187988281e-06, -4.923329470329918e-05, -2.0265579223632812e-06, 0.0, -1.1920926823449918e-07, 0.0, -5.739510536193848, -5.7220458984375e-06, -0.0002994537353515625, -3.814697265625e-06, -0.00016045570373535156, -1.9073486328125e-06, -4.0292736230185255e-05, 0.0, -2.6702880859375e-05, -5.53131103515625e-05, -2.384185791015625e-06, -2.0265579223632812e-06, -0.014760017395019531, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -5.924701690673828e-05, -4.76837158203125e-05, -1.7046921129804105e-05, 0.0, -9.417532055522315e-06, 0.0, -2.586831215012353e-05, -7.152555099310121e-07, -0.006470680236816406, -0.00017547607421875, -0.005252838134765625, -4.00543212890625e-05, -0.0015197988832369447, -1.1920928244535389e-07, -0.0003948211669921875, -1.1444091796875e-05, -0.00213623046875, -2.47955322265625e-05, -0.004118789918720722, 0.0, -7.43865966796875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.004043223802000284, -3.814697265625e-06, -0.018291473388671875, -0.0012798309326171875, -0.0010865908116102219, -0.0003046531055588275, -0.0022783279418945312, -0.016355514526367188, -2.288818359375e-05, -8.392333984375e-05, -2.6702880859375e-05, -0.0006351470947265625, -0.0006843722658231854, -2.0265579223632812e-06, -0.000156402587890625, -7.62939453125e-06, -0.0022487640380859375, -0.00016021728515625, -0.000347137451171875, -3.814697265625e-06, -0.005420804023742676, -3.933906555175781e-06, -0.0010776519775390625, 0.0, -1.1444091796875e-05, -0.0013523101806640625, -1.52587890625e-05, -0.000171661376953125, -9.5367431640625e-06, -8.392333984375e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -0.0014882087707519531, 0.0, -0.007567405700683594, 0.0, -0.0001430511474609375, -6.4849853515625e-05, -0.000301361083984375, -1.9073486328125e-06, -0.0012111662654206157, -1.1920928244535389e-07, -0.008428334258496761, -5.960462772236497e-07, -0.000152587890625, -0.00870513916015625, -6.866455078125e-05, -0.0001010894775390625, -9.5367431640625e-06, -0.0003566741943359375, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.027466773986816406, 0.0, -0.000653853639960289, -9.536738616588991e-07, -0.051224708557128906, 0.0, -4.57763671875e-05, -0.0001125335693359375, -9.5367431640625e-06, -0.0028678178787231445, -5.483612312673358e-06, -0.006167411804199219, -3.0517578125e-05, -0.0003643035888671875, -1.1444091796875e-05, -0.0007534027099609375, -1.9073486328125e-06, -0.0028498172760009766, -1.1920928244535389e-07, -0.002261160872876644, 0.0, -8.0108642578125e-05, -0.000659942626953125, 0.0, -0.01172792911529541, -3.576278118089249e-07, -0.0011310577392578125, -0.00274658203125, -0.0002574920654296875, -5.7220458984375e-06, -0.0008670062525197864, -3.7431014789035544e-05, -0.004266286268830299, 0.0, -0.00115966796875, -0.00127410888671875, -3.62396240234375e-05, -0.0016344040632247925, 0.0, -0.0004711151123046875, -5.7220458984375e-06, -0.0009012222290039062, -2.0265579223632812e-06], "choice_history": [97, 285, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 75, 298, "3", "<EOS>", 361, 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "append", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 102, 142, 346, 50, 174, "target", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "targets", "<EOS>", 136, 318, 21, 174, "target", "<EOS>", "damage", "<EOS>", 347, 52, 179, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Template77", "hole1": "append", "hole0": {"_type": "Name", "id": "targets"}}, {"targets": [{"_type": "Name", "id": "target"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "targets"}]}, "_type": "Assign"}, {"hole2": [{"n": 1, "_type": "Num"}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "target"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"_type": "Template61", "hole0": 3}]}}], "hole3": "use", "hole0": "ArcaneMissiles", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "ROGUE", "_type": "Template34", "hole1": 1, "hole0": "Arcane Missiles"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.983564722112263, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"score_history": [-2.288818359375e-05, -0.00026702880859375, 0.0, -5.483625955093885e-06, -7.152555099310121e-07, -3.933906555175781e-06, -7.045094389468431e-05, -1.4543427823809907e-05, -5.340576171875e-05, -0.0002880096435546875, -0.0004749298095703125, -5.841255187988281e-06, -4.923329470329918e-05, -2.0265579223632812e-06, 0.0, -1.1920926823449918e-07, 0.0, -0.004852294921875, -7.2479248046875e-05, -0.0031663179397583008, -1.9073486328125e-06, -0.00038182735443115234, 0.0, -3.743171691894531e-05, 0.0, -2.288818359375e-05, -6.29425048828125e-05, -2.2649765014648438e-06, -3.933906555175781e-06, -0.010865211486816406, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -6.115436553955078e-05, -4.76837158203125e-05, -1.8954269762616605e-05, 0.0, -1.1324880688334815e-05, 0.0, -2.574910467956215e-05, -7.152555099310121e-07, -0.0063343048095703125, -0.00017547607421875, -0.0051555633544921875, -4.00543212890625e-05, -0.0015213486040011048, -1.1920928244535389e-07, -0.000392913818359375, -1.1444091796875e-05, -0.00212860107421875, -2.47955322265625e-05, -0.004131426103413105, 0.0, -7.43865966796875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.004040956497192383, -3.814697265625e-06, -0.01833057403564453, -0.001277923583984375, -0.0010904055088758469, -0.0003041764139197767, -0.0022754669189453125, -0.016355514526367188, -2.288818359375e-05, -8.392333984375e-05, -2.6702880859375e-05, -0.0006351470947265625, -0.0006830610218457878, -2.0265579223632812e-06, -0.000156402587890625, -7.62939453125e-06, -0.002246856689453125, -0.00016021728515625, -0.0003452301025390625, -3.814697265625e-06, -0.005390286445617676, -3.933906555175781e-06, -0.0010700225830078125, 0.0, -1.1444091796875e-05, -0.001354217529296875, -1.52587890625e-05, -0.000171661376953125, -9.5367431640625e-06, -8.392333984375e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -0.0014882087707519531, 0.0, -0.007571220397949219, 0.0, -0.0001430511474609375, -6.4849853515625e-05, -0.000301361083984375, -1.9073486328125e-06, -0.001212119939737022, -1.1920928244535389e-07, -0.008428334258496761, -5.960462772236497e-07, -0.000152587890625, -0.008716583251953125, -6.866455078125e-05, -0.0001010894775390625, -9.5367431640625e-06, -0.0003566741943359375, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0274658203125, 0.0, -0.0006539727910421789, -9.536738616588991e-07, -0.05126476287841797, 0.0, -4.57763671875e-05, -0.0001125335693359375, -9.5367431640625e-06, -0.0028678178787231445, -5.483612312673358e-06, -0.0061664581298828125, -3.0517578125e-05, -0.0003643035888671875, -1.1444091796875e-05, -0.0007534027099609375, -1.9073486328125e-06, -0.0028498172760009766, -1.1920928244535389e-07, -0.002261160872876644, 0.0, -8.0108642578125e-05, -0.000659942626953125, 0.0, -5.74939489364624, -5.125998541188892e-06, -0.06361865997314453, -0.0004444122314453125, -8.20159912109375e-05, -1.9073486328125e-06, -0.0440295971930027, -2.1219027985353023e-05, -0.021492158994078636, 0.0, -0.0006256103515625, -0.0019435882568359375, -1.9073486328125e-05, -0.0018827002495527267, 0.0, -0.000583648681640625, -5.7220458984375e-06, -0.00103759765625, -3.933906555175781e-06], "choice_history": [97, 285, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 75, 298, "3", "<EOS>", 361, 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "append", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 102, 142, 346, 50, 174, "target", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "minions", "<EOS>", 136, 318, 21, 174, "target", "<EOS>", "damage", "<EOS>", 347, 52, 179, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Template77", "hole1": "append", "hole0": {"_type": "Name", "id": "targets"}}, {"targets": [{"_type": "Name", "id": "target"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "minions"}]}, "_type": "Assign"}, {"hole2": [{"n": 1, "_type": "Num"}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "target"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"_type": "Template61", "hole0": 3}]}}], "hole3": "use", "hole0": "ArcaneMissiles", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 1, "hole0": "Arcane Missiles"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.106658207290607, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(minions)\n            target.damage(1, self)\n"}, {"score_history": [-2.288818359375e-05, -0.00026702880859375, 0.0, -5.483625955093885e-06, -7.152555099310121e-07, -3.933906555175781e-06, -7.045094389468431e-05, -1.4543427823809907e-05, -5.340576171875e-05, -0.0002880096435546875, -0.0004749298095703125, -5.841255187988281e-06, -4.923329470329918e-05, -2.0265579223632812e-06, 0.0, -1.1920926823449918e-07, 0.0, -0.004852294921875, -7.2479248046875e-05, -0.0031663179397583008, -1.9073486328125e-06, -0.00038182735443115234, 0.0, -3.743171691894531e-05, 0.0, -2.288818359375e-05, -6.29425048828125e-05, -2.2649765014648438e-06, -3.933906555175781e-06, -0.010865211486816406, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -6.115436553955078e-05, -4.76837158203125e-05, -1.8954269762616605e-05, 0.0, -1.1324880688334815e-05, 0.0, -2.574910467956215e-05, -7.152555099310121e-07, -0.0063343048095703125, -0.00017547607421875, -0.0051555633544921875, -4.00543212890625e-05, -0.0015213486040011048, -1.1920928244535389e-07, -0.000392913818359375, -1.1444091796875e-05, -0.00212860107421875, -2.47955322265625e-05, -0.004131426103413105, 0.0, -7.43865966796875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.004040956497192383, -3.814697265625e-06, -0.01833057403564453, -0.001277923583984375, -0.0010904055088758469, -0.0003041764139197767, -0.0022754669189453125, -0.016355514526367188, -2.288818359375e-05, -8.392333984375e-05, -2.6702880859375e-05, -0.0006351470947265625, -0.0006830610218457878, -2.0265579223632812e-06, -0.000156402587890625, -7.62939453125e-06, -0.002246856689453125, -0.00016021728515625, -0.0003452301025390625, -3.814697265625e-06, -0.005390286445617676, -3.933906555175781e-06, -0.0010700225830078125, 0.0, -1.1444091796875e-05, -0.001354217529296875, -1.52587890625e-05, -0.000171661376953125, -9.5367431640625e-06, -8.392333984375e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -0.0014882087707519531, 0.0, -0.007571220397949219, 0.0, -0.0001430511474609375, -6.4849853515625e-05, -0.000301361083984375, -1.9073486328125e-06, -0.001212119939737022, -1.1920928244535389e-07, -0.008428334258496761, -5.960462772236497e-07, -0.000152587890625, -0.008716583251953125, -6.866455078125e-05, -0.0001010894775390625, -9.5367431640625e-06, -0.0003566741943359375, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0274658203125, 0.0, -0.0006539727910421789, -9.536738616588991e-07, -0.05126476287841797, 0.0, -4.57763671875e-05, -0.0001125335693359375, -9.5367431640625e-06, -0.0028678178787231445, -5.483612312673358e-06, -0.0061664581298828125, -3.0517578125e-05, -0.0003643035888671875, -1.1444091796875e-05, -0.0007534027099609375, -1.9073486328125e-06, -0.0028498172760009766, -1.1920928244535389e-07, -0.002261160872876644, 0.0, -8.0108642578125e-05, -0.000659942626953125, 0.0, -5.813563346862793, -2.3841855067985307e-07, -0.09068679809570312, -0.014876365661621094, -0.0004444122314453125, 0.0, -0.011104105971753597, -1.9073304429184645e-05, -0.012064539827406406, 0.0, -0.00048065185546875, -0.0003566741943359375, -2.47955322265625e-05, -0.00137261301279068, 0.0, -0.00045013427734375, -5.7220458984375e-06, -0.0011186599731445312, -2.0265579223632812e-06], "choice_history": [97, 285, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 75, 298, "3", "<EOS>", 361, 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "append", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 102, 142, 346, 50, 174, "target", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "hero", "<EOS>", 136, 318, 21, 174, "target", "<EOS>", "damage", "<EOS>", 347, 52, 179, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Template77", "hole1": "append", "hole0": {"_type": "Name", "id": "targets"}}, {"targets": [{"_type": "Name", "id": "target"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "hero"}]}, "_type": "Assign"}, {"hole2": [{"n": 1, "_type": "Num"}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "target"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"_type": "Template61", "hole0": 3}]}}], "hole3": "use", "hole0": "ArcaneMissiles", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 1, "hole0": "Arcane Missiles"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.168036500074535, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(hero)\n            target.damage(1, self)\n"}, {"score_history": [-2.288818359375e-05, -0.00026702880859375, 0.0, -5.483625955093885e-06, -7.152555099310121e-07, -3.933906555175781e-06, -7.045094389468431e-05, -1.4543427823809907e-05, -5.340576171875e-05, -0.0002880096435546875, -0.0004749298095703125, -5.841255187988281e-06, -4.923329470329918e-05, -2.0265579223632812e-06, 0.0, -1.1920926823449918e-07, 0.0, -0.004852294921875, -7.2479248046875e-05, -5.9689788818359375, -3.814697265625e-06, -0.015651822090148926, 0.0, -6.139278411865234e-05, 0.0, -0.0002079010009765625, -0.000133514404296875, -2.1457672119140625e-06, -2.1457672119140625e-06, -0.013757705688476562, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-05, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -6.306171417236328e-05, -4.76837158203125e-05, -1.9073479052167386e-05, 0.0, -9.536741345073096e-06, 0.0, -2.574910467956215e-05, -7.152555099310121e-07, -0.006951332092285156, -0.0001773834228515625, -0.004634857177734375, -4.1961669921875e-05, -0.0014960762346163392, -1.1920928244535389e-07, -0.0003948211669921875, -1.1444091796875e-05, -0.00209808349609375, -2.47955322265625e-05, -0.004168977495282888, 0.0, -7.43865966796875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.004041789099574089, -3.814697265625e-06, -0.018245697021484375, -0.001277923583984375, -0.0010942202061414719, -0.00030262715881690383, -0.0022764205932617188, -0.016376495361328125, -2.288818359375e-05, -8.392333984375e-05, -2.6702880859375e-05, -0.0006351470947265625, -0.0006815113592892885, -2.0265579223632812e-06, -0.000156402587890625, -7.62939453125e-06, -0.0022449493408203125, -0.00016021728515625, -0.0003452301025390625, -3.814697265625e-06, -0.005394101142883301, -3.933906555175781e-06, -0.001071929931640625, 0.0, -1.1444091796875e-05, -0.001354217529296875, -1.52587890625e-05, -0.000171661376953125, -9.5367431640625e-06, -8.392333984375e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -0.0014882087707519531, 0.0, -0.0075702667236328125, 0.0, -0.00014495849609375, -6.4849853515625e-05, -0.000301361083984375, -1.9073486328125e-06, -0.001212119939737022, -1.1920928244535389e-07, -0.008426426909863949, -5.960462772236497e-07, -0.000152587890625, -0.008703231811523438, -6.866455078125e-05, -0.0001010894775390625, -9.5367431640625e-06, -0.0003566741943359375, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.027464866638183594, 0.0, -0.0006540919421240687, -9.536738616588991e-07, -0.05128288269042969, 0.0, -4.57763671875e-05, -0.0001125335693359375, -9.5367431640625e-06, -0.0028678178787231445, -5.483612312673358e-06, -0.006168365478515625, -3.0517578125e-05, -0.0003643035888671875, -1.1444091796875e-05, -0.0007534027099609375, -1.9073486328125e-06, -0.0028498172760009766, -1.1920928244535389e-07, -0.002261160872876644, 0.0, -8.0108642578125e-05, -0.000659942626953125, 0.0, -0.011728882789611816, -3.576278118089249e-07, -0.0011348724365234375, -0.00274658203125, -0.0002574920654296875, -5.7220458984375e-06, -0.0008679599268361926, -3.7431014789035544e-05, -0.004265692550688982, 0.0, -0.00115966796875, -0.00127410888671875, -3.62396240234375e-05, -0.001634286716580391, 0.0, -0.0004711151123046875, -5.7220458984375e-06, -0.0009012222290039062, -2.0265579223632812e-06], "choice_history": [97, 285, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 75, 298, "3", "<EOS>", 361, 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "append", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 102, 142, 346, 50, 174, "target", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "targets", "<EOS>", 136, 318, 21, 174, "target", "<EOS>", "damage", "<EOS>", 347, 52, 179, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Template77", "hole1": "append", "hole0": {"_type": "Name", "id": "targets"}}, {"targets": [{"_type": "Name", "id": "target"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "targets"}]}, "_type": "Assign"}, {"hole2": [{"n": 1, "_type": "Num"}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "target"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"_type": "Template61", "hole0": 3}]}}], "hole3": "use", "hole0": "ArcaneMissiles", "_type": "Template5", "hole2": [{"hole3": "ROGUE", "hole2": "MAGE", "_type": "Template34", "hole1": 1, "hole0": "Arcane Missiles"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.232272136867962, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.ROGUE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"score_history": [-2.288818359375e-05, -0.00026702880859375, 0.0, -5.483625955093885e-06, -7.152555099310121e-07, -3.933906555175781e-06, -7.045094389468431e-05, -1.4543427823809907e-05, -5.340576171875e-05, -0.0002880096435546875, -0.0004749298095703125, -5.841255187988281e-06, -4.923329470329918e-05, -2.0265579223632812e-06, 0.0, -1.1920926823449918e-07, 0.0, -0.004852294921875, -7.2479248046875e-05, -0.0031663179397583008, -1.9073486328125e-06, -0.00038182735443115234, 0.0, -3.743171691894531e-05, 0.0, -2.288818359375e-05, -6.29425048828125e-05, -2.2649765014648438e-06, -3.933906555175781e-06, -0.010865211486816406, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -6.115436553955078e-05, -4.76837158203125e-05, -1.8954269762616605e-05, 0.0, -1.1324880688334815e-05, 0.0, -2.574910467956215e-05, -7.152555099310121e-07, -0.0063343048095703125, -0.00017547607421875, -0.0051555633544921875, -4.00543212890625e-05, -0.0015213486040011048, -1.1920928244535389e-07, -0.000392913818359375, -1.1444091796875e-05, -0.00212860107421875, -2.47955322265625e-05, -0.004131426103413105, 0.0, -7.43865966796875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.004040956497192383, -3.814697265625e-06, -0.01833057403564453, -0.001277923583984375, -0.0010904055088758469, -0.0003041764139197767, -0.0022754669189453125, -0.016355514526367188, -2.288818359375e-05, -8.392333984375e-05, -2.6702880859375e-05, -0.0006351470947265625, -0.0006830610218457878, -2.0265579223632812e-06, -0.000156402587890625, -7.62939453125e-06, -0.002246856689453125, -0.00016021728515625, -0.0003452301025390625, -3.814697265625e-06, -0.005390286445617676, -3.933906555175781e-06, -0.0010700225830078125, 0.0, -1.1444091796875e-05, -0.001354217529296875, -1.52587890625e-05, -0.000171661376953125, -9.5367431640625e-06, -8.392333984375e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -0.0014882087707519531, 0.0, -0.007571220397949219, 0.0, -0.0001430511474609375, -6.4849853515625e-05, -0.000301361083984375, -1.9073486328125e-06, -0.001212119939737022, -1.1920928244535389e-07, -0.008428334258496761, -5.960462772236497e-07, -0.000152587890625, -0.008716583251953125, -6.866455078125e-05, -0.0001010894775390625, -9.5367431640625e-06, -0.0003566741943359375, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0274658203125, 0.0, -0.0006539727910421789, -9.536738616588991e-07, -0.05126476287841797, 0.0, -4.57763671875e-05, -0.0001125335693359375, -9.5367431640625e-06, -0.0028678178787231445, -5.483612312673358e-06, -5.436648368835449, -0.00865936279296875, -0.4019002914428711, -8.7738037109375e-05, -0.003826141357421875, -7.62939453125e-06, -0.004309654235839844, 0.0, -0.012841814197599888, 0.0, -0.12184479832649231, -2.622600959512056e-06, -0.013842582702636719, 0.0, -3.24249267578125e-05, -0.000118255615234375, -5.7220458984375e-06, -0.0008766651153564453, -8.583032467868179e-06, -0.0038843154907226562, -2.6702880859375e-05, -0.000240325927734375, -7.62939453125e-06, -0.0006847381591796875, -1.9073486328125e-06, -0.0018503665924072266, 0.0, -0.002341269515454769, 0.0, -7.43865966796875e-05, -0.000667572021484375, 0.0, -0.012286900542676449, -3.576278118089249e-07], "choice_history": [97, 285, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 75, 298, "3", "<EOS>", 361, 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "append", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 102, 142, 346, 50, 174, "target", "<EOS>", 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 102, 142, 346, 50, 174, "target", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "targets", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Template77", "hole1": "append", "hole0": {"_type": "Name", "id": "targets"}}, {"targets": [{"_type": "Name", "id": "target"}], "value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "target"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "targets"}]}, "_type": "Assign"}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"_type": "Template61", "hole0": 3}]}}], "hole3": "use", "hole0": "ArcaneMissiles", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 1, "hole0": "Arcane Missiles"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.235366286934514, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.other_player.hero\n            target = game.random_choice(targets)\n"}, {"score_history": [-2.288818359375e-05, -0.00026702880859375, 0.0, -5.483625955093885e-06, -7.152555099310121e-07, -3.933906555175781e-06, -7.045094389468431e-05, -1.4543427823809907e-05, -5.340576171875e-05, -0.0002880096435546875, -0.0004749298095703125, -5.841255187988281e-06, -4.923329470329918e-05, -2.0265579223632812e-06, 0.0, -1.1920926823449918e-07, 0.0, -0.004852294921875, -7.2479248046875e-05, -0.0031663179397583008, -1.9073486328125e-06, -0.00038182735443115234, 0.0, -3.743171691894531e-05, 0.0, -2.288818359375e-05, -6.29425048828125e-05, -2.2649765014648438e-06, -3.933906555175781e-06, -0.010865211486816406, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -6.115436553955078e-05, -4.76837158203125e-05, -1.8954269762616605e-05, 0.0, -1.1324880688334815e-05, 0.0, -2.574910467956215e-05, -7.152555099310121e-07, -0.0063343048095703125, -0.00017547607421875, -0.0051555633544921875, -4.00543212890625e-05, -0.0015213486040011048, -1.1920928244535389e-07, -0.000392913818359375, -1.1444091796875e-05, -0.00212860107421875, -2.47955322265625e-05, -6.201357841491699, -0.00010597705113468692, -0.0011043548583984375, -0.0001277923583984375, -3.62396240234375e-05, -0.00218963623046875, -2.288818359375e-05, -0.0001506805419921875, -6.4849853515625e-05, -0.00021374225616455078, 0.0, -0.001810312271118164, 0.0, -0.015107035636901855, 0.0, -0.00046539306640625, -0.0053043365478515625, -6.67572021484375e-05, -0.0006694793701171875, -9.34600830078125e-05, -0.04113774746656418, -2.145764938177308e-06, -0.004065053537487984, 0.0, -0.0003337860107421875, -0.06774711608886719, -0.0002899169921875, -0.0632191002368927, -1.5258672647178173e-05, -4.1961669921875e-05, -8.7738037109375e-05, -0.008499860763549805, -1.3470642443280667e-05], "choice_history": [97, 285, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "hole3": "use", "hole0": "ArcaneMissiles", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 1, "hole0": "Arcane Missiles"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.451113796997987, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(3), self)\n"}, {"score_history": [-2.288818359375e-05, -0.00026702880859375, 0.0, -5.483625955093885e-06, -7.152555099310121e-07, -3.933906555175781e-06, -7.045094389468431e-05, -1.4543427823809907e-05, -5.340576171875e-05, -0.0002880096435546875, -0.0004749298095703125, -5.841255187988281e-06, -4.923329470329918e-05, -2.0265579223632812e-06, 0.0, -1.1920926823449918e-07, 0.0, -0.004852294921875, -7.2479248046875e-05, -0.0031663179397583008, -1.9073486328125e-06, -0.00038182735443115234, 0.0, -3.743171691894531e-05, 0.0, -2.288818359375e-05, -6.29425048828125e-05, -2.2649765014648438e-06, -3.933906555175781e-06, -0.010865211486816406, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -6.115436553955078e-05, -4.76837158203125e-05, -1.8954269762616605e-05, 0.0, -1.1324880688334815e-05, 0.0, -2.574910467956215e-05, -7.152555099310121e-07, -0.0063343048095703125, -0.00017547607421875, -0.0051555633544921875, -4.00543212890625e-05, -0.0015213486040011048, -1.1920928244535389e-07, -0.000392913818359375, -1.1444091796875e-05, -0.00212860107421875, -2.47955322265625e-05, -0.004131426103413105, 0.0, -7.43865966796875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.004040956497192383, -3.814697265625e-06, -0.01833057403564453, -0.001277923583984375, -0.0010904055088758469, -0.0003041764139197767, -0.0022754669189453125, -0.016355514526367188, -2.288818359375e-05, -8.392333984375e-05, -2.6702880859375e-05, -0.0006351470947265625, -0.0006830610218457878, -2.0265579223632812e-06, -0.000156402587890625, -7.62939453125e-06, -0.002246856689453125, -0.00016021728515625, -0.0003452301025390625, -3.814697265625e-06, -0.005390286445617676, -3.933906555175781e-06, -0.0010700225830078125, 0.0, -1.1444091796875e-05, -0.001354217529296875, -1.52587890625e-05, -0.000171661376953125, -9.5367431640625e-06, -8.392333984375e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -0.0014882087707519531, 0.0, -0.007571220397949219, 0.0, -0.0001430511474609375, -6.4849853515625e-05, -0.000301361083984375, -1.9073486328125e-06, -0.001212119939737022, -1.1920928244535389e-07, -0.008428334258496761, -5.960462772236497e-07, -0.000152587890625, -0.008716583251953125, -6.866455078125e-05, -0.0001010894775390625, -9.5367431640625e-06, -0.0003566741943359375, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0274658203125, 0.0, -0.0006539727910421789, -9.536738616588991e-07, -0.05126476287841797, 0.0, -4.57763671875e-05, -0.0001125335693359375, -9.5367431640625e-06, -0.0028678178787231445, -5.483612312673358e-06, -0.0061664581298828125, -3.0517578125e-05, -0.0003643035888671875, -1.1444091796875e-05, -0.0007534027099609375, -1.9073486328125e-06, -0.0028498172760009766, -1.1920928244535389e-07, -0.002261160872876644, 0.0, -8.0108642578125e-05, -0.000659942626953125, 0.0, -0.01172792911529541, -3.576278118089249e-07, -0.0011310577392578125, -0.00274658203125, -0.0002574920654296875, -5.7220458984375e-06, -0.0008670062525197864, -3.7431014789035544e-05, -5.726016044616699, -2.3841855067985307e-07, -7.62939453125e-05, -0.27076053619384766, -0.0002002716064453125, -0.0002460479736328125, -5.7220458984375e-06, -0.0003814697265625, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.29752278327941895, 0.0, -0.00045606892672367394, -3.576278118089249e-07], "choice_history": [97, 285, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 75, 298, "3", "<EOS>", 361, 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "append", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 102, 142, 346, 50, 174, "target", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "targets", "<EOS>", 136, 318, 21, 174, "target", "<EOS>", "die", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Template77", "hole1": "append", "hole0": {"_type": "Name", "id": "targets"}}, {"targets": [{"_type": "Name", "id": "target"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "targets"}]}, "_type": "Assign"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Template77", "hole1": "die", "hole0": {"_type": "Name", "id": "target"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"_type": "Template61", "hole0": 3}]}}], "hole3": "use", "hole0": "ArcaneMissiles", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 1, "hole0": "Arcane Missiles"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.533930550037084, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.die(game.other_player.hero)\n"}, {"score_history": [-2.288818359375e-05, -0.00026702880859375, 0.0, -5.483625955093885e-06, -7.152555099310121e-07, -3.933906555175781e-06, -7.045094389468431e-05, -1.4543427823809907e-05, -5.340576171875e-05, -0.0002880096435546875, -0.0004749298095703125, -5.841255187988281e-06, -4.923329470329918e-05, -2.0265579223632812e-06, 0.0, -1.1920926823449918e-07, 0.0, -0.004852294921875, -7.2479248046875e-05, -0.0031663179397583008, -1.9073486328125e-06, -0.00038182735443115234, 0.0, -3.743171691894531e-05, 0.0, -2.288818359375e-05, -6.29425048828125e-05, -2.2649765014648438e-06, -3.933906555175781e-06, -0.010865211486816406, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -6.115436553955078e-05, -4.76837158203125e-05, -1.8954269762616605e-05, 0.0, -1.1324880688334815e-05, 0.0, -2.574910467956215e-05, -7.152555099310121e-07, -0.0063343048095703125, -0.00017547607421875, -0.0051555633544921875, -4.00543212890625e-05, -0.0015213486040011048, -1.1920928244535389e-07, -0.000392913818359375, -1.1444091796875e-05, -6.296683311462402, -6.103515625e-05, -4.9591064453125e-05, -5.7220458984375e-06, -0.03398144245147705, -1.9073486328125e-06, -0.0004140138626098633, 0.0, -2.09808349609375e-05, -0.00084686279296875, -5.7220458984375e-06, -0.0002079010009765625, -7.62939453125e-06, -0.0001201629638671875, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -0.0013717412948608398, 0.0, -0.008188486099243164, 0.0, -0.0001964569091796875, -0.00412750244140625, -5.91278076171875e-05, -0.0006389617919921875, -7.05718994140625e-05, -0.03949000686407089, -2.622600959512056e-06, -0.002976468298584223, 0.0, -0.0003032684326171875, -0.05731391906738281, -0.000286102294921875, -0.05428258329629898, -1.5616295058862306e-05, -4.00543212890625e-05, -8.58306884765625e-05, -0.0060961246490478516, -1.3470642443280667e-05], "choice_history": [97, 285, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "hole3": "use", "hole0": "ArcaneMissiles", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 1, "hole0": "Arcane Missiles"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.542623627670963, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(3), self)\n"}, {"score_history": [-2.288818359375e-05, -0.00026702880859375, 0.0, -5.483625955093885e-06, -7.152555099310121e-07, -3.933906555175781e-06, -7.045094389468431e-05, -1.4543427823809907e-05, -5.340576171875e-05, -0.0002880096435546875, -0.0004749298095703125, -5.841255187988281e-06, -4.923329470329918e-05, -2.0265579223632812e-06, 0.0, -1.1920926823449918e-07, 0.0, -0.004852294921875, -7.2479248046875e-05, -0.0031663179397583008, -1.9073486328125e-06, -0.00038182735443115234, 0.0, -3.743171691894531e-05, 0.0, -2.288818359375e-05, -6.29425048828125e-05, -2.2649765014648438e-06, -3.933906555175781e-06, -5.076220512390137, -3.814697265625e-06, -3.0517578125e-05, -0.0001125335693359375, -2.09808349609375e-05, -5.53131103515625e-05, 0.0, -6.687641143798828e-05, -3.4332275390625e-05, -1.3351438610698096e-05, 0.0, -1.239776611328125e-05, 0.0, -2.706043960643001e-05, -5.960462772236497e-07, -0.02311992645263672, -0.0027923583984375, -0.0014162063598632812, -5.7220458984375e-06, -0.0039751529693603516, -1.9073486328125e-06, -0.000400543212890625, -1.33514404296875e-05, -0.0019931793212890625, -1.33514404296875e-05, -0.004082555882632732, 0.0, -6.103515625e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.0032807050738483667, -3.814697265625e-06, -0.019556045532226562, -0.001373291015625, -0.0010678746039047837, -0.00023707962827757, -0.0023584365844726562, -0.014283180236816406, -2.288818359375e-05, -7.2479248046875e-05, -2.47955322265625e-05, -0.0006103515625, -0.0006027160561643541, -1.1920928244535389e-07, -0.0001544952392578125, -7.62939453125e-06, -0.0025234222412109375, -0.0001735687255859375, -0.000179290771484375, -3.814697265625e-06, -0.0049201250076293945, -1.9073486328125e-06, -0.0008029937744140625, 0.0, -1.1444091796875e-05, -0.0014362335205078125, -1.71661376953125e-05, -0.000179290771484375, -7.62939453125e-06, -8.7738037109375e-05, -3.814697265625e-06, -4.9591064453125e-05, 0.0, -0.0013794898986816406, 0.0, -0.009072184562683105, 0.0, -0.00014495849609375, -6.67572021484375e-05, -0.000286102294921875, -1.9073486328125e-06, -0.0012189148692414165, -1.1920928244535389e-07, -0.008290289901196957, -7.152555099310121e-07, -0.0001544952392578125, -0.010004043579101562, -7.2479248046875e-05, -0.000102996826171875, -9.5367431640625e-06, -0.0003604888916015625, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.026901960372924805, 0.0, -0.0006475386908277869, -9.536738616588991e-07, -0.05049896240234375, 0.0, -4.57763671875e-05, -0.00011444091796875, -9.5367431640625e-06, -0.00279998779296875, -5.364403477869928e-06, -0.006163597106933594, -3.0517578125e-05, -0.0003643035888671875, -1.1444091796875e-05, -0.0007495880126953125, -1.9073486328125e-06, -0.002855539321899414, -1.1920928244535389e-07, -0.002262949012219906, 0.0, -8.0108642578125e-05, -0.0006618499755859375, 0.0, -0.011721253395080566, -3.576278118089249e-07, -0.001140594482421875, -0.00262451171875, -0.0002536773681640625, -5.7220458984375e-06, -0.0008722513448446989, -3.9219088648678735e-05, -0.004238627851009369, 0.0, -0.0011501312255859375, -0.001270294189453125, -3.62396240234375e-05, -0.0016303220763802528, 0.0, -0.0004673004150390625, -5.7220458984375e-06, -0.0009059906005859375, -2.0265579223632812e-06, -0.21323204040527344, -0.0008983612060546875, -0.00058746337890625, -1.71661376953125e-05, -0.6040493249893188, 0.0, -0.010170936584472656, -0.002590179443359375, -0.027990341186523438, -2.47955322265625e-05, -2.47955322265625e-05, 0.0, -0.0136566162109375, -1.71661376953125e-05, -0.000335693359375, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001735687255859375, -1.33514404296875e-05, -0.0010318756103515625, -1.1444091796875e-05, -0.00011444091796875, -3.814697265625e-06, -3.814697265625e-05, 0.0, -0.0011867284774780273, 0.0, -0.008788585662841797, 0.0, -0.0001125335693359375, -0.011312484741210938, -4.57763671875e-05, -0.000705718994140625, -7.2479248046875e-05, -0.09691901504993439, -9.536738616588991e-07, -0.026697812601923943, 0.0, -0.0004100799560546875, -0.06703662872314453, -0.0003147125244140625, -0.13714481890201569, -8.22540732769994e-06, -5.340576171875e-05, -9.34600830078125e-05, -0.003423929214477539, -1.3113015484123025e-05], "choice_history": [97, 285, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 75, 298, "3", "<EOS>", 361, 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "append", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 102, 142, 346, 50, 174, "target", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "targets", "<EOS>", 136, 318, 21, 174, "target", "<EOS>", "damage", "<EOS>", 347, 52, 179, "1", "<EOS>", 50, 174, "self", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Template77", "hole1": "append", "hole0": {"_type": "Name", "id": "targets"}}, {"targets": [{"_type": "Name", "id": "target"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "targets"}]}, "_type": "Assign"}, {"hole2": [{"n": 1, "_type": "Num"}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "target"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"_type": "Template61", "hole0": 3}]}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "hole3": "use", "hole0": "ArcaneMissiles", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "MAGE", "_type": "Template34", "hole1": 1, "hole0": "Arcane Missiles"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.559517222011621, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(3), self)\n"}]}
{"index": 6, "beams": [{"score_history": [-0.0007762908935546875, -9.34600830078125e-05, -7.62939453125e-06, -9.34600830078125e-05, -7.2479248046875e-05, -6.318072337307967e-06, -1.1920928244535389e-07, -2.3841855067985307e-07, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.00019042077474296093, -2.682209014892578e-05, -1.4185905456542969e-05, -5.340576171875e-05, -0.004195213317871094, -0.000217437744140625, -2.3841855067985307e-07, -8.344645902980119e-05, -8.463837730232626e-06, -7.748603820800781e-06, -3.468915383564308e-05, 0.0, -0.0022393465042114258, 0.0, -5.1736828027060255e-05, 0.0, -0.0002079010009765625, -0.000133514404296875, -0.0002460479736328125, -0.00048089027404785156, -2.288818359375e-05, -0.00057220458984375, -1.33514404296875e-05, -2.288818359375e-05, -7.62939453125e-06, -6.103515625e-05, -3.0517578125e-05, -0.00038051605224609375, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0007730672368779778, -5.960462772236497e-07, -0.000370025634765625, -3.24249267578125e-05, -3.4332275390625e-05, 0.0, -7.82012939453125e-05, 0.0, -0.0005782842636108398, -2.0265579223632812e-06, -2.944469088106416e-05, -4.887569048150908e-06, -0.00020799753838218749, -1.311301275563892e-06, -0.00028228759765625, -0.000339508056640625, -6.29425048828125e-05, -0.011140704154968262, -8.344646857949556e-07, -1.33514404296875e-05, -4.38690185546875e-05, -0.0013664107536897063, -0.00023436531773768365], "choice_history": [96, 173, 358, 105, 152, "Arcane", "Shot", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Arcane", " ", "Shot", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Arcane Shot", "_type": "Template14", "hole2": "HUNTER", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "ArcaneShot"}], "_type": "Module"}, "score": -0.026006628136535426, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.0007762908935546875, -9.34600830078125e-05, -7.62939453125e-06, -9.34600830078125e-05, -7.2479248046875e-05, -6.318072337307967e-06, -1.1920928244535389e-07, -2.3841855067985307e-07, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.00019042077474296093, -2.682209014892578e-05, -1.4185905456542969e-05, -5.340576171875e-05, -0.004195213317871094, -0.000217437744140625, -2.3841855067985307e-07, -8.344645902980119e-05, -8.463837730232626e-06, -7.748603820800781e-06, -3.468915383564308e-05, 0.0, -0.0022393465042114258, 0.0, -5.1736828027060255e-05, 0.0, -0.0002079010009765625, -0.000133514404296875, -0.0002460479736328125, -0.00048089027404785156, -2.288818359375e-05, -0.00057220458984375, -1.33514404296875e-05, -2.288818359375e-05, -7.62939453125e-06, -6.103515625e-05, -3.0517578125e-05, -0.00038051605224609375, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0007730672368779778, -5.960462772236497e-07, -0.000370025634765625, -3.24249267578125e-05, -3.4332275390625e-05, 0.0, -7.82012939453125e-05, 0.0, -0.0005782842636108398, -2.0265579223632812e-06, -2.944469088106416e-05, -4.887569048150908e-06, -0.00020799753838218749, -1.311301275563892e-06, -0.00028228759765625, -0.000339508056640625, -6.29425048828125e-05, -4.503832817077637, -1.5497195136049413e-06, -5.7220458984375e-06, -8.20159912109375e-05, -0.0006344266002997756, -0.00026297569274902344], "choice_history": [96, 173, 358, 105, 152, "Arcane", "Shot", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Arcane", " ", "Shot", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Arcane Shot", "_type": "Template14", "hole2": "HUNTER", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "ArcaneShot"}], "_type": "Module"}, "score": -4.518026600113778, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"score_history": [-0.0007762908935546875, -9.34600830078125e-05, -7.62939453125e-06, -9.34600830078125e-05, -7.2479248046875e-05, -6.318072337307967e-06, -1.1920928244535389e-07, -2.3841855067985307e-07, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.00019042077474296093, -2.682209014892578e-05, -1.4185905456542969e-05, -5.340576171875e-05, -0.004195213317871094, -0.000217437744140625, -2.3841855067985307e-07, -8.344645902980119e-05, -8.463837730232626e-06, -7.748603820800781e-06, -3.468915383564308e-05, 0.0, -6.348198890686035, 0.0, -0.0002713203430175781, 0.0, -0.0003261566162109375, -0.0001068115234375, -0.0001888275146484375, -0.0003892183303833008, -1.1444091796875e-05, -0.0003910064697265625, -1.33514404296875e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.91278076171875e-05, -2.86102294921875e-05, -0.00037288665771484375, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0007427884265780449, -7.152555099310121e-07, -0.0003719329833984375, -3.0517578125e-05, -3.4332275390625e-05, 0.0, -7.62939453125e-05, 0.0, -0.0005761384963989258, -2.0265579223632812e-06, -2.72989236691501e-05, -4.6491513785440475e-06, -0.0002377928321948275, -1.311301275563892e-06, -0.0002765655517578125, -0.0003414154052734375, -6.4849853515625e-05, -0.011117815971374512, -8.344646857949556e-07, -1.33514404296875e-05, -4.38690185546875e-05, -0.001357357483357191, -0.00022852406254969537], "choice_history": [96, 173, 358, 105, 152, "Arcane", "Shot", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Arcane", " ", "Shot", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Arcane Shot", "_type": "Template14", "hole2": "WARRIOR", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "ArcaneShot"}], "_type": "Module"}, "score": -6.3718721161497385, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.0007762908935546875, -9.34600830078125e-05, -7.62939453125e-06, -9.34600830078125e-05, -7.2479248046875e-05, -6.318072337307967e-06, -1.1920928244535389e-07, -2.3841855067985307e-07, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.00019042077474296093, -2.682209014892578e-05, -1.4185905456542969e-05, -5.340576171875e-05, -0.004195213317871094, -0.000217437744140625, -2.3841855067985307e-07, -8.344645902980119e-05, -8.463837730232626e-06, -7.748603820800781e-06, -3.468915383564308e-05, 0.0, -0.0022393465042114258, 0.0, -5.1736828027060255e-05, 0.0, -0.0002079010009765625, -0.000133514404296875, -0.0002460479736328125, -0.00048089027404785156, -2.288818359375e-05, -0.00057220458984375, -1.33514404296875e-05, -2.288818359375e-05, -7.62939453125e-06, -6.103515625e-05, -3.0517578125e-05, -0.00038051605224609375, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0007730672368779778, -5.960462772236497e-07, -0.000370025634765625, -3.24249267578125e-05, -3.4332275390625e-05, 0.0, -7.82012939453125e-05, 0.0, -0.0005782842636108398, -2.0265579223632812e-06, -2.944469088106416e-05, -4.887569048150908e-06, -0.00020799753838218749, -1.311301275563892e-06, -0.00028228759765625, -0.000339508056640625, -6.29425048828125e-05, -0.011140704154968262, -8.344646857949556e-07, -1.33514404296875e-05, -4.38690185546875e-05, -7.1510725021362305, -0.00015473364328499883], "choice_history": [96, 173, 358, 105, 152, "Arcane", "Shot", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Arcane", " ", "Shot", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "damage", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Arcane Shot", "_type": "Template14", "hole2": "HUNTER", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "damage"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "ArcaneShot"}], "_type": "Module"}, "score": -7.1756330878446235, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), damage)\n"}, {"score_history": [-0.0007762908935546875, -9.34600830078125e-05, -7.62939453125e-06, -9.34600830078125e-05, -7.2479248046875e-05, -6.318072337307967e-06, -1.1920928244535389e-07, -2.3841855067985307e-07, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.00019042077474296093, -2.682209014892578e-05, -1.4185905456542969e-05, -5.340576171875e-05, -0.004195213317871094, -0.000217437744140625, -2.3841855067985307e-07, -8.344645902980119e-05, -8.463837730232626e-06, -7.748603820800781e-06, -3.468915383564308e-05, 0.0, -0.0022393465042114258, 0.0, -5.1736828027060255e-05, 0.0, -0.0002079010009765625, -0.000133514404296875, -0.0002460479736328125, -0.00048089027404785156, -2.288818359375e-05, -0.00057220458984375, -1.33514404296875e-05, -2.288818359375e-05, -7.62939453125e-06, -6.103515625e-05, -3.0517578125e-05, -0.00038051605224609375, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0007730672368779778, -5.960462772236497e-07, -0.000370025634765625, -3.24249267578125e-05, -3.4332275390625e-05, 0.0, -7.82012939453125e-05, 0.0, -7.704360485076904, 0.0, -0.12370872497558594, 0.0, -0.013713320717215538, -5.364403477869928e-06, -0.0002460479736328125, -0.0004787445068359375, -5.53131103515625e-05, -0.007478833198547363, -1.5497195136049413e-06, -2.09808349609375e-05, -5.53131103515625e-05, -0.0013981317169964314, -0.00025761054712347686], "choice_history": [96, 173, 358, 105, 152, "Arcane", "Shot", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Arcane", " ", "Shot", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Arcane Shot", "_type": "Template14", "hole2": "HUNTER", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}}], "_type": "ClassDef", "name": "ArcaneShot"}], "_type": "Module"}, "score": -7.863478822797667, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.0007762908935546875, -9.34600830078125e-05, -7.62939453125e-06, -9.34600830078125e-05, -7.2479248046875e-05, -6.318072337307967e-06, -1.1920928244535389e-07, -2.3841855067985307e-07, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.00019042077474296093, -2.682209014892578e-05, -1.4185905456542969e-05, -5.340576171875e-05, -6.89804744720459, -0.5790176391601562, -0.00140380859375, -3.814697265625e-06, -0.0027146609500050545, -8.630752563476562e-05, -0.021453022956848145, 0.0, -0.19645404815673828, -0.000293731689453125, -1.71661376953125e-05, -2.0503824998741038e-05, -0.0001171822368633002, -9.417505680175964e-06, -7.43865966796875e-05, -0.0004558563232421875, -6.67572021484375e-05, -6.153236608952284e-05, -1.9073486328125e-06, -2.09808349609375e-05, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.001087188720703125, 0.0, -0.003004789352416992, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -0.0001506805419921875, -5.7220458984375e-06, -0.1195230484008789, -0.010080337524414062, -0.0016903876094147563, -2.0265579223632812e-06, -0.009160041809082031, 0.0, -0.0019817352294921875, 0.0, -3.24249267578125e-05, 0.0, -0.014992117881774902, -1.9073486328125e-06, -0.000518798828125, 0.0, -0.0025098323822021484, -1.1920928244535389e-07, -0.0004100799560546875, -3.62396240234375e-05, -7.82012939453125e-05, 0.0, -3.0517578125e-05, 0.0, -0.0002586841583251953, -1.9073486328125e-06, -2.574920654296875e-05, -2.622600959512056e-06, -0.0006094354903325438, -1.9073468138230965e-06, -0.00022125244140625, -0.000293731689453125, -4.00543212890625e-05, -0.012689828872680664, -7.152555099310121e-07, -1.1444091796875e-05, -3.0517578125e-05, -0.0018217135220766068, -0.00010085097164846957], "choice_history": [96, 173, 358, 105, 152, "Arcane", "Shot", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 351, 53, 183, "Arcane", " ", "Shot", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 51, 175, "False", "<EOS>", 42, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": [{"_type": "Str", "s": "Arcane Shot"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}, {"value": true, "_type": "NameConstant"}, {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "ArcaneShot"}], "_type": "Module"}, "score": -7.883172239183253, "inferred_code": "class ArcaneShot(SpellCard):\n    super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n        FREE, True, hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.0007762908935546875, -9.34600830078125e-05, -7.62939453125e-06, -9.34600830078125e-05, -7.2479248046875e-05, -6.318072337307967e-06, -1.1920928244535389e-07, -2.3841855067985307e-07, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.00019042077474296093, -2.682209014892578e-05, -1.4185905456542969e-05, -5.340576171875e-05, -6.89804744720459, -0.8916311264038086, -6.67572021484375e-05, 0.0, -0.0001672396610956639, -9.5367431640625e-06, -0.004844546318054199, 0.0, -0.07953453063964844, -2.86102294921875e-05, -3.24249267578125e-05, -1.1444046322139911e-05, -0.00010156515054404736, -2.0861623852397315e-05, -0.06521224975585938, -5.53131103515625e-05, -5.7220458984375e-06, -3.218645360902883e-06, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -0.0005855560302734375, 0.0, -0.0037420988082885742, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.82012939453125e-05, -3.814697265625e-06, -0.000148773193359375, -1.9073486328125e-06, -0.0001277923583984375, -0.00023651123046875, -3.24249267578125e-05, -0.0008271932601928711, -3.635883331298828e-05, -0.010957717895507812, -6.866455078125e-05, -8.20159912109375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0007688999176025391, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0006270393496379256, -1.1920922133867862e-06, -0.0008087158203125, -3.814697265625e-05, -4.1961669921875e-05, 0.0, -7.82012939453125e-05, 0.0, -0.0008612870587967336, -2.0265579223632812e-06, -3.516673677950166e-05, -3.814689989667386e-06, -0.00028057725285179913, -1.0728830375228426e-06, -0.0002384185791015625, -0.00028228759765625, -5.53131103515625e-05, -0.010884881019592285, -7.152555099310121e-07, -1.1444091796875e-05, -3.814697265625e-05, -0.0018397544045001268, -0.00011563290900085121], "choice_history": [96, 173, 358, 105, 152, "Arcane", "Shot", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Arcane", " ", "Shot", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Arcane Shot"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "ArcaneShot"}], "_type": "Module"}, "score": -7.975196108791657, "inferred_code": "class ArcaneShot(SpellCard):\n    super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n        FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.0007762908935546875, -9.34600830078125e-05, -7.62939453125e-06, -9.34600830078125e-05, -7.2479248046875e-05, -6.318072337307967e-06, -1.1920928244535389e-07, -2.3841855067985307e-07, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.00019042077474296093, -2.682209014892578e-05, -1.4185905456542969e-05, -5.340576171875e-05, -6.672396659851074, -0.06474876403808594, -1.0609570381348021e-05, -5.4717038437956944e-05, -3.7788631743751466e-05, 0.0, -0.0005947570316493511, 0.0, -0.0024166107177734375, 0.0, -1.306920051574707, -0.0002422332763671875, -6.103515625e-05, 0.0, -0.0004138946533203125, 0.0, -0.0014307498931884766, 0.0, -5.9485435485839844e-05, -1.7881377516459906e-06, -0.00017867848509922624, -3.4570634852570947e-06, -0.00146484375, -0.0002899169921875, -2.86102294921875e-05, -0.008237361907958984, -2.3841830625315197e-06, -2.47955322265625e-05, -3.24249267578125e-05, -0.0025888304226100445, -0.00025832641404122114], "choice_history": [96, 173, 358, 105, 152, "Arcane", "Shot", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 116, 196, "Arcane", " ", "Shot", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "HUNTER", "_type": "Template12", "hole1": 1, "hole0": "Arcane Shot"}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "ArcaneShot"}], "_type": "Module"}, "score": -8.063862215077016, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.0007762908935546875, -9.34600830078125e-05, -7.62939453125e-06, -9.34600830078125e-05, -7.2479248046875e-05, -6.318072337307967e-06, -1.1920928244535389e-07, -2.3841855067985307e-07, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.00019042077474296093, -2.682209014892578e-05, -1.4185905456542969e-05, -5.340576171875e-05, -6.672396659851074, -0.06474876403808594, -1.0609570381348021e-05, -5.4717038437956944e-05, -3.7788631743751466e-05, 0.0, -0.0005947570316493511, 0.0, -0.0024166107177734375, 0.0, -0.8347768783569336, -0.0019407272338867188, -5.53131103515625e-05, 0.0, -0.0019709523767232895, -4.410743713378906e-06, -0.0005880594253540039, -1.1920928244535389e-07, -0.029506683349609375, -0.015189170837402344, -0.001277923583984375, -0.0003337855450809002, -2.264974000354414e-06, -7.2479248046875e-05, -3.0517578125e-05, -0.03785693272948265, -2.9802276912960224e-06, -0.014286041259765625, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -0.0131911039352417, -3.576278118089249e-07, -2.8133377782069147e-05, -3.814689989667386e-06, -0.0005756114260293543, -1.1920928244535389e-07, -0.024232864379882812, -0.0006580352783203125, -2.86102294921875e-05, -0.01239752396941185, -3.2186455882765586e-06, -0.0004558563232421875, -7.2479248046875e-05, -0.0031334953382611275, -0.0001474617893109098, -0.0066165924072265625, -4.38690185546875e-05, -0.10187149047851562, 0.0, -0.32087504863739014, -5.841255187988281e-06, -8.440017700195312e-05, -1.9073468138230965e-06, -0.00401253392919898, -1.1920928244535389e-07, -0.015956878662109375, -0.0015163421630859375, -3.0517578125e-05, -0.019870873540639877, -1.9073468138230965e-06, -0.0003681182861328125, -6.866455078125e-05, -0.0032432968728244305, -0.00015592563431710005], "choice_history": [96, 173, 358, 105, 152, "Arcane", "Shot", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 116, 196, "Arcane", " ", "Shot", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "HUNTER", "_type": "Template12", "hole1": 1, "hole0": "Arcane Shot"}, {"hole4": "damage", "hole6": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole3": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole0": {"_type": "Template79", "hole0": "super"}, "_type": "Template7", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole7": "damage", "hole8": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "hole5": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "hole1": "use"}], "_type": "ClassDef", "name": "ArcaneShot"}], "_type": "Module"}, "score": -8.209265059477161, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.0007762908935546875, -9.34600830078125e-05, -7.62939453125e-06, -9.34600830078125e-05, -7.2479248046875e-05, -6.318072337307967e-06, -1.1920928244535389e-07, -2.3841855067985307e-07, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.00019042077474296093, -2.682209014892578e-05, -1.4185905456542969e-05, -5.340576171875e-05, -0.004195213317871094, -0.000217437744140625, -2.3841855067985307e-07, -8.344645902980119e-05, -8.463837730232626e-06, -7.748603820800781e-06, -3.468915383564308e-05, 0.0, -0.0022393465042114258, 0.0, -5.1736828027060255e-05, 0.0, -0.0002079010009765625, -0.000133514404296875, -0.0002460479736328125, -0.00048089027404785156, -2.288818359375e-05, -0.00057220458984375, -1.33514404296875e-05, -2.288818359375e-05, -7.62939453125e-06, -6.103515625e-05, -3.0517578125e-05, -7.950296401977539, 0.0, -0.08417785167694092, 0.0, -0.16934646666049957, -9.059892363438848e-06, -0.0017833709716796875, -0.0001068115234375, -3.62396240234375e-05, 0.0, -0.000186920166015625, 0.0, -0.004602670203894377, -2.1457672119140625e-06, -4.279613131075166e-05, -2.50339189733495e-06, -0.00012802219134755433, -2.264974000354414e-06, -0.0002689361572265625, -0.000354766845703125, -3.24249267578125e-05, -0.011079788208007812, -1.311301275563892e-06, -1.52587890625e-05, -3.62396240234375e-05, -0.0016333649400621653, -0.00016403186600655317], "choice_history": [96, 173, 358, 105, 152, "Arcane", "Shot", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Arcane", " ", "Shot", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Arcane Shot", "_type": "Template14", "hole2": "HUNTER", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "ArcaneShot"}], "_type": "Module"}, "score": -8.234310277020704, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=game.other_player.hero)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.0007762908935546875, -9.34600830078125e-05, -7.62939453125e-06, -9.34600830078125e-05, -7.2479248046875e-05, -6.318072337307967e-06, -1.1920928244535389e-07, -2.3841855067985307e-07, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.00019042077474296093, -2.682209014892578e-05, -1.4185905456542969e-05, -5.340576171875e-05, -0.004195213317871094, -0.000217437744140625, -2.3841855067985307e-07, -8.344645902980119e-05, -8.463837730232626e-06, -7.748603820800781e-06, -3.468915383564308e-05, 0.0, -0.0022393465042114258, 0.0, -5.1736828027060255e-05, 0.0, -0.0002079010009765625, -0.000133514404296875, -0.0002460479736328125, -0.00048089027404785156, -2.288818359375e-05, -0.00057220458984375, -1.33514404296875e-05, -2.288818359375e-05, -7.62939453125e-06, -6.103515625e-05, -3.0517578125e-05, -0.00038051605224609375, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -8.448810577392578, -7.62939453125e-06, -0.0004444122314453125, -0.0001125335693359375, -0.0001049041748046875, 0.0, -0.0001049041748046875, 0.0, -0.0003287792205810547, -2.0265579223632812e-06, -2.2888181774760596e-05, -3.099436753473128e-06, -0.0001826112566050142, -1.0728830375228426e-06, -0.0003509521484375, -0.000335693359375, -5.7220458984375e-05, -0.010744094848632812, -8.344646857949556e-07, -1.52587890625e-05, -4.57763671875e-05, -0.001303158001974225, -0.00020015225163660944], "choice_history": [96, 173, 358, 105, 152, "Arcane", "Shot", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Arcane", " ", "Shot", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "targeting", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Arcane Shot", "_type": "Template14", "hole2": "HUNTER", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "targeting"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "ArcaneShot"}], "_type": "Module"}, "score": -8.473588334656306, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.targeting)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.0007762908935546875, -9.34600830078125e-05, -7.62939453125e-06, -9.34600830078125e-05, -7.2479248046875e-05, -6.318072337307967e-06, -1.1920928244535389e-07, -2.3841855067985307e-07, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.00019042077474296093, -2.682209014892578e-05, -1.4185905456542969e-05, -5.340576171875e-05, -7.8846588134765625, -0.0002918243408203125, -0.09815025329589844, -0.0018749237060546875, -0.0001277923583984375, 0.0, -0.0003072023391723633, -1.9073486328125e-06, -3.421306610107422e-05, -1.1920928244535389e-07, -1.7166135876323096e-05, -3.576278118089249e-07, -0.00023565837182104588, -2.3841855067985307e-07, -0.5071420669555664, -5.91278076171875e-05, -0.000293731689453125, -1.9073486328125e-06, -0.0017910003662109375, 0.0, -0.004852890968322754, -2.384185791015625e-06, -1.9669512766995467e-05, -3.814689989667386e-06, -2.5987277695094235e-05, -3.099436753473128e-06, -0.00061798095703125, -0.0004425048828125, -2.288818359375e-05, -0.009186148643493652, -1.5497195136049413e-06, -4.00543212890625e-05, -2.6702880859375e-05, -0.0028175737243145704, -0.000345349166309461], "choice_history": [96, 173, 358, 105, 152, "Arcane", "Shot", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "ArcaneShot"}], "_type": "Module"}, "score": -8.514760342576878, "inferred_code": "class ArcaneShot(SpellCard):\n    super().use(player, game)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-7.780442237854004, -0.39432811737060547, -2.3007127310847864e-05, -0.00045658653834834695, -1.0728830375228426e-06, -0.00018642382929101586, -6.878376007080078e-05, -1.1920928244535389e-07, -2.288818359375e-05, -0.00102996826171875, -0.008319854736328125, -3.4332275390625e-05, -6.67572021484375e-05, -1.537799835205078e-05, 0.0, -0.00023293495178222656, -1.9073486328125e-06, -0.0063648223876953125, -6.29425048828125e-05, -0.0001659393310546875, -6.794906312279636e-06, -0.00012826653255615383, -3.5643577575683594e-05, -0.1928272247314453, -2.86102294921875e-05, -1.52587890625e-05, -2.5033941710717045e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004405975341796875, 0.0, -0.003965616226196289, -7.62939453125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -6.866455078125e-05, -3.814697265625e-06, -0.0001373291015625, -1.9073486328125e-06, -6.29425048828125e-05, -0.0001049041748046875, -2.09808349609375e-05, -0.0006796121597290039, -2.872943878173828e-05, -0.011029243469238281, -6.67572021484375e-05, -8.96453857421875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0007822513580322266, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000643013569060713, -1.0728830375228426e-06, -4.434583752299659e-05, 0.0, -1.3112978194840252e-05, 0.0, -9.918212890625e-05, -7.2479248046875e-05, -1.3470619705913123e-05, -2.384185791015625e-06, -0.41745758056640625, -2.288818359375e-05, -9.1552734375e-05, -9.72747802734375e-05, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -7.832050323486328e-05, -1.9073486328125e-06, -6.079673767089844e-06, 0.0, -5.9604644775390625e-06, -1.1920928244535389e-07, -6.079648301238194e-05, -1.1920928244535389e-07, -0.14712142944335938, -0.00084686279296875, -0.0073261260986328125, -4.57763671875e-05, -0.02753448486328125, 0.0, -0.0004962682723999023, -2.0265579223632812e-06, -4.768371127283899e-06, -7.152555099310121e-07, -0.00016699766274541616, -1.1920928244535389e-07, -0.0003566741943359375, -0.019624710083007812, -3.4332275390625e-05, -0.1671091616153717, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -0.00021624311921186745, -0.00010097026824951172, -0.4159402847290039, -0.014957427978515625, -0.3794584274291992, -1.9073486328125e-06, -0.0063838958740234375, -1.9073486328125e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -0.003952020779252052, -1.1920928244535389e-07], "choice_history": [97, 285, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Arcane", " ", "Shot", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "ArcaneShot", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Arcane Shot"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -10.012954829073763, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.draw()\n"}, {"score_history": [-0.0007762908935546875, -9.34600830078125e-05, -7.62939453125e-06, -11.141301155090332, -2.3281478881835938, -0.0018773064948618412, -0.0010065010283142328, -0.006666476372629404, -0.0005261393962427974, -1.1682462172757369e-05, -0.141135573387146, 0.0], "choice_history": [96, 173, 358, 127, 230, "Arcane", "Shot", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>"], "model_output": {"body": [{"hole2": "ROGUE", "_type": "Template31", "hole1": 1, "hole0": "ArcaneShot"}], "_type": "Module"}, "score": -13.621550102786387, "inferred_code": "super().__init__('ArcaneShot', 1, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON)\n"}, {"score_history": [-0.0007762908935546875, -9.34600830078125e-05, -22.280561447143555], "choice_history": [96, 173, 357], "model_output": {"body": [], "_type": "Module"}, "score": -22.281431198120117, "inferred_code": ""}]}
{"index": 7, "beams": [{"score_history": [-0.0012531280517578125, -0.001506805419921875, -0.009176359511911869, -3.2186049793381244e-05, -7.855583680793643e-05, -0.0029408561531454325, -0.00016546178085263819, -1.1920922133867862e-06, -3.0517578125e-05, -0.0022983551025390625, -0.000598907470703125, -1.1920928244535389e-07, -1.8715843907557428e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -7.244452717714012e-05, 0.0, -0.000232696533203125, 0.0, -0.0010993480682373047, -1.9073486328125e-06, -0.0007397984736599028, -1.9073486328125e-06, -2.86102294921875e-05, -0.0012493133544921875, -0.0014247894287109375, -1.2040138244628906e-05, -5.483620952873025e-06, 0.0, -2.3603161025675945e-05, -0.0005755389574915171, -4.768370445162873e-07], "choice_history": [97, 283, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 358, 127, 230, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole2": 2, "_type": "Template68", "hole1": 5, "hole0": "Weapon"}], "hole3": "create_weapon", "hole0": "ArcaniteReaper", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 5, "hole0": "Arcanite Reaper"}], "hole1": "WeaponCard"}, "score": -0.02357877408040565, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"score_history": [-0.0012531280517578125, -0.001506805419921875, -4.6976518630981445, -3.2186049793381244e-05, -7.855583680793643e-05, -0.0029408561531454325, -0.00016546178085263819, -1.1920922133867862e-06, -3.0517578125e-05, -0.0022983551025390625, -0.000598907470703125, -1.1920928244535389e-07, -1.8715843907557428e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -7.244452717714012e-05, 0.0, -0.000232696533203125, 0.0, -0.0010993480682373047, -1.9073486328125e-06, -0.0007397984736599028, -1.9073486328125e-06, -2.86102294921875e-05, -0.0012493133544921875, -0.0014247894287109375, -1.2040138244628906e-05, -5.483620952873025e-06, 0.0, -2.3603161025675945e-05, -0.0005755389574915171, -4.768370445162873e-07], "choice_history": [97, 283, "<UNK>", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 358, 127, 230, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole2": 2, "_type": "Template68", "hole1": 5, "hole0": "Weapon"}], "hole3": "create_weapon", "hole0": "<UNK>Reaper", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 5, "hole0": "Arcanite Reaper"}], "hole1": "WeaponCard"}, "score": -4.712054277666638, "inferred_code": "class <UNK>Reaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"score_history": [-0.0012531280517578125, -0.001506805419921875, -0.009176359511911869, -3.2186049793381244e-05, -7.855583680793643e-05, -5.852120399475098, -1.8834954971680418e-05, -2.3841830625315197e-06, -9.5367431640625e-06, -0.0074520111083984375, -0.0010662078857421875, -1.1920928244535389e-07, -1.5020364116935525e-05, 0.0, -9.5367431640625e-06, -7.431671838276088e-05, 0.0, -0.00022125244140625, 0.0, -0.0010037422180175781, -1.9073486328125e-06, -0.0006384739535860717, -1.9073486328125e-06, -3.0517578125e-05, -0.0010986328125, -0.001453399658203125, -1.2040138244628906e-05, -5.6028297876764555e-06, 0.0, -2.455681169521995e-05, -0.0005729165277443826, -4.768370445162873e-07], "choice_history": [97, 283, "Arcanite", "Reaper", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole2": 2, "_type": "Template68", "hole1": 5, "hole0": "Weapon"}], "hole3": "create_weapon", "hole0": "ArcaniteReaper", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 5, "hole0": "Arcanite Reaper"}], "hole1": "MinionCard"}, "score": -5.877880828759196, "inferred_code": "class ArcaniteReaper(MinionCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"score_history": [-0.0012531280517578125, -0.001506805419921875, -0.009176359511911869, -3.2186049793381244e-05, -7.855583680793643e-05, -0.0029408561531454325, -0.00016546178085263819, -1.1920922133867862e-06, -3.0517578125e-05, -0.0022983551025390625, -0.000598907470703125, -1.1920928244535389e-07, -1.8715843907557428e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -7.244452717714012e-05, 0.0, -0.000232696533203125, 0.0, -7.46726655960083, -1.9073486328125e-06, -0.00043988204561173916, -1.9073486328125e-06, -1.1444091796875e-05, -0.009588241577148438, -0.0020160675048828125, -2.1457672119140625e-05, -4.768367489305092e-06, 0.0, -2.6225699912174605e-05, -0.0006420569261536002, -4.768370445162873e-07], "choice_history": [97, 283, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 358, 127, 230, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole2": 2, "_type": "Template68", "hole1": 5, "hole0": "Weapon"}], "hole3": "use", "hole0": "ArcaniteReaper", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 5, "hole0": "Arcanite Reaper"}], "hole1": "WeaponCard"}, "score": -7.498436952134043, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player):\n        return Weapon(5, 2)\n"}, {"score_history": [-0.0012531280517578125, -0.001506805419921875, -0.009176359511911869, -3.2186049793381244e-05, -7.855583680793643e-05, -0.0029408561531454325, -0.00016546178085263819, -1.1920922133867862e-06, -3.0517578125e-05, -7.526030540466309, -0.000885009765625, -1.9073486328125e-05, -1.9073486328125e-06, -2.0503992345766164e-05, -5.7220458984375e-06, -7.426738739013672e-05, -2.0265579223632812e-06, -0.0006866455078125, -0.000476837158203125, -3.62396240234375e-05, -1.728522875055205e-05, -2.110004425048828e-05, -1.4305104514278355e-06, -2.288818359375e-05, -2.288818359375e-05, -5.7220458984375e-06, -4.279723725630902e-05, -1.71661376953125e-05, -5.91278076171875e-05, -5.7220458984375e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.00025975704193115234, -5.7220458984375e-06, -0.001736760139465332, 0.0, -2.09808349609375e-05, 0.0, -0.000213623046875, 0.0, -0.0003968477249145508, -3.814697265625e-06, -0.0077533721923828125, 0.0, -0.000141143798828125, -7.62939453125e-06, -4.720676952274516e-05, -4.291534423828125e-06, -0.0007703304290771484, -3.814697265625e-06, -0.00017821788787841797, -3.814697265625e-06, -0.0004177093505859375, -0.000888824462890625, -0.0005855560302734375, -0.00010656975791789591, -1.001357759378152e-05, -9.298310033045709e-06, -4.887576324108522e-06, -0.001978246495127678, -1.1920928244535389e-07], "choice_history": [97, 283, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Arcanite", " ", "Reaper", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole2": 2, "_type": "Template68", "hole1": 5, "hole0": "Weapon"}], "hole3": "create_weapon", "hole0": "ArcaniteReaper", "_type": "Template5", "hole2": [{"hole2": [{"_type": "Str", "s": "Arcanite Reaper"}, {"n": 5, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "WeaponCard"}, "score": -7.55922856926383, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, True)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"score_history": [-0.0012531280517578125, -0.001506805419921875, -0.009176359511911869, -3.2186049793381244e-05, -7.855583680793643e-05, -0.0029408561531454325, -0.00016546178085263819, -1.1920922133867862e-06, -3.0517578125e-05, -7.534022331237793, -0.000133514404296875, -7.629378160345368e-06, -3.8743008190067485e-05, -1.537799835205078e-05, -5.7220458984375e-06, -6.094260606914759e-05, -1.9073486328125e-06, -0.0003643035888671875, -1.1444091796875e-05, -0.04186105728149414, 0.0, -0.001033902051858604, -1.33514404296875e-05, -0.0007580468663945794, -3.814697265625e-06, -7.2479248046875e-05, -0.0015277862548828125, -0.0021800994873046875, -8.70227722771233e-06, -9.059865078597795e-06, -1.1920928244535389e-07, -2.8132995794294402e-05, -0.000647179433144629, -3.576278118089249e-07], "choice_history": [97, 283, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole2": 2, "_type": "Template68", "hole1": 5, "hole0": "Weapon"}], "hole3": "create_weapon", "hole0": "ArcaniteReaper", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "WARRIOR", "_type": "Template34", "hole1": 5, "hole0": "Arcanite Reaper"}], "hole1": "WeaponCard"}, "score": -7.597991066918603, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"score_history": [-0.0012531280517578125, -0.001506805419921875, -0.009176359511911869, -3.2186049793381244e-05, -7.855583680793643e-05, -0.0029408561531454325, -0.00016546178085263819, -1.1920922133867862e-06, -3.0517578125e-05, -0.0022983551025390625, -0.000598907470703125, -1.1920928244535389e-07, -1.8715843907557428e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -7.244452717714012e-05, 0.0, -0.000232696533203125, 0.0, -0.0010993480682373047, -1.9073486328125e-06, -0.0007397984736599028, -1.9073486328125e-06, -2.86102294921875e-05, -0.0012493133544921875, -0.0014247894287109375, -1.2040138244628906e-05, -5.483620952873025e-06, 0.0, -2.3603161025675945e-05, -7.616614818572998, -2.741813204920618e-06], "choice_history": [97, 283, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 358, 127, 230, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "5", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole2": 5, "_type": "Template68", "hole1": 5, "hole0": "Weapon"}], "hole3": "create_weapon", "hole0": "ArcaniteReaper", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 5, "hole0": "Arcanite Reaper"}], "hole1": "WeaponCard"}, "score": -7.639620318672073, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 5)\n"}, {"score_history": [-0.0012531280517578125, -0.001506805419921875, -0.009176359511911869, -3.2186049793381244e-05, -7.855583680793643e-05, -0.0029408561531454325, -0.00016546178085263819, -1.1920922133867862e-06, -3.0517578125e-05, -0.0022983551025390625, -0.000598907470703125, -1.1920928244535389e-07, -1.8715843907557428e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -7.244452717714012e-05, 0.0, -0.000232696533203125, 0.0, -0.0010993480682373047, -1.9073486328125e-06, -7.683960437774658, -0.0015413761138916016, -7.62939453125e-05, -0.00186920166015625, -0.0010662078857421875, -1.239776611328125e-05, -5.245203283266164e-06, 0.0, -2.038458114839159e-05, -0.0006338321836665273, -4.768370445162873e-07], "choice_history": [97, 283, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 358, 127, 230, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "create_weapon", "<EOS>", "create_weapon", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "create_weapon", "hole6": [{"hole2": 2, "_type": "Template68", "hole1": 5, "hole0": "Weapon"}], "hole3": "create_weapon", "hole0": "ArcaniteReaper", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 5, "hole0": "Arcanite Reaper"}], "hole1": "WeaponCard"}, "score": -7.708703066481675, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, create_weapon):\n        return Weapon(5, 2)\n"}, {"score_history": [-0.0012531280517578125, -0.001506805419921875, -0.009176359511911869, -3.2186049793381244e-05, -7.855583680793643e-05, -0.0029408561531454325, -0.00016546178085263819, -1.1920922133867862e-06, -3.0517578125e-05, -7.140066146850586, -0.000484466552734375, -7.152555099310121e-07, -1.621246337890625e-05, -3.933906555175781e-06, -1.52587890625e-05, -6.712693721055984e-05, 0.0, -0.001209855079650879, -1.33514404296875e-05, -0.2503167986869812, -1.728534698486328e-05, -0.2899808883666992, -9.5367431640625e-06, -0.00074005126953125, -1.9073486328125e-06, -6.866455078125e-05, -1.9073486328125e-06, -0.0005354866152629256, -0.0019037723541259766, -3.826618194580078e-05, -0.0002155303955078125, -0.05799365043640137, -2.0265579223632812e-06, -0.0066678524017333984, -1.9073486328125e-05, -0.0001150369644165039, 0.0, -0.000431060791015625, -0.00074005126953125, -0.00048828125, -3.3855438232421875e-05, -2.0503824998741038e-05, -9.536738616588991e-07, -1.0013547580456361e-05, -0.0015265748370438814, -2.3841855067985307e-07], "choice_history": [97, 283, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 358, 125, 223, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole2": 2, "_type": "Template68", "hole1": 5, "hole0": "Weapon"}], "hole3": "create_weapon", "hole0": "ArcaniteReaper", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Arcanite Reaper", "_type": "Template27", "hole2": "WARRIOR", "hole1": 5}], "hole1": "WeaponCard"}, "score": -7.768941397855514, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"score_history": [-0.0012531280517578125, -0.001506805419921875, -0.009176359511911869, -3.2186049793381244e-05, -7.855583680793643e-05, -0.0029408561531454325, -0.00016546178085263819, -1.1920922133867862e-06, -3.0517578125e-05, -0.0022983551025390625, -0.000598907470703125, -1.1920928244535389e-07, -1.8715843907557428e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -7.244452717714012e-05, 0.0, -0.000232696533203125, 0.0, -0.0010993480682373047, -1.9073486328125e-06, -0.0007397984736599028, -1.9073486328125e-06, -2.86102294921875e-05, -8.326094627380371, -0.0032405853271484375, -0.000148773193359375, 0.0, -0.00046531885163858533, -2.3245811462402344e-05, -0.00022268292377702892, -1.9073486328125e-06, -0.0005645751953125, -0.002246856689453125, -3.0517578125e-05, -1.3708998267247807e-05, -2.47955322265625e-05, -5.960462772236497e-07, -1.71661376953125e-05, -2.288818359375e-05, -5.7220458984375e-06, -4.0293100028065965e-05, -2.47955322265625e-05, -6.103515625e-05, -5.7220458984375e-06, -4.00543212890625e-05, -5.7220458984375e-06, -0.002359628677368164, -1.9073486328125e-06, -0.0016890764236450195, 0.0, -4.1961669921875e-05, 0.0, -0.000186920166015625, 0.0, -0.00011074542999267578, -5.7220458984375e-06, -0.007825851440429688, 0.0, -0.0001239776611328125, -7.62939453125e-06, -4.756439011543989e-05, -4.291534423828125e-06], "choice_history": [97, 283, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 358, 127, 230, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Arcanite", " ", "Reaper", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole2": [{"_type": "Str", "s": "Arcanite Reaper"}, {"n": 5, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole3": "create_weapon", "hole0": "ArcaniteReaper", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 5, "hole0": "Arcanite Reaper"}], "hole1": "WeaponCard"}, "score": -8.36599439420938, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, True)\n"}, {"score_history": [-0.0012531280517578125, -0.001506805419921875, -0.009176359511911869, -3.2186049793381244e-05, -7.855583680793643e-05, -0.0029408561531454325, -0.00016546178085263819, -1.1920922133867862e-06, -3.0517578125e-05, -0.0022983551025390625, -0.000598907470703125, -1.1920928244535389e-07, -1.8715843907557428e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -7.244452717714012e-05, 0.0, -0.000232696533203125, 0.0, -8.727070808410645, -0.000926971435546875, -0.003313183318823576, 0.0, -1.33514404296875e-05, -0.019701004028320312, -0.0016155242919921875, -1.3709068298339844e-05, -4.768367489305092e-06, 0.0, -2.3007127310847864e-05, -0.0005087805329822004, -3.576278118089249e-07], "choice_history": [97, 283, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 358, 127, 230, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "Spell", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole2": 2, "_type": "Template68", "hole1": 5, "hole0": "Weapon"}], "hole3": "Spell", "hole0": "ArcaniteReaper", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 5, "hole0": "Arcanite Reaper"}], "hole1": "WeaponCard"}, "score": -8.771607422763438, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def Spell(self, player):\n        return Weapon(5, 2)\n"}, {"score_history": [-0.0012531280517578125, -6.575240135192871, -9.536306606605649e-05, -5.006777428206988e-06, -5.6980417866725475e-05, -0.0010249129263684154, -0.000804901123046875, -2.9802317840221804e-06, -0.000148773193359375, -0.0005741119384765625, -0.0013065338134765625, -3.933898824470816e-06, -2.0265579223632812e-05, -4.0531158447265625e-06, -7.62939453125e-06, -0.00030520392465405166, 0.0, -0.00038909912109375, 0.0, -0.0032845735549926758, -3.814697265625e-06, -2.491474151611328e-05, 0.0, -0.007892608642578125, -0.0001506805419921875, -1.4901160284352954e-05, -1.5258772691595368e-05, -0.061463356018066406, -0.0075359344482421875, -1.52587890625e-05, -5.340576171875e-05, -2.09808349609375e-05, -2.09808349609375e-05, 0.0, -0.00012576580047607422, -3.814697265625e-06, -5.114074156153947e-05, -7.62939453125e-06, -3.4928321838378906e-05, -1.9073486328125e-06, -3.492804535198957e-05, 0.0, -0.07729721069335938, -0.0004940032958984375, -0.00417327880859375, -0.000125885009765625, -0.006520389579236507, -1.1801719665527344e-05, -0.01802539825439453, -2.09808349609375e-05, -5.340576171875e-05, -0.0001583099365234375, -0.016016919165849686, -4.768370445162873e-07, -3.0517578125e-05, -0.000652313232421875, -1.9073486328125e-06, -0.3303842842578888, -9.5367431640625e-06, -0.0023555755615234375, 0.0, -0.018414946272969246, 0.0, -0.014759063720703125, -0.0005779266357421875, -0.0004329681396484375, -0.000213623046875, -1.9073486328125e-06, -0.04546310752630234, -0.2427191585302353, -0.07723984867334366, -3.933906555175781e-06, -0.01746845245361328, -2.47955322265625e-05, -7.62939453125e-06, -0.0004093647003173828, 0.0, -0.0002288818359375, 0.0, -0.0004807710647583008, 0.0, -0.08681201934814453, -1.9073486328125e-05, -0.001331329345703125, -1.52587890625e-05, -0.004299418069422245, -1.3709059203392826e-05, -0.0001316070556640625, -0.07834053039550781, 0.0, -0.0046901702880859375, 0.0, -0.13591647148132324, 0.0, -0.005410194396972656, -1.9073486328125e-06, -3.814697265625e-06, -0.006266593933105469, -3.4332275390625e-05, -0.0007932185544632375, -2.0265579223632812e-06, -9.1552734375e-05, -0.00048065185546875, -0.0016689300537109375, -0.00023651123046875, -0.0002313852310180664, -1.0728830375228426e-06, -2.47955322265625e-05, -1.8000548152485862e-05, -4.6491513785440475e-06, -3.0517578125e-05, -0.0013130898587405682, -0.00010418349120300263, -1.52587890625e-05, -0.17726802825927734, -3.0517578125e-05, -0.07003402709960938, -7.05718994140625e-05, -0.19299203157424927, 0.0, -0.35828709602355957, -5.364416665543104e-06, -0.023733139038085938, -1.2337303161621094, -2.47955322265625e-05, -7.939079659990966e-05, -3.814697265625e-06], "choice_history": [97, 286, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 358, 127, 230, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "5", "<EOS>", 52, 179, "2", "<EOS>", 358, 136, 318, 38, 325, "Arcanite", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 136, 318, 21, 174, "player", "<EOS>", "unbind", "<EOS>", 346, 52, 179, "5", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}], "_type": "Template77", "hole1": "summon", "hole0": {"_type": "Template79", "hole0": "Arcanite"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 5, "_type": "Num"}, {"n": 2, "_type": "Num"}]}}], "hole3": "use", "hole0": "ArcaniteReaper", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 5, "hole0": "Arcanite Reaper"}], "hole7": [{"body": [{"hole2": [{"n": 5, "_type": "Num"}], "_type": "Template77", "hole1": "unbind", "hole0": {"_type": "Name", "id": "player"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "WeaponCard"}, "score": -9.921339735412175, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(5, 2):\n            Arcanite().summon(player, game, len(player.minions))\n\n    def can_use(self, player, game):\n        player.unbind(5)\n"}, {"score_history": [-0.0012531280517578125, -6.575240135192871, -9.536306606605649e-05, -5.006777428206988e-06, -5.6980417866725475e-05, -0.0010249129263684154, -0.000804901123046875, -2.9802317840221804e-06, -0.000148773193359375, -0.0005741119384765625, -0.0013065338134765625, -3.933898824470816e-06, -2.0265579223632812e-05, -4.0531158447265625e-06, -7.62939453125e-06, -0.00030520392465405166, 0.0, -0.00038909912109375, 0.0, -0.0032845735549926758, -3.814697265625e-06, -2.491474151611328e-05, 0.0, -0.007892608642578125, -0.0001506805419921875, -1.4901160284352954e-05, -1.5258772691595368e-05, -0.061463356018066406, -0.0075359344482421875, -1.52587890625e-05, -5.340576171875e-05, -2.09808349609375e-05, -2.09808349609375e-05, 0.0, -0.00012576580047607422, -3.814697265625e-06, -5.114074156153947e-05, -7.62939453125e-06, -3.4928321838378906e-05, -1.9073486328125e-06, -3.492804535198957e-05, 0.0, -0.07729721069335938, -0.0004940032958984375, -0.00417327880859375, -0.000125885009765625, -0.006520389579236507, -1.1801719665527344e-05, -0.01802539825439453, -2.09808349609375e-05, -5.340576171875e-05, -0.0001583099365234375, -0.016016919165849686, -4.768370445162873e-07, -3.0517578125e-05, -0.000652313232421875, -1.9073486328125e-06, -0.3303842842578888, -9.5367431640625e-06, -0.0023555755615234375, 0.0, -0.018414946272969246, 0.0, -0.014759063720703125, -0.0005779266357421875, -0.0004329681396484375, -0.000213623046875, -1.9073486328125e-06, -0.04546310752630234, -0.2427191585302353, -0.07723984867334366, -3.933906555175781e-06, -0.01746845245361328, -2.47955322265625e-05, -7.62939453125e-06, -0.0004093647003173828, 0.0, -0.0002288818359375, 0.0, -0.0004807710647583008, 0.0, -0.08681201934814453, -1.9073486328125e-05, -0.001331329345703125, -1.52587890625e-05, -0.004299418069422245, -1.3709059203392826e-05, -0.0001316070556640625, -0.07834053039550781, 0.0, -0.0046901702880859375, 0.0, -0.13591647148132324, 0.0, -0.005410194396972656, -1.9073486328125e-06, -3.814697265625e-06, -0.006266593933105469, -3.4332275390625e-05, -0.0007932185544632375, -2.0265579223632812e-06, -9.1552734375e-05, -0.00048065185546875, -0.0016689300537109375, -0.00023651123046875, -0.0002313852310180664, -1.0728830375228426e-06, -2.47955322265625e-05, -1.8000548152485862e-05, -4.6491513785440475e-06, -3.0517578125e-05, -0.0013130898587405682, -0.00010418349120300263, -1.52587890625e-05, -2.1216259002685547, -0.00016021728515625, -0.2123699188232422, -3.814697265625e-06, -7.2479248046875e-05, -0.00445556640625, -0.0002040863037109375, -0.0002155303955078125, -9.5367431640625e-06, 0.0, -9.346006845589727e-05, -7.62939453125e-06, -0.017751574516296387, 0.0, -0.00045275685261003673, -1.1920928244535389e-07, -6.699447112623602e-05, -1.9073468138230965e-06, -0.006711006164550781, -2.288818359375e-05, -0.0025873184204101562, -0.0004215240478515625, -0.001758575439453125, -1.9073486328125e-06, -0.007493467070162296, -1.3828206647303887e-05, -1.1444091796875e-05, -0.0025491714477539062, 0.0, -0.04798126220703125, 0.0, -0.0001678466796875, -5.7220458984375e-06, -0.004373669624328613, -1.9073486328125e-06, -0.035941481590270996, 0.0, -0.008826255798339844, -5.7220458984375e-06, -2.288818359375e-05, -0.03301048278808594, -1.1444091796875e-05, -1.52587890625e-05, -9.5367431640625e-06, -0.16553814709186554, 0.0], "choice_history": [97, 286, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 358, 127, 230, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "5", "<EOS>", 52, 179, "2", "<EOS>", 358, 136, 318, 38, 325, "Arcanite", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}], "_type": "Template77", "hole1": "summon", "hole0": {"_type": "Template79", "hole0": "Arcanite"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 5, "_type": "Num"}, {"n": 2, "_type": "Num"}]}}], "hole3": "use", "hole0": "ArcaniteReaper", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 5, "hole0": "Arcanite Reaper"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 1, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "WeaponCard"}, "score": -10.540054889813511, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(5, 2):\n            Arcanite().summon(player, game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n"}, {"score_history": [-0.0012531280517578125, -6.575240135192871, -9.536306606605649e-05, -5.006777428206988e-06, -5.6980417866725475e-05, -0.0010249129263684154, -0.000804901123046875, -2.9802317840221804e-06, -0.000148773193359375, -0.0005741119384765625, -0.0013065338134765625, -3.933898824470816e-06, -2.0265579223632812e-05, -4.0531158447265625e-06, -7.62939453125e-06, -0.00030520392465405166, 0.0, -0.00038909912109375, 0.0, -0.0032845735549926758, -3.814697265625e-06, -2.491474151611328e-05, 0.0, -0.007892608642578125, -0.0001506805419921875, -1.4901160284352954e-05, -1.5258772691595368e-05, -0.061463356018066406, -0.0075359344482421875, -1.52587890625e-05, -5.340576171875e-05, -2.09808349609375e-05, -2.09808349609375e-05, 0.0, -0.00012576580047607422, -3.814697265625e-06, -5.114074156153947e-05, -7.62939453125e-06, -3.4928321838378906e-05, -1.9073486328125e-06, -3.492804535198957e-05, 0.0, -0.07729721069335938, -0.0004940032958984375, -0.00417327880859375, -0.000125885009765625, -0.006520389579236507, -1.1801719665527344e-05, -0.01802539825439453, -2.09808349609375e-05, -5.340576171875e-05, -0.0001583099365234375, -0.016016919165849686, -4.768370445162873e-07, -3.0517578125e-05, -0.000652313232421875, -1.9073486328125e-06, -0.3303842842578888, -9.5367431640625e-06, -0.0023555755615234375, 0.0, -0.018414946272969246, 0.0, -0.014759063720703125, -0.0005779266357421875, -0.0004329681396484375, -0.000213623046875, -1.9073486328125e-06, -0.04546310752630234, -0.2427191585302353, -0.07723984867334366, -3.933906555175781e-06, -0.01746845245361328, -2.47955322265625e-05, -7.62939453125e-06, -0.0004093647003173828, 0.0, -0.0002288818359375, 0.0, -0.0004807710647583008, 0.0, -0.08681201934814453, -1.9073486328125e-05, -0.001331329345703125, -1.52587890625e-05, -0.004299418069422245, -1.3709059203392826e-05, -0.0001316070556640625, -0.07834053039550781, 0.0, -0.0046901702880859375, 0.0, -0.13591647148132324, 0.0, -0.005410194396972656, -1.9073486328125e-06, -3.814697265625e-06, -0.006266593933105469, -3.4332275390625e-05, -0.0007932185544632375, -2.0265579223632812e-06, -9.1552734375e-05, -0.00048065185546875, -0.0016689300537109375, -0.00023651123046875, -0.0002313852310180664, -1.0728830375228426e-06, -2.47955322265625e-05, -1.8000548152485862e-05, -4.6491513785440475e-06, -3.0517578125e-05, -0.0013130898587405682, -0.00010418349120300263, -1.52587890625e-05, -0.17726802825927734, -3.0517578125e-05, -0.07003402709960938, -7.05718994140625e-05, -0.19299203157424927, 0.0, -1.8925344944000244, -5.7220458984375e-06, -0.28474998474121094, -0.3819589614868164, -3.4332275390625e-05, -5.6385615607723594e-05, -3.814697265625e-06], "choice_history": [97, 286, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 358, 127, 230, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "5", "<EOS>", 52, 179, "2", "<EOS>", 358, 136, 318, 38, 325, "Arcanite", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 136, 318, 21, 174, "player", "<EOS>", "bind", "<EOS>", 346, 52, 179, "5", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}], "_type": "Template77", "hole1": "summon", "hole0": {"_type": "Template79", "hole0": "Arcanite"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 5, "_type": "Num"}, {"n": 2, "_type": "Num"}]}}], "hole3": "use", "hole0": "ArcaniteReaper", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 5, "hole0": "Arcanite Reaper"}], "hole7": [{"body": [{"hole2": [{"n": 5, "_type": "Num"}], "_type": "Template77", "hole1": "bind", "hole0": {"_type": "Name", "id": "player"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "WeaponCard"}, "score": -10.864819514007877, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(5, 2):\n            Arcanite().summon(player, game, len(player.minions))\n\n    def can_use(self, player, game):\n        player.bind(5)\n"}, {"score_history": [-0.0012531280517578125, -6.575240135192871, -9.536306606605649e-05, -5.006777428206988e-06, -5.6980417866725475e-05, -0.0010249129263684154, -0.000804901123046875, -2.9802317840221804e-06, -0.000148773193359375, -0.0005741119384765625, -0.0013065338134765625, -3.933898824470816e-06, -2.0265579223632812e-05, -4.0531158447265625e-06, -7.62939453125e-06, -0.00030520392465405166, 0.0, -0.00038909912109375, 0.0, -0.0032845735549926758, -3.814697265625e-06, -2.491474151611328e-05, 0.0, -0.007892608642578125, -0.0001506805419921875, -1.4901160284352954e-05, -1.5258772691595368e-05, -0.061463356018066406, -0.0075359344482421875, -1.52587890625e-05, -5.340576171875e-05, -2.09808349609375e-05, -2.09808349609375e-05, 0.0, -0.00012576580047607422, -3.814697265625e-06, -5.114074156153947e-05, -7.62939453125e-06, -3.4928321838378906e-05, -1.9073486328125e-06, -3.492804535198957e-05, 0.0, -0.07729721069335938, -0.0004940032958984375, -0.00417327880859375, -0.000125885009765625, -0.006520389579236507, -1.1801719665527344e-05, -0.01802539825439453, -2.09808349609375e-05, -5.340576171875e-05, -0.0001583099365234375, -0.016016919165849686, -4.768370445162873e-07, -3.0517578125e-05, -0.000652313232421875, -1.9073486328125e-06, -0.3303842842578888, -9.5367431640625e-06, -0.0023555755615234375, 0.0, -0.018414946272969246, 0.0, -0.014759063720703125, -0.0005779266357421875, -0.0004329681396484375, -0.000213623046875, -1.9073486328125e-06, -0.04546310752630234, -0.2427191585302353, -0.07723984867334366, -3.933906555175781e-06, -0.01746845245361328, -2.47955322265625e-05, -7.62939453125e-06, -0.0004093647003173828, 0.0, -0.0002288818359375, 0.0, -0.0004807710647583008, 0.0, -0.08681201934814453, -1.9073486328125e-05, -0.001331329345703125, -1.52587890625e-05, -0.004299418069422245, -1.3709059203392826e-05, -0.0001316070556640625, -0.07834053039550781, 0.0, -0.0046901702880859375, 0.0, -0.13591647148132324, 0.0, -0.005410194396972656, -1.9073486328125e-06, -3.814697265625e-06, -0.006266593933105469, -3.4332275390625e-05, -0.0007932185544632375, -2.0265579223632812e-06, -9.1552734375e-05, -0.00048065185546875, -0.0016689300537109375, -0.00023651123046875, -0.0002313852310180664, -1.0728830375228426e-06, -2.47955322265625e-05, -1.8000548152485862e-05, -4.6491513785440475e-06, -3.0517578125e-05, -0.0013130898587405682, -0.00010418349120300263, -1.52587890625e-05, -0.17726802825927734, -3.0517578125e-05, -0.07003402709960938, -7.05718994140625e-05, -0.19299203157424927, 0.0, -0.35828709602355957, -5.364416665543104e-06, -0.023733139038085938, -1.9940314292907715, -1.9073486328125e-06, -0.5469369888305664, 0.0, -0.685408353805542, 0.0, -0.05726122856140137, 0.0], "choice_history": [97, 286, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 358, 127, 230, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "5", "<EOS>", 52, 179, "2", "<EOS>", 358, 136, 318, 38, 325, "Arcanite", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 136, 318, 21, 174, "player", "<EOS>", "unbind", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}], "_type": "Template77", "hole1": "summon", "hole0": {"_type": "Template79", "hole0": "Arcanite"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 5, "_type": "Num"}, {"n": 2, "_type": "Num"}]}}], "hole3": "use", "hole0": "ArcaniteReaper", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 5, "hole0": "Arcanite Reaper"}], "hole7": [{"body": [{"hole2": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Template77", "hole1": "unbind", "hole0": {"_type": "Name", "id": "player"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "WeaponCard"}, "score": -11.971141326060888, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(5, 2):\n            Arcanite().summon(player, game, len(player.minions))\n\n    def can_use(self, player, game):\n        player.unbind(player.hero)\n"}]}
{"index": 8, "beams": [{"score_history": [-0.0006046295166015625, -0.000316619873046875, -3.814697265625e-06, -0.00018310546875, -5.91278076171875e-05, -1.013275596051244e-05, -0.00041321321623399854, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001952934544533491, -1.7762184143066406e-05, -3.933906555175781e-06, -1.71661376953125e-05, -0.11438655853271484, -0.0001087188720703125, -1.6689286894688848e-06, -7.152555099310121e-07, -4.768370445162873e-07, 0.0, -0.002705216407775879, 0.0, -0.00010251998173771426, 0.0, -0.000102996826171875, -9.918212890625e-05, -0.0001621246337890625, -0.00038623809814453125, -2.288818359375e-05, -0.0005970001220703125, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -3.62396240234375e-05, -2.86102294921875e-05, -0.0013409852981567383, -0.0002862215042114258, -0.000446319580078125, -5.91278076171875e-05, -0.03489875793457031, -1.9073486328125e-05, -0.0002651214599609375, -0.030221939086914062, -6.103515625e-05, 0.0, -0.001148223876953125, 0.0, -0.00051116943359375, 0.0, -5.7220458984375e-06, 0.0, -0.0029125106520950794, 0.0, -7.62939453125e-06, -0.0013580322265625, -1.9073486328125e-06, -0.001603841781616211, -3.933898824470816e-06], "choice_history": [96, 173, 358, 105, 152, "Assassinate", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Assassinate", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Assassinate", "_type": "Template14", "hole2": "ROGUE", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 5}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Assassinate"}], "_type": "Module"}, "score": -0.19577663346046847, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score_history": [-0.0006046295166015625, -0.000316619873046875, -3.814697265625e-06, -0.00018310546875, -5.91278076171875e-05, -1.013275596051244e-05, -0.00041321321623399854, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001952934544533491, -1.7762184143066406e-05, -3.933906555175781e-06, -1.71661376953125e-05, -2.3039474487304688, -0.031714439392089844, -1.0728830375228426e-06, 0.0, -5.376194530981593e-05, -3.814697265625e-06, -0.017860054969787598, -1.9073486328125e-06, -0.00025665760040283203, -7.62939453125e-06, -0.005941509734839201, -5.543231964111328e-05, -0.0008678436279296875, -1.9073486328125e-06, -0.0009899139404296875, -1.9073486328125e-06, -0.0035533905029296875, -4.38690185546875e-05, -0.0001049041748046875, -4.00543212890625e-05, -0.013967514038085938, -1.9073486328125e-05, -0.033944129943847656, -1.1563301086425781e-05, -0.037296295166015625, -0.0003681182861328125, -0.0026569366455078125, -2.6702880859375e-05, -0.019866585731506348, -6.0796710386057384e-06, -0.0020170211791992188, -3.0517578125e-05, -0.00115966796875, -0.0002002716064453125, -0.0013523101806640625, -1.9073486328125e-05, -0.3692493438720703, -3.62396240234375e-05, -0.0003185272216796875, -1.9073486328125e-06, -0.0017955303192138672, -1.8715856640483253e-05, -0.012616753578186035, -9.5367431640625e-06, -1.52587890625e-05, -0.015229225158691406, 0.0, -0.00383758544921875, -0.00023651123046875, -0.00020599365234375, -1.71661376953125e-05, -0.00015664090460631996, -1.5497195136049413e-06, -0.006165742874145508, 0.0, -0.001796722412109375, -3.814697265625e-06, -6.103515625e-05, -1.9073486328125e-06, -0.000986933708190918, -3.6954811548639555e-06, -0.006430149078369141, -1.9073486328125e-06, -0.007708549499511719, -0.00323486328125, -0.0001678466796875, 0.0, -0.000164031982421875, 0.0, -0.00302886962890625, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00116584578063339, 0.0, -5.7220458984375e-06, -0.0006351470947265625, 0.0, -0.012366056442260742, -4.0531076592742465e-06], "choice_history": [96, 173, 358, 105, 152, "Assassinate", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Assassinate", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 167, 0, 282, "target", "<EOS>", 15, 146, 2, 347, 46, 153, 13, 143, 21, 174, "target", "<EOS>", "health", "<EOS>", 343, 12, 346, 85, 317, 21, 174, "target", "<EOS>", "calculate_max_health", "<EOS>", 85, 317, 21, 174, "target", "<EOS>", "spell_targetable", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_enemy_minion_spell_target", "hole3": "FREE", "hole0": "Assassinate", "_type": "Template4", "hole2": "ROGUE", "hole7": "filter_func", "hole8": {"body": {"values": [{"comparators": [{"_type": "Template76", "hole1": "calculate_max_health", "hole0": {"_type": "Name", "id": "target"}}], "_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}}, {"_type": "Template76", "hole1": "spell_targetable", "hole0": {"_type": "Name", "id": "target"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "target"}}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 5}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Assassinate"}], "_type": "Module"}, "score": -2.9279259836471283, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score_history": [-0.0006046295166015625, -0.000316619873046875, -3.814697265625e-06, -0.00018310546875, -5.91278076171875e-05, -1.013275596051244e-05, -0.00041321321623399854, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001952934544533491, -1.7762184143066406e-05, -3.933906555175781e-06, -1.71661376953125e-05, -0.11438655853271484, -0.0001087188720703125, -1.6689286894688848e-06, -7.152555099310121e-07, -4.768370445162873e-07, 0.0, -0.002705216407775879, 0.0, -0.00010251998173771426, 0.0, -0.000102996826171875, -9.918212890625e-05, -0.0001621246337890625, -0.00038623809814453125, -2.288818359375e-05, -0.0005970001220703125, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -3.62396240234375e-05, -2.86102294921875e-05, -0.0013409852981567383, -0.0002862215042114258, -0.000446319580078125, -5.91278076171875e-05, -4.160414695739746, -7.2479248046875e-05, -0.0001621246337890625, -0.023736000061035156, -7.82012939453125e-05, 0.0, -0.001575469970703125, 0.0, -0.001056671142578125, 0.0, -5.7220458984375e-06, 0.0, -0.003498176345601678, 0.0, -5.7220458984375e-06, -0.0012760162353515625, -1.9073486328125e-06, -0.0015761852264404297, -3.814689989667386e-06], "choice_history": [96, 173, 358, 105, 152, "Assassinate", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Assassinate", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_battlecry_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Assassinate", "_type": "Template14", "hole2": "ROGUE", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_battlecry_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 5}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Assassinate"}], "_type": "Module"}, "score": -4.316220921705394, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_battlecry_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score_history": [-0.0006046295166015625, -0.000316619873046875, -3.814697265625e-06, -0.00018310546875, -5.91278076171875e-05, -1.013275596051244e-05, -0.00041321321623399854, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001952934544533491, -1.7762184143066406e-05, -3.933906555175781e-06, -1.71661376953125e-05, -0.11438655853271484, -0.0001087188720703125, -1.6689286894688848e-06, -7.152555099310121e-07, -4.768370445162873e-07, 0.0, -0.002705216407775879, 0.0, -0.00010251998173771426, 0.0, -0.000102996826171875, -9.918212890625e-05, -0.0001621246337890625, -0.00038623809814453125, -2.288818359375e-05, -0.0005970001220703125, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -3.62396240234375e-05, -2.86102294921875e-05, -0.0013409852981567383, -0.0002862215042114258, -0.000446319580078125, -5.91278076171875e-05, -0.03489875793457031, -1.9073486328125e-05, -0.0002651214599609375, -3.572779655456543, -3.62396240234375e-05, 0.0, -0.000102996826171875, 0.0, -0.0020122528076171875, 0.0, -5.7220458984375e-06, 0.0, -1.1629369258880615, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "Assassinate", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Assassinate", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 126, 224, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "bounce", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Assassinate", "_type": "Template14", "hole2": "ROGUE", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 5}, {"_type": "Template3", "hole1": "bounce", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Assassinate"}], "_type": "Module"}, "score": -4.895816388555545, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.bounce()\n"}, {"score_history": [-0.0006046295166015625, -0.000316619873046875, -3.814697265625e-06, -0.00018310546875, -5.91278076171875e-05, -1.013275596051244e-05, -0.00041321321623399854, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001952934544533491, -1.7762184143066406e-05, -3.933906555175781e-06, -1.71661376953125e-05, -2.3039474487304688, -0.031714439392089844, -1.0728830375228426e-06, 0.0, -5.376194530981593e-05, -3.814697265625e-06, -0.017860054969787598, -1.9073486328125e-06, -0.00025665760040283203, -7.62939453125e-06, -0.005941509734839201, -5.543231964111328e-05, -0.0008678436279296875, -1.9073486328125e-06, -0.0009899139404296875, -1.9073486328125e-06, -0.0035533905029296875, -4.38690185546875e-05, -0.0001049041748046875, -4.00543212890625e-05, -0.013967514038085938, -1.9073486328125e-05, -0.033944129943847656, -1.1563301086425781e-05, -0.037296295166015625, -0.0003681182861328125, -0.0026569366455078125, -2.6702880859375e-05, -0.019866585731506348, -6.0796710386057384e-06, -0.0020170211791992188, -3.0517578125e-05, -0.00115966796875, -0.0002002716064453125, -0.0013523101806640625, -1.9073486328125e-05, -1.1796627044677734, -1.9073486328125e-06, -0.004263758659362793, -0.00031312499777413905, -0.000148773193359375, -1.3507728576660156, 0.0, -0.03912067413330078, -5.14984130859375e-05, -0.0001277923583984375, -5.7220458984375e-06, -0.00011014935444109142, -2.861018856492592e-06, -0.012012600898742676, 0.0, -0.0020732879638671875, -7.62939453125e-06, -7.62939453125e-05, 0.0, -0.0007145404815673828, -3.099436753473128e-06, -0.006696105003356934, -1.9073486328125e-06, -0.008402824401855469, -0.0045680999755859375, -0.000202178955078125, 0.0, -9.72747802734375e-05, 0.0, -0.0024995803833007812, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0011151861399412155, 0.0, -5.7220458984375e-06, -0.000701904296875, 0.0, -0.013077259063720703, -4.172316494077677e-06], "choice_history": [96, 173, 358, 105, 152, "Assassinate", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Assassinate", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 167, 0, 282, "target", "<EOS>", 15, 146, 2, 347, 46, 153, 21, 174, "target", "<EOS>", 343, 12, 346, 85, 317, 21, 174, "target", "<EOS>", "calculate_max_health", "<EOS>", 85, 317, 21, 174, "target", "<EOS>", "spell_targetable", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_enemy_minion_spell_target", "hole3": "FREE", "hole0": "Assassinate", "_type": "Template4", "hole2": "ROGUE", "hole7": "filter_func", "hole8": {"body": {"values": [{"comparators": [{"_type": "Template76", "hole1": "calculate_max_health", "hole0": {"_type": "Name", "id": "target"}}], "_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"_type": "Name", "id": "target"}}, {"_type": "Template76", "hole1": "spell_targetable", "hole0": {"_type": "Name", "id": "target"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "target"}}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 5}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Assassinate"}], "_type": "Module"}, "score": -5.10709000223153, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score_history": [-0.0006046295166015625, -0.000316619873046875, -3.814697265625e-06, -0.00018310546875, -5.91278076171875e-05, -1.013275596051244e-05, -0.00041321321623399854, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001952934544533491, -1.7762184143066406e-05, -3.933906555175781e-06, -1.71661376953125e-05, -0.11438655853271484, -0.0001087188720703125, -1.6689286894688848e-06, -7.152555099310121e-07, -4.768370445162873e-07, 0.0, -0.002705216407775879, 0.0, -0.00010251998173771426, 0.0, -0.000102996826171875, -9.918212890625e-05, -0.0001621246337890625, -0.00038623809814453125, -2.288818359375e-05, -0.0005970001220703125, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -3.62396240234375e-05, -2.86102294921875e-05, -0.0013409852981567383, -0.0002862215042114258, -0.000446319580078125, -5.91278076171875e-05, -0.03489875793457031, -1.9073486328125e-05, -0.0002651214599609375, -3.572779655456543, -3.62396240234375e-05, 0.0, -0.000102996826171875, 0.0, -0.0020122528076171875, 0.0, -5.7220458984375e-06, 0.0, -1.822995901107788, 0.0], "choice_history": [96, 173, 358, 105, 152, "Assassinate", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Assassinate", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 126, 224, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Assassinate", "_type": "Template14", "hole2": "ROGUE", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 5}, {"_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Assassinate"}], "_type": "Module"}, "score": -5.555873456426639, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die()\n"}, {"score_history": [-0.0006046295166015625, -0.000316619873046875, -3.814697265625e-06, -0.00018310546875, -5.91278076171875e-05, -1.013275596051244e-05, -0.00041321321623399854, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001952934544533491, -1.7762184143066406e-05, -3.933906555175781e-06, -1.71661376953125e-05, -0.11438655853271484, -0.0001087188720703125, -1.6689286894688848e-06, -7.152555099310121e-07, -4.768370445162873e-07, 0.0, -0.002705216407775879, 0.0, -0.00010251998173771426, 0.0, -0.000102996826171875, -9.918212890625e-05, -0.0001621246337890625, -0.00038623809814453125, -2.288818359375e-05, -0.0005970001220703125, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -3.62396240234375e-05, -2.86102294921875e-05, -0.0013409852981567383, -0.0002862215042114258, -0.000446319580078125, -5.91278076171875e-05, -5.602975845336914, -0.0001544952392578125, -0.0002231597900390625, -0.024160385131835938, -9.1552734375e-05, 0.0, -0.000392913818359375, 0.0, -0.0007171630859375, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -0.0027911507058888674, 0.0, -5.7220458984375e-06, -0.0014495849609375, 0.0, -0.0014590024948120117, -5.245195097813848e-06], "choice_history": [96, 173, 358, 105, 152, "Assassinate", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Assassinate", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "targeting", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Assassinate", "_type": "Template14", "hole2": "ROGUE", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "targeting"}, "_type": "keyword", "arg": "target_func"}], "hole1": 5}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Assassinate"}], "_type": "Module"}, "score": -5.757189797472272, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.targeting)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score_history": [-0.0006046295166015625, -0.000316619873046875, -3.814697265625e-06, -0.00018310546875, -5.91278076171875e-05, -1.013275596051244e-05, -0.00041321321623399854, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001952934544533491, -1.7762184143066406e-05, -3.933906555175781e-06, -1.71661376953125e-05, -0.11438655853271484, -0.0001087188720703125, -1.6689286894688848e-06, -7.152555099310121e-07, -4.768370445162873e-07, 0.0, -0.002705216407775879, 0.0, -0.00010251998173771426, 0.0, -0.000102996826171875, -9.918212890625e-05, -0.0001621246337890625, -0.00038623809814453125, -2.288818359375e-05, -0.0005970001220703125, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -3.62396240234375e-05, -2.86102294921875e-05, -0.0013409852981567383, -0.0002862215042114258, -0.000446319580078125, -5.91278076171875e-05, -5.658424377441406, -2.0265579223632812e-06, -0.0003528594970703125, -0.00571441650390625, -3.62396240234375e-05, 0.0, -0.0073184967041015625, 0.0, -0.00091552734375, 0.0, -7.748603820800781e-06, -1.1920928244535389e-07, -0.0026427176780998707, 0.0, -7.62939453125e-06, -0.001800537109375, 0.0, -0.0015393495559692383, -5.125986263010418e-06], "choice_history": [96, 173, 358, 105, 152, "Assassinate", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Assassinate", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Assassinate", "_type": "Template14", "hole2": "ROGUE", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 5}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Assassinate"}], "_type": "Module"}, "score": -5.801524906887259, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score_history": [-0.0006046295166015625, -0.000316619873046875, -3.814697265625e-06, -0.00018310546875, -5.91278076171875e-05, -1.013275596051244e-05, -0.00041321321623399854, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001952934544533491, -1.7762184143066406e-05, -3.933906555175781e-06, -1.71661376953125e-05, -0.11438655853271484, -0.0001087188720703125, -1.6689286894688848e-06, -7.152555099310121e-07, -4.768370445162873e-07, 0.0, -0.002705216407775879, 0.0, -0.00010251998173771426, 0.0, -0.000102996826171875, -9.918212890625e-05, -0.0001621246337890625, -0.00038623809814453125, -2.288818359375e-05, -0.0005970001220703125, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -3.62396240234375e-05, -2.86102294921875e-05, -0.0013409852981567383, -0.0002862215042114258, -0.000446319580078125, -5.91278076171875e-05, -0.03489875793457031, -1.9073486328125e-05, -0.0002651214599609375, -3.572779655456543, -3.62396240234375e-05, 0.0, -0.000102996826171875, 0.0, -0.0020122528076171875, 0.0, -5.7220458984375e-06, 0.0, -2.5488431453704834, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "Assassinate", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Assassinate", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 126, 224, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Assassinate", "_type": "Template14", "hole2": "ROGUE", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 5}, {"_type": "Template3", "hole1": "calculate_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Assassinate"}], "_type": "Module"}, "score": -6.281722608037967, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.calculate_attack()\n"}, {"score_history": [-0.0006046295166015625, -0.000316619873046875, -3.814697265625e-06, -0.00018310546875, -5.91278076171875e-05, -1.013275596051244e-05, -0.00041321321623399854, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001952934544533491, -1.7762184143066406e-05, -3.933906555175781e-06, -1.71661376953125e-05, -2.3039474487304688, -0.031714439392089844, -1.0728830375228426e-06, 0.0, -5.376194530981593e-05, -3.814697265625e-06, -0.017860054969787598, -1.9073486328125e-06, -0.00025665760040283203, -7.62939453125e-06, -0.005941509734839201, -5.543231964111328e-05, -0.0008678436279296875, -1.9073486328125e-06, -0.0009899139404296875, -1.9073486328125e-06, -0.0035533905029296875, -4.38690185546875e-05, -0.0001049041748046875, -4.00543212890625e-05, -0.013967514038085938, -1.9073486328125e-05, -0.033944129943847656, -1.1563301086425781e-05, -0.037296295166015625, -0.0003681182861328125, -0.0026569366455078125, -2.6702880859375e-05, -0.019866585731506348, -6.0796710386057384e-06, -0.0020170211791992188, -3.0517578125e-05, -0.00115966796875, -0.0002002716064453125, -0.0013523101806640625, -1.9073486328125e-05, -0.3692493438720703, -3.62396240234375e-05, -0.0003185272216796875, -1.9073486328125e-06, -0.0017955303192138672, -1.8715856640483253e-05, -0.012616753578186035, -9.5367431640625e-06, -1.52587890625e-05, -0.015229225158691406, 0.0, -0.00383758544921875, -0.00023651123046875, -0.00020599365234375, -1.71661376953125e-05, -0.00015664090460631996, -1.5497195136049413e-06, -0.006165742874145508, 0.0, -0.001796722412109375, -3.814697265625e-06, -6.103515625e-05, -1.9073486328125e-06, -0.000986933708190918, -3.6954811548639555e-06, -5.527928829193115, -1.9073486328125e-06, -0.014613151550292969, -0.021495819091796875, -0.00020599365234375, 0.0, -0.00017547607421875, 0.0, -0.0026874542236328125, 0.0, -7.62939453125e-06, -2.0265579223632812e-06, -0.0012862334260717034, 0.0, -7.62939453125e-06, -0.00069427490234375, 0.0, -0.012035012245178223, -4.0531076592742465e-06], "choice_history": [96, 173, 358, 105, 152, "Assassinate", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Assassinate", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 167, 0, 282, "target", "<EOS>", 15, 146, 2, 347, 46, 153, 13, 143, 21, 174, "target", "<EOS>", "health", "<EOS>", 343, 12, 346, 85, 317, 21, 174, "target", "<EOS>", "calculate_max_health", "<EOS>", 85, 317, 21, 174, "target", "<EOS>", "calculate_max_health", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_enemy_minion_spell_target", "hole3": "FREE", "hole0": "Assassinate", "_type": "Template4", "hole2": "ROGUE", "hole7": "filter_func", "hole8": {"body": {"values": [{"comparators": [{"_type": "Template76", "hole1": "calculate_max_health", "hole0": {"_type": "Name", "id": "target"}}], "_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}}, {"_type": "Template76", "hole1": "calculate_max_health", "hole0": {"_type": "Name", "id": "target"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "target"}}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 5}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Assassinate"}], "_type": "Module"}, "score": -8.474148895096278, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            calculate_max_health())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score_history": [-0.0006046295166015625, -0.000316619873046875, -3.814697265625e-06, -0.00018310546875, -5.91278076171875e-05, -1.013275596051244e-05, -0.00041321321623399854, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001952934544533491, -1.7762184143066406e-05, -3.933906555175781e-06, -1.71661376953125e-05, -2.3039474487304688, -0.031714439392089844, -1.0728830375228426e-06, 0.0, -5.376194530981593e-05, -3.814697265625e-06, -0.017860054969787598, -1.9073486328125e-06, -0.00025665760040283203, -7.62939453125e-06, -0.005941509734839201, -5.543231964111328e-05, -0.0008678436279296875, -1.9073486328125e-06, -0.0009899139404296875, -1.9073486328125e-06, -0.0035533905029296875, -4.38690185546875e-05, -0.0001049041748046875, -4.00543212890625e-05, -0.013967514038085938, -1.9073486328125e-05, -0.033944129943847656, -1.1563301086425781e-05, -0.037296295166015625, -0.0003681182861328125, -0.0026569366455078125, -2.6702880859375e-05, -0.019866585731506348, -6.0796710386057384e-06, -0.0020170211791992188, -3.0517578125e-05, -0.00115966796875, -0.0002002716064453125, -0.0013523101806640625, -1.9073486328125e-05, -1.1796627044677734, -1.9073486328125e-06, -0.004263758659362793, -0.00031312499777413905, -0.000148773193359375, -1.0854511260986328, -1.9073486328125e-06, -0.06321525573730469, -0.00086212158203125, -2.5272369384765625e-05, -1.311301275563892e-06, -1.0928583145141602, -0.030661582946777344, -2.271840810775757, -0.02971184253692627, -0.6615555882453918, 0.0, -0.09827136993408203, -0.002422332763671875, -0.001579840900376439, 0.0, -0.00016616392531432211, 0.0], "choice_history": [96, 173, 358, 105, 152, "Assassinate", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Assassinate", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 167, 0, 282, "target", "<EOS>", 15, 146, 2, 347, 46, 153, 21, 174, "target", "<EOS>", 343, 8, 346, 51, 176, "Null", "<EOS>", 70, 292, "User", "<EOS>", "Adjacent", "<EOS>", 122, 213, "5", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_enemy_minion_spell_target", "hole3": "FREE", "hole0": "Assassinate", "_type": "Template4", "hole2": "ROGUE", "hole7": "filter_func", "hole8": {"body": {"values": [{"comparators": [{"value": "Null", "_type": "NameConstant"}], "_type": "Compare", "ops": [{"_type": "Is"}], "left": {"_type": "Name", "id": "target"}}, {"_type": "Template55", "hole1": "Adjacent", "hole0": "User"}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "target"}}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 5}, {"_type": "Template19", "hole1": 5, "hole0": 5}], "_type": "ClassDef", "name": "Assassinate"}], "_type": "Module"}, "score": -9.003252177297668, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target is Null and User(Adjacent()))\n\n    def create_minion(self, player):\n        return Minion(5, 5)\n"}, {"score_history": [-0.0006046295166015625, -0.000316619873046875, -3.814697265625e-06, -9.074584007263184, -1.317429542541504, -0.14949649572372437, -2.3841855067985307e-07, -0.004847791977226734, 0.0, -0.03775107488036156, 0.0], "choice_history": [96, 173, 358, 127, 230, "Assassinate", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>"], "model_output": {"body": [{"hole2": "ROGUE", "_type": "Template31", "hole1": 5, "hole0": "Assassinate"}], "_type": "Module"}, "score": -10.585034214891465, "inferred_code": "super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON)\n"}, {"score_history": [-0.0006046295166015625, -0.000316619873046875, -3.814697265625e-06, -9.074584007263184, -1.317429542541504, -2.3012590408325195, -2.3841855067985307e-07, -0.004847791977226734, 0.0, -0.03775107488036156, 0.0], "choice_history": [96, 173, 358, 127, 230, "<UNK>", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>"], "model_output": {"body": [{"hole2": "ROGUE", "_type": "Template31", "hole1": 5, "hole0": "<UNK>"}], "_type": "Module"}, "score": -12.73679676000026, "inferred_code": "super().__init__('<UNK>', 5, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON)\n"}, {"score_history": [-0.0006046295166015625, -0.000316619873046875, -3.814697265625e-06, -16.28793716430664], "choice_history": [96, 173, 358, 104], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score": -16.288862228393555, "inferred_code": "break\n"}, {"score_history": [-0.0006046295166015625, -0.000316619873046875, -22.547042846679688], "choice_history": [96, 173, 357], "model_output": {"body": [], "_type": "Module"}, "score": -22.547964096069336, "inferred_code": ""}]}
{"index": 9, "beams": [{"score_history": [-0.12358474731445312, -8.58306884765625e-05, -3.814697265625e-06, -3.62396240234375e-05, -8.0108642578125e-05, -2.3364747903542593e-05, -0.0002795067266561091, -3.62396240234375e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0007172070909291506, -4.291534423828125e-06, -1.1563301086425781e-05, -7.62939453125e-05, -0.06959056854248047, -0.0006122589111328125, -1.0967194612021558e-05, 0.0, -1.1086401173088234e-05, -1.1920928244535389e-07, -0.0026497829239815474, 0.0, -0.0003509521484375, -3.814697265625e-06, -0.0009680986404418945, -5.53131103515625e-05, -0.0016002655029296875, 0.0, -9.918212890625e-05, 0.0, -0.0006160736083984375, -5.7220458984375e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.0024216175079345703, 0.0, -0.009123802185058594, 0.0, -0.0027570724487304688, -0.0011196136474609375, -0.00052642822265625, -4.1961669921875e-05, -0.0010321118170395494, -6.437291176553117e-06, -0.0002155303955078125, -0.000396728515625, -0.0007076263427734375, -0.0006084442138671875, -0.0012226104736328125, -7.62939453125e-06, -0.0028409957885742188, -3.814697265625e-06, -0.0014705657958984375, -1.9073486328125e-06, -0.0010569094447419047, -1.8954096958623268e-05, -0.0088958740234375, -3.24249267578125e-05, -2.09808349609375e-05, -0.33576488494873047, -1.1444091796875e-05, -0.004986763000488281, -4.00543212890625e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.0024270927533507347, -2.9802276912960224e-06, -0.003239870071411133, -1.919269561767578e-05, -0.0036230087280273438, -1.33514404296875e-05, -2.09808349609375e-05, -1.33514404296875e-05, -0.00023114588111639023, -3.0398065064218827e-05, -0.01484751421958208, -4.291534423828125e-06, -0.054633140563964844, -0.0018777847290039062, -6.29425048828125e-05, 0.0, -6.67572021484375e-05, 0.0, -0.0010303258895874023, 0.0, -7.867813110351562e-06, -1.1920928244535389e-07, -0.0680670216679573, 0.0, -5.53131103515625e-05, -0.011196136474609375, -1.33514404296875e-05, -0.023414969444274902, -1.1920928244535389e-07, -2.09808349609375e-05, -3.4332275390625e-05, -5.817396959173493e-05, -0.00031065940856933594], "choice_history": [96, 173, 358, 105, 152, "Backstab", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Backstab", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 167, 0, 282, "target", "<EOS>", 15, 146, 2, 347, 46, 153, 13, 143, 21, 174, "target", "<EOS>", "health", "<EOS>", 343, 4, 346, 85, 317, 21, 174, "target", "<EOS>", "calculate_max_health", "<EOS>", 85, 317, 21, 174, "target", "<EOS>", "spell_targetable", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_minion_spell_target", "hole3": "FREE", "hole0": "Backstab", "_type": "Template4", "hole2": "ROGUE", "hole7": "filter_func", "hole8": {"body": {"values": [{"comparators": [{"_type": "Template76", "hole1": "calculate_max_health", "hole0": {"_type": "Name", "id": "target"}}], "_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}}, {"_type": "Template76", "hole1": "spell_targetable", "hole0": {"_type": "Name", "id": "target"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "target"}}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 0}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Backstab"}], "_type": "Module"}, "score": -0.7622365312895241, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.12358474731445312, -8.58306884765625e-05, -3.814697265625e-06, -3.62396240234375e-05, -8.0108642578125e-05, -2.3364747903542593e-05, -0.0002795067266561091, -3.62396240234375e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0007172070909291506, -4.291534423828125e-06, -1.1563301086425781e-05, -7.62939453125e-05, -0.06959056854248047, -0.0006122589111328125, -1.0967194612021558e-05, 0.0, -1.1086401173088234e-05, -1.1920928244535389e-07, -0.0026497829239815474, 0.0, -0.0003509521484375, -3.814697265625e-06, -0.0009680986404418945, -5.53131103515625e-05, -0.0016002655029296875, 0.0, -9.918212890625e-05, 0.0, -0.0006160736083984375, -5.7220458984375e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.0024216175079345703, 0.0, -0.009123802185058594, 0.0, -0.0027570724487304688, -0.0011196136474609375, -0.00052642822265625, -4.1961669921875e-05, -0.0010321118170395494, -6.437291176553117e-06, -0.0002155303955078125, -0.000396728515625, -0.0007076263427734375, -0.0006084442138671875, -0.0012226104736328125, -7.62939453125e-06, -0.0028409957885742188, -3.814697265625e-06, -0.0014705657958984375, -1.9073486328125e-06, -0.0010569094447419047, -1.8954096958623268e-05, -0.0088958740234375, -3.24249267578125e-05, -2.09808349609375e-05, -1.5405406951904297, -1.9073486328125e-06, -0.009052276611328125, -0.0001049041748046875, -1.33514404296875e-05, -9.5367431640625e-06, -0.0030340366065502167, -3.6954811548639555e-06, -0.003986238967627287, -2.300739288330078e-05, -0.00411224365234375, -1.33514404296875e-05, -2.288818359375e-05, -1.52587890625e-05, -0.00019848227384500206, -2.8133095838711597e-05, -0.014412401244044304, -4.291534423828125e-06, -0.055388450622558594, -0.0020837783813476562, -6.866455078125e-05, 0.0, -7.2479248046875e-05, 0.0, -0.0010485649108886719, 0.0, -5.9604644775390625e-06, -1.1920928244535389e-07, -0.06227581575512886, 0.0, -5.340576171875e-05, -0.011261940002441406, -1.33514404296875e-05, -0.02553558349609375, -1.1920928244535389e-07, -1.9073486328125e-05, -3.24249267578125e-05, -5.7577934057917446e-05, -0.00030684471130371094], "choice_history": [96, 173, 358, 105, 152, "Backstab", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Backstab", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 167, 0, 282, "target", "<EOS>", 15, 146, 2, 347, 46, 153, 13, 143, 21, 174, "target", "<EOS>", "health", "<EOS>", 343, 12, 346, 85, 317, 21, 174, "target", "<EOS>", "calculate_max_health", "<EOS>", 85, 317, 21, 174, "target", "<EOS>", "spell_targetable", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_minion_spell_target", "hole3": "FREE", "hole0": "Backstab", "_type": "Template4", "hole2": "ROGUE", "hole7": "filter_func", "hole8": {"body": {"values": [{"comparators": [{"_type": "Template76", "hole1": "calculate_max_health", "hole0": {"_type": "Name", "id": "target"}}], "_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}}, {"_type": "Template76", "hole1": "spell_targetable", "hole0": {"_type": "Name", "id": "target"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "target"}}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 0}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Backstab"}], "_type": "Module"}, "score": -1.9698881773856343, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.12358474731445312, -8.58306884765625e-05, -3.814697265625e-06, -3.62396240234375e-05, -8.0108642578125e-05, -2.3364747903542593e-05, -0.0002795067266561091, -3.62396240234375e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0007172070909291506, -4.291534423828125e-06, -1.1563301086425781e-05, -7.62939453125e-05, -0.06959056854248047, -0.0006122589111328125, -1.0967194612021558e-05, 0.0, -1.1086401173088234e-05, -1.1920928244535389e-07, -0.0026497829239815474, 0.0, -0.0003509521484375, -3.814697265625e-06, -0.0009680986404418945, -5.53131103515625e-05, -0.0016002655029296875, 0.0, -9.918212890625e-05, 0.0, -0.0006160736083984375, -5.7220458984375e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.0024216175079345703, 0.0, -0.009123802185058594, 0.0, -0.0027570724487304688, -0.0011196136474609375, -0.00052642822265625, -4.1961669921875e-05, -0.0010321118170395494, -6.437291176553117e-06, -0.0002155303955078125, -0.000396728515625, -0.0007076263427734375, -0.0006084442138671875, -0.0012226104736328125, -7.62939453125e-06, -0.0028409957885742188, -3.814697265625e-06, -0.0014705657958984375, -1.9073486328125e-06, -0.0010569094447419047, -1.8954096958623268e-05, -0.0088958740234375, -3.24249267578125e-05, -2.09808349609375e-05, -0.33576488494873047, -1.1444091796875e-05, -0.004986763000488281, -4.00543212890625e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.0024270927533507347, -2.9802276912960224e-06, -0.003239870071411133, -1.919269561767578e-05, -0.0036230087280273438, -1.33514404296875e-05, -2.09808349609375e-05, -1.33514404296875e-05, -0.00023114588111639023, -3.0398065064218827e-05, -0.01484751421958208, -4.291534423828125e-06, -0.054633140563964844, -0.0018777847290039062, -6.29425048828125e-05, 0.0, -6.67572021484375e-05, 0.0, -0.0010303258895874023, 0.0, -7.867813110351562e-06, -1.1920928244535389e-07, -2.7389535903930664, 0.0, -9.5367431640625e-06, -0.0008907318115234375, -1.9073486328125e-06, -0.01754605770111084, -7.987019671418238e-06], "choice_history": [96, 173, 358, 105, 152, "Backstab", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Backstab", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 167, 0, 282, "target", "<EOS>", 15, 146, 2, 347, 46, 153, 13, 143, 21, 174, "target", "<EOS>", "health", "<EOS>", 343, 4, 346, 85, 317, 21, 174, "target", "<EOS>", "calculate_max_health", "<EOS>", 85, 317, 21, 174, "target", "<EOS>", "spell_targetable", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_minion_spell_target", "hole3": "FREE", "hole0": "Backstab", "_type": "Template4", "hole2": "ROGUE", "hole7": "filter_func", "hole8": {"body": {"values": [{"comparators": [{"_type": "Template76", "hole1": "calculate_max_health", "hole0": {"_type": "Name", "id": "target"}}], "_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}}, {"_type": "Template76", "hole1": "spell_targetable", "hole0": {"_type": "Name", "id": "target"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "target"}}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 0}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Backstab"}], "_type": "Module"}, "score": -3.416475284471275, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score_history": [-0.12358474731445312, -8.58306884765625e-05, -3.814697265625e-06, -3.62396240234375e-05, -8.0108642578125e-05, -2.3364747903542593e-05, -0.0002795067266561091, -3.62396240234375e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0007172070909291506, -4.291534423828125e-06, -1.1563301086425781e-05, -7.62939453125e-05, -3.540498733520508, -0.0002288818359375, -9.536714060232043e-06, -2.3841855067985307e-07, -5.924701690673828e-05, 0.0, -0.0019954442977905273, 0.0, -4.2080875573446974e-05, 0.0, -0.000171661376953125, -0.0001010894775390625, -3.814697265625e-06, -0.00022530555725097656, -1.9073486328125e-06, -0.0020694732666015625, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -9.381771087646484e-05, -5.841255187988281e-06, -4.00543212890625e-05, -9.5367431640625e-06, -0.0020002122037112713, 0.0, -0.000232696533203125, -8.96453857421875e-05, -7.62939453125e-06, 0.0, -0.0001468658447265625, 0.0, -2.5033950805664062e-05, -3.814697265625e-06, -6.198883056640625e-06, -1.1920928244535389e-07, -0.014206214807927608, 0.0, -7.43865966796875e-05, -0.16099262237548828, -1.52587890625e-05, -0.0014003515243530273, -2.3841855067985307e-07, -2.6702880859375e-05, -0.0001468658447265625, -5.84117769903969e-05, -0.0017677545547485352], "choice_history": [96, 173, 358, 105, 152, "Backstab", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Backstab", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Backstab", "_type": "Template14", "hole2": "ROGUE", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 0}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Backstab"}], "_type": "Module"}, "score": -3.8517712826396107, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.12358474731445312, -8.58306884765625e-05, -3.814697265625e-06, -3.62396240234375e-05, -8.0108642578125e-05, -2.3364747903542593e-05, -0.0002795067266561091, -3.62396240234375e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0007172070909291506, -4.291534423828125e-06, -1.1563301086425781e-05, -7.62939453125e-05, -0.06959056854248047, -0.0006122589111328125, -1.0967194612021558e-05, 0.0, -1.1086401173088234e-05, -1.1920928244535389e-07, -0.0026497829239815474, 0.0, -0.0003509521484375, -3.814697265625e-06, -0.0009680986404418945, -5.53131103515625e-05, -0.0016002655029296875, 0.0, -9.918212890625e-05, 0.0, -0.0006160736083984375, -5.7220458984375e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.0024216175079345703, 0.0, -0.009123802185058594, 0.0, -0.0027570724487304688, -0.0011196136474609375, -0.00052642822265625, -4.1961669921875e-05, -0.0010321118170395494, -6.437291176553117e-06, -0.0002155303955078125, -0.000396728515625, -0.0007076263427734375, -0.0006084442138671875, -0.0012226104736328125, -7.62939453125e-06, -0.0028409957885742188, -3.814697265625e-06, -0.0014705657958984375, -1.9073486328125e-06, -0.0010569094447419047, -1.8954096958623268e-05, -0.0088958740234375, -3.24249267578125e-05, -2.09808349609375e-05, -3.736478805541992, -0.0002498626708984375, -0.31284332275390625, -0.0001239776611328125, -1.1444091796875e-05, -2.09808349609375e-05, -0.0025505805388092995, -4.768360213347478e-06, -0.01123964786529541, -1.71661376953125e-05, -0.004641532897949219, -1.33514404296875e-05, -2.09808349609375e-05, -1.33514404296875e-05, -0.00018823017308022827, -2.9563572752522305e-05, -0.015436766669154167, -4.291534423828125e-06, -0.05266571044921875, -0.00188446044921875, -6.4849853515625e-05, 0.0, -6.866455078125e-05, 0.0, -0.0010349750518798828, 0.0, -7.867813110351562e-06, -1.1920928244535389e-07, -0.06944764405488968, 0.0, -5.53131103515625e-05, -0.011262893676757812, -1.33514404296875e-05, -0.023716330528259277, -1.1920928244535389e-07, -2.09808349609375e-05, -3.4332275390625e-05, -5.769713970948942e-05, -0.00032401084899902344], "choice_history": [96, 173, 358, 105, 152, "Backstab", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Backstab", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 167, 0, 282, "target", "<EOS>", 15, 146, 2, 347, 46, 153, 13, 143, 21, 174, "target", "<EOS>", "health", "<EOS>", 343, 8, 346, 85, 317, 21, 174, "target", "<EOS>", "calculate_max_health", "<EOS>", 85, 317, 21, 174, "target", "<EOS>", "spell_targetable", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_minion_spell_target", "hole3": "FREE", "hole0": "Backstab", "_type": "Template4", "hole2": "ROGUE", "hole7": "filter_func", "hole8": {"body": {"values": [{"comparators": [{"_type": "Template76", "hole1": "calculate_max_health", "hole0": {"_type": "Name", "id": "target"}}], "_type": "Compare", "ops": [{"_type": "Is"}], "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}}, {"_type": "Template76", "hole1": "spell_targetable", "hole0": {"_type": "Name", "id": "target"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "target"}}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 0}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Backstab"}], "_type": "Module"}, "score": -4.480635268620041, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health is target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.12358474731445312, -8.58306884765625e-05, -3.814697265625e-06, -3.62396240234375e-05, -8.0108642578125e-05, -2.3364747903542593e-05, -0.0002795067266561091, -3.62396240234375e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0007172070909291506, -4.291534423828125e-06, -1.1563301086425781e-05, -7.62939453125e-05, -0.06959056854248047, -0.0006122589111328125, -1.0967194612021558e-05, 0.0, -1.1086401173088234e-05, -1.1920928244535389e-07, -0.0026497829239815474, 0.0, -0.0003509521484375, -3.814697265625e-06, -0.0009680986404418945, -5.53131103515625e-05, -0.0016002655029296875, 0.0, -9.918212890625e-05, 0.0, -0.0006160736083984375, -5.7220458984375e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.0024216175079345703, 0.0, -0.009123802185058594, 0.0, -0.0027570724487304688, -0.0011196136474609375, -0.00052642822265625, -4.1961669921875e-05, -0.0010321118170395494, -6.437291176553117e-06, -0.0002155303955078125, -0.000396728515625, -0.0007076263427734375, -0.0006084442138671875, -0.0012226104736328125, -7.62939453125e-06, -0.0028409957885742188, -3.814697265625e-06, -0.0014705657958984375, -1.9073486328125e-06, -0.0010569094447419047, -1.8954096958623268e-05, -0.0088958740234375, -3.24249267578125e-05, -2.09808349609375e-05, -0.33576488494873047, -1.1444091796875e-05, -0.004986763000488281, -4.00543212890625e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.0024270927533507347, -2.9802276912960224e-06, -0.003239870071411133, -1.919269561767578e-05, -0.0036230087280273438, -1.33514404296875e-05, -2.09808349609375e-05, -1.33514404296875e-05, -0.00023114588111639023, -3.0398065064218827e-05, -0.01484751421958208, -4.291534423828125e-06, -0.054633140563964844, -0.0018777847290039062, -6.29425048828125e-05, 0.0, -6.67572021484375e-05, 0.0, -0.0010303258895874023, 0.0, -7.867813110351562e-06, -1.1920928244535389e-07, -0.0680670216679573, 0.0, -5.53131103515625e-05, -0.011196136474609375, -1.33514404296875e-05, -3.7684290409088135, -1.823902130126953e-05, -2.86102294921875e-05, -2.288818359375e-05, -5.555143434321508e-05, -0.00031816959381103516], "choice_history": [96, 173, 358, 105, 152, "Backstab", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Backstab", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 167, 0, 282, "target", "<EOS>", 15, 146, 2, 347, 46, 153, 13, 143, 21, 174, "target", "<EOS>", "health", "<EOS>", 343, 4, 346, 85, 317, 21, 174, "target", "<EOS>", "calculate_max_health", "<EOS>", 85, 317, 21, 174, "target", "<EOS>", "spell_targetable", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "0", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_minion_spell_target", "hole3": "FREE", "hole0": "Backstab", "_type": "Template4", "hole2": "ROGUE", "hole7": "filter_func", "hole8": {"body": {"values": [{"comparators": [{"_type": "Template76", "hole1": "calculate_max_health", "hole0": {"_type": "Name", "id": "target"}}], "_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}}, {"_type": "Template76", "hole1": "spell_targetable", "hole0": {"_type": "Name", "id": "target"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "target"}}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 0}, {"hole2": [{"_type": "Template61", "hole0": 0}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Backstab"}], "_type": "Module"}, "score": -4.507269795518809, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(0), self)\n"}, {"score_history": [-0.12358474731445312, -8.58306884765625e-05, -3.814697265625e-06, -3.62396240234375e-05, -8.0108642578125e-05, -2.3364747903542593e-05, -0.0002795067266561091, -3.62396240234375e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0007172070909291506, -4.291534423828125e-06, -1.1563301086425781e-05, -7.62939453125e-05, -4.053380966186523, -0.001087188720703125, -1.9788731151493266e-05, -1.1920928244535389e-07, -4.017353057861328e-05, -1.1920928244535389e-07, -0.0028384923934936523, -1.9073486328125e-06, -0.13279962539672852, -1.9073486328125e-06, -0.0019502639770507812, 0.0, -0.036205291748046875, 0.0, -1.71661376953125e-05, 0.0, -0.0003129243850708008, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -0.032814621925354004, 0.0, -0.0002384185791015625, -5.7220458984375e-05, -9.5367431640625e-06, 0.0, -0.000125885009765625, 0.0, -2.1219253540039062e-05, -3.814697265625e-06, -6.318092346191406e-06, -1.1920928244535389e-07, -0.01517405640333891, -1.1920928244535389e-07, -5.14984130859375e-05, -0.12772083282470703, -1.71661376953125e-05, -0.0012764930725097656, -2.3841855067985307e-07, -2.86102294921875e-05, -0.0001220703125, -6.0557456890819594e-05, -0.0014722347259521484], "choice_history": [96, 173, 358, 105, 152, "Backstab", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 137, 326, "Backstab", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole3": "FREE", "hole0": "Backstab", "_type": "Template8", "hole2": "ROGUE", "hole1": 0}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Backstab"}], "_type": "Module"}, "score": -4.532828598359572, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, FREE=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.12358474731445312, -8.58306884765625e-05, -3.814697265625e-06, -3.62396240234375e-05, -8.0108642578125e-05, -2.3364747903542593e-05, -0.0002795067266561091, -3.62396240234375e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0007172070909291506, -4.291534423828125e-06, -1.1563301086425781e-05, -7.62939453125e-05, -0.06959056854248047, -0.0006122589111328125, -1.0967194612021558e-05, 0.0, -1.1086401173088234e-05, -1.1920928244535389e-07, -0.0026497829239815474, 0.0, -0.0003509521484375, -3.814697265625e-06, -0.0009680986404418945, -5.53131103515625e-05, -0.0016002655029296875, 0.0, -9.918212890625e-05, 0.0, -0.0006160736083984375, -5.7220458984375e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.0024216175079345703, 0.0, -0.009123802185058594, 0.0, -0.0027570724487304688, -0.0011196136474609375, -0.00052642822265625, -4.1961669921875e-05, -0.0010321118170395494, -6.437291176553117e-06, -0.0002155303955078125, -0.000396728515625, -0.0007076263427734375, -0.0006084442138671875, -0.0012226104736328125, -7.62939453125e-06, -0.0028409957885742188, -3.814697265625e-06, -0.0014705657958984375, -1.9073486328125e-06, -0.0010569094447419047, -1.8954096958623268e-05, -0.0088958740234375, -3.24249267578125e-05, -2.09808349609375e-05, -1.5405406951904297, -1.9073486328125e-06, -0.009052276611328125, -0.0001049041748046875, -1.33514404296875e-05, -9.5367431640625e-06, -0.0030340366065502167, -3.6954811548639555e-06, -0.003986238967627287, -2.300739288330078e-05, -0.00411224365234375, -1.33514404296875e-05, -2.288818359375e-05, -1.52587890625e-05, -0.00019848227384500206, -2.8133095838711597e-05, -0.014412401244044304, -4.291534423828125e-06, -0.055388450622558594, -0.0020837783813476562, -6.866455078125e-05, 0.0, -7.2479248046875e-05, 0.0, -0.0010485649108886719, 0.0, -5.9604644775390625e-06, -1.1920928244535389e-07, -2.8278586864471436, 0.0, -9.5367431640625e-06, -0.00080108642578125, -1.9073486328125e-06, -0.016802310943603516, -6.0796710386057384e-06], "choice_history": [96, 173, 358, 105, 152, "Backstab", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Backstab", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 167, 0, 282, "target", "<EOS>", 15, 146, 2, 347, 46, 153, 13, 143, 21, 174, "target", "<EOS>", "health", "<EOS>", 343, 12, 346, 85, 317, 21, 174, "target", "<EOS>", "calculate_max_health", "<EOS>", 85, 317, 21, 174, "target", "<EOS>", "spell_targetable", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_minion_spell_target", "hole3": "FREE", "hole0": "Backstab", "_type": "Template4", "hole2": "ROGUE", "hole7": "filter_func", "hole8": {"body": {"values": [{"comparators": [{"_type": "Template76", "hole1": "calculate_max_health", "hole0": {"_type": "Name", "id": "target"}}], "_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}}, {"_type": "Template76", "hole1": "spell_targetable", "hole0": {"_type": "Name", "id": "target"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "target"}}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 0}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Backstab"}], "_type": "Module"}, "score": -4.715811648241456, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score_history": [-0.12358474731445312, -8.58306884765625e-05, -3.814697265625e-06, -3.62396240234375e-05, -8.0108642578125e-05, -2.3364747903542593e-05, -0.0002795067266561091, -3.62396240234375e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0007172070909291506, -4.291534423828125e-06, -1.1563301086425781e-05, -7.62939453125e-05, -0.06959056854248047, -0.0006122589111328125, -1.0967194612021558e-05, 0.0, -1.1086401173088234e-05, -1.1920928244535389e-07, -0.0026497829239815474, 0.0, -0.0003509521484375, -3.814697265625e-06, -0.0009680986404418945, -5.53131103515625e-05, -0.0016002655029296875, 0.0, -9.918212890625e-05, 0.0, -0.0006160736083984375, -5.7220458984375e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.0024216175079345703, 0.0, -0.009123802185058594, 0.0, -0.0027570724487304688, -0.0011196136474609375, -0.00052642822265625, -4.1961669921875e-05, -0.0010321118170395494, -6.437291176553117e-06, -0.0002155303955078125, -0.000396728515625, -0.0007076263427734375, -0.0006084442138671875, -0.0012226104736328125, -7.62939453125e-06, -0.0028409957885742188, -3.814697265625e-06, -0.0014705657958984375, -1.9073486328125e-06, -0.0010569094447419047, -1.8954096958623268e-05, -0.0088958740234375, -3.24249267578125e-05, -2.09808349609375e-05, -0.33576488494873047, -1.1444091796875e-05, -0.004986763000488281, -4.00543212890625e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.0024270927533507347, -2.9802276912960224e-06, -0.003239870071411133, -1.919269561767578e-05, -0.0036230087280273438, -1.33514404296875e-05, -2.09808349609375e-05, -1.33514404296875e-05, -0.00023114588111639023, -3.0398065064218827e-05, -0.01484751421958208, -4.291534423828125e-06, -3.2066650390625, -0.0042819976806640625, -0.0013599395751953125, 0.0, -0.11016963422298431, -0.0018515586853027344, -0.002167344093322754, -3.933906555175781e-06, -0.007359504699707031, -0.0047817230224609375, -0.001033782958984375, -0.009671775624155998, -2.3841855067985307e-07, -4.38690185546875e-05, -7.62939453125e-06, -2.6822088329936378e-05, -5.960462772236497e-07, -0.08323955535888672, 0.0, -4.76837158203125e-05, 0.0, -0.0001723766326904297, -2.0265579223632812e-06, -7.152551916078664e-06, -2.264974000354414e-06, -0.009597552008926868, 0.0, -0.012914657592773438, -0.22136402130126953, -4.00543212890625e-05, -0.0012064885813742876, 0.0, -0.02207660675048828, -5.7220458984375e-05, -8.344650268554688e-05, -0.0002695322036743164, -0.000225067138671875, 0.0, -0.0001373291015625, 0.0, -0.0002574920654296875, -7.748603820800781e-06, -1.1563299267436378e-05, -7.510183422709815e-06, -0.14051149785518646, 0.0, -0.0162506103515625, -0.3887205123901367, -3.62396240234375e-05, -0.002153764246031642, 0.0, -0.03599739074707031, -4.9591064453125e-05, -9.143352508544922e-05, -0.00025403499603271484], "choice_history": [96, 173, 358, 105, 152, "Backstab", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Backstab", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 167, 0, 282, "target", "<EOS>", 15, 146, 2, 347, 46, 153, 13, 143, 21, 174, "target", "<EOS>", "health", "<EOS>", 343, 4, 346, 85, 317, 21, 174, "target", "<EOS>", "calculate_max_health", "<EOS>", 85, 317, 21, 174, "target", "<EOS>", "spell_targetable", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 52, 179, "2", "<EOS>", 50, 174, "self", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 52, 179, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_minion_spell_target", "hole3": "FREE", "hole0": "Backstab", "_type": "Template4", "hole2": "ROGUE", "hole7": "filter_func", "hole8": {"body": {"values": [{"comparators": [{"_type": "Template76", "hole1": "calculate_max_health", "hole0": {"_type": "Name", "id": "target"}}], "_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}}, {"_type": "Template76", "hole1": "spell_targetable", "hole0": {"_type": "Name", "id": "target"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "target"}}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 0}, {"hole4": "damage", "hole6": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole3": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole0": {"_type": "Template79", "hole0": "super"}, "_type": "Template7", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole7": "damage", "hole8": [{"n": 2, "_type": "Num"}, {"_type": "Name", "id": "self"}], "hole5": [{"n": 2, "_type": "Num"}, {"_type": "Name", "id": "self"}], "hole1": "use"}], "_type": "ClassDef", "name": "Backstab"}], "_type": "Module"}, "score": -4.886604348744662, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(2, self)\n        self.target.damage(2, self)\n"}, {"score_history": [-0.12358474731445312, -8.58306884765625e-05, -3.814697265625e-06, -3.62396240234375e-05, -8.0108642578125e-05, -2.3364747903542593e-05, -0.0002795067266561091, -3.62396240234375e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0007172070909291506, -4.291534423828125e-06, -1.1563301086425781e-05, -7.62939453125e-05, -0.06959056854248047, -0.0006122589111328125, -1.0967194612021558e-05, 0.0, -1.1086401173088234e-05, -1.1920928244535389e-07, -0.0026497829239815474, 0.0, -0.0003509521484375, -3.814697265625e-06, -0.0009680986404418945, -5.53131103515625e-05, -0.0016002655029296875, 0.0, -9.918212890625e-05, 0.0, -0.0006160736083984375, -5.7220458984375e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.0024216175079345703, 0.0, -0.009123802185058594, 0.0, -0.0027570724487304688, -0.0011196136474609375, -0.00052642822265625, -4.1961669921875e-05, -0.0010321118170395494, -6.437291176553117e-06, -0.0002155303955078125, -0.000396728515625, -0.0007076263427734375, -0.0006084442138671875, -0.0012226104736328125, -7.62939453125e-06, -0.0028409957885742188, -3.814697265625e-06, -0.0014705657958984375, -1.9073486328125e-06, -0.0010569094447419047, -1.8954096958623268e-05, -0.0088958740234375, -3.24249267578125e-05, -2.09808349609375e-05, -4.882313251495361, -1.9073486328125e-06, -0.03363609313964844, -4.57763671875e-05, -9.5367431640625e-06, -1.71661376953125e-05, -0.00556112639605999, -1.1086402082582936e-05, -0.0036474463995546103, -2.300739288330078e-05, -0.003387451171875, -1.1444091796875e-05, -1.9073486328125e-05, -1.52587890625e-05, -0.00018250758876092732, -4.005373193649575e-05, -0.014693614095449448, -4.291534423828125e-06, -0.047438621520996094, -0.0020112991333007812, -6.4849853515625e-05, 0.0, -6.866455078125e-05, 0.0, -0.0010792016983032227, 0.0, -5.9604644775390625e-06, -1.1920928244535389e-07, -0.07043109834194183, 0.0, -5.7220458984375e-05, -0.011296272277832031, -1.33514404296875e-05, -0.023514151573181152, -1.1920928244535389e-07, -2.09808349609375e-05, -3.4332275390625e-05, -5.698186214431189e-05, -0.00031447410583496094], "choice_history": [96, 173, 358, 105, 152, "Backstab", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Backstab", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 167, 0, 282, "target", "<EOS>", 15, 146, 2, 347, 46, 153, 13, 143, 21, 174, "target", "<EOS>", "health", "<EOS>", 343, 11, 346, 85, 317, 21, 174, "target", "<EOS>", "calculate_max_health", "<EOS>", 85, 317, 21, 174, "target", "<EOS>", "spell_targetable", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_minion_spell_target", "hole3": "FREE", "hole0": "Backstab", "_type": "Template4", "hole2": "ROGUE", "hole7": "filter_func", "hole8": {"body": {"values": [{"comparators": [{"_type": "Template76", "hole1": "calculate_max_health", "hole0": {"_type": "Name", "id": "target"}}], "_type": "Compare", "ops": [{"_type": "LtE"}], "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}}, {"_type": "Template76", "hole1": "spell_targetable", "hole0": {"_type": "Name", "id": "target"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "target"}}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 0}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Backstab"}], "_type": "Module"}, "score": -5.336115114226665, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health <= target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.12358474731445312, -8.58306884765625e-05, -3.814697265625e-06, -3.62396240234375e-05, -8.0108642578125e-05, -2.3364747903542593e-05, -0.0002795067266561091, -3.62396240234375e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0007172070909291506, -4.291534423828125e-06, -1.1563301086425781e-05, -7.62939453125e-05, -0.06959056854248047, -0.0006122589111328125, -1.0967194612021558e-05, 0.0, -1.1086401173088234e-05, -1.1920928244535389e-07, -0.0026497829239815474, 0.0, -0.0003509521484375, -3.814697265625e-06, -0.0009680986404418945, -5.53131103515625e-05, -0.0016002655029296875, 0.0, -9.918212890625e-05, 0.0, -0.0006160736083984375, -5.7220458984375e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.0024216175079345703, 0.0, -0.009123802185058594, 0.0, -0.0027570724487304688, -0.0011196136474609375, -0.00052642822265625, -4.1961669921875e-05, -0.0010321118170395494, -6.437291176553117e-06, -0.0002155303955078125, -0.000396728515625, -0.0007076263427734375, -0.0006084442138671875, -0.0012226104736328125, -7.62939453125e-06, -0.0028409957885742188, -3.814697265625e-06, -0.0014705657958984375, -1.9073486328125e-06, -0.0010569094447419047, -1.8954096958623268e-05, -0.0088958740234375, -3.24249267578125e-05, -2.09808349609375e-05, -0.33576488494873047, -1.1444091796875e-05, -0.004986763000488281, -4.00543212890625e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.0024270927533507347, -2.9802276912960224e-06, -0.003239870071411133, -1.919269561767578e-05, -0.0036230087280273438, -1.33514404296875e-05, -2.09808349609375e-05, -1.33514404296875e-05, -0.00023114588111639023, -3.0398065064218827e-05, -0.01484751421958208, -4.291534423828125e-06, -3.2066650390625, -0.0042819976806640625, -0.0013599395751953125, 0.0, -0.11016963422298431, -0.0018515586853027344, -0.002167344093322754, -3.933906555175781e-06, -0.007359504699707031, -0.0047817230224609375, -0.001033782958984375, -0.009671775624155998, -2.3841855067985307e-07, -4.38690185546875e-05, -7.62939453125e-06, -2.6822088329936378e-05, -5.960462772236497e-07, -0.08323955535888672, 0.0, -4.76837158203125e-05, 0.0, -0.0001723766326904297, -2.0265579223632812e-06, -7.152551916078664e-06, -2.264974000354414e-06, -0.009597552008926868, 0.0, -0.012914657592773438, -0.22136402130126953, -4.00543212890625e-05, -0.0012064885813742876, 0.0, -0.02207660675048828, -5.7220458984375e-05, -8.344650268554688e-05, -0.0002695322036743164, -0.000225067138671875, 0.0, -0.0001373291015625, 0.0, -0.0002574920654296875, -7.748603820800781e-06, -1.1563299267436378e-05, -7.510183422709815e-06, -0.14051149785518646, 0.0, -0.0162506103515625, -1.1545610427856445, -0.0002765655517578125, -0.0038650035858154297, -4.768370445162873e-07, -3.62396240234375e-05, -0.0002117156982421875, -0.00017547485185787082, -0.00032150745391845703], "choice_history": [96, 173, 358, 105, 152, "Backstab", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Backstab", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 167, 0, 282, "target", "<EOS>", 15, 146, 2, 347, 46, 153, 13, 143, 21, 174, "target", "<EOS>", "health", "<EOS>", 343, 4, 346, 85, 317, 21, 174, "target", "<EOS>", "calculate_max_health", "<EOS>", 85, 317, 21, 174, "target", "<EOS>", "spell_targetable", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 52, 179, "2", "<EOS>", 50, 174, "self", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_minion_spell_target", "hole3": "FREE", "hole0": "Backstab", "_type": "Template4", "hole2": "ROGUE", "hole7": "filter_func", "hole8": {"body": {"values": [{"comparators": [{"_type": "Template76", "hole1": "calculate_max_health", "hole0": {"_type": "Name", "id": "target"}}], "_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}}, {"_type": "Template76", "hole1": "spell_targetable", "hole0": {"_type": "Name", "id": "target"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "target"}}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 0}, {"hole4": "damage", "hole6": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole3": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole0": {"_type": "Template79", "hole0": "super"}, "_type": "Template7", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole7": "damage", "hole8": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "hole5": [{"n": 2, "_type": "Num"}, {"_type": "Name", "id": "self"}], "hole1": "use"}], "_type": "ClassDef", "name": "Backstab"}], "_type": "Module"}, "score": -5.618749408540133, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(2, self)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.12358474731445312, -8.58306884765625e-05, -3.814697265625e-06, -3.62396240234375e-05, -8.0108642578125e-05, -2.3364747903542593e-05, -0.0002795067266561091, -3.62396240234375e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0007172070909291506, -4.291534423828125e-06, -1.1563301086425781e-05, -7.62939453125e-05, -5.925504684448242, -0.17860794067382812, -0.00064876489341259, 0.0, -9.536738616588991e-07, 0.0, -0.07082343101501465, 0.0, -0.029815673828125, -0.0036945343017578125, -3.62396240234375e-05, 0.0, -0.00055694580078125, 0.0, -0.00047278404235839844, 0.0, -9.894361937767826e-06, -2.3841855067985307e-07, -0.014203005470335484, 0.0, -7.2479248046875e-05, -0.09144210815429688, -1.1444091796875e-05, -0.002458929782733321, -1.311301275563892e-06, -2.86102294921875e-05, -6.866455078125e-05, -7.223951979540288e-05, -0.0011023283004760742], "choice_history": [96, 173, 358, 105, 152, "Backstab", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 116, 196, "Backstab", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "ROGUE", "_type": "Template12", "hole1": 0, "hole0": "Backstab"}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Backstab"}], "_type": "Module"}, "score": -6.444580043062587, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.FREE\n            )\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-2.1586742401123047, -0.007171630859375, -9.393251093570143e-05, -3.576278118089249e-07, -2.3841852225814364e-07, -7.987022399902344e-06, -2.622600959512056e-06, -8.58306884765625e-05, -0.8553056716918945, -0.0005817413330078125, -0.00022125244140625, -1.9073486328125e-06, -0.00043954807915724814, -2.09808349609375e-05, -5.7816505432128906e-05, 0.0, -0.00066375732421875, -4.00543212890625e-05, -5.53131103515625e-05, -4.649158654501662e-06, -3.933906555175781e-06, -0.0002593994140625, -6.866455078125e-05, -5.340576171875e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.00015866756439208984, 0.0, -0.005070090293884277, -1.9073486328125e-06, -5.340576171875e-05, -0.0001773834228515625, -9.5367431640625e-06, 0.0, -3.814697265625e-05, -1.71661376953125e-05, -0.0005931854248046875, 0.0, -0.000263214111328125, -7.82012939453125e-05, -3.814697265625e-06, -0.002361774444580078, -2.0265579223632812e-06, -0.04769325256347656, 0.0, -0.0004730224609375, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.00013959407806396484, -2.0265579223632812e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.023475050926208496, 0.0, -0.003851175308227539, 0.0, -5.841255187988281e-06, 0.0, -7.82012939453125e-05, -2.6702880859375e-05, -5.7220458984375e-06, -2.0265579223632812e-06, -0.17080211639404297, -1.9073486328125e-05, -3.24249267578125e-05, -0.0002307891845703125, -3.4332275390625e-05, -3.814697265625e-05, -1.9073486328125e-06, -7.867813110351562e-06, -2.86102294921875e-05, -2.6702880859375e-05, 0.0, -5.7220458984375e-06, -2.1457672119140625e-06, -3.409384225960821e-05, -8.344646857949556e-07, -0.07569313049316406, -2.86102294921875e-05, -0.0001697540283203125, -0.0001087188720703125, -3.814697265625e-06, -0.038116276264190674, -7.748603820800781e-06, -0.17928218841552734, -1.9073486328125e-06, -0.000274658203125, 0.0, -0.008731842041015625, -3.814697265625e-06, -0.010512948036193848, -1.9073486328125e-06, -0.000186920166015625, -3.814697265625e-05, -7.43865966796875e-05, -0.002956390380859375, -1.33514404296875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.21581077575683594, 0.0, -9.5367431640625e-05, -0.0001659393310546875, -0.23638737201690674, 0.0, -0.000571488868445158, 0.0, -0.002669453388080001, -1.9073486328125e-06, -0.0007146596908569336, -1.1444091796875e-05, -1.3667421340942383, -0.0023937225341796875, -3.0517578125e-05, -3.24249267578125e-05, -0.1834026575088501, -2.6702880859375e-05, -0.0030956268310546875, -7.62939453125e-06, -1.52587890625e-05, -2.09808349609375e-05, -0.0016391269164159894, 0.0, -0.00014495849609375, -7.05718994140625e-05, -5.7220458984375e-06, -0.00013208352902438492, -1.71661376953125e-05, -0.00830841064453125, -1.9073486328125e-06, -0.5312751531600952, 0.0, -0.12024974822998047, -0.015336990356445312, -0.0003662109375, -0.1331157684326172, -9.5367431640625e-06, -0.008628377690911293, -1.1920928955078125e-05, -0.009520101360976696, 0.0, -0.0001544952392578125, -0.034552574157714844, -2.86102294921875e-05, -0.0015297885984182358, -1.1920928244535389e-07, -9.918212890625e-05, -6.866455078125e-05, -5.7816079788608477e-05, -0.0002942085266113281], "choice_history": [97, 285, "Backstab", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Backstab", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "2", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}]}}], "hole3": "use", "hole0": "Backstab", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Backstab"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.473781813798034, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.current_player.minions)\n        for i in range(0, 2):\n            minion.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-2.1586742401123047, -0.007171630859375, -9.393251093570143e-05, -3.576278118089249e-07, -2.3841852225814364e-07, -7.987022399902344e-06, -2.622600959512056e-06, -8.58306884765625e-05, -0.8553056716918945, -0.0005817413330078125, -0.00022125244140625, -1.9073486328125e-06, -0.00043954807915724814, -2.09808349609375e-05, -5.7816505432128906e-05, 0.0, -0.00066375732421875, -4.00543212890625e-05, -5.53131103515625e-05, -4.649158654501662e-06, -3.933906555175781e-06, -0.0002593994140625, -6.866455078125e-05, -5.340576171875e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.00015866756439208984, 0.0, -0.005070090293884277, -1.9073486328125e-06, -5.340576171875e-05, -0.0001773834228515625, -9.5367431640625e-06, 0.0, -3.814697265625e-05, -1.71661376953125e-05, -0.0005931854248046875, 0.0, -0.000263214111328125, -7.82012939453125e-05, -3.814697265625e-06, -0.002361774444580078, -2.0265579223632812e-06, -0.04769325256347656, 0.0, -0.0004730224609375, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.00013959407806396484, -2.0265579223632812e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.023475050926208496, 0.0, -0.003851175308227539, 0.0, -5.841255187988281e-06, 0.0, -7.82012939453125e-05, -2.6702880859375e-05, -5.7220458984375e-06, -2.0265579223632812e-06, -0.17080211639404297, -1.9073486328125e-05, -3.24249267578125e-05, -0.0002307891845703125, -3.4332275390625e-05, -3.814697265625e-05, -1.9073486328125e-06, -7.867813110351562e-06, -2.86102294921875e-05, -2.6702880859375e-05, 0.0, -5.7220458984375e-06, -2.1457672119140625e-06, -3.409384225960821e-05, -8.344646857949556e-07, -0.07569313049316406, -2.86102294921875e-05, -0.0001697540283203125, -0.0001087188720703125, -3.814697265625e-06, -0.038116276264190674, -7.748603820800781e-06, -0.17928218841552734, -1.9073486328125e-06, -0.000274658203125, 0.0, -0.008731842041015625, -3.814697265625e-06, -0.010512948036193848, -1.9073486328125e-06, -0.000186920166015625, -3.814697265625e-05, -7.43865966796875e-05, -0.002956390380859375, -1.33514404296875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.21581077575683594, 0.0, -9.5367431640625e-05, -0.0001659393310546875, -0.23638737201690674, 0.0, -0.000571488868445158, 0.0, -0.002669453388080001, -1.9073486328125e-06, -0.0007146596908569336, -1.1444091796875e-05, -1.3667421340942383, -0.0023937225341796875, -3.0517578125e-05, -3.24249267578125e-05, -0.1834026575088501, -2.6702880859375e-05, -0.0030956268310546875, -7.62939453125e-06, -1.52587890625e-05, -2.09808349609375e-05, -0.0016391269164159894, 0.0, -0.00014495849609375, -7.05718994140625e-05, -5.7220458984375e-06, -0.00013208352902438492, -1.71661376953125e-05, -0.00830841064453125, -1.9073486328125e-06, -0.8950480222702026, -5.7220458984375e-06, -0.1583547592163086, -0.02658843994140625, -0.000354766845703125, -0.13840198516845703, -7.62939453125e-06, -0.002865065820515156, -2.5033950805664062e-05, -0.020658867433667183, 0.0, -0.000102996826171875, -0.038102149963378906, -3.24249267578125e-05, -0.0014706600923091173, -1.1920928244535389e-07, -0.0001068115234375, -5.53131103515625e-05, -5.3047784604132175e-05, -0.0002923011779785156], "choice_history": [97, 285, "Backstab", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Backstab", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "3", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"n": 3, "_type": "Num"}]}}], "hole3": "use", "hole0": "Backstab", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Backstab"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.901008663938903, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.current_player.minions)\n        for i in range(0, 3):\n            minion.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-2.1586742401123047, -0.007171630859375, -9.393251093570143e-05, -3.576278118089249e-07, -2.3841852225814364e-07, -7.987022399902344e-06, -2.622600959512056e-06, -8.58306884765625e-05, -0.8553056716918945, -0.0005817413330078125, -0.00022125244140625, -1.9073486328125e-06, -0.00043954807915724814, -2.09808349609375e-05, -5.7816505432128906e-05, 0.0, -0.00066375732421875, -4.00543212890625e-05, -5.53131103515625e-05, -4.649158654501662e-06, -3.933906555175781e-06, -0.0002593994140625, -6.866455078125e-05, -5.340576171875e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.00015866756439208984, 0.0, -0.005070090293884277, -1.9073486328125e-06, -5.340576171875e-05, -0.0001773834228515625, -9.5367431640625e-06, 0.0, -3.814697265625e-05, -1.71661376953125e-05, -0.0005931854248046875, 0.0, -0.000263214111328125, -7.82012939453125e-05, -3.814697265625e-06, -0.002361774444580078, -2.0265579223632812e-06, -0.04769325256347656, 0.0, -0.0004730224609375, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.00013959407806396484, -2.0265579223632812e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.023475050926208496, 0.0, -0.003851175308227539, 0.0, -5.841255187988281e-06, 0.0, -7.82012939453125e-05, -2.6702880859375e-05, -5.7220458984375e-06, -2.0265579223632812e-06, -0.17080211639404297, -1.9073486328125e-05, -3.24249267578125e-05, -0.0002307891845703125, -3.4332275390625e-05, -3.814697265625e-05, -1.9073486328125e-06, -7.867813110351562e-06, -2.86102294921875e-05, -2.6702880859375e-05, 0.0, -5.7220458984375e-06, -2.1457672119140625e-06, -3.409384225960821e-05, -8.344646857949556e-07, -0.07569313049316406, -2.86102294921875e-05, -0.0001697540283203125, -0.0001087188720703125, -3.814697265625e-06, -0.038116276264190674, -7.748603820800781e-06, -0.17928218841552734, -1.9073486328125e-06, -0.000274658203125, 0.0, -0.008731842041015625, -3.814697265625e-06, -0.010512948036193848, -1.9073486328125e-06, -0.000186920166015625, -3.814697265625e-05, -7.43865966796875e-05, -0.002956390380859375, -1.33514404296875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.21581077575683594, 0.0, -9.5367431640625e-05, -0.0001659393310546875, -0.23638737201690674, 0.0, -0.000571488868445158, 0.0, -0.002669453388080001, -1.9073486328125e-06, -0.0007146596908569336, -1.1444091796875e-05, -0.7949972152709961, -0.012305259704589844, -0.004782676696777344, -5.14984130859375e-05, -0.0001621246337890625, -0.000362396240234375, -0.0006580352783203125, -5.7220458984375e-06, -0.000362396240234375, -5.7220458984375e-06, -0.00437164306640625, -1.1444091796875e-05, -0.7566118240356445, -0.0001544952392578125, -0.000133514404296875, -9.5367431640625e-06, -0.008222818374633789, -1.0132789611816406e-05, -8.976459503173828e-05, -5.841255187988281e-06, -0.028197521343827248, -1.1920928244535389e-07, -0.036255333572626114, -2.3841855067985307e-07, -0.000263214111328125, -0.053740501403808594, -0.0003070831298828125, -0.000247955322265625, 0.0, -0.08151054382324219, -1.33514404296875e-05, -0.00016307830810546875, 0.0, -0.13778114318847656, -1.9073486328125e-06, -0.5039453506469727, -4.00543212890625e-05, -0.35001468658447266, -9.5367431640625e-06, -0.00016021728515625, 0.0, -0.0004609823226928711, -3.576278118089249e-07, -4.1127001168206334e-05, -4.0531076592742465e-06, -0.0001316070556640625, -0.167510986328125, -1.1444091796875e-05, -0.08442401885986328, -1.9073486328125e-05, -0.006075613666325808, -1.7404556274414062e-05, -0.0036134719848632812, -0.12419509887695312, -0.010249137878417969, -0.005922794342041016, -3.302074037492275e-05, -0.000871499883942306, -1.1920928244535389e-07, -0.1223236620426178, -1.9073486328125e-06, -0.09893989562988281, -0.012543678283691406, -0.0002994537353515625, -1.1801687833212782e-05, -0.00021135807037353516, 0.0, -0.20927532017230988, 0.0, -3.24249267578125e-05, -0.001232147216796875, -3.814697265625e-06, -0.004222869873046875, -1.1444091796875e-05, -0.0001888275146484375, 0.0, -2.7298927307128906e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.1920928244535389e-07, -0.004063854925334454, 0.0, -6.29425048828125e-05, -0.01600360870361328, -6.103515625e-05, -0.13132379949092865, 0.0, -5.53131103515625e-05, -2.86102294921875e-05, -3.2067237043520436e-05, -0.0016347169876098633], "choice_history": [97, 285, "Backstab", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Backstab", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 109, 161, 15, 146, 2, 347, 46, 153, 13, 143, 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 343, 8, 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 46, 153, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", 343, 7, 346, 50, 174, "targets", "<EOS>", 359, 131, 289, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 131, 289, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 358, 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"body": [{"hole2": "change_attack", "_type": "Template52", "hole1": "target", "hole0": "self"}, {"hole2": "increase_health", "_type": "Template52", "hole1": "target", "hole0": "self"}], "orelse": [{"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "If", "test": {"values": [{"comparators": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Compare", "ops": [{"_type": "Is"}], "left": {"value": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "card"}, "_type": "Attribute", "attr": "minion_type"}}, {"comparators": [{"_type": "Name", "id": "targets"}], "_type": "Compare", "ops": [{"_type": "In"}], "left": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "op": {"_type": "And"}, "_type": "BoolOp"}}], "hole3": "use", "hole0": "Backstab", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Backstab"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.834547976446295, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.current_player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.BEAST and self.\n            target in targets):\n            self.target.change_attack(2)\n            self.target.increase_health(2)\n        else:\n            self.target.damage(player.effective_spell_damage(2), self)\n"}]}
{"index": 10, "beams": [{"score_history": [-0.00081634521484375, -0.000152587890625, -2.86102294921875e-05, -0.000209808349609375, -5.91278076171875e-05, -4.458328112377785e-05, -0.00037931581027805805, -1.1801710570580326e-05, -0.00015245705435518175, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -0.0016894015716388822, -2.7179718017578125e-05, -8.404254913330078e-05, -6.29425048828125e-05, -0.005322456359863281, -7.62939453125e-05, -4.172316494077677e-06, -0.000274658203125, -0.001350001199170947, -8.58306884765625e-05, -0.0006036758422851562, 0.0, -0.00010644747817423195, 0.0, -0.004135847091674805, -2.1457672119140625e-06, -0.00551605224609375, -0.0005941390991210938, -0.000244140625, -3.814697265625e-06, -0.00022744358284398913, -6.198883056640625e-06, -0.002834320068359375, -4.017353057861328e-05, -0.000766754150390625, -0.0002727508544921875, -0.0002422332763671875, -0.002029061084613204, -3.4570634852570947e-06, -0.001617431640625, -7.62939453125e-06, -0.00018894672393798828, -2.3841855067985307e-07, -0.0005474090576171875, -1.71661376953125e-05, -4.38690185546875e-05, 0.0, -0.0002548694610595703, -8.344646857949556e-07, -0.00011551367060746998, -4.291525328881107e-06, -0.06195329129695892, -3.814697265625e-06, -2.47955322265625e-05, -0.0003833770751953125, -1.9073486328125e-06, -0.00013184142881073058, -0.00010514259338378906, -0.000301361083984375, 0.0, -3.24249267578125e-05, 0.0, -0.00081634521484375, -2.0265579223632812e-06, -0.00021791458129882812, 0.0, -0.0034667253494262695, -1.9073486328125e-06, -9.5367431640625e-05, -0.0002651214599609375, 0.0, -0.0002631847746670246, -4.780292510986328e-05], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Kings", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 52, 179, "4", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 52, 179, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PALADIN", "_type": "Template2", "hole1": 4, "hole0": "Blessing of Kings"}, {"hole4": "change_attack", "hole6": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole3": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole0": {"_type": "Template79", "hole0": "super"}, "_type": "Template7", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole7": "increase_health", "hole8": [{"n": 4, "_type": "Num"}], "hole5": [{"n": 4, "_type": "Num"}], "hole1": "use"}], "_type": "ClassDef", "name": "BlessingOfKings"}], "_type": "Module"}, "score": -0.09943385804180593, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n"}, {"score_history": [-0.00081634521484375, -0.000152587890625, -2.86102294921875e-05, -0.000209808349609375, -5.91278076171875e-05, -4.458328112377785e-05, -0.00037931581027805805, -1.1801710570580326e-05, -0.00015245705435518175, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -0.0016894015716388822, -2.7179718017578125e-05, -8.404254913330078e-05, -6.29425048828125e-05, -0.005322456359863281, -7.62939453125e-05, -4.172316494077677e-06, -0.000274658203125, -0.001350001199170947, -8.58306884765625e-05, -0.0006036758422851562, 0.0, -0.00010644747817423195, 0.0, -0.004135847091674805, -2.1457672119140625e-06, -0.00551605224609375, -0.0005941390991210938, -0.000244140625, -3.814697265625e-06, -0.00022744358284398913, -6.198883056640625e-06, -0.002834320068359375, -4.017353057861328e-05, -0.000766754150390625, -0.0002727508544921875, -0.0002422332763671875, -0.002029061084613204, -3.4570634852570947e-06, -0.001617431640625, -7.62939453125e-06, -0.00018894672393798828, -2.3841855067985307e-07, -0.0005474090576171875, -1.71661376953125e-05, -4.38690185546875e-05, 0.0, -0.0002548694610595703, -8.344646857949556e-07, -0.00011551367060746998, -4.291525328881107e-06, -2.992842435836792, -1.9073486328125e-06, -9.34600830078125e-05, -0.0005207061767578125, 0.0, -0.00010370866220910102, -0.00010144710540771484, -0.0001964569091796875, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.0008535385131835938, -5.7220458984375e-06, -0.00017201900482177734, 0.0, -0.003741621971130371, -1.9073486328125e-06, -8.7738037109375e-05, -0.000293731689453125, 0.0, -0.0002437581861158833, -5.364418029785156e-05], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Kings", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 52, 179, "4", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 52, 179, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PALADIN", "_type": "Template2", "hole1": 4, "hole0": "Blessing of Kings"}, {"hole4": "increase_health", "hole6": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole3": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole0": {"_type": "Template79", "hole0": "super"}, "_type": "Template7", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole7": "increase_health", "hole8": [{"n": 4, "_type": "Num"}], "hole5": [{"n": 4, "_type": "Num"}], "hole1": "use"}], "_type": "ClassDef", "name": "BlessingOfKings"}], "_type": "Module"}, "score": -3.030660012394577, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(4)\n        self.target.increase_health(4)\n"}, {"score_history": [-0.00081634521484375, -0.000152587890625, -2.86102294921875e-05, -0.000209808349609375, -5.91278076171875e-05, -4.458328112377785e-05, -0.00037931581027805805, -1.1801710570580326e-05, -0.00015245705435518175, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -0.0016894015716388822, -2.7179718017578125e-05, -8.404254913330078e-05, -6.29425048828125e-05, -0.005322456359863281, -7.62939453125e-05, -4.172316494077677e-06, -0.000274658203125, -0.001350001199170947, -8.58306884765625e-05, -0.0006036758422851562, 0.0, -0.00010644747817423195, 0.0, -0.004135847091674805, -2.1457672119140625e-06, -0.00551605224609375, -0.0005941390991210938, -0.000244140625, -3.814697265625e-06, -0.00022744358284398913, -6.198883056640625e-06, -0.002834320068359375, -4.017353057861328e-05, -0.000766754150390625, -0.0002727508544921875, -0.0002422332763671875, -0.002029061084613204, -3.4570634852570947e-06, -0.001617431640625, -7.62939453125e-06, -0.00018894672393798828, -2.3841855067985307e-07, -0.0005474090576171875, -1.71661376953125e-05, -4.38690185546875e-05, 0.0, -0.0002548694610595703, -8.344646857949556e-07, -0.00011551367060746998, -4.291525328881107e-06, -0.06195329129695892, -3.814697265625e-06, -2.47955322265625e-05, -0.0003833770751953125, -1.9073486328125e-06, -0.00013184142881073058, -0.00010514259338378906, -0.000301361083984375, 0.0, -3.24249267578125e-05, 0.0, -0.00081634521484375, -2.0265579223632812e-06, -0.00021791458129882812, 0.0, -5.878505706787109, -1.71661376953125e-05, -2.09808349609375e-05, -0.000213623046875, -1.9073486328125e-06, -0.00015436812827829272, -5.173683166503906e-05], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Kings", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 52, 179, "4", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 52, 179, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PALADIN", "_type": "Template2", "hole1": 4, "hole0": "Blessing of Kings"}, {"hole4": "change_attack", "hole6": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole3": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole0": {"_type": "Template79", "hole0": "super"}, "_type": "Template7", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole7": "change_attack", "hole8": [{"n": 4, "_type": "Num"}], "hole5": [{"n": 4, "_type": "Num"}], "hole1": "use"}], "_type": "ClassDef", "name": "BlessingOfKings"}], "_type": "Module"}, "score": -5.974259237867585, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.change_attack(4)\n"}, {"score_history": [-0.00081634521484375, -0.000152587890625, -2.86102294921875e-05, -0.000209808349609375, -5.91278076171875e-05, -4.458328112377785e-05, -0.00037931581027805805, -1.1801710570580326e-05, -0.00015245705435518175, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -0.0016894015716388822, -2.7179718017578125e-05, -8.404254913330078e-05, -6.29425048828125e-05, -5.522666931152344, -0.0031681060791015625, -8.868777513271198e-05, -8.96453857421875e-05, -7.56973895477131e-05, -3.24249267578125e-05, -0.004502296447753906, -0.0001354217529296875, -0.0007485798560082912, -1.9073486328125e-06, -0.1812049150466919, -1.728534698486328e-05, -0.004803657531738281, -9.5367431640625e-06, -3.62396240234375e-05, 0.0, -0.0052490234375, 0.0, -1.33514404296875e-05, 0.0, -0.00018310546875, -1.52587890625e-05, -1.1444091796875e-05, -4.00543212890625e-05, -0.006427764892578125, 0.0, -0.0007762908935546875, -9.34600830078125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00032806396484375, 0.0, -0.00013172626495361328, -3.576278118089249e-07, -6.544589268742129e-05, -1.1920928244535389e-07, -0.3552146852016449, -3.576278118089249e-07, -1.9073486328125e-06, -0.07604217529296875, 0.0, -0.00012564111966639757, -0.00014126300811767578], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Kings", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 137, 326, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 52, 179, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole3": "target_func", "hole0": "Blessing of Kings", "_type": "Template8", "hole2": "PALADIN", "hole1": 4}, {"hole2": [{"n": 4, "_type": "Num"}], "_type": "Template3", "hole1": "increase_health", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "BlessingOfKings"}], "_type": "Module"}, "score": -6.166227789277279, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(4)\n"}, {"score_history": [-0.00081634521484375, -0.000152587890625, -2.86102294921875e-05, -0.000209808349609375, -5.91278076171875e-05, -4.458328112377785e-05, -0.00037931581027805805, -1.1801710570580326e-05, -0.00015245705435518175, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -6.403083801269531, -6.675667827948928e-05, -7.987022399902344e-06, -1.33514404296875e-05, -0.024076461791992188, -0.000232696533203125, -4.172316494077677e-06, -0.0002740621566772461, -0.001104838098399341, -0.0001049041748046875, -0.0007749795913696289, -1.9073486328125e-06, -3.874216054100543e-05, 0.0, -0.004412531852722168, -2.2649765014648438e-06, -0.006392478942871094, -0.0008220672607421875, -0.0002689361572265625, -5.7220458984375e-06, -0.0003028884530067444, -1.0967253729177173e-05, -0.0030099153518676758, -3.826618194580078e-05, -0.000698089599609375, -0.000286102294921875, -0.0002384185791015625, -0.0019299982814118266, -3.4570634852570947e-06, -0.001735687255859375, -7.62939453125e-06, -0.00019276142120361328, -1.1920928244535389e-07, -0.00055694580078125, -1.71661376953125e-05, -4.38690185546875e-05, 0.0, -0.00025665760040283203, -7.152555099310121e-07, -0.0001173018099507317, -4.291525328881107e-06, -0.06483648717403412, -3.814697265625e-06, -3.0517578125e-05, -0.000377655029296875, -1.9073486328125e-06, -0.00013207999290898442, -0.00010895729064941406, -0.00029754638671875, 0.0, -3.0517578125e-05, 0.0, -0.0008401870727539062, -2.0265579223632812e-06, -0.00022935867309570312, 0.0, -0.003574848175048828, -1.9073486328125e-06, -0.000102996826171875, -0.0002651214599609375, 0.0, -0.0002736726019065827, -4.780292510986328e-05], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Kings", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 123, 214, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 52, 179, "4", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 52, 179, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole2": "PALADIN", "_type": "Template2", "hole1": 4, "hole0": "Blessing of Kings"}, {"hole4": "change_attack", "hole6": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole3": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole0": {"_type": "Template79", "hole0": "super"}, "_type": "Template7", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole7": "increase_health", "hole8": [{"n": 4, "_type": "Num"}], "hole5": [{"n": 4, "_type": "Num"}], "hole1": "use"}], "_type": "ClassDef", "name": "BlessingOfKings"}], "_type": "Module"}, "score": -6.5242129865280205, "inferred_code": "class BlessingOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n"}, {"score_history": [-0.00081634521484375, -0.000152587890625, -2.86102294921875e-05, -0.000209808349609375, -5.91278076171875e-05, -4.458328112377785e-05, -0.00037931581027805805, -1.1801710570580326e-05, -0.00015245705435518175, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -0.0016894015716388822, -2.7179718017578125e-05, -8.404254913330078e-05, -6.29425048828125e-05, -0.005322456359863281, -7.62939453125e-05, -4.172316494077677e-06, -0.000274658203125, -0.001350001199170947, -8.58306884765625e-05, -0.0006036758422851562, 0.0, -0.00010644747817423195, 0.0, -6.505916118621826, 0.0, -0.08767223358154297, -0.0015659332275390625, -0.0002651214599609375, 0.0, -0.00010645040310919285, -2.8491018383647315e-05, -0.0027505159378051758, -5.352497100830078e-05, -0.000713348388671875, -0.0005283355712890625, -0.0002498626708984375, -0.0022749898489564657, -2.861018856492592e-06, -0.0023956298828125, -9.5367431640625e-06, -0.00018513202667236328, -1.1920928244535389e-07, -0.000438690185546875, -1.1444091796875e-05, -4.38690185546875e-05, 0.0, -0.00030612945556640625, -8.344646857949556e-07, -0.00010991083399858326, -3.814689989667386e-06, -0.09323739260435104, -1.9073486328125e-06, -4.1961669921875e-05, -0.0004482269287109375, -1.9073486328125e-06, -0.00016211892943829298, -9.179115295410156e-05, -0.0002593994140625, 0.0, -2.288818359375e-05, 0.0, -0.0012598037719726562, -2.0265579223632812e-06, -0.00019121170043945312, 0.0, -0.003609299659729004, -1.9073486328125e-06, -0.000118255615234375, -0.00030517578125, 0.0, -0.00022421279572881758, -4.601478576660156e-05], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Kings", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "SHAMAN", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 52, 179, "4", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 52, 179, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "SHAMAN", "_type": "Template2", "hole1": 4, "hole0": "Blessing of Kings"}, {"hole4": "change_attack", "hole6": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole3": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole0": {"_type": "Template79", "hole0": "super"}, "_type": "Template7", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole7": "increase_health", "hole8": [{"n": 4, "_type": "Num"}], "hole5": [{"n": 4, "_type": "Num"}], "hole1": "use"}], "_type": "ClassDef", "name": "BlessingOfKings"}], "_type": "Module"}, "score": -6.717261173800232, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n"}, {"score_history": [-0.00081634521484375, -0.000152587890625, -2.86102294921875e-05, -0.000209808349609375, -5.91278076171875e-05, -4.458328112377785e-05, -0.00037931581027805805, -1.1801710570580326e-05, -0.00015245705435518175, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -0.0016894015716388822, -2.7179718017578125e-05, -8.404254913330078e-05, -6.29425048828125e-05, -0.005322456359863281, -7.62939453125e-05, -4.172316494077677e-06, -0.000274658203125, -6.630151748657227, -0.0012111663818359375, -0.0007143020629882812, 0.0, -5.2331357437651604e-05, 0.0, -0.003130316734313965, -2.0265579223632812e-06, -0.0060939788818359375, -0.0005311965942382812, -0.000339508056640625, -5.7220458984375e-06, -0.00022434405400417745, -8.225440979003906e-06, -0.003368377685546875, -3.445148468017578e-05, -0.000751495361328125, -0.000202178955078125, -0.0001926422119140625, -0.0021938083227723837, -3.576272320060525e-06, -0.001689910888671875, -7.62939453125e-06, -0.00018131732940673828, -1.1920928244535389e-07, -0.0005340576171875, -2.09808349609375e-05, -4.38690185546875e-05, 0.0, -0.0002815723419189453, -8.344646857949556e-07, -0.00011754022852983326, -4.291525328881107e-06, -0.058274608105421066, -5.7220458984375e-06, -2.6702880859375e-05, -0.0003871917724609375, -1.9073486328125e-06, -0.00012683507520705462, -0.00011277198791503906, -0.0002956390380859375, 0.0, -3.24249267578125e-05, 0.0, -0.0008087158203125, -2.0265579223632812e-06, -0.00021982192993164062, 0.0, -0.0039010047912597656, -1.9073486328125e-06, -9.918212890625e-05, -0.0002613067626953125, 0.0, -0.00024888303596526384, -4.780292510986328e-05], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Kings", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Blessing", " ", "<UNK>", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 52, 179, "4", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 52, 179, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PALADIN", "_type": "Template2", "hole1": 4, "hole0": "Blessing <UNK> Kings"}, {"hole4": "change_attack", "hole6": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole3": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole0": {"_type": "Template79", "hole0": "super"}, "_type": "Template7", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole7": "increase_health", "hole8": [{"n": 4, "_type": "Num"}], "hole5": [{"n": 4, "_type": "Num"}], "hole1": "use"}], "_type": "ClassDef", "name": "BlessingOfKings"}], "_type": "Module"}, "score": -6.726404794127227, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing <UNK> Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n"}, {"score_history": [-0.00081634521484375, -0.000152587890625, -2.86102294921875e-05, -0.000209808349609375, -5.91278076171875e-05, -4.458328112377785e-05, -0.00037931581027805805, -1.1801710570580326e-05, -0.00015245705435518175, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -0.0016894015716388822, -2.7179718017578125e-05, -8.404254913330078e-05, -6.29425048828125e-05, -0.005322456359863281, -7.62939453125e-05, -4.172316494077677e-06, -0.000274658203125, -0.001350001199170947, -8.58306884765625e-05, -0.0006036758422851562, 0.0, -0.00010644747817423195, 0.0, -0.004135847091674805, -2.1457672119140625e-06, -0.00551605224609375, -0.0005941390991210938, -0.000244140625, -3.814697265625e-06, -0.00022744358284398913, -6.198883056640625e-06, -0.002834320068359375, -4.017353057861328e-05, -0.000766754150390625, -0.0002727508544921875, -0.0002422332763671875, -0.002029061084613204, -3.4570634852570947e-06, -0.001617431640625, -7.62939453125e-06, -0.00018894672393798828, -2.3841855067985307e-07, -0.0005474090576171875, -1.71661376953125e-05, -4.38690185546875e-05, 0.0, -0.0002548694610595703, -8.344646857949556e-07, -0.00011551367060746998, -4.291525328881107e-06, -6.904936790466309, -0.0007495880126953125, -0.0073394775390625, -0.0003108978271484375, 0.0, -0.0004952144809067249, -2.491474151611328e-05, -0.0001811981201171875, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.0018520355224609375, -3.814697265625e-06, -0.00022923946380615234, 0.0, -0.0036017894744873047, -1.9073486328125e-06, -8.96453857421875e-05, -0.0002689361572265625, 0.0, -0.0002591326483525336, -5.173683166503906e-05], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Kings", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "Spell", "<EOS>", 346, 52, 179, "4", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 52, 179, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PALADIN", "_type": "Template2", "hole1": 4, "hole0": "Blessing of Kings"}, {"hole4": "Spell", "hole6": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole3": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole0": {"_type": "Template79", "hole0": "super"}, "_type": "Template7", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole7": "increase_health", "hole8": [{"n": 4, "_type": "Num"}], "hole5": [{"n": 4, "_type": "Num"}], "hole1": "use"}], "_type": "ClassDef", "name": "BlessingOfKings"}], "_type": "Module"}, "score": -6.951750157407872, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.Spell(4)\n        self.target.increase_health(4)\n"}, {"score_history": [-0.00081634521484375, -0.000152587890625, -2.86102294921875e-05, -0.000209808349609375, -5.91278076171875e-05, -4.458328112377785e-05, -0.00037931581027805805, -1.1801710570580326e-05, -0.00015245705435518175, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -0.0016894015716388822, -2.7179718017578125e-05, -8.404254913330078e-05, -6.29425048828125e-05, -0.005322456359863281, -7.62939453125e-05, -4.172316494077677e-06, -0.000274658203125, -0.001350001199170947, -8.58306884765625e-05, -0.0006036758422851562, 0.0, -0.00010644747817423195, 0.0, -0.004135847091674805, -2.1457672119140625e-06, -0.00551605224609375, -0.0005941390991210938, -0.000244140625, -3.814697265625e-06, -0.00022744358284398913, -6.198883056640625e-06, -6.459502220153809, -1.33514404296875e-05, -0.5080528259277344, -0.004254341125488281, -0.0001373291015625, -0.0028761625289916992, -3.576278118089249e-07, -0.0025310516357421875, -2.6702880859375e-05, -0.0017586946487426758, -1.1920928244535389e-07, -0.00275421142578125, -1.1444091796875e-05, -5.340576171875e-05, 0.0, -9.202957153320312e-05, -8.344646857949556e-07, -7.963177631609142e-05, -2.3841830625315197e-06, -0.06060885637998581, -3.814697265625e-06, -2.288818359375e-05, -0.000408172607421875, -1.9073486328125e-06, -0.0001363711489830166, -0.00010514259338378906, -0.0003070831298828125, 0.0, -3.24249267578125e-05, 0.0, -0.000820159912109375, -2.0265579223632812e-06, -0.00021791458129882812, 0.0, -0.0034875869750976562, -1.9073486328125e-06, -9.72747802734375e-05, -0.0002651214599609375, 0.0, -0.00026044363039545715, -4.589557647705078e-05], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Kings", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "can_use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 52, 179, "4", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 52, 179, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PALADIN", "_type": "Template2", "hole1": 4, "hole0": "Blessing of Kings"}, {"hole4": "change_attack", "hole6": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole3": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole0": {"_type": "Template79", "hole0": "super"}, "_type": "Template7", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole7": "increase_health", "hole8": [{"n": 4, "_type": "Num"}], "hole5": [{"n": 4, "_type": "Num"}], "hole1": "can_use"}], "_type": "ClassDef", "name": "BlessingOfKings"}], "_type": "Module"}, "score": -7.071304646267031, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().can_use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n"}, {"score_history": [-0.00081634521484375, -0.000152587890625, -2.86102294921875e-05, -0.000209808349609375, -5.91278076171875e-05, -4.458328112377785e-05, -0.00037931581027805805, -1.1801710570580326e-05, -0.00015245705435518175, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -0.0016894015716388822, -2.7179718017578125e-05, -8.404254913330078e-05, -6.29425048828125e-05, -0.005322456359863281, -7.62939453125e-05, -4.172316494077677e-06, -0.000274658203125, -0.001350001199170947, -8.58306884765625e-05, -0.0006036758422851562, 0.0, -0.00010644747817423195, 0.0, -0.004135847091674805, -2.1457672119140625e-06, -0.00551605224609375, -0.0005941390991210938, -0.000244140625, -3.814697265625e-06, -0.00022744358284398913, -6.198883056640625e-06, -0.002834320068359375, -4.017353057861328e-05, -0.000766754150390625, -0.0002727508544921875, -0.0002422332763671875, -0.002029061084613204, -3.4570634852570947e-06, -0.001617431640625, -7.62939453125e-06, -0.00018894672393798828, -2.3841855067985307e-07, -0.0005474090576171875, -1.71661376953125e-05, -4.38690185546875e-05, 0.0, -0.0002548694610595703, -8.344646857949556e-07, -0.00011551367060746998, -4.291525328881107e-06, -6.880934238433838, -0.13373947143554688, -0.0051422119140625, -0.2344036102294922, -1.9073486328125e-06, -0.03502510115504265, -2.3245811462402344e-05, -0.0004558563232421875, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -0.0029468536376953125, -7.748603820800781e-06, -0.0001361370086669922, -1.1920928244535389e-07, -0.003804922103881836, -1.9073486328125e-06, -0.0001049041748046875, -0.0002803802490234375, 0.0, -0.00023422269441653043, -5.543231964111328e-05], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Kings", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "Minion", "<EOS>", 346, 52, 179, "4", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 52, 179, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PALADIN", "_type": "Template2", "hole1": 4, "hole0": "Blessing of Kings"}, {"hole4": "Minion", "hole6": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole3": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole0": {"_type": "Template79", "hole0": "super"}, "_type": "Template7", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole7": "increase_health", "hole8": [{"n": 4, "_type": "Num"}], "hole5": [{"n": 4, "_type": "Num"}], "hole1": "use"}], "_type": "ClassDef", "name": "BlessingOfKings"}], "_type": "Module"}, "score": -7.328688348315687, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.Minion(4)\n        self.target.increase_health(4)\n"}, {"score_history": [-0.00081634521484375, -0.000152587890625, -2.86102294921875e-05, -0.000209808349609375, -5.91278076171875e-05, -4.458328112377785e-05, -0.00037931581027805805, -1.1801710570580326e-05, -0.00015245705435518175, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -0.0016894015716388822, -2.7179718017578125e-05, -8.404254913330078e-05, -6.29425048828125e-05, -0.005322456359863281, -7.62939453125e-05, -4.172316494077677e-06, -0.000274658203125, -0.001350001199170947, -8.58306884765625e-05, -0.0006036758422851562, 0.0, -0.00010644747817423195, 0.0, -0.004135847091674805, -2.1457672119140625e-06, -0.00551605224609375, -0.0005941390991210938, -0.000244140625, -3.814697265625e-06, -0.00022744358284398913, -6.198883056640625e-06, -0.002834320068359375, -4.017353057861328e-05, -0.000766754150390625, -0.0002727508544921875, -0.0002422332763671875, -0.002029061084613204, -3.4570634852570947e-06, -0.001617431640625, -7.62939453125e-06, -0.00018894672393798828, -2.3841855067985307e-07, -0.0005474090576171875, -1.71661376953125e-05, -4.38690185546875e-05, 0.0, -0.0002548694610595703, -8.344646857949556e-07, -0.00011551367060746998, -4.291525328881107e-06, -7.358859062194824, 0.0, -7.62939453125e-05, -0.001537322998046875, -3.814697265625e-06, -0.0002863122499547899, -0.00012791156768798828, -0.00020599365234375, 0.0, -3.24249267578125e-05, 0.0, -0.0007066726684570312, -3.933906555175781e-06, -0.00014722347259521484, 0.0, -0.0037593841552734375, -1.9073486328125e-06, -9.34600830078125e-05, -0.0002918243408203125, 0.0, -0.0002630655944813043, -5.364418029785156e-05], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Kings", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "COMMON", "<EOS>", 346, 52, 179, "4", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 52, 179, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PALADIN", "_type": "Template2", "hole1": 4, "hole0": "Blessing of Kings"}, {"hole4": "COMMON", "hole6": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole3": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole0": {"_type": "Template79", "hole0": "super"}, "_type": "Template7", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole7": "increase_health", "hole8": [{"n": 4, "_type": "Num"}], "hole5": [{"n": 4, "_type": "Num"}], "hole1": "use"}], "_type": "ClassDef", "name": "BlessingOfKings"}], "_type": "Module"}, "score": -7.397769758397402, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.COMMON(4)\n        self.target.increase_health(4)\n"}, {"score_history": [-0.00081634521484375, -0.000152587890625, -2.86102294921875e-05, -0.000209808349609375, -5.91278076171875e-05, -4.458328112377785e-05, -0.00037931581027805805, -1.1801710570580326e-05, -0.00015245705435518175, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -0.0016894015716388822, -2.7179718017578125e-05, -8.404254913330078e-05, -6.29425048828125e-05, -0.005322456359863281, -7.62939453125e-05, -4.172316494077677e-06, -0.000274658203125, -0.001350001199170947, -8.58306884765625e-05, -0.0006036758422851562, 0.0, -0.00010644747817423195, 0.0, -0.004135847091674805, -2.1457672119140625e-06, -0.00551605224609375, -0.0005941390991210938, -0.000244140625, -3.814697265625e-06, -0.00022744358284398913, -6.198883056640625e-06, -0.002834320068359375, -4.017353057861328e-05, -0.000766754150390625, -0.0002727508544921875, -0.0002422332763671875, -0.002029061084613204, -3.4570634852570947e-06, -0.001617431640625, -7.62939453125e-06, -0.00018894672393798828, -2.3841855067985307e-07, -0.0005474090576171875, -1.71661376953125e-05, -4.38690185546875e-05, 0.0, -0.0002548694610595703, -8.344646857949556e-07, -0.00011551367060746998, -4.291525328881107e-06, -7.3580241203308105, -0.00376129150390625, -0.02115631103515625, -0.0009918212890625, -5.7220458984375e-06, -8.809314749669284e-05, -6.127357482910156e-05, -9.1552734375e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -0.0027675628662109375, -5.841255187988281e-06, -0.00021028518676757812, 0.0, -0.0035294294357299805, -1.9073486328125e-06, -0.0001010894775390625, -0.0002880096435546875, 0.0, -0.00024649896658957005, -5.364418029785156e-05], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Kings", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 346, 52, 179, "4", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 52, 179, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PALADIN", "_type": "Template2", "hole1": 4, "hole0": "Blessing of Kings"}, {"hole4": "set_health_to", "hole6": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole3": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole0": {"_type": "Template79", "hole0": "super"}, "_type": "Template7", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole7": "increase_health", "hole8": [{"n": 4, "_type": "Num"}], "hole5": [{"n": 4, "_type": "Num"}], "hole1": "use"}], "_type": "ClassDef", "name": "BlessingOfKings"}], "_type": "Module"}, "score": -7.422740200061156, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(4)\n        self.target.increase_health(4)\n"}, {"score_history": [-0.00081634521484375, -0.000152587890625, -2.86102294921875e-05, -0.000209808349609375, -5.91278076171875e-05, -4.458328112377785e-05, -0.00037931581027805805, -1.1801710570580326e-05, -0.00015245705435518175, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -0.0016894015716388822, -2.7179718017578125e-05, -8.404254913330078e-05, -6.29425048828125e-05, -0.005322456359863281, -7.62939453125e-05, -4.172316494077677e-06, -0.000274658203125, -0.001350001199170947, -8.58306884765625e-05, -7.421298027038574, -0.0006275177001953125, -0.0001327991485595703, 0.0, -0.00011848647409351543, 0.0, -0.0036002397537231445, -2.1457672119140625e-06, -0.006011009216308594, -0.000576019287109375, -0.0002288818359375, -5.7220458984375e-06, -0.00024818291421979666, -8.225440979003906e-06, -0.002910614013671875, -3.063678741455078e-05, -0.0008106231689453125, -0.000286102294921875, -0.00018310546875, -0.0020171399228274822, -3.2186455882765586e-06, -0.0016632080078125, -5.7220458984375e-06, -0.00020420551300048828, -1.1920928244535389e-07, -0.0005512237548828125, -1.9073486328125e-05, -4.38690185546875e-05, 0.0, -0.0002357959747314453, -8.344646857949556e-07, -0.00011801705113612115, -4.410734163684538e-06, -0.05923210084438324, -3.814697265625e-06, -2.09808349609375e-05, -0.0004100799560546875, -1.9073486328125e-06, -0.00013827832299284637, -0.00010132789611816406, -0.0002899169921875, 0.0, -3.24249267578125e-05, 0.0, -0.0009164810180664062, -2.0265579223632812e-06, -0.00022172927856445312, 0.0, -0.0034542083740234375, -1.9073486328125e-06, -9.34600830078125e-05, -0.0002841949462890625, 0.0, -0.00025078951148316264, -4.780292510986328e-05], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Kings", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Blessing", " ", "of", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 52, 179, "4", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 52, 179, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PALADIN", "_type": "Template2", "hole1": 4, "hole0": "Blessing of of Kings"}, {"hole4": "change_attack", "hole6": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole3": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole0": {"_type": "Template79", "hole0": "super"}, "_type": "Template7", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole7": "increase_health", "hole8": [{"n": 4, "_type": "Num"}], "hole5": [{"n": 4, "_type": "Num"}], "hole1": "use"}], "_type": "ClassDef", "name": "BlessingOfKings"}], "_type": "Module"}, "score": -7.518341259608739, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n"}, {"score_history": [-0.00081634521484375, -0.000152587890625, -2.86102294921875e-05, -13.89091682434082], "choice_history": [96, 173, 358, 104], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score": -13.891914367675781, "inferred_code": "break\n"}, {"score_history": [-0.00081634521484375, -0.000152587890625, -20.150638580322266], "choice_history": [96, 173, 357], "model_output": {"body": [], "_type": "Module"}, "score": -20.151607513427734, "inferred_code": ""}]}
{"index": 11, "beams": [{"score_history": [-0.0005588531494140625, -0.00012969970703125, -2.47955322265625e-05, -9.72747802734375e-05, -4.9591064453125e-05, -5.054346183896996e-05, -0.0003923103795386851, -8.296652958961204e-05, -8.583032467868179e-06, -1.52587890625e-05, -1.9073486328125e-06, -3.814697265625e-05, -0.0005719813052564859, -9.655952453613281e-06, -6.341934204101562e-05, -7.2479248046875e-05, -0.0016069412231445312, -0.0011539459228515625, -1.6689286894688848e-06, -0.0001283884048461914, -0.00013816128193866462, -6.866455078125e-05, -0.00018799304962158203, -0.0001544952392578125, -6.556488642672775e-06, -1.52587890625e-05, -0.0002378225326538086, -1.9073486328125e-06, -0.00017404556274414062, 0.0, -0.0001049041748046875, -0.0001392364501953125, -9.5367431640625e-05, -0.0004546642303466797, -3.814697265625e-06, -0.0006542205810546875, -1.33514404296875e-05, -7.82012939453125e-05, 0.0, -5.340576171875e-05, -3.814697265625e-06, -9.918212890625e-05, -2.288818359375e-05, -3.24249267578125e-05, -1.33514404296875e-05, -0.0022031066473573446, 0.0, -0.0002803802490234375, -0.0002593994140625, -9.5367431640625e-06, 0.0, -0.0003147125244140625, 0.0, -5.352497100830078e-05, 0.0, -0.0004220008850097656, -2.384185791015625e-06, -0.007933378219604492, -1.1920928244535389e-07, -3.814697265625e-06, -0.008638381958007812, -0.00029754638671875, -0.06193002685904503, 0.0], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Might", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Blessing", " ", "of", " ", "Might", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 52, 179, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Blessing of Might", "_type": "Template14", "hole2": "PALADIN", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"n": 3, "_type": "Num"}], "_type": "Template3", "hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "BlessingOfMight"}], "_type": "Module"}, "score": -0.09016045630595926, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"score_history": [-0.0005588531494140625, -0.00012969970703125, -2.47955322265625e-05, -9.72747802734375e-05, -4.9591064453125e-05, -5.054346183896996e-05, -0.0003923103795386851, -8.296652958961204e-05, -8.583032467868179e-06, -1.52587890625e-05, -1.9073486328125e-06, -3.814697265625e-05, -0.0005719813052564859, -9.655952453613281e-06, -6.341934204101562e-05, -7.2479248046875e-05, -0.0016069412231445312, -0.0011539459228515625, -1.6689286894688848e-06, -0.0001283884048461914, -0.00013816128193866462, -6.866455078125e-05, -0.00018799304962158203, -0.0001544952392578125, -6.556488642672775e-06, -1.52587890625e-05, -0.0002378225326538086, -1.9073486328125e-06, -0.00017404556274414062, 0.0, -0.0001049041748046875, -0.0001392364501953125, -9.5367431640625e-05, -0.0004546642303466797, -3.814697265625e-06, -0.0006542205810546875, -1.33514404296875e-05, -7.82012939453125e-05, 0.0, -5.340576171875e-05, -3.814697265625e-06, -9.918212890625e-05, -2.288818359375e-05, -3.24249267578125e-05, -1.33514404296875e-05, -0.0022031066473573446, 0.0, -0.0002803802490234375, -0.0002593994140625, -9.5367431640625e-06, 0.0, -0.0003147125244140625, 0.0, -5.352497100830078e-05, 0.0, -0.0004220008850097656, -2.384185791015625e-06, -0.007933378219604492, -1.1920928244535389e-07, -3.814697265625e-06, -0.008638381958007812, -0.00029754638671875, -2.822214126586914, -3.814697265625e-06], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Might", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Blessing", " ", "of", " ", "Might", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 52, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Blessing of Might", "_type": "Template14", "hole2": "PALADIN", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"n": 1, "_type": "Num"}], "_type": "Template3", "hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "BlessingOfMight"}], "_type": "Module"}, "score": -2.850448370731094, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n"}, {"score_history": [-0.0005588531494140625, -0.00012969970703125, -2.47955322265625e-05, -9.72747802734375e-05, -4.9591064453125e-05, -5.054346183896996e-05, -0.0003923103795386851, -8.296652958961204e-05, -8.583032467868179e-06, -1.52587890625e-05, -1.9073486328125e-06, -3.814697265625e-05, -0.0005719813052564859, -9.655952453613281e-06, -6.341934204101562e-05, -7.2479248046875e-05, -0.0016069412231445312, -0.0011539459228515625, -1.6689286894688848e-06, -0.0001283884048461914, -0.00013816128193866462, -6.866455078125e-05, -0.00018799304962158203, -0.0001544952392578125, -6.556488642672775e-06, -1.52587890625e-05, -0.0002378225326538086, -1.9073486328125e-06, -0.00017404556274414062, 0.0, -0.0001049041748046875, -0.0001392364501953125, -9.5367431640625e-05, -0.0004546642303466797, -3.814697265625e-06, -0.0006542205810546875, -1.33514404296875e-05, -7.82012939453125e-05, 0.0, -5.340576171875e-05, -3.814697265625e-06, -9.918212890625e-05, -2.288818359375e-05, -3.24249267578125e-05, -1.33514404296875e-05, -0.0022031066473573446, 0.0, -0.0002803802490234375, -0.0002593994140625, -9.5367431640625e-06, 0.0, -0.0003147125244140625, 0.0, -5.352497100830078e-05, 0.0, -0.0004220008850097656, -2.384185791015625e-06, -5.961700916290283, -4.768370445162873e-07, -1.9073486328125e-06, -0.01220703125, -1.1444091796875e-05, -0.1588810384273529, 0.0], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Might", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Blessing", " ", "of", " ", "Might", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 52, 179, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Blessing of Might", "_type": "Template14", "hole2": "PALADIN", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"n": 3, "_type": "Num"}], "_type": "Template3", "hole1": "increase_health", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "BlessingOfMight"}], "_type": "Module"}, "score": -6.144160003221145, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(3)\n"}, {"score_history": [-0.0005588531494140625, -0.00012969970703125, -2.47955322265625e-05, -9.72747802734375e-05, -4.9591064453125e-05, -5.054346183896996e-05, -0.0003923103795386851, -8.296652958961204e-05, -8.583032467868179e-06, -1.52587890625e-05, -1.9073486328125e-06, -3.814697265625e-05, -0.0005719813052564859, -9.655952453613281e-06, -6.341934204101562e-05, -7.2479248046875e-05, -0.0016069412231445312, -0.0011539459228515625, -1.6689286894688848e-06, -0.0001283884048461914, -0.00013816128193866462, -6.866455078125e-05, -0.00018799304962158203, -0.0001544952392578125, -6.556488642672775e-06, -1.52587890625e-05, -0.0002378225326538086, -1.9073486328125e-06, -0.00017404556274414062, 0.0, -0.0001049041748046875, -0.0001392364501953125, -9.5367431640625e-05, -0.0004546642303466797, -3.814697265625e-06, -0.0006542205810546875, -1.33514404296875e-05, -7.82012939453125e-05, 0.0, -5.340576171875e-05, -3.814697265625e-06, -9.918212890625e-05, -2.288818359375e-05, -3.24249267578125e-05, -1.33514404296875e-05, -0.0022031066473573446, 0.0, -0.0002803802490234375, -0.0002593994140625, -9.5367431640625e-06, 0.0, -0.0003147125244140625, 0.0, -5.352497100830078e-05, 0.0, -0.0004220008850097656, -2.384185791015625e-06, -5.978291988372803, -2.0265579223632812e-06, 0.0, -0.06325244903564453, -0.004340171813964844, -0.08366214483976364, -0.007295465562492609], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Might", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Blessing", " ", "of", " ", "Might", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 346, 69, 290, "<UNK>", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Blessing of Might", "_type": "Template14", "hole2": "PALADIN", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"_type": "Template54", "hole0": "<UNK>"}], "_type": "Template3", "hole1": "add_buff", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "BlessingOfMight"}], "_type": "Module"}, "score": -6.148201435158626, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n"}, {"score_history": [-0.0005588531494140625, -0.00012969970703125, -2.47955322265625e-05, -9.72747802734375e-05, -4.9591064453125e-05, -5.054346183896996e-05, -0.0003923103795386851, -8.296652958961204e-05, -8.583032467868179e-06, -1.52587890625e-05, -1.9073486328125e-06, -3.814697265625e-05, -0.0005719813052564859, -9.655952453613281e-06, -6.341934204101562e-05, -7.2479248046875e-05, -0.0016069412231445312, -0.0011539459228515625, -1.6689286894688848e-06, -0.0001283884048461914, -0.00013816128193866462, -6.866455078125e-05, -0.00018799304962158203, -0.0001544952392578125, -6.556488642672775e-06, -1.52587890625e-05, -0.0002378225326538086, -1.9073486328125e-06, -0.00017404556274414062, 0.0, -0.0001049041748046875, -0.0001392364501953125, -9.5367431640625e-05, -0.0004546642303466797, -3.814697265625e-06, -0.0006542205810546875, -1.33514404296875e-05, -7.82012939453125e-05, 0.0, -5.340576171875e-05, -3.814697265625e-06, -9.918212890625e-05, -2.288818359375e-05, -3.24249267578125e-05, -1.33514404296875e-05, -0.0022031066473573446, 0.0, -0.0002803802490234375, -0.0002593994140625, -9.5367431640625e-06, 0.0, -0.0003147125244140625, 0.0, -5.352497100830078e-05, 0.0, -0.0004220008850097656, -2.384185791015625e-06, -6.704215049743652, -2.622604142743512e-06, -1.9073486328125e-06, -0.015477180480957031, -0.0003223419189453125, -0.06066818907856941, 0.0], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Might", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Blessing", " ", "of", " ", "Might", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_temp_attack", "<EOS>", 346, 52, 179, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Blessing of Might", "_type": "Template14", "hole2": "PALADIN", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"n": 3, "_type": "Num"}], "_type": "Template3", "hole1": "change_temp_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "BlessingOfMight"}], "_type": "Module"}, "score": -6.792044480150935, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_temp_attack(3)\n"}, {"score_history": [-0.0005588531494140625, -0.00012969970703125, -2.47955322265625e-05, -9.72747802734375e-05, -4.9591064453125e-05, -5.054346183896996e-05, -0.0003923103795386851, -8.296652958961204e-05, -8.583032467868179e-06, -1.52587890625e-05, -1.9073486328125e-06, -3.814697265625e-05, -0.0005719813052564859, -9.655952453613281e-06, -6.341934204101562e-05, -7.2479248046875e-05, -0.0016069412231445312, -0.0011539459228515625, -1.6689286894688848e-06, -0.0001283884048461914, -0.00013816128193866462, -6.866455078125e-05, -0.00018799304962158203, -0.0001544952392578125, -6.556488642672775e-06, -1.52587890625e-05, -0.0002378225326538086, -1.9073486328125e-06, -0.00017404556274414062, 0.0, -0.0001049041748046875, -0.0001392364501953125, -9.5367431640625e-05, -0.0004546642303466797, -3.814697265625e-06, -0.0006542205810546875, -1.33514404296875e-05, -7.82012939453125e-05, 0.0, -5.340576171875e-05, -3.814697265625e-06, -9.918212890625e-05, -2.288818359375e-05, -3.24249267578125e-05, -1.33514404296875e-05, -7.000373363494873, -3.814697265625e-06, -0.0012054443359375, -0.0010662078857421875, -5.7220458984375e-06, 0.0, -0.000629425048828125, 0.0, -4.208087921142578e-05, 0.0, -0.0002770423889160156, -4.768370445162873e-07, -0.01000058650970459, -1.1920928244535389e-07, -3.814697265625e-06, -0.009014129638671875, -0.0004367828369140625, -0.05106780305504799, 0.0], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Might", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Blessing", " ", "of", " ", "Might", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 52, 179, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Blessing of Might", "_type": "Template14", "hole2": "PALADIN", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"n": 3, "_type": "Num"}], "_type": "Template3", "hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "BlessingOfMight"}], "_type": "Module"}, "score": -7.081938956916808, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"score_history": [-0.0005588531494140625, -0.00012969970703125, -2.47955322265625e-05, -9.72747802734375e-05, -4.9591064453125e-05, -5.054346183896996e-05, -0.0003923103795386851, -8.296652958961204e-05, -8.583032467868179e-06, -1.52587890625e-05, -1.9073486328125e-06, -3.814697265625e-05, -0.0005719813052564859, -9.655952453613281e-06, -6.341934204101562e-05, -7.2479248046875e-05, -0.0016069412231445312, -7.159761428833008, -2.4080030925688334e-05, -0.00017344951629638672, -0.00010871878475882113, -5.7220458984375e-05, -0.0009464025497436523, -0.033504486083984375, -0.000163422548212111, -1.1682510375976562e-05, -0.001965165138244629, -0.00010514259338378906, -0.004166126251220703, -1.71661376953125e-05, -0.00115966796875, -0.0001125335693359375, -0.0073986053466796875, -0.011254037730395794, -2.622604142743512e-06, -0.0001239776611328125, 0.0, -0.018070220947265625, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -0.0004845857620239258, -1.1444091796875e-05, -0.0008525848388671875, 0.0, -0.003580331802368164, 0.0, -0.00030517578125, -0.0006427764892578125, -3.814697265625e-06, 0.0, -0.0003948211669921875, 0.0, -3.254413604736328e-05, 0.0, -6.508827209472656e-05, -4.768370445162873e-07, -0.014728069305419922, -1.1920928244535389e-07, -7.62939453125e-06, -0.007781982421875, -0.000522613525390625, -0.17789685726165771, 0.0], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Might", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 199, "Blessing", " ", "of", " ", "Might", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 347, 51, 175, "False", "<EOS>", 42, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 52, 179, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": [{"value": true, "_type": "NameConstant"}, {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}], "hole3": "FREE", "hole0": "Blessing of Might", "_type": "Template14", "hole2": "PALADIN", "hole1": 1}, {"hole2": [{"n": 3, "_type": "Num"}], "_type": "Template3", "hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "BlessingOfMight"}], "_type": "Module"}, "score": -7.4502286462135245, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, True, hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"score_history": [-0.0005588531494140625, -0.00012969970703125, -2.47955322265625e-05, -9.72747802734375e-05, -4.9591064453125e-05, -5.054346183896996e-05, -0.0003923103795386851, -8.296652958961204e-05, -8.583032467868179e-06, -1.52587890625e-05, -1.9073486328125e-06, -3.814697265625e-05, -0.0005719813052564859, -9.655952453613281e-06, -6.341934204101562e-05, -7.2479248046875e-05, -0.0016069412231445312, -0.0011539459228515625, -1.6689286894688848e-06, -0.0001283884048461914, -0.00013816128193866462, -6.866455078125e-05, -0.00018799304962158203, -0.0001544952392578125, -6.556488642672775e-06, -1.52587890625e-05, -0.0002378225326538086, -1.9073486328125e-06, -0.00017404556274414062, 0.0, -0.0001049041748046875, -0.0001392364501953125, -9.5367431640625e-05, -0.0004546642303466797, -3.814697265625e-06, -0.0006542205810546875, -1.33514404296875e-05, -7.82012939453125e-05, 0.0, -5.340576171875e-05, -3.814697265625e-06, -9.918212890625e-05, -2.288818359375e-05, -3.24249267578125e-05, -1.33514404296875e-05, -0.0022031066473573446, 0.0, -0.0002803802490234375, -0.0002593994140625, -9.5367431640625e-06, 0.0, -0.0003147125244140625, 0.0, -5.352497100830078e-05, 0.0, -0.0004220008850097656, -2.384185791015625e-06, -0.007933378219604492, -1.1920928244535389e-07, -3.814697265625e-06, -5.011439323425293, -5.91278076171875e-05, -0.5467395782470703, -2.09808349609375e-05, -0.6142586469650269, -0.006868381984531879, -7.986703712958843e-05, -7.62939453125e-06, -0.6870355606079102, -7.43865966796875e-05, -0.0002803802490234375, -5.7220458984375e-06, -0.36048051714897156, -0.003750920295715332, 0.0, -7.62939453125e-06, -0.03626251220703125, -0.0006885528564453125, -0.0019216537475585938, -0.04509735107421875, -1.52587890625e-05, -0.05358248949050903, -3.063678741455078e-05, -0.011135101318359375, -4.9591064453125e-05, -0.23582634329795837, -3.647804260253906e-05], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Might", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Blessing", " ", "of", " ", "Might", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 45, 150, 21, 174, "Buff", "Until", "<EOS>", 347, 45, 150, 21, 174, "Change", "Attack", "<EOS>", 346, 89, 331, 139, 23, 179, "1", "<EOS>", 52, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Blessing of Might", "_type": "Template14", "hole2": "PALADIN", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "ChangeAttack"}, "args": [{"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}]}, {"n": 1, "_type": "Num"}]}], "_type": "Template3", "hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "BlessingOfMight"}], "_type": "Module"}, "score": -7.635049121812692, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(BuffUntil(ChangeAttack(-1), 1))\n"}, {"score_history": [-0.0005588531494140625, -0.00012969970703125, -2.47955322265625e-05, -9.72747802734375e-05, -4.9591064453125e-05, -5.054346183896996e-05, -0.0003923103795386851, -8.296652958961204e-05, -8.583032467868179e-06, -1.52587890625e-05, -1.9073486328125e-06, -3.814697265625e-05, -0.0005719813052564859, -9.655952453613281e-06, -6.341934204101562e-05, -7.2479248046875e-05, -0.0016069412231445312, -0.0011539459228515625, -1.6689286894688848e-06, -0.0001283884048461914, -0.00013816128193866462, -6.866455078125e-05, -0.00018799304962158203, -0.0001544952392578125, -6.556488642672775e-06, -1.52587890625e-05, -0.0002378225326538086, -1.9073486328125e-06, -0.00017404556274414062, 0.0, -0.0001049041748046875, -0.0001392364501953125, -9.5367431640625e-05, -0.0004546642303466797, -3.814697265625e-06, -0.0006542205810546875, -1.33514404296875e-05, -7.82012939453125e-05, 0.0, -5.340576171875e-05, -3.814697265625e-06, -9.918212890625e-05, -2.288818359375e-05, -3.24249267578125e-05, -1.33514404296875e-05, -0.0022031066473573446, 0.0, -0.0002803802490234375, -0.0002593994140625, -9.5367431640625e-06, 0.0, -0.0003147125244140625, 0.0, -5.352497100830078e-05, 0.0, -0.0004220008850097656, -2.384185791015625e-06, -0.007933378219604492, -1.1920928244535389e-07, -3.814697265625e-06, -5.011439323425293, -5.91278076171875e-05, -0.866236686706543, -1.33514404296875e-05, -0.0002593994140625, -1.9073486328125e-06, -0.9708303213119507, -3.576278118089249e-07, -0.00775301456451416, -2.503394853192731e-06, -0.0008373260498046875, -0.7519989013671875, -9.5367431640625e-06, -0.25325438380241394, -0.00025924708461388946], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Might", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Blessing", " ", "of", " ", "Might", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 45, 150, 13, 143, 21, 174, "player", "<EOS>", "effective_spell_damage", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Blessing of Might", "_type": "Template14", "hole2": "PALADIN", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "effective_spell_damage"}, "args": [{"_type": "Name", "id": "<UNK>"}]}], "_type": "Template3", "hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "BlessingOfMight"}], "_type": "Module"}, "score": -7.88224988919108, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(player.effective_spell_damage(<UNK>))\n"}, {"score_history": [-0.0005588531494140625, -0.00012969970703125, -2.47955322265625e-05, -9.72747802734375e-05, -4.9591064453125e-05, -5.054346183896996e-05, -0.0003923103795386851, -8.296652958961204e-05, -8.583032467868179e-06, -1.52587890625e-05, -1.9073486328125e-06, -3.814697265625e-05, -0.0005719813052564859, -9.655952453613281e-06, -6.341934204101562e-05, -7.2479248046875e-05, -0.0016069412231445312, -0.0011539459228515625, -1.6689286894688848e-06, -0.0001283884048461914, -0.00013816128193866462, -6.866455078125e-05, -0.00018799304962158203, -0.0001544952392578125, -6.556488642672775e-06, -1.52587890625e-05, -0.0002378225326538086, -1.9073486328125e-06, -0.00017404556274414062, 0.0, -0.0001049041748046875, -0.0001392364501953125, -9.5367431640625e-05, -0.0004546642303466797, -3.814697265625e-06, -0.0006542205810546875, -1.33514404296875e-05, -7.82012939453125e-05, 0.0, -5.340576171875e-05, -3.814697265625e-06, -9.918212890625e-05, -2.288818359375e-05, -3.24249267578125e-05, -1.33514404296875e-05, -0.0022031066473573446, 0.0, -0.0002803802490234375, -0.0002593994140625, -9.5367431640625e-06, 0.0, -0.0003147125244140625, 0.0, -5.352497100830078e-05, 0.0, -0.0004220008850097656, -2.384185791015625e-06, -5.961700916290283, -4.768370445162873e-07, -1.9073486328125e-06, -0.01220703125, -1.1444091796875e-05, -1.927441120147705, -3.814697265625e-06], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Might", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Blessing", " ", "of", " ", "Might", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 52, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Blessing of Might", "_type": "Template14", "hole2": "PALADIN", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"n": 1, "_type": "Num"}], "_type": "Template3", "hole1": "increase_health", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "BlessingOfMight"}], "_type": "Module"}, "score": -7.912723899638763, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(1)\n"}, {"score_history": [-0.0005588531494140625, -0.00012969970703125, -2.47955322265625e-05, -9.72747802734375e-05, -4.9591064453125e-05, -5.054346183896996e-05, -0.0003923103795386851, -8.296652958961204e-05, -8.583032467868179e-06, -1.52587890625e-05, -1.9073486328125e-06, -3.814697265625e-05, -7.872431755065918, -2.241134461655747e-05, -1.4662741705251392e-05, -2.09808349609375e-05, -0.0053539276123046875, -0.0004901885986328125, -9.536738616588991e-07, -0.0001227855682373047, -9.655882604420185e-05, -6.4849853515625e-05, -0.0002143383026123047, -0.00016021728515625, -7.033321708149742e-06, -1.52587890625e-05, -0.00026488304138183594, 0.0, -0.00011861324310302734, 0.0, -0.0001430511474609375, -0.0001392364501953125, -8.96453857421875e-05, -0.0005556344985961914, -3.814697265625e-06, -0.0006198883056640625, -1.33514404296875e-05, -7.62939453125e-05, 0.0, -6.29425048828125e-05, -5.7220458984375e-06, -0.000102996826171875, -2.47955322265625e-05, -3.24249267578125e-05, -1.33514404296875e-05, -0.0021666286047548056, 0.0, -0.0004749298095703125, -0.0002841949462890625, -7.62939453125e-06, 0.0, -0.000415802001953125, 0.0, -5.543231964111328e-05, 0.0, -0.0004487037658691406, -2.384185791015625e-06, -0.008327603340148926, -1.1920928244535389e-07, -3.814697265625e-06, -0.008535385131835938, -0.0002727508544921875, -0.060669559985399246, 0.0], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Might", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Blessing", " ", "of", " ", "Might", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 52, 179, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole3": "FREE", "hole0": "Blessing of Might", "_type": "Template14", "hole2": "PALADIN", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"n": 3, "_type": "Num"}], "_type": "Template3", "hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "BlessingOfMight"}], "_type": "Module"}, "score": -7.964397436243864, "inferred_code": "class BlessingOfMight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"score_history": [-0.0005588531494140625, -0.00012969970703125, -2.47955322265625e-05, -9.72747802734375e-05, -4.9591064453125e-05, -5.054346183896996e-05, -0.0003923103795386851, -8.296652958961204e-05, -8.583032467868179e-06, -1.52587890625e-05, -1.9073486328125e-06, -3.814697265625e-05, -0.0005719813052564859, -9.655952453613281e-06, -6.341934204101562e-05, -7.2479248046875e-05, -0.0016069412231445312, -0.0011539459228515625, -1.6689286894688848e-06, -0.0001283884048461914, -0.00013816128193866462, -6.866455078125e-05, -0.00018799304962158203, -0.0001544952392578125, -6.556488642672775e-06, -1.52587890625e-05, -0.0002378225326538086, -1.9073486328125e-06, -0.00017404556274414062, 0.0, -0.0001049041748046875, -0.0001392364501953125, -9.5367431640625e-05, -0.0004546642303466797, -3.814697265625e-06, -0.0006542205810546875, -1.33514404296875e-05, -7.82012939453125e-05, 0.0, -5.340576171875e-05, -3.814697265625e-06, -9.918212890625e-05, -2.288818359375e-05, -3.24249267578125e-05, -1.33514404296875e-05, -0.0022031066473573446, 0.0, -0.0002803802490234375, -0.0002593994140625, -9.5367431640625e-06, 0.0, -0.0003147125244140625, 0.0, -5.352497100830078e-05, 0.0, -0.0004220008850097656, -2.384185791015625e-06, -0.007933378219604492, -1.1920928244535389e-07, -3.814697265625e-06, -5.011439323425293, -5.91278076171875e-05, -0.5467395782470703, -2.09808349609375e-05, -0.6142586469650269, -0.006868381984531879, -7.986703712958843e-05, -7.62939453125e-06, -0.7361116409301758, -6.4849853515625e-05, -0.07051706314086914, -0.09225929528474808, -0.030115600675344467, -0.001148223876953125, -3.814697265625e-06, -0.002677903277799487, -1.0170906782150269, -3.4809112548828125e-05], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Might", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Blessing", " ", "of", " ", "Might", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 45, 150, 21, 174, "Buff", "Until", "<EOS>", 347, 88, 325, "Attack", "<UNK>", "<EOS>", 88, 325, "Turn", "Started", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Blessing of Might", "_type": "Template14", "hole2": "PALADIN", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}, "args": [{"_type": "Template79", "hole0": "Attack<UNK>"}, {"_type": "Template79", "hole0": "TurnStarted"}]}], "_type": "Template3", "hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "BlessingOfMight"}], "_type": "Module"}, "score": -8.148791915862596, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(BuffUntil(Attack<UNK>(), TurnStarted()))\n"}, {"score_history": [-0.0005588531494140625, -0.00012969970703125, -2.47955322265625e-05, -9.72747802734375e-05, -4.9591064453125e-05, -5.054346183896996e-05, -0.0003923103795386851, -8.296652958961204e-05, -8.583032467868179e-06, -1.52587890625e-05, -1.9073486328125e-06, -3.814697265625e-05, -0.0005719813052564859, -9.655952453613281e-06, -6.341934204101562e-05, -7.2479248046875e-05, -0.0016069412231445312, -0.0011539459228515625, -1.6689286894688848e-06, -0.0001283884048461914, -0.00013816128193866462, -6.866455078125e-05, -0.00018799304962158203, -0.0001544952392578125, -6.556488642672775e-06, -1.52587890625e-05, -0.0002378225326538086, -1.9073486328125e-06, -0.00017404556274414062, 0.0, -0.0001049041748046875, -0.0001392364501953125, -9.5367431640625e-05, -0.0004546642303466797, -3.814697265625e-06, -0.0006542205810546875, -1.33514404296875e-05, -7.82012939453125e-05, 0.0, -5.340576171875e-05, -3.814697265625e-06, -9.918212890625e-05, -2.288818359375e-05, -3.24249267578125e-05, -1.33514404296875e-05, -0.0022031066473573446, 0.0, -0.0002803802490234375, -0.0002593994140625, -9.5367431640625e-06, 0.0, -0.0003147125244140625, 0.0, -5.352497100830078e-05, 0.0, -0.0004220008850097656, -2.384185791015625e-06, -0.007933378219604492, -1.1920928244535389e-07, -3.814697265625e-06, -5.011439323425293, -5.91278076171875e-05, -0.866236686706543, -1.33514404296875e-05, -0.0002593994140625, -1.9073486328125e-06, -0.9708303213119507, -3.576278118089249e-07, -0.00775301456451416, -2.503394853192731e-06, -0.0008373260498046875, -0.6857118606567383, -1.9073486328125e-06, -0.000148773193359375, 0.0, -1.9073486328125e-05, 0.0, -0.5467662811279297, 0.0, -0.1457613706588745, -1.1920928244535389e-07, -0.6906477212905884, -3.933906555175781e-06], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Might", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Blessing", " ", "of", " ", "Might", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 45, 150, 13, 143, 21, 174, "player", "<EOS>", "effective_spell_damage", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "health", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Blessing of Might", "_type": "Template14", "hole2": "PALADIN", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "effective_spell_damage"}, "args": [{"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "health"}]}], "_type": "Template3", "hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "BlessingOfMight"}], "_type": "Module"}, "score": -8.94578886107199, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(player.effective_spell_damage(player.hero\n            .health))\n"}, {"score_history": [-0.0005588531494140625, -0.00012969970703125, -2.47955322265625e-05, -14.721627235412598], "choice_history": [96, 173, 358, 104], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score": -14.72234058380127, "inferred_code": "break\n"}, {"score_history": [-0.0005588531494140625, -0.00012969970703125, -20.251325607299805], "choice_history": [96, 173, 357], "model_output": {"body": [], "_type": "Module"}, "score": -20.25201416015625, "inferred_code": ""}]}
{"index": 12, "beams": [{"score_history": [-4.57763671875e-05, -0.0001277923583984375, -0.00014054289204068482, -1.4066622497921344e-05, -2.3841855067985307e-07, -1.4156103134155273e-06, -2.1457672119140625e-05, -8.58306884765625e-06, -3.62396240234375e-05, -0.0003986358642578125, -0.00035858154296875, -5.960462772236497e-07, -4.398822784423828e-05, -7.867813110351562e-06, -2.86102294921875e-05, -3.56431191903539e-05, 0.0, -0.0002307891845703125, -3.0517578125e-05, -0.0008531808853149414, -2.9802317840221804e-06, -0.0010929107666015625, -0.000152587890625, -2.288818359375e-05, 0.0, -2.300739288330078e-05, -3.814697265625e-06, -0.0043697357177734375, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.0006657838821411133, 0.0, -7.62939453125e-06, -0.000560760498046875, -4.57763671875e-05, -1.2278481335670222e-05, 0.0, -0.0017857120838016272, 0.0], "choice_history": [97, 283, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "BloodfenRaptor", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Bloodfen Raptor", "_type": "Template26", "hole2": "FREE", "hole1": 2}], "hole1": "MinionCard"}, "score": -0.01113992545586484, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score_history": [-4.57763671875e-05, -0.0001277923583984375, -0.00014054289204068482, -1.4066622497921344e-05, -2.3841855067985307e-07, -1.4156103134155273e-06, -2.1457672119140625e-05, -8.58306884765625e-06, -3.62396240234375e-05, -0.0003986358642578125, -0.00035858154296875, -5.960462772236497e-07, -4.398822784423828e-05, -7.867813110351562e-06, -2.86102294921875e-05, -3.56431191903539e-05, 0.0, -0.0002307891845703125, -3.0517578125e-05, -0.0008531808853149414, -2.9802317840221804e-06, -0.0010929107666015625, -0.000152587890625, -2.288818359375e-05, 0.0, -2.300739288330078e-05, -3.814697265625e-06, -0.0043697357177734375, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.0006657838821411133, 0.0, -7.62939453125e-06, -0.000560760498046875, -4.57763671875e-05, -1.2278481335670222e-05, 0.0, -6.331881999969482, -3.814697265625e-06], "choice_history": [97, 283, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 4, "hole0": 3}], "hole3": "create_minion", "hole0": "BloodfenRaptor", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Bloodfen Raptor", "_type": "Template26", "hole2": "FREE", "hole1": 2}], "hole1": "MinionCard"}, "score": -6.341240028038811, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 4)\n"}, {"score_history": [-4.57763671875e-05, -0.0001277923583984375, -0.00014054289204068482, -1.4066622497921344e-05, -2.3841855067985307e-07, -1.4156103134155273e-06, -2.1457672119140625e-05, -8.58306884765625e-06, -3.62396240234375e-05, -0.0003986358642578125, -0.00035858154296875, -5.960462772236497e-07, -4.398822784423828e-05, -7.867813110351562e-06, -2.86102294921875e-05, -3.56431191903539e-05, 0.0, -0.0002307891845703125, -3.0517578125e-05, -0.0008531808853149414, -2.9802317840221804e-06, -0.0010929107666015625, -0.000152587890625, -2.288818359375e-05, 0.0, -2.300739288330078e-05, -3.814697265625e-06, -6.548182487487793, -0.0020294189453125, -5.7220458984375e-06, 0.0, -0.000118255615234375, 0.0, -3.24249267578125e-05, -0.000415802001953125, -5.14984130859375e-05, -8.821448318485636e-06, 0.0, -0.0008428134606219828, 0.0], "choice_history": [97, 283, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "BloodfenRaptor", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}, "hole3": "minion_type", "hole0": "Bloodfen Raptor", "_type": "Template26", "hole2": "FREE", "hole1": 2}], "hole1": "MinionCard"}, "score": -6.555369956632859, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score_history": [-4.57763671875e-05, -0.0001277923583984375, -0.00014054289204068482, -1.4066622497921344e-05, -2.3841855067985307e-07, -1.4156103134155273e-06, -2.1457672119140625e-05, -8.58306884765625e-06, -3.62396240234375e-05, -0.0003986358642578125, -0.00035858154296875, -5.960462772236497e-07, -4.398822784423828e-05, -7.867813110351562e-06, -2.86102294921875e-05, -3.56431191903539e-05, 0.0, -0.0002307891845703125, -3.0517578125e-05, -0.0008531808853149414, -2.9802317840221804e-06, -0.0010929107666015625, -0.000152587890625, -2.288818359375e-05, 0.0, -2.300739288330078e-05, -3.814697265625e-06, -6.806818008422852, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0007210969924926758, 0.0, -1.33514404296875e-05, -0.0007190704345703125, -3.62396240234375e-05, -9.536697689327411e-06, 0.0, -0.0008044596179388463, 0.0], "choice_history": [97, 283, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "BloodfenRaptor", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "PIRATE"}, "hole3": "minion_type", "hole0": "Bloodfen Raptor", "_type": "Template26", "hole2": "FREE", "hole1": 2}], "hole1": "MinionCard"}, "score": -6.81281210491241, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score_history": [-4.57763671875e-05, -0.0001277923583984375, -0.00014054289204068482, -1.4066622497921344e-05, -2.3841855067985307e-07, -1.4156103134155273e-06, -2.1457672119140625e-05, -8.58306884765625e-06, -3.62396240234375e-05, -0.0003986358642578125, -0.00035858154296875, -5.960462772236497e-07, -4.398822784423828e-05, -7.867813110351562e-06, -2.86102294921875e-05, -3.56431191903539e-05, 0.0, -0.0002307891845703125, -3.0517578125e-05, -0.0008531808853149414, -2.9802317840221804e-06, -0.0010929107666015625, -0.000152587890625, -2.288818359375e-05, 0.0, -2.300739288330078e-05, -3.814697265625e-06, -7.282866477966309, -2.288818359375e-05, -1.33514404296875e-05, 0.0, -0.00011444091796875, 0.0, -3.814697265625e-05, -0.0005054473876953125, -4.1961669921875e-05, -2.372236667724792e-05, 0.0, -0.0008523421129211783, 0.0], "choice_history": [97, 283, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "BloodfenRaptor", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "<UNK>"}, "hole3": "minion_type", "hole0": "Bloodfen Raptor", "_type": "Template26", "hole2": "FREE", "hole1": 2}], "hole1": "MinionCard"}, "score": -7.288161491306056, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score_history": [-4.57763671875e-05, -0.0001277923583984375, -0.00014054289204068482, -1.4066622497921344e-05, -2.3841855067985307e-07, -1.4156103134155273e-06, -2.1457672119140625e-05, -8.58306884765625e-06, -3.62396240234375e-05, -0.0003986358642578125, -0.00035858154296875, -5.960462772236497e-07, -4.398822784423828e-05, -7.867813110351562e-06, -2.86102294921875e-05, -3.56431191903539e-05, 0.0, -0.0002307891845703125, -3.0517578125e-05, -0.0008531808853149414, -2.9802317840221804e-06, -6.951377868652344, -0.0026416778564453125, -0.0006389617919921875, -0.02802276611328125, -0.033835411071777344, -0.0005035400390625, -0.00034928321838378906, -0.000110626220703125, -0.0024738311767578125, -0.02648639678955078, -0.0003147125244140625, -7.82012939453125e-05, -1.9073486328125e-06, -0.05048380419611931, -9.1552734375e-05, -0.0006313323974609375, -0.009027481079101562, -9.1552734375e-05, -0.056012582033872604, 0.0, -0.013411521911621094, -0.0001354217529296875, -0.08733570575714111, -1.3470649719238281e-05, 0.0, -0.015272140502929688, -0.00035858154296875, -0.001132965087890625, -0.0001125335693359375, -1.52587890625e-05, -0.00574085908010602, -1.9073486328125e-06, -3.3855438232421875e-05, 0.0, -0.002042412757873535, 0.0, -5.7220458984375e-06, -0.0016689300537109375, -0.0002288818359375, -9.894339200400282e-06, 0.0, -0.00047541275853291154, 0.0], "choice_history": [97, 283, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 19, 169, 346, 69, 291, "Mana", "Change", "<EOS>", 347, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "attack", "<EOS>", 88, 325, "Weapon", "Selector", "<EOS>", 89, 331, 139, 23, 179, "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "BloodfenRaptor", "_type": "Template5", "hole2": [{"hole4": {"elts": [{"_type": "Template54", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "Attribute"}, "args": [{"_type": "Str", "s": "attack"}, {"_type": "Template79", "hole0": "WeaponSelector"}]}, {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "hole0": "ManaChange"}], "_type": "List"}, "hole3": "minion_type", "hole0": "Bloodfen Raptor", "_type": "Template26", "hole2": "FREE", "hole1": 2}], "hole1": "MinionCard"}, "score": -7.293556467851232, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=[Buff(ManaChange(Attribute(\n            'attack', WeaponSelector()), -1))])\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score_history": [-4.57763671875e-05, -0.0001277923583984375, -0.00014054289204068482, -1.4066622497921344e-05, -2.3841855067985307e-07, -1.4156103134155273e-06, -2.1457672119140625e-05, -8.58306884765625e-06, -3.62396240234375e-05, -0.0003986358642578125, -0.00035858154296875, -5.960462772236497e-07, -4.398822784423828e-05, -7.867813110351562e-06, -2.86102294921875e-05, -3.56431191903539e-05, 0.0, -0.0002307891845703125, -3.0517578125e-05, -0.0008531808853149414, -2.9802317840221804e-06, -0.0010929107666015625, -0.000152587890625, -2.288818359375e-05, 0.0, -2.300739288330078e-05, -3.814697265625e-06, -0.0043697357177734375, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -7.492855072021484, 0.0, -1.9073486328125e-05, -0.000308990478515625, -4.38690185546875e-05, -4.5060096454108134e-05, 0.0, -0.0031016634311527014, 0.0], "choice_history": [97, 283, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "p", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "BloodfenRaptor", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Bloodfen Raptor", "_type": "Template26", "hole2": "FREE", "hole1": 2}], "hole1": "MinionCard"}, "score": -7.50443571328131, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(3, 2)\n"}, {"score_history": [-4.57763671875e-05, -0.0001277923583984375, -0.00014054289204068482, -1.4066622497921344e-05, -2.3841855067985307e-07, -1.4156103134155273e-06, -2.1457672119140625e-05, -8.58306884765625e-06, -3.62396240234375e-05, -0.0003986358642578125, -0.00035858154296875, -5.960462772236497e-07, -4.398822784423828e-05, -7.867813110351562e-06, -2.86102294921875e-05, -3.56431191903539e-05, 0.0, -0.0002307891845703125, -3.0517578125e-05, -0.0008531808853149414, -2.9802317840221804e-06, -0.0010929107666015625, -0.000152587890625, -2.288818359375e-05, 0.0, -2.300739288330078e-05, -3.814697265625e-06, -7.6398820877075195, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -0.00032806396484375, 0.0, -1.52587890625e-05, -0.0007781982421875, -3.814697265625e-05, -9.059865078597795e-06, 0.0, -0.0008105343440547585, 0.0], "choice_history": [97, 283, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "BloodfenRaptor", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type", "hole0": "Bloodfen Raptor", "_type": "Template26", "hole2": "FREE", "hole1": 2}], "hole1": "MinionCard"}, "score": -7.64556695035688, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score_history": [-4.57763671875e-05, -0.0001277923583984375, -0.00014054289204068482, -1.4066622497921344e-05, -2.3841855067985307e-07, -1.4156103134155273e-06, -2.1457672119140625e-05, -8.58306884765625e-06, -3.62396240234375e-05, -0.0003986358642578125, -0.00035858154296875, -5.960462772236497e-07, -4.398822784423828e-05, -7.867813110351562e-06, -2.86102294921875e-05, -3.56431191903539e-05, 0.0, -0.0002307891845703125, -3.0517578125e-05, -0.0008531808853149414, -2.9802317840221804e-06, -0.0010929107666015625, -0.000152587890625, -2.288818359375e-05, 0.0, -2.300739288330078e-05, -3.814697265625e-06, -0.0043697357177734375, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.0006657838821411133, 0.0, -7.62939453125e-06, -7.695950508117676, -9.72747802734375e-05, -1.0013525752583519e-05, -4.768370445162873e-07, -5.3404277423396707e-05, -4.410734163684538e-06, -0.2018975019454956, -1.1920928244535389e-07, -0.008892059326171875, -3.814697265625e-06, -0.00230252742767334, -1.1444091796875e-05], "choice_history": [97, 283, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "3", "<EOS>", "2", "<EOS>", "stealth", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "stealth", "_type": "Template50", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "BloodfenRaptor", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Bloodfen Raptor", "_type": "Template26", "hole2": "FREE", "hole1": 2}], "hole1": "MinionCard"}, "score": -7.917958952995512, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2, stealth=True)\n"}, {"score_history": [-4.57763671875e-05, -0.0001277923583984375, -0.00014054289204068482, -1.4066622497921344e-05, -2.3841855067985307e-07, -1.4156103134155273e-06, -2.1457672119140625e-05, -8.58306884765625e-06, -3.62396240234375e-05, -0.0003986358642578125, -0.00035858154296875, -5.960462772236497e-07, -4.398822784423828e-05, -7.867813110351562e-06, -2.86102294921875e-05, -3.56431191903539e-05, 0.0, -0.0002307891845703125, -3.0517578125e-05, -8.49205493927002, -1.33514404296875e-05, -0.03931999206542969, -0.0015316009521484375, -0.0006923675537109375, -1.9073486328125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -0.0041046142578125, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.0005551576614379883, 0.0, -7.62939453125e-06, -0.000507354736328125, -5.14984130859375e-05, -1.3470558769768104e-05, 0.0, -0.0021071897353976965, 0.0], "choice_history": [97, 283, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "Aura", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "BloodfenRaptor", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "Aura", "hole0": "Bloodfen Raptor", "_type": "Template26", "hole2": "FREE", "hole1": 2}], "hole1": "MinionCard"}, "score": -8.542524959763597, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, Aura=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score_history": [-4.57763671875e-05, -0.0001277923583984375, -0.00014054289204068482, -1.4066622497921344e-05, -2.3841855067985307e-07, -1.4156103134155273e-06, -2.1457672119140625e-05, -8.58306884765625e-06, -3.62396240234375e-05, -0.0003986358642578125, -0.00035858154296875, -5.960462772236497e-07, -4.398822784423828e-05, -7.867813110351562e-06, -2.86102294921875e-05, -3.56431191903539e-05, 0.0, -8.820985794067383, -3.814697265625e-06, -0.0036660432815551758, -2.384185791015625e-06, -0.001209259033203125, -0.000164031982421875, -4.00543212890625e-05, -1.9073486328125e-06, -2.300739288330078e-05, -1.9073486328125e-06, -0.0037250518798828125, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.0006200075149536133, 0.0, -7.62939453125e-06, -0.00061798095703125, -4.1961669921875e-05, -1.2397689715726301e-05, 0.0, -0.001778215286321938, 0.0], "choice_history": [97, 283, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "BloodfenRaptor", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Bloodfen Raptor", "_type": "Template26", "hole2": "COMMON", "hole1": 2}], "hole1": "MinionCard"}, "score": -8.8341810202717, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score_history": [-4.57763671875e-05, -0.0001277923583984375, -0.00014054289204068482, -1.4066622497921344e-05, -2.3841855067985307e-07, -1.4156103134155273e-06, -2.1457672119140625e-05, -8.58306884765625e-06, -3.62396240234375e-05, -0.0003986358642578125, -0.00035858154296875, -5.960462772236497e-07, -4.398822784423828e-05, -7.867813110351562e-06, -2.86102294921875e-05, -3.56431191903539e-05, 0.0, -0.0002307891845703125, -3.0517578125e-05, -0.0008531808853149414, -2.9802317840221804e-06, -0.0010929107666015625, -0.000152587890625, -2.288818359375e-05, 0.0, -2.300739288330078e-05, -3.814697265625e-06, -8.937379837036133, -2.288818359375e-05, -0.0002880096435546875, 0.0, -0.000156402587890625, 0.0, -1.1444091796875e-05, -0.0005931854248046875, -4.38690185546875e-05, -1.2397689715726301e-05, 0.0, -0.001092196675017476, 0.0], "choice_history": [97, 283, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "Aura", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "BloodfenRaptor", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "Aura"}, "hole3": "minion_type", "hole0": "Bloodfen Raptor", "_type": "Template26", "hole2": "FREE", "hole1": 2}], "hole1": "MinionCard"}, "score": -8.943282942638945, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.Aura)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score_history": [-4.57763671875e-05, -0.0001277923583984375, -0.00014054289204068482, -1.4066622497921344e-05, -2.3841855067985307e-07, -1.4156103134155273e-06, -2.1457672119140625e-05, -8.58306884765625e-06, -3.62396240234375e-05, -0.0003986358642578125, -0.00035858154296875, -5.960462772236497e-07, -4.398822784423828e-05, -7.867813110351562e-06, -2.86102294921875e-05, -3.56431191903539e-05, 0.0, -0.0002307891845703125, -3.0517578125e-05, -8.600125312805176, -1.9073486328125e-06, -0.3940858840942383, -0.000553131103515625, -0.001300811767578125, -5.7220458984375e-06, -2.6941299438476562e-05, -1.9073486328125e-06, -0.0040454864501953125, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -0.0005627870559692383, 0.0, -7.62939453125e-06, -0.00048065185546875, -4.76837158203125e-05, -1.3708974620385561e-05, 0.0, -0.002209849888458848, 0.0], "choice_history": [97, 283, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "COMMON", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "BloodfenRaptor", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "COMMON", "hole0": "Bloodfen Raptor", "_type": "Template26", "hole2": "FREE", "hole1": 2}], "hole1": "MinionCard"}, "score": -9.00502173822295, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, COMMON=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score_history": [-4.57763671875e-05, -0.0001277923583984375, -0.00014054289204068482, -1.4066622497921344e-05, -2.3841855067985307e-07, -1.4156103134155273e-06, -2.1457672119140625e-05, -8.58306884765625e-06, -3.62396240234375e-05, -8.068037033081055, -0.024282455444335938, -2.86102294921875e-05, -0.0010013580322265625, -2.1457672119140625e-06, -5.7220458984375e-06, -4.76837158203125e-05, -1.9073486328125e-06, -0.0015468597412109375, -0.0009174346923828125, -0.0002040863037109375, -2.50339189733495e-06, -3.24249267578125e-05, -7.390948667307384e-06, -1.1563301086425781e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.00014912216283846647, 0.0, -6.866455078125e-05, -2.09808349609375e-05, -9.5367431640625e-06, -7.82012939453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -2.288818359375e-05, 0.0, -2.872943878173828e-05, -7.62939453125e-06, -0.16942596435546875, -7.62939453125e-06, -0.0008373260498046875, -1.1444091796875e-05, -1.52587890625e-05, -2.288818359375e-05, -0.0009670257568359375, -0.000514984130859375, -0.000812530517578125, -0.8057146072387695, 0.0, -1.1444091796875e-05, 0.0, -0.0016410350799560547, 0.0, -7.62939453125e-06, -0.00106048583984375, -2.09808349609375e-05, -4.410734163684538e-06, 0.0, -0.0024981284514069557, 0.0], "choice_history": [97, 283, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Bloodfen", " ", "Raptor", "<EOS>", 52, 179, "2", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "BloodfenRaptor", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"n": 2, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -9.080574462527665, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score_history": [-4.57763671875e-05, -0.0001277923583984375, -0.00014054289204068482, -1.4066622497921344e-05, -2.3841855067985307e-07, -1.4156103134155273e-06, -2.1457672119140625e-05, -8.58306884765625e-06, -3.62396240234375e-05, -0.0003986358642578125, -0.00035858154296875, -5.960462772236497e-07, -4.398822784423828e-05, -7.867813110351562e-06, -2.86102294921875e-05, -3.56431191903539e-05, 0.0, -0.0002307891845703125, -3.0517578125e-05, -9.042889595031738, -0.0020401477813720703, -0.03820323944091797, -0.0001811981201171875, -0.0014238357543945312, -3.814697265625e-06, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00426483154296875, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.0006314516067504883, 0.0, -7.62939453125e-06, -0.00048828125, -4.9591064453125e-05, -1.2516897186287679e-05, 0.0, -0.0021795136854052544, 0.0], "choice_history": [97, 283, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "Give", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 3}], "hole3": "create_minion", "hole0": "BloodfenRaptor", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "Give", "hole0": "Bloodfen Raptor", "_type": "Template26", "hole2": "FREE", "hole1": 2}], "hole1": "MinionCard"}, "score": -9.09393762529433, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, Give=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}]}
{"index": 13, "beams": [{"score_history": [-1.1444091796875e-05, -0.0006351470947265625, -2.0265558760002023e-06, -2.6106754376087338e-05, -9.536736342852237e-07, -4.696843461715616e-05, -1.6689286894688848e-06, -4.38690185546875e-05, -0.000530242919921875, -0.000156402587890625, -5.483612312673358e-06, -2.2649765014648438e-06, -8.821448318485636e-06, 0.0, -0.002079010009765625, 0.0, -0.0001735687255859375, 0.0, -3.933906555175781e-06, 0.0, -0.000244140625, -4.9591064453125e-05, -4.1723224057932384e-06, -0.002146005630493164, -0.00353240966796875, -7.62939453125e-06, -4.9591064453125e-05, -0.000164031982421875, -9.918212890625e-05, -0.0001220703125, -1.33514404296875e-05, -0.00010895729064941406, -9.34600830078125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -4.768371127283899e-06, -4.768370445162873e-07, -6.425376341212541e-05, -4.768370445162873e-07, -0.0011043548583984375, -0.000164031982421875, -0.000217437744140625, -4.57763671875e-05, -0.004951357841491699, -1.9073486328125e-06, -0.0047245025634765625, -1.9073486328125e-06, -0.0029468536376953125, -1.9073486328125e-06, -0.0002765655517578125, 0.0, -0.001434326171875, -3.814697265625e-06, -5.7220458984375e-06, -0.008164405822753906, -0.0032596588134765625, -0.0003452301025390625, -4.9591064453125e-05, -0.0038034915924072266, 0.0, -0.0077239274978637695, -6.67572021484375e-05, -0.0293711069971323, 0.0], "choice_history": [97, 285, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 133, 304, 21, 174, "minion", "<EOS>", "change_temp_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": 3, "_type": "Template65", "hole1": "change_temp_attack", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "Bloodlust", "_type": "Template5", "hole2": [{"hole2": "SHAMAN", "_type": "Template31", "hole1": 5, "hole0": "Bloodlust"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -0.07911058680496552, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n"}, {"score_history": [-1.1444091796875e-05, -0.0006351470947265625, -2.0265558760002023e-06, -2.6106754376087338e-05, -9.536736342852237e-07, -4.696843461715616e-05, -1.6689286894688848e-06, -4.38690185546875e-05, -0.000530242919921875, -0.000156402587890625, -5.483612312673358e-06, -2.2649765014648438e-06, -8.821448318485636e-06, 0.0, -0.002079010009765625, 0.0, -0.0001735687255859375, 0.0, -3.933906555175781e-06, 0.0, -0.000244140625, -4.9591064453125e-05, -4.1723224057932384e-06, -0.002146005630493164, -0.00353240966796875, -7.62939453125e-06, -4.9591064453125e-05, -0.000164031982421875, -9.918212890625e-05, -0.0001220703125, -1.33514404296875e-05, -0.00010895729064941406, -9.34600830078125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -4.768371127283899e-06, -4.768370445162873e-07, -6.425376341212541e-05, -4.768370445162873e-07, -0.0011043548583984375, -0.000164031982421875, -0.000217437744140625, -4.57763671875e-05, -0.004951357841491699, -1.9073486328125e-06, -0.0047245025634765625, -1.9073486328125e-06, -0.0029468536376953125, -1.9073486328125e-06, -0.0002765655517578125, 0.0, -0.001434326171875, -3.814697265625e-06, -5.7220458984375e-06, -0.008164405822753906, -0.0032596588134765625, -0.0003452301025390625, -4.9591064453125e-05, -0.0038034915924072266, 0.0, -0.0077239274978637695, -6.67572021484375e-05, -4.659365653991699, 0.0], "choice_history": [97, 285, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 133, 304, 21, 174, "minion", "<EOS>", "change_temp_attack", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": 2, "_type": "Template65", "hole1": "change_temp_attack", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "Bloodlust", "_type": "Template5", "hole2": [{"hole2": "SHAMAN", "_type": "Template31", "hole1": 5, "hole0": "Bloodlust"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.709105133799532, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(2)\n"}, {"score_history": [-1.1444091796875e-05, -0.0006351470947265625, -2.0265558760002023e-06, -2.6106754376087338e-05, -9.536736342852237e-07, -4.696843461715616e-05, -1.6689286894688848e-06, -4.38690185546875e-05, -0.000530242919921875, -0.000156402587890625, -5.483612312673358e-06, -2.2649765014648438e-06, -8.821448318485636e-06, 0.0, -0.002079010009765625, 0.0, -0.0001735687255859375, 0.0, -3.933906555175781e-06, 0.0, -0.000244140625, -4.9591064453125e-05, -4.1723224057932384e-06, -0.002146005630493164, -0.00353240966796875, -7.62939453125e-06, -4.9591064453125e-05, -0.000164031982421875, -9.918212890625e-05, -0.0001220703125, -1.33514404296875e-05, -0.00010895729064941406, -9.34600830078125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -4.768371127283899e-06, -4.768370445162873e-07, -6.425376341212541e-05, -4.768370445162873e-07, -0.0011043548583984375, -0.000164031982421875, -0.000217437744140625, -4.57763671875e-05, -0.004951357841491699, -1.9073486328125e-06, -0.0047245025634765625, -1.9073486328125e-06, -0.0029468536376953125, -1.9073486328125e-06, -0.0002765655517578125, 0.0, -0.001434326171875, -3.814697265625e-06, -5.7220458984375e-06, -0.008164405822753906, -0.0032596588134765625, -0.0003452301025390625, -4.9591064453125e-05, -0.0038034915924072266, 0.0, -0.0077239274978637695, -6.67572021484375e-05, -5.191458702087402, 0.0], "choice_history": [97, 285, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 133, 304, 21, 174, "minion", "<EOS>", "change_temp_attack", "<EOS>", "BEAST", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": 0, "_type": "Template65", "hole1": "change_temp_attack", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "Bloodlust", "_type": "Template5", "hole2": [{"hole2": "SHAMAN", "_type": "Template31", "hole1": 5, "hole0": "Bloodlust"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.241198181895236, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(0)\n"}, {"score_history": [-1.1444091796875e-05, -0.0006351470947265625, -2.0265558760002023e-06, -2.6106754376087338e-05, -9.536736342852237e-07, -4.696843461715616e-05, -1.6689286894688848e-06, -4.38690185546875e-05, -0.000530242919921875, -0.000156402587890625, -5.483612312673358e-06, -2.2649765014648438e-06, -8.821448318485636e-06, 0.0, -0.002079010009765625, 0.0, -0.0001735687255859375, 0.0, -3.933906555175781e-06, 0.0, -0.000244140625, -4.9591064453125e-05, -4.1723224057932384e-06, -0.002146005630493164, -0.00353240966796875, -7.62939453125e-06, -4.9591064453125e-05, -0.000164031982421875, -9.918212890625e-05, -0.0001220703125, -1.33514404296875e-05, -0.00010895729064941406, -9.34600830078125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -4.768371127283899e-06, -4.768370445162873e-07, -6.425376341212541e-05, -4.768370445162873e-07, -0.0011043548583984375, -0.000164031982421875, -0.000217437744140625, -4.57763671875e-05, -5.399909973144531, 0.0, -0.039371490478515625, -5.7220458984375e-06, -0.0013103485107421875, 0.0, -0.008352279663085938, 0.0, -0.016435742378234863, -7.62939453125e-06, -1.33514404296875e-05, -0.009053230285644531, -0.00420379638671875, -0.0004730224609375, -4.1961669921875e-05, -0.0051729679107666016, 0.0, -0.007343411445617676, -4.57763671875e-05, -0.02725771628320217, 0.0], "choice_history": [97, 285, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "player", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 133, 304, 21, 174, "minion", "<EOS>", "change_temp_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "player"}, "body": [{"hole2": 3, "_type": "Template65", "hole1": "change_temp_attack", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "Bloodlust", "_type": "Template5", "hole2": [{"hole2": "SHAMAN", "_type": "Template31", "hole1": 5, "hole0": "Bloodlust"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.530975973022798, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for player in player.minions:\n            minion.change_temp_attack(3)\n"}, {"score_history": [-1.1444091796875e-05, -0.0006351470947265625, -2.0265558760002023e-06, -2.6106754376087338e-05, -9.536736342852237e-07, -4.696843461715616e-05, -1.6689286894688848e-06, -4.38690185546875e-05, -0.000530242919921875, -0.000156402587890625, -5.483612312673358e-06, -2.2649765014648438e-06, -8.821448318485636e-06, 0.0, -0.002079010009765625, 0.0, -0.0001735687255859375, 0.0, -3.933906555175781e-06, 0.0, -0.000244140625, -4.9591064453125e-05, -4.1723224057932384e-06, -0.002146005630493164, -0.00353240966796875, -7.62939453125e-06, -4.9591064453125e-05, -0.000164031982421875, -9.918212890625e-05, -0.0001220703125, -1.33514404296875e-05, -0.00010895729064941406, -9.34600830078125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -4.768371127283899e-06, -4.768370445162873e-07, -6.425376341212541e-05, -4.768370445162873e-07, -0.0011043548583984375, -0.000164031982421875, -0.000217437744140625, -4.57763671875e-05, -0.004951357841491699, -1.9073486328125e-06, -0.0047245025634765625, -1.9073486328125e-06, -0.0029468536376953125, -1.9073486328125e-06, -0.0002765655517578125, 0.0, -0.001434326171875, -3.814697265625e-06, -5.7220458984375e-06, -0.008164405822753906, -0.0032596588134765625, -0.0003452301025390625, -4.9591064453125e-05, -0.0038034915924072266, 0.0, -0.0077239274978637695, -6.67572021484375e-05, -5.593059062957764, -0.0005728006362915039], "choice_history": [97, 285, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 133, 304, 21, 174, "minion", "<EOS>", "change_temp_attack", "<EOS>", "change_temp_attack", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": 0, "_type": "Template65", "hole1": "change_temp_attack", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "Bloodlust", "_type": "Template5", "hole2": [{"hole2": "SHAMAN", "_type": "Template31", "hole1": 5, "hole0": "Bloodlust"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.643371343401888, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(0)\n"}, {"score_history": [-1.1444091796875e-05, -0.0006351470947265625, -2.0265558760002023e-06, -2.6106754376087338e-05, -9.536736342852237e-07, -4.696843461715616e-05, -1.6689286894688848e-06, -4.38690185546875e-05, -0.000530242919921875, -0.000156402587890625, -5.483612312673358e-06, -2.2649765014648438e-06, -8.821448318485636e-06, 0.0, -0.002079010009765625, 0.0, -0.0001735687255859375, 0.0, -3.933906555175781e-06, 0.0, -0.000244140625, -4.9591064453125e-05, -4.1723224057932384e-06, -0.002146005630493164, -0.00353240966796875, -7.62939453125e-06, -4.9591064453125e-05, -0.000164031982421875, -9.918212890625e-05, -0.0001220703125, -1.33514404296875e-05, -0.00010895729064941406, -9.34600830078125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -4.768371127283899e-06, -4.768370445162873e-07, -6.425376341212541e-05, -4.768370445162873e-07, -0.0011043548583984375, -0.000164031982421875, -0.000217437744140625, -4.57763671875e-05, -0.004951357841491699, -1.9073486328125e-06, -0.0047245025634765625, -1.9073486328125e-06, -0.0029468536376953125, -1.9073486328125e-06, -0.0002765655517578125, 0.0, -0.001434326171875, -3.814697265625e-06, -5.7220458984375e-06, -0.008164405822753906, -0.0032596588134765625, -0.0003452301025390625, -4.9591064453125e-05, -5.586324691772461, 0.0, -0.041394948959350586, -4.208087921142578e-05, -0.027109023183584213, 0.0], "choice_history": [97, 285, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 133, 304, 21, 174, "player", "<EOS>", "change_temp_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": 3, "_type": "Template65", "hole1": "change_temp_attack", "hole0": {"_type": "Name", "id": "player"}}], "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "Bloodlust", "_type": "Template5", "hole2": [{"hole2": "SHAMAN", "_type": "Template31", "hole1": 5, "hole0": "Bloodlust"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.693016048310021, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            player.change_temp_attack(3)\n"}, {"score_history": [-1.1444091796875e-05, -0.0006351470947265625, -2.0265558760002023e-06, -2.6106754376087338e-05, -9.536736342852237e-07, -4.696843461715616e-05, -1.6689286894688848e-06, -4.38690185546875e-05, -0.000530242919921875, -0.000156402587890625, -5.483612312673358e-06, -2.2649765014648438e-06, -8.821448318485636e-06, 0.0, -0.002079010009765625, 0.0, -0.0001735687255859375, 0.0, -3.933906555175781e-06, 0.0, -0.000244140625, -4.9591064453125e-05, -4.1723224057932384e-06, -0.002146005630493164, -0.00353240966796875, -7.62939453125e-06, -4.9591064453125e-05, -0.000164031982421875, -9.918212890625e-05, -0.0001220703125, -1.33514404296875e-05, -0.00010895729064941406, -9.34600830078125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -4.768371127283899e-06, -4.768370445162873e-07, -6.425376341212541e-05, -4.768370445162873e-07, -0.0011043548583984375, -0.000164031982421875, -0.000217437744140625, -4.57763671875e-05, -0.004951357841491699, -1.9073486328125e-06, -0.0047245025634765625, -1.9073486328125e-06, -0.0029468536376953125, -1.9073486328125e-06, -0.0002765655517578125, 0.0, -0.001434326171875, -3.814697265625e-06, -5.7220458984375e-06, -0.008164405822753906, -0.0032596588134765625, -0.0003452301025390625, -4.9591064453125e-05, -0.0038034915924072266, 0.0, -5.726992607116699, -1.9073486328125e-06, -0.07065374404191971, 0.0], "choice_history": [97, 285, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 133, 304, 21, 174, "minion", "<EOS>", "change_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": 3, "_type": "Template65", "hole1": "change_attack", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "Bloodlust", "_type": "Template5", "hole2": [{"hole2": "SHAMAN", "_type": "Template31", "hole1": 5, "hole0": "Bloodlust"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.839597053615073, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_attack(3)\n"}, {"score_history": [-1.1444091796875e-05, -0.0006351470947265625, -2.0265558760002023e-06, -2.6106754376087338e-05, -9.536736342852237e-07, -4.696843461715616e-05, -1.6689286894688848e-06, -4.38690185546875e-05, -0.000530242919921875, -0.000156402587890625, -5.483612312673358e-06, -2.2649765014648438e-06, -8.821448318485636e-06, 0.0, -0.002079010009765625, 0.0, -0.0001735687255859375, 0.0, -3.933906555175781e-06, 0.0, -0.000244140625, -4.9591064453125e-05, -4.1723224057932384e-06, -0.002146005630493164, -0.00353240966796875, -7.62939453125e-06, -4.9591064453125e-05, -0.000164031982421875, -9.918212890625e-05, -0.0001220703125, -1.33514404296875e-05, -0.00010895729064941406, -9.34600830078125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -4.768371127283899e-06, -4.768370445162873e-07, -6.425376341212541e-05, -4.768370445162873e-07, -0.0011043548583984375, -0.000164031982421875, -0.000217437744140625, -4.57763671875e-05, -0.004951357841491699, -1.9073486328125e-06, -0.0047245025634765625, -1.9073486328125e-06, -0.0029468536376953125, -1.9073486328125e-06, -0.0002765655517578125, 0.0, -0.001434326171875, -3.814697265625e-06, -5.7220458984375e-06, -0.008164405822753906, -0.0032596588134765625, -0.0003452301025390625, -4.9591064453125e-05, -0.0038034915924072266, 0.0, -0.0077239274978637695, -6.67572021484375e-05, -6.01406717300415, -1.9073486328125e-06], "choice_history": [97, 285, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 133, 304, 21, 174, "minion", "<EOS>", "change_temp_attack", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": 4, "_type": "Template65", "hole1": "change_temp_attack", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "Bloodlust", "_type": "Template5", "hole2": [{"hole2": "SHAMAN", "_type": "Template31", "hole1": 5, "hole0": "Bloodlust"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.063808560160616, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(4)\n"}, {"score_history": [-1.1444091796875e-05, -0.0006351470947265625, -2.0265558760002023e-06, -2.6106754376087338e-05, -9.536736342852237e-07, -4.696843461715616e-05, -1.6689286894688848e-06, -4.38690185546875e-05, -0.000530242919921875, -0.000156402587890625, -5.483612312673358e-06, -2.2649765014648438e-06, -8.821448318485636e-06, 0.0, -0.002079010009765625, 0.0, -0.0001735687255859375, 0.0, -3.933906555175781e-06, 0.0, -0.000244140625, -4.9591064453125e-05, -4.1723224057932384e-06, -0.002146005630493164, -0.00353240966796875, -7.62939453125e-06, -4.9591064453125e-05, -0.000164031982421875, -9.918212890625e-05, -0.0001220703125, -1.33514404296875e-05, -0.00010895729064941406, -9.34600830078125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -4.768371127283899e-06, -4.768370445162873e-07, -6.425376341212541e-05, -4.768370445162873e-07, -0.0011043548583984375, -0.000164031982421875, -0.000217437744140625, -4.57763671875e-05, -0.004951357841491699, -1.9073486328125e-06, -0.0047245025634765625, -1.9073486328125e-06, -5.881181716918945, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.185461163520813, -3.814697265625e-06, -0.016650795936584473, 0.0, -0.01813574507832527, -0.00039386749267578125, -2.6702880859375e-05, -0.04024982452392578, -0.009674072265625, -0.000522613525390625, -5.340576171875e-05, -0.001971006393432617, 0.0, -0.01183616928756237, -8.213520050048828e-05, -0.030077602714300156, 0.0], "choice_history": [97, 285, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 133, 304, 21, 174, "minion", "<EOS>", "change_temp_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": 3, "_type": "Template65", "hole1": "change_temp_attack", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "Bloodlust", "_type": "Template5", "hole2": [{"hole2": "SHAMAN", "_type": "Template31", "hole1": 5, "hole0": "Bloodlust"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.218010289383749, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.change_temp_attack(3)\n"}, {"score_history": [-1.1444091796875e-05, -0.0006351470947265625, -2.0265558760002023e-06, -2.6106754376087338e-05, -9.536736342852237e-07, -4.696843461715616e-05, -1.6689286894688848e-06, -4.38690185546875e-05, -0.000530242919921875, -0.000156402587890625, -5.483612312673358e-06, -2.2649765014648438e-06, -8.821448318485636e-06, 0.0, -0.002079010009765625, 0.0, -0.0001735687255859375, 0.0, -3.933906555175781e-06, 0.0, -0.000244140625, -4.9591064453125e-05, -4.1723224057932384e-06, -0.002146005630493164, -0.00353240966796875, -7.62939453125e-06, -4.9591064453125e-05, -0.000164031982421875, -9.918212890625e-05, -0.0001220703125, -1.33514404296875e-05, -0.00010895729064941406, -9.34600830078125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -4.768371127283899e-06, -4.768370445162873e-07, -6.425376341212541e-05, -4.768370445162873e-07, -0.0011043548583984375, -0.000164031982421875, -0.000217437744140625, -4.57763671875e-05, -0.004951357841491699, -1.9073486328125e-06, -0.0047245025634765625, -1.9073486328125e-06, -0.0029468536376953125, -1.9073486328125e-06, -0.0002765655517578125, 0.0, -0.001434326171875, -3.814697265625e-06, -5.7220458984375e-06, -0.008164405822753906, -0.0032596588134765625, -0.0003452301025390625, -4.9591064453125e-05, -0.0038034915924072266, 0.0, -0.0077239274978637695, -6.67572021484375e-05, -6.317601203918457, -2.384185791015625e-06], "choice_history": [97, 285, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 133, 304, 21, 174, "minion", "<EOS>", "change_temp_attack", "<EOS>", "<UNK>", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": 0, "_type": "Template65", "hole1": "change_temp_attack", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "Bloodlust", "_type": "Template5", "hole2": [{"hole2": "SHAMAN", "_type": "Template31", "hole1": 5, "hole0": "Bloodlust"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.367343067912081, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(0)\n"}, {"score_history": [-1.1444091796875e-05, -0.0006351470947265625, -2.0265558760002023e-06, -2.6106754376087338e-05, -9.536736342852237e-07, -4.696843461715616e-05, -1.6689286894688848e-06, -4.38690185546875e-05, -0.000530242919921875, -0.000156402587890625, -5.483612312673358e-06, -2.2649765014648438e-06, -8.821448318485636e-06, 0.0, -0.002079010009765625, 0.0, -0.0001735687255859375, 0.0, -3.933906555175781e-06, 0.0, -0.000244140625, -4.9591064453125e-05, -4.1723224057932384e-06, -0.002146005630493164, -0.00353240966796875, -7.62939453125e-06, -4.9591064453125e-05, -0.000164031982421875, -9.918212890625e-05, -0.0001220703125, -1.33514404296875e-05, -0.00010895729064941406, -9.34600830078125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -4.768371127283899e-06, -4.768370445162873e-07, -6.425376341212541e-05, -4.768370445162873e-07, -0.0011043548583984375, -0.000164031982421875, -0.000217437744140625, -4.57763671875e-05, -0.004951357841491699, -1.9073486328125e-06, -0.0047245025634765625, -1.9073486328125e-06, -0.0029468536376953125, -1.9073486328125e-06, -0.0002765655517578125, 0.0, -0.001434326171875, -3.814697265625e-06, -5.7220458984375e-06, -0.008164405822753906, -0.0032596588134765625, -0.0003452301025390625, -4.9591064453125e-05, -0.0038034915924072266, 0.0, -6.647333145141602, -1.1920928244535389e-07, -0.05594353750348091, 0.0], "choice_history": [97, 285, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 133, 304, 21, 174, "minion", "<EOS>", "increase_armor", "<EOS>", "3", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": 3, "_type": "Template65", "hole1": "increase_armor", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "Bloodlust", "_type": "Template5", "hole2": [{"hole2": "SHAMAN", "_type": "Template31", "hole1": 5, "hole0": "Bloodlust"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.745225596962186, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.increase_armor(3)\n"}, {"score_history": [-1.1444091796875e-05, -0.0006351470947265625, -2.0265558760002023e-06, -2.6106754376087338e-05, -9.536736342852237e-07, -4.696843461715616e-05, -1.6689286894688848e-06, -4.38690185546875e-05, -0.000530242919921875, -0.000156402587890625, -5.483612312673358e-06, -2.2649765014648438e-06, -8.821448318485636e-06, 0.0, -0.002079010009765625, 0.0, -0.0001735687255859375, 0.0, -3.933906555175781e-06, 0.0, -0.000244140625, -4.9591064453125e-05, -4.1723224057932384e-06, -0.002146005630493164, -0.00353240966796875, -7.62939453125e-06, -4.9591064453125e-05, -0.000164031982421875, -9.918212890625e-05, -0.0001220703125, -1.33514404296875e-05, -0.00010895729064941406, -9.34600830078125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -4.768371127283899e-06, -4.768370445162873e-07, -6.425376341212541e-05, -4.768370445162873e-07, -0.0011043548583984375, -0.000164031982421875, -0.000217437744140625, -4.57763671875e-05, -0.004951357841491699, -1.9073486328125e-06, -0.0047245025634765625, -1.9073486328125e-06, -0.0029468536376953125, -1.9073486328125e-06, -0.0002765655517578125, 0.0, -0.001434326171875, -3.814697265625e-06, -5.7220458984375e-06, -6.315831184387207, -0.005138397216796875, -0.4692593812942505, -3.814697265625e-06, -0.012503743171691895, -1.1444091796875e-05, -0.010229229927062988, -0.0001773834228515625], "choice_history": [97, 285, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 131, 289, "minion", "<EOS>", "change_temp_attack", "<EOS>", "change_temp_attack", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": "change_temp_attack", "_type": "Template52", "hole1": "change_temp_attack", "hole0": "minion"}], "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "Bloodlust", "_type": "Template5", "hole2": [{"hole2": "SHAMAN", "_type": "Template31", "hole1": 5, "hole0": "Bloodlust"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.8394809959211145, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack.change_temp_attack(2)\n"}, {"score_history": [-1.1444091796875e-05, -0.0006351470947265625, -2.0265558760002023e-06, -2.6106754376087338e-05, -9.536736342852237e-07, -4.696843461715616e-05, -1.6689286894688848e-06, -4.38690185546875e-05, -0.000530242919921875, -0.000156402587890625, -5.483612312673358e-06, -2.2649765014648438e-06, -8.821448318485636e-06, 0.0, -0.002079010009765625, 0.0, -0.0001735687255859375, 0.0, -3.933906555175781e-06, 0.0, -0.000244140625, -4.9591064453125e-05, -4.1723224057932384e-06, -0.002146005630493164, -6.519569396972656, -6.4849853515625e-05, -0.000118255615234375, -0.0001430511474609375, -5.91278076171875e-05, -0.0001316070556640625, -7.62939453125e-06, -0.0001767873764038086, -0.000102996826171875, -1.33514404296875e-05, -2.0265579223632812e-06, -6.675719760096399e-06, -5.960462772236497e-07, -5.9842990594916046e-05, -5.960462772236497e-07, -0.14546966552734375, -0.003055572509765625, -0.0001659393310546875, -1.9073486328125e-06, -0.0031648874282836914, -1.9073486328125e-06, -0.0048923492431640625, -3.814697265625e-06, -0.0050029754638671875, -1.9073486328125e-06, -7.653236389160156e-05, 0.0, -0.001406669500283897, -5.7220458984375e-06, -5.7220458984375e-06, -0.006863594055175781, -0.002712249755859375, -0.00037384033203125, -4.38690185546875e-05, -0.0054247379302978516, -1.9073486328125e-06, -0.007041215896606445, -5.340576171875e-05, -0.027505910024046898, 0.0, -0.41359615325927734, -0.0067958831787109375, -0.000354766845703125, 0.0, -0.013694167137145996, 0.0, -0.007056355010718107, -9.5367431640625e-06], "choice_history": [97, 285, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 133, 304, 21, 174, "minion", "<EOS>", "change_temp_attack", "<EOS>", "3", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": 3, "_type": "Template65", "hole1": "change_temp_attack", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}, {"hole2": "change_temp_attack", "_type": "Template52", "hole1": "hero", "hole0": "player"}], "hole3": "use", "hole0": "Bloodlust", "_type": "Template5", "hole2": [{"hole2": "SHAMAN", "_type": "Template31", "hole1": 5, "hole0": "Bloodlust"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.181411777732251, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n        player.hero.change_temp_attack(2)\n"}, {"score_history": [-1.1444091796875e-05, -0.0006351470947265625, -2.0265558760002023e-06, -2.6106754376087338e-05, -9.536736342852237e-07, -4.696843461715616e-05, -1.6689286894688848e-06, -4.38690185546875e-05, -0.000530242919921875, -0.000156402587890625, -5.483612312673358e-06, -2.2649765014648438e-06, -8.821448318485636e-06, 0.0, -0.002079010009765625, 0.0, -0.0001735687255859375, 0.0, -3.933906555175781e-06, 0.0, -0.000244140625, -4.9591064453125e-05, -4.1723224057932384e-06, -0.002146005630493164, -0.00353240966796875, -7.62939453125e-06, -4.9591064453125e-05, -0.000164031982421875, -9.918212890625e-05, -0.0001220703125, -1.33514404296875e-05, -0.00010895729064941406, -9.34600830078125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -4.768371127283899e-06, -4.768370445162873e-07, -6.425376341212541e-05, -4.768370445162873e-07, -0.0011043548583984375, -0.000164031982421875, -0.000217437744140625, -4.57763671875e-05, -0.004951357841491699, -1.9073486328125e-06, -0.0047245025634765625, -1.9073486328125e-06, -0.0029468536376953125, -1.9073486328125e-06, -0.0002765655517578125, 0.0, -0.001434326171875, -3.814697265625e-06, -5.7220458984375e-06, -6.315831184387207, -0.005138397216796875, -1.036291241645813, 0.0, -0.06369984149932861, 0.0, -0.0028388500213623047, -1.71661376953125e-05], "choice_history": [97, 285, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 131, 289, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": "change_temp_attack", "_type": "Template52", "hole1": "hero", "hole0": "player"}], "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "Bloodlust", "_type": "Template5", "hole2": [{"hole2": "SHAMAN", "_type": "Template31", "hole1": 5, "hole0": "Bloodlust"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.450143098620394, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            player.hero.change_temp_attack(2)\n"}, {"score_history": [-1.1444091796875e-05, -0.0006351470947265625, -2.0265558760002023e-06, -2.6106754376087338e-05, -9.536736342852237e-07, -4.696843461715616e-05, -1.6689286894688848e-06, -4.38690185546875e-05, -0.000530242919921875, -0.000156402587890625, -5.483612312673358e-06, -2.2649765014648438e-06, -8.821448318485636e-06, 0.0, -0.002079010009765625, 0.0, -0.0001735687255859375, 0.0, -3.933906555175781e-06, 0.0, -0.000244140625, -4.9591064453125e-05, -4.1723224057932384e-06, -0.002146005630493164, -0.00353240966796875, -7.62939453125e-06, -4.9591064453125e-05, -0.000164031982421875, -9.918212890625e-05, -0.0001220703125, -1.33514404296875e-05, -0.00010895729064941406, -9.34600830078125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -4.768371127283899e-06, -4.768370445162873e-07, -6.425376341212541e-05, -4.768370445162873e-07, -0.0011043548583984375, -0.000164031982421875, -0.000217437744140625, -4.57763671875e-05, -0.004951357841491699, -1.9073486328125e-06, -5.594573974609375, -0.06440544128417969, -0.0011196136474609375, 0.0, -5.602835153695196e-05, -1.0609622222546022e-05, -0.00058746337890625, -0.08696269989013672, -2.6702880859375e-05, -0.00543975830078125, -9.5367431640625e-06, -9.489059448242188e-05, 0.0, -0.02243518829345703, 0.0, -0.1891927719116211, -0.0020933151245117188, -2.86102294921875e-05, -0.3586008548736572, -3.576278118089249e-07, -0.025231361389160156, -0.001613616943359375, -4.76837158203125e-05, -0.0001010894775390625, -0.008077858947217464, -0.0001863180659711361, -0.020029067993164062, -0.000522613525390625, -4.38690185546875e-05, 0.0, -0.029981493949890137, -2.753734588623047e-05, -0.1279287338256836, -4.398822784423828e-05, -0.01665496826171875, -1.0698509216308594, -0.004344940185546875, -0.0001983642578125, -2.86102294921875e-05, -0.004966020584106445, -1.9073486328125e-06, -0.016853928565979004, -0.00018310546875, -0.0326293520629406, 0.0], "choice_history": [97, 285, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 151, 21, 174, "<UNK>", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 353, 95, 336, "<UNK>", "<EOS>", 18, 167, 0, 282, "m", "<EOS>", 13, 143, 21, 174, "m", "<EOS>", "<UNK>", "<EOS>", 358, 133, 304, 21, 174, "minion", "<EOS>", "change_temp_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": 3, "_type": "Template65", "hole1": "change_temp_attack", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"keywords": [{"value": {"body": {"value": {"_type": "Name", "id": "m"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "m"}}, "_type": "keyword", "arg": "<UNK>"}], "_type": "Call", "func": {"_type": "Name", "id": "<UNK>"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}}], "hole3": "use", "hole0": "Bloodlust", "_type": "Template5", "hole2": [{"hole2": "SHAMAN", "_type": "Template31", "hole1": 5, "hole0": "Bloodlust"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.702115986731933, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in <UNK>(player.minions, <UNK>=lambda m: m.<UNK>):\n            minion.change_temp_attack(3)\n"}]}
{"index": 14, "beams": [{"score_history": [-0.0002384185791015625, -9.5367431640625e-06, -0.1592073142528534, -0.00018690305296331644, -1.1920928244535389e-07, -3.501772880554199e-07, -3.266334533691406e-05, -1.0490381100680679e-05, -2.6702880859375e-05, -0.0035724639892578125, -0.000743865966796875, -1.1920928244535389e-07, -7.05718994140625e-05, -2.384185791015625e-05, 0.0, -0.0040847063064575195, -1.33514404296875e-05, -0.000301361083984375, -1.9073486328125e-06, -0.00030553340911865234, -2.9802276912960224e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.00010502338409423828, -8.344646857949556e-07, -0.005334973335266113, 0.0, -2.09808349609375e-05, 0.0, -0.000240325927734375, 0.0, -9.5367431640625e-06, -0.0016422271728515625, -9.5367431640625e-06, -2.1457672119140625e-06, -8.583032467868179e-06, -0.00032889749854803085, -1.1920928244535389e-07, -0.001230596681125462, -2.3841855067985307e-07, -0.00084686279296875, -1.71661376953125e-05, -0.0009315013885498047, 0.0], "choice_history": [97, 283, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "BluegillWarrior", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type", "hole0": "Bluegill Warrior", "_type": "Template26", "hole2": "COMMON", "hole1": 2}], "hole1": "MinionCard"}, "score": -0.17958563907684066, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score_history": [-0.0002384185791015625, -9.5367431640625e-06, -1.95057213306427, -0.0001461399078834802, 0.0, -9.201467037200928e-07, -2.491474151611328e-05, -1.22785213534371e-05, -1.33514404296875e-05, -0.0014095306396484375, -0.0006465911865234375, -1.1920928244535389e-07, -7.62939453125e-05, -6.914138793945312e-05, 0.0, -0.0057260990142822266, -1.52587890625e-05, -0.00029754638671875, -1.9073486328125e-06, -0.00024831295013427734, -3.099436753473128e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.00010311603546142578, -8.344646857949556e-07, -0.005510449409484863, 0.0, -2.09808349609375e-05, 0.0, -0.0002384185791015625, 0.0, -9.5367431640625e-06, -0.0016231536865234375, -9.5367431640625e-06, -2.1457672119140625e-06, -8.583032467868179e-06, -0.0003398647822905332, -1.1920928244535389e-07, -0.0012307158904150128, -2.3841855067985307e-07, -0.00084686279296875, -1.71661376953125e-05, -0.0009295940399169922, 0.0], "choice_history": [97, 283, "<UNK>", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "<UNK>Warrior", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type", "hole0": "Bluegill Warrior", "_type": "Template26", "hole2": "COMMON", "hole1": 2}], "hole1": "MinionCard"}, "score": -1.9704257981896518, "inferred_code": "class <UNK>Warrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score_history": [-0.0002384185791015625, -9.5367431640625e-06, -5.3959808349609375, -0.18252818286418915, -5.960446742392378e-06, -2.436339855194092e-06, -6.306171417236328e-05, -8.583057933719829e-06, -8.0108642578125e-05, -0.00583648681640625, -0.0007648468017578125, -1.1920928244535389e-07, -7.2479248046875e-05, -1.811981201171875e-05, 0.0, -0.0039370059967041016, -1.33514404296875e-05, -0.0002994537353515625, -1.9073486328125e-06, -0.00030934810638427734, -2.861018856492592e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -9.930133819580078e-05, -8.344646857949556e-07, -0.005504727363586426, 0.0, -2.09808349609375e-05, 0.0, -0.000240325927734375, 0.0, -9.5367431640625e-06, -0.0016345977783203125, -9.5367431640625e-06, -2.1457672119140625e-06, -8.583032467868179e-06, -0.00033438115497119725, -1.1920928244535389e-07, -0.0012326232390478253, -2.3841855067985307e-07, -0.0008449554443359375, -1.71661376953125e-05, -0.0009315013885498047, 0.0], "choice_history": [97, 283, "Force", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "ForceWarrior", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type", "hole0": "Bluegill Warrior", "_type": "Template26", "hole2": "COMMON", "hole1": 2}], "hole1": "MinionCard"}, "score": -5.601087546052057, "inferred_code": "class ForceWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score_history": [-0.0002384185791015625, -9.5367431640625e-06, -0.1592073142528534, -0.00018690305296331644, -1.1920928244535389e-07, -3.501772880554199e-07, -3.266334533691406e-05, -1.0490381100680679e-05, -2.6702880859375e-05, -0.0035724639892578125, -0.000743865966796875, -1.1920928244535389e-07, -7.05718994140625e-05, -2.384185791015625e-05, 0.0, -5.5878005027771, -7.62939453125e-06, -0.0002689361572265625, -1.9073486328125e-06, -0.0002906322479248047, -4.529942543740617e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -9.739398956298828e-05, -7.152555099310121e-07, -0.005479931831359863, 0.0, -2.09808349609375e-05, 0.0, -0.0002346038818359375, 0.0, -9.5367431640625e-06, -0.0016498565673828125, -9.5367431640625e-06, -2.1457672119140625e-06, -8.583032467868179e-06, -0.00035989200114272535, -1.1920928244535389e-07, -0.001194595592096448, -2.3841855067985307e-07, -0.000823974609375, -1.71661376953125e-05, -0.0009200572967529297, 0.0], "choice_history": [97, 283, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bluegill", " ", "Warrior", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "BluegillWarrior", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type", "hole0": "Bluegill Warrior", "_type": "Template26", "hole2": "COMMON", "hole1": 1}], "hole1": "MinionCard"}, "score": -5.76334971550768, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score_history": [-0.0002384185791015625, -9.5367431640625e-06, -0.1592073142528534, -0.00018690305296331644, -1.1920928244535389e-07, -3.501772880554199e-07, -3.266334533691406e-05, -1.0490381100680679e-05, -2.6702880859375e-05, -5.7520647048950195, -0.04597759246826172, -1.71661376953125e-05, -0.0001068115234375, -3.576277322281385e-06, -1.9073486328125e-06, -5.733966827392578e-05, 0.0, -0.0008563995361328125, -0.0002613067626953125, -8.20159912109375e-05, -2.384185791015625e-06, -9.024139581015334e-05, -2.682197191461455e-05, 0.0, -1.52587890625e-05, -3.814697265625e-06, -0.002608060836791992, 0.0, -8.7738037109375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0003402233123779297, 0.0, -3.8504600524902344e-05, 0.0, -0.0002307891845703125, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.0004445314407348633, -6.878376007080078e-05, -0.011587142944335938, 0.0, -0.000209808349609375, -1.1444091796875e-05, -9.071826207218692e-05, -9.5367431640625e-06, -0.0002117156982421875, -0.0027599334716796875, -0.0009555816650390625, -0.030819416046142578, -3.814697265625e-06, -0.0001392364501953125, 0.0, -0.0020666122436523438, 0.0, -5.7220458984375e-06, -0.000652313232421875, -9.5367431640625e-06, -2.0265579223632812e-06, -4.410734163684538e-06, -0.00014841477968730032, -1.1920928244535389e-07, -0.0010408154921606183, -2.3841855067985307e-07, -0.00112152099609375, -1.71661376953125e-05, -0.0009425878524780273, -1.9073486328125e-06], "choice_history": [97, 283, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Bluegill", " ", "Warrior", "<EOS>", 52, 179, "2", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "BluegillWarrior", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "MECH"}], "hole2": [{"_type": "Str", "s": "Bluegill Warrior"}, {"n": 2, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -6.015954080672557, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score_history": [-0.0002384185791015625, -9.5367431640625e-06, -0.1592073142528534, -0.00018690305296331644, -1.1920928244535389e-07, -3.501772880554199e-07, -3.266334533691406e-05, -1.0490381100680679e-05, -2.6702880859375e-05, -0.0035724639892578125, -0.000743865966796875, -1.1920928244535389e-07, -7.05718994140625e-05, -2.384185791015625e-05, 0.0, -0.0040847063064575195, -1.33514404296875e-05, -0.000301361083984375, -1.9073486328125e-06, -0.00030553340911865234, -2.9802276912960224e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.00010502338409423828, -8.344646857949556e-07, -5.918344497680664, 0.0, -3.24249267578125e-05, 0.0, -0.000209808349609375, 0.0, -1.1444091796875e-05, -0.0024623870849609375, -1.33514404296875e-05, -2.1457672119140625e-06, -8.583032467868179e-06, -0.0003162610228173435, -1.1920928244535389e-07, -0.001544355764053762, -2.3841855067985307e-07, -0.0008296966552734375, -1.52587890625e-05, -0.0009104013442993164, 0.0], "choice_history": [97, 283, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "BluegillWarrior", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "PIRATE"}, "hole3": "minion_type", "hole0": "Bluegill Warrior", "_type": "Template26", "hole2": "COMMON", "hole1": 2}], "hole1": "MinionCard"}, "score": -6.093662920970537, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score_history": [-0.0002384185791015625, -9.5367431640625e-06, -1.95057213306427, -0.0001461399078834802, 0.0, -9.201467037200928e-07, -2.491474151611328e-05, -1.22785213534371e-05, -1.33514404296875e-05, -0.0014095306396484375, -0.0006465911865234375, -1.1920928244535389e-07, -7.62939453125e-05, -6.914138793945312e-05, 0.0, -5.251862049102783, -7.62939453125e-06, -0.0002460479736328125, -1.9073486328125e-06, -0.0002334117889404297, -5.125986263010418e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -9.357929229736328e-05, -7.152555099310121e-07, -0.005642056465148926, 0.0, -2.09808349609375e-05, 0.0, -0.0002346038818359375, 0.0, -9.5367431640625e-06, -0.00162506103515625, -9.5367431640625e-06, -2.1457672119140625e-06, -8.583032467868179e-06, -0.0003672829770948738, -1.1920928244535389e-07, -0.001196741359308362, -2.3841855067985307e-07, -0.000823974609375, -1.71661376953125e-05, -0.0009181499481201172, 0.0], "choice_history": [97, 283, "<UNK>", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bluegill", " ", "Warrior", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "<UNK>Warrior", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type", "hole0": "Bluegill Warrior", "_type": "Template26", "hole2": "COMMON", "hole1": 1}], "hole1": "MinionCard"}, "score": -7.21656890100185, "inferred_code": "class <UNK>Warrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score_history": [-0.0002384185791015625, -9.5367431640625e-06, -0.1592073142528534, -0.00018690305296331644, -1.1920928244535389e-07, -3.501772880554199e-07, -3.266334533691406e-05, -1.0490381100680679e-05, -2.6702880859375e-05, -0.0035724639892578125, -0.000743865966796875, -1.1920928244535389e-07, -7.05718994140625e-05, -2.384185791015625e-05, 0.0, -0.0040847063064575195, -1.33514404296875e-05, -0.000301361083984375, -1.9073486328125e-06, -0.00030553340911865234, -2.9802276912960224e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.00010502338409423828, -8.344646857949556e-07, -7.045470237731934, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.0002574920654296875, 0.0, -1.1444091796875e-05, -0.0018978118896484375, -1.1444091796875e-05, -4.0531158447265625e-06, -9.536697689327411e-06, -0.00035774632124230266, -1.1920928244535389e-07, -0.001312970300205052, -2.3841855067985307e-07, -0.000804901123046875, -1.52587890625e-05, -0.0009142160415649414, 0.0], "choice_history": [97, 283, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "BluegillWarrior", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "hole3": "minion_type", "hole0": "Bluegill Warrior", "_type": "Template26", "hole2": "COMMON", "hole1": 2}], "hole1": "MinionCard"}, "score": -7.2200408613721905, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score_history": [-0.0002384185791015625, -9.5367431640625e-06, -0.1592073142528534, -0.00018690305296331644, -1.1920928244535389e-07, -3.501772880554199e-07, -3.266334533691406e-05, -1.0490381100680679e-05, -2.6702880859375e-05, -0.0035724639892578125, -0.000743865966796875, -1.1920928244535389e-07, -7.05718994140625e-05, -2.384185791015625e-05, 0.0, -0.0040847063064575195, -1.33514404296875e-05, -0.000301361083984375, -1.9073486328125e-06, -0.00030553340911865234, -2.9802276912960224e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.00010502338409423828, -8.344646857949556e-07, -7.202574729919434, 0.0, -1.71661376953125e-05, 0.0, -0.0002346038818359375, 0.0, -9.5367431640625e-06, -0.0019512176513671875, -1.33514404296875e-05, -2.0265579223632812e-06, -9.65590606938349e-06, -0.0003249638248234987, -1.1920928244535389e-07, -0.0013667334569618106, -2.3841855067985307e-07, -0.0008106231689453125, -1.52587890625e-05, -0.0009428262710571289, 0.0], "choice_history": [97, 283, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "BluegillWarrior", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Bluegill Warrior", "_type": "Template26", "hole2": "COMMON", "hole1": 2}], "hole1": "MinionCard"}, "score": -7.3772349987699, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score_history": [-0.0002384185791015625, -9.5367431640625e-06, -0.1592073142528534, -0.00018690305296331644, -1.1920928244535389e-07, -3.501772880554199e-07, -3.266334533691406e-05, -1.0490381100680679e-05, -2.6702880859375e-05, -0.0035724639892578125, -0.000743865966796875, -1.1920928244535389e-07, -7.05718994140625e-05, -2.384185791015625e-05, 0.0, -0.0040847063064575195, -1.33514404296875e-05, -0.000301361083984375, -1.9073486328125e-06, -0.00030553340911865234, -2.9802276912960224e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.00010502338409423828, -8.344646857949556e-07, -0.005334973335266113, 0.0, -2.09808349609375e-05, 0.0, -0.000240325927734375, 0.0, -9.5367431640625e-06, -0.0016422271728515625, -9.5367431640625e-06, -2.1457672119140625e-06, -8.583032467868179e-06, -0.00032889749854803085, -1.1920928244535389e-07, -7.5569891929626465, -2.3841855067985307e-07, -0.001453399658203125, -1.33514404296875e-05, -0.0013535022735595703, 0.0], "choice_history": [97, 283, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "1", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "divine_shield", "_type": "Template50", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "BluegillWarrior", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type", "hole0": "Bluegill Warrior", "_type": "Template26", "hole2": "COMMON", "hole1": 2}], "hole1": "MinionCard"}, "score": -7.73636895841134, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, divine_shield=True)\n"}, {"score_history": [-0.0002384185791015625, -9.5367431640625e-06, -5.3959808349609375, -2.3631763458251953, -3.1947638490237296e-05, -2.2277235984802246e-06, -4.780292510986328e-05, -1.3232214769232087e-05, -2.6702880859375e-05, -0.00279998779296875, -0.0007915496826171875, -1.1920928244535389e-07, -6.4849853515625e-05, -3.337860107421875e-05, 0.0, -0.004527688026428223, -1.52587890625e-05, -0.00029754638671875, -1.9073486328125e-06, -0.00029599666595458984, -2.9802276912960224e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -9.739398956298828e-05, -8.344646857949556e-07, -0.005594372749328613, 0.0, -2.09808349609375e-05, 0.0, -0.00023651123046875, 0.0, -9.5367431640625e-06, -0.0016345977783203125, -9.5367431640625e-06, -2.1457672119140625e-06, -8.583032467868179e-06, -0.00034010320086963475, -1.1920928244535389e-07, -0.001234411378391087, -2.3841855067985307e-07, -0.00084686279296875, -1.71661376953125e-05, -0.0009295940399169922, 0.0], "choice_history": [97, 283, "Force", "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "Force<UNK>", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type", "hole0": "Bluegill Warrior", "_type": "Template26", "hole2": "COMMON", "hole1": 2}], "hole1": "MinionCard"}, "score": -7.779366096118409, "inferred_code": "class Force<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score_history": [-0.0002384185791015625, -9.5367431640625e-06, -1.95057213306427, -0.0001461399078834802, 0.0, -9.201467037200928e-07, -2.491474151611328e-05, -1.22785213534371e-05, -1.33514404296875e-05, -0.0014095306396484375, -0.0006465911865234375, -1.1920928244535389e-07, -7.62939453125e-05, -6.914138793945312e-05, 0.0, -0.0057260990142822266, -1.52587890625e-05, -0.00029754638671875, -1.9073486328125e-06, -0.00024831295013427734, -3.099436753473128e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.00010311603546142578, -8.344646857949556e-07, -5.879497528076172, 0.0, -3.24249267578125e-05, 0.0, -0.0002079010009765625, 0.0, -1.1444091796875e-05, -0.0024585723876953125, -1.33514404296875e-05, -2.1457672119140625e-06, -8.583032467868179e-06, -0.0003234136092942208, -1.1920928244535389e-07, -0.0015462631126865745, -2.3841855067985307e-07, -0.000827789306640625, -1.52587890625e-05, -0.0009084939956665039, 0.0], "choice_history": [97, 283, "<UNK>", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "<UNK>Warrior", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "PIRATE"}, "hole3": "minion_type", "hole0": "Bluegill Warrior", "_type": "Template26", "hole2": "COMMON", "hole1": 2}], "hole1": "MinionCard"}, "score": -7.845491959287145, "inferred_code": "class <UNK>Warrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score_history": [-0.0002384185791015625, -9.5367431640625e-06, -0.1592073142528534, -0.00018690305296331644, -1.1920928244535389e-07, -3.501772880554199e-07, -3.266334533691406e-05, -1.0490381100680679e-05, -2.6702880859375e-05, -0.0035724639892578125, -0.000743865966796875, -1.1920928244535389e-07, -7.05718994140625e-05, -2.384185791015625e-05, 0.0, -0.0040847063064575195, -1.33514404296875e-05, -0.000301361083984375, -1.9073486328125e-06, -0.00030553340911865234, -2.9802276912960224e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.00010502338409423828, -8.344646857949556e-07, -0.005334973335266113, 0.0, -2.09808349609375e-05, 0.0, -0.000240325927734375, 0.0, -9.5367431640625e-06, -0.0016422271728515625, -9.5367431640625e-06, -2.1457672119140625e-06, -8.583032467868179e-06, -0.00032889749854803085, -1.1920928244535389e-07, -0.001230596681125462, -2.3841855067985307e-07, -0.00084686279296875, -1.71661376953125e-05, -8.021529197692871, -4.1961669921875e-05], "choice_history": [97, 283, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "False", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "BluegillWarrior", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type", "hole0": "Bluegill Warrior", "_type": "Template26", "hole2": "COMMON", "hole1": 2}], "hole1": "MinionCard"}, "score": -8.200225297051084, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score_history": [-0.0002384185791015625, -9.5367431640625e-06, -0.1592073142528534, -0.00018690305296331644, -1.1920928244535389e-07, -3.501772880554199e-07, -3.266334533691406e-05, -1.0490381100680679e-05, -2.6702880859375e-05, -0.0035724639892578125, -0.000743865966796875, -1.1920928244535389e-07, -7.05718994140625e-05, -2.384185791015625e-05, 0.0, -0.0040847063064575195, -1.33514404296875e-05, -0.000301361083984375, -1.9073486328125e-06, -0.00030553340911865234, -2.9802276912960224e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.00010502338409423828, -8.344646857949556e-07, -0.005334973335266113, 0.0, -2.09808349609375e-05, 0.0, -0.000240325927734375, 0.0, -9.5367431640625e-06, -0.0016422271728515625, -9.5367431640625e-06, -2.1457672119140625e-06, -8.583032467868179e-06, -8.105524063110352, 0.0, -0.0013471839483827353, -1.1920928244535389e-07, -0.000736236572265625, -1.33514404296875e-05, -0.0008515119552612305, -1.9073486328125e-06], "choice_history": [97, 283, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "BluegillWarrior", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type", "hole0": "Bluegill Warrior", "_type": "Template26", "hole2": "COMMON", "hole1": 2}], "hole1": "MinionCard"}, "score": -8.284704630534726, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 2, charge=True)\n"}, {"score_history": [-0.0002384185791015625, -9.5367431640625e-06, -0.1592073142528534, -0.00018690305296331644, -1.1920928244535389e-07, -3.501772880554199e-07, -3.266334533691406e-05, -1.0490381100680679e-05, -2.6702880859375e-05, -0.0035724639892578125, -0.000743865966796875, -1.1920928244535389e-07, -7.05718994140625e-05, -2.384185791015625e-05, 0.0, -0.0040847063064575195, -1.33514404296875e-05, -0.000301361083984375, -1.9073486328125e-06, -0.00030553340911865234, -2.9802276912960224e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.00010502338409423828, -8.344646857949556e-07, -0.005334973335266113, 0.0, -2.09808349609375e-05, 0.0, -0.000240325927734375, 0.0, -9.5367431640625e-06, -6.605442047119141, -0.0001983642578125, -4.762550815939903e-07, -1.454353241570061e-05, -2.0265579223632812e-06, -4.768370445162873e-07, -9.012206282932311e-05, -1.1920928244535389e-07, -0.0001506805419921875, -0.0017795562744140625, -0.0001239776611328125, -0.005680203437805176, -3.814697265625e-06, -0.0004634857177734375, -4.57763671875e-05, -0.0013158320216462016, 0.0, -0.03562736511230469, -0.0001068115234375, -0.8684371709823608, -3.814697265625e-06, -0.028367042541503906, -0.03130817413330078, -0.0009323299746029079, -5.7220458984375e-06, -6.4849853515625e-05, -0.06499671936035156, -5.7220458984375e-05, -0.09801927953958511, -0.29909515380859375, -0.8319578170776367, -0.009763717651367188, -5.7220458984375e-05, 0.0, -0.02667057514190674, -0.001948714256286621, -0.000195979984709993, -0.0001773834228515625, -0.2186126708984375, -0.00336456298828125, -7.283687591552734e-05, -4.3392181396484375e-05, -0.013407349586486816, -3.0517578125e-05, -9.655952453613281e-06, -0.00032806396484375, -0.0001049041748046875, -3.4332275390625e-05, -0.017701268196105957, -3.3378591979271732e-06, -0.0085296630859375, -1.1444091796875e-05, -0.006616557948291302, -1.9073486328125e-06], "choice_history": [97, 283, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>", 354, 95, 336, "charge", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 88, 325, "Charge", "<EOS>", 45, 151, 21, 174, "Greater", "Than", "<EOS>", 346, 70, 292, "Count", "<EOS>", "Weapon", "Selector", "<EOS>", 353, 95, 336, "value", "<EOS>", 23, 179, "0", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": [{"value": {"value": true, "_type": "NameConstant"}, "_type": "keyword", "arg": "charge"}, {"value": {"_type": "Template78", "hole1": [{"_type": "Template79", "hole0": "Charge"}, {"keywords": [{"value": {"n": 0, "_type": "Num"}, "_type": "keyword", "arg": "value"}], "_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"_type": "Template55", "hole1": "WeaponSelector", "hole0": "Count"}]}], "hole0": "Aura"}, "_type": "keyword", "arg": "auras"}], "hole2": 1, "_type": "Template68", "hole1": 2, "hole0": "Minion"}], "hole3": "create_minion", "hole0": "BluegillWarrior", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type", "hole0": "Bluegill Warrior", "_type": "Template26", "hole2": "COMMON", "hole1": 2}], "hole1": "MinionCard"}, "score": -9.356544793816717, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True, auras=[Aura(Charge(), GreaterThan(\n            Count(WeaponSelector()), value=0))])\n"}]}
{"index": 15, "beams": [{"score_history": [-4.1961669921875e-05, -7.62939453125e-05, -1.4305104514278355e-06, -0.00013648608000949025, -3.570457920432091e-07, -0.00016331623191945255, -5.245203283266164e-06, -3.814697265625e-05, -0.0005283355712890625, -0.0036373138427734375, -7.2479248046875e-05, -9.5367431640625e-06, -2.0265579223632812e-06, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.00029754638671875, -0.0003604888916015625, -4.38690185546875e-05, -4.410734163684538e-06, -2.741813204920618e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.00010609157470753416, -1.9073486328125e-06, -3.0517578125e-05, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -2.8848648071289062e-05, -5.7220458984375e-06, -4.4345855712890625e-05, -9.5367431640625e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.000133514404296875, 0.0, -4.410743713378906e-05, -4.541872476693243e-05, -0.018835067749023438, -1.9073486328125e-06, -1.33514404296875e-05, -9.34600830078125e-05, -2.5868412194540724e-05, 0.0, -0.0002040863037109375, -0.002429962158203125, -0.0006561279296875, -0.08888399600982666, 0.0, -1.1444091796875e-05, 0.0, -0.0041697025299072266, 0.0, -3.62396240234375e-05, -3.4332275390625e-05, -3.814697265625e-06, -1.3113067325321026e-06, -4.768370445162873e-07, -7.712515071034431e-09, -2.3841855067985307e-07], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Boar", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "Boar", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Boar"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -0.12138783267320719, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score_history": [-4.1961669921875e-05, -7.62939453125e-05, -1.4305104514278355e-06, -0.00013648608000949025, -3.570457920432091e-07, -0.00016331623191945255, -5.245203283266164e-06, -3.814697265625e-05, -0.0005283355712890625, -0.0036373138427734375, -7.2479248046875e-05, -9.5367431640625e-06, -2.0265579223632812e-06, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.00029754638671875, -0.0003604888916015625, -4.38690185546875e-05, -4.410734163684538e-06, -2.741813204920618e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.00010609157470753416, -1.9073486328125e-06, -3.0517578125e-05, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -2.8848648071289062e-05, -5.7220458984375e-06, -4.4345855712890625e-05, -9.5367431640625e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.000133514404296875, 0.0, -4.410743713378906e-05, -4.541872476693243e-05, -0.018835067749023438, -1.9073486328125e-06, -1.33514404296875e-05, -9.34600830078125e-05, -2.5868412194540724e-05, 0.0, -0.0002040863037109375, -0.002429962158203125, -0.0006561279296875, -2.5496201515197754, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0030777454376220703, 0.0, -0.000102996826171875, -2.86102294921875e-05, -5.7220458984375e-06, 2.3841516849643085e-07, -2.3841855067985307e-07, -1.6725534806028008e-06, -2.3841855067985307e-07], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Boar", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "Boar", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "DEMON"}], "hole2": [{"_type": "Str", "s": "Boar"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -2.5811024796908555, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score_history": [-4.1961669921875e-05, -7.62939453125e-05, -1.4305104514278355e-06, -0.00013648608000949025, -3.570457920432091e-07, -0.00016331623191945255, -5.245203283266164e-06, -3.814697265625e-05, -0.0005283355712890625, -0.0036373138427734375, -7.2479248046875e-05, -9.5367431640625e-06, -2.0265579223632812e-06, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.00029754638671875, -0.0003604888916015625, -4.38690185546875e-05, -4.410734163684538e-06, -2.741813204920618e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.00010609157470753416, -1.9073486328125e-06, -3.0517578125e-05, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -2.8848648071289062e-05, -5.7220458984375e-06, -4.4345855712890625e-05, -9.5367431640625e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.000133514404296875, 0.0, -4.410743713378906e-05, -4.541872476693243e-05, -4.016419410705566, -5.7220458984375e-06, -0.00012969970703125, -8.20159912109375e-05, -3.7670135498046875e-05, 0.0, -0.00028228759765625, -0.001617431640625, -0.000934600830078125, -0.10725283622741699, 0.0, -1.1444091796875e-05, 0.0, -0.0037534236907958984, 0.0, -4.57763671875e-05, -3.62396240234375e-05, -3.814697265625e-06, 4.7683329285064247e-07, -4.768370445162873e-07, -1.3203243725001812e-06, -2.3841855067985307e-07], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Boar", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "Boar", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Boar"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -4.13660036984399, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score_history": [-4.1961669921875e-05, -7.62939453125e-05, -1.4305104514278355e-06, -0.00013648608000949025, -3.570457920432091e-07, -0.00016331623191945255, -5.245203283266164e-06, -3.814697265625e-05, -0.0005283355712890625, -0.0036373138427734375, -7.2479248046875e-05, -9.5367431640625e-06, -2.0265579223632812e-06, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.00029754638671875, -0.0003604888916015625, -4.38690185546875e-05, -4.410734163684538e-06, -2.741813204920618e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.00010609157470753416, -1.9073486328125e-06, -3.0517578125e-05, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -2.8848648071289062e-05, -5.7220458984375e-06, -4.4345855712890625e-05, -9.5367431640625e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.000133514404296875, 0.0, -4.410743713378906e-05, -4.541872476693243e-05, -0.018835067749023438, -1.9073486328125e-06, -1.33514404296875e-05, -9.34600830078125e-05, -2.5868412194540724e-05, 0.0, -0.0002040863037109375, -0.002429962158203125, -0.0006561279296875, -5.277224063873291, -3.933906555175781e-06, -1.52587890625e-05, 0.0, -0.0007305145263671875, 0.0, -9.34600830078125e-05, -3.0517578125e-05, -3.814697265625e-06, -9.536795460007852e-07, -2.3841855067985307e-07, -3.602908691391349e-07, -1.1920928244535389e-07], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Boar", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "Boar", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "DRAGON"}], "hole2": [{"_type": "Str", "s": "Boar"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -5.3063495042220765, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score_history": [-4.1961669921875e-05, -7.62939453125e-05, -1.4305104514278355e-06, -0.00013648608000949025, -3.570457920432091e-07, -0.00016331623191945255, -5.245203283266164e-06, -3.814697265625e-05, -0.0005283355712890625, -0.0036373138427734375, -7.2479248046875e-05, -9.5367431640625e-06, -2.0265579223632812e-06, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.00029754638671875, -0.0003604888916015625, -4.38690185546875e-05, -4.410734163684538e-06, -2.741813204920618e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.00010609157470753416, -1.9073486328125e-06, -3.0517578125e-05, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -2.8848648071289062e-05, -5.7220458984375e-06, -4.4345855712890625e-05, -9.5367431640625e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.000133514404296875, 0.0, -4.410743713378906e-05, -4.541872476693243e-05, -0.018835067749023438, -1.9073486328125e-06, -1.33514404296875e-05, -9.34600830078125e-05, -2.5868412194540724e-05, 0.0, -0.0002040863037109375, -0.002429962158203125, -0.0006561279296875, -0.08888399600982666, 0.0, -1.1444091796875e-05, 0.0, -5.641521453857422, 0.0, -0.000110626220703125, -4.57763671875e-05, -1.71661376953125e-05, -1.0728854249464348e-06, -5.960462772236497e-07, -3.6785786505788565e-07, -4.768370445162873e-07], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Boar", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "p", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "Boar", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Boar"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -5.758839245481397, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n"}, {"score_history": [-4.1961669921875e-05, -7.62939453125e-05, -1.4305104514278355e-06, -0.00013648608000949025, -3.570457920432091e-07, -0.00016331623191945255, -5.245203283266164e-06, -3.814697265625e-05, -0.0005283355712890625, -0.0036373138427734375, -7.2479248046875e-05, -9.5367431640625e-06, -2.0265579223632812e-06, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.00029754638671875, -0.0003604888916015625, -4.38690185546875e-05, -4.410734163684538e-06, -2.741813204920618e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.00010609157470753416, -1.9073486328125e-06, -3.0517578125e-05, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -2.8848648071289062e-05, -5.7220458984375e-06, -4.4345855712890625e-05, -9.5367431640625e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.000133514404296875, 0.0, -4.410743713378906e-05, -4.541872476693243e-05, -4.016419410705566, -5.7220458984375e-06, -0.00012969970703125, -8.20159912109375e-05, -3.7670135498046875e-05, 0.0, -0.00028228759765625, -0.001617431640625, -0.000934600830078125, -2.3590896129608154, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -0.002957582473754883, 0.0, -0.00014495849609375, -3.0517578125e-05, -5.7220458984375e-06, 2.384153958701063e-07, -2.3841855067985307e-07, -7.196358637884259e-07, -2.3841855067985307e-07], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Boar", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "Boar", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "DEMON"}], "hole2": [{"_type": "Str", "s": "Boar"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -6.3877532382405775, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score_history": [-4.1961669921875e-05, -7.62939453125e-05, -1.4305104514278355e-06, -0.00013648608000949025, -3.570457920432091e-07, -0.00016331623191945255, -5.245203283266164e-06, -3.814697265625e-05, -0.0005283355712890625, -5.870704650878906, -7.62939453125e-05, -2.09808349609375e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -0.0003682374954223633, 0.0, -0.4687328338623047, -0.0004825592041015625, -2.47955322265625e-05, -1.9073468138230965e-06, -2.3841855067985307e-07, -1.71661376953125e-05, -1.9073486328125e-06, -0.003458003280684352, -1.9073486328125e-06, -0.0003223419189453125, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -4.220008850097656e-05, -1.9073486328125e-06, -4.458427429199219e-05, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.000247955322265625, 0.0, -0.00011301040649414062, -0.00011396403715480119, -0.00720977783203125, -1.9073486328125e-06, -1.71661376953125e-05, -4.38690185546875e-05, -3.504752748995088e-05, 0.0, -0.0004673004150390625, 0.0, -0.0001468658447265625, 0.0, -1.5735626220703125e-05, 0.0, -0.0017948150634765625, 0.0, -0.000213623046875, 0.0, -0.04007112979888916, 0.0, -0.0001697540283203125, -0.0003299713134765625, -0.000202178955078125, -0.00010561376257101074, 0.0, -5.502210115082562e-06, -1.1920928244535389e-07], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 351, 53, 183, "Boar", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "p", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "Boar", "_type": "Template5", "hole2": [{"hole2": [{"_type": "Str", "s": "Boar"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}, {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -6.396677715902875, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n"}, {"score_history": [-4.1961669921875e-05, -7.62939453125e-05, -1.4305104514278355e-06, -0.00013648608000949025, -3.570457920432091e-07, -0.00016331623191945255, -5.245203283266164e-06, -3.814697265625e-05, -0.0005283355712890625, -5.870704650878906, -7.62939453125e-05, -2.09808349609375e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -0.0003682374954223633, 0.0, -0.9994001388549805, -0.0001277923583984375, -8.7738037109375e-05, -4.6491513785440475e-06, -2.622604142743512e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.0001250430359505117, -1.9073486328125e-06, -4.9591064453125e-05, -1.33514404296875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -4.0411949157714844e-05, -5.841255187988281e-06, -2.7179718017578125e-05, -1.52587890625e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0001201629638671875, 0.0, -6.139278411865234e-05, -6.639953062403947e-05, -0.019342422485351562, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001201629638671875, -2.8371803637128323e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.12903904914855957, 0.0, -7.05718994140625e-05, -4.57763671875e-05, -6.67572021484375e-05, -3.015952097484842e-05, -2.3841855067985307e-07, -6.563859642483294e-06, -1.1920928244535389e-07], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Boar", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "p", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "Boar", "_type": "Template5", "hole2": [{"hole2": [{"_type": "Str", "s": "Boar"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -7.021151293953686, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n"}, {"score_history": [-4.1961669921875e-05, -7.62939453125e-05, -1.4305104514278355e-06, -0.00013648608000949025, -3.570457920432091e-07, -0.00016331623191945255, -5.245203283266164e-06, -3.814697265625e-05, -0.0005283355712890625, -0.0036373138427734375, -7.2479248046875e-05, -9.5367431640625e-06, -2.0265579223632812e-06, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.00029754638671875, -0.0003604888916015625, -4.38690185546875e-05, -4.410734163684538e-06, -2.741813204920618e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.00010609157470753416, -1.9073486328125e-06, -3.0517578125e-05, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -2.8848648071289062e-05, -5.7220458984375e-06, -4.4345855712890625e-05, -9.5367431640625e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.000133514404296875, 0.0, -4.410743713378906e-05, -4.541872476693243e-05, -0.018835067749023438, -1.9073486328125e-06, -1.33514404296875e-05, -9.34600830078125e-05, -2.5868412194540724e-05, 0.0, -0.0002040863037109375, -0.002429962158203125, -0.0006561279296875, -7.493781566619873, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.0014587640762329102, 0.0, -0.000110626220703125, -3.0517578125e-05, -3.814697265625e-06, -1.0728888355515664e-06, -3.576278118089249e-07, -2.421511453576386e-07, -2.3841855067985307e-07], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Boar", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "Add", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "Boar", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "Add"}], "hole2": [{"_type": "Str", "s": "Boar"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -7.523662079678189, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.Add)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score_history": [-4.1961669921875e-05, -7.62939453125e-05, -1.4305104514278355e-06, -0.00013648608000949025, -3.570457920432091e-07, -0.00016331623191945255, -5.245203283266164e-06, -3.814697265625e-05, -7.675292015075684, -0.000453948974609375, 0.0, -0.00141952745616436, -6.198881692398572e-06, 0.0, -0.002430558204650879, -1.9073486328125e-06, -0.19886815547943115, -4.768370445162873e-07, -0.000980377197265625, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -0.0001220703125, 0.0, -0.0005953311920166016, 0.0, -1.71661376953125e-05, 0.0, -0.00293576717376709, 0.0, -7.62939453125e-05, -6.4849853515625e-05, -3.814697265625e-06, 4.7683329285064247e-07, -5.960462772236497e-07, -9.595314622856677e-07, -4.768370445162873e-07], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Boar", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "Boar", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Boar", "_type": "Template26", "hole2": "COMMON", "hole1": 1}], "hole1": "MinionCard"}, "score": -7.883773306329374, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score_history": [-4.1961669921875e-05, -7.62939453125e-05, -1.4305104514278355e-06, -0.00013648608000949025, -3.570457920432091e-07, -0.00016331623191945255, -5.245203283266164e-06, -3.814697265625e-05, -0.0005283355712890625, -0.0036373138427734375, -7.2479248046875e-05, -9.5367431640625e-06, -2.0265579223632812e-06, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.00029754638671875, -0.0003604888916015625, -4.38690185546875e-05, -4.410734163684538e-06, -2.741813204920618e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.00010609157470753416, -1.9073486328125e-06, -3.0517578125e-05, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -2.8848648071289062e-05, -5.7220458984375e-06, -4.4345855712890625e-05, -9.5367431640625e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.000133514404296875, 0.0, -4.410743713378906e-05, -4.541872476693243e-05, -0.018835067749023438, -1.9073486328125e-06, -1.33514404296875e-05, -9.34600830078125e-05, -2.5868412194540724e-05, 0.0, -0.0002040863037109375, -0.002429962158203125, -0.0006561279296875, -0.08888399600982666, 0.0, -1.1444091796875e-05, 0.0, -8.327258110046387, -7.62939453125e-06, -6.103515625e-05, -3.4332275390625e-05, -1.71661376953125e-05, -9.536761353956535e-07, -5.960462772236497e-07, -3.606837708503008e-07, -5.960462772236497e-07], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Boar", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "_", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "_", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "Boar", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Boar"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -8.444522488734492, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, _):\n        return Minion(1, 1)\n"}, {"score_history": [-4.1961669921875e-05, -7.62939453125e-05, -1.4305104514278355e-06, -0.00013648608000949025, -3.570457920432091e-07, -0.00016331623191945255, -5.245203283266164e-06, -3.814697265625e-05, -0.0005283355712890625, -0.0036373138427734375, -7.2479248046875e-05, -9.5367431640625e-06, -2.0265579223632812e-06, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.00029754638671875, -0.0003604888916015625, -4.38690185546875e-05, -4.410734163684538e-06, -2.741813204920618e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.00010609157470753416, -1.9073486328125e-06, -3.0517578125e-05, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -2.8848648071289062e-05, -5.7220458984375e-06, -4.4345855712890625e-05, -9.5367431640625e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.000133514404296875, 0.0, -4.410743713378906e-05, -4.541872476693243e-05, -0.018835067749023438, -1.9073486328125e-06, -1.33514404296875e-05, -9.34600830078125e-05, -2.5868412194540724e-05, 0.0, -0.0002040863037109375, -6.249528884887695, -0.0003452301025390625, -0.7414220571517944, 0.0, -0.0036821365356445312, -0.000171661376953125, -0.045848846435546875, -0.00125885009765625, -0.12027549743652344, -0.0028200149536132812, -0.00016307830810546875, -0.0007190704345703125, -0.0005245208740234375, -0.2613353729248047, -0.9906473159790039, -0.002820730209350586, -1.3947486877441406e-05, -0.0011272430419921875, 0.0, -0.029709815979003906, -0.00036420486867427826, -0.00010752677917480469, 0.0, -0.000148773193359375, -0.00014495849609375, -0.000885009765625, -0.0214081984013319, -2.1457672119140625e-06, -0.0001220703125, -1.9073486328125e-06, -0.002330780029296875, -2.300739288330078e-05, -3.814697265625e-06, -0.01900196075439453, -0.0009288787841796875, -0.0004825592041015625, -0.0002994537353515625, -5.7220458984375e-06, -0.0005450251628644764, -1.9073486328125e-06, -4.57763671875e-05, -2.86102294921875e-05, -0.0008107423782348633, 0.0, -1.33514404296875e-05, -6.103515625e-05, -1.33514404296875e-05, -4.768403414345812e-07, -1.1920928244535389e-07, -2.3891552700661123e-06, -1.1920928244535389e-07], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Boar", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 95, 336, "choices", "<EOS>", 19, 169, 346, 69, 291, "Mana", "Change", "<EOS>", 347, 77, 301, "Count", "<EOS>", 21, 174, "Dead", "Minion", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 89, 331, 139, 23, 179, "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "Boar", "_type": "Template5", "hole2": [{"hole3": [{"value": {"elts": [{"_type": "Template54", "hole1": [{"hole3": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}], "_type": "Template64", "hole1": {"_type": "Name", "id": "DeadMinionSelector"}, "hole0": "Count"}, {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "hole0": "ManaChange"}], "_type": "List"}, "_type": "keyword", "arg": "choices"}], "hole2": [{"_type": "Str", "s": "Boar"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -8.525358328811635, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, choices=[Buff(ManaChange(Count(DeadMinionSelector(players\n            =BothPlayer())), -1))])\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score_history": [-4.1961669921875e-05, -7.62939453125e-05, -1.4305104514278355e-06, -0.00013648608000949025, -3.570457920432091e-07, -0.00016331623191945255, -5.245203283266164e-06, -3.814697265625e-05, -0.0005283355712890625, -0.0036373138427734375, -7.2479248046875e-05, -9.5367431640625e-06, -2.0265579223632812e-06, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.00029754638671875, -0.0003604888916015625, -4.38690185546875e-05, -4.410734163684538e-06, -2.741813204920618e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.00010609157470753416, -1.9073486328125e-06, -3.0517578125e-05, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -2.8848648071289062e-05, -5.7220458984375e-06, -4.4345855712890625e-05, -9.5367431640625e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.000133514404296875, 0.0, -4.410743713378906e-05, -4.541872476693243e-05, -0.018835067749023438, -1.9073486328125e-06, -1.33514404296875e-05, -9.34600830078125e-05, -2.5868412194540724e-05, 0.0, -0.0002040863037109375, -6.249528884887695, -0.0003452301025390625, -0.7414220571517944, 0.0, -0.0036821365356445312, -0.000171661376953125, -0.045848846435546875, -0.00125885009765625, -0.12027549743652344, -0.0028200149536132812, -0.00016307830810546875, -0.0007190704345703125, -0.0005245208740234375, -0.2613353729248047, -0.5556764602661133, -0.012810826301574707, -1.1324854312988464e-05, -0.00026702880859375, 0.0, -0.5663285255432129, -8.058547973632812e-05, 0.0, -0.0003337860107421875, -0.0006389617919921875, -0.03151893615722656, -0.0001817941665649414, -2.3841855067985307e-07, -0.01868438720703125, -0.0002002716064453125, -0.014192461036145687, -0.0019211769104003906, -1.9073486328125e-06, -0.014700889587402344, -0.000148773193359375, -0.000885009765625, -0.0006885528564453125, -7.62939453125e-06, -0.0005642179166898131, 0.0, -5.543231964111328e-05, -1.33514404296875e-05, -0.0009152889251708984, 0.0, -5.7220458984375e-06, -4.57763671875e-05, -1.33514404296875e-05, -2.5033987185452133e-06, -1.1920928244535389e-07, -4.058536433149129e-06, -1.1920928244535389e-07], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Boar", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 95, 336, "choices", "<EOS>", 19, 169, 346, 69, 291, "Mana", "Change", "<EOS>", 347, 77, 302, "Count", "<EOS>", 21, 174, "Minion", "Selector", "<EOS>", 347, 51, 176, "Null", "<EOS>", 88, 325, "Both", "Player", "<EOS>", 89, 331, 139, 23, 179, "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "Boar", "_type": "Template5", "hole2": [{"hole3": [{"value": {"elts": [{"_type": "Template54", "hole1": [{"hole2": [{"value": "Null", "_type": "NameConstant"}, {"_type": "Template79", "hole0": "BothPlayer"}], "_type": "Template64", "hole1": {"_type": "Name", "id": "MinionSelector"}, "hole0": "Count"}, {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "hole0": "ManaChange"}], "_type": "List"}, "_type": "keyword", "arg": "choices"}], "hole2": [{"_type": "Str", "s": "Boar"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -8.674154868115536, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, choices=[Buff(ManaChange(Count(MinionSelector(Null,\n            BothPlayer())), -1))])\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score_history": [-4.1961669921875e-05, -7.62939453125e-05, -1.4305104514278355e-06, -0.00013648608000949025, -3.570457920432091e-07, -0.00016331623191945255, -5.245203283266164e-06, -3.814697265625e-05, -0.0005283355712890625, -0.0036373138427734375, -7.2479248046875e-05, -9.5367431640625e-06, -2.0265579223632812e-06, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.00029754638671875, -0.0003604888916015625, -4.38690185546875e-05, -4.410734163684538e-06, -2.741813204920618e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.00010609157470753416, -1.9073486328125e-06, -3.0517578125e-05, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -2.8848648071289062e-05, -5.7220458984375e-06, -4.4345855712890625e-05, -9.5367431640625e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.000133514404296875, 0.0, -4.410743713378906e-05, -4.541872476693243e-05, -0.018835067749023438, -1.9073486328125e-06, -1.33514404296875e-05, -9.34600830078125e-05, -2.5868412194540724e-05, 0.0, -0.0002040863037109375, -6.249528884887695, -0.0003452301025390625, -0.8694909811019897, 0.0, -0.000667572021484375, -9.34600830078125e-05, -0.004550933837890625, -0.0013370513916015625, -0.22027873992919922, -0.002695798873901367, -0.0002086162567138672, -0.00029754638671875, -0.0009746551513671875, -0.32812023162841797, -0.46534061431884766, -0.0126572847366333, -1.1801687833212782e-05, -0.000293731689453125, 0.0, -0.5522197484970093, -8.249282836914062e-05, 0.0, -0.0003490447998046875, -0.0006055831909179688, -0.033514976501464844, -0.00018393993377685547, -2.3841855067985307e-07, -0.018311500549316406, -0.000202178955078125, -0.014393567107617855, -0.0018792152404785156, -1.9073486328125e-06, -0.014993667602539062, -0.000179290771484375, -0.0008487701416015625, -0.000698089599609375, -7.62939453125e-06, -0.0005718472530134022, 0.0, -5.543231964111328e-05, -1.33514404296875e-05, -0.0009286403656005859, 0.0, -5.7220458984375e-06, -4.9591064453125e-05, -1.33514404296875e-05, -2.503398491171538e-06, -1.1920928244535389e-07, -3.7007484934292734e-06, -1.1920928244535389e-07], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Boar", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 95, 336, "buffs", "<EOS>", 19, 169, 346, 69, 291, "Mana", "Change", "<EOS>", 347, 77, 302, "Count", "<EOS>", 21, 174, "Minion", "Selector", "<EOS>", 347, 51, 176, "Null", "<EOS>", 88, 325, "Both", "Player", "<EOS>", 89, 331, 139, 23, 179, "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "Boar", "_type": "Template5", "hole2": [{"hole3": [{"value": {"elts": [{"_type": "Template54", "hole1": [{"hole2": [{"value": "Null", "_type": "NameConstant"}, {"_type": "Template79", "hole0": "BothPlayer"}], "_type": "Template64", "hole1": {"_type": "Name", "id": "MinionSelector"}, "hole0": "Count"}, {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "hole0": "ManaChange"}], "_type": "List"}, "_type": "keyword", "arg": "buffs"}], "hole2": [{"_type": "Str", "s": "Boar"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -8.822169532543356, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, buffs=[Buff(ManaChange(Count(MinionSelector(Null,\n            BothPlayer())), -1))])\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score_history": [-4.1961669921875e-05, -7.62939453125e-05, -1.4305104514278355e-06, -0.00013648608000949025, -3.570457920432091e-07, -0.00016331623191945255, -5.245203283266164e-06, -3.814697265625e-05, -7.675292015075684, -0.000453948974609375, 0.0, -0.00141952745616436, -6.198881692398572e-06, 0.0, -0.002430558204650879, -1.9073486328125e-06, -1.7286456823349, 0.0, -0.3269367218017578, 0.0, -6.4849853515625e-05, 0.0, -3.814697265625e-05, 0.0, -0.0005820989608764648, 0.0, -1.33514404296875e-05, 0.0, -0.003139972686767578, 0.0, -0.000240325927734375, -4.9591064453125e-05, -3.814697265625e-06, 4.7683329285064247e-07, -5.960462772236497e-07, -3.6315759643912315e-07, -4.768370445162873e-07], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Boar", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "COMMON", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "Boar", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "COMMON", "hole0": "Boar", "_type": "Template26", "hole2": "COMMON", "hole1": 1}], "hole1": "MinionCard"}, "score": -9.739782908548761, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            COMMON=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}]}
{"index": 16, "beams": [{"score_history": [-0.0006275177001953125, -0.0003147125244140625, -0.0020334296859800816, -7.688998448429629e-05, -6.91385503159836e-05, -7.450580596923828e-05, -2.3841830625315197e-06, -9.1552734375e-05, -0.000133514404296875, -0.0012493133544921875, -1.33514404296875e-05, 0.0, -6.7470311478246e-05, -1.1444091796875e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0024623870849609375, -7.62939453125e-05, -0.0009174346923828125, -1.7881377516459906e-06, -0.0013324019964784384, -4.38690185546875e-05, -1.1444091796875e-05, -1.1920917586394353e-07, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.110004425048828e-05, -3.814697265625e-06, -0.0006554126157425344, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -5.91278076171875e-05, -1.1444091796875e-05, -0.00057220458984375, -5.7220458984375e-06, -0.000347137451171875, -2.288818359375e-05, -7.62939453125e-06, -0.00023305416107177734, -1.9073486328125e-06, -0.011335372924804688, -2.288818359375e-05, -0.00045013427734375, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.000301361083984375, -4.76837158203125e-05, -2.86102294921875e-05, -1.71661376953125e-05, -0.03150200843811035, 0.0, -0.0009958744049072266, 0.0, -3.933906555175781e-06, 0.0, -4.76837158203125e-05, -0.0003032684326171875, -2.384185791015625e-06, -5.9604644775390625e-06, -0.01857280731201172, -0.0021266937255859375, -0.0001506805419921875, -0.000400543212890625, -0.00020599365234375, -5.7220458984375e-06, 0.0, -5.6028297876764555e-06, -5.14984130859375e-05, -5.841255187988281e-06, 0.0, -7.748603820800781e-06, 0.0, -5.280971163301729e-05, -7.152555099310121e-07, -0.02556896209716797, -0.0004425048828125, -0.000597357633523643, -0.0024012450594455004, -0.00031113624572753906, -2.2649765014648438e-06, -0.0011394020402804017, 0.0, -0.00064849853515625, -9.5367431640625e-06, -0.027243614196777344, -0.0007839202880859375, -0.0020422935485839844, -7.545940025011078e-05], "choice_history": [97, 285, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Charge", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 131, 289, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 106, 155, 26, 236, "<UNK>", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": "change_attack", "_type": "Template52", "hole1": "target", "hole0": "self"}, {"value": {"_type": "Template37", "hole0": "<UNK>"}, "_type": "Expr"}], "hole3": "use", "hole0": "Charge", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Charge"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -0.13961263883481934, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n"}, {"score_history": [-0.0006275177001953125, -0.0003147125244140625, -0.0020334296859800816, -7.688998448429629e-05, -6.91385503159836e-05, -7.450580596923828e-05, -2.3841830625315197e-06, -9.1552734375e-05, -0.000133514404296875, -0.0012493133544921875, -1.33514404296875e-05, 0.0, -6.7470311478246e-05, -1.1444091796875e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0024623870849609375, -7.62939453125e-05, -0.0009174346923828125, -1.7881377516459906e-06, -0.0013324019964784384, -4.38690185546875e-05, -1.1444091796875e-05, -1.1920917586394353e-07, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.110004425048828e-05, -3.814697265625e-06, -0.0006554126157425344, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -5.91278076171875e-05, -1.1444091796875e-05, -0.00057220458984375, -5.7220458984375e-06, -0.000347137451171875, -2.288818359375e-05, -7.62939453125e-06, -0.00023305416107177734, -1.9073486328125e-06, -0.011335372924804688, -2.288818359375e-05, -0.00045013427734375, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.000301361083984375, -4.76837158203125e-05, -2.86102294921875e-05, -1.71661376953125e-05, -3.7456743717193604, 0.0, -0.0006777048110961914, 0.0, -2.0265579223632812e-06, 0.0, -5.14984130859375e-05, -0.0001506805419921875, -2.622604142743512e-06, -6.079673767089844e-06, -0.033682823181152344, -0.0023956298828125, -0.000125885009765625, -0.00035858154296875, -0.0001964569091796875, -5.7220458984375e-06, 0.0, -5.6028297876764555e-06, -4.76837158203125e-05, -5.841255187988281e-06, 0.0, -7.748603820800781e-06, 0.0, -5.0783153710654005e-05, -7.152555099310121e-07, -0.024410247802734375, -0.000453948974609375, -0.0007282494334504008, -0.0022628065198659897, -0.00030744075775146484, -2.2649765014648438e-06, -0.001129388459958136, 0.0, -0.00067138671875, -9.5367431640625e-06, -0.02557086944580078, -0.000858306884765625, -0.0016484260559082031, -7.545940025011078e-05], "choice_history": [97, 285, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Charge", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 131, 289, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 106, 155, 26, 236, "<UNK>", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": "change_attack", "_type": "Template52", "hole1": "target", "hole0": "self"}, {"value": {"_type": "Template37", "hole0": "<UNK>"}, "_type": "Expr"}], "hole3": "use", "hole0": "Charge", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Charge"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -3.8654754629598074, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n"}, {"score_history": [-0.0006275177001953125, -0.0003147125244140625, -0.0020334296859800816, -7.688998448429629e-05, -6.91385503159836e-05, -7.450580596923828e-05, -2.3841830625315197e-06, -9.1552734375e-05, -0.000133514404296875, -0.0012493133544921875, -1.33514404296875e-05, 0.0, -6.7470311478246e-05, -1.1444091796875e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0024623870849609375, -7.62939453125e-05, -0.0009174346923828125, -1.7881377516459906e-06, -0.0013324019964784384, -4.38690185546875e-05, -1.1444091796875e-05, -1.1920917586394353e-07, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.110004425048828e-05, -3.814697265625e-06, -0.0006554126157425344, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -5.91278076171875e-05, -1.1444091796875e-05, -0.00057220458984375, -5.7220458984375e-06, -0.000347137451171875, -2.288818359375e-05, -7.62939453125e-06, -0.00023305416107177734, -1.9073486328125e-06, -0.011335372924804688, -2.288818359375e-05, -0.00045013427734375, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.000301361083984375, -4.76837158203125e-05, -2.86102294921875e-05, -1.71661376953125e-05, -0.03150200843811035, 0.0, -0.0009958744049072266, 0.0, -3.933906555175781e-06, 0.0, -4.76837158203125e-05, -0.0003032684326171875, -2.384185791015625e-06, -5.9604644775390625e-06, -0.01857280731201172, -0.0021266937255859375, -0.0001506805419921875, -0.000400543212890625, -0.00020599365234375, -5.7220458984375e-06, 0.0, -5.6028297876764555e-06, -5.14984130859375e-05, -5.841255187988281e-06, 0.0, -7.748603820800781e-06, 0.0, -5.280971163301729e-05, -7.152555099310121e-07, -0.02556896209716797, -0.0004425048828125, -0.000597357633523643, -0.0024012450594455004, -0.00031113624572753906, -2.2649765014648438e-06, -0.0011394020402804017, 0.0, -0.00064849853515625, -9.5367431640625e-06, -4.0254364013671875, -0.000392913818359375, -0.0006103515625, 0.0, -1.3470632438838948e-05, -5.91278076171875e-05, -3.814697265625e-06, -1.1920928244535389e-07, -1.3589859008789062e-05, -2.3841855067985307e-07, -7.009504770394415e-05, -7.152543730626348e-06], "choice_history": [97, 285, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Charge", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 131, 289, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": "change_attack", "_type": "Template52", "hole1": "target", "hole0": "self"}, {"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}], "hole3": "use", "hole0": "Charge", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Charge"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.136074626364767, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        super().use(player, game)\n"}, {"score_history": [-0.0006275177001953125, -0.0003147125244140625, -0.0020334296859800816, -7.688998448429629e-05, -6.91385503159836e-05, -7.450580596923828e-05, -2.3841830625315197e-06, -9.1552734375e-05, -0.000133514404296875, -0.0012493133544921875, -1.33514404296875e-05, 0.0, -6.7470311478246e-05, -1.1444091796875e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0024623870849609375, -7.62939453125e-05, -0.0009174346923828125, -1.7881377516459906e-06, -0.0013324019964784384, -4.38690185546875e-05, -1.1444091796875e-05, -1.1920917586394353e-07, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.110004425048828e-05, -3.814697265625e-06, -0.0006554126157425344, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -5.91278076171875e-05, -1.1444091796875e-05, -0.00057220458984375, -5.7220458984375e-06, -0.000347137451171875, -2.288818359375e-05, -7.62939453125e-06, -0.00023305416107177734, -1.9073486328125e-06, -0.011335372924804688, -2.288818359375e-05, -0.00045013427734375, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.000301361083984375, -4.76837158203125e-05, -2.86102294921875e-05, -1.71661376953125e-05, -0.03150200843811035, 0.0, -0.0009958744049072266, 0.0, -3.933906555175781e-06, 0.0, -4.76837158203125e-05, -0.0003032684326171875, -2.384185791015625e-06, -5.9604644775390625e-06, -0.01857280731201172, -0.0021266937255859375, -0.0001506805419921875, -0.000400543212890625, -0.00020599365234375, -5.7220458984375e-06, 0.0, -5.6028297876764555e-06, -5.14984130859375e-05, -5.841255187988281e-06, 0.0, -7.748603820800781e-06, 0.0, -5.280971163301729e-05, -7.152555099310121e-07, -0.02556896209716797, -0.0004425048828125, -0.000597357633523643, -0.0024012450594455004, -0.00031113624572753906, -2.2649765014648438e-06, -0.0011394020402804017, 0.0, -0.00064849853515625, -9.5367431640625e-06, -5.205456733703613, -2.09808349609375e-05, -0.018793106079101562, 0.0, -0.0002079010009765625, -5.7220458984375e-06, -0.009113550186157227, 0.0, -1.1920928955078125e-05, -1.1920928244535389e-07, -0.03899764642119408, -1.9073486328125e-06], "choice_history": [97, 285, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Charge", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 131, 289, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 106, 155, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "bounce", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": "change_attack", "_type": "Template52", "hole1": "target", "hole0": "self"}, {"value": {"_type": "Template76", "hole1": "bounce", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, "_type": "Expr"}], "hole3": "use", "hole0": "Charge", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Charge"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.382076939159894, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.bounce()\n"}, {"score_history": [-0.0006275177001953125, -0.0003147125244140625, -0.0020334296859800816, -7.688998448429629e-05, -6.91385503159836e-05, -7.450580596923828e-05, -2.3841830625315197e-06, -9.1552734375e-05, -0.000133514404296875, -0.0012493133544921875, -1.33514404296875e-05, 0.0, -6.7470311478246e-05, -1.1444091796875e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0024623870849609375, -7.62939453125e-05, -0.0009174346923828125, -1.7881377516459906e-06, -0.0013324019964784384, -4.38690185546875e-05, -1.1444091796875e-05, -1.1920917586394353e-07, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.110004425048828e-05, -3.814697265625e-06, -0.0006554126157425344, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -5.91278076171875e-05, -1.1444091796875e-05, -0.00057220458984375, -5.7220458984375e-06, -0.000347137451171875, -2.288818359375e-05, -7.62939453125e-06, -0.00023305416107177734, -1.9073486328125e-06, -0.011335372924804688, -2.288818359375e-05, -0.00045013427734375, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.000301361083984375, -4.76837158203125e-05, -2.86102294921875e-05, -1.71661376953125e-05, -5.58970308303833, 0.0, -0.0005439519882202148, 0.0, -3.933906555175781e-06, 0.0, -4.57763671875e-05, -0.0001430511474609375, -2.9802317840221804e-06, -7.987022399902344e-06, -0.047237396240234375, -0.0017833709716796875, -0.00019073486328125, -0.0004253387451171875, -0.000217437744140625, -5.7220458984375e-06, 0.0, -5.245203283266164e-06, -4.00543212890625e-05, -3.933906555175781e-06, 0.0, -7.748603820800781e-06, 0.0, -5.280971163301729e-05, -7.152555099310121e-07, -0.026946067810058594, -0.00041961669921875, -0.0006272791652008891, -0.002508628647774458, -0.00031125545501708984, -2.2649765014648438e-06, -0.0011200901353731751, 0.0, -0.0006198883056640625, -9.5367431640625e-06, -0.02730274200439453, -0.0008029937744140625, -0.0019299983978271484, -7.390967948595062e-05], "choice_history": [97, 285, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Charge", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 131, 289, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 106, 155, 26, 236, "<UNK>", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": "change_attack", "_type": "Template52", "hole1": "target", "hole0": "self"}, {"value": {"_type": "Template37", "hole0": "<UNK>"}, "_type": "Expr"}], "hole3": "use", "hole0": "Charge", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Charge"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.726994216187791, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n"}, {"score_history": [-0.0006275177001953125, -0.0003147125244140625, -6.199042797088623, -2.3841855067985307e-07, -1.7881369558381266e-06, -0.0001373291015625, -6.794906312279636e-06, -0.0001354217529296875, -0.001384735107421875, -0.0005931854248046875, -1.52587890625e-05, 0.0, -6.6755099396687e-05, -9.5367431640625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0030956268310546875, -7.62939453125e-05, -0.0008392333984375, -1.7881377516459906e-06, -0.001091241487301886, -4.57763671875e-05, -1.1444091796875e-05, -2.3841835172788706e-07, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.110004425048828e-05, -3.814697265625e-06, -0.000630021037068218, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -5.7220458984375e-05, -1.1444091796875e-05, -0.0005664825439453125, -5.7220458984375e-06, -0.0003147125244140625, -2.288818359375e-05, -7.62939453125e-06, -0.0002391338348388672, -1.9073486328125e-06, -0.011566162109375, -2.288818359375e-05, -0.00046539306640625, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.000301361083984375, -4.76837158203125e-05, -2.86102294921875e-05, -1.71661376953125e-05, -0.03204464912414551, 0.0, -0.001005411148071289, 0.0, -3.933906555175781e-06, 0.0, -4.76837158203125e-05, -0.0003032684326171875, -2.384185791015625e-06, -5.9604644775390625e-06, -0.019063949584960938, -0.002140045166015625, -0.0001506805419921875, -0.000400543212890625, -0.00020599365234375, -5.7220458984375e-06, 0.0, -5.722038622479886e-06, -5.14984130859375e-05, -5.841255187988281e-06, 0.0, -7.748603820800781e-06, 0.0, -5.280971163301729e-05, -7.152555099310121e-07, -0.02549266815185547, -0.0004425048828125, -0.0006002186564728618, -0.002395893447101116, -0.00031113624572753906, -2.2649765014648438e-06, -0.0011394020402804017, 0.0, -0.00064849853515625, -9.5367431640625e-06, -0.02719879150390625, -0.00078582763671875, -0.002029895782470703, -7.545940025011078e-05], "choice_history": [97, 285, "<UNK>", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Charge", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 131, 289, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 106, 155, 26, 236, "<UNK>", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": "change_attack", "_type": "Template52", "hole1": "target", "hole0": "self"}, {"value": {"_type": "Template37", "hole0": "<UNK>"}, "_type": "Expr"}], "hole3": "use", "hole0": "<UNK>", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Charge"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.338614485857391, "inferred_code": "class <UNK>(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n"}, {"score_history": [-0.0006275177001953125, -0.0003147125244140625, -0.0020334296859800816, -7.688998448429629e-05, -6.91385503159836e-05, -7.450580596923828e-05, -2.3841830625315197e-06, -9.1552734375e-05, -0.000133514404296875, -0.0012493133544921875, -1.33514404296875e-05, 0.0, -6.7470311478246e-05, -1.1444091796875e-05, -2.47955322265625e-05, -3.814697265625e-06, -6.035943031311035, -0.000835418701171875, -0.0001373291015625, -5.483612312673358e-06, -0.0007866621017456055, -6.29425048828125e-05, -5.7220458984375e-06, -1.1920917586394353e-07, -5.7220458984375e-06, -3.24249267578125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -7.62939453125e-06, -3.254413604736328e-05, -3.814697265625e-06, -0.001668095588684082, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.0001316070556640625, -5.7220458984375e-06, -0.0019245147705078125, -1.9073486328125e-06, -0.0003566741943359375, -2.09808349609375e-05, -3.445148468017578e-05, 0.0, -0.0006237030029296875, -0.000705718994140625, -2.6702880859375e-05, -0.00021409988403320312, 0.0, -0.0001926422119140625, -1.71661376953125e-05, -5.340576171875e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -0.0001239776611328125, -2.300739288330078e-05, -1.52587890625e-05, -3.4332275390625e-05, -0.2432098388671875, -2.1457672119140625e-06, -0.0001227855682373047, 0.0, -4.172325134277344e-06, 0.0, -7.05718994140625e-05, -0.0001983642578125, -2.503394853192731e-06, -4.291534423828125e-06, -0.034674644470214844, -0.0025005340576171875, -0.0001392364501953125, -0.0003185272216796875, -0.000171661376953125, -5.7220458984375e-06, 0.0, -6.079665126890177e-06, -5.53131103515625e-05, -5.841255187988281e-06, 0.0, -7.748603820800781e-06, 0.0, -5.0663944421103224e-05, -7.152555099310121e-07, -0.021424293518066406, -0.0004329681396484375, -0.0006923673790879548, -0.0024815162178128958, -0.00031304359436035156, -2.2649765014648438e-06, -0.0011373754823580384, 0.0, -0.0007038116455078125, -9.5367431640625e-06, -0.025571823120117188, -0.0008678436279296875, -0.0016437768936157227, -7.724754686933011e-05], "choice_history": [97, 285, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Charge", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 51, 175, "False", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 131, 289, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 106, 155, 26, 236, "<UNK>", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": "change_attack", "_type": "Template52", "hole1": "target", "hole0": "self"}, {"value": {"_type": "Template37", "hole0": "<UNK>"}, "_type": "Expr"}], "hole3": "use", "hole0": "Charge", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Charge"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.385859854721616, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, True, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n"}, {"score_history": [-0.0006275177001953125, -0.0003147125244140625, -0.0020334296859800816, -7.688998448429629e-05, -6.91385503159836e-05, -7.450580596923828e-05, -2.3841830625315197e-06, -9.1552734375e-05, -0.000133514404296875, -0.0012493133544921875, -1.33514404296875e-05, 0.0, -6.7470311478246e-05, -1.1444091796875e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0024623870849609375, -7.62939453125e-05, -0.0009174346923828125, -1.7881377516459906e-06, -0.0013324019964784384, -4.38690185546875e-05, -1.1444091796875e-05, -1.1920917586394353e-07, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.110004425048828e-05, -3.814697265625e-06, -0.0006554126157425344, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -5.91278076171875e-05, -1.1444091796875e-05, -0.00057220458984375, -5.7220458984375e-06, -0.000347137451171875, -2.288818359375e-05, -7.62939453125e-06, -0.00023305416107177734, -1.9073486328125e-06, -0.011335372924804688, -2.288818359375e-05, -0.00045013427734375, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.000301361083984375, -4.76837158203125e-05, -2.86102294921875e-05, -1.71661376953125e-05, -0.03150200843811035, 0.0, -0.0009958744049072266, 0.0, -3.933906555175781e-06, 0.0, -4.76837158203125e-05, -0.0003032684326171875, -2.384185791015625e-06, -5.9604644775390625e-06, -0.01857280731201172, -0.0021266937255859375, -0.0001506805419921875, -0.000400543212890625, -0.00020599365234375, -5.7220458984375e-06, 0.0, -5.6028297876764555e-06, -5.14984130859375e-05, -5.841255187988281e-06, 0.0, -7.748603820800781e-06, 0.0, -5.280971163301729e-05, -7.152555099310121e-07, -0.02556896209716797, -0.0004425048828125, -0.000597357633523643, -6.04263973236084, -0.258068323135376, -0.005048513412475586, -2.3841855067985307e-07, -0.0012896059779450297, -1.9073486328125e-06, -0.0008182525634765625, -7.62939453125e-06, -0.025028228759765625, -0.0009012222290039062, -0.001981496810913086, -7.879726763349026e-05], "choice_history": [97, 285, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Charge", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 131, 289, "self", "Charge", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 106, 155, 26, 236, "<UNK>", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": "change_attack", "_type": "Template52", "hole1": "target", "hole0": "selfCharge"}, {"value": {"_type": "Template37", "hole0": "<UNK>"}, "_type": "Expr"}], "hole3": "use", "hole0": "Charge", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Charge"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.440819215479991, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        selfCharge.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n"}, {"score_history": [-0.0006275177001953125, -0.0003147125244140625, -0.0020334296859800816, -7.688998448429629e-05, -6.91385503159836e-05, -7.450580596923828e-05, -2.3841830625315197e-06, -9.1552734375e-05, -0.000133514404296875, -0.0012493133544921875, -1.33514404296875e-05, 0.0, -6.7470311478246e-05, -1.1444091796875e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0024623870849609375, -7.62939453125e-05, -0.0009174346923828125, -1.7881377516459906e-06, -0.0013324019964784384, -4.38690185546875e-05, -1.1444091796875e-05, -1.1920917586394353e-07, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.110004425048828e-05, -3.814697265625e-06, -0.0006554126157425344, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -5.91278076171875e-05, -1.1444091796875e-05, -0.00057220458984375, -5.7220458984375e-06, -0.000347137451171875, -2.288818359375e-05, -7.62939453125e-06, -0.00023305416107177734, -1.9073486328125e-06, -0.011335372924804688, -2.288818359375e-05, -0.00045013427734375, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.000301361083984375, -4.76837158203125e-05, -2.86102294921875e-05, -1.71661376953125e-05, -0.03150200843811035, 0.0, -0.0009958744049072266, 0.0, -3.933906555175781e-06, 0.0, -4.76837158203125e-05, -0.0003032684326171875, -2.384185791015625e-06, -5.9604644775390625e-06, -0.01857280731201172, -0.0021266937255859375, -0.0001506805419921875, -0.000400543212890625, -0.00020599365234375, -5.7220458984375e-06, 0.0, -5.6028297876764555e-06, -5.14984130859375e-05, -5.841255187988281e-06, 0.0, -7.748603820800781e-06, 0.0, -5.280971163301729e-05, -7.152555099310121e-07, -6.000170707702637, -0.0002002716064453125, -8.392333984375e-05, 0.0, -7.43865966796875e-05, -3.814697265625e-05, -0.08586990833282471, 0.0, -9.1552734375e-05, -2.0265579223632812e-06, -0.13973617553710938, 0.0, -0.0031069195829331875, -1.9073486328125e-06, -0.08161354064941406, -0.0002460479736328125, -0.001316070556640625, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0013589859008789062, 0.0, -5.53131103515625e-05, 0.0, -0.45802319049835205, -3.814697265625e-06, -0.003026171587407589, -1.9073486328125e-06], "choice_history": [97, 285, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Charge", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 133, 304, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "4", "<EOS>", 133, 304, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": 4, "_type": "Template65", "hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"hole2": 4, "_type": "Template65", "hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "hole3": "use", "hole0": "Charge", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Charge"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.853390300005572, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.change_attack(4)\n"}, {"score_history": [-0.0006275177001953125, -0.0003147125244140625, -0.0020334296859800816, -7.688998448429629e-05, -6.91385503159836e-05, -7.450580596923828e-05, -2.3841830625315197e-06, -9.1552734375e-05, -0.000133514404296875, -0.0012493133544921875, -1.33514404296875e-05, 0.0, -6.7470311478246e-05, -1.1444091796875e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0024623870849609375, -7.62939453125e-05, -0.0009174346923828125, -1.7881377516459906e-06, -0.0013324019964784384, -4.38690185546875e-05, -1.1444091796875e-05, -1.1920917586394353e-07, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.110004425048828e-05, -3.814697265625e-06, -0.0006554126157425344, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -5.91278076171875e-05, -1.1444091796875e-05, -0.00057220458984375, -5.7220458984375e-06, -0.000347137451171875, -2.288818359375e-05, -7.62939453125e-06, -0.00023305416107177734, -1.9073486328125e-06, -0.011335372924804688, -2.288818359375e-05, -0.00045013427734375, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.000301361083984375, -4.76837158203125e-05, -2.86102294921875e-05, -1.71661376953125e-05, -0.03150200843811035, 0.0, -0.0009958744049072266, 0.0, -3.933906555175781e-06, 0.0, -4.76837158203125e-05, -0.0003032684326171875, -2.384185791015625e-06, -5.9604644775390625e-06, -0.01857280731201172, -0.0021266937255859375, -0.0001506805419921875, -0.000400543212890625, -0.00020599365234375, -5.7220458984375e-06, 0.0, -5.6028297876764555e-06, -5.14984130859375e-05, -5.841255187988281e-06, 0.0, -7.748603820800781e-06, 0.0, -5.280971163301729e-05, -7.152555099310121e-07, -0.02556896209716797, -0.0004425048828125, -0.000597357633523643, -0.0024012450594455004, -0.00031113624572753906, -2.2649765014648438e-06, -0.0011394020402804017, 0.0, -0.00064849853515625, -9.5367431640625e-06, -0.027243614196777344, -0.0007839202880859375, -6.767988681793213, -0.019381046295166016], "choice_history": [97, 285, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Charge", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 131, 289, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": "change_attack", "_type": "Template52", "hole1": "target", "hole0": "self"}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "Charge", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Charge"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.924864613974364, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score_history": [-0.0006275177001953125, -0.0003147125244140625, -0.0020334296859800816, -7.688998448429629e-05, -6.91385503159836e-05, -7.450580596923828e-05, -2.3841830625315197e-06, -9.1552734375e-05, -0.000133514404296875, -0.0012493133544921875, -1.33514404296875e-05, 0.0, -6.7470311478246e-05, -1.1444091796875e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0024623870849609375, -7.62939453125e-05, -0.0009174346923828125, -1.7881377516459906e-06, -0.0013324019964784384, -4.38690185546875e-05, -1.1444091796875e-05, -1.1920917586394353e-07, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.110004425048828e-05, -3.814697265625e-06, -0.0006554126157425344, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -5.91278076171875e-05, -1.1444091796875e-05, -0.00057220458984375, -5.7220458984375e-06, -0.000347137451171875, -2.288818359375e-05, -7.62939453125e-06, -0.00023305416107177734, -1.9073486328125e-06, -0.011335372924804688, -2.288818359375e-05, -0.00045013427734375, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.000301361083984375, -4.76837158203125e-05, -2.86102294921875e-05, -1.71661376953125e-05, -0.03150200843811035, 0.0, -0.0009958744049072266, 0.0, -3.933906555175781e-06, 0.0, -4.76837158203125e-05, -0.0003032684326171875, -2.384185791015625e-06, -5.9604644775390625e-06, -0.01857280731201172, -0.0021266937255859375, -0.0001506805419921875, -0.000400543212890625, -0.00020599365234375, -5.7220458984375e-06, 0.0, -5.6028297876764555e-06, -5.14984130859375e-05, -5.841255187988281e-06, 0.0, -7.748603820800781e-06, 0.0, -5.280971163301729e-05, -7.152555099310121e-07, -6.000170707702637, -0.0002002716064453125, -8.392333984375e-05, 0.0, -7.43865966796875e-05, -3.814697265625e-05, -0.08586990833282471, 0.0, -9.1552734375e-05, -2.0265579223632812e-06, -0.13973617553710938, 0.0, -0.0031069195829331875, -1.9073486328125e-06, -0.08161354064941406, -0.0002460479736328125, -0.001316070556640625, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0013589859008789062, 0.0, -5.53131103515625e-05, 0.0, -1.0120841264724731, -1.9073486328125e-06, -0.003254758659750223, -1.9073486328125e-06], "choice_history": [97, 285, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Charge", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 133, 304, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "4", "<EOS>", 133, 304, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": 4, "_type": "Template65", "hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"hole2": 4, "_type": "Template65", "hole1": "increase_health", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "hole3": "use", "hole0": "Charge", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Charge"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.4076779157034025, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n"}, {"score_history": [-0.0006275177001953125, -0.0003147125244140625, -0.0020334296859800816, -7.688998448429629e-05, -6.91385503159836e-05, -7.450580596923828e-05, -2.3841830625315197e-06, -9.1552734375e-05, -0.000133514404296875, -0.0012493133544921875, -1.33514404296875e-05, 0.0, -6.7470311478246e-05, -1.1444091796875e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0024623870849609375, -7.62939453125e-05, -0.0009174346923828125, -1.7881377516459906e-06, -0.0013324019964784384, -4.38690185546875e-05, -1.1444091796875e-05, -1.1920917586394353e-07, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.110004425048828e-05, -3.814697265625e-06, -0.0006554126157425344, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -5.91278076171875e-05, -1.1444091796875e-05, -0.00057220458984375, -5.7220458984375e-06, -0.000347137451171875, -2.288818359375e-05, -7.62939453125e-06, -0.00023305416107177734, -1.9073486328125e-06, -0.011335372924804688, -2.288818359375e-05, -0.00045013427734375, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.000301361083984375, -4.76837158203125e-05, -2.86102294921875e-05, -1.71661376953125e-05, -0.03150200843811035, 0.0, -0.0009958744049072266, 0.0, -3.933906555175781e-06, 0.0, -4.76837158203125e-05, -0.0003032684326171875, -2.384185791015625e-06, -5.9604644775390625e-06, -4.5719804763793945, -0.0002841949462890625, -4.1961669921875e-05, -6.29425048828125e-05, -0.0001544952392578125, -3.814697265625e-06, 0.0, -6.318082796497038e-06, -3.4332275390625e-05, -4.0531158447265625e-06, 0.0, -7.748603820800781e-06, 0.0, -4.3153759179404005e-05, -4.768370445162873e-07, -1.015512466430664, -0.0004520416259765625, -0.00010752677917480469, -0.0018077681306749582, -0.0005352497100830078, -2.1457672119140625e-06, -0.0022652146872133017, 0.0, -0.6343603134155273, -7.43865966796875e-05, -0.0001010894775390625, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -4.971027374267578e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.1423025131225586, 0.0, -0.0035531518515199423, 0.0, -0.1701068878173828, -5.53131103515625e-05, -0.0001239776611328125, 0.0, -4.57763671875e-05, 0.0, -4.38690185546875e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.05198383331298828, -7.62939453125e-06, -3.814697265625e-06, -1.1607856750488281, -0.000698089599609375, -0.09325159341096878, -0.0002595186233520508, -0.00975085236132145, -0.0043811798095703125, -4.291525328881107e-06, -0.14426614344120026, -1.9073486328125e-06], "choice_history": [97, 285, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Charge", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 131, 289, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 133, 304, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", "4", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 346, 68, 288, "Buff", "<EOS>", "Spell", "Damage", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": "change_attack", "_type": "Template52", "hole1": "target", "hole0": "self"}, {"hole2": 4, "_type": "Template65", "hole1": "increase_health", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"hole2": [{"hole2": 1, "_type": "Template51", "hole1": "SpellDamage", "hole0": "Buff"}], "_type": "Template77", "hole1": "add_buff", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "hole3": "use", "hole0": "Charge", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Charge"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -8.066357793798034, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(4)\n        self.target.add_buff(Buff(SpellDamage(1)))\n"}, {"score_history": [-0.0006275177001953125, -0.0003147125244140625, -0.0020334296859800816, -7.688998448429629e-05, -6.91385503159836e-05, -7.450580596923828e-05, -2.3841830625315197e-06, -9.1552734375e-05, -0.000133514404296875, -0.0012493133544921875, -1.33514404296875e-05, 0.0, -6.7470311478246e-05, -1.1444091796875e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0024623870849609375, -7.62939453125e-05, -0.0009174346923828125, -1.7881377516459906e-06, -0.0013324019964784384, -4.38690185546875e-05, -1.1444091796875e-05, -1.1920917586394353e-07, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.110004425048828e-05, -3.814697265625e-06, -0.0006554126157425344, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -5.91278076171875e-05, -1.1444091796875e-05, -0.00057220458984375, -5.7220458984375e-06, -0.000347137451171875, -2.288818359375e-05, -7.62939453125e-06, -0.00023305416107177734, -1.9073486328125e-06, -0.011335372924804688, -2.288818359375e-05, -0.00045013427734375, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.000301361083984375, -4.76837158203125e-05, -2.86102294921875e-05, -1.71661376953125e-05, -0.03150200843811035, 0.0, -0.0009958744049072266, 0.0, -3.933906555175781e-06, 0.0, -4.76837158203125e-05, -0.0003032684326171875, -2.384185791015625e-06, -5.9604644775390625e-06, -4.5719804763793945, -0.0002841949462890625, -4.1961669921875e-05, -6.29425048828125e-05, -0.0001544952392578125, -3.814697265625e-06, 0.0, -6.318082796497038e-06, -3.4332275390625e-05, -4.0531158447265625e-06, 0.0, -7.748603820800781e-06, 0.0, -4.3153759179404005e-05, -4.768370445162873e-07, -1.015512466430664, -0.0004520416259765625, -0.00010752677917480469, -0.0018077681306749582, -0.0005352497100830078, -2.1457672119140625e-06, -0.0022652146872133017, 0.0, -0.6343603134155273, -7.43865966796875e-05, -0.0001010894775390625, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -4.971027374267578e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.1423025131225586, 0.0, -0.0035531518515199423, 0.0, -0.1701068878173828, -5.53131103515625e-05, -0.0001239776611328125, 0.0, -4.57763671875e-05, 0.0, -4.38690185546875e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.05198383331298828, -7.62939453125e-06, -3.814697265625e-06, -1.4794063568115234, -0.004871368408203125, -0.3724147081375122, 0.0], "choice_history": [97, 285, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Charge", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 131, 289, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 133, 304, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", "4", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 346, 66, 279, "3", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": "change_attack", "_type": "Template52", "hole1": "target", "hole0": "self"}, {"hole2": 4, "_type": "Template65", "hole1": "increase_health", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"hole2": [{"_type": "Template47", "hole0": 3}], "_type": "Template77", "hole1": "add_buff", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "hole3": "use", "hole0": "Charge", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Charge"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -8.50965097598646, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(4)\n        self.target.add_buff(Buff(ChangeAttack(3)))\n"}, {"score_history": [-0.0006275177001953125, -0.0003147125244140625, -0.0020334296859800816, -7.688998448429629e-05, -6.91385503159836e-05, -7.450580596923828e-05, -2.3841830625315197e-06, -9.1552734375e-05, -0.000133514404296875, -0.0012493133544921875, -1.33514404296875e-05, 0.0, -6.7470311478246e-05, -1.1444091796875e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0024623870849609375, -7.62939453125e-05, -0.0009174346923828125, -1.7881377516459906e-06, -0.0013324019964784384, -4.38690185546875e-05, -1.1444091796875e-05, -1.1920917586394353e-07, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.110004425048828e-05, -3.814697265625e-06, -0.0006554126157425344, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -5.91278076171875e-05, -1.1444091796875e-05, -0.00057220458984375, -5.7220458984375e-06, -0.000347137451171875, -2.288818359375e-05, -7.62939453125e-06, -0.00023305416107177734, -1.9073486328125e-06, -0.011335372924804688, -2.288818359375e-05, -0.00045013427734375, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.000301361083984375, -4.76837158203125e-05, -2.86102294921875e-05, -1.71661376953125e-05, -0.03150200843811035, 0.0, -0.0009958744049072266, 0.0, -3.933906555175781e-06, 0.0, -4.76837158203125e-05, -0.0003032684326171875, -2.384185791015625e-06, -5.9604644775390625e-06, -4.5719804763793945, -0.0002841949462890625, -4.1961669921875e-05, -6.29425048828125e-05, -0.0001544952392578125, -3.814697265625e-06, 0.0, -6.318082796497038e-06, -3.4332275390625e-05, -4.0531158447265625e-06, 0.0, -7.748603820800781e-06, 0.0, -4.3153759179404005e-05, -4.768370445162873e-07, -1.015512466430664, -0.0004520416259765625, -0.00010752677917480469, -0.0018077681306749582, -0.0005352497100830078, -2.1457672119140625e-06, -0.0022652146872133017, 0.0, -0.6343603134155273, -7.43865966796875e-05, -0.0001010894775390625, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -4.971027374267578e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.1423025131225586, 0.0, -0.0035531518515199423, 0.0, -0.1701068878173828, -5.53131103515625e-05, -0.0001239776611328125, 0.0, -4.57763671875e-05, 0.0, -4.38690185546875e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.05198383331298828, -7.62939453125e-06, -3.814697265625e-06, -1.1538076400756836, -0.11754035949707031, -0.09617161750793457, -6.508827209472656e-05, -2.09808349609375e-05, -0.30153465270996094, -0.02787303924560547, -0.002140045166015625, -0.000492095947265625, -0.030107498168945312, -2.47955322265625e-05, -0.49440333247184753, -3.814697265625e-06], "choice_history": [97, 285, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Charge", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 131, 289, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 133, 304, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", "4", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 346, 69, 291, "Mana", "Change", "<EOS>", 346, 89, 331, 139, 23, 179, "3", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": "change_attack", "_type": "Template52", "hole1": "target", "hole0": "self"}, {"hole2": 4, "_type": "Template65", "hole1": "increase_health", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"hole2": [{"_type": "Template54", "hole1": [{"operand": {"n": 3, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "hole0": "ManaChange"}], "_type": "Template77", "hole1": "add_buff", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "hole3": "use", "hole0": "Charge", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Charge"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -8.877143502756098, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(4)\n        self.target.add_buff(Buff(ManaChange(-3)))\n"}, {"score_history": [-0.0006275177001953125, -0.0003147125244140625, -0.0020334296859800816, -7.688998448429629e-05, -6.91385503159836e-05, -7.450580596923828e-05, -2.3841830625315197e-06, -9.1552734375e-05, -0.000133514404296875, -0.0012493133544921875, -1.33514404296875e-05, 0.0, -6.7470311478246e-05, -1.1444091796875e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0024623870849609375, -7.62939453125e-05, -0.0009174346923828125, -1.7881377516459906e-06, -0.0013324019964784384, -4.38690185546875e-05, -1.1444091796875e-05, -1.1920917586394353e-07, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.110004425048828e-05, -3.814697265625e-06, -0.0006554126157425344, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -5.91278076171875e-05, -1.1444091796875e-05, -0.00057220458984375, -5.7220458984375e-06, -0.000347137451171875, -2.288818359375e-05, -7.62939453125e-06, -0.00023305416107177734, -1.9073486328125e-06, -0.011335372924804688, -2.288818359375e-05, -0.00045013427734375, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.000301361083984375, -4.76837158203125e-05, -2.86102294921875e-05, -1.71661376953125e-05, -0.03150200843811035, 0.0, -0.0009958744049072266, 0.0, -3.933906555175781e-06, 0.0, -4.76837158203125e-05, -0.0003032684326171875, -2.384185791015625e-06, -5.9604644775390625e-06, -0.01857280731201172, -0.0021266937255859375, -0.0001506805419921875, -0.000400543212890625, -0.00020599365234375, -5.7220458984375e-06, 0.0, -5.6028297876764555e-06, -5.14984130859375e-05, -5.841255187988281e-06, 0.0, -7.748603820800781e-06, 0.0, -5.280971163301729e-05, -7.152555099310121e-07, -5.8769049644470215, -1.9073486328125e-05, -1.33514404296875e-05, -0.000102996826171875, -1.71661376953125e-05, -0.014654785394668579, -0.0003275869239587337, -0.6838903427124023, -4.00543212890625e-05, -4.00543212890625e-05, 0.0, -0.002429962158203125, -1.9073486328125e-06, -0.0001850128173828125, -1.9073486328125e-06, -0.5518388748168945, -1.0967253729177173e-05, -0.00786590576171875, -3.814697265625e-06, -0.3993866443634033, -3.814697265625e-06, -0.0008754730224609375, -0.0022602081298828125, -1.9073486328125e-06, -0.0001010894775390625, -1.9073486328125e-06, -0.00022149085998535156, 0.0, -6.949901580810547e-05, 0.0, -0.000156402587890625, -6.4849853515625e-05, -0.0001163482666015625, -8.20159912109375e-05, -0.05672464892268181, -0.0037245105486363173, -0.5795011520385742, 0.0, -0.0848742127418518, -0.0001852344284998253, -0.36365222930908203, -2.47955322265625e-05, -0.24549579620361328, -1.71661376953125e-05, -0.013139724731445312, 0.0, -0.003741977736353874, -2.3841855067985307e-07, -0.01613616943359375, -9.655952453613281e-06], "choice_history": [97, 285, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Charge", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 347, 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 47, 167, 0, 282, "x", "<EOS>", 21, 174, "x", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"body": {"_type": "Name", "id": "x"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "x"}}]}, "_type": "Assign"}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "Charge", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Charge"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -8.987264334499145, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x)\n        player.draw()\n"}]}
{"index": 17, "beams": [{"score_history": [-0.000102996826171875, -1.71661376953125e-05, -0.0009667137055657804, -1.871574750111904e-05, 0.0, -5.913898348808289e-07, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -0.001621246337890625, -0.0001373291015625, -5.245195097813848e-06, -4.482269287109375e-05, -1.1920928244535389e-07, 0.0, -0.00022934697335585952, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001163482666015625, 0.0, -8.58306884765625e-05, 0.0, -1.52587890625e-05, -0.0001239776611328125, -7.62939453125e-06, -9.655945177655667e-06, -1.1920928244535389e-07, -0.018158145248889923, 0.0], "choice_history": [97, 283, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 5, "hole0": 4}], "hole3": "create_minion", "hole0": "ChillwindYeti", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 4, "hole0": "Chillwind Yeti"}], "hole1": "MinionCard"}, "score": -0.021697974981165657, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score_history": [-0.000102996826171875, -1.71661376953125e-05, -0.0009667137055657804, -1.871574750111904e-05, 0.0, -5.913898348808289e-07, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -0.001621246337890625, -0.0001373291015625, -5.245195097813848e-06, -4.482269287109375e-05, -1.1920928244535389e-07, 0.0, -0.00022934697335585952, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001163482666015625, 0.0, -8.58306884765625e-05, 0.0, -1.52587890625e-05, -0.0001239776611328125, -7.62939453125e-06, -9.655945177655667e-06, -1.1920928244535389e-07, -4.018260478973389, 0.0], "choice_history": [97, 283, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 4, "hole0": 4}], "hole3": "create_minion", "hole0": "ChillwindYeti", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 4, "hole0": "Chillwind Yeti"}], "hole1": "MinionCard"}, "score": -4.021800308705664, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 4)\n"}, {"score_history": [-0.000102996826171875, -1.71661376953125e-05, -0.0009667137055657804, -1.871574750111904e-05, 0.0, -5.913898348808289e-07, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -6.984747886657715, -0.099456787109375, -1.33514404296875e-05, -0.0001354217529296875, -6.914137884450611e-06, -1.1444091796875e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.004634857177734375, -0.00012969970703125, -0.0001850128173828125, -7.867794920457527e-06, -5.686282383976504e-05, -0.00011455461208242923, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -5.412039899965748e-05, -1.1444091796875e-05, -6.29425048828125e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -6.29425048828125e-05, -3.814697265625e-06, -9.1552734375e-05, 0.0, -6.866455078125e-05, 0.0, -5.91278076171875e-05, -0.0002155303955078125, -0.046779632568359375, -3.814697265625e-05, -1.9073486328125e-05, -3.814697265625e-05, -2.6702880859375e-05, -2.86102294921875e-05, -7.283687591552734e-05, 0.0, -0.15432190895080566, 0.0, -0.000133514404296875, -2.86102294921875e-05, -3.4332275390625e-05, -4.410700057633221e-06, 0.0, -0.035896241664886475, 0.0], "choice_history": [97, 283, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Chillwind", " ", "Yeti", "<EOS>", 52, 179, "4", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 5, "hole0": 4}], "hole3": "create_minion", "hole0": "ChillwindYeti", "_type": "Template5", "hole2": [{"hole2": [{"_type": "Str", "s": "Chillwind Yeti"}, {"n": 4, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -7.32878551367412, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, True)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score_history": [-0.000102996826171875, -1.71661376953125e-05, -7.549326419830322, -1.871574750111904e-05, 0.0, -5.913898348808289e-07, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -0.001621246337890625, -0.0001373291015625, -5.245195097813848e-06, -4.482269287109375e-05, -1.1920928244535389e-07, 0.0, -0.00022934697335585952, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001163482666015625, 0.0, -8.58306884765625e-05, 0.0, -1.52587890625e-05, -0.0001239776611328125, -7.62939453125e-06, -9.655945177655667e-06, -1.1920928244535389e-07, -0.018158145248889923, 0.0], "choice_history": [97, 283, "<UNK>", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 5, "hole0": 4}], "hole3": "create_minion", "hole0": "<UNK>Yeti", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 4, "hole0": "Chillwind Yeti"}], "hole1": "MinionCard"}, "score": -7.570057681105922, "inferred_code": "class <UNK>Yeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score_history": [-0.000102996826171875, -1.71661376953125e-05, -7.934898853302002, -0.12738998234272003, -1.1920928244535389e-07, -3.5529956221580505e-07, -1.9073486328125e-05, -4.0531158447265625e-06, -3.814697265625e-06, -0.039379119873046875, -0.000202178955078125, -1.1444026313256472e-05, -4.3511390686035156e-05, -2.3841855067985307e-07, 0.0, -0.0002492508210707456, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -0.000102996826171875, 0.0, -8.96453857421875e-05, 0.0, -1.52587890625e-05, -0.000102996826171875, -7.62939453125e-06, -9.536739526083693e-06, -1.1920928244535389e-07, -0.0202325452119112, 0.0], "choice_history": [97, 283, "Force", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 5, "hole0": 4}], "hole3": "create_minion", "hole0": "ForceYeti", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 4, "hole0": "Chillwind Yeti"}], "hole1": "MinionCard"}, "score": -8.122900052421713, "inferred_code": "class ForceYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score_history": [-0.000102996826171875, -1.71661376953125e-05, -0.0009667137055657804, -1.871574750111904e-05, 0.0, -5.913898348808289e-07, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -6.984747886657715, -0.099456787109375, -1.33514404296875e-05, -0.0001354217529296875, -6.914137884450611e-06, -1.1444091796875e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.004634857177734375, -0.00012969970703125, -0.0001850128173828125, -7.867794920457527e-06, -5.686282383976504e-05, -0.00011455461208242923, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -5.412039899965748e-05, -1.1444091796875e-05, -6.29425048828125e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -6.29425048828125e-05, -3.814697265625e-06, -9.1552734375e-05, 0.0, -6.866455078125e-05, 0.0, -5.91278076171875e-05, -0.0002155303955078125, -0.046779632568359375, -3.814697265625e-05, -1.9073486328125e-05, -3.814697265625e-05, -2.6702880859375e-05, -2.86102294921875e-05, -7.283687591552734e-05, 0.0, -1.9502203464508057, -1.9073486328125e-06, -6.103515625e-05, -4.38690185546875e-05, -4.76837158203125e-05, -5.483321729116142e-06, 0.0, -0.11619061231613159, 0.0], "choice_history": [97, 283, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Chillwind", " ", "Yeti", "<EOS>", 52, 179, "4", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "p", "hole6": [{"_type": "Template62", "hole1": 5, "hole0": 4}], "hole3": "create_minion", "hole0": "ChillwindYeti", "_type": "Template5", "hole2": [{"hole2": [{"_type": "Str", "s": "Chillwind Yeti"}, {"n": 4, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -9.204937432777115, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, True)\n\n    def create_minion(self, p):\n        return Minion(4, 5)\n"}, {"score_history": [-0.000102996826171875, -1.71661376953125e-05, -0.0009667137055657804, -1.871574750111904e-05, 0.0, -5.913898348808289e-07, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -9.228157043457031, -0.0007495880126953125, -3.576278118089249e-07, -5.543231964111328e-05, -1.1920928244535389e-07, 0.0, -0.0001802339538699016, 0.0, -0.0096435546875, -1.9073486328125e-06, -0.01028454303741455, -4.768370445162873e-07, -3.4332275390625e-05, 0.0, -7.62939453125e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.02174091339111328, 0.0, -1.9073486328125e-06, 0.0, -0.0004178285598754883, 0.0, -2.47955322265625e-05, -5.7220458984375e-05, -1.9073486328125e-05, -7.629393621755298e-06, -4.768370445162873e-07, -0.00966445542871952, 0.0], "choice_history": [97, 283, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 5, "hole0": 4}], "hole3": "create_minion", "hole0": "ChillwindYeti", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Chillwind Yeti", "_type": "Template26", "hole2": "COMMON", "hole1": 4}], "hole1": "MinionCard"}, "score": -9.28220386295714, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score_history": [-0.000102996826171875, -1.71661376953125e-05, -0.0009667137055657804, -1.871574750111904e-05, 0.0, -5.913898348808289e-07, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -9.195904731750488, -0.00142669677734375, -2.264974000354414e-06, -3.6716461181640625e-05, -2.3841855067985307e-07, 0.0, -0.0001558241929160431, 0.0, -0.007303595542907715, -7.62939453125e-06, -0.07876694202423096, 0.0, -0.03242015838623047, -2.47955322265625e-05, -0.000270843505859375, 0.0, -3.4332275390625e-05, 0.0, -0.04114818572998047, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0017052888870239258, 0.0, -1.1444091796875e-05, -0.000186920166015625, -1.9073486328125e-05, -7.629395440744702e-06, -2.3841855067985307e-07, -0.007627013139426708, 0.0], "choice_history": [97, 283, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 5, "hole0": 4}], "hole3": "create_minion", "hole0": "ChillwindYeti", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Chillwind Yeti", "_type": "Template27", "hole2": "ALL", "hole1": 4}], "hole1": "MinionCard"}, "score": -9.368193926075207, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score_history": [-0.000102996826171875, -1.71661376953125e-05, -0.0009667137055657804, -1.871574750111904e-05, 0.0, -5.913898348808289e-07, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -0.001621246337890625, -0.0001373291015625, -5.245195097813848e-06, -4.482269287109375e-05, -1.1920928244535389e-07, 0.0, -9.419309616088867, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -0.000118255615234375, 0.0, -4.9591064453125e-05, 0.0, -1.33514404296875e-05, -0.000244140625, -9.5367431640625e-06, -9.655945177655667e-06, 0.0, -0.018045399338006973, 0.0], "choice_history": [97, 283, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Chillwind", " ", "Yeti", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 5, "hole0": 4}], "hole3": "create_minion", "hole0": "ChillwindYeti", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 5, "hole0": "Chillwind Yeti"}], "hole1": "MinionCard"}, "score": -9.440749302316355, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score_history": [-0.000102996826171875, -1.71661376953125e-05, -0.0009667137055657804, -1.871574750111904e-05, 0.0, -5.913898348808289e-07, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -0.001621246337890625, -0.0001373291015625, -5.245195097813848e-06, -4.482269287109375e-05, -1.1920928244535389e-07, 0.0, -0.00022934697335585952, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001163482666015625, 0.0, -8.58306884765625e-05, 0.0, -1.52587890625e-05, -9.167244911193848, -3.62396240234375e-05, -2.145766984540387e-06, -9.536738616588991e-07, -7.03309997334145e-05, -1.1920928244535389e-07, -0.5617824792861938, 0.0, -0.0004940032958984375, -3.814697265625e-06, -6.306171417236328e-05, -3.814697265625e-06], "choice_history": [97, 283, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 5, "hole0": 4}], "hole3": "create_minion", "hole0": "ChillwindYeti", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 4, "hole0": "Chillwind Yeti"}], "hole1": "MinionCard"}, "score": -9.73310032168068, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5, taunt=True)\n"}, {"score_history": [-0.000102996826171875, -1.71661376953125e-05, -0.0009667137055657804, -1.871574750111904e-05, 0.0, -5.913898348808289e-07, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -0.001621246337890625, -0.0001373291015625, -5.245195097813848e-06, -4.482269287109375e-05, -1.1920928244535389e-07, 0.0, -9.715587615966797, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001811981201171875, 0.0, -9.34600830078125e-05, 0.0, -1.1444091796875e-05, -0.000385284423828125, -9.5367431640625e-06, -1.168248854810372e-05, 0.0, -0.02159477025270462, 0.0], "choice_history": [97, 283, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Chillwind", " ", "Yeti", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 5, "hole0": 4}], "hole3": "create_minion", "hole0": "ChillwindYeti", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 1, "hole0": "Chillwind Yeti"}], "hole1": "MinionCard"}, "score": -9.740824747625986, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score_history": [-0.000102996826171875, -1.71661376953125e-05, -0.0009667137055657804, -1.871574750111904e-05, 0.0, -5.913898348808289e-07, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -0.001621246337890625, -0.0001373291015625, -5.245195097813848e-06, -4.482269287109375e-05, -1.1920928244535389e-07, 0.0, -0.00022934697335585952, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001163482666015625, 0.0, -9.746283531188965, 0.0, -6.29425048828125e-05, -0.0003871917724609375, -1.52587890625e-05, -1.7523649148643017e-05, 0.0, -0.10485704243183136, 0.0], "choice_history": [97, 283, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "p", "hole6": [{"_type": "Template62", "hole1": 5, "hole0": 4}], "hole3": "create_minion", "hole0": "ChillwindYeti", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 4, "hole0": "Chillwind Yeti"}], "hole1": "MinionCard"}, "score": -9.854920848380964, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, p):\n        return Minion(4, 5)\n"}, {"score_history": [-0.000102996826171875, -1.71661376953125e-05, -0.0009667137055657804, -1.871574750111904e-05, 0.0, -5.913898348808289e-07, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -0.001621246337890625, -0.0001373291015625, -5.245195097813848e-06, -4.482269287109375e-05, -1.1920928244535389e-07, 0.0, -10.012608528137207, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -8.96453857421875e-05, 0.0, -5.53131103515625e-05, 0.0, -1.71661376953125e-05, -0.0003643035888671875, -9.5367431640625e-06, -1.3470642443280667e-05, 0.0, -0.014295780099928379, 0.0], "choice_history": [97, 283, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Chillwind", " ", "Yeti", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 5, "hole0": 4}], "hole3": "create_minion", "hole0": "ChillwindYeti", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 3, "hole0": "Chillwind Yeti"}], "hole1": "MinionCard"}, "score": -10.030407313998687, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score_history": [-0.000102996826171875, -1.71661376953125e-05, -0.0009667137055657804, -1.871574750111904e-05, 0.0, -5.913898348808289e-07, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -9.476813316345215, -0.0001277923583984375, -7.390948667307384e-06, -7.18832015991211e-05, -4.5299530029296875e-06, 0.0, -0.0002120739227393642, 0.0, -4.76837158203125e-05, -5.7220458984375e-06, -0.15044021606445312, 0.0, -1.33514404296875e-05, 0.0, -0.00011849403381347656, 0.0, -5.7220458984375e-06, -0.5572128295898438, -1.33514404296875e-05, -7.74860291130608e-06, 0.0, -0.0031436095014214516, 0.0], "choice_history": [97, 283, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 5, "hole0": 4}], "hole3": "create_minion", "hole0": "ChillwindYeti", "_type": "Template5", "hole2": [{"hole3": "COMMON", "hole2": "ALL", "_type": "Template34", "hole1": 4, "hole0": "Chillwind Yeti"}], "hole1": "MinionCard"}, "score": -10.18937335668943, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score_history": [-0.000102996826171875, -1.71661376953125e-05, -10.184873580932617, -0.001739785773679614, 0.0, -2.3702159523963928e-07, -4.00543212890625e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.026828765869140625, -0.000286102294921875, -7.986990567587782e-06, -4.279613494873047e-05, -2.3841855067985307e-07, 0.0, -0.0001854829170042649, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.0001010894775390625, 0.0, -8.7738037109375e-05, 0.0, -1.52587890625e-05, -0.0001049041748046875, -7.62939453125e-06, -9.655948815634474e-06, -1.1920928244535389e-07, -0.0186280719935894, 0.0], "choice_history": [97, 283, "Yeti", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 5, "hole0": 4}], "hole3": "create_minion", "hole0": "YetiYeti", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 4, "hole0": "Chillwind Yeti"}], "hole1": "MinionCard"}, "score": -10.233099091777113, "inferred_code": "class YetiYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}]}
{"index": 18, "beams": [{"score_history": [-1.52587890625e-05, -0.0010433197021484375, -6.282132380874828e-05, -7.04508347553201e-05, -5.209304072195664e-05, -2.2411237296182662e-05, -2.3841855067985307e-07, -0.0003299713134765625, -0.00069427490234375, -4.00543212890625e-05, -1.311301275563892e-06, -2.634504016896244e-05, -1.6689252788637532e-06, 0.0, -0.001667022705078125, 0.0, -0.000217437744140625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -2.0265579223632812e-06, -1.52587890625e-05, -0.0004634857177734375, -0.0024738311767578125, -0.0010356903076171875, -6.103515625e-05, -0.0001850128173828125, -6.4849853515625e-05, -3.814697265625e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.9431114196777344e-05, -2.3841855067985307e-07, -0.16036605834960938, -0.0005035400390625, -7.069110870361328e-05, 0.0, -0.0027360916137695312, -5.7220458984375e-06, -0.017402885481715202, -1.9073486328125e-06, -0.0016183853149414062, -0.00202178955078125, -1.1444091796875e-05, 0.0, -0.0011816024780273438, 0.0, -0.23556339740753174, 0.0], "choice_history": [97, 285, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": "change_temp_attack", "_type": "Template52", "hole1": "hero", "hole0": "player"}, {"hole2": "increase_armor", "_type": "Template52", "hole1": "hero", "hole0": "player"}], "hole3": "use", "hole0": "Claw", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "DRUID", "_type": "Template34", "hole1": 1, "hole0": "Claw"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -0.43014656753774716, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n"}, {"score_history": [-1.52587890625e-05, -0.0010433197021484375, -6.282132380874828e-05, -7.04508347553201e-05, -5.209304072195664e-05, -2.2411237296182662e-05, -2.3841855067985307e-07, -0.0003299713134765625, -0.00069427490234375, -4.00543212890625e-05, -1.311301275563892e-06, -2.634504016896244e-05, -1.6689252788637532e-06, 0.0, -0.001667022705078125, 0.0, -0.000217437744140625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -2.0265579223632812e-06, -1.52587890625e-05, -0.0004634857177734375, -0.0024738311767578125, -0.0010356903076171875, -6.103515625e-05, -0.0001850128173828125, -6.4849853515625e-05, -3.814697265625e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.9431114196777344e-05, -2.3841855067985307e-07, -0.16036605834960938, -0.0005035400390625, -7.069110870361328e-05, 0.0, -0.0027360916137695312, -5.7220458984375e-06, -0.017402885481715202, -1.9073486328125e-06, -0.0016183853149414062, -0.00202178955078125, -1.1444091796875e-05, 0.0, -0.0011816024780273438, 0.0, -1.6482001543045044, -1.1444091796875e-05], "choice_history": [97, 285, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": "change_temp_attack", "_type": "Template52", "hole1": "hero", "hole0": "player"}, {"hole2": "change_temp_attack", "_type": "Template52", "hole1": "hero", "hole0": "player"}], "hole3": "use", "hole0": "Claw", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "DRUID", "_type": "Template34", "hole1": 1, "hole0": "Claw"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -1.8427947685265167, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n"}, {"score_history": [-1.52587890625e-05, -0.0010433197021484375, -6.282132380874828e-05, -7.04508347553201e-05, -5.209304072195664e-05, -2.2411237296182662e-05, -2.3841855067985307e-07, -0.0003299713134765625, -0.00069427490234375, -4.00543212890625e-05, -1.311301275563892e-06, -2.634504016896244e-05, -1.6689252788637532e-06, 0.0, -0.001667022705078125, 0.0, -0.000217437744140625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -2.0265579223632812e-06, -1.52587890625e-05, -0.0004634857177734375, -0.0024738311767578125, -0.0010356903076171875, -6.103515625e-05, -0.0001850128173828125, -6.4849853515625e-05, -3.814697265625e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.9431114196777344e-05, -2.3841855067985307e-07, -2.2825841903686523, -0.0012073516845703125, -9.5367431640625e-05, 0.0, -0.0002384185791015625, -1.33514404296875e-05, -7.259845733642578e-05, 0.0, -0.011251211166381836, 0.0, -0.07101094722747803, -0.0001049041748046875, -0.27675408124923706, 0.0, -0.31011295318603516, -0.023247718811035156, -6.67572021484375e-05, -5.7220458984375e-06, -5.53131103515625e-05, -1.9073486328125e-06, -1.728534698486328e-05, 0.0, -0.0014791488647460938, 0.0, -0.2640765905380249, -1.9073486328125e-06, -0.7037143707275391, 0.0], "choice_history": [97, 285, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", "4", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": 4, "_type": "Template65", "hole1": "change_temp_attack", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}}, {"hole2": 4, "_type": "Template65", "hole1": "increase_armor", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "Claw", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "DRUID", "_type": "Template34", "hole1": 1, "hole0": "Claw"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -3.954775149016939, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(4)\n        player.hero.increase_armor(4)\n"}, {"score_history": [-1.52587890625e-05, -0.0010433197021484375, -6.282132380874828e-05, -7.04508347553201e-05, -5.209304072195664e-05, -2.2411237296182662e-05, -2.3841855067985307e-07, -0.0003299713134765625, -0.00069427490234375, -4.00543212890625e-05, -1.311301275563892e-06, -2.634504016896244e-05, -1.6689252788637532e-06, 0.0, -0.001667022705078125, 0.0, -0.000217437744140625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -2.0265579223632812e-06, -1.52587890625e-05, -0.0004634857177734375, -0.0024738311767578125, -0.0010356903076171875, -6.103515625e-05, -0.0001850128173828125, -6.4849853515625e-05, -3.814697265625e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.9431114196777344e-05, -2.3841855067985307e-07, -2.2825841903686523, -0.0012073516845703125, -9.5367431640625e-05, 0.0, -0.0002384185791015625, -1.33514404296875e-05, -7.259845733642578e-05, 0.0, -0.011251211166381836, 0.0, -0.07101094722747803, -0.0001049041748046875, -0.27675408124923706, 0.0, -0.31011295318603516, -0.023247718811035156, -6.67572021484375e-05, -5.7220458984375e-06, -5.53131103515625e-05, -1.9073486328125e-06, -1.728534698486328e-05, 0.0, -0.0014791488647460938, 0.0, -0.2640765905380249, -1.9073486328125e-06, -0.9448738098144531, 0.0], "choice_history": [97, 285, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", "4", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": 4, "_type": "Template65", "hole1": "change_temp_attack", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}}, {"hole2": 1, "_type": "Template65", "hole1": "increase_armor", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "Claw", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "DRUID", "_type": "Template34", "hole1": 1, "hole0": "Claw"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.195934588103853, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(4)\n        player.hero.increase_armor(1)\n"}, {"score_history": [-1.52587890625e-05, -0.0010433197021484375, -6.282132380874828e-05, -7.04508347553201e-05, -5.209304072195664e-05, -2.2411237296182662e-05, -2.3841855067985307e-07, -0.0003299713134765625, -0.00069427490234375, -4.00543212890625e-05, -1.311301275563892e-06, -2.634504016896244e-05, -1.6689252788637532e-06, 0.0, -0.001667022705078125, 0.0, -0.000217437744140625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -2.0265579223632812e-06, -1.52587890625e-05, -0.0004634857177734375, -0.0024738311767578125, -0.0010356903076171875, -6.103515625e-05, -0.0001850128173828125, -6.4849853515625e-05, -3.814697265625e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.9431114196777344e-05, -2.3841855067985307e-07, -2.2825841903686523, -0.0012073516845703125, -9.5367431640625e-05, 0.0, -0.0002384185791015625, -1.33514404296875e-05, -7.259845733642578e-05, 0.0, -0.011251211166381836, 0.0, -0.07101094722747803, -0.0001049041748046875, -0.27675408124923706, 0.0, -1.3749809265136719, -0.00115966796875, -6.103515625e-05, 0.0, -0.0014448165893554688, 0.0, -0.4590533971786499, 0.0], "choice_history": [97, 285, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", "4", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": 4, "_type": "Template65", "hole1": "change_temp_attack", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}}, {"hole2": "increase_armor", "_type": "Template52", "hole1": "hero", "hole0": "player"}], "hole3": "use", "hole0": "Claw", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "DRUID", "_type": "Template34", "hole1": 1, "hole0": "Claw"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.488695317893587, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(4)\n        player.hero.increase_armor(2)\n"}, {"score_history": [-1.52587890625e-05, -0.0010433197021484375, -6.282132380874828e-05, -7.04508347553201e-05, -5.209304072195664e-05, -2.2411237296182662e-05, -2.3841855067985307e-07, -0.0003299713134765625, -0.00069427490234375, -4.00543212890625e-05, -1.311301275563892e-06, -2.634504016896244e-05, -1.6689252788637532e-06, 0.0, -0.001667022705078125, 0.0, -0.000217437744140625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -2.0265579223632812e-06, -1.52587890625e-05, -0.0004634857177734375, -0.0024738311767578125, -0.0010356903076171875, -6.103515625e-05, -0.0001850128173828125, -6.4849853515625e-05, -3.814697265625e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.9431114196777344e-05, -2.3841855067985307e-07, -0.16036605834960938, -0.0005035400390625, -7.069110870361328e-05, 0.0, -0.0027360916137695312, -5.7220458984375e-06, -4.302380561828613, 0.0, -0.012314796447753906, -0.001392364501953125, -1.33514404296875e-05, 0.0, -0.0013551712036132812, 0.0, -0.23702310025691986, 0.0], "choice_history": [97, 285, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": "increase_armor", "_type": "Template52", "hole1": "hero", "hole0": "player"}, {"hole2": "increase_armor", "_type": "Template52", "hole1": "hero", "hole0": "player"}], "hole3": "use", "hole0": "Claw", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "DRUID", "_type": "Template34", "hole1": 1, "hole0": "Claw"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.726824501543604, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.hero.increase_armor(2)\n"}, {"score_history": [-1.52587890625e-05, -0.0010433197021484375, -6.282132380874828e-05, -7.04508347553201e-05, -5.209304072195664e-05, -2.2411237296182662e-05, -2.3841855067985307e-07, -0.0003299713134765625, -0.00069427490234375, -4.00543212890625e-05, -1.311301275563892e-06, -2.634504016896244e-05, -1.6689252788637532e-06, 0.0, -0.001667022705078125, 0.0, -0.000217437744140625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -2.0265579223632812e-06, -1.52587890625e-05, -0.0004634857177734375, -0.0024738311767578125, -0.0010356903076171875, -6.103515625e-05, -0.0001850128173828125, -6.4849853515625e-05, -3.814697265625e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.9431114196777344e-05, -2.3841855067985307e-07, -2.2825841903686523, -0.0012073516845703125, -9.5367431640625e-05, 0.0, -0.0002384185791015625, -1.33514404296875e-05, -7.259845733642578e-05, 0.0, -0.011251211166381836, 0.0, -0.07101094722747803, -0.0001049041748046875, -0.27675408124923706, 0.0, -0.31011295318603516, -0.023247718811035156, -6.67572021484375e-05, -5.7220458984375e-06, -5.53131103515625e-05, -1.9073486328125e-06, -1.728534698486328e-05, 0.0, -0.0014791488647460938, 0.0, -1.5906881093978882, -0.0002899169921875, -0.20231741666793823, 0.0], "choice_history": [97, 285, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", "4", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": 4, "_type": "Template65", "hole1": "change_temp_attack", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}}, {"hole2": 4, "_type": "Template65", "hole1": "change_temp_attack", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "Claw", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "DRUID", "_type": "Template34", "hole1": 1, "hole0": "Claw"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.780277723460756, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(4)\n        player.hero.change_temp_attack(4)\n"}, {"score_history": [-1.52587890625e-05, -0.0010433197021484375, -6.282132380874828e-05, -7.04508347553201e-05, -5.209304072195664e-05, -2.2411237296182662e-05, -2.3841855067985307e-07, -0.0003299713134765625, -0.00069427490234375, -4.00543212890625e-05, -1.311301275563892e-06, -2.634504016896244e-05, -1.6689252788637532e-06, 0.0, -0.001667022705078125, 0.0, -0.000217437744140625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -2.0265579223632812e-06, -1.52587890625e-05, -0.0004634857177734375, -0.0024738311767578125, -0.0010356903076171875, -6.103515625e-05, -0.0001850128173828125, -6.4849853515625e-05, -3.814697265625e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.9431114196777344e-05, -2.3841855067985307e-07, -2.2825841903686523, -0.0012073516845703125, -9.5367431640625e-05, 0.0, -0.0002384185791015625, -1.33514404296875e-05, -7.259845733642578e-05, 0.0, -0.011251211166381836, 0.0, -0.07101094722747803, -0.0001049041748046875, -1.500389814376831, 0.0, -0.41114330291748047, -0.01617908477783203, -7.62939453125e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -7.62939453125e-06, 0.0, -0.0022125244140625, 0.0, -0.3641352653503418, -1.9073486328125e-06, -0.309787780046463, 0.0], "choice_history": [97, 285, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", "3", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": 3, "_type": "Template65", "hole1": "change_temp_attack", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}}, {"hole2": 4, "_type": "Template65", "hole1": "increase_armor", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "Claw", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "DRUID", "_type": "Template34", "hole1": 1, "hole0": "Claw"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.979207420735918, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(3)\n        player.hero.increase_armor(4)\n"}, {"score_history": [-1.52587890625e-05, -0.0010433197021484375, -6.282132380874828e-05, -7.04508347553201e-05, -5.209304072195664e-05, -2.2411237296182662e-05, -2.3841855067985307e-07, -0.0003299713134765625, -0.00069427490234375, -4.00543212890625e-05, -1.311301275563892e-06, -2.634504016896244e-05, -1.6689252788637532e-06, 0.0, -0.001667022705078125, 0.0, -0.000217437744140625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -2.0265579223632812e-06, -1.52587890625e-05, -0.0004634857177734375, -0.0024738311767578125, -0.0010356903076171875, -6.103515625e-05, -0.0001850128173828125, -6.4849853515625e-05, -3.814697265625e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.9431114196777344e-05, -2.3841855067985307e-07, -0.16036605834960938, -0.0005035400390625, -7.069110870361328e-05, 0.0, -0.0027360916137695312, -5.7220458984375e-06, -0.017402885481715202, -1.9073486328125e-06, -0.0016183853149414062, -0.00202178955078125, -1.1444091796875e-05, 0.0, -0.0011816024780273438, 0.0, -4.787418365478516, 0.0], "choice_history": [97, 285, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "increase_health", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": "change_temp_attack", "_type": "Template52", "hole1": "hero", "hole0": "player"}, {"hole2": "increase_health", "_type": "Template52", "hole1": "hero", "hole0": "player"}], "hole3": "use", "hole0": "Claw", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "DRUID", "_type": "Template34", "hole1": 1, "hole0": "Claw"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.982001535608731, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_health(2)\n"}, {"score_history": [-1.52587890625e-05, -0.0010433197021484375, -6.282132380874828e-05, -7.04508347553201e-05, -5.209304072195664e-05, -2.2411237296182662e-05, -2.3841855067985307e-07, -0.0003299713134765625, -0.00069427490234375, -4.00543212890625e-05, -1.311301275563892e-06, -2.634504016896244e-05, -1.6689252788637532e-06, 0.0, -0.001667022705078125, 0.0, -0.000217437744140625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -2.0265579223632812e-06, -1.52587890625e-05, -0.0004634857177734375, -0.0024738311767578125, -0.0010356903076171875, -6.103515625e-05, -0.0001850128173828125, -6.4849853515625e-05, -3.814697265625e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.9431114196777344e-05, -2.3841855067985307e-07, -2.2825841903686523, -0.0012073516845703125, -9.5367431640625e-05, 0.0, -0.0002384185791015625, -1.33514404296875e-05, -7.259845733642578e-05, 0.0, -0.011251211166381836, 0.0, -0.07101094722747803, -0.0001049041748046875, -0.27675408124923706, 0.0, -1.3749809265136719, -0.00115966796875, -6.103515625e-05, 0.0, -0.0014448165893554688, 0.0, -1.0603326559066772, -7.62939453125e-06], "choice_history": [97, 285, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", "4", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": 4, "_type": "Template65", "hole1": "change_temp_attack", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}}, {"hole2": "change_temp_attack", "_type": "Template52", "hole1": "hero", "hole0": "player"}], "hole3": "use", "hole0": "Claw", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "DRUID", "_type": "Template34", "hole1": 1, "hole0": "Claw"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.0899822060161455, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(4)\n        player.hero.change_temp_attack(2)\n"}, {"score_history": [-1.52587890625e-05, -0.0010433197021484375, -6.282132380874828e-05, -7.04508347553201e-05, -5.209304072195664e-05, -2.2411237296182662e-05, -2.3841855067985307e-07, -0.0003299713134765625, -0.00069427490234375, -4.00543212890625e-05, -1.311301275563892e-06, -2.634504016896244e-05, -1.6689252788637532e-06, 0.0, -0.001667022705078125, 0.0, -0.000217437744140625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -2.0265579223632812e-06, -1.52587890625e-05, -0.0004634857177734375, -0.0024738311767578125, -0.0010356903076171875, -6.103515625e-05, -0.0001850128173828125, -6.4849853515625e-05, -3.814697265625e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.9431114196777344e-05, -2.3841855067985307e-07, -2.2825841903686523, -0.0012073516845703125, -9.5367431640625e-05, 0.0, -0.0002384185791015625, -1.33514404296875e-05, -7.259845733642578e-05, 0.0, -0.011251211166381836, 0.0, -0.07101094722747803, -0.0001049041748046875, -1.500389814376831, 0.0, -1.1497220993041992, -0.00145721435546875, -3.24249267578125e-05, 0.0, -0.0015392303466796875, 0.0, -0.6117821931838989, 0.0], "choice_history": [97, 285, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", "3", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": 3, "_type": "Template65", "hole1": "change_temp_attack", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}}, {"hole2": "increase_armor", "_type": "Template52", "hole1": "hero", "hole0": "player"}], "hole3": "use", "hole0": "Claw", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "DRUID", "_type": "Template34", "hole1": 1, "hole0": "Claw"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.640164369731508, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(3)\n        player.hero.increase_armor(2)\n"}, {"score_history": [-1.52587890625e-05, -0.0010433197021484375, -6.282132380874828e-05, -7.04508347553201e-05, -5.209304072195664e-05, -2.2411237296182662e-05, -2.3841855067985307e-07, -0.0003299713134765625, -0.00069427490234375, -4.00543212890625e-05, -1.311301275563892e-06, -2.634504016896244e-05, -1.6689252788637532e-06, 0.0, -0.001667022705078125, 0.0, -0.000217437744140625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -2.0265579223632812e-06, -1.52587890625e-05, -0.0004634857177734375, -0.0024738311767578125, -0.0010356903076171875, -6.103515625e-05, -0.0001850128173828125, -6.4849853515625e-05, -3.814697265625e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.9431114196777344e-05, -2.3841855067985307e-07, -2.2825841903686523, -0.0012073516845703125, -9.5367431640625e-05, 0.0, -0.0002384185791015625, -1.33514404296875e-05, -7.259845733642578e-05, 0.0, -0.011251211166381836, 0.0, -0.07101094722747803, -0.0001049041748046875, -1.500389814376831, 0.0, -1.1497220993041992, -0.00145721435546875, -3.24249267578125e-05, 0.0, -0.0015392303466796875, 0.0, -0.8951007127761841, -9.5367431640625e-06], "choice_history": [97, 285, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", "3", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": 3, "_type": "Template65", "hole1": "change_temp_attack", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}}, {"hole2": "change_temp_attack", "_type": "Template52", "hole1": "hero", "hole0": "player"}], "hole3": "use", "hole0": "Claw", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "DRUID", "_type": "Template34", "hole1": 1, "hole0": "Claw"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.923492426066957, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(3)\n        player.hero.change_temp_attack(2)\n"}, {"score_history": [-1.52587890625e-05, -0.0010433197021484375, -6.282132380874828e-05, -7.04508347553201e-05, -5.209304072195664e-05, -2.2411237296182662e-05, -2.3841855067985307e-07, -0.0003299713134765625, -0.00069427490234375, -4.00543212890625e-05, -1.311301275563892e-06, -2.634504016896244e-05, -1.6689252788637532e-06, 0.0, -0.001667022705078125, 0.0, -0.000217437744140625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -2.0265579223632812e-06, -1.52587890625e-05, -0.0004634857177734375, -0.0024738311767578125, -0.0010356903076171875, -6.103515625e-05, -0.0001850128173828125, -6.4849853515625e-05, -3.814697265625e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.9431114196777344e-05, -2.3841855067985307e-07, -0.16036605834960938, -0.0005035400390625, -7.069110870361328e-05, 0.0, -0.0027360916137695312, -5.7220458984375e-06, -4.302380561828613, 0.0, -0.012314796447753906, -0.001392364501953125, -1.33514404296875e-05, 0.0, -0.0013551712036132812, 0.0, -1.6308248043060303, -5.7220458984375e-06], "choice_history": [97, 285, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": "increase_armor", "_type": "Template52", "hole1": "hero", "hole0": "player"}, {"hole2": "change_temp_attack", "_type": "Template52", "hole1": "hero", "hole0": "player"}], "hole3": "use", "hole0": "Claw", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "DRUID", "_type": "Template34", "hole1": 1, "hole0": "Claw"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.1206319276386125, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.hero.change_temp_attack(2)\n"}, {"score_history": [-1.52587890625e-05, -0.0010433197021484375, -6.282132380874828e-05, -7.04508347553201e-05, -5.209304072195664e-05, -2.2411237296182662e-05, -2.3841855067985307e-07, -0.0003299713134765625, -0.00069427490234375, -4.00543212890625e-05, -1.311301275563892e-06, -2.634504016896244e-05, -1.6689252788637532e-06, 0.0, -0.001667022705078125, 0.0, -0.000217437744140625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -2.0265579223632812e-06, -1.52587890625e-05, -0.0004634857177734375, -0.0024738311767578125, -0.0010356903076171875, -6.103515625e-05, -0.0001850128173828125, -6.4849853515625e-05, -3.814697265625e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.9431114196777344e-05, -2.3841855067985307e-07, -4.520589351654053, -0.0014705657958984375, -0.000560760498046875, -1.9073486328125e-06, -0.09089887142181396, 0.0, -0.015293121337890625, -1.33514404296875e-05, -0.00390625, 0.0, -0.0002689361572265625, 0.0, -0.004630684852600098, -2.47955322265625e-05, -1.9073486328125e-05, -0.10175228118896484, -0.0017642974853515625, -0.0016460418701171875, -9.5367431640625e-06, -0.010193824768066406, 0.0, -0.06171059608459473, -4.1961669921875e-05, -0.6407108902931213, 0.0, -0.1214914321899414, -0.0015411376953125, -2.47955322265625e-05, 0.0, -0.0013818740844726562, 0.0, -0.60661780834198, -1.1444091796875e-05], "choice_history": [97, 285, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 133, 304, 21, 174, "minion", "<EOS>", "change_temp_attack", "<EOS>", "2", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": 2, "_type": "Template65", "hole1": "change_temp_attack", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}, {"hole2": "change_temp_attack", "_type": "Template52", "hole1": "hero", "hole0": "player"}], "hole3": "use", "hole0": "Claw", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "DRUID", "_type": "Template34", "hole1": 1, "hole0": "Claw"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.1952386442714555, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n"}, {"score_history": [-1.52587890625e-05, -0.0010433197021484375, -6.282132380874828e-05, -7.04508347553201e-05, -5.209304072195664e-05, -2.2411237296182662e-05, -2.3841855067985307e-07, -0.0003299713134765625, -0.00069427490234375, -4.00543212890625e-05, -1.311301275563892e-06, -2.634504016896244e-05, -1.6689252788637532e-06, 0.0, -0.001667022705078125, 0.0, -0.000217437744140625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -2.0265579223632812e-06, -1.52587890625e-05, -0.0004634857177734375, -0.0024738311767578125, -0.0010356903076171875, -6.103515625e-05, -0.0001850128173828125, -6.4849853515625e-05, -3.814697265625e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.9431114196777344e-05, -2.3841855067985307e-07, -2.2825841903686523, -0.0012073516845703125, -9.5367431640625e-05, 0.0, -0.0002384185791015625, -1.33514404296875e-05, -7.259845733642578e-05, 0.0, -0.011251211166381836, 0.0, -2.842555284500122, 0.0, -0.4020465016365051, 0.0, -0.4914226531982422, -0.0006122589111328125, -0.0001430511474609375, 0.0, -0.0013875961303710938, 0.0, -0.46133363246917725, 0.0], "choice_history": [97, 285, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "4", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": 4, "_type": "Template65", "hole1": "increase_armor", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}}, {"hole2": "increase_armor", "_type": "Template52", "hole1": "hero", "hole0": "player"}], "hole3": "use", "hole0": "Claw", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "DRUID", "_type": "Template34", "hole1": 1, "hole0": "Claw"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.503626519828401, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(4)\n        player.hero.increase_armor(2)\n"}]}
{"index": 19, "beams": [{"score_history": [-1.71661376953125e-05, -0.04876136779785156, -9.298280929215252e-06, -0.0011407823767513037, -1.013253495329991e-05, -0.00021564960479736328, -4.88758041683468e-06, -5.7220458984375e-06, -0.0040435791015625, -0.0001068115234375, -4.29153169534402e-06, -5.9604644775390625e-06, -5.722029527532868e-06, 0.0, -0.00029218191048130393, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -7.033347174001392e-06, 0.0, -0.0002040863037109375, -0.000148773193359375, -5.364416665543104e-06, -4.410743713378906e-06, -0.018331527709960938, -1.1444091796875e-05, -0.0002384185791015625, -2.47955322265625e-05, -3.62396240234375e-05, -1.1444091796875e-05, 0.0, -3.719329833984375e-05, -0.00011265277862548828, -3.0636758310720325e-05, -1.1920928244535389e-07, -8.344650268554688e-06, -1.1920928244535389e-07, -1.1682502190524247e-05, -4.768370445162873e-07, -0.04137229919433594, -1.33514404296875e-05, -0.000640869140625, -3.814697265625e-06, -5.340576171875e-05, -0.0006089566741138697, -0.0002956197422463447, -0.0018024444580078125, -0.0001010894775390625, -0.0001659393310546875, -1.71661376953125e-05, -0.00018310546875, 0.0, -0.005362749099731445, -3.4332275390625e-05, -0.00023651123046875, -5.7220458984375e-06, -7.62939453125e-06, -0.020421981811523438, -4.38690185546875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.000110626220703125, -2.47955322265625e-05, -0.00011599059507716447, -3.933906555175781e-06, -0.007896661758422852, 0.0, -0.0003681182861328125, -5.841255187988281e-06, -0.0020122528076171875, -0.0008544921875, -9.5367431640625e-05, -0.00055694580078125, -0.0019695477094501257, -1.9073486328125e-06, -0.0006351470947265625, -3.814697265625e-06, -0.0001983642578125, -6.4849853515625e-05, -0.004082579165697098, -1.1920928244535389e-07, -0.0001964569091796875, -1.71661376953125e-05, -7.62939453125e-06, -0.0003399766865186393, -4.9591064453125e-05, -0.0003662109375, 0.0, -0.014142811298370361, 0.0, -0.01574993133544922, -0.002960205078125, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -6.866455078125e-05, -0.011373840272426605, -1.7166135876323096e-05, -0.0003185272216796875, -1.52587890625e-05, -0.00012969970703125, -1.9073486328125e-06, -0.00030517578125, 0.0, -0.0015034668613225222, -1.1920928244535389e-07, -0.001614689826965332, -1.9073486328125e-06, -0.0001392364501953125, -0.0015506744384765625, -5.7220458984375e-06, -0.0002937614917755127, -0.0012702918611466885, -0.001461029052734375, -0.0007381439208984375, -0.001796722412109375, -0.0001068115234375, -0.0003153776633553207, -0.0011363490484654903, -0.016005996614694595, -2.741813204920618e-06, -0.000240325927734375, -0.0001220703125, -1.33514404296875e-05, -0.07540115714073181, -1.1920928244535389e-07, -0.0005950927734375, -0.0008087158203125, -0.0016040802001953125, -1.9073486328125e-06, -0.04658894240856171, -6.556489552167477e-06, -0.012260095216333866, 0.0, -8.20159912109375e-05, -0.0005283355712890625, -0.0001373291015625, -0.10673311352729797, 0.0, -0.000202178955078125, -3.62396240234375e-05, -0.0002443790144752711, -1.7404556274414062e-05, -7.62939453125e-05, -0.0002803802490234375, -7.62939453125e-05, -0.0013718213886022568, 0.0, -7.43865966796875e-05, -0.0001659393310546875, -0.000152587890625, -0.000518798828125, -9.000300633488223e-05, -5.245195097813848e-06, -1.9073486328125e-06, -0.00032269948860630393, 0.0, -1.9073486328125e-06, -1.9431105101830326e-05, -1.0728830375228426e-06, -2.288818359375e-05, -0.0004978179931640625, -0.0004367828369140625, -0.001308441162109375, -0.0018253326416015625, -0.00014495849609375, -0.010479927062988281, -0.0012607574462890625, -4.76837158203125e-05, -0.0002002716064453125, 0.0, -0.00045511050848290324, -2.3365020751953125e-05, -0.0006037686252966523, -1.1920928244535389e-07, -8.20142449811101e-05, 0.0, -0.00010895390732912347, -1.549708758830093e-05, -0.007460594177246094, -3.0517578125e-05, -0.0005283355712890625, -7.62939453125e-05, -0.0004558563232421875, -1.71661376953125e-05, -0.0016551699955016375, -1.6331669030478224e-05, -3.4332275390625e-05, -0.006058692932128906, -0.000125885009765625, -0.0010395050048828125, -1.52587890625e-05, -4.1961669921875e-05, -5.7220458984375e-06, -0.00013446807861328125, -1.1444091796875e-05, -0.01022350788116455, 0.0, -0.00019454954599495977, -9.775161743164062e-06, -0.017095565795898438, -0.0018329620361328125, -6.29425048828125e-05, -3.814697265625e-06, -7.82012939453125e-05, -0.00218523433431983, 0.0], "choice_history": [97, 286, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "minions", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "2", "<EOS>", 360, 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "minions", "<EOS>", 136, 318, 21, 174, "minions", "<EOS>", "remove", "<EOS>", 346, 50, 174, "minion", "<EOS>", 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "minions"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "minion"}], "_type": "Template77", "hole1": "remove", "hole0": {"_type": "Name", "id": "minions"}}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}]}}], "hole3": "use", "hole0": "Cleave", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 2, "hole0": "Cleave"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 2, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -0.5540701476085843, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score_history": [-1.71661376953125e-05, -0.04876136779785156, -9.298280929215252e-06, -0.0011407823767513037, -1.013253495329991e-05, -0.00021564960479736328, -4.88758041683468e-06, -5.7220458984375e-06, -0.0040435791015625, -0.0001068115234375, -4.29153169534402e-06, -5.9604644775390625e-06, -5.722029527532868e-06, 0.0, -0.00029218191048130393, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -7.033347174001392e-06, 0.0, -0.0002040863037109375, -0.000148773193359375, -5.364416665543104e-06, -4.410743713378906e-06, -0.018331527709960938, -1.1444091796875e-05, -0.0002384185791015625, -2.47955322265625e-05, -3.62396240234375e-05, -1.1444091796875e-05, 0.0, -3.719329833984375e-05, -0.00011265277862548828, -3.0636758310720325e-05, -1.1920928244535389e-07, -8.344650268554688e-06, -1.1920928244535389e-07, -1.1682502190524247e-05, -4.768370445162873e-07, -0.04137229919433594, -1.33514404296875e-05, -0.000640869140625, -3.814697265625e-06, -5.340576171875e-05, -0.0006089566741138697, -0.0002956197422463447, -0.0018024444580078125, -0.0001010894775390625, -0.0001659393310546875, -1.71661376953125e-05, -0.00018310546875, 0.0, -0.005362749099731445, -3.4332275390625e-05, -0.00023651123046875, -5.7220458984375e-06, -7.62939453125e-06, -0.020421981811523438, -4.38690185546875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.000110626220703125, -2.47955322265625e-05, -0.00011599059507716447, -3.933906555175781e-06, -0.007896661758422852, 0.0, -0.0003681182861328125, -5.841255187988281e-06, -0.0020122528076171875, -0.0008544921875, -9.5367431640625e-05, -0.00055694580078125, -0.0019695477094501257, -1.9073486328125e-06, -0.0006351470947265625, -3.814697265625e-06, -0.0001983642578125, -6.4849853515625e-05, -0.004082579165697098, -1.1920928244535389e-07, -0.0001964569091796875, -1.71661376953125e-05, -7.62939453125e-06, -0.0003399766865186393, -4.9591064453125e-05, -0.0003662109375, 0.0, -0.014142811298370361, 0.0, -0.01574993133544922, -0.002960205078125, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -6.866455078125e-05, -0.011373840272426605, -1.7166135876323096e-05, -0.0003185272216796875, -1.52587890625e-05, -0.00012969970703125, -1.9073486328125e-06, -0.00030517578125, 0.0, -0.0015034668613225222, -1.1920928244535389e-07, -0.001614689826965332, -1.9073486328125e-06, -0.0001392364501953125, -0.0015506744384765625, -5.7220458984375e-06, -0.0002937614917755127, -0.0012702918611466885, -0.001461029052734375, -0.0007381439208984375, -0.001796722412109375, -0.0001068115234375, -0.0003153776633553207, -0.0011363490484654903, -0.016005996614694595, -2.741813204920618e-06, -0.000240325927734375, -0.0001220703125, -1.33514404296875e-05, -0.07540115714073181, -1.1920928244535389e-07, -0.0005950927734375, -0.0008087158203125, -0.0016040802001953125, -1.9073486328125e-06, -0.04658894240856171, -6.556489552167477e-06, -0.012260095216333866, 0.0, -8.20159912109375e-05, -0.0005283355712890625, -0.0001373291015625, -2.3511736392974854, -8.416175842285156e-05, -5.53131103515625e-05, -2.47955322265625e-05, -0.0009549856185913086, -1.919269561767578e-05, -4.38690185546875e-05, -0.0002727508544921875, -4.76837158203125e-05, -0.0013248877367004752, 0.0, -7.2479248046875e-05, -0.0002117156982421875, -0.0001583099365234375, -0.00040435791015625, -0.0001028776096063666, -5.722029527532868e-06, -1.9073486328125e-06, -0.000301957072224468, 0.0, -1.9073486328125e-06, -1.966952368093189e-05, -1.1920922133867862e-06, -2.47955322265625e-05, -0.000507354736328125, -0.0004138946533203125, -0.0012569427490234375, -0.0016269683837890625, -0.0001544952392578125, -0.010886192321777344, -0.001194000244140625, -4.57763671875e-05, -0.0001964569091796875, 0.0, -0.00047811499098315835, -2.3484230041503906e-05, -0.0005762344226241112, -1.1920928244535389e-07, -7.498118793591857e-05, 0.0, -0.0001078811110346578, -1.549708758830093e-05, -0.007145881652832031, -2.86102294921875e-05, -0.000530242919921875, -7.82012939453125e-05, -0.0004596710205078125, -1.71661376953125e-05, -0.0016622038092464209, -1.6331669030478224e-05, -3.4332275390625e-05, -0.00609588623046875, -0.0001239776611328125, -0.0010280609130859375, -1.52587890625e-05, -4.1961669921875e-05, -5.7220458984375e-06, -0.00013446807861328125, -1.1444091796875e-05, -0.010209202766418457, 0.0, -0.00019252301717642695, -9.775161743164062e-06, -0.017276763916015625, -0.0018358230590820312, -6.29425048828125e-05, -3.814697265625e-06, -7.82012939453125e-05, -0.002175697823986411, 0.0], "choice_history": [97, 286, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "minions", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "2", "<EOS>", 360, 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "minions", "<EOS>", 136, 318, 21, 174, "minions", "<EOS>", "remove", "<EOS>", 346, 50, 174, "minion", "<EOS>", 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "minions"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "minion"}], "_type": "Template77", "hole1": "remove", "hole0": {"_type": "Name", "id": "minions"}}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}]}}], "hole3": "use", "hole0": "Cleave", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 2, "hole0": "Cleave"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 2, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -2.7989110143463023, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score_history": [-1.71661376953125e-05, -0.04876136779785156, -9.298280929215252e-06, -0.0011407823767513037, -1.013253495329991e-05, -0.00021564960479736328, -4.88758041683468e-06, -5.7220458984375e-06, -0.0040435791015625, -0.0001068115234375, -4.29153169534402e-06, -5.9604644775390625e-06, -5.722029527532868e-06, 0.0, -0.00029218191048130393, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -7.033347174001392e-06, 0.0, -0.0002040863037109375, -0.000148773193359375, -5.364416665543104e-06, -4.410743713378906e-06, -0.018331527709960938, -1.1444091796875e-05, -0.0002384185791015625, -2.47955322265625e-05, -3.62396240234375e-05, -1.1444091796875e-05, 0.0, -3.719329833984375e-05, -0.00011265277862548828, -3.0636758310720325e-05, -1.1920928244535389e-07, -8.344650268554688e-06, -1.1920928244535389e-07, -1.1682502190524247e-05, -4.768370445162873e-07, -0.04137229919433594, -1.33514404296875e-05, -0.000640869140625, -3.814697265625e-06, -5.340576171875e-05, -0.0006089566741138697, -0.0002956197422463447, -0.0018024444580078125, -0.0001010894775390625, -0.0001659393310546875, -1.71661376953125e-05, -0.00018310546875, 0.0, -0.005362749099731445, -3.4332275390625e-05, -0.00023651123046875, -5.7220458984375e-06, -7.62939453125e-06, -0.020421981811523438, -4.38690185546875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.000110626220703125, -2.47955322265625e-05, -0.00011599059507716447, -3.933906555175781e-06, -0.007896661758422852, 0.0, -0.0003681182861328125, -5.841255187988281e-06, -0.0020122528076171875, -0.0008544921875, -9.5367431640625e-05, -0.00055694580078125, -0.0019695477094501257, -1.9073486328125e-06, -0.0006351470947265625, -3.814697265625e-06, -0.0001983642578125, -6.4849853515625e-05, -0.004082579165697098, -1.1920928244535389e-07, -0.0001964569091796875, -1.71661376953125e-05, -7.62939453125e-06, -0.0003399766865186393, -4.9591064453125e-05, -0.0003662109375, 0.0, -0.014142811298370361, 0.0, -0.01574993133544922, -0.002960205078125, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -6.866455078125e-05, -0.011373840272426605, -1.7166135876323096e-05, -0.0003185272216796875, -1.52587890625e-05, -0.00012969970703125, -1.9073486328125e-06, -0.00030517578125, 0.0, -0.0015034668613225222, -1.1920928244535389e-07, -0.001614689826965332, -1.9073486328125e-06, -0.0001392364501953125, -0.0015506744384765625, -5.7220458984375e-06, -0.0002937614917755127, -0.0012702918611466885, -0.001461029052734375, -0.0007381439208984375, -0.001796722412109375, -0.0001068115234375, -0.0003153776633553207, -0.0011363490484654903, -0.016005996614694595, -2.741813204920618e-06, -0.000240325927734375, -0.0001220703125, -1.33514404296875e-05, -2.8271610736846924, -5.960462772236497e-07, -0.0012683868408203125, -0.0001277923583984375, -0.0034952163696289062, -5.7220458984375e-06, -0.33152857422828674, -3.814689989667386e-06, -0.028734855353832245, 0.0, -3.0517578125e-05, -0.0006561279296875, -8.20159912109375e-05, -0.05492754280567169, 0.0, -0.0002155303955078125, -4.38690185546875e-05, -0.0002350807044422254, -1.3589859008789062e-05, -6.67572021484375e-05, -0.0003070831298828125, -7.2479248046875e-05, -0.0013819269370287657, 0.0, -7.82012939453125e-05, -0.0001697540283203125, -0.0001506805419921875, -0.000598907470703125, -9.214877354679629e-05, -5.006777428206988e-06, -3.814697265625e-06, -0.0003098248562309891, 0.0, -1.9073486328125e-06, -2.1338453734642826e-05, -1.0728830375228426e-06, -2.288818359375e-05, -0.0004978179931640625, -0.000446319580078125, -0.0013332366943359375, -0.0019512176513671875, -0.0001468658447265625, -0.010476112365722656, -0.001277923583984375, -4.76837158203125e-05, -0.0002002716064453125, 0.0, -0.0004430728149600327, -2.5272369384765625e-05, -0.0005883931880816817, -1.1920928244535389e-07, -7.951087900437415e-05, 0.0, -0.00010692751675378531, -1.537788011773955e-05, -0.007441520690917969, -2.86102294921875e-05, -0.0005283355712890625, -7.62939453125e-05, -0.000457763671875, -1.71661376953125e-05, -0.0016415889840573072, -1.6331669030478224e-05, -3.4332275390625e-05, -0.006061553955078125, -0.0001239776611328125, -0.00103759765625, -1.52587890625e-05, -4.1961669921875e-05, -5.7220458984375e-06, -0.00013446807861328125, -1.1444091796875e-05, -0.010206341743469238, 0.0, -0.00019252301717642695, -9.775161743164062e-06, -0.017103195190429688, -0.0018367767333984375, -6.29425048828125e-05, -3.814697265625e-06, -7.82012939453125e-05, -0.002181420335546136, 0.0], "choice_history": [97, 286, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "minions", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "2", "<EOS>", 360, 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "minions", "<EOS>", 136, 318, 21, 174, "minions", "<EOS>", "remove", "<EOS>", 346, 50, 174, "card", "<EOS>", 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "minions"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "card"}], "_type": "Template77", "hole1": "remove", "hole0": {"_type": "Name", "id": "minions"}}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}]}}], "hole3": "use", "hole0": "Cleave", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 2, "hole0": "Cleave"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 2, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -3.5575550762346424, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(card)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score_history": [-1.71661376953125e-05, -0.04876136779785156, -9.298280929215252e-06, -0.0011407823767513037, -1.013253495329991e-05, -0.00021564960479736328, -4.88758041683468e-06, -5.7220458984375e-06, -0.0040435791015625, -0.0001068115234375, -4.29153169534402e-06, -5.9604644775390625e-06, -5.722029527532868e-06, 0.0, -0.00029218191048130393, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -7.033347174001392e-06, 0.0, -0.0002040863037109375, -0.000148773193359375, -5.364416665543104e-06, -4.410743713378906e-06, -0.018331527709960938, -1.1444091796875e-05, -0.0002384185791015625, -2.47955322265625e-05, -3.62396240234375e-05, -1.1444091796875e-05, 0.0, -3.719329833984375e-05, -0.00011265277862548828, -3.0636758310720325e-05, -1.1920928244535389e-07, -8.344650268554688e-06, -1.1920928244535389e-07, -1.1682502190524247e-05, -4.768370445162873e-07, -0.04137229919433594, -1.33514404296875e-05, -0.000640869140625, -3.814697265625e-06, -5.340576171875e-05, -0.0006089566741138697, -0.0002956197422463447, -0.0018024444580078125, -0.0001010894775390625, -0.0001659393310546875, -1.71661376953125e-05, -0.00018310546875, 0.0, -0.005362749099731445, -3.4332275390625e-05, -0.00023651123046875, -5.7220458984375e-06, -7.62939453125e-06, -0.020421981811523438, -4.38690185546875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.000110626220703125, -2.47955322265625e-05, -0.00011599059507716447, -3.933906555175781e-06, -0.007896661758422852, 0.0, -0.0003681182861328125, -5.841255187988281e-06, -0.0020122528076171875, -0.0008544921875, -9.5367431640625e-05, -0.00055694580078125, -0.0019695477094501257, -1.9073486328125e-06, -0.0006351470947265625, -3.814697265625e-06, -0.0001983642578125, -6.4849853515625e-05, -0.004082579165697098, -1.1920928244535389e-07, -0.0001964569091796875, -1.71661376953125e-05, -7.62939453125e-06, -0.0003399766865186393, -4.9591064453125e-05, -0.0003662109375, 0.0, -0.014142811298370361, 0.0, -0.01574993133544922, -0.002960205078125, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -6.866455078125e-05, -0.011373840272426605, -1.7166135876323096e-05, -0.0003185272216796875, -1.52587890625e-05, -0.00012969970703125, -1.9073486328125e-06, -0.00030517578125, 0.0, -0.0015034668613225222, -1.1920928244535389e-07, -0.001614689826965332, -1.9073486328125e-06, -0.0001392364501953125, -0.0015506744384765625, -5.7220458984375e-06, -0.0002937614917755127, -0.0012702918611466885, -0.001461029052734375, -0.0007381439208984375, -0.001796722412109375, -0.0001068115234375, -0.0003153776633553207, -0.0011363490484654903, -0.016005996614694595, -2.741813204920618e-06, -0.000240325927734375, -0.0001220703125, -1.33514404296875e-05, -0.07540115714073181, -1.1920928244535389e-07, -0.0005950927734375, -0.0008087158203125, -0.0016040802001953125, -1.9073486328125e-06, -3.3874313831329346, -5.841253368998878e-06, -0.02537521906197071, -2.384185791015625e-06, -0.0001811981201171875, -0.000217437744140625, -9.5367431640625e-05, -0.0005739927291870117, 0.0, -0.000217437744140625, -0.23203563690185547, -6.103515625e-05, -0.004401671700179577, 0.0, -0.000942230224609375, -0.00035858154296875, -0.0001773834228515625, -0.000156402587890625, -1.5854835510253906e-05, -1.5497195136049413e-06, -5.7220458984375e-06, -0.0004891157150268555, 0.0, -3.814697265625e-06, -5.757807957706973e-05, -1.311301275563892e-06, -6.866455078125e-05, -0.0006275177001953125, -0.0006046295166015625, -0.0018672943115234375, -0.0020961761474609375, -0.000171661376953125, -0.011430740356445312, -0.0013408660888671875, -4.57763671875e-05, -0.0002117156982421875, 0.0, -0.00042233301792293787, -2.7179718017578125e-05, -0.000590180978178978, -1.1920928244535389e-07, -8.547121979063377e-05, 0.0, -0.00010621231922414154, -1.4305012882687151e-05, -0.0078105926513671875, -2.86102294921875e-05, -0.000522613525390625, -7.82012939453125e-05, -0.00045013427734375, -1.71661376953125e-05, -0.0016203784616664052, -1.6212459740927443e-05, -3.4332275390625e-05, -0.006051063537597656, -0.00012969970703125, -0.0010204315185546875, -1.52587890625e-05, -4.1961669921875e-05, -5.7220458984375e-06, -0.00013446807861328125, -1.1444091796875e-05, -0.01017773151397705, 0.0, -0.00019264222646597773, -9.775161743164062e-06, -0.0170135498046875, -0.0018377304077148438, -6.29425048828125e-05, -3.814697265625e-06, -7.82012939453125e-05, -0.002183327218517661, 0.0], "choice_history": [97, 286, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "minions", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "2", "<EOS>", 360, 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "minions", "<EOS>", 136, 318, 21, 174, "minions", "<EOS>", "remove", "<EOS>", 346, 50, 174, "minion", "<EOS>", 136, 318, 21, 174, "minions", "<EOS>", "remove", "<EOS>", 346, 50, 174, "minion", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "minions"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "minion"}], "_type": "Template77", "hole1": "remove", "hole0": {"_type": "Name", "id": "minions"}}, {"hole2": [{"_type": "Name", "id": "minion"}], "_type": "Template77", "hole1": "remove", "hole0": {"_type": "Name", "id": "minions"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}]}}], "hole3": "use", "hole0": "Cleave", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 2, "hole0": "Cleave"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 2, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.039234008810993, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minions.remove(minion)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score_history": [-1.71661376953125e-05, -0.04876136779785156, -9.298280929215252e-06, -0.0011407823767513037, -1.013253495329991e-05, -0.00021564960479736328, -4.88758041683468e-06, -5.7220458984375e-06, -0.0040435791015625, -0.0001068115234375, -4.29153169534402e-06, -5.9604644775390625e-06, -5.722029527532868e-06, 0.0, -0.00029218191048130393, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -7.033347174001392e-06, 0.0, -0.0002040863037109375, -0.000148773193359375, -5.364416665543104e-06, -4.410743713378906e-06, -0.018331527709960938, -1.1444091796875e-05, -0.0002384185791015625, -2.47955322265625e-05, -3.62396240234375e-05, -1.1444091796875e-05, 0.0, -3.719329833984375e-05, -0.00011265277862548828, -3.0636758310720325e-05, -1.1920928244535389e-07, -8.344650268554688e-06, -1.1920928244535389e-07, -1.1682502190524247e-05, -4.768370445162873e-07, -0.04137229919433594, -1.33514404296875e-05, -0.000640869140625, -3.814697265625e-06, -5.340576171875e-05, -0.0006089566741138697, -0.0002956197422463447, -0.0018024444580078125, -0.0001010894775390625, -0.0001659393310546875, -1.71661376953125e-05, -0.00018310546875, 0.0, -0.005362749099731445, -3.4332275390625e-05, -0.00023651123046875, -5.7220458984375e-06, -7.62939453125e-06, -3.95560359954834, -3.814697265625e-06, -0.0069524128921329975, -0.00014209747314453125, -0.13489246368408203, -0.0002040863037109375, -1.33514404296875e-05, -6.4849853515625e-05, -0.04604807496070862, -2.288818359375e-05, -0.0005512237548828125, -1.1444091796875e-05, -0.0009441375732421875, -1.9073486328125e-05, -0.004190525040030479, -3.933906555175781e-06, -0.0003604888916015625, -1.71661376953125e-05, -5.7220458984375e-06, -0.0004217549867462367, -3.814697265625e-05, -0.000331878662109375, 0.0, -0.012644946575164795, 0.0, -0.03518104553222656, -0.0033721923828125, -1.52587890625e-05, -7.62939453125e-06, -1.9073486328125e-06, -6.866455078125e-05, -0.016226476058363914, -2.360343569307588e-05, -0.00029754638671875, -1.33514404296875e-05, -0.0001392364501953125, 0.0, -0.0003032684326171875, 0.0, -0.0014085761504247785, -1.1920928244535389e-07, -0.001591801643371582, -1.9073486328125e-06, -0.000141143798828125, -0.0015316009521484375, -5.7220458984375e-06, -0.0002903938293457031, -0.0012820935808122158, -0.001636505126953125, -0.00080108642578125, -0.0018091201782226562, -0.0001087188720703125, -0.0003271755704190582, -0.0012260220246389508, -0.016362732276320457, -2.741813204920618e-06, -0.0002422332763671875, -0.0001316070556640625, -1.52587890625e-05, -0.09677295386791229, -1.1920928244535389e-07, -0.00069427490234375, -0.0007152557373046875, -0.0016937255859375, -3.814697265625e-06, -0.05268882215023041, -6.079655122448457e-06, -0.011463204398751259, 0.0, -8.0108642578125e-05, -0.000514984130859375, -0.0001373291015625, -0.10725709795951843, 0.0, -0.00020599365234375, -3.62396240234375e-05, -0.0002481937117408961, -1.7404556274414062e-05, -7.62939453125e-05, -0.00028228759765625, -7.62939453125e-05, -0.0013910079142078757, 0.0, -7.43865966796875e-05, -0.0001678466796875, -0.000152587890625, -0.0005626678466796875, -9.202956425724551e-05, -5.245195097813848e-06, -1.9073486328125e-06, -0.000321030558552593, 0.0, -1.9073486328125e-06, -2.1338453734642826e-05, -1.0728830375228426e-06, -2.288818359375e-05, -0.00049591064453125, -0.000446319580078125, -0.00131988525390625, -0.0018939971923828125, -0.0001468658447265625, -0.010656356811523438, -0.0012674331665039062, -4.76837158203125e-05, -0.0002002716064453125, 0.0, -0.0004476012254599482, -2.3365020751953125e-05, -0.0006056751008145511, -1.1920928244535389e-07, -8.23718510218896e-05, 0.0, -0.00010752351226983592, -1.537788011773955e-05, -0.00750732421875, -3.0517578125e-05, -0.0005283355712890625, -7.82012939453125e-05, -0.0004558563232421875, -1.71661376953125e-05, -0.0016539774369448423, -1.6331669030478224e-05, -3.4332275390625e-05, -0.006058692932128906, -0.000125885009765625, -0.0010356903076171875, -1.52587890625e-05, -4.1961669921875e-05, -5.7220458984375e-06, -0.00013446807861328125, -1.1444091796875e-05, -0.010221600532531738, 0.0, -0.0001926422119140625, -9.775161743164062e-06, -0.017091751098632812, -0.0018320083618164062, -6.29425048828125e-05, -3.814697265625e-06, -7.82012939453125e-05, -0.002179512521252036, 0.0], "choice_history": [97, 286, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "minions", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 50, 174, "minions", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "2", "<EOS>", 360, 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "minions", "<EOS>", 136, 318, 21, 174, "minions", "<EOS>", "remove", "<EOS>", 346, 50, 174, "minion", "<EOS>", 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"_type": "Name", "id": "minions"}]}, "_type": "Assign"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "minions"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "minion"}], "_type": "Template77", "hole1": "remove", "hole0": {"_type": "Name", "id": "minions"}}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}]}}], "hole3": "use", "hole0": "Cleave", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 2, "hole0": "Cleave"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 2, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.715839557515402, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score_history": [-1.71661376953125e-05, -0.04876136779785156, -9.298280929215252e-06, -0.0011407823767513037, -1.013253495329991e-05, -0.00021564960479736328, -4.88758041683468e-06, -5.7220458984375e-06, -0.0040435791015625, -0.0001068115234375, -4.29153169534402e-06, -5.9604644775390625e-06, -5.722029527532868e-06, 0.0, -0.00029218191048130393, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -7.033347174001392e-06, 0.0, -0.0002040863037109375, -0.000148773193359375, -5.364416665543104e-06, -4.410743713378906e-06, -0.018331527709960938, -1.1444091796875e-05, -0.0002384185791015625, -2.47955322265625e-05, -3.62396240234375e-05, -1.1444091796875e-05, 0.0, -3.719329833984375e-05, -0.00011265277862548828, -3.0636758310720325e-05, -1.1920928244535389e-07, -8.344650268554688e-06, -1.1920928244535389e-07, -1.1682502190524247e-05, -4.768370445162873e-07, -0.04137229919433594, -1.33514404296875e-05, -0.000640869140625, -3.814697265625e-06, -5.340576171875e-05, -0.0006089566741138697, -0.0002956197422463447, -0.0018024444580078125, -0.0001010894775390625, -0.0001659393310546875, -1.71661376953125e-05, -0.00018310546875, 0.0, -0.005362749099731445, -3.4332275390625e-05, -0.00023651123046875, -5.7220458984375e-06, -7.62939453125e-06, -0.020421981811523438, -4.38690185546875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.000110626220703125, -2.47955322265625e-05, -0.00011599059507716447, -3.933906555175781e-06, -0.007896661758422852, 0.0, -0.0003681182861328125, -5.841255187988281e-06, -0.0020122528076171875, -0.0008544921875, -9.5367431640625e-05, -0.00055694580078125, -0.0019695477094501257, -1.9073486328125e-06, -0.0006351470947265625, -3.814697265625e-06, -0.0001983642578125, -6.4849853515625e-05, -0.004082579165697098, -1.1920928244535389e-07, -0.0001964569091796875, -1.71661376953125e-05, -7.62939453125e-06, -0.0003399766865186393, -4.9591064453125e-05, -0.0003662109375, 0.0, -0.014142811298370361, 0.0, -0.01574993133544922, -0.002960205078125, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -6.866455078125e-05, -0.011373840272426605, -1.7166135876323096e-05, -0.0003185272216796875, -1.52587890625e-05, -0.00012969970703125, -1.9073486328125e-06, -0.00030517578125, 0.0, -0.0015034668613225222, -1.1920928244535389e-07, -0.001614689826965332, -1.9073486328125e-06, -0.0001392364501953125, -0.0015506744384765625, -5.7220458984375e-06, -0.0002937614917755127, -0.0012702918611466885, -0.001461029052734375, -0.0007381439208984375, -0.001796722412109375, -0.0001068115234375, -0.0003153776633553207, -0.0011363490484654903, -0.016005996614694595, -2.741813204920618e-06, -0.000240325927734375, -0.0001220703125, -1.33514404296875e-05, -2.8271610736846924, -5.960462772236497e-07, -0.0012683868408203125, -0.0001277923583984375, -0.0034952163696289062, -5.7220458984375e-06, -1.4292716979980469, -1.0967229172820225e-05, -0.041267551481723785, -2.3841855067985307e-07, -0.000110626220703125, -0.000213623046875, -8.0108642578125e-05, -0.0007300375727936625, 0.0, -0.0002002716064453125, -0.17607688903808594, -4.1961669921875e-05, -0.005312337074428797, -1.1920928244535389e-07, -0.0006351470947265625, -0.000308990478515625, -0.0001678466796875, -0.00019073486328125, -1.3828277587890625e-05, -1.311301275563892e-06, -7.62939453125e-06, -0.0003954172134399414, 0.0, -3.814697265625e-06, -5.757807957706973e-05, -1.311301275563892e-06, -6.67572021484375e-05, -0.00064849853515625, -0.000621795654296875, -0.00189208984375, -0.002307891845703125, -0.0001697540283203125, -0.011434555053710938, -0.0013446807861328125, -4.57763671875e-05, -0.0002117156982421875, 0.0, -0.00041744651389308274, -2.9087066650390625e-05, -0.0005786201218143106, -1.1920928244535389e-07, -8.427908323938027e-05, 0.0, -0.00010609311721054837, -1.4185804502631072e-05, -0.0077571868896484375, -2.86102294921875e-05, -0.0005207061767578125, -7.82012939453125e-05, -0.0004520416259765625, -1.71661376953125e-05, -0.0016137062339112163, -1.6212459740927443e-05, -3.24249267578125e-05, -0.0060672760009765625, -0.00012969970703125, -0.0010204315185546875, -1.52587890625e-05, -4.1961669921875e-05, -5.7220458984375e-06, -0.00013446807861328125, -1.1444091796875e-05, -0.01016533374786377, 0.0, -0.00019264222646597773, -9.775161743164062e-06, -0.017026901245117188, -0.0018396377563476562, -6.29425048828125e-05, -3.814697265625e-06, -7.82012939453125e-05, -0.002181419637054205, 0.0], "choice_history": [97, 286, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "minions", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "2", "<EOS>", 360, 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "minions", "<EOS>", 136, 318, 21, 174, "minions", "<EOS>", "remove", "<EOS>", 346, 50, 174, "card", "<EOS>", 136, 318, 21, 174, "minions", "<EOS>", "remove", "<EOS>", 346, 50, 174, "minion", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "minions"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "card"}], "_type": "Template77", "hole1": "remove", "hole0": {"_type": "Name", "id": "minions"}}, {"hole2": [{"_type": "Name", "id": "minion"}], "_type": "Template77", "hole1": "remove", "hole0": {"_type": "Name", "id": "minions"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}]}}], "hole3": "use", "hole0": "Cleave", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 2, "hole0": "Cleave"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 2, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.795391295828367, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(card)\n            minions.remove(minion)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score_history": [-1.71661376953125e-05, -0.04876136779785156, -9.298280929215252e-06, -0.0011407823767513037, -1.013253495329991e-05, -0.00021564960479736328, -4.88758041683468e-06, -5.7220458984375e-06, -0.0040435791015625, -0.0001068115234375, -4.29153169534402e-06, -5.9604644775390625e-06, -5.722029527532868e-06, 0.0, -0.00029218191048130393, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -7.033347174001392e-06, 0.0, -0.0002040863037109375, -0.000148773193359375, -5.364416665543104e-06, -4.410743713378906e-06, -4.330340385437012, -0.0001678466796875, -0.0001220703125, -0.0001163482666015625, -6.67572021484375e-05, -1.9073486328125e-05, 0.0, -7.379054295597598e-05, -0.00016045570373535156, -5.125947791384533e-05, -1.1920928244535389e-07, -1.609325408935547e-05, -1.1920928244535389e-07, -1.1444084520917386e-05, -5.960462772236497e-07, -0.0004482269287109375, -1.9073486328125e-06, -9.72747802734375e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.0037592214066535234, -0.00012361285916995257, -0.009959220886230469, -5.14984130859375e-05, -0.00167083740234375, -2.86102294921875e-05, -0.0002002716064453125, 0.0, -0.010508418083190918, -2.86102294921875e-05, -0.000240325927734375, -3.814697265625e-06, -5.7220458984375e-06, -0.014842987060546875, -5.14984130859375e-05, -6.67572021484375e-05, -1.9073486328125e-06, -0.0001201629638671875, -2.09808349609375e-05, -0.00010597702203085646, -3.933906555175781e-06, -0.007524728775024414, 0.0, -0.0004100799560546875, -7.748603820800781e-06, -0.00012969970703125, -0.00020599365234375, -0.0019893646240234375, -0.0001201629638671875, -0.04080505296587944, -3.576278118089249e-07, -0.20738518238067627, -2.7656551537802443e-05, -0.000110626220703125, -0.0039234161376953125, 0.0, -0.0003795623779296875, 0.0, -0.0001678466796875, -1.9073486328125e-06, -3.3855438232421875e-05, -6.079673767089844e-06, -0.02739238739013672, -1.1444091796875e-05, -0.09700489044189453, -1.7523765563964844e-05, -0.0983428955078125, -0.0002460479736328125, -2.6702880859375e-05, -0.0009479522705078125, -0.10243533551692963, -1.9073486328125e-06, -0.0004215240478515625, -1.9073486328125e-06, -3.0517578125e-05, -0.000125885009765625, -0.0018726643174886703, -1.1920928244535389e-07, -0.0001220703125, -2.288818359375e-05, -7.62939453125e-06, -0.0003105391515418887, -2.86102294921875e-05, -0.0001239776611328125, 0.0, -0.013456881046295166, 0.0, -0.05034160614013672, -0.0044040679931640625, -1.9073486328125e-05, -5.7220458984375e-06, -3.814697265625e-06, -6.29425048828125e-05, -0.01202731765806675, -1.4781950994802173e-05, -0.0002899169921875, -1.9073486328125e-05, -0.0001068115234375, 0.0, -0.0003070831298828125, 0.0, -0.0014749759575352073, -1.1920928244535389e-07, -0.0016431808471679688, -1.9073486328125e-06, -0.00012969970703125, -0.0015659332275390625, -5.7220458984375e-06, -0.00029593706130981445, -0.0012565827928483486, -0.0014982223510742188, -0.0006961822509765625, -0.0015106201171875, -9.5367431640625e-05, -0.0004626630980055779, -0.0011660025920718908, -0.016030071303248405, -2.741813204920618e-06, -0.000213623046875, -0.0001068115234375, -1.1444091796875e-05, -0.038864750415086746, -1.1920928244535389e-07, -0.0005359649658203125, -0.000797271728515625, -0.001476287841796875, -1.9073486328125e-06, -0.035550180822610855, -6.6756979322235566e-06, -0.013476007618010044, 0.0, -8.392333984375e-05, -0.0005359649658203125, -0.0001373291015625, -0.10677063465118408, 0.0, -0.0002002716064453125, -3.62396240234375e-05, -0.00024247168039437383, -1.7404556274414062e-05, -7.62939453125e-05, -0.0002765655517578125, -7.62939453125e-05, -0.0013743324670940638, 0.0, -7.43865966796875e-05, -0.000164031982421875, -0.000152587890625, -0.0004024505615234375, -8.57114719110541e-05, -5.245195097813848e-06, -1.9073486328125e-06, -0.00031232828041538596, 0.0, -1.9073486328125e-06, -1.9550314391381107e-05, -1.0728830375228426e-06, -2.288818359375e-05, -0.0005035400390625, -0.0004119873046875, -0.001277923583984375, -0.0016498565673828125, -0.0001392364501953125, -0.01006317138671875, -0.0012454986572265625, -4.57763671875e-05, -0.0001983642578125, 0.0, -0.0004698906559497118, -2.3365020751953125e-05, -0.0005925658624619246, -1.1920928244535389e-07, -8.106062887236476e-05, 0.0, -0.00011217228893656284, -1.585470999998506e-05, -0.007381439208984375, -2.86102294921875e-05, -0.00052642822265625, -7.43865966796875e-05, -0.000457763671875, -1.71661376953125e-05, -0.0016599390655755997, -1.6331669030478224e-05, -3.4332275390625e-05, -0.006060600280761719, -0.000125885009765625, -0.0010509490966796875, -1.52587890625e-05, -4.00543212890625e-05, -5.7220458984375e-06, -0.00013446807861328125, -1.1444091796875e-05, -0.010230183601379395, 0.0, -0.00019443036580923945, -9.775161743164062e-06, -0.017101287841796875, -0.0018358230590820312, -6.29425048828125e-05, -3.814697265625e-06, -7.82012939453125e-05, -0.0021832084748893976, 0.0], "choice_history": [97, 286, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "minions", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "extend", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "2", "<EOS>", 360, 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "minions", "<EOS>", 136, 318, 21, 174, "minions", "<EOS>", "remove", "<EOS>", 346, 50, 174, "minion", "<EOS>", 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Template77", "hole1": "extend", "hole0": {"_type": "Name", "id": "targets"}}, {"target": {"_type": "Name", "id": "i"}, "body": [{"targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "minions"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "minion"}], "_type": "Template77", "hole1": "remove", "hole0": {"_type": "Name", "id": "minions"}}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}]}}], "hole3": "use", "hole0": "Cleave", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 2, "hole0": "Cleave"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 2, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.398501135410768, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score_history": [-1.71661376953125e-05, -0.04876136779785156, -9.298280929215252e-06, -0.0011407823767513037, -1.013253495329991e-05, -0.00021564960479736328, -4.88758041683468e-06, -5.7220458984375e-06, -0.0040435791015625, -0.0001068115234375, -4.29153169534402e-06, -5.9604644775390625e-06, -5.722029527532868e-06, 0.0, -0.00029218191048130393, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -7.033347174001392e-06, 0.0, -0.0002040863037109375, -0.000148773193359375, -5.364416665543104e-06, -4.410743713378906e-06, -0.018331527709960938, -1.1444091796875e-05, -0.0002384185791015625, -2.47955322265625e-05, -3.62396240234375e-05, -1.1444091796875e-05, 0.0, -3.719329833984375e-05, -0.00011265277862548828, -3.0636758310720325e-05, -1.1920928244535389e-07, -8.344650268554688e-06, -1.1920928244535389e-07, -1.1682502190524247e-05, -4.768370445162873e-07, -0.04137229919433594, -1.33514404296875e-05, -0.000640869140625, -3.814697265625e-06, -5.340576171875e-05, -0.0006089566741138697, -0.0002956197422463447, -0.0018024444580078125, -0.0001010894775390625, -0.0001659393310546875, -1.71661376953125e-05, -0.00018310546875, 0.0, -0.005362749099731445, -3.4332275390625e-05, -0.00023651123046875, -5.7220458984375e-06, -7.62939453125e-06, -0.020421981811523438, -4.38690185546875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.000110626220703125, -2.47955322265625e-05, -0.00011599059507716447, -3.933906555175781e-06, -0.007896661758422852, 0.0, -0.0003681182861328125, -5.841255187988281e-06, -0.0020122528076171875, -0.0008544921875, -9.5367431640625e-05, -0.00055694580078125, -0.0019695477094501257, -1.9073486328125e-06, -0.0006351470947265625, -3.814697265625e-06, -0.0001983642578125, -6.4849853515625e-05, -0.004082579165697098, -1.1920928244535389e-07, -0.0001964569091796875, -1.71661376953125e-05, -7.62939453125e-06, -0.0003399766865186393, -4.9591064453125e-05, -0.0003662109375, 0.0, -0.014142811298370361, 0.0, -0.01574993133544922, -0.002960205078125, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -6.866455078125e-05, -0.011373840272426605, -1.7166135876323096e-05, -0.0003185272216796875, -1.52587890625e-05, -0.00012969970703125, -1.9073486328125e-06, -0.00030517578125, 0.0, -0.0015034668613225222, -1.1920928244535389e-07, -0.001614689826965332, -1.9073486328125e-06, -0.0001392364501953125, -0.0015506744384765625, -5.7220458984375e-06, -0.0002937614917755127, -0.0012702918611466885, -0.001461029052734375, -0.0007381439208984375, -0.001796722412109375, -0.0001068115234375, -0.0003153776633553207, -0.0011363490484654903, -0.016005996614694595, -2.741813204920618e-06, -0.000240325927734375, -0.0001220703125, -1.33514404296875e-05, -0.07540115714073181, -1.1920928244535389e-07, -0.0005950927734375, -0.0008087158203125, -0.0016040802001953125, -1.9073486328125e-06, -0.04658894240856171, -6.556489552167477e-06, -0.012260095216333866, 0.0, -8.20159912109375e-05, -0.0005283355712890625, -0.0001373291015625, -0.10673311352729797, 0.0, -0.000202178955078125, -3.62396240234375e-05, -0.0002443790144752711, -1.7404556274414062e-05, -7.62939453125e-05, -0.0002803802490234375, -7.62939453125e-05, -0.0013718213886022568, 0.0, -7.43865966796875e-05, -0.0001659393310546875, -0.000152587890625, -0.000518798828125, -9.000300633488223e-05, -5.245195097813848e-06, -1.9073486328125e-06, -0.00032269948860630393, 0.0, -1.9073486328125e-06, -1.9431105101830326e-05, -1.0728830375228426e-06, -2.288818359375e-05, -0.0004978179931640625, -0.0004367828369140625, -0.001308441162109375, -0.0018253326416015625, -0.00014495849609375, -0.010479927062988281, -0.0012607574462890625, -4.76837158203125e-05, -0.0002002716064453125, 0.0, -0.00045511050848290324, -2.3365020751953125e-05, -0.0006037686252966523, -1.1920928244535389e-07, -8.20142449811101e-05, 0.0, -0.00010895390732912347, -1.549708758830093e-05, -0.007460594177246094, -3.0517578125e-05, -0.0005283355712890625, -7.62939453125e-05, -0.0004558563232421875, -1.71661376953125e-05, -0.0016551699955016375, -1.6331669030478224e-05, -3.4332275390625e-05, -0.006058692932128906, -0.000125885009765625, -0.0010395050048828125, -1.52587890625e-05, -4.1961669921875e-05, -5.7220458984375e-06, -0.00013446807861328125, -1.1444091796875e-05, -5.035387992858887, -7.62939453125e-06, -0.0011234283447265625, -2.86102294921875e-05, -0.0005664825439453125, -0.014252662658691406, -4.1961669921875e-05, -3.814697265625e-06, -3.62396240234375e-05, -0.0010523973032832146, 0.0], "choice_history": [97, 286, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "minions", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "2", "<EOS>", 360, 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "minions", "<EOS>", 136, 318, 21, 174, "minions", "<EOS>", "remove", "<EOS>", 346, 50, 174, "minion", "<EOS>", 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "minions"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "minion"}], "_type": "Template77", "hole1": "remove", "hole0": {"_type": "Name", "id": "minions"}}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}]}}], "hole3": "use", "hole0": "Cleave", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 2, "hole0": "Cleave"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 2, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.574884813682004, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.current_player.\n            minions) >= 2\n"}, {"score_history": [-1.71661376953125e-05, -0.04876136779785156, -9.298280929215252e-06, -0.0011407823767513037, -1.013253495329991e-05, -0.00021564960479736328, -4.88758041683468e-06, -5.7220458984375e-06, -0.0040435791015625, -0.0001068115234375, -4.29153169534402e-06, -5.9604644775390625e-06, -5.722029527532868e-06, 0.0, -0.00029218191048130393, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -7.033347174001392e-06, 0.0, -0.0002040863037109375, -0.000148773193359375, -5.364416665543104e-06, -4.410743713378906e-06, -0.018331527709960938, -1.1444091796875e-05, -0.0002384185791015625, -2.47955322265625e-05, -3.62396240234375e-05, -1.1444091796875e-05, 0.0, -3.719329833984375e-05, -0.00011265277862548828, -3.0636758310720325e-05, -1.1920928244535389e-07, -8.344650268554688e-06, -1.1920928244535389e-07, -1.1682502190524247e-05, -4.768370445162873e-07, -0.04137229919433594, -1.33514404296875e-05, -0.000640869140625, -3.814697265625e-06, -5.340576171875e-05, -0.0006089566741138697, -0.0002956197422463447, -0.0018024444580078125, -0.0001010894775390625, -0.0001659393310546875, -1.71661376953125e-05, -0.00018310546875, 0.0, -0.005362749099731445, -3.4332275390625e-05, -0.00023651123046875, -5.7220458984375e-06, -7.62939453125e-06, -0.020421981811523438, -4.38690185546875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.000110626220703125, -2.47955322265625e-05, -0.00011599059507716447, -3.933906555175781e-06, -0.007896661758422852, 0.0, -0.0003681182861328125, -5.841255187988281e-06, -0.0020122528076171875, -0.0008544921875, -9.5367431640625e-05, -0.00055694580078125, -0.0019695477094501257, -1.9073486328125e-06, -0.0006351470947265625, -3.814697265625e-06, -0.0001983642578125, -6.4849853515625e-05, -0.004082579165697098, -1.1920928244535389e-07, -0.0001964569091796875, -1.71661376953125e-05, -7.62939453125e-06, -0.0003399766865186393, -4.9591064453125e-05, -0.0003662109375, 0.0, -0.014142811298370361, 0.0, -0.01574993133544922, -0.002960205078125, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -6.866455078125e-05, -4.734608173370361, -0.00590205192565918, -0.0008020401000976562, -9.5367431640625e-06, -0.0030574798583984375, -7.62939453125e-06, -0.000186920166015625, 0.0, -0.3446544408798218, -1.1920928244535389e-07, -0.002760767936706543, 0.0, -0.0001010894775390625, -0.001399993896484375, -3.814697265625e-06, -0.0006434619426727295, -0.000644802232272923, -0.0014438629150390625, -0.0006198883056640625, -0.0020780563354492188, -0.0001049041748046875, -0.00014840453513897955, -0.0017482395051047206, -0.01815827377140522, -2.622604142743512e-06, -0.0002288818359375, -0.0001087188720703125, -1.1444091796875e-05, -0.04234423115849495, -1.1920928244535389e-07, -0.0005321502685546875, -0.000835418701171875, -0.001491546630859375, -1.9073486328125e-06, -0.03386526182293892, -6.318072337307967e-06, -0.013416455127298832, 0.0, -8.20159912109375e-05, -0.0005359649658203125, -0.0001373291015625, -0.10581301897764206, 0.0, -0.0002002716064453125, -3.814697265625e-05, -0.00024247168039437383, -1.7404556274414062e-05, -7.62939453125e-05, -0.0002765655517578125, -7.62939453125e-05, -0.0013630047906190157, 0.0, -7.43865966796875e-05, -0.0001659393310546875, -0.000152587890625, -0.000461578369140625, -8.797644841251895e-05, -5.245195097813848e-06, -1.9073486328125e-06, -0.0003204345121048391, 0.0, -1.9073486328125e-06, -1.9550314391381107e-05, -1.0728830375228426e-06, -2.288818359375e-05, -0.000499725341796875, -0.000431060791015625, -0.001300811767578125, -0.0017871856689453125, -0.00014495849609375, -0.010448455810546875, -0.0012607574462890625, -4.76837158203125e-05, -0.0001983642578125, 0.0, -0.0004563023103401065, -2.3365020751953125e-05, -0.0006024576141498983, -1.1920928244535389e-07, -8.165663166437298e-05, 0.0, -0.00010919230408035219, -1.549708758830093e-05, -0.007466316223144531, -3.0517578125e-05, -0.0005283355712890625, -7.62939453125e-05, -0.0004558563232421875, -1.71661376953125e-05, -0.0016580303199589252, -1.6331669030478224e-05, -3.4332275390625e-05, -0.006058692932128906, -0.000125885009765625, -0.001041412353515625, -1.52587890625e-05, -4.1961669921875e-05, -5.7220458984375e-06, -0.00013446807861328125, -1.1444091796875e-05, -0.01022350788116455, 0.0, -0.00019443036580923945, -9.775161743164062e-06, -0.01709747314453125, -0.0018339157104492188, -6.29425048828125e-05, -3.814697265625e-06, -7.82012939453125e-05, -0.0021852347999811172, 0.0], "choice_history": [97, 286, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "minions", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "2", "<EOS>", 360, 102, 142, 346, 50, 174, "minions", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "minions", "<EOS>", 136, 318, 21, 174, "minions", "<EOS>", "remove", "<EOS>", 346, 50, 174, "minion", "<EOS>", 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "minions"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "minion"}], "_type": "Template77", "hole1": "remove", "hole0": {"_type": "Name", "id": "minions"}}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}]}}], "hole3": "use", "hole0": "Cleave", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 2, "hole0": "Cleave"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 2, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.587193770966181, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minions = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score_history": [-1.71661376953125e-05, -0.04876136779785156, -9.298280929215252e-06, -0.0011407823767513037, -1.013253495329991e-05, -0.00021564960479736328, -4.88758041683468e-06, -5.7220458984375e-06, -0.0040435791015625, -0.0001068115234375, -4.29153169534402e-06, -5.9604644775390625e-06, -5.722029527532868e-06, 0.0, -0.00029218191048130393, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -7.033347174001392e-06, 0.0, -0.0002040863037109375, -0.000148773193359375, -5.364416665543104e-06, -4.410743713378906e-06, -0.018331527709960938, -1.1444091796875e-05, -0.0002384185791015625, -2.47955322265625e-05, -3.62396240234375e-05, -1.1444091796875e-05, 0.0, -3.719329833984375e-05, -0.00011265277862548828, -3.0636758310720325e-05, -1.1920928244535389e-07, -8.344650268554688e-06, -1.1920928244535389e-07, -1.1682502190524247e-05, -4.768370445162873e-07, -0.04137229919433594, -1.33514404296875e-05, -0.000640869140625, -3.814697265625e-06, -5.340576171875e-05, -0.0006089566741138697, -0.0002956197422463447, -0.0018024444580078125, -0.0001010894775390625, -0.0001659393310546875, -1.71661376953125e-05, -0.00018310546875, 0.0, -0.005362749099731445, -3.4332275390625e-05, -0.00023651123046875, -5.7220458984375e-06, -7.62939453125e-06, -0.020421981811523438, -4.38690185546875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.000110626220703125, -2.47955322265625e-05, -0.00011599059507716447, -3.933906555175781e-06, -0.007896661758422852, 0.0, -0.0003681182861328125, -5.841255187988281e-06, -0.0020122528076171875, -0.0008544921875, -9.5367431640625e-05, -0.00055694580078125, -0.0019695477094501257, -1.9073486328125e-06, -0.0006351470947265625, -3.814697265625e-06, -0.0001983642578125, -6.4849853515625e-05, -0.004082579165697098, -1.1920928244535389e-07, -0.0001964569091796875, -1.71661376953125e-05, -7.62939453125e-06, -0.0003399766865186393, -4.9591064453125e-05, -0.0003662109375, 0.0, -4.900389671325684, -4.57763671875e-05, -0.16723918914794922, -0.0068359375, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.000110626220703125, -0.010490505956113338, -3.3855438232421875e-05, -0.0006055831909179688, -3.62396240234375e-05, -0.0001087188720703125, 0.0, -0.0002880096435546875, 0.0, -0.002518057357519865, -1.1920928244535389e-07, -0.0017310380935668945, -1.9073486328125e-06, -0.000148773193359375, -0.00159454345703125, -5.7220458984375e-06, -0.00029487907886505127, -0.0012319065863266587, -0.0017175674438476562, -0.0007152557373046875, -0.0023050308227539062, -9.5367431640625e-05, -0.00023552964557893574, -0.001533322036266327, -0.017279163002967834, -2.861022494471399e-06, -0.00023651123046875, -0.0001239776611328125, -1.33514404296875e-05, -0.07690625637769699, -1.1920928244535389e-07, -0.00058746337890625, -0.0007266998291015625, -0.00167083740234375, -1.9073486328125e-06, -0.04473469778895378, -6.318072337307967e-06, -0.011908692307770252, 0.0, -8.0108642578125e-05, -0.0005321502685546875, -0.0001392364501953125, -0.10902343690395355, 0.0, -0.0002117156982421875, -3.62396240234375e-05, -0.00024414061044808477, -1.7404556274414062e-05, -7.62939453125e-05, -0.000278472900390625, -7.62939453125e-05, -0.0013519141357392073, 0.0, -7.43865966796875e-05, -0.0001659393310546875, -0.000152587890625, -0.0005092620849609375, -9.179114567814395e-05, -5.364403477869928e-06, -1.9073486328125e-06, -0.00032460683723911643, 0.0, -1.9073486328125e-06, -1.9431105101830326e-05, -1.0728830375228426e-06, -2.288818359375e-05, -0.0004978179931640625, -0.0004367828369140625, -0.0013027191162109375, -0.001819610595703125, -0.00014495849609375, -0.010460853576660156, -0.0012598037719726562, -4.76837158203125e-05, -0.0002002716064453125, 0.0, -0.00045665985089726746, -2.3365020751953125e-05, -0.0006034110556356609, -1.1920928244535389e-07, -8.20142449811101e-05, 0.0, -0.00010943070810753852, -1.5616295058862306e-05, -0.007465362548828125, -3.0517578125e-05, -0.0005283355712890625, -7.62939453125e-05, -0.0004558563232421875, -1.71661376953125e-05, -0.0016567185521125793, -1.6331669030478224e-05, -3.4332275390625e-05, -0.006060600280761719, -0.000125885009765625, -0.001041412353515625, -1.52587890625e-05, -4.1961669921875e-05, -5.7220458984375e-06, -0.00013446807861328125, -1.1444091796875e-05, -0.010225415229797363, 0.0, -0.000194549560546875, -9.775161743164062e-06, -0.017095565795898438, -0.0018329620361328125, -6.29425048828125e-05, -3.814697265625e-06, -7.82012939453125e-05, -0.0021852347999811172, 0.0], "choice_history": [97, 286, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "minions", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "3", "<EOS>", 360, 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "minions", "<EOS>", 136, 318, 21, 174, "minions", "<EOS>", "remove", "<EOS>", 346, 50, 174, "minion", "<EOS>", 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "minions"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "minion"}], "_type": "Template77", "hole1": "remove", "hole0": {"_type": "Name", "id": "minions"}}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"n": 3, "_type": "Num"}]}}], "hole3": "use", "hole0": "Cleave", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 2, "hole0": "Cleave"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 2, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.600190822300377, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 3):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score_history": [-1.71661376953125e-05, -0.04876136779785156, -9.298280929215252e-06, -0.0011407823767513037, -1.013253495329991e-05, -0.00021564960479736328, -4.88758041683468e-06, -5.7220458984375e-06, -0.0040435791015625, -0.0001068115234375, -4.29153169534402e-06, -5.9604644775390625e-06, -5.722029527532868e-06, 0.0, -0.00029218191048130393, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -7.033347174001392e-06, 0.0, -0.0002040863037109375, -0.000148773193359375, -5.364416665543104e-06, -4.410743713378906e-06, -0.018331527709960938, -1.1444091796875e-05, -0.0002384185791015625, -2.47955322265625e-05, -3.62396240234375e-05, -1.1444091796875e-05, 0.0, -3.719329833984375e-05, -0.00011265277862548828, -3.0636758310720325e-05, -1.1920928244535389e-07, -8.344650268554688e-06, -1.1920928244535389e-07, -1.1682502190524247e-05, -4.768370445162873e-07, -0.04137229919433594, -1.33514404296875e-05, -0.000640869140625, -3.814697265625e-06, -5.340576171875e-05, -0.0006089566741138697, -0.0002956197422463447, -0.0018024444580078125, -0.0001010894775390625, -0.0001659393310546875, -1.71661376953125e-05, -0.00018310546875, 0.0, -0.005362749099731445, -3.4332275390625e-05, -0.00023651123046875, -5.7220458984375e-06, -7.62939453125e-06, -0.020421981811523438, -4.38690185546875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.000110626220703125, -2.47955322265625e-05, -0.00011599059507716447, -3.933906555175781e-06, -5.135344505310059, -3.814697265625e-06, -0.00025177001953125, -1.919269561767578e-05, -0.0003795623779296875, -0.0006580352783203125, -0.000102996826171875, -0.0004367828369140625, -0.0027419913094490767, -1.9073486328125e-06, -0.0005426406860351562, -3.814697265625e-06, -0.000217437744140625, -6.4849853515625e-05, -0.003948157653212547, -1.1920928244535389e-07, -0.00019073486328125, -1.71661376953125e-05, -7.62939453125e-06, -0.0003369965706951916, -4.76837158203125e-05, -0.000377655029296875, 0.0, -0.014448046684265137, 0.0, -0.015081405639648438, -0.002399444580078125, -1.71661376953125e-05, -7.62939453125e-06, -3.814697265625e-06, -7.05718994140625e-05, -0.012599552981555462, -1.9073484509135596e-05, -0.000324249267578125, -1.52587890625e-05, -0.00012969970703125, -1.9073486328125e-06, -0.0003070831298828125, 0.0, -0.0014308684039860964, -1.1920928244535389e-07, -0.001614689826965332, -1.9073486328125e-06, -0.0001392364501953125, -0.001556396484375, -5.7220458984375e-06, -0.00029468536376953125, -0.0012625432573258877, -0.0014820098876953125, -0.0007495880126953125, -0.0017843246459960938, -0.0001087188720703125, -0.000326222216244787, -0.0011240832973271608, -0.01589421182870865, -2.741813204920618e-06, -0.00023651123046875, -0.0001201629638671875, -1.33514404296875e-05, -0.06928057223558426, -1.1920928244535389e-07, -0.0005950927734375, -0.000804901123046875, -0.0015869140625, -1.9073486328125e-06, -0.04477934539318085, -6.556489552167477e-06, -0.012399062514305115, 0.0, -8.20159912109375e-05, -0.000530242919921875, -0.0001354217529296875, -0.10634350031614304, 0.0, -0.000202178955078125, -3.62396240234375e-05, -0.0002443790144752711, -1.7404556274414062e-05, -7.62939453125e-05, -0.000278472900390625, -7.62939453125e-05, -0.0013703920412808657, 0.0, -7.43865966796875e-05, -0.0001659393310546875, -0.000152587890625, -0.000507354736328125, -9.000300633488223e-05, -5.245195097813848e-06, -1.9073486328125e-06, -0.00032269948860630393, 0.0, -1.9073486328125e-06, -1.9431105101830326e-05, -1.0728830375228426e-06, -2.288818359375e-05, -0.0004978179931640625, -0.00043487548828125, -0.0013065338134765625, -0.001819610595703125, -0.00014495849609375, -0.01047515869140625, -0.0012607574462890625, -4.76837158203125e-05, -0.0002002716064453125, 0.0, -0.00045511050848290324, -2.3365020751953125e-05, -0.0006031726952642202, -1.1920928244535389e-07, -8.189503569155931e-05, 0.0, -0.00010895390732912347, -1.549708758830093e-05, -0.007462501525878906, -3.0517578125e-05, -0.0005283355712890625, -7.62939453125e-05, -0.0004558563232421875, -1.71661376953125e-05, -0.0016552892047911882, -1.6331669030478224e-05, -3.4332275390625e-05, -0.006058692932128906, -0.000125885009765625, -0.0010395050048828125, -1.52587890625e-05, -4.1961669921875e-05, -5.7220458984375e-06, -0.00013446807861328125, -1.1444091796875e-05, -0.01022350788116455, 0.0, -0.00019454954599495977, -9.775161743164062e-06, -0.017095565795898438, -0.0018329620361328125, -6.29425048828125e-05, -3.814697265625e-06, -7.82012939453125e-05, -0.00218523433431983, 0.0], "choice_history": [97, 286, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "minions", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "2", "<EOS>", 360, 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "minions", "<EOS>", 136, 318, 21, 174, "minions", "<EOS>", "remove", "<EOS>", 346, 50, 174, "minion", "<EOS>", 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "minions"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "minion"}], "_type": "Template77", "hole1": "remove", "hole0": {"_type": "Name", "id": "minions"}}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}]}}], "hole3": "use", "hole0": "Cleave", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 2, "hole0": "Cleave"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 2, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.671957287394619, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.current_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score_history": [-1.71661376953125e-05, -3.0904273986816406, -9.536738616588991e-07, -0.0005681078182533383, -0.00024030369240790606, -8.869169687386602e-05, -1.4305104514278355e-06, -1.9073486328125e-06, -0.0432891845703125, -6.103515625e-05, -2.1457672119140625e-06, -4.0531158447265625e-06, -7.152555099310121e-07, 0.0, -0.0003733630874194205, 0.0, -0.05259144306182861, 0.0, -3.8623809814453125e-05, 0.0, -1.9073486328125e-06, -0.23138046264648438, -0.0001735687255859375, -0.00414729118347168, -7.271740287251305e-06, -7.03334626450669e-06, -2.3841855067985307e-07, -0.009324023500084877, 0.0, -0.029425621032714844, -0.10020637512207031, -0.11976830661296844, 0.0, -0.0010166168212890625, -1.865279197692871, -0.026610374450683594, -0.08935832977294922, -0.031101232394576073, -0.00013935565948486328, -0.0005829902365803719, 0.0, -0.016938209533691406, -0.03722953796386719, -0.005299639422446489, -0.14588607847690582, -3.2901763916015625e-05], "choice_history": [97, 283, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 84, 315, "Mana", "Change", "<EOS>", "2", "<EOS>", 67, 280, "Is", "Minion", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template74", "hole1": 2, "hole0": "ManaChange"}, {"_type": "Template48", "hole0": "IsMinion"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "Cleave", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 2, "hole0": "Cleave"}], "hole1": "SpellCard"}, "score": -5.901623087250385, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, auras=[Aura(ManaChange(2), CardSelector(\n            condition=IsMinion()))])\n"}, {"score_history": [-1.71661376953125e-05, -3.0904273986816406, -9.536738616588991e-07, -0.0005681078182533383, -0.00024030369240790606, -8.869169687386602e-05, -1.4305104514278355e-06, -1.9073486328125e-06, -0.0432891845703125, -6.103515625e-05, -2.1457672119140625e-06, -4.0531158447265625e-06, -7.152555099310121e-07, 0.0, -0.0003733630874194205, 0.0, -0.05259144306182861, 0.0, -3.8623809814453125e-05, 0.0, -1.9073486328125e-06, -0.23138046264648438, -0.0001735687255859375, -0.00414729118347168, -7.271740287251305e-06, -7.03334626450669e-06, -2.3841855067985307e-07, -0.009324023500084877, 0.0, -0.029425621032714844, -0.10020637512207031, -0.11976830661296844, 0.0, -0.0010166168212890625, -1.525090217590332, -0.0001068115234375, -0.11806672811508179, -9.894371032714844e-06, -0.06772232055664062, -5.340576171875e-05, -0.7242961525917053, -0.0004779718874488026, -1.1920928244535389e-07], "choice_history": [97, 283, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Minion", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "Cleave", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 2, "hole0": "Cleave"}], "hole1": "SpellCard"}, "score": -6.118988861489093, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, auras=[Aura(ChangeAttack(1), MinionSelector())])\n"}, {"score_history": [-1.71661376953125e-05, -3.0904273986816406, -9.536738616588991e-07, -0.0005681078182533383, -0.00024030369240790606, -8.869169687386602e-05, -1.4305104514278355e-06, -1.9073486328125e-06, -0.0432891845703125, -6.103515625e-05, -2.1457672119140625e-06, -4.0531158447265625e-06, -7.152555099310121e-07, 0.0, -0.0003733630874194205, 0.0, -0.05259144306182861, 0.0, -3.8623809814453125e-05, 0.0, -1.9073486328125e-06, -0.23138046264648438, -0.0001735687255859375, -0.00414729118347168, -7.271740287251305e-06, -7.03334626450669e-06, -2.3841855067985307e-07, -0.009324023500084877, 0.0, -0.029425621032714844, -0.10020637512207031, -0.11976830661296844, 0.0, -0.0010166168212890625, -1.525090217590332, -0.0001068115234375, -0.11806672811508179, -9.894371032714844e-06, -0.06772232055664062, -5.340576171875e-05, -0.7944703102111816, -0.00403356458991766, 0.0], "choice_history": [97, 283, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "minions", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "minionsSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "Cleave", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 2, "hole0": "Cleave"}], "hole1": "SpellCard"}, "score": -6.192718492601756, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, auras=[Aura(ChangeAttack(1), minionsSelector())])\n"}, {"score_history": [-1.71661376953125e-05, -3.0904273986816406, -9.536738616588991e-07, -0.0005681078182533383, -0.00024030369240790606, -8.869169687386602e-05, -1.4305104514278355e-06, -1.9073486328125e-06, -0.0432891845703125, -6.103515625e-05, -2.1457672119140625e-06, -4.0531158447265625e-06, -7.152555099310121e-07, 0.0, -0.0003733630874194205, 0.0, -0.05259144306182861, 0.0, -3.8623809814453125e-05, 0.0, -1.9073486328125e-06, -0.23138046264648438, -0.0001735687255859375, -0.00414729118347168, -7.271740287251305e-06, -7.03334626450669e-06, -2.3841855067985307e-07, -0.009324023500084877, 0.0, -0.029425621032714844, -0.10020637512207031, -0.11976830661296844, 0.0, -0.0010166168212890625, -0.6234827041625977, -0.021493911743164062, -2.47955322265625e-05, -5.7220458984375e-06, -0.9216721057891846, -0.007894158363342285, -0.000125885009765625, -0.02160358428955078, -7.82012939453125e-05, -0.23348695039749146, -0.00019812583923339844, -1.3120393753051758, -0.00218963623046875, -0.0402069091796875, -0.0044040679931640625, -1.9073486328125e-06, -0.7278836369514465, 0.0], "choice_history": [97, 283, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 45, 150, 21, 174, "len", "<EOS>", 346, 50, 174, "minions", "<EOS>", 89, 331, 139, 23, 179, "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Name", "id": "minions"}]}, {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "Cleave", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 2, "hole0": "Cleave"}], "hole1": "SpellCard"}, "score": -7.599956917357389, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, auras=[Aura(len(minions), -1)])\n"}]}
{"index": 20, "beams": [{"score_history": [-0.000133514404296875, -0.000225067138671875, -2.50339189733495e-06, -1.871571657829918e-05, -3.814697265625e-06, -1.764294211170636e-05, -8.940656698541716e-06, -9.5367431640625e-06, -0.0015926361083984375, -0.0003261566162109375, -1.0728830375228426e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, 0.0, -0.000637054443359375, -4.172325134277344e-06, -3.910064697265625e-05, 0.0, -5.43593596376013e-05, 0.0, -0.0001277923583984375, -1.33514404296875e-05, -5.006785613659304e-06, -5.9604644775390625e-06, -0.002777099609375, -1.1444091796875e-05, -0.000148773193359375, -2.6702880859375e-05, -2.47955322265625e-05, -2.47955322265625e-05, 0.0, -2.8967857360839844e-05, -2.6702880859375e-05, -3.7670135498046875e-05, 0.0, -1.4662741705251392e-05, -1.1920928244535389e-07, -2.7894893719349056e-05, -5.960462772236497e-07, -0.000141143798828125, -0.0011444091796875, -0.0052642822265625, -9.5367431640625e-06, -0.004397273063659668, -1.1920928244535389e-07, -0.000102996826171875, -5.53131103515625e-05, -0.0010242462158203125, -0.00125885009765625, -5.14984130859375e-05, -1.9073486328125e-06, -0.0013071298599243164, -0.0001373291015625, -8.785724639892578e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0008029937744140625, -8.20159912109375e-05, -3.4332275390625e-05, -4.1961669921875e-05, -0.000247955322265625, -2.47955322265625e-05, -5.364418029785156e-05, 0.0, -0.0010761022567749023, 0.0, -0.0037488937377929688, -1.9073486328125e-06, -1.1444091796875e-05, -0.0016536712646484375, -0.0007457733154296875, -0.0034961700439453125, -0.000331878662109375, -0.0002708400716073811, -7.152531907195225e-06, -0.004013931378722191, -1.1920928244535389e-07, -8.7738037109375e-05, -0.0008106231689453125, -6.866455078125e-05, -0.001137081766501069, -7.60526381782256e-05, -1.52587890625e-05, -4.38690185546875e-05, -0.00312774907797575, -0.00029861892107874155, -0.002864837646484375, -0.0006008148193359375, -0.0008792877197265625, -0.009372711181640625, -0.0005626678466796875, -1.1444091796875e-05, -0.19164085388183594, -1.9073486328125e-06, -0.00030934796086512506, -4.768370445162873e-07, -0.006148813758045435, 0.0, -0.0046877991408109665, -2.3603161025675945e-05, -0.000528820208273828, -3.576278118089249e-07, -0.0004901885986328125, -0.0009241104125976562, -4.76837158203125e-05, -0.003352804109454155, -5.245195097813848e-06, -3.4332275390625e-05, -5.7220458984375e-05, -0.0004438015748746693, -8.416139462497085e-05], "choice_history": [97, 285, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "Consecration", "_type": "Template5", "hole2": [{"hole2": "PALADIN", "_type": "Template31", "hole1": 4, "hole0": "Consecration"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -0.26675887403727216, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.000133514404296875, -0.000225067138671875, -2.50339189733495e-06, -1.871571657829918e-05, -3.814697265625e-06, -1.764294211170636e-05, -8.940656698541716e-06, -9.5367431640625e-06, -0.0015926361083984375, -0.0003261566162109375, -1.0728830375228426e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, 0.0, -0.000637054443359375, -4.172325134277344e-06, -3.910064697265625e-05, 0.0, -5.43593596376013e-05, 0.0, -0.0001277923583984375, -1.33514404296875e-05, -5.006785613659304e-06, -5.9604644775390625e-06, -0.002777099609375, -1.1444091796875e-05, -0.000148773193359375, -2.6702880859375e-05, -2.47955322265625e-05, -2.47955322265625e-05, 0.0, -2.8967857360839844e-05, -2.6702880859375e-05, -3.7670135498046875e-05, 0.0, -1.4662741705251392e-05, -1.1920928244535389e-07, -2.7894893719349056e-05, -5.960462772236497e-07, -0.000141143798828125, -0.0011444091796875, -0.0052642822265625, -9.5367431640625e-06, -0.004397273063659668, -1.1920928244535389e-07, -0.000102996826171875, -5.53131103515625e-05, -0.0010242462158203125, -0.00125885009765625, -5.14984130859375e-05, -1.9073486328125e-06, -0.0013071298599243164, -0.0001373291015625, -8.785724639892578e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0008029937744140625, -8.20159912109375e-05, -3.4332275390625e-05, -4.1961669921875e-05, -0.000247955322265625, -2.47955322265625e-05, -5.364418029785156e-05, 0.0, -0.0010761022567749023, 0.0, -0.0037488937377929688, -1.9073486328125e-06, -1.1444091796875e-05, -0.0016536712646484375, -0.0007457733154296875, -0.0034961700439453125, -0.000331878662109375, -0.0002708400716073811, -7.152531907195225e-06, -0.004013931378722191, -1.1920928244535389e-07, -8.7738037109375e-05, -0.0008106231689453125, -6.866455078125e-05, -0.001137081766501069, -7.60526381782256e-05, -1.52587890625e-05, -4.38690185546875e-05, -0.00312774907797575, -0.00029861892107874155, -0.002864837646484375, -0.0006008148193359375, -0.0008792877197265625, -0.009372711181640625, -0.0005626678466796875, -1.1444091796875e-05, -1.748185157775879, -1.33514404296875e-05, -0.006099700927734375, -3.814697265625e-06, -0.0005187983624637127, -2.2649765014648438e-06, -0.006428837310522795, 0.0, -0.0015054516261443496, -1.0728830375228426e-06, -0.023976126685738564, -7.152531907195225e-06, -0.0013169371522963047, -3.576278118089249e-07, -0.0005588531494140625, -0.001415252685546875, -6.103515625e-05, -0.0022307001054286957, -4.410734163684538e-06, -7.05718994140625e-05, -0.0001201629638671875, -0.0003455771948210895, -9.786947339307517e-05], "choice_history": [97, 285, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "Consecration", "_type": "Template5", "hole2": [{"hole2": "PALADIN", "_type": "Template31", "hole1": 4, "hole0": "Consecration"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -1.8509408037374797, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.hero.damage(player.effective_spell_damage(2),\n            self)\n"}, {"score_history": [-0.000133514404296875, -0.000225067138671875, -2.50339189733495e-06, -1.871571657829918e-05, -3.814697265625e-06, -1.764294211170636e-05, -8.940656698541716e-06, -9.5367431640625e-06, -0.0015926361083984375, -0.0003261566162109375, -1.0728830375228426e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, 0.0, -0.000637054443359375, -4.172325134277344e-06, -3.910064697265625e-05, 0.0, -5.43593596376013e-05, 0.0, -0.0001277923583984375, -1.33514404296875e-05, -5.006785613659304e-06, -5.9604644775390625e-06, -0.002777099609375, -1.1444091796875e-05, -0.000148773193359375, -2.6702880859375e-05, -2.47955322265625e-05, -2.47955322265625e-05, 0.0, -2.8967857360839844e-05, -2.6702880859375e-05, -3.7670135498046875e-05, 0.0, -1.4662741705251392e-05, -1.1920928244535389e-07, -2.7894893719349056e-05, -5.960462772236497e-07, -0.000141143798828125, -0.0011444091796875, -0.0052642822265625, -9.5367431640625e-06, -0.004397273063659668, -1.1920928244535389e-07, -0.000102996826171875, -5.53131103515625e-05, -0.0010242462158203125, -0.00125885009765625, -5.14984130859375e-05, -1.9073486328125e-06, -0.0013071298599243164, -0.0001373291015625, -8.785724639892578e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0008029937744140625, -8.20159912109375e-05, -3.4332275390625e-05, -4.1961669921875e-05, -0.000247955322265625, -2.47955322265625e-05, -5.364418029785156e-05, 0.0, -0.0010761022567749023, 0.0, -0.0037488937377929688, -1.9073486328125e-06, -1.1444091796875e-05, -0.0016536712646484375, -0.0007457733154296875, -0.0034961700439453125, -0.000331878662109375, -0.0002708400716073811, -7.152531907195225e-06, -0.004013931378722191, -1.1920928244535389e-07, -8.7738037109375e-05, -0.0008106231689453125, -6.866455078125e-05, -0.001137081766501069, -7.60526381782256e-05, -1.52587890625e-05, -4.38690185546875e-05, -0.00312774907797575, -0.00029861892107874155, -0.002864837646484375, -0.0006008148193359375, -0.0008792877197265625, -0.009372711181640625, -0.0005626678466796875, -1.1444091796875e-05, -0.19164085388183594, -1.9073486328125e-06, -0.00030934796086512506, -4.768370445162873e-07, -0.006148813758045435, 0.0, -5.383963108062744, -1.1920928244535389e-07, -0.015216199681162834, -1.1920928244535389e-07, -0.000118255615234375, -0.0010538101196289062, -4.9591064453125e-05, -0.004044794477522373, -5.602820692729438e-06, -4.38690185546875e-05, -4.9591064453125e-05, -0.0004533455357886851, -0.00010406941873952746], "choice_history": [97, 285, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "damage", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "damage"}}], "hole3": "use", "hole0": "Consecration", "_type": "Template5", "hole2": [{"hole2": "PALADIN", "_type": "Template31", "hole1": 4, "hole0": "Consecration"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.661181221461412, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.damage.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.000133514404296875, -0.000225067138671875, -2.50339189733495e-06, -1.871571657829918e-05, -3.814697265625e-06, -1.764294211170636e-05, -8.940656698541716e-06, -9.5367431640625e-06, -0.0015926361083984375, -0.0003261566162109375, -1.0728830375228426e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, 0.0, -0.000637054443359375, -4.172325134277344e-06, -3.910064697265625e-05, 0.0, -5.43593596376013e-05, 0.0, -0.0001277923583984375, -1.33514404296875e-05, -5.006785613659304e-06, -5.9604644775390625e-06, -0.002777099609375, -1.1444091796875e-05, -0.000148773193359375, -2.6702880859375e-05, -2.47955322265625e-05, -2.47955322265625e-05, 0.0, -2.8967857360839844e-05, -2.6702880859375e-05, -3.7670135498046875e-05, 0.0, -1.4662741705251392e-05, -1.1920928244535389e-07, -2.7894893719349056e-05, -5.960462772236497e-07, -0.000141143798828125, -0.0011444091796875, -0.0052642822265625, -9.5367431640625e-06, -0.004397273063659668, -1.1920928244535389e-07, -0.000102996826171875, -5.53131103515625e-05, -0.0010242462158203125, -0.00125885009765625, -5.14984130859375e-05, -1.9073486328125e-06, -0.0013071298599243164, -0.0001373291015625, -8.785724639892578e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0008029937744140625, -8.20159912109375e-05, -3.4332275390625e-05, -4.1961669921875e-05, -0.000247955322265625, -2.47955322265625e-05, -5.364418029785156e-05, 0.0, -0.0010761022567749023, 0.0, -0.0037488937377929688, -1.9073486328125e-06, -1.1444091796875e-05, -0.0016536712646484375, -0.0007457733154296875, -0.0034961700439453125, -0.000331878662109375, -0.0002708400716073811, -7.152531907195225e-06, -0.004013931378722191, -1.1920928244535389e-07, -8.7738037109375e-05, -0.0008106231689453125, -6.866455078125e-05, -0.001137081766501069, -7.60526381782256e-05, -1.52587890625e-05, -4.38690185546875e-05, -0.00312774907797575, -0.00029861892107874155, -0.002864837646484375, -0.0006008148193359375, -0.0008792877197265625, -0.009372711181640625, -0.0005626678466796875, -1.1444091796875e-05, -0.19164085388183594, -1.9073486328125e-06, -0.00030934796086512506, -4.768370445162873e-07, -5.569546222686768, -1.52587890625e-05, -0.004181383643299341, -2.6702524337451905e-05, -0.0012781007681041956, -1.1920928244535389e-07, -0.000278472900390625, -0.0011529922485351562, -6.866455078125e-05, -0.0030181589536368847, -6.318072337307967e-06, -4.38690185546875e-05, -3.4332275390625e-05, -0.0004449962580110878, -7.53399872337468e-05], "choice_history": [97, 285, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "Consecration", "_type": "Template5", "hole2": [{"hole2": "PALADIN", "_type": "Template31", "hole1": 4, "hole0": "Consecration"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.830100864291552, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.current_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.000133514404296875, -0.000225067138671875, -2.50339189733495e-06, -1.871571657829918e-05, -3.814697265625e-06, -1.764294211170636e-05, -8.940656698541716e-06, -9.5367431640625e-06, -0.0015926361083984375, -0.0003261566162109375, -1.0728830375228426e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, 0.0, -0.000637054443359375, -4.172325134277344e-06, -3.910064697265625e-05, 0.0, -5.43593596376013e-05, 0.0, -0.0001277923583984375, -1.33514404296875e-05, -5.006785613659304e-06, -5.9604644775390625e-06, -0.002777099609375, -1.1444091796875e-05, -0.000148773193359375, -2.6702880859375e-05, -2.47955322265625e-05, -2.47955322265625e-05, 0.0, -2.8967857360839844e-05, -2.6702880859375e-05, -3.7670135498046875e-05, 0.0, -1.4662741705251392e-05, -1.1920928244535389e-07, -2.7894893719349056e-05, -5.960462772236497e-07, -0.000141143798828125, -0.0011444091796875, -0.0052642822265625, -9.5367431640625e-06, -0.004397273063659668, -1.1920928244535389e-07, -0.000102996826171875, -5.53131103515625e-05, -0.0010242462158203125, -0.00125885009765625, -5.14984130859375e-05, -1.9073486328125e-06, -0.0013071298599243164, -0.0001373291015625, -8.785724639892578e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0008029937744140625, -8.20159912109375e-05, -3.4332275390625e-05, -4.1961669921875e-05, -0.000247955322265625, -2.47955322265625e-05, -5.364418029785156e-05, 0.0, -0.0010761022567749023, 0.0, -0.0037488937377929688, -1.9073486328125e-06, -1.1444091796875e-05, -0.0016536712646484375, -0.0007457733154296875, -0.0034961700439453125, -0.000331878662109375, -0.0002708400716073811, -7.152531907195225e-06, -0.004013931378722191, -1.1920928244535389e-07, -8.7738037109375e-05, -0.0008106231689453125, -6.866455078125e-05, -0.001137081766501069, -7.60526381782256e-05, -1.52587890625e-05, -4.38690185546875e-05, -0.00312774907797575, -0.00029861892107874155, -0.002864837646484375, -0.0006008148193359375, -0.0008792877197265625, -0.009372711181640625, -0.0005626678466796875, -1.1444091796875e-05, -1.748185157775879, -1.33514404296875e-05, -0.006099700927734375, -3.814697265625e-06, -0.0005187983624637127, -2.2649765014648438e-06, -0.006428837310522795, 0.0, -0.0015054516261443496, -1.0728830375228426e-06, -4.135231018066406, -2.3841855067985307e-07, -0.03179566189646721, -4.768370445162873e-07, -0.0002288818359375, -0.0018682479858398438, -6.29425048828125e-05, -0.0019522993825376034, -4.0531076592742465e-06, -9.34600830078125e-05, -7.82012939453125e-05, -0.00036059916601516306, -9.810832852963358e-05], "choice_history": [97, 285, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}}], "hole3": "use", "hole0": "Consecration", "_type": "Template5", "hole2": [{"hole2": "PALADIN", "_type": "Template31", "hole1": 4, "hole0": "Consecration"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.992509985284251, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage.damage(player.effective_spell_damage(\n            2), self)\n"}, {"score_history": [-0.000133514404296875, -0.000225067138671875, -2.50339189733495e-06, -1.871571657829918e-05, -3.814697265625e-06, -1.764294211170636e-05, -8.940656698541716e-06, -9.5367431640625e-06, -0.0015926361083984375, -0.0003261566162109375, -1.0728830375228426e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, 0.0, -0.000637054443359375, -4.172325134277344e-06, -3.910064697265625e-05, 0.0, -5.43593596376013e-05, 0.0, -0.0001277923583984375, -1.33514404296875e-05, -5.006785613659304e-06, -5.9604644775390625e-06, -0.002777099609375, -1.1444091796875e-05, -0.000148773193359375, -2.6702880859375e-05, -2.47955322265625e-05, -2.47955322265625e-05, 0.0, -2.8967857360839844e-05, -2.6702880859375e-05, -3.7670135498046875e-05, 0.0, -1.4662741705251392e-05, -1.1920928244535389e-07, -2.7894893719349056e-05, -5.960462772236497e-07, -0.000141143798828125, -0.0011444091796875, -0.0052642822265625, -9.5367431640625e-06, -0.004397273063659668, -1.1920928244535389e-07, -0.000102996826171875, -5.53131103515625e-05, -0.0010242462158203125, -0.00125885009765625, -5.14984130859375e-05, -1.9073486328125e-06, -0.0013071298599243164, -0.0001373291015625, -8.785724639892578e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0008029937744140625, -8.20159912109375e-05, -3.4332275390625e-05, -4.1961669921875e-05, -0.000247955322265625, -2.47955322265625e-05, -5.364418029785156e-05, 0.0, -0.0010761022567749023, 0.0, -0.0037488937377929688, -1.9073486328125e-06, -1.1444091796875e-05, -0.0016536712646484375, -0.0007457733154296875, -0.0034961700439453125, -0.000331878662109375, -0.0002708400716073811, -7.152531907195225e-06, -5.623916149139404, -6.318072337307967e-06, -0.01361083984375, -0.21608734130859375, -0.07774543762207031, -0.000995635986328125, -1.71661376953125e-05, -0.009648323059082031, -9.536738616588991e-07, -0.00400769617408514, -1.1920928244535389e-07, -0.0010395050048828125, -2.47955322265625e-05, -0.000792384147644043, -6.639784260187298e-05, -0.028955459594726562, -0.000396728515625, -0.08076667785644531, -0.050098419189453125, -0.0004253387451171875, -2.288818359375e-05, -0.05112648010253906, -1.9073486328125e-06, -0.0006055828998796642, -3.576278118089249e-07, -0.004765270743519068, 0.0, -0.003014762420207262, -3.325883881188929e-05, -0.0004595796635840088, -1.1920928244535389e-07, -0.000213623046875, -0.0010633468627929688, -7.2479248046875e-05, -0.001579149393364787, -1.2755313036905136e-05, -3.4332275390625e-05, -8.392333984375e-05, -0.0004615583166014403, -7.951220322865993e-05], "choice_history": [97, 285, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "heal", "<EOS>", 347, 78, 305, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template67", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "Consecration", "_type": "Template5", "hole2": [{"hole2": "PALADIN", "_type": "Template31", "hole1": 4, "hole0": "Consecration"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.206238450207849, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.heal(player.effective_heal_power(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.000133514404296875, -0.000225067138671875, -2.50339189733495e-06, -1.871571657829918e-05, -3.814697265625e-06, -1.764294211170636e-05, -8.940656698541716e-06, -9.5367431640625e-06, -0.0015926361083984375, -0.0003261566162109375, -1.0728830375228426e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, 0.0, -0.000637054443359375, -4.172325134277344e-06, -3.910064697265625e-05, 0.0, -5.43593596376013e-05, 0.0, -0.0001277923583984375, -1.33514404296875e-05, -5.006785613659304e-06, -5.9604644775390625e-06, -0.002777099609375, -1.1444091796875e-05, -0.000148773193359375, -2.6702880859375e-05, -2.47955322265625e-05, -2.47955322265625e-05, 0.0, -2.8967857360839844e-05, -2.6702880859375e-05, -3.7670135498046875e-05, 0.0, -1.4662741705251392e-05, -1.1920928244535389e-07, -2.7894893719349056e-05, -5.960462772236497e-07, -0.000141143798828125, -0.0011444091796875, -0.0052642822265625, -9.5367431640625e-06, -0.004397273063659668, -1.1920928244535389e-07, -0.000102996826171875, -5.53131103515625e-05, -0.0010242462158203125, -0.00125885009765625, -5.14984130859375e-05, -1.9073486328125e-06, -0.0013071298599243164, -0.0001373291015625, -8.785724639892578e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0008029937744140625, -8.20159912109375e-05, -3.4332275390625e-05, -4.1961669921875e-05, -0.000247955322265625, -2.47955322265625e-05, -5.364418029785156e-05, 0.0, -0.0010761022567749023, 0.0, -6.022395133972168, 0.0, -0.0001678466796875, -0.009260177612304688, -0.0005588531494140625, -0.10904502868652344, -2.86102294921875e-05, -0.0031611735466867685, -1.0132738680113107e-05, -0.0020596010144799948, -2.3841855067985307e-07, -0.0002384185791015625, -0.0004863739013671875, -8.392333984375e-05, -0.001358232693746686, -5.435795901576057e-05, -1.52587890625e-05, -3.62396240234375e-05, -0.0033580490853637457, -0.00030314893228933215, -0.0027904510498046875, -0.00061798095703125, -0.0008544921875, -0.009027481079101562, -0.00055694580078125, -1.33514404296875e-05, -0.2074432373046875, -1.9073486328125e-06, -0.00030553326359950006, -4.768370445162873e-07, -0.00615572789683938, 0.0, -0.00460793636739254, -2.3841574147809297e-05, -0.0005290585104376078, -3.576278118089249e-07, -0.0004978179931640625, -0.0009298324584960938, -4.76837158203125e-05, -0.0033688885159790516, -5.125986263010418e-06, -3.4332275390625e-05, -5.53131103515625e-05, -0.0004439207259565592, -8.39229833218269e-05], "choice_history": [97, 285, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}]}}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "Consecration", "_type": "Template5", "hole2": [{"hole2": "PALADIN", "_type": "Template31", "hole1": 4, "hole0": "Consecration"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.414754561409509, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.hero):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.000133514404296875, -0.000225067138671875, -2.50339189733495e-06, -1.871571657829918e-05, -3.814697265625e-06, -1.764294211170636e-05, -8.940656698541716e-06, -9.5367431640625e-06, -0.0015926361083984375, -0.0003261566162109375, -1.0728830375228426e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, 0.0, -0.000637054443359375, -4.172325134277344e-06, -3.910064697265625e-05, 0.0, -5.43593596376013e-05, 0.0, -0.0001277923583984375, -1.33514404296875e-05, -5.006785613659304e-06, -5.9604644775390625e-06, -0.002777099609375, -1.1444091796875e-05, -0.000148773193359375, -2.6702880859375e-05, -2.47955322265625e-05, -2.47955322265625e-05, 0.0, -2.8967857360839844e-05, -2.6702880859375e-05, -3.7670135498046875e-05, 0.0, -1.4662741705251392e-05, -1.1920928244535389e-07, -2.7894893719349056e-05, -5.960462772236497e-07, -0.000141143798828125, -0.0011444091796875, -0.0052642822265625, -9.5367431640625e-06, -0.004397273063659668, -1.1920928244535389e-07, -0.000102996826171875, -5.53131103515625e-05, -0.0010242462158203125, -0.00125885009765625, -5.14984130859375e-05, -1.9073486328125e-06, -0.0013071298599243164, -0.0001373291015625, -8.785724639892578e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0008029937744140625, -8.20159912109375e-05, -3.4332275390625e-05, -4.1961669921875e-05, -0.000247955322265625, -2.47955322265625e-05, -5.364418029785156e-05, 0.0, -0.0010761022567749023, 0.0, -0.0037488937377929688, -1.9073486328125e-06, -1.1444091796875e-05, -0.0016536712646484375, -0.0007457733154296875, -6.144329071044922, -3.24249267578125e-05, -0.02106621488928795, -0.01473680604249239, -0.11240164190530777, -1.1920928244535389e-07, -0.06231975555419922, -0.01116180419921875, -0.00052642822265625, -0.012588167563080788, -2.50339189733495e-06, -9.1552734375e-05, -2.288818359375e-05, -0.016899943351745605, -0.00038182735443115234, -0.0040454864501953125, -0.0003299713134765625, -0.000888824462890625, -0.010955810546875, -0.0004825592041015625, -1.33514404296875e-05, -0.004451751708984375, -1.9073486328125e-06, -0.003017425537109375, -1.1920928244535389e-07, -0.005151033401489258, 0.0, -0.0017194850370287895, -7.629365427419543e-06, -0.0011747238459065557, -1.1920928244535389e-07, -0.0005359649658203125, -0.0010557174682617188, -6.103515625e-05, -0.003921253606677055, -2.622600959512056e-06, -3.0517578125e-05, -3.62396240234375e-05, -0.0003608456172514707, -8.153911039698869e-05], "choice_history": [97, 285, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 38, 325, "Consecration", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Template79", "hole0": "Consecration"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "Consecration", "_type": "Template5", "hole2": [{"hole2": "PALADIN", "_type": "Template31", "hole1": 4, "hole0": "Consecration"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.46478691758815, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            Consecration().damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.000133514404296875, -0.000225067138671875, -2.50339189733495e-06, -1.871571657829918e-05, -3.814697265625e-06, -1.764294211170636e-05, -8.940656698541716e-06, -9.5367431640625e-06, -0.0015926361083984375, -0.0003261566162109375, -1.0728830375228426e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, 0.0, -0.000637054443359375, -4.172325134277344e-06, -3.910064697265625e-05, 0.0, -5.43593596376013e-05, 0.0, -0.0001277923583984375, -1.33514404296875e-05, -5.006785613659304e-06, -5.9604644775390625e-06, -0.002777099609375, -1.1444091796875e-05, -0.000148773193359375, -2.6702880859375e-05, -2.47955322265625e-05, -2.47955322265625e-05, 0.0, -2.8967857360839844e-05, -2.6702880859375e-05, -3.7670135498046875e-05, 0.0, -1.4662741705251392e-05, -1.1920928244535389e-07, -2.7894893719349056e-05, -5.960462772236497e-07, -0.000141143798828125, -0.0011444091796875, -0.0052642822265625, -9.5367431640625e-06, -5.572972297668457, -1.9073486328125e-06, -0.000640869140625, -5.14984130859375e-05, -0.8204021453857422, -0.00400543212890625, -2.86102294921875e-05, -1.9073486328125e-06, -0.0042531490325927734, -3.254413604736328e-05, -8.976459503173828e-05, 0.0, -9.5367431640625e-06, -0.001003265380859375, -7.2479248046875e-05, -2.47955322265625e-05, -3.62396240234375e-05, -0.000240325927734375, -1.33514404296875e-05, -8.404254913330078e-05, 0.0, -0.0010991096496582031, 0.0, -0.0045424699783325195, -1.9073486328125e-06, -1.33514404296875e-05, -0.00171661376953125, -0.0006618499755859375, -0.003124237060546875, -0.00035858154296875, -0.0002567737246863544, -7.033323527139146e-06, -0.004210649058222771, -2.3841855067985307e-07, -8.20159912109375e-05, -0.00080108642578125, -7.05718994140625e-05, -0.0011245630448684096, -8.046303264563903e-05, -1.52587890625e-05, -4.57763671875e-05, -0.002951923757791519, -0.00029170478228479624, -0.002902984619140625, -0.0005950927734375, -0.000896453857421875, -0.009405136108398438, -0.0005817413330078125, -1.1444091796875e-05, -0.19256591796875, -1.9073486328125e-06, -0.0003130434488411993, -4.768370445162873e-07, -0.006202696356922388, 0.0, -0.004663829226046801, -2.312633478140924e-05, -0.0005282244528643787, -3.576278118089249e-07, -0.00048828125, -0.00092315673828125, -4.76837158203125e-05, -0.00334937684237957, -5.245195097813848e-06, -3.4332275390625e-05, -5.7220458984375e-05, -0.00044284804607741535, -8.404218533542007e-05], "choice_history": [97, 285, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "Consecration", "_type": "Template5", "hole2": [{"hole2": "PALADIN", "_type": "Template31", "hole1": 4, "hole0": "Consecration"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.662481432858293, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.000133514404296875, -0.000225067138671875, -2.50339189733495e-06, -1.871571657829918e-05, -3.814697265625e-06, -1.764294211170636e-05, -8.940656698541716e-06, -9.5367431640625e-06, -0.0015926361083984375, -0.0003261566162109375, -1.0728830375228426e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, 0.0, -0.000637054443359375, -4.172325134277344e-06, -3.910064697265625e-05, 0.0, -5.43593596376013e-05, 0.0, -0.0001277923583984375, -1.33514404296875e-05, -5.006785613659304e-06, -5.9604644775390625e-06, -0.002777099609375, -1.1444091796875e-05, -0.000148773193359375, -2.6702880859375e-05, -2.47955322265625e-05, -2.47955322265625e-05, 0.0, -2.8967857360839844e-05, -2.6702880859375e-05, -3.7670135498046875e-05, 0.0, -1.4662741705251392e-05, -1.1920928244535389e-07, -2.7894893719349056e-05, -5.960462772236497e-07, -0.000141143798828125, -0.0011444091796875, -0.0052642822265625, -9.5367431640625e-06, -0.004397273063659668, -1.1920928244535389e-07, -0.000102996826171875, -5.53131103515625e-05, -0.0010242462158203125, -0.00125885009765625, -5.14984130859375e-05, -1.9073486328125e-06, -0.0013071298599243164, -0.0001373291015625, -8.785724639892578e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0008029937744140625, -8.20159912109375e-05, -3.4332275390625e-05, -4.1961669921875e-05, -0.000247955322265625, -2.47955322265625e-05, -5.364418029785156e-05, 0.0, -0.0010761022567749023, 0.0, -0.0037488937377929688, -1.9073486328125e-06, -1.1444091796875e-05, -0.0016536712646484375, -0.0007457733154296875, -0.0034961700439453125, -0.000331878662109375, -0.0002708400716073811, -7.152531907195225e-06, -0.004013931378722191, -1.1920928244535389e-07, -8.7738037109375e-05, -0.0008106231689453125, -6.866455078125e-05, -0.001137081766501069, -7.60526381782256e-05, -1.52587890625e-05, -4.38690185546875e-05, -0.00312774907797575, -0.00029861892107874155, -0.002864837646484375, -0.0006008148193359375, -0.0008792877197265625, -0.009372711181640625, -0.0005626678466796875, -1.1444091796875e-05, -0.19164085388183594, -1.9073486328125e-06, -0.00030934796086512506, -4.768370445162873e-07, -0.006148813758045435, 0.0, -0.0046877991408109665, -2.3603161025675945e-05, -0.000528820208273828, -3.576278118089249e-07, -0.0004901885986328125, -0.0009241104125976562, -4.76837158203125e-05, -6.483004093170166, -4.148412335780449e-05, -0.000240325927734375, -7.62939453125e-05, -0.0005174673860892653, -0.00017571351781953126], "choice_history": [97, 285, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "4", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"hole2": [{"_type": "Template61", "hole0": 4}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "Consecration", "_type": "Template5", "hole2": [{"hole2": "PALADIN", "_type": "Template31", "hole1": 4, "hole0": "Consecration"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.746836687099325, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(4), self)\n"}, {"score_history": [-0.000133514404296875, -0.000225067138671875, -2.50339189733495e-06, -1.871571657829918e-05, -3.814697265625e-06, -1.764294211170636e-05, -8.940656698541716e-06, -9.5367431640625e-06, -0.0015926361083984375, -0.0003261566162109375, -1.0728830375228426e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, 0.0, -0.000637054443359375, -4.172325134277344e-06, -3.910064697265625e-05, 0.0, -5.43593596376013e-05, 0.0, -0.0001277923583984375, -1.33514404296875e-05, -5.006785613659304e-06, -5.9604644775390625e-06, -0.002777099609375, -1.1444091796875e-05, -0.000148773193359375, -2.6702880859375e-05, -2.47955322265625e-05, -2.47955322265625e-05, 0.0, -2.8967857360839844e-05, -2.6702880859375e-05, -3.7670135498046875e-05, 0.0, -1.4662741705251392e-05, -1.1920928244535389e-07, -2.7894893719349056e-05, -5.960462772236497e-07, -0.000141143798828125, -0.0011444091796875, -0.0052642822265625, -9.5367431640625e-06, -0.004397273063659668, -1.1920928244535389e-07, -0.000102996826171875, -5.53131103515625e-05, -0.0010242462158203125, -0.00125885009765625, -5.14984130859375e-05, -1.9073486328125e-06, -0.0013071298599243164, -0.0001373291015625, -8.785724639892578e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0008029937744140625, -8.20159912109375e-05, -3.4332275390625e-05, -4.1961669921875e-05, -0.000247955322265625, -2.47955322265625e-05, -5.364418029785156e-05, 0.0, -0.0010761022567749023, 0.0, -0.0037488937377929688, -1.9073486328125e-06, -1.1444091796875e-05, -0.0016536712646484375, -0.0007457733154296875, -0.0034961700439453125, -0.000331878662109375, -0.0002708400716073811, -7.152531907195225e-06, -0.004013931378722191, -1.1920928244535389e-07, -8.7738037109375e-05, -0.0008106231689453125, -6.866455078125e-05, -0.001137081766501069, -7.60526381782256e-05, -1.52587890625e-05, -4.38690185546875e-05, -0.00312774907797575, -0.00029861892107874155, -0.002864837646484375, -0.0006008148193359375, -0.0008792877197265625, -0.009372711181640625, -0.0005626678466796875, -1.1444091796875e-05, -1.748185157775879, -1.33514404296875e-05, -5.115185737609863, -9.5367431640625e-06, -0.0003070831298828125, -2.09808349609375e-05, -0.0010513041634112597, -2.384185791015625e-06, -0.00615799380466342, 0.0, -0.004038210492581129, -2.384185791015625e-06, -0.005567701067775488, -1.1920922133867862e-06, -0.01380903646349907, -7.629365427419543e-06, -0.003640073351562023, -3.576278118089249e-07, -0.000576019287109375, -0.0015287399291992188, -6.67572021484375e-05, -0.0018049285281449556, -4.529942543740617e-06, -0.00011444091796875, -0.000202178955078125, -0.0002757256734184921, -0.00011682230251608416], "choice_history": [97, 285, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 13, 143, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "hero", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "Consecration", "_type": "Template5", "hole2": [{"hole2": "PALADIN", "_type": "Template31", "hole1": 4, "hole0": "Consecration"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.960667603450283, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.hero.hero.damage(player.\n            effective_spell_damage(2), self)\n"}, {"score_history": [-0.000133514404296875, -0.000225067138671875, -2.50339189733495e-06, -1.871571657829918e-05, -3.814697265625e-06, -1.764294211170636e-05, -8.940656698541716e-06, -9.5367431640625e-06, -6.753015518188477, -0.002910614013671875, -9.536738616588991e-07, -9.417505680175964e-06, -2.384184938364342e-07, -1.9073486328125e-06, -0.01357722282409668, -1.3709068298339844e-05, -0.0167654100805521, -1.1920928244535389e-07, -0.0006656646728515625, -6.866455078125e-05, -8.58306884765625e-05, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.0001157522201538086, -2.4557106371503323e-05, -4.601478576660156e-05, -1.9073486328125e-06, -0.009309520944952965, -2.264974000354414e-06, -0.0005731580895371735, 0.0, -0.0001764297194313258, 0.0, -0.000171661376953125, -4.00543212890625e-05, -9.655950634623878e-06, -2.3841855067985307e-07, -0.011193275451660156, -1.33514404296875e-05, -0.0006008148193359375, -4.76837158203125e-05, -8.20159912109375e-05, -1.71661376953125e-05, -7.62939453125e-06, -0.00011897087097167969, -2.09808349609375e-05, -2.4080271032289602e-05, 0.0, -2.622604188218247e-05, -3.576278118089249e-07, -5.090202466817573e-05, -9.536738616588991e-07, -0.01178741455078125, -0.0003566741943359375, -0.004627227783203125, -1.9073486328125e-06, -0.0033538341522216797, -1.1920928244535389e-07, -0.000141143798828125, -5.91278076171875e-05, -0.0025959014892578125, -0.0007038116455078125, -2.86102294921875e-05, -1.9073486328125e-06, -0.0013986825942993164, -0.000118255615234375, -8.976459503173828e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.00075531005859375, -7.05718994140625e-05, -3.62396240234375e-05, -3.814697265625e-05, -0.0002536773681640625, -2.09808349609375e-05, -5.745887756347656e-05, 0.0, -0.0011066198348999023, 0.0, -0.0036236047744750977, -1.9073486328125e-06, -9.5367431640625e-06, -0.0014896392822265625, -0.0007076263427734375, -0.0033779144287109375, -0.0003795623779296875, -0.0002810912556014955, -7.510157047363464e-06, -0.0041022635996341705, -1.1920928244535389e-07, -8.58306884765625e-05, -0.00080108642578125, -6.866455078125e-05, -0.0011457798536866903, -7.652943895664066e-05, -1.52587890625e-05, -4.38690185546875e-05, -0.0031133252196013927, -0.0002965923922602087, -0.0028438568115234375, -0.0004329681396484375, -0.00049591064453125, -0.0096588134765625, -0.0008335113525390625, -1.1444091796875e-05, -0.11954689025878906, -1.9073486328125e-06, -0.00027954563847742975, -3.576278118089249e-07, -0.006094335578382015, 0.0, -0.004413525108247995, -1.7404405298293568e-05, -0.0005185712361708283, -3.576278118089249e-07, -0.000461578369140625, -0.0008897781372070312, -4.9591064453125e-05, -0.0031035705469548702, -5.8412379075889476e-06, -3.24249267578125e-05, -6.4849853515625e-05, -0.0004499979841057211, -8.571107173338532e-05], "choice_history": [97, 285, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "Consecration", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Consecration", "_type": "Template27", "hole2": "PALADIN", "hole1": 4}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.007778340771814, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.000133514404296875, -0.000225067138671875, -2.50339189733495e-06, -1.871571657829918e-05, -3.814697265625e-06, -1.764294211170636e-05, -8.940656698541716e-06, -9.5367431640625e-06, -0.0015926361083984375, -0.0003261566162109375, -1.0728830375228426e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, 0.0, -0.000637054443359375, -4.172325134277344e-06, -3.910064697265625e-05, 0.0, -5.43593596376013e-05, 0.0, -0.0001277923583984375, -1.33514404296875e-05, -5.006785613659304e-06, -5.9604644775390625e-06, -0.002777099609375, -1.1444091796875e-05, -0.000148773193359375, -2.6702880859375e-05, -2.47955322265625e-05, -2.47955322265625e-05, 0.0, -2.8967857360839844e-05, -2.6702880859375e-05, -3.7670135498046875e-05, 0.0, -1.4662741705251392e-05, -1.1920928244535389e-07, -2.7894893719349056e-05, -5.960462772236497e-07, -0.000141143798828125, -0.0011444091796875, -0.0052642822265625, -9.5367431640625e-06, -0.004397273063659668, -1.1920928244535389e-07, -0.000102996826171875, -5.53131103515625e-05, -0.0010242462158203125, -0.00125885009765625, -5.14984130859375e-05, -1.9073486328125e-06, -0.0013071298599243164, -0.0001373291015625, -8.785724639892578e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0008029937744140625, -8.20159912109375e-05, -3.4332275390625e-05, -4.1961669921875e-05, -0.000247955322265625, -2.47955322265625e-05, -5.364418029785156e-05, 0.0, -0.0010761022567749023, 0.0, -0.0037488937377929688, -1.9073486328125e-06, -1.1444091796875e-05, -0.0016536712646484375, -0.0007457733154296875, -0.0034961700439453125, -0.000331878662109375, -0.0002708400716073811, -7.152531907195225e-06, -0.004013931378722191, -1.1920928244535389e-07, -8.7738037109375e-05, -0.0008106231689453125, -6.866455078125e-05, -6.945206642150879, -0.00016914810112211853, -1.71661376953125e-05, -0.0001087188720703125, -0.005348202306777239, -0.00028610226581804454, -0.0036602020263671875, -0.0004901885986328125, -0.00424957275390625, -0.0100555419921875, -0.00115203857421875, -1.71661376953125e-05, -0.015285491943359375, 0.0, -0.0006084442138671875, -1.1920928244535389e-07, -0.0043451786041259766, 0.0, -0.0022851864341646433, -1.7523612768854946e-05, -0.0005405035335570574, -2.3841855067985307e-07, -0.0005245208740234375, -0.0008440017700195312, -4.38690185546875e-05, -0.003656428772956133, -4.529942543740617e-06, -2.6702880859375e-05, -4.76837158203125e-05, -0.00044821470510214567, -8.344625530298799e-05], "choice_history": [97, 285, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "4", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 4}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "Consecration", "_type": "Template5", "hole2": [{"hole2": "PALADIN", "_type": "Template31", "hole1": 4, "hole0": "Consecration"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.038509726682662, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.000133514404296875, -0.000225067138671875, -2.50339189733495e-06, -1.871571657829918e-05, -3.814697265625e-06, -1.764294211170636e-05, -8.940656698541716e-06, -9.5367431640625e-06, -0.0015926361083984375, -0.0003261566162109375, -1.0728830375228426e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, 0.0, -0.000637054443359375, -4.172325134277344e-06, -3.910064697265625e-05, 0.0, -5.43593596376013e-05, 0.0, -0.0001277923583984375, -1.33514404296875e-05, -5.006785613659304e-06, -5.9604644775390625e-06, -0.002777099609375, -1.1444091796875e-05, -0.000148773193359375, -2.6702880859375e-05, -2.47955322265625e-05, -2.47955322265625e-05, 0.0, -2.8967857360839844e-05, -2.6702880859375e-05, -3.7670135498046875e-05, 0.0, -1.4662741705251392e-05, -1.1920928244535389e-07, -2.7894893719349056e-05, -5.960462772236497e-07, -0.000141143798828125, -0.0011444091796875, -0.0052642822265625, -9.5367431640625e-06, -0.004397273063659668, -1.1920928244535389e-07, -0.000102996826171875, -5.53131103515625e-05, -0.0010242462158203125, -0.00125885009765625, -5.14984130859375e-05, -1.9073486328125e-06, -0.0013071298599243164, -0.0001373291015625, -8.785724639892578e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0008029937744140625, -8.20159912109375e-05, -3.4332275390625e-05, -4.1961669921875e-05, -0.000247955322265625, -2.47955322265625e-05, -5.364418029785156e-05, 0.0, -0.0010761022567749023, 0.0, -0.0037488937377929688, -1.9073486328125e-06, -1.1444091796875e-05, -0.0016536712646484375, -0.0007457733154296875, -0.0034961700439453125, -0.000331878662109375, -0.0002708400716073811, -7.152531907195225e-06, -0.004013931378722191, -1.1920928244535389e-07, -8.7738037109375e-05, -0.0008106231689453125, -6.866455078125e-05, -0.001137081766501069, -7.60526381782256e-05, -1.52587890625e-05, -4.38690185546875e-05, -0.00312774907797575, -0.00029861892107874155, -0.002864837646484375, -0.0006008148193359375, -7.088015556335449, -1.9073486328125e-05, -0.004281977191567421, -5.030505417380482e-05, -0.07905011624097824, 0.0, -0.0002536773681640625, -0.0022525787353515625, -0.000118255615234375, -0.005063978489488363, -9.179073458653875e-06, -1.9073486328125e-05, -9.72747802734375e-05, -0.0008445897838100791, -0.0001841782795963809], "choice_history": [97, 285, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 21, 174, "player", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "player"}}], "hole3": "use", "hole0": "Consecration", "_type": "Template5", "hole2": [{"hole2": "PALADIN", "_type": "Template31", "hole1": 4, "hole0": "Consecration"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.227411049457807, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        player.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.000133514404296875, -0.000225067138671875, -2.50339189733495e-06, -1.871571657829918e-05, -3.814697265625e-06, -1.764294211170636e-05, -8.940656698541716e-06, -9.5367431640625e-06, -0.0015926361083984375, -0.0003261566162109375, -1.0728830375228426e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, 0.0, -0.000637054443359375, -4.172325134277344e-06, -3.910064697265625e-05, 0.0, -5.43593596376013e-05, 0.0, -0.0001277923583984375, -1.33514404296875e-05, -5.006785613659304e-06, -5.9604644775390625e-06, -7.779252052307129, -0.00023651123046875, -0.000408172607421875, -6.4849853515625e-05, -3.0517578125e-05, -1.71661376953125e-05, 0.0, -7.474422454833984e-05, -0.0001811981201171875, -5.328643601387739e-05, 0.0, -2.4557086362619884e-05, -2.3841855067985307e-07, -4.24380850745365e-05, -7.152555099310121e-07, -0.001644134521484375, -0.000980377197265625, -0.003200531005859375, -7.05718994140625e-05, -0.047971129417419434, 0.0, -6.866455078125e-05, -4.57763671875e-05, -0.0051422119140625, -0.000335693359375, -0.000118255615234375, -1.9073486328125e-06, -0.0008089542388916016, -0.00018894672393798828, -0.00011265277862548828, -1.9073486328125e-06, -9.5367431640625e-06, -0.001064300537109375, -6.29425048828125e-05, -3.24249267578125e-05, -3.814697265625e-05, -0.0002651214599609375, -2.288818359375e-05, -5.745887756347656e-05, 0.0, -0.0010837316513061523, 0.0, -0.0040863752365112305, -1.9073486328125e-06, -1.71661376953125e-05, -0.0017795562744140625, -0.000385284423828125, -0.00344085693359375, -0.0003376007080078125, -0.0002697630552574992, -8.821448318485636e-06, -0.003983058966696262, -1.1920928244535389e-07, -9.34600830078125e-05, -0.00079345703125, -6.866455078125e-05, -0.001145913964137435, -7.70062324590981e-05, -1.71661376953125e-05, -4.57763671875e-05, -0.003146820468828082, -0.00029742682818323374], "choice_history": [97, 285, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "hole3": "use", "hole0": "Consecration", "_type": "Template5", "hole2": [{"hole2": "PALADIN", "_type": "Template31", "hole1": 4, "hole0": "Consecration"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.866937790849555, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n"}]}
{"index": 21, "beams": [{"score_history": [-0.0001125335693359375, -8.0108642578125e-05, -0.0005603847093880177, -1.490105023549404e-05, -2.50339189733495e-06, -4.637986421585083e-07, -3.314018249511719e-05, -1.0728823326644488e-05, -0.0002803802490234375, -0.011859893798828125, -0.00041961669921875, -3.576278118089249e-07, -2.300739288330078e-05, -5.364416665543104e-06, -1.9073486328125e-06, -0.0003628726990427822, -3.814697265625e-06, -0.0012416839599609375, -1.9073486328125e-06, -0.0135270357131958, -3.576278118089249e-07, -4.00543212890625e-05, 0.0, -1.52587890625e-05, 0.0, -5.7220458984375e-05, -2.1457672119140625e-06, -0.0009766817092895508, 0.0, -1.52587890625e-05, 0.0, -0.0007883310317993164, 0.0, -7.62939453125e-05, -6.29425048828125e-05, -2.09808349609375e-05, -1.2397689715726301e-05, -4.768370445162873e-07, -0.00026747933588922024, 0.0], "choice_history": [97, 283, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "9", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 5, "hole0": 9}], "hole3": "create_minion", "hole0": "CoreHound", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Core Hound", "_type": "Template26", "hole2": "COMMON", "hole1": 7}], "hole1": "MinionCard"}, "score": -0.030878485761377306, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score_history": [-0.0001125335693359375, -8.0108642578125e-05, -0.0005603847093880177, -1.490105023549404e-05, -2.50339189733495e-06, -4.637986421585083e-07, -3.314018249511719e-05, -1.0728823326644488e-05, -0.0002803802490234375, -0.011859893798828125, -0.00041961669921875, -3.576278118089249e-07, -2.300739288330078e-05, -5.364416665543104e-06, -1.9073486328125e-06, -0.0003628726990427822, -3.814697265625e-06, -0.0012416839599609375, -1.9073486328125e-06, -4.362571716308594, 0.0, -0.09184932708740234, -7.62939453125e-06, -9.5367431640625e-05, 0.0, -2.872943878173828e-05, -3.576278118089249e-07, -0.001234292984008789, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.0006566047668457031, 0.0, -8.20159912109375e-05, -5.53131103515625e-05, -1.9073486328125e-05, -1.156323378381785e-05, -4.768370445162873e-07, -0.00023959038662724197, 0.0], "choice_history": [97, 283, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "COMMON", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "9", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 5, "hole0": 9}], "hole3": "create_minion", "hole0": "CoreHound", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "COMMON", "hole0": "Core Hound", "_type": "Template26", "hole2": "COMMON", "hole1": 7}], "hole1": "MinionCard"}, "score": -4.471879072582624, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, COMMON=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score_history": [-0.0001125335693359375, -8.0108642578125e-05, -0.0005603847093880177, -1.490105023549404e-05, -2.50339189733495e-06, -4.637986421585083e-07, -3.314018249511719e-05, -1.0728823326644488e-05, -0.0002803802490234375, -4.465444564819336, -0.1920623779296875, -4.38690185546875e-05, -0.007274627685546875, -8.225440979003906e-06, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.0012989044189453125, -0.000690460205078125, -9.1552734375e-05, -4.529942543740617e-06, -0.00011420108785387129, -2.634514203236904e-05, -4.0531158447265625e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.07976460456848145, -5.7220458984375e-06, -9.1552734375e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -4.589557647705078e-05, 0.0, -3.635883331298828e-05, -1.9073486328125e-06, -0.000171661376953125, 0.0, -4.1961669921875e-05, 0.0, -6.687641143798828e-05, -5.340576171875e-05, -0.0035247802734375, -1.9073486328125e-06, -1.71661376953125e-05, -1.33514404296875e-05, -4.57763671875e-05, -5.7220458984375e-06, -0.001003265380859375, -0.0054340362548828125, -0.00087738037109375, -0.06454956531524658, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0034383535385131836, 0.0, -0.0001659393310546875, -4.38690185546875e-05, -1.9073486328125e-05, -1.1086402082582936e-05, -5.960462772236497e-07, -0.0003562659549061209, 0.0], "choice_history": [97, 283, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Core", " ", "Hound", "<EOS>", 52, 179, "7", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "9", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 5, "hole0": 9}], "hole3": "create_minion", "hole0": "CoreHound", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "MECH"}], "hole2": [{"_type": "Str", "s": "Core Hound"}, {"n": 7, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -4.828032767686466, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score_history": [-0.0001125335693359375, -8.0108642578125e-05, -0.0005603847093880177, -1.490105023549404e-05, -2.50339189733495e-06, -4.637986421585083e-07, -3.314018249511719e-05, -1.0728823326644488e-05, -0.0002803802490234375, -4.465444564819336, -1.8726558685302734, -2.288818359375e-05, -4.9591064453125e-05, -8.344629350176547e-06, -1.71661376953125e-05, -0.00030732154846191406, -2.0265579223632812e-06, -0.04904651641845703, -0.000308990478515625, -9.5367431640625e-06, -1.0848020792764146e-05, -5.6505188695155084e-05, -4.73254440294113e-05, -1.9073486328125e-06, -1.52587890625e-05, -6.29425048828125e-05, -0.06736323237419128, -9.5367431640625e-06, -0.000293731689453125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0003719329833984375, 0.0, -8.022785186767578e-05, -1.9073486328125e-06, -0.0002269744873046875, 0.0, -0.0001010894775390625, 0.0, -0.00012087821960449219, -9.930127271218225e-05, -0.00077056884765625, -1.9073486328125e-06, -1.33514404296875e-05, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.00016021728515625, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -7.867813110351562e-06, -1.1920928244535389e-07, -0.002124786376953125, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.14774644374847412, -1.9073486328125e-06, -6.4849853515625e-05, -0.000152587890625, -0.00012969970703125, -0.00035148640745319426, 0.0, -0.0007273998926393688, -1.9073486328125e-06], "choice_history": [97, 283, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 351, 53, 183, "Core", " ", "Hound", "<EOS>", 52, 179, "7", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 132, 299, "9", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "p", "hole6": [{"_type": "Template62", "hole1": 5, "hole0": 9}], "hole3": "create_minion", "hole0": "CoreHound", "_type": "Template5", "hole2": [{"hole2": [{"_type": "Str", "s": "Core Hound"}, {"n": 7, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}, {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -6.610193471313771, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(9, 5)\n"}, {"score_history": [-0.0001125335693359375, -8.0108642578125e-05, -0.0005603847093880177, -1.490105023549404e-05, -2.50339189733495e-06, -4.637986421585083e-07, -3.314018249511719e-05, -1.0728823326644488e-05, -0.0002803802490234375, -0.011859893798828125, -0.00041961669921875, -3.576278118089249e-07, -2.300739288330078e-05, -5.364416665543104e-06, -1.9073486328125e-06, -0.0003628726990427822, -3.814697265625e-06, -6.983452796936035, -1.33514404296875e-05, -0.0017148256301879883, -1.0728830375228426e-06, -4.00543212890625e-05, 0.0, -1.71661376953125e-05, 0.0, -6.29425048828125e-05, -2.1457672119140625e-06, -0.0010339021682739258, 0.0, -1.33514404296875e-05, 0.0, -0.0008760690689086914, 0.0, -7.82012939453125e-05, -5.91278076171875e-05, -2.288818359375e-05, -1.2397689715726301e-05, -4.768370445162873e-07, -0.0002695054281502962, 0.0], "choice_history": [97, 283, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "9", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 5, "hole0": 9}], "hole3": "create_minion", "hole0": "CoreHound", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Core Hound", "_type": "Template26", "hole2": "FREE", "hole1": 7}], "hole1": "MinionCard"}, "score": -7.00144225463572, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score_history": [-0.0001125335693359375, -8.0108642578125e-05, -0.0005603847093880177, -1.490105023549404e-05, -2.50339189733495e-06, -4.637986421585083e-07, -3.314018249511719e-05, -1.0728823326644488e-05, -0.0002803802490234375, -4.465444564819336, -0.1920623779296875, -4.38690185546875e-05, -0.007274627685546875, -8.225440979003906e-06, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.0012989044189453125, -0.000690460205078125, -9.1552734375e-05, -4.529942543740617e-06, -0.00011420108785387129, -2.634514203236904e-05, -4.0531158447265625e-06, -2.6702880859375e-05, -7.62939453125e-06, -2.5839807987213135, -5.7220458984375e-06, -7.62939453125e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -2.110004425048828e-05, -1.9073486328125e-06, -2.872943878173828e-05, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -3.814697265625e-05, 0.0, -5.543231964111328e-05, -5.888938903808594e-05, -0.0048618316650390625, -1.9073486328125e-06, -1.71661376953125e-05, -1.33514404296875e-05, -4.57763671875e-05, -5.7220458984375e-06, -0.0009975433349609375, -0.00531768798828125, -0.000858306884765625, -0.06918060779571533, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.003459334373474121, 0.0, -0.0001678466796875, -4.38690185546875e-05, -1.9073486328125e-05, -1.1324817933200393e-05, -5.960462772236497e-07, -0.0003634162130765617, 0.0], "choice_history": [97, 283, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Core", " ", "Hound", "<EOS>", 52, 179, "9", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "9", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 5, "hole0": 9}], "hole3": "create_minion", "hole0": "CoreHound", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "MECH"}], "hole2": [{"_type": "Str", "s": "Core Hound"}, {"n": 9, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -7.337995324130873, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 9, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score_history": [-0.0001125335693359375, -8.0108642578125e-05, -0.0005603847093880177, -1.490105023549404e-05, -2.50339189733495e-06, -4.637986421585083e-07, -3.314018249511719e-05, -1.0728823326644488e-05, -0.0002803802490234375, -0.011859893798828125, -0.00041961669921875, -3.576278118089249e-07, -2.300739288330078e-05, -5.364416665543104e-06, -1.9073486328125e-06, -0.0003628726990427822, -3.814697265625e-06, -0.0012416839599609375, -1.9073486328125e-06, -0.0135270357131958, -3.576278118089249e-07, -4.00543212890625e-05, 0.0, -1.52587890625e-05, 0.0, -5.7220458984375e-05, -2.1457672119140625e-06, -0.0009766817092895508, 0.0, -1.52587890625e-05, 0.0, -7.313938617706299, -9.5367431640625e-06, -4.9591064453125e-05, -9.918212890625e-05, -4.76837158203125e-05, -1.5616295058862306e-05, -2.3841855067985307e-07, -0.0001611597544979304, 0.0], "choice_history": [97, 283, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 132, 299, "9", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "p", "hole6": [{"_type": "Template62", "hole1": 5, "hole0": 9}], "hole3": "create_minion", "hole0": "CoreHound", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Core Hound", "_type": "Template26", "hole2": "COMMON", "hole1": 7}], "hole1": "MinionCard"}, "score": -7.343971209408522, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(9, 5)\n"}, {"score_history": [-0.0001125335693359375, -8.0108642578125e-05, -0.0005603847093880177, -1.490105023549404e-05, -2.50339189733495e-06, -4.637986421585083e-07, -3.314018249511719e-05, -1.0728823326644488e-05, -0.0002803802490234375, -0.011859893798828125, -0.00041961669921875, -3.576278118089249e-07, -2.300739288330078e-05, -5.364416665543104e-06, -1.9073486328125e-06, -0.0003628726990427822, -3.814697265625e-06, -0.0012416839599609375, -1.9073486328125e-06, -4.362571716308594, 0.0, -2.8877391815185547, -0.000209808349609375, -0.000698089599609375, -0.0001354217529296875, -0.0033283233642578125, -0.016452908515930176, -7.832050323486328e-05, -0.000701904296875, -0.0001697540283203125, -0.10578346252441406, -2.86102294921875e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.012046335265040398, -1.33514404296875e-05, -0.000640869140625, -0.0027008056640625, -5.7220458984375e-05, -0.045755352824926376, 0.0, -0.04063892364501953, -0.0001163482666015625, -0.03910565376281738, -2.110004425048828e-05, 0.0, -0.0042591094970703125, -0.0007953643798828125, -0.0019445419311523438, -0.0001354217529296875, -1.1444091796875e-05, -0.0023369358386844397, -1.9073486328125e-06, -0.0002951622009277344, 0.0, -0.009733796119689941, 0.0, -3.814697265625e-06, -0.0002346038818359375, -0.00017547607421875, -2.2411095415009186e-05, -1.1920928244535389e-07, -0.0007126283599063754, 0.0], "choice_history": [97, 283, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "COMMON", "<EOS>", 19, 169, 346, 69, 291, "Mana", "Change", "<EOS>", 347, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "attack", "<EOS>", 88, 325, "Weapon", "Selector", "<EOS>", 89, 331, 139, 23, 179, "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "9", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 5, "hole0": 9}], "hole3": "create_minion", "hole0": "CoreHound", "_type": "Template5", "hole2": [{"hole4": {"elts": [{"_type": "Template54", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "Attribute"}, "args": [{"_type": "Str", "s": "attack"}, {"_type": "Template79", "hole0": "WeaponSelector"}]}, {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "hole0": "ManaChange"}], "_type": "List"}, "hole3": "COMMON", "hole0": "Core Hound", "_type": "Template26", "hole2": "COMMON", "hole1": 7}], "hole1": "MinionCard"}, "score": -7.554727081499486, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, COMMON=[Buff(ManaChange(Attribute('attack',\n            WeaponSelector()), -1))])\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score_history": [-0.0001125335693359375, -8.0108642578125e-05, -0.0005603847093880177, -1.490105023549404e-05, -2.50339189733495e-06, -4.637986421585083e-07, -3.314018249511719e-05, -1.0728823326644488e-05, -0.0002803802490234375, -0.011859893798828125, -0.00041961669921875, -3.576278118089249e-07, -2.300739288330078e-05, -5.364416665543104e-06, -1.9073486328125e-06, -0.0003628726990427822, -3.814697265625e-06, -0.0012416839599609375, -1.9073486328125e-06, -0.0135270357131958, -3.576278118089249e-07, -4.00543212890625e-05, 0.0, -1.52587890625e-05, 0.0, -5.7220458984375e-05, -2.1457672119140625e-06, -7.777850151062012, 0.0, -5.7220458984375e-06, 0.0, -0.0009660720825195312, 0.0, -8.392333984375e-05, -0.000118255615234375, -2.09808349609375e-05, -1.0847986231965479e-05, -5.960462772236497e-07, -0.00024185411166399717, 0.0], "choice_history": [97, 283, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "9", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 5, "hole0": 9}], "hole3": "create_minion", "hole0": "CoreHound", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "PIRATE"}, "hole3": "minion_type", "hole0": "Core Hound", "_type": "Template26", "hole2": "COMMON", "hole1": 7}], "hole1": "MinionCard"}, "score": -7.807956046208062, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score_history": [-0.0001125335693359375, -8.0108642578125e-05, -7.743034839630127, -0.10537451505661011, -0.00021217002358753234, -5.792826414108276e-07, -3.3020973205566406e-05, -1.3351433153729886e-05, -0.0004253387451171875, -0.04115486145019531, -0.0003566741943359375, -9.536738616588991e-07, -2.491474151611328e-05, -6.198873961693607e-06, -1.9073486328125e-06, -0.0006527873920276761, -5.7220458984375e-06, -0.0013599395751953125, -1.9073486328125e-06, -0.015955090522766113, -4.768370445162873e-07, -5.14984130859375e-05, 0.0, -1.33514404296875e-05, 0.0, -6.29425048828125e-05, -2.0265579223632812e-06, -0.0011483430862426758, 0.0, -1.52587890625e-05, 0.0, -0.0007767677307128906, 0.0, -7.82012939453125e-05, -6.29425048828125e-05, -2.288818359375e-05, -1.3232143828645349e-05, -4.768370445162873e-07, -0.0002913154603447765, 0.0], "choice_history": [97, 283, "Force", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "9", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 5, "hole0": 9}], "hole3": "create_minion", "hole0": "ForceHound", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Core Hound", "_type": "Template26", "hole2": "COMMON", "hole1": 7}], "hole1": "MinionCard"}, "score": -7.911347136306404, "inferred_code": "class ForceHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score_history": [-0.0001125335693359375, -8.0108642578125e-05, -0.0005603847093880177, -1.490105023549404e-05, -2.50339189733495e-06, -4.637986421585083e-07, -3.314018249511719e-05, -1.0728823326644488e-05, -0.0002803802490234375, -0.011859893798828125, -0.00041961669921875, -3.576278118089249e-07, -2.300739288330078e-05, -5.364416665543104e-06, -1.9073486328125e-06, -8.072063446044922, -4.00543212890625e-05, -0.0008698701858520508, -5.7220458984375e-06, -0.004242300987243652, -1.0728830375228426e-06, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, 0.0, -5.7220458984375e-05, -2.1457672119140625e-06, -0.0009099245071411133, 0.0, -1.52587890625e-05, 0.0, -0.0008455514907836914, 0.0, -7.62939453125e-05, -5.91278076171875e-05, -2.09808349609375e-05, -1.2278481335670222e-05, -4.768370445162873e-07, -0.00026986299781128764, 0.0], "choice_history": [97, 283, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Core", " ", "Hound", "<EOS>", "9", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "9", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 5, "hole0": 9}], "hole3": "create_minion", "hole0": "CoreHound", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Core Hound", "_type": "Template26", "hole2": "COMMON", "hole1": 9}], "hole1": "MinionCard"}, "score": -8.09293693440776, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 9, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score_history": [-0.0001125335693359375, -8.0108642578125e-05, -0.0005603847093880177, -1.490105023549404e-05, -2.50339189733495e-06, -4.637986421585083e-07, -3.314018249511719e-05, -1.0728823326644488e-05, -0.0002803802490234375, -0.011859893798828125, -0.00041961669921875, -3.576278118089249e-07, -2.300739288330078e-05, -5.364416665543104e-06, -1.9073486328125e-06, -0.0003628726990427822, -3.814697265625e-06, -0.0012416839599609375, -1.9073486328125e-06, -0.0135270357131958, -3.576278118089249e-07, -4.00543212890625e-05, 0.0, -1.52587890625e-05, 0.0, -5.7220458984375e-05, -2.1457672119140625e-06, -8.307902336120605, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.0005598068237304688, 0.0, -5.340576171875e-05, -6.29425048828125e-05, -4.38690185546875e-05, -4.887569048150908e-06, -4.768370445162873e-07, -0.00024126195057760924, 0.0], "choice_history": [97, 283, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "9", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 5, "hole0": 9}], "hole3": "create_minion", "hole0": "CoreHound", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "<UNK>"}, "hole3": "minion_type", "hole0": "Core Hound", "_type": "Template26", "hole2": "COMMON", "hole1": 7}], "hole1": "MinionCard"}, "score": -8.337555239899075, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.<UNK>)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score_history": [-0.0001125335693359375, -8.0108642578125e-05, -0.0005603847093880177, -1.490105023549404e-05, -2.50339189733495e-06, -4.637986421585083e-07, -3.314018249511719e-05, -1.0728823326644488e-05, -0.0002803802490234375, -0.011859893798828125, -0.00041961669921875, -3.576278118089249e-07, -2.300739288330078e-05, -5.364416665543104e-06, -1.9073486328125e-06, -0.0003628726990427822, -3.814697265625e-06, -0.0012416839599609375, -1.9073486328125e-06, -0.0135270357131958, -3.576278118089249e-07, -4.00543212890625e-05, 0.0, -1.52587890625e-05, 0.0, -5.7220458984375e-05, -2.1457672119140625e-06, -0.0009766817092895508, 0.0, -1.52587890625e-05, 0.0, -0.0007883310317993164, 0.0, -7.62939453125e-05, -6.29425048828125e-05, -2.09808349609375e-05, -1.2397689715726301e-05, -4.768370445162873e-07, -8.383176803588867, 0.0], "choice_history": [97, 283, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "9", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 4, "hole0": 9}], "hole3": "create_minion", "hole0": "CoreHound", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Core Hound", "_type": "Template26", "hole2": "COMMON", "hole1": 7}], "hole1": "MinionCard"}, "score": -8.413787810014355, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 4)\n"}, {"score_history": [-0.0001125335693359375, -8.0108642578125e-05, -0.0005603847093880177, -1.490105023549404e-05, -2.50339189733495e-06, -4.637986421585083e-07, -3.314018249511719e-05, -1.0728823326644488e-05, -0.0002803802490234375, -0.011859893798828125, -0.00041961669921875, -3.576278118089249e-07, -2.300739288330078e-05, -5.364416665543104e-06, -1.9073486328125e-06, -0.0003628726990427822, -3.814697265625e-06, -0.0012416839599609375, -1.9073486328125e-06, -0.0135270357131958, -3.576278118089249e-07, -4.00543212890625e-05, 0.0, -1.52587890625e-05, 0.0, -5.7220458984375e-05, -2.1457672119140625e-06, -8.93073558807373, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -0.0006209611892700195, 0.0, -8.58306884765625e-05, -5.53131103515625e-05, -1.71661376953125e-05, -1.0371154530730564e-05, -4.768370445162873e-07, -0.00023923045955598354, 0.0], "choice_history": [97, 283, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "9", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 5, "hole0": 9}], "hole3": "create_minion", "hole0": "CoreHound", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}, "hole3": "minion_type", "hole0": "Core Hound", "_type": "Template26", "hole2": "COMMON", "hole1": 7}], "hole1": "MinionCard"}, "score": -8.960477893844427, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score_history": [-0.0001125335693359375, -8.0108642578125e-05, -0.0005603847093880177, -1.490105023549404e-05, -2.50339189733495e-06, -4.637986421585083e-07, -3.314018249511719e-05, -1.0728823326644488e-05, -0.0002803802490234375, -0.011859893798828125, -0.00041961669921875, -3.576278118089249e-07, -2.300739288330078e-05, -5.364416665543104e-06, -1.9073486328125e-06, -0.0003628726990427822, -3.814697265625e-06, -9.194350242614746, -1.9073486328125e-06, -0.0080643892288208, -4.768370445162873e-07, -6.866455078125e-05, 0.0, -1.9073486328125e-05, 0.0, -5.340576171875e-05, -2.0265579223632812e-06, -0.0009804964065551758, 0.0, -1.33514404296875e-05, 0.0, -0.0008493661880493164, 0.0, -7.62939453125e-05, -6.29425048828125e-05, -2.288818359375e-05, -1.4305012882687151e-05, -4.768370445162873e-07, -0.00030037303804419935, 0.0], "choice_history": [97, 283, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "EPIC", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "9", "<EOS>", "5", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 5, "hole0": 9}], "hole3": "create_minion", "hole0": "CoreHound", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Core Hound", "_type": "Template26", "hole2": "EPIC", "hole1": 7}], "hole1": "MinionCard"}, "score": -9.21865265904006, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            EPIC, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}]}
{"index": 22, "beams": [{"score_history": [-0.0028820037841796875, -6.4849853515625e-05, -5.7220458984375e-06, -0.0005741119384765625, -0.00037384033203125, -2.646422763064038e-05, -0.00019321995205245912, -5.7220458984375e-06, -1.71661376953125e-05, -2.288818359375e-05, -0.00016717659309506416, -7.748603820800781e-06, -5.9604644775390625e-06, -1.71661376953125e-05, -0.2303152084350586, -0.000408172607421875, -1.41858699862496e-05, -2.2649765014648438e-06, -1.1920928244535389e-07, 0.0, -0.0009746551513671875, 0.0, -0.001415252685546875, -7.62939453125e-06, -7.05718994140625e-05, -5.7220458984375e-06, -0.000431060791015625, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -0.0002384185791015625, -9.5367431640625e-06, -0.0002079010009765625, -0.0002155303955078125, -0.012827634811401367, -7.62939453125e-06, -0.0002307891845703125, -0.0004940032958984375, -4.9591064453125e-05, 0.0, -0.0075397491455078125, 0.0, -0.0001926422119140625, 0.0, -0.0005487203598022461, 0.0, -0.015759028494358063, -1.33514404296875e-05, -0.0001087188720703125, -0.00032806396484375, -0.0009136199951171875, -0.00023651123046875, -1.9073486328125e-06, -0.019246339797973633, -0.00020181271247565746, -9.5367431640625e-06, -0.0022125244140625, -0.00032806396484375, -0.00011444091796875, -0.0003147125244140625, -0.0007745026960037649, -0.0008474588394165039, -2.86102294921875e-05, -5.340576171875e-05, -0.00016021728515625, -5.7220458984375e-06, -0.013159751892089844, 0.0, -0.0002593994140625, 0.0, -0.0444035530090332, -6.520748138427734e-05, 0.0, -0.0010700225830078125, -0.006722450256347656, -0.0017595278332009912, -0.0006612539291381836, -0.004104137420654297, 0.0, 0.0], "choice_history": [96, 173, 358, 105, 152, "Corruption", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 137, 326, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 346, 45, 150, 21, 174, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Turn", "Started", "<EOS>", 353, 95, 336, "player", "<EOS>", 38, 325, "Enemy", "Player", "<EOS>", 64, 269, "Kill", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "hole3": "target_func", "hole0": "Corruption", "_type": "Template8", "hole2": "WARLOCK", "hole1": 1}, {"hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "Effect"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "TurnStarted"}, "keywords": [{"value": {"_type": "Template79", "hole0": "EnemyPlayer"}, "_type": "keyword", "arg": "player"}]}, {"hole3": "SelfSelector", "_type": "Template44", "hole0": "Kill"}]}], "_type": "Template3", "hole1": "add_effect", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Corruption"}], "_type": "Module"}, "score": -0.3744940104579584, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score_history": [-0.0028820037841796875, -6.4849853515625e-05, -5.7220458984375e-06, -0.0005741119384765625, -0.00037384033203125, -2.646422763064038e-05, -0.00019321995205245912, -5.7220458984375e-06, -1.71661376953125e-05, -2.288818359375e-05, -0.00016717659309506416, -7.748603820800781e-06, -5.9604644775390625e-06, -1.71661376953125e-05, -0.2303152084350586, -0.000408172607421875, -1.41858699862496e-05, -2.2649765014648438e-06, -1.1920928244535389e-07, 0.0, -0.0009746551513671875, 0.0, -0.001415252685546875, -7.62939453125e-06, -7.05718994140625e-05, -5.7220458984375e-06, -0.000431060791015625, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -0.0002384185791015625, -9.5367431640625e-06, -0.0002079010009765625, -0.0002155303955078125, -0.012827634811401367, -7.62939453125e-06, -0.0002307891845703125, -0.0004940032958984375, -4.9591064453125e-05, 0.0, -0.0075397491455078125, 0.0, -0.0001926422119140625, 0.0, -0.0005487203598022461, 0.0, -0.015759028494358063, -1.33514404296875e-05, -0.0001087188720703125, -0.00032806396484375, -0.0009136199951171875, -0.00023651123046875, -1.9073486328125e-06, -0.019246339797973633, -0.00020181271247565746, -9.5367431640625e-06, -0.0022125244140625, -0.00032806396484375, -0.00011444091796875, -0.0003147125244140625, -0.0007745026960037649, -0.0008474588394165039, -2.86102294921875e-05, -5.340576171875e-05, -0.00016021728515625, -5.7220458984375e-06, -0.013159751892089844, 0.0, -0.0002593994140625, 0.0, -3.469618320465088, -5.233277624938637e-05, -5.7220458984375e-06, -0.00133514404296875, -0.006585121154785156, -0.001735685975290835, -0.0005056858062744141, -0.004697322845458984, 0.0, 0.0], "choice_history": [96, 173, 358, 105, 152, "Corruption", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 137, 326, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 346, 45, 150, 21, 174, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Turn", "Started", "<EOS>", 353, 95, 336, "player", "<EOS>", 38, 325, "Current", "Player", "<EOS>", 64, 269, "Kill", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "hole3": "target_func", "hole0": "Corruption", "_type": "Template8", "hole2": "WARLOCK", "hole1": 1}, {"hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "Effect"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "TurnStarted"}, "keywords": [{"value": {"_type": "Template79", "hole0": "CurrentPlayer"}, "_type": "keyword", "arg": "player"}]}, {"hole3": "SelfSelector", "_type": "Template44", "hole0": "Kill"}]}], "_type": "Template3", "hole1": "add_effect", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Corruption"}], "_type": "Module"}, "score": -3.800243193057206, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=CurrentPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score_history": [-0.0028820037841796875, -6.4849853515625e-05, -5.7220458984375e-06, -0.0005741119384765625, -0.00037384033203125, -2.646422763064038e-05, -0.00019321995205245912, -5.7220458984375e-06, -1.71661376953125e-05, -2.288818359375e-05, -0.00016717659309506416, -7.748603820800781e-06, -5.9604644775390625e-06, -1.71661376953125e-05, -3.0321779251098633, -0.00408172607421875, -4.768367489305092e-06, -2.1457672119140625e-06, -1.1920928244535389e-07, 0.0, -0.0006103515625, 0.0, -0.42914676666259766, 0.0, -0.0001678466796875, -0.0006542205810546875, -1.71661376953125e-05, -0.0002899169921875, -3.0517578125e-05, -0.0006275177001953125, -3.4332275390625e-05, -2.288818359375e-05, 0.0, -4.76837158203125e-05, -9.5367431640625e-06, -9.5367431640625e-05, -9.655952453613281e-06, -3.62396240234375e-05, -4.76837158203125e-05, -0.7233319282531738, -3.62396240234375e-05, -0.00029754638671875, -0.000904083251953125, -6.29425048828125e-05, 0.0, -0.030527114868164062, 0.0, -6.67572021484375e-05, 0.0, -0.00020229816436767578, 0.0, -0.022551553323864937, -1.52587890625e-05, -4.00543212890625e-05, -0.000244140625, -0.000835418701171875, -0.000125885009765625, -1.9073486328125e-06, -0.029778599739074707, -0.0002202933537773788, -1.1444091796875e-05, -0.00209808349609375, -0.0003414154052734375, -0.00012969970703125, -0.0003509521484375, -0.0007594823255203664, -0.0008645057678222656, -3.4332275390625e-05, -5.53131103515625e-05, -0.0001621246337890625, -5.7220458984375e-06, -0.012920379638671875, 0.0, -0.00026702880859375, 0.0, -0.03551375865936279, -6.341934204101562e-05, 0.0, -0.00099945068359375, -0.006905555725097656, -0.001748798880726099, -0.0007282495498657227, -0.004193782806396484, 0.0, 0.0], "choice_history": [96, 173, 358, 105, 152, "Corruption", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 346, 45, 150, 21, 174, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Turn", "Started", "<EOS>", 353, 95, 336, "player", "<EOS>", 38, 325, "Enemy", "Player", "<EOS>", 64, 269, "Kill", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "COMMON", "hole0": "Corruption", "_type": "Template14", "hole2": "WARLOCK", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "Effect"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "TurnStarted"}, "keywords": [{"value": {"_type": "Template79", "hole0": "EnemyPlayer"}, "_type": "keyword", "arg": "player"}]}, {"hole3": "SelfSelector", "_type": "Template44", "hole0": "Kill"}]}], "_type": "Template3", "hole1": "add_effect", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Corruption"}], "_type": "Module"}, "score": -4.349873936932902, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score_history": [-0.0028820037841796875, -6.4849853515625e-05, -5.7220458984375e-06, -0.0005741119384765625, -0.00037384033203125, -2.646422763064038e-05, -0.00019321995205245912, -5.7220458984375e-06, -1.71661376953125e-05, -2.288818359375e-05, -0.00016717659309506416, -7.748603820800781e-06, -5.9604644775390625e-06, -1.71661376953125e-05, -3.0321779251098633, -0.00408172607421875, -4.768367489305092e-06, -2.1457672119140625e-06, -1.1920928244535389e-07, 0.0, -0.0006103515625, 0.0, -0.42914676666259766, 0.0, -0.0001678466796875, -0.0006542205810546875, -1.71661376953125e-05, -0.0002899169921875, -3.0517578125e-05, -0.0006275177001953125, -3.4332275390625e-05, -2.288818359375e-05, 0.0, -4.76837158203125e-05, -9.5367431640625e-06, -9.5367431640625e-05, -9.655952453613281e-06, -3.62396240234375e-05, -4.76837158203125e-05, -0.7929520606994629, -5.7220458984375e-06, -0.00022125244140625, -0.000949859619140625, -9.1552734375e-05, 0.0, -0.0135650634765625, 0.0, -7.82012939453125e-05, 0.0, -0.00019860267639160156, 0.0, -0.022805409505963326, -1.52587890625e-05, -3.62396240234375e-05, -0.0002269744873046875, -0.0007343292236328125, -0.0001220703125, -1.9073486328125e-06, -0.03137040138244629, -0.00021087581990286708, -1.1444091796875e-05, -0.0020465850830078125, -0.0003528594970703125, -0.0001220703125, -0.000362396240234375, -0.0007729529752396047, -0.0008549690246582031, -3.0517578125e-05, -5.53131103515625e-05, -0.000164031982421875, -5.7220458984375e-06, -0.013115882873535156, 0.0, -0.0002651214599609375, 0.0, -0.036194443702697754, -6.341934204101562e-05, 0.0, -0.000988006591796875, -0.006943702697753906, -0.00175046781077981, -0.0007263422012329102, -0.004155635833740234, 0.0, 0.0], "choice_history": [96, 173, 358, 105, 152, "Corruption", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 346, 45, 150, 21, 174, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Turn", "Started", "<EOS>", 353, 95, 336, "player", "<EOS>", 38, 325, "Enemy", "Player", "<EOS>", 64, 269, "Kill", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "COMMON", "hole0": "Corruption", "_type": "Template14", "hole2": "WARLOCK", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "Effect"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "TurnStarted"}, "keywords": [{"value": {"_type": "Template79", "hole0": "EnemyPlayer"}, "_type": "keyword", "arg": "player"}]}, {"hole3": "SelfSelector", "_type": "Template44", "hole0": "Kill"}]}], "_type": "Template3", "hole1": "add_effect", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Corruption"}], "_type": "Module"}, "score": -4.40504608229957, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score_history": [-0.0028820037841796875, -6.4849853515625e-05, -5.7220458984375e-06, -0.0005741119384765625, -0.00037384033203125, -2.646422763064038e-05, -0.00019321995205245912, -5.7220458984375e-06, -1.71661376953125e-05, -2.288818359375e-05, -0.00016717659309506416, -7.748603820800781e-06, -5.9604644775390625e-06, -1.71661376953125e-05, -2.1331300735473633, -0.000324249267578125, -1.0013571227318607e-05, -3.814697265625e-06, -2.8490539989434183e-05, 0.0, -0.00141143798828125, -1.9073486328125e-06, -0.018995285034179688, -8.58306884765625e-05, -0.0008660554885864258, 0.0, -0.0003299713134765625, -0.0002651214599609375, -0.00394439697265625, -2.47955322265625e-05, -7.05718994140625e-05, -1.1920928244535389e-07, 0.0, -0.03663933277130127, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -1.1920928244535389e-07, -0.5319375991821289, -3.814697265625e-05, -0.0001773834228515625, -0.000156402587890625, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -1.0013580322265625e-05, -5.14984130859375e-05, -1.52587890625e-05, 0.0, -1.71661376953125e-05, -3.576278118089249e-07, -5.841255187988281e-05, -3.099440846199286e-06, -0.6625223159790039, -0.000949859619140625, -0.00074005126953125, 0.0, -0.0045185089111328125, 0.0, -0.0003204345703125, 0.0, -0.0020732879638671875, 0.0, -0.1861109584569931, -1.9073486328125e-06, -0.0040740966796875, -0.010570526123046875, -0.14017391204833984, -0.0005817413330078125, -0.0061762332916259766, -2.9921526220277883e-05, -0.004175662994384766, -0.0006855724495835602, -0.0008287425735034049, -9.298322765971534e-06, -1.0728830375228426e-06, -0.053391456604003906, -0.0002593994140625, -0.0067291259765625, -0.000301361083984375, -1.52587890625e-05, -1.9073486328125e-06, -0.016237258911132812, 0.0, -0.0007354021072387695, 0.0, -0.764122486114502, 0.0, -0.009493577294051647, 0.0, -0.012814521789550781, -0.0002040863037109375, -0.00310516357421875, -1.33514404296875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.006744384765625, 0.0, -0.0018091201782226562, 0.0, -0.17697250843048096, 0.0, -0.06597370654344559, 0.0], "choice_history": [96, 173, 358, 105, 152, "Corruption", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 346, 57, 226, "Turn", "Ended", "<EOS>", "Kill", "<EOS>", "Self", "Selector", "<EOS>", 133, 304, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", "4", "<EOS>", 133, 304, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", "4", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "WARLOCK", "_type": "Template2", "hole1": 1, "hole0": "Corruption"}, {"body": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"hole4": "SelfSelector", "_type": "Template30", "hole1": "Kill", "hole0": "TurnEnded"}], "_type": "Template77", "hole1": "add_effect", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"hole2": 4, "_type": "Template65", "hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"hole2": 4, "_type": "Template65", "hole1": "increase_health", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "use"}], "_type": "ClassDef", "name": "Corruption"}], "_type": "Module"}, "score": -4.8765359580816465, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnEnded(), ActionTag(Kill(),\n            SelfSelector())))\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n"}, {"score_history": [-0.0028820037841796875, -6.4849853515625e-05, -5.7220458984375e-06, -0.0005741119384765625, -0.00037384033203125, -2.646422763064038e-05, -0.00019321995205245912, -5.7220458984375e-06, -1.71661376953125e-05, -2.288818359375e-05, -0.00016717659309506416, -7.748603820800781e-06, -5.9604644775390625e-06, -1.71661376953125e-05, -0.2303152084350586, -0.000408172607421875, -1.41858699862496e-05, -2.2649765014648438e-06, -1.1920928244535389e-07, 0.0, -0.0009746551513671875, 0.0, -0.001415252685546875, -7.62939453125e-06, -7.05718994140625e-05, -5.7220458984375e-06, -0.000431060791015625, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -0.0002384185791015625, -9.5367431640625e-06, -0.0002079010009765625, -0.0002155303955078125, -0.012827634811401367, -7.62939453125e-06, -0.0002307891845703125, -0.0004940032958984375, -4.9591064453125e-05, 0.0, -0.0075397491455078125, 0.0, -0.0001926422119140625, 0.0, -0.0005487203598022461, 0.0, -4.65774393081665, -2.0265579223632812e-06, -7.62939453125e-06, -0.015895843505859375, -0.0017757415771484375, -0.0001277923583984375, -3.814697265625e-06, -0.010894060134887695, -0.00026094127679243684, -1.52587890625e-05, -0.004230499267578125, -0.0002079010009765625, -0.0001068115234375, -0.00020599365234375, -0.0009495018748566508, -0.0008990764617919922, -4.38690185546875e-05, -5.340576171875e-05, -0.0001354217529296875, -5.7220458984375e-06, -0.01183319091796875, 0.0, -0.0002307891845703125, 0.0, -0.039875149726867676, -6.198882329044864e-05, 0.0, -0.0011272430419921875, -0.006550788879394531, -0.0017478453228250146, -0.0006710290908813477, -0.004111886024475098, 0.0, 0.0], "choice_history": [96, 173, 358, 105, 152, "Corruption", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 137, 326, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 346, 45, 150, 21, 174, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Turn", "Started", "<EOS>", 353, 95, 336, "player", "<EOS>", 38, 325, "Enemy", "Player", "<EOS>", 64, 269, "Kill", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "hole3": "target_func", "hole0": "Corruption", "_type": "Template8", "hole2": "WARLOCK", "hole1": 1}, {"hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "Effect"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "TurnStarted"}, "keywords": [{"value": {"_type": "Template79", "hole0": "EnemyPlayer"}, "_type": "keyword", "arg": "player"}]}, {"hole3": "SelfSelector", "_type": "Template44", "hole0": "Kill"}]}], "_type": "Template3", "hole1": "add_buff", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Corruption"}], "_type": "Module"}, "score": -5.020405309841401, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score_history": [-0.0028820037841796875, -6.4849853515625e-05, -5.7220458984375e-06, -0.0005741119384765625, -0.00037384033203125, -2.646422763064038e-05, -0.00019321995205245912, -5.7220458984375e-06, -1.71661376953125e-05, -2.288818359375e-05, -0.00016717659309506416, -7.748603820800781e-06, -5.9604644775390625e-06, -1.71661376953125e-05, -0.2303152084350586, -0.000408172607421875, -1.41858699862496e-05, -2.2649765014648438e-06, -1.1920928244535389e-07, 0.0, -0.0009746551513671875, 0.0, -0.001415252685546875, -7.62939453125e-06, -7.05718994140625e-05, -5.7220458984375e-06, -0.000431060791015625, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -0.0002384185791015625, -9.5367431640625e-06, -0.0002079010009765625, -0.0002155303955078125, -4.798947811126709, -4.00543212890625e-05, -0.0001621246337890625, -0.000545501708984375, -4.76837158203125e-05, 0.0, -0.008596420288085938, 0.0, -0.0002422332763671875, 0.0, -0.00035893917083740234, 0.0, -0.014852260239422321, -1.71661376953125e-05, -6.866455078125e-05, -0.0002727508544921875, -0.0008831024169921875, -0.00018310546875, -1.9073486328125e-06, -0.019148945808410645, -0.00019382740720175207, -1.1444091796875e-05, -0.0021305084228515625, -0.0003299713134765625, -0.0001163482666015625, -0.0003185272216796875, -0.0007573365583084524, -0.0008569955825805664, -3.0517578125e-05, -5.53131103515625e-05, -0.000164031982421875, -5.7220458984375e-06, -0.013136863708496094, 0.0, -0.000255584716796875, 0.0, -0.04155874252319336, -6.330013275146484e-05, 0.0, -0.0010814666748046875, -0.00672149658203125, -0.0017554747173562646, -0.0006747245788574219, -0.004128932952880859, 0.0, 0.0], "choice_history": [96, 173, 358, 105, 152, "Corruption", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 137, 326, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 346, 45, 150, 21, 174, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Turn", "Started", "<EOS>", 353, 95, 336, "player", "<EOS>", 38, 325, "Enemy", "Player", "<EOS>", 64, 269, "Kill", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "hole3": "target_func", "hole0": "Corruption", "_type": "Template8", "hole2": "WARLOCK", "hole1": 1}, {"hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "Effect"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "TurnStarted"}, "keywords": [{"value": {"_type": "Template79", "hole0": "EnemyPlayer"}, "_type": "keyword", "arg": "player"}]}, {"hole3": "SelfSelector", "_type": "Template44", "hole0": "Kill"}]}], "_type": "Template3", "hole1": "add_effect", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Corruption"}], "_type": "Module"}, "score": -5.157455199127973, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score_history": [-0.0028820037841796875, -6.4849853515625e-05, -5.7220458984375e-06, -0.0005741119384765625, -0.00037384033203125, -2.646422763064038e-05, -0.00019321995205245912, -5.7220458984375e-06, -1.71661376953125e-05, -2.288818359375e-05, -0.00016717659309506416, -7.748603820800781e-06, -5.9604644775390625e-06, -1.71661376953125e-05, -2.1331300735473633, -0.000324249267578125, -1.0013571227318607e-05, -3.814697265625e-06, -2.8490539989434183e-05, 0.0, -0.00141143798828125, -1.9073486328125e-06, -0.018995285034179688, -8.58306884765625e-05, -0.0008660554885864258, 0.0, -0.0003299713134765625, -0.0002651214599609375, -0.00394439697265625, -2.47955322265625e-05, -7.05718994140625e-05, -1.1920928244535389e-07, 0.0, -0.03663933277130127, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -1.1920928244535389e-07, -0.5319375991821289, -3.814697265625e-05, -0.0001773834228515625, -0.000156402587890625, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -1.0013580322265625e-05, -5.14984130859375e-05, -1.52587890625e-05, 0.0, -1.71661376953125e-05, -3.576278118089249e-07, -5.841255187988281e-05, -3.099440846199286e-06, -0.6625223159790039, -0.000949859619140625, -0.00074005126953125, 0.0, -0.0045185089111328125, 0.0, -0.0003204345703125, 0.0, -0.0020732879638671875, 0.0, -0.1861109584569931, -1.9073486328125e-06, -0.0040740966796875, -0.010570526123046875, -0.14017391204833984, -0.0005817413330078125, -0.0061762332916259766, -2.9921526220277883e-05, -0.004175662994384766, -0.0006855724495835602, -0.0008287425735034049, -9.298322765971534e-06, -1.0728830375228426e-06, -0.053391456604003906, -0.0002593994140625, -0.0067291259765625, -0.000301361083984375, -1.52587890625e-05, -1.9073486328125e-06, -0.016237258911132812, 0.0, -0.0007354021072387695, 0.0, -0.9457879066467285, 0.0, -0.013632629998028278, 0.0, -0.41944217681884766, -9.34600830078125e-05, -0.000698089599609375, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0010404586791992188, 0.0, -0.0008411407470703125, 0.0, -0.10979187488555908, -1.9073486328125e-06, -0.04858354479074478, 0.0], "choice_history": [96, 173, 358, 105, 152, "Corruption", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 346, 57, 226, "Turn", "Ended", "<EOS>", "Kill", "<EOS>", "Self", "Selector", "<EOS>", 133, 304, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", "4", "<EOS>", 133, 304, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", "4", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "WARLOCK", "_type": "Template2", "hole1": 1, "hole0": "Corruption"}, {"body": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"hole4": "SelfSelector", "_type": "Template30", "hole1": "Kill", "hole0": "TurnEnded"}], "_type": "Template77", "hole1": "add_effect", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"hole2": 4, "_type": "Template65", "hole1": "increase_health", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"hole2": 4, "_type": "Template65", "hole1": "increase_health", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "use"}], "_type": "ClassDef", "name": "Corruption"}], "_type": "Module"}, "score": -5.3751847971530395, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnEnded(), ActionTag(Kill(),\n            SelfSelector())))\n        self.target.increase_health(4)\n        self.target.increase_health(4)\n"}, {"score_history": [-0.0028820037841796875, -6.4849853515625e-05, -5.7220458984375e-06, -0.0005741119384765625, -0.00037384033203125, -2.646422763064038e-05, -0.00019321995205245912, -5.7220458984375e-06, -1.71661376953125e-05, -2.288818359375e-05, -0.00016717659309506416, -7.748603820800781e-06, -5.9604644775390625e-06, -1.71661376953125e-05, -0.2303152084350586, -0.000408172607421875, -1.41858699862496e-05, -2.2649765014648438e-06, -1.1920928244535389e-07, 0.0, -0.0009746551513671875, 0.0, -0.001415252685546875, -7.62939453125e-06, -7.05718994140625e-05, -5.7220458984375e-06, -0.000431060791015625, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -0.0002384185791015625, -9.5367431640625e-06, -0.0002079010009765625, -0.0002155303955078125, -0.012827634811401367, -7.62939453125e-06, -0.0002307891845703125, -0.0004940032958984375, -4.9591064453125e-05, 0.0, -0.0075397491455078125, 0.0, -0.0001926422119140625, 0.0, -0.0005487203598022461, 0.0, -0.015759028494358063, -1.33514404296875e-05, -0.0001087188720703125, -0.00032806396484375, -0.0009136199951171875, -0.00023651123046875, -1.9073486328125e-06, -0.019246339797973633, -0.00020181271247565746, -9.5367431640625e-06, -0.0022125244140625, -0.00032806396484375, -0.00011444091796875, -0.0003147125244140625, -0.0007745026960037649, -0.0008474588394165039, -2.86102294921875e-05, -5.340576171875e-05, -0.00016021728515625, -5.7220458984375e-06, -0.013159751892089844, 0.0, -0.0002593994140625, 0.0, -5.1404242515563965, -2.9087063012411818e-05, -7.748603820800781e-06, -0.0010509490966796875, -0.007559776306152344, -0.0018621674971655011, -0.0004210472106933594, -0.0035856962203979492, 0.0, 0.0], "choice_history": [96, 173, 358, 105, 152, "Corruption", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 137, 326, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 346, 45, 150, 21, 174, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Turn", "Started", "<EOS>", 353, 95, 336, "player", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 64, 269, "Kill", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "hole3": "target_func", "hole0": "Corruption", "_type": "Template8", "hole2": "WARLOCK", "hole1": 1}, {"hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "Effect"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "TurnStarted"}, "keywords": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "player"}]}, {"hole3": "SelfSelector", "_type": "Template44", "hole0": "Kill"}]}], "_type": "Template3", "hole1": "add_effect", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Corruption"}], "_type": "Module"}, "score": -5.4706485814995105, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=BothPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score_history": [-0.0028820037841796875, -6.4849853515625e-05, -5.7220458984375e-06, -0.0005741119384765625, -0.00037384033203125, -2.646422763064038e-05, -0.00019321995205245912, -5.7220458984375e-06, -1.71661376953125e-05, -2.288818359375e-05, -0.00016717659309506416, -7.748603820800781e-06, -5.9604644775390625e-06, -1.71661376953125e-05, -2.1331300735473633, -0.000324249267578125, -1.0013571227318607e-05, -3.814697265625e-06, -2.8490539989434183e-05, 0.0, -0.00141143798828125, -1.9073486328125e-06, -0.018995285034179688, -8.58306884765625e-05, -0.0008660554885864258, 0.0, -0.0003299713134765625, -0.0002651214599609375, -0.00394439697265625, -2.47955322265625e-05, -7.05718994140625e-05, -1.1920928244535389e-07, 0.0, -0.03663933277130127, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -1.1920928244535389e-07, -0.9810190200805664, -5.91278076171875e-05, -0.000751495361328125, -8.7738037109375e-05, -3.4332275390625e-05, -8.392333984375e-05, 0.0, -8.106231689453125e-06, -5.14984130859375e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-05, -4.768370445162873e-07, -5.054473876953125e-05, -2.9802317840221804e-06, -0.03767108917236328, -3.814697265625e-06, -2.09808349609375e-05, -0.0011615753173828125, -0.0009212493896484375, -0.9345947504043579, -3.576267772587016e-05, -0.6752691268920898, -0.0021820068359375, -0.0024660825729370117, -5.125993993715383e-06, -0.3112525939941406, -4.38690185546875e-05, -0.023215293884277344, -0.000225067138671875, -0.11040401458740234, 0.0, -0.14159142971038818, 0.0, -0.09118962287902832, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "Corruption", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 22, 176, "Null", "<EOS>", 106, 155, 36, 317, 21, 174, "game", "<EOS>", "check_delayed", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "WARLOCK", "_type": "Template2", "hole1": 1, "hole0": "Corruption"}, {"body": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}, {"value": {"_type": "Template76", "hole1": "check_delayed", "hole0": {"_type": "Name", "id": "game"}}, "_type": "Expr"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "use"}], "_type": "ClassDef", "name": "Corruption"}], "_type": "Module"}, "score": -5.514949824607683, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = Null\n        game.check_delayed()\n"}, {"score_history": [-0.0028820037841796875, -6.4849853515625e-05, -5.7220458984375e-06, -0.0005741119384765625, -0.00037384033203125, -2.646422763064038e-05, -0.00019321995205245912, -5.7220458984375e-06, -1.71661376953125e-05, -2.288818359375e-05, -0.00016717659309506416, -7.748603820800781e-06, -5.9604644775390625e-06, -1.71661376953125e-05, -3.0321779251098633, -0.00408172607421875, -4.768367489305092e-06, -2.1457672119140625e-06, -1.1920928244535389e-07, 0.0, -0.0006103515625, 0.0, -1.8022117614746094, 0.0, -0.0002040863037109375, -0.0004062652587890625, -9.5367431640625e-06, -0.0004388093948364258, -8.7738037109375e-05, -0.0004482269287109375, -1.9073486328125e-05, -3.0517578125e-05, 0.0, -6.29425048828125e-05, -7.62939453125e-06, -9.72747802734375e-05, -5.841255187988281e-06, -3.4332275390625e-05, -3.24249267578125e-05, -0.7664804458618164, -5.7220458984375e-06, -0.00023651123046875, -0.00093841552734375, -0.0001125335693359375, 0.0, -0.011510848999023438, 0.0, -7.2479248046875e-05, 0.0, -0.00020241737365722656, 0.0, -0.02293260768055916, -1.71661376953125e-05, -3.62396240234375e-05, -0.000225067138671875, -0.0007495880126953125, -0.0001239776611328125, -1.9073486328125e-06, -0.03235363960266113, -0.00021123341866768897, -1.1444091796875e-05, -0.0020542144775390625, -0.000354766845703125, -0.0001239776611328125, -0.000377655029296875, -0.0007642506971023977, -0.0008549690246582031, -3.0517578125e-05, -5.53131103515625e-05, -0.000164031982421875, -5.7220458984375e-06, -0.013104438781738281, 0.0, -0.00026702880859375, 0.0, -0.036661744117736816, -6.341934204101562e-05, 0.0, -0.00098419189453125, -0.0069522857666015625, -0.00175046781077981, -0.0007263422012329102, -0.004157543182373047, 0.0, 0.0], "choice_history": [96, 173, 358, 105, 152, "Corruption", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 346, 45, 150, 21, 174, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Turn", "Started", "<EOS>", 353, 95, 336, "player", "<EOS>", 38, 325, "Enemy", "Player", "<EOS>", 64, 269, "Kill", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Corruption", "_type": "Template14", "hole2": "WARLOCK", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "Effect"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "TurnStarted"}, "keywords": [{"value": {"_type": "Template79", "hole0": "EnemyPlayer"}, "_type": "keyword", "arg": "player"}]}, {"hole3": "SelfSelector", "_type": "Template44", "hole0": "Kill"}]}], "_type": "Template3", "hole1": "add_effect", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Corruption"}], "_type": "Module"}, "score": -5.751012661663019, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score_history": [-0.0028820037841796875, -6.4849853515625e-05, -5.7220458984375e-06, -0.0005741119384765625, -0.00037384033203125, -2.646422763064038e-05, -0.00019321995205245912, -5.7220458984375e-06, -1.71661376953125e-05, -2.288818359375e-05, -0.00016717659309506416, -7.748603820800781e-06, -5.9604644775390625e-06, -1.71661376953125e-05, -0.2303152084350586, -0.000408172607421875, -1.41858699862496e-05, -2.2649765014648438e-06, -1.1920928244535389e-07, 0.0, -0.0009746551513671875, 0.0, -0.001415252685546875, -7.62939453125e-06, -7.05718994140625e-05, -5.7220458984375e-06, -0.000431060791015625, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -0.0002384185791015625, -9.5367431640625e-06, -0.0002079010009765625, -0.0002155303955078125, -0.012827634811401367, -7.62939453125e-06, -0.0002307891845703125, -0.0004940032958984375, -4.9591064453125e-05, 0.0, -0.0075397491455078125, 0.0, -0.0001926422119140625, 0.0, -0.0005487203598022461, 0.0, -0.015759028494358063, -1.33514404296875e-05, -0.0001087188720703125, -0.00032806396484375, -0.0009136199951171875, -0.00023651123046875, -1.9073486328125e-06, -0.019246339797973633, -0.00020181271247565746, -9.5367431640625e-06, -0.0022125244140625, -0.00032806396484375, -0.00011444091796875, -0.0003147125244140625, -0.0007745026960037649, -0.0008474588394165039, -2.86102294921875e-05, -5.340576171875e-05, -0.00016021728515625, -5.7220458984375e-06, -0.013159751892089844, 0.0, -0.0002593994140625, 0.0, -5.45546293258667, -0.007437229156494141, -1.1920928244535389e-07, -0.025869369506835938, -0.004908561706542969, -0.005786891095340252, -0.0002371072769165039, -0.0014556646347045898, 0.0, 0.0], "choice_history": [96, 173, 358, 105, 152, "Corruption", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 137, 326, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 346, 45, 150, 21, 174, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Turn", "Started", "<EOS>", 353, 95, 336, "player", "<EOS>", 38, 325, "Player", "Selector", "<EOS>", 64, 269, "Kill", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "hole3": "target_func", "hole0": "Corruption", "_type": "Template8", "hole2": "WARLOCK", "hole1": 1}, {"hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "Effect"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "TurnStarted"}, "keywords": [{"value": {"_type": "Template79", "hole0": "PlayerSelector"}, "_type": "keyword", "arg": "player"}]}, {"hole3": "SelfSelector", "_type": "Template44", "hole0": "Kill"}]}], "_type": "Template3", "hole1": "add_effect", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Corruption"}], "_type": "Module"}, "score": -5.816865733117979, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=PlayerSelector()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score_history": [-0.0028820037841796875, -6.4849853515625e-05, -5.7220458984375e-06, -7.840274810791016, -1.1065731048583984, -0.08367511630058289, -1.1920928244535389e-07, -0.00025935552548617125, 0.0, -0.005859375, 0.0], "choice_history": [96, 173, 358, 127, 230, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>"], "model_output": {"body": [{"hole2": "WARLOCK", "_type": "Template31", "hole1": 1, "hole0": "Corruption"}], "_type": "Module"}, "score": -9.03959445736836, "inferred_code": "super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK, CARD_RARITY.COMMON)\n"}, {"score_history": [-0.0028820037841796875, -6.4849853515625e-05, -5.7220458984375e-06, -7.840274810791016, -1.1065731048583984, -3.301625967025757, -1.1920928244535389e-07, -0.00025935552548617125, 0.0, -0.005859375, 0.0], "choice_history": [96, 173, 358, 127, 230, "<UNK>", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>"], "model_output": {"body": [{"hole2": "WARLOCK", "_type": "Template31", "hole1": 1, "hole0": "<UNK>"}], "_type": "Module"}, "score": -12.257545308093533, "inferred_code": "super().__init__('<UNK>', 1, CHARACTER_CLASS.WARLOCK, CARD_RARITY.COMMON)\n"}, {"score_history": [-0.0028820037841796875, -6.4849853515625e-05, -5.7220458984375e-06, -14.560050964355469], "choice_history": [96, 173, 358, 104], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score": -14.563003540039062, "inferred_code": "break\n"}]}
{"index": 23, "beams": [{"score_history": [-1.9073486328125e-05, -2.6702880859375e-05, -0.0026144878938794136, -1.3470558769768104e-05, 0.0, -2.24970281124115e-05, -2.288818359375e-05, -4.768370445162873e-07, 0.0, -0.000667572021484375, -2.09808349609375e-05, -2.622604142743512e-06, -3.409384953556582e-05, -2.0265579223632812e-06, 0.0, -0.00016199142555706203, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, 0.0, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -0.000347137451171875, -1.1444091796875e-05, -7.987022399902344e-06, -6.318072337307967e-06, -1.0728698725870345e-05, 0.0, -0.0032355785369873047, -1.1920928244535389e-07, -0.0003528594970703125, -0.0002155303955078125, -0.0012425179593265057, -3.814697265625e-06], "choice_history": [97, 283, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 23, 179, "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"n": 1, "_type": "Num"}, "hole2": "spell_damage", "_type": "Template50", "hole1": 4, "hole0": 1}], "hole3": "create_minion", "hole0": "DalaranMage", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 3, "hole0": "Dalaran Mage"}], "hole1": "MinionCard"}, "score": -0.009113491693476305, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n"}, {"score_history": [-1.9073486328125e-05, -2.6702880859375e-05, -6.039462566375732, -1.3470558769768104e-05, 0.0, -2.24970281124115e-05, -2.288818359375e-05, -4.768370445162873e-07, 0.0, -0.000667572021484375, -2.09808349609375e-05, -2.622604142743512e-06, -3.409384953556582e-05, -2.0265579223632812e-06, 0.0, -0.00016199142555706203, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, 0.0, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -0.000347137451171875, -1.1444091796875e-05, -7.987022399902344e-06, -6.318072337307967e-06, -1.0728698725870345e-05, 0.0, -0.0032355785369873047, -1.1920928244535389e-07, -0.0003528594970703125, -0.0002155303955078125, -0.0012425179593265057, -3.814697265625e-06], "choice_history": [97, 283, "<UNK>", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 23, 179, "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"n": 1, "_type": "Num"}, "hole2": "spell_damage", "_type": "Template50", "hole1": 4, "hole0": 1}], "hole3": "create_minion", "hole0": "<UNK>Mage", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 3, "hole0": "Dalaran Mage"}], "hole1": "MinionCard"}, "score": -6.045961570175329, "inferred_code": "class <UNK>Mage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n"}, {"score_history": [-1.9073486328125e-05, -2.6702880859375e-05, -0.0026144878938794136, -1.3470558769768104e-05, 0.0, -2.24970281124115e-05, -2.288818359375e-05, -4.768370445162873e-07, 0.0, -0.000667572021484375, -2.09808349609375e-05, -2.622604142743512e-06, -3.409384953556582e-05, -2.0265579223632812e-06, 0.0, -0.00016199142555706203, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, 0.0, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -0.000347137451171875, -1.1444091796875e-05, -7.987022399902344e-06, -6.318072337307967e-06, -1.0728698725870345e-05, 0.0, -0.0032355785369873047, -1.1920928244535389e-07, -0.0003528594970703125, -0.0002155303955078125, -6.8922295570373535], "choice_history": [97, 283, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 23, 179, "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"n": 0, "_type": "Num"}, "hole2": "spell_damage", "_type": "Template50", "hole1": 4, "hole0": 1}], "hole3": "create_minion", "hole0": "DalaranMage", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 3, "hole0": "Dalaran Mage"}], "hole1": "MinionCard"}, "score": -6.900096716074238, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=0)\n"}, {"score_history": [-1.9073486328125e-05, -2.6702880859375e-05, -0.0026144878938794136, -1.3470558769768104e-05, 0.0, -2.24970281124115e-05, -2.288818359375e-05, -4.768370445162873e-07, 0.0, -0.000667572021484375, -2.09808349609375e-05, -2.622604142743512e-06, -3.409384953556582e-05, -2.0265579223632812e-06, 0.0, -0.00016199142555706203, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, 0.0, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -0.000347137451171875, -1.1444091796875e-05, -7.987022399902344e-06, -6.318072337307967e-06, -1.0728698725870345e-05, 0.0, -6.544215679168701, 0.0, -0.0070552825927734375, -0.011628150939941406, -0.18239879608154297, -4.1961669921875e-05, -1.33514404296875e-05, -0.24193954467773438, -0.0001010894775390625, -0.023607613518834114, -1.1444091796875e-05, -0.01862812042236328, -0.0007991790771484375, -0.1143968403339386, -0.001667022705078125, 0.0], "choice_history": [97, 283, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 37, 321, "Buff", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Minion", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "MinionSelector"}], "hole0": "Buff"}, "hole2": "auras", "_type": "Template50", "hole1": 4, "hole0": 1}], "hole3": "create_minion", "hole0": "DalaranMage", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 3, "hole0": "Dalaran Mage"}], "hole1": "MinionCard"}, "score": -7.15056714759578, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Buff(ChangeAttack(1), MinionSelector())])\n"}, {"score_history": [-1.9073486328125e-05, -2.6702880859375e-05, -0.0026144878938794136, -1.3470558769768104e-05, 0.0, -2.24970281124115e-05, -2.288818359375e-05, -4.768370445162873e-07, 0.0, -0.000667572021484375, -2.09808349609375e-05, -2.622604142743512e-06, -3.409384953556582e-05, -2.0265579223632812e-06, 0.0, -0.00016199142555706203, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, 0.0, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -0.000347137451171875, -1.1444091796875e-05, -7.987022399902344e-06, -6.318072337307967e-06, -1.0728698725870345e-05, 0.0, -8.406582832336426, 0.0, -0.012149810791015625, -4.38690185546875e-05, -0.0005364418029785156, -4.0531158447265625e-06], "choice_history": [97, 283, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "divine_shield", "_type": "Template50", "hole1": 4, "hole0": 1}], "hole3": "create_minion", "hole0": "DalaranMage", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 3, "hole0": "Dalaran Mage"}], "hole1": "MinionCard"}, "score": -8.423380078462856, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, divine_shield=True)\n"}, {"score_history": [-1.9073486328125e-05, -2.6702880859375e-05, -0.0026144878938794136, -1.3470558769768104e-05, 0.0, -2.24970281124115e-05, -2.288818359375e-05, -4.768370445162873e-07, 0.0, -0.000667572021484375, -2.09808349609375e-05, -2.622604142743512e-06, -3.409384953556582e-05, -2.0265579223632812e-06, 0.0, -0.00016199142555706203, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, 0.0, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -0.000347137451171875, -1.1444091796875e-05, -7.987022399902344e-06, -6.318072337307967e-06, -1.0728698725870345e-05, 0.0, -8.149020195007324, 0.0, -0.27634525299072266, -0.000545501708984375, -0.0011968585895374417, -1.9073486328125e-06], "choice_history": [97, 283, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "MECH", "<EOS>", 23, 179, "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"n": 1, "_type": "Num"}, "hole2": "MECH", "_type": "Template50", "hole1": 4, "hole0": 1}], "hole3": "create_minion", "hole0": "DalaranMage", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 3, "hole0": "Dalaran Mage"}], "hole1": "MinionCard"}, "score": -8.431172787043238, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, MECH=1)\n"}, {"score_history": [-1.9073486328125e-05, -2.6702880859375e-05, -0.0026144878938794136, -1.3470558769768104e-05, 0.0, -2.24970281124115e-05, -2.288818359375e-05, -4.768370445162873e-07, 0.0, -0.000667572021484375, -2.09808349609375e-05, -2.622604142743512e-06, -3.409384953556582e-05, -2.0265579223632812e-06, 0.0, -0.00016199142555706203, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, 0.0, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -0.000347137451171875, -1.1444091796875e-05, -7.987022399902344e-06, -6.318072337307967e-06, -1.0728698725870345e-05, 0.0, -8.559844017028809, 0.0, -0.0034008026123046875, -5.14984130859375e-05, -0.0007456541061401367, -2.0265579223632812e-06], "choice_history": [97, 283, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "windfury", "_type": "Template50", "hole1": 4, "hole0": 1}], "hole3": "create_minion", "hole0": "DalaranMage", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 3, "hole0": "Dalaran Mage"}], "hole1": "MinionCard"}, "score": -8.568107070116298, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n"}, {"score_history": [-1.9073486328125e-05, -2.6702880859375e-05, -0.0026144878938794136, -1.3470558769768104e-05, 0.0, -2.24970281124115e-05, -2.288818359375e-05, -4.768370445162873e-07, 0.0, -0.000667572021484375, -2.09808349609375e-05, -2.622604142743512e-06, -3.409384953556582e-05, -2.0265579223632812e-06, 0.0, -0.00016199142555706203, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, 0.0, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -0.000347137451171875, -1.1444091796875e-05, -7.987022399902344e-06, -6.318072337307967e-06, -1.0728698725870345e-05, 0.0, -6.544215679168701, 0.0, -0.0070552825927734375, -0.011628150939941406, -1.8579521179199219, -1.9073486328125e-06, -5.7220458984375e-06, -0.030472755432128906, -4.76837158203125e-05, -0.004394888877868652, -9.5367431640625e-06, -0.029012680053710938, -0.0011577606201171875, -0.1521073579788208, -0.001740574836730957, 0.0], "choice_history": [97, 283, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Minion", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 4, "hole0": 1}], "hole3": "create_minion", "hole0": "DalaranMage", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 3, "hole0": "Dalaran Mage"}], "hole1": "MinionCard"}, "score": -8.643865169672267, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n"}, {"score_history": [-1.9073486328125e-05, -2.6702880859375e-05, -0.0026144878938794136, -1.3470558769768104e-05, 0.0, -2.24970281124115e-05, -2.288818359375e-05, -4.768370445162873e-07, 0.0, -8.513670921325684, -0.09007453918457031, -9.5367431640625e-06, -1.1444091796875e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -0.0001659393310546875, 0.0, -0.0004787445068359375, -0.000194549560546875, -0.0001850128173828125, -2.622604142743512e-06, -7.343292236328125e-05, -3.707347059389576e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.200238178484142e-05, 0.0, -5.14984130859375e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -2.09808349609375e-05, 0.0, -2.09808349609375e-05, -0.00012600421905517578, -0.2135162353515625, 0.0, -0.0018596649169921875, -7.05718994140625e-05, -3.0517578125e-05, -5.7220458984375e-06, -6.103515625e-05, -0.007152557373046875, -9.1552734375e-05, -0.004273414611816406, 0.0, -0.000110626220703125, 0.0, -5.340576171875e-05, 0.0, -3.814697265625e-06, -0.0003643035888671875, -1.1444091796875e-05, -5.841255187988281e-06, -1.1324817933200393e-05, -5.721037450712174e-05, 0.0, -0.002190709114074707, -1.1920928244535389e-07, -0.0002079010009765625, -0.0001068115234375, -0.004173873923718929, -3.814697265625e-06], "choice_history": [97, 283, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Dalaran", " ", "Mage", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 23, 179, "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"n": 1, "_type": "Num"}, "hole2": "spell_damage", "_type": "Template50", "hole1": 4, "hole0": 1}], "hole3": "create_minion", "hole0": "DalaranMage", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "MECH"}], "hole2": [{"_type": "Str", "s": "Dalaran Mage"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -8.84240907831974, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n"}, {"score_history": [-1.9073486328125e-05, -2.6702880859375e-05, -0.0026144878938794136, -1.3470558769768104e-05, 0.0, -2.24970281124115e-05, -2.288818359375e-05, -4.768370445162873e-07, 0.0, -0.000667572021484375, -2.09808349609375e-05, -2.622604142743512e-06, -3.409384953556582e-05, -2.0265579223632812e-06, 0.0, -0.00016199142555706203, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, 0.0, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -0.000347137451171875, -1.1444091796875e-05, -7.987022399902344e-06, -6.318072337307967e-06, -1.0728698725870345e-05, 0.0, -8.845459938049316, 0.0, -0.000423431396484375, -6.29425048828125e-05, -0.000723719596862793, -2.0265579223632812e-06], "choice_history": [97, 283, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 4, "hole0": 1}], "hole3": "create_minion", "hole0": "DalaranMage", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 3, "hole0": "Dalaran Mage"}], "hole1": "MinionCard"}, "score": -8.850735129503505, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, charge=True)\n"}, {"score_history": [-1.9073486328125e-05, -2.6702880859375e-05, -0.0026144878938794136, -1.3470558769768104e-05, 0.0, -2.24970281124115e-05, -2.288818359375e-05, -4.768370445162873e-07, 0.0, -0.000667572021484375, -2.09808349609375e-05, -2.622604142743512e-06, -3.409384953556582e-05, -2.0265579223632812e-06, 0.0, -0.00016199142555706203, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, 0.0, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -0.000347137451171875, -1.1444091796875e-05, -7.987022399902344e-06, -6.318072337307967e-06, -1.0728698725870345e-05, 0.0, -8.91093635559082, 0.0, -0.0111236572265625, -0.000324249267578125, -0.0015290695009753108, -1.9073486328125e-06], "choice_history": [97, 283, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "deathrattle", "<EOS>", 23, 179, "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"n": 1, "_type": "Num"}, "hole2": "deathrattle", "_type": "Template50", "hole1": 4, "hole0": 1}], "hole3": "create_minion", "hole0": "DalaranMage", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 3, "hole0": "Dalaran Mage"}], "hole1": "MinionCard"}, "score": -8.927978310332605, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, deathrattle=1)\n"}, {"score_history": [-1.9073486328125e-05, -2.6702880859375e-05, -0.0026144878938794136, -1.3470558769768104e-05, 0.0, -2.24970281124115e-05, -2.288818359375e-05, -4.768370445162873e-07, 0.0, -0.000667572021484375, -2.09808349609375e-05, -2.622604142743512e-06, -3.409384953556582e-05, -2.0265579223632812e-06, 0.0, -8.921224594116211, 0.0, -2.6702880859375e-05, 0.0, -3.0517578125e-05, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -0.000335693359375, -1.1444091796875e-05, -7.987022399902344e-06, -5.006777428206988e-06, -1.3470439625962172e-05, 0.0, -0.0028020143508911133, -1.1920928244535389e-07, -0.0003757476806640625, -0.000247955322265625, -0.0012255902402102947, -3.814697265625e-06], "choice_history": [97, 283, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Dalaran", " ", "Mage", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 23, 179, "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"n": 1, "_type": "Num"}, "hole2": "spell_damage", "_type": "Template50", "hole1": 4, "hole0": 1}], "hole3": "create_minion", "hole0": "DalaranMage", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 1, "hole0": "Dalaran Mage"}], "hole1": "MinionCard"}, "score": -8.92978234603526, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n"}, {"score_history": [-1.9073486328125e-05, -2.6702880859375e-05, -0.0026144878938794136, -1.3470558769768104e-05, 0.0, -2.24970281124115e-05, -2.288818359375e-05, -4.768370445162873e-07, 0.0, -0.000667572021484375, -2.09808349609375e-05, -2.622604142743512e-06, -3.409384953556582e-05, -2.0265579223632812e-06, 0.0, -0.00016199142555706203, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, 0.0, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -8.513304710388184, -1.9073486328125e-06, -0.00026702880859375, -0.0014362335205078125, -1.7404552636435255e-05, -1.311301275563892e-06, -5.471133772516623e-05, -1.728534698486328e-05, -0.022289391607046127, -5.91278076171875e-05, -0.0002918243408203125, -6.29425048828125e-05, -6.29425048828125e-05, -0.002343351487070322, -0.4090115427970886, -5.841255187988281e-06, -0.000492095947265625, -0.46979808807373047, -0.011217117309570312, -0.0015221824869513512, -0.0001610486360732466, -0.001239776611328125, -2.288818359375e-05, -0.0013604159466922283, -2.9444683605106547e-05, -1.7881377516459906e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.001056671142578125, 0.0, -0.004902005195617676, -4.0531158447265625e-06, -1.9073486328125e-06], "choice_history": [97, 283, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "1", "<EOS>", "4", "<EOS>", "Attack", "<EOS>", 346, 88, 325, "Is", "Spell", "<EOS>", 346, 60, 238, "Give", "<EOS>", 21, 174, "Change", "Attack", "<EOS>", 346, 52, 179, "1", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole4": [{"hole3": "SelfSelector", "hole2": [{"n": 1, "_type": "Num"}], "_type": "Template38", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole0": "Give"}], "hole3": [{"_type": "Template79", "hole0": "IsSpell"}], "hole0": 1, "_type": "Template36", "hole2": "Attack", "hole1": 4}, "_type": "Return"}], "hole3": "create_minion", "hole0": "DalaranMage", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 3, "hole0": "Dalaran Mage"}], "hole1": "MinionCard"}, "score": -9.444724125184507, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Attack(IsSpell()), ActionTag(\n            Give(ChangeAttack(1)), SelfSelector()))])\n"}, {"score_history": [-1.9073486328125e-05, -2.6702880859375e-05, -0.0026144878938794136, -1.3470558769768104e-05, 0.0, -2.24970281124115e-05, -2.288818359375e-05, -4.768370445162873e-07, 0.0, -0.000667572021484375, -2.09808349609375e-05, -2.622604142743512e-06, -3.409384953556582e-05, -2.0265579223632812e-06, 0.0, -0.00016199142555706203, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, 0.0, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -0.000347137451171875, -1.1444091796875e-05, -7.987022399902344e-06, -6.318072337307967e-06, -1.0728698725870345e-05, 0.0, -6.544215679168701, 0.0, -0.0070552825927734375, -0.011628150939941406, -0.18239879608154297, -4.1961669921875e-05, -1.33514404296875e-05, -0.24193954467773438, -0.0001010894775390625, -0.023607613518834114, -1.1444091796875e-05, -0.01862812042236328, -0.0007991790771484375, -2.9685187339782715, -2.419927841401659e-05, 0.0], "choice_history": [97, 283, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 37, 321, "Buff", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "SelfSelector"}], "hole0": "Buff"}, "hole2": "auras", "_type": "Template50", "hole1": 4, "hole0": 1}], "hole3": "create_minion", "hole0": "DalaranMage", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 3, "hole0": "Dalaran Mage"}], "hole1": "MinionCard"}, "score": -10.003046217813448, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Buff(ChangeAttack(1), SelfSelector())])\n"}, {"score_history": [-1.9073486328125e-05, -2.6702880859375e-05, -0.0026144878938794136, -1.3470558769768104e-05, 0.0, -2.24970281124115e-05, -2.288818359375e-05, -4.768370445162873e-07, 0.0, -0.000667572021484375, -2.09808349609375e-05, -2.622604142743512e-06, -3.409384953556582e-05, -2.0265579223632812e-06, 0.0, -0.00016199142555706203, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, 0.0, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -10.77453327178955, -0.007175445556640625, -0.00010418384772492573, -2.3841855067985307e-07, -1.1682499462040141e-05, 0.0], "choice_history": [97, 283, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 4, "hole0": 1}], "hole3": "create_minion", "hole0": "DalaranMage", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 3, "hole0": "Dalaran Mage"}], "hole1": "MinionCard"}, "score": -10.785504278173534, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4)\n"}]}
{"index": 24, "beams": [{"score_history": [-0.00042724609375, -5.14984130859375e-05, -3.814697265625e-06, -0.0007190704345703125, -5.53131103515625e-05, -1.2040129149681889e-05, -5.006777428206988e-06, -0.0006505518686026335, -0.00014495849609375, -1.9073486328125e-06, -1.71661376953125e-05, -0.00014467502478510141, -5.7458873925497755e-05, -3.099440846199286e-06, -7.62939453125e-05, -0.0019855499267578125, -0.0001583099365234375, -1.7285317881032825e-05, -0.0010723269078880548, -2.062306521111168e-05, -1.9073486328125e-06, -6.818535621277988e-05, 0.0, -0.0006812810897827148, -1.9073486328125e-06, -0.011319160461425781, -0.010229110717773438, -7.82012939453125e-05, -7.62939453125e-06, -0.0001087188720703125, 0.0, -8.58306884765625e-05, 0.0, -1.33514404296875e-05, 0.0, -0.08383655548095703, 0.0, -3.814697265625e-06, -0.0019664764404296875, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -8.58306884765625e-05, 0.0, -0.0032682418823242188, 0.0, -2.300739288330078e-05, 0.0, -0.0293656587600708, 0.0], "choice_history": [96, 173, 358, 105, 152, "Divine", "Spirit", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PRIEST", "_type": "Template2", "hole1": 2, "hole0": "Divine Spirit"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "health"}], "_type": "Template3", "hole1": "increase_health", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "DivineSpirit"}], "_type": "Module"}, "score": -0.14678432408913977, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n"}, {"score_history": [-0.00042724609375, -5.14984130859375e-05, -3.814697265625e-06, -0.0007190704345703125, -5.53131103515625e-05, -1.2040129149681889e-05, -5.006777428206988e-06, -0.0006505518686026335, -0.00014495849609375, -1.9073486328125e-06, -1.71661376953125e-05, -0.00014467502478510141, -5.7458873925497755e-05, -3.099440846199286e-06, -7.62939453125e-05, -0.0019855499267578125, -0.0001583099365234375, -1.7285317881032825e-05, -0.0010723269078880548, -2.062306521111168e-05, -1.9073486328125e-06, -6.818535621277988e-05, 0.0, -0.0006812810897827148, -1.9073486328125e-06, -0.011319160461425781, -0.010229110717773438, -7.82012939453125e-05, -7.62939453125e-06, -0.0001087188720703125, 0.0, -8.58306884765625e-05, 0.0, -1.33514404296875e-05, 0.0, -2.732485771179199, -1.71661376953125e-05, -3.814697265625e-06, -0.0015277862548828125, -1.1444091796875e-05, -5.84111076022964e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Divine", "Spirit", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 346, 52, 179, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PRIEST", "_type": "Template2", "hole1": 2, "hole0": "Divine Spirit"}, {"hole2": [{"n": 2, "_type": "Num"}], "_type": "Template3", "hole1": "set_health_to", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "DivineSpirit"}], "_type": "Module"}, "score": -2.762323873426112, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(2)\n"}, {"score_history": [-0.00042724609375, -5.14984130859375e-05, -3.814697265625e-06, -0.0007190704345703125, -5.53131103515625e-05, -1.2040129149681889e-05, -5.006777428206988e-06, -0.0006505518686026335, -0.00014495849609375, -1.9073486328125e-06, -1.71661376953125e-05, -0.00014467502478510141, -5.7458873925497755e-05, -3.099440846199286e-06, -7.62939453125e-05, -0.0019855499267578125, -0.0001583099365234375, -1.7285317881032825e-05, -0.0010723269078880548, -2.062306521111168e-05, -1.9073486328125e-06, -6.818535621277988e-05, 0.0, -0.0006812810897827148, -1.9073486328125e-06, -0.011319160461425781, -0.010229110717773438, -7.82012939453125e-05, -7.62939453125e-06, -0.0001087188720703125, 0.0, -8.58306884765625e-05, 0.0, -1.33514404296875e-05, 0.0, -0.08383655548095703, 0.0, -3.814697265625e-06, -0.0019664764404296875, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -8.58306884765625e-05, 0.0, -0.0032682418823242188, 0.0, -2.300739288330078e-05, 0.0, -5.153994560241699, 0.0], "choice_history": [96, 173, 358, 105, 152, "Divine", "Spirit", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PRIEST", "_type": "Template2", "hole1": 2, "hole0": "Divine Spirit"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "taunt"}], "_type": "Template3", "hole1": "increase_health", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "DivineSpirit"}], "_type": "Module"}, "score": -5.271413225570768, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.taunt)\n"}, {"score_history": [-0.00042724609375, -5.14984130859375e-05, -3.814697265625e-06, -0.0007190704345703125, -5.53131103515625e-05, -1.2040129149681889e-05, -5.006777428206988e-06, -0.0006505518686026335, -0.00014495849609375, -1.9073486328125e-06, -1.71661376953125e-05, -0.00014467502478510141, -5.7458873925497755e-05, -3.099440846199286e-06, -7.62939453125e-05, -0.0019855499267578125, -0.0001583099365234375, -1.7285317881032825e-05, -0.0010723269078880548, -2.062306521111168e-05, -1.9073486328125e-06, -6.818535621277988e-05, 0.0, -0.0006812810897827148, -1.9073486328125e-06, -0.011319160461425781, -4.754711151123047, -0.000186920166015625, 0.0, -3.0517578125e-05, 0.0, -0.0007877349853515625, 0.0, -2.288818359375e-05, 0.0, -0.557551383972168, 0.0], "choice_history": [96, 173, 358, 105, 152, "Divine", "Spirit", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 126, 224, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PRIEST", "_type": "Template2", "hole1": 2, "hole0": "Divine Spirit"}, {"_type": "Template3", "hole1": "increase_health", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "DivineSpirit"}], "_type": "Module"}, "score": -5.330987233558744, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health()\n"}, {"score_history": [-0.00042724609375, -5.14984130859375e-05, -3.814697265625e-06, -0.0007190704345703125, -5.53131103515625e-05, -1.2040129149681889e-05, -5.006777428206988e-06, -0.0006505518686026335, -0.00014495849609375, -1.9073486328125e-06, -1.71661376953125e-05, -0.00014467502478510141, -5.7458873925497755e-05, -3.099440846199286e-06, -7.62939453125e-05, -0.0019855499267578125, -0.0001583099365234375, -1.7285317881032825e-05, -0.0010723269078880548, -2.062306521111168e-05, -1.9073486328125e-06, -6.818535621277988e-05, 0.0, -0.0006812810897827148, -1.9073486328125e-06, -0.011319160461425781, -0.010229110717773438, -7.82012939453125e-05, -7.62939453125e-06, -0.0001087188720703125, 0.0, -8.58306884765625e-05, 0.0, -1.33514404296875e-05, 0.0, -0.08383655548095703, 0.0, -3.814697265625e-06, -0.0019664764404296875, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -8.58306884765625e-05, 0.0, -0.0032682418823242188, 0.0, -2.300739288330078e-05, 0.0, -5.289485931396484, 0.0], "choice_history": [96, 173, 358, 105, 152, "Divine", "Spirit", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PRIEST", "_type": "Template2", "hole1": 2, "hole0": "Divine Spirit"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "card"}], "_type": "Template3", "hole1": "increase_health", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "DivineSpirit"}], "_type": "Module"}, "score": -5.406904596725553, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.card)\n"}, {"score_history": [-0.00042724609375, -5.14984130859375e-05, -3.814697265625e-06, -0.0007190704345703125, -5.53131103515625e-05, -1.2040129149681889e-05, -5.006777428206988e-06, -0.0006505518686026335, -0.00014495849609375, -1.9073486328125e-06, -1.71661376953125e-05, -0.00014467502478510141, -5.7458873925497755e-05, -3.099440846199286e-06, -7.62939453125e-05, -0.0019855499267578125, -0.0001583099365234375, -1.7285317881032825e-05, -0.0010723269078880548, -2.062306521111168e-05, -1.9073486328125e-06, -6.818535621277988e-05, 0.0, -0.0006812810897827148, -1.9073486328125e-06, -0.011319160461425781, -0.010229110717773438, -7.82012939453125e-05, -7.62939453125e-06, -0.0001087188720703125, 0.0, -8.58306884765625e-05, 0.0, -1.33514404296875e-05, 0.0, -0.08383655548095703, 0.0, -3.814697265625e-06, -0.0019664764404296875, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -8.58306884765625e-05, 0.0, -0.0032682418823242188, 0.0, -2.300739288330078e-05, 0.0, -5.481622219085693, 0.0], "choice_history": [96, 173, 358, 105, 152, "Divine", "Spirit", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PRIEST", "_type": "Template2", "hole1": 2, "hole0": "Divine Spirit"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "divine_shield"}], "_type": "Template3", "hole1": "increase_health", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "DivineSpirit"}], "_type": "Module"}, "score": -5.599040884414762, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.divine_shield)\n"}, {"score_history": [-0.00042724609375, -5.14984130859375e-05, -3.814697265625e-06, -0.0007190704345703125, -5.53131103515625e-05, -1.2040129149681889e-05, -5.006777428206988e-06, -0.0006505518686026335, -0.00014495849609375, -1.9073486328125e-06, -1.71661376953125e-05, -0.00014467502478510141, -5.7458873925497755e-05, -3.099440846199286e-06, -7.62939453125e-05, -0.0019855499267578125, -0.0001583099365234375, -1.7285317881032825e-05, -0.0010723269078880548, -2.062306521111168e-05, -1.9073486328125e-06, -6.818535621277988e-05, 0.0, -0.0006812810897827148, -1.9073486328125e-06, -0.011319160461425781, -0.010229110717773438, -7.82012939453125e-05, -7.62939453125e-06, -0.0001087188720703125, 0.0, -8.58306884765625e-05, 0.0, -1.33514404296875e-05, 0.0, -5.361566066741943, 0.0, -0.000102996826171875, -0.25731658935546875, -5.7220458984375e-06, -0.0009561597835272551, -1.1920928244535389e-07], "choice_history": [96, 173, 358, 105, 152, "Divine", "Spirit", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "bounce", "<EOS>", 346, 52, 179, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PRIEST", "_type": "Template2", "hole1": 2, "hole0": "Divine Spirit"}, {"hole2": [{"n": 2, "_type": "Num"}], "_type": "Template3", "hole1": "bounce", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "DivineSpirit"}], "_type": "Module"}, "score": -5.648167133919962, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.bounce(2)\n"}, {"score_history": [-0.00042724609375, -5.14984130859375e-05, -3.814697265625e-06, -0.0007190704345703125, -5.53131103515625e-05, -1.2040129149681889e-05, -5.006777428206988e-06, -0.0006505518686026335, -0.00014495849609375, -1.9073486328125e-06, -1.71661376953125e-05, -0.00014467502478510141, -5.7458873925497755e-05, -3.099440846199286e-06, -7.62939453125e-05, -0.0019855499267578125, -0.0001583099365234375, -1.7285317881032825e-05, -0.0010723269078880548, -2.062306521111168e-05, -1.9073486328125e-06, -6.818535621277988e-05, 0.0, -0.0006812810897827148, -1.9073486328125e-06, -0.011319160461425781, -0.010229110717773438, -7.82012939453125e-05, -7.62939453125e-06, -0.0001087188720703125, 0.0, -8.58306884765625e-05, 0.0, -1.33514404296875e-05, 0.0, -0.08383655548095703, 0.0, -3.814697265625e-06, -0.0019664764404296875, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -8.58306884765625e-05, 0.0, -0.0032682418823242188, 0.0, -2.300739288330078e-05, 0.0, -5.538172245025635, 0.0], "choice_history": [96, 173, 358, 105, 152, "Divine", "Spirit", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PRIEST", "_type": "Template2", "hole1": 2, "hole0": "Divine Spirit"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}], "_type": "Template3", "hole1": "increase_health", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "DivineSpirit"}], "_type": "Module"}, "score": -5.655590910354704, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.calculate_max_health)\n"}, {"score_history": [-0.00042724609375, -5.14984130859375e-05, -3.814697265625e-06, -0.0007190704345703125, -5.53131103515625e-05, -1.2040129149681889e-05, -5.006777428206988e-06, -0.0006505518686026335, -0.00014495849609375, -1.9073486328125e-06, -1.71661376953125e-05, -0.00014467502478510141, -5.7458873925497755e-05, -3.099440846199286e-06, -7.62939453125e-05, -0.0019855499267578125, -0.0001583099365234375, -1.7285317881032825e-05, -0.0010723269078880548, -2.062306521111168e-05, -1.9073486328125e-06, -6.818535621277988e-05, 0.0, -0.0006812810897827148, -1.9073486328125e-06, -0.011319160461425781, -4.754711151123047, -0.000186920166015625, 0.0, -3.0517578125e-05, 0.0, -0.0007877349853515625, 0.0, -2.288818359375e-05, 0.0, -1.0338115692138672, 0.0], "choice_history": [96, 173, 358, 105, 152, "Divine", "Spirit", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 126, 224, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "bounce", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PRIEST", "_type": "Template2", "hole1": 2, "hole0": "Divine Spirit"}, {"_type": "Template3", "hole1": "bounce", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "DivineSpirit"}], "_type": "Module"}, "score": -5.8072474188004435, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.bounce()\n"}, {"score_history": [-0.00042724609375, -5.14984130859375e-05, -3.814697265625e-06, -0.0007190704345703125, -5.53131103515625e-05, -1.2040129149681889e-05, -5.006777428206988e-06, -0.0006505518686026335, -0.00014495849609375, -1.9073486328125e-06, -1.71661376953125e-05, -0.00014467502478510141, -5.7458873925497755e-05, -3.099440846199286e-06, -7.62939453125e-05, -0.0019855499267578125, -0.0001583099365234375, -1.7285317881032825e-05, -0.0010723269078880548, -2.062306521111168e-05, -1.9073486328125e-06, -6.818535621277988e-05, 0.0, -0.0006812810897827148, -1.9073486328125e-06, -5.466865539550781, -0.005587577819824219, -0.0007839202880859375, -7.62939453125e-06, -4.3869011278729886e-05, -5.7220458984375e-06, -0.001010894775390625, -1.52587890625e-05, -0.0007762908935546875, -5.91278076171875e-05, -3.814697265625e-05, -0.0010732412338256836, -1.1920928244535389e-07, -0.0009441375732421875, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.0002422332763671875, -1.1444091796875e-05, -0.0010051727294921875, 0.0, -0.0006237030029296875, 0.0, -3.24249267578125e-05, 0.0, -0.5741863250732422, -1.9073486328125e-06, -0.00371551513671875, -0.013372421264648438, -3.814697265625e-06, -0.01362576149404049, -1.9073486328125e-06, -0.001010894775390625, -1.9073486328125e-06, -0.0002727508544921875, 0.0, -0.33014678955078125, 0.0, -1.52587890625e-05, 0.0, -0.022859573364257812, -1.9073486328125e-06, -0.0030040740966796875, -0.05014610290527344, -1.9073486328125e-06, -0.02113986574113369, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "Divine", "Spirit", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 52, 179, "2", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 52, 179, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PRIEST", "_type": "Template2", "hole1": 2, "hole0": "Divine Spirit"}, {"hole4": "increase_health", "hole6": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole3": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole0": {"_type": "Template79", "hole0": "super"}, "_type": "Template7", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole7": "increase_health", "hole8": [{"n": 2, "_type": "Num"}], "hole5": [{"n": 2, "_type": "Num"}], "hole1": "use"}], "_type": "ClassDef", "name": "DivineSpirit"}], "_type": "Module"}, "score": -6.519073650123794, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(2)\n        self.target.increase_health(2)\n"}, {"score_history": [-0.00042724609375, -5.14984130859375e-05, -3.814697265625e-06, -0.0007190704345703125, -5.53131103515625e-05, -1.2040129149681889e-05, -5.006777428206988e-06, -0.0006505518686026335, -0.00014495849609375, -1.9073486328125e-06, -1.71661376953125e-05, -0.00014467502478510141, -5.7458873925497755e-05, -3.099440846199286e-06, -7.62939453125e-05, -0.0019855499267578125, -0.0001583099365234375, -1.7285317881032825e-05, -0.0010723269078880548, -2.062306521111168e-05, -1.9073486328125e-06, -6.818535621277988e-05, 0.0, -0.0006812810897827148, -1.9073486328125e-06, -0.011319160461425781, -0.010229110717773438, -7.82012939453125e-05, -7.62939453125e-06, -0.0001087188720703125, 0.0, -8.58306884765625e-05, 0.0, -1.33514404296875e-05, 0.0, -6.671942710876465, 0.0, -3.814697265625e-06, -0.09981346130371094, 0.0, -0.007881402969360352, -2.384185791015625e-06], "choice_history": [96, 173, 358, 105, 152, "Divine", "Spirit", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PRIEST", "_type": "Template2", "hole1": 2, "hole0": "Divine Spirit"}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "DivineSpirit"}], "_type": "Module"}, "score": -6.807863253990263, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score_history": [-0.00042724609375, -5.14984130859375e-05, -3.814697265625e-06, -0.0007190704345703125, -5.53131103515625e-05, -1.2040129149681889e-05, -5.006777428206988e-06, -0.0006505518686026335, -0.00014495849609375, -1.9073486328125e-06, -1.71661376953125e-05, -0.00014467502478510141, -5.7458873925497755e-05, -3.099440846199286e-06, -7.62939453125e-05, -0.0019855499267578125, -0.0001583099365234375, -1.7285317881032825e-05, -0.0010723269078880548, -2.062306521111168e-05, -1.9073486328125e-06, -6.818535621277988e-05, 0.0, -0.0006812810897827148, -1.9073486328125e-06, -5.117731094360352, -4.38690185546875e-05, -1.1563301086425781e-05, 0.0, -0.0001068115234375, -0.000244140625, -0.00045013427734375, -0.000286102294921875, -0.0008087158203125, -1.1920928244535389e-07, -0.0001811981201171875, -0.00013446807861328125, 0.0, -7.05718994140625e-05, -0.000202178955078125, -1.1920928244535389e-07, -0.5245742797851562, -0.00058746337890625, -0.0004482269287109375, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -3.933906555175781e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001087188720703125, -2.3841855067985307e-07, -0.005833625793457031, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.020659327507019043, -3.147125244140625e-05, -0.8740015029907227, -0.0002231597900390625, -3.24249267578125e-05, -7.2479248046875e-05, -0.0005893707275390625, 0.0, -0.023181915283203125, -1.1444091796875e-05, -0.01808464527130127, 0.0, -0.6052676439285278, -5.7220458984375e-06, -0.6133497953414917, -1.9073486328125e-05, -1.9073486328125e-05, -0.0045070648193359375, 0.0, -0.32984495162963867, -7.748603820800781e-06, -0.0023708343505859375, -7.43865966796875e-05, -0.27373790740966797, -7.62939453125e-06, -0.06076812744140625, 0.0, -0.08310604095458984, 0.0, -0.014624595642089844, 0.0, -0.19659900665283203, -0.0001964569091796875, -0.002880096435546875, 0.0, -0.04507637023925781, 0.0, -0.0014390945434570312, 0.0, -3.4332275390625e-05, 0.0, -0.2331523895263672, 0.0, -0.0009403228759765625, -0.005188941955566406, 0.0, -1.262163519859314, 0.0], "choice_history": [96, 173, 358, 105, 152, "Divine", "Spirit", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", "copy", "<EOS>", 346, 50, 174, "minions", "<EOS>", 106, 155, 36, 317, 21, 174, "game", "<EOS>", "check_delayed", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 346, 50, 174, "temp_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PRIEST", "_type": "Template2", "hole1": 2, "hole0": "Divine Spirit"}, {"body": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "_type": "Attribute", "attr": "copy"}, "args": [{"_type": "Name", "id": "minions"}]}, "_type": "Assign"}, {"value": {"_type": "Template76", "hole1": "check_delayed", "hole0": {"_type": "Name", "id": "game"}}, "_type": "Expr"}, {"hole2": [{"_type": "Name", "id": "temp_attack"}], "_type": "Template77", "hole1": "set_health_to", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "use"}], "_type": "ClassDef", "name": "DivineSpirit"}], "_type": "Module"}, "score": -10.330519694725083, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = game.random_choice.copy(minions)\n        game.check_delayed()\n        self.target.set_health_to(temp_attack)\n"}, {"score_history": [-0.00042724609375, -5.14984130859375e-05, -3.814697265625e-06, -9.290592193603516, -2.7569541931152344, -0.31046032905578613, -0.05454203486442566, -0.0021448053885251284, -8.33270896691829e-05, -1.5616416931152344e-05, -0.2898961305618286, 0.0], "choice_history": [96, 173, 358, 127, 230, "Spirit", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>"], "model_output": {"body": [{"hole2": "PRIEST", "_type": "Template31", "hole1": 2, "hole0": "SpiritSpirit"}], "_type": "Module"}, "score": -12.705171189300017, "inferred_code": "super().__init__('SpiritSpirit', 2, CHARACTER_CLASS.PRIEST, CARD_RARITY.COMMON)\n"}, {"score_history": [-0.00042724609375, -5.14984130859375e-05, -3.814697265625e-06, -9.290592193603516, -2.7569541931152344, -1.3210957050323486, -2.9563663701992482e-05, -8.368329872610047e-05, -5.066384619567543e-05, -9.775161743164062e-06, -0.15164506435394287, 0.0], "choice_history": [96, 173, 358, 127, 230, "Divine", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>"], "model_output": {"body": [{"hole2": "PRIEST", "_type": "Template31", "hole1": 2, "hole0": "DivineSpirit"}], "_type": "Module"}, "score": -13.52094340127951, "inferred_code": "super().__init__('DivineSpirit', 2, CHARACTER_CLASS.PRIEST, CARD_RARITY.COMMON)\n"}, {"score_history": [-0.00042724609375, -5.14984130859375e-05, -3.814697265625e-06, -15.718109130859375], "choice_history": [96, 173, 358, 104], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score": -15.718591690063477, "inferred_code": "break\n"}]}
{"index": 25, "beams": [{"score_history": [-0.0001316070556640625, -1.71661376953125e-05, -4.863638605456799e-05, -2.765654426184483e-05, -5.245195097813848e-06, -3.814697265625e-06, -1.5735626220703125e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -0.0006647109985351562, -0.07346057891845703, -5.960462772236497e-07, -8.070378680713475e-05, -4.8279762268066406e-05, -7.2479248046875e-05, -7.465248927474022e-06, -1.9073486328125e-06, -0.001064300537109375, -1.1920928244535389e-07, -0.0015947894426062703, -0.002766852267086506, -0.000156402587890625, -0.000133514404296875, -2.09808349609375e-05, -0.0009803751017898321, -0.002421468496322632, -7.057183393044397e-05, -0.0001040696952259168, -1.7881377516459906e-06, -1.4424220353248529e-05, -0.00017856399063020945, -1.9073486328125e-06, -3.6358804209157825e-05, 0.0, -1.1444091796875e-05, -0.00012969970703125, -5.7220458984375e-05, -1.5497207641601562e-05, -4.410734163684538e-06, -1.9073486328125e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Summon", "<EOS>", 346, 88, 325, "Mechanical", "Dragonling", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "DragonlingMechanic", "_type": "Template5", "hole2": [{"hole4": [{"_type": "Template79", "hole0": "MechanicalDragonling"}], "hole3": "Summon", "hole0": "Dragonling Mechanic", "_type": "Template15", "hole2": "COMMON", "hole5": "PlayerSelector", "hole1": 4}], "hole1": "MinionCard"}, "score": -0.08438591280587104, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score_history": [-0.0001316070556640625, -1.71661376953125e-05, -4.863638605456799e-05, -2.765654426184483e-05, -5.245195097813848e-06, -3.814697265625e-06, -1.5735626220703125e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -0.0006647109985351562, -5.161586284637451, -1.7165990357170813e-05, -0.0017965561710298061, -6.973743438720703e-05, -3.0517578125e-05, -1.2631528079509735e-05, 0.0, -0.28150367736816406, -2.3841855067985307e-07, -0.0040991646237671375, -0.0013573489850386977, -0.0025756272953003645, -0.0003632839070633054, -0.0019373887917026877, 0.0, -4.768325015902519e-05, 0.0, -5.7220458984375e-06, -0.00424957275390625, -4.57763671875e-05, -2.3126602172851562e-05, -9.775113539944869e-06, -1.52587890625e-05, -3.576278118089249e-07], "choice_history": [97, 283, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 201, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Summon", "<EOS>", "Summon", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "DragonlingMechanic", "_type": "Template5", "hole2": [{"hole3": "Summon", "hole0": "Dragonling Mechanic", "_type": "Template15", "hole2": "COMMON", "hole5": "Summon", "hole1": 4}], "hole1": "MinionCard"}, "score": -5.460676845917902, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(), Summon()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score_history": [-0.0001316070556640625, -1.71661376953125e-05, -4.863638605456799e-05, -2.765654426184483e-05, -5.245195097813848e-06, -3.814697265625e-06, -1.5735626220703125e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -0.0006647109985351562, -0.07346057891845703, -5.960462772236497e-07, -8.070378680713475e-05, -4.8279762268066406e-05, -7.2479248046875e-05, -7.465248927474022e-06, -1.9073486328125e-06, -0.001064300537109375, -1.1920928244535389e-07, -0.0015947894426062703, -0.002766852267086506, -0.000156402587890625, -0.000133514404296875, -2.09808349609375e-05, -0.0009803751017898321, -6.3602471351623535, -3.504704363876954e-05, -0.0011733693536370993, -5.841255187988281e-06, -1.7165990357170813e-05, -0.00015889594214968383, -1.9073486328125e-06, -3.278248550486751e-05, 0.0, -9.5367431640625e-06, -0.0002040863037109375, -5.91278076171875e-05, -1.5497207641601562e-05, -5.006777428206988e-06, -1.9073486328125e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Summon", "<EOS>", 346, 88, 325, "Mechanical", "Mechanic", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "DragonlingMechanic", "_type": "Template5", "hole2": [{"hole4": [{"_type": "Template79", "hole0": "MechanicalMechanic"}], "hole3": "Summon", "hole0": "Dragonling Mechanic", "_type": "Template15", "hole2": "COMMON", "hole5": "PlayerSelector", "hole1": 4}], "hole1": "MinionCard"}, "score": -6.443303887500221, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalMechanic()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score_history": [-0.0001316070556640625, -1.71661376953125e-05, -4.863638605456799e-05, -2.765654426184483e-05, -5.245195097813848e-06, -3.814697265625e-06, -1.5735626220703125e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -0.0006647109985351562, -5.2242913246154785, -2.3841855067985307e-07, -0.00016724903252907097, -7.271766662597656e-05, -0.000244140625, -4.397309385240078e-05, -1.9073486328125e-06, -0.004108428955078125, -1.1920928244535389e-07, -1.1996606588363647, -7.462302164640278e-05, -5.14984130859375e-05, -0.0008716583251953125, -5.91278076171875e-05, -0.007821090519428253, -0.001880370662547648, -2.6822088329936378e-05, -0.00014114378427620977, -4.52994936495088e-06, -7.152555099310121e-07, -3.814697265625e-05, -0.02902984619140625, -7.62939453125e-06, -0.04011446237564087, -0.004441282711923122, -9.894371032714844e-06, -0.0028723280411213636, -1.9073486328125e-06, -8.58306884765625e-06, 0.0, -3.814697265625e-06, -0.0020599365234375, -8.58306884765625e-05, -2.5272369384765625e-05, -3.814689989667386e-06, -2.288818359375e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 208, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Summon", "<EOS>", 346, 88, 325, "Mechanical", "Dragonling", "<EOS>", "Player", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "DragonlingMechanic", "_type": "Template5", "hole2": [{"hole4": [{"_type": "Template79", "hole0": "MechanicalDragonling"}], "hole3": "Summon", "hole0": "Dragonling Mechanic", "_type": "Template15", "hole2": "COMMON", "hole8": [{"_type": "Template79", "hole0": "EnemyPlayer"}], "hole5": "PlayerSelector", "hole1": 4}], "hole1": "MinionCard"}, "score": -6.519178045104766, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector(), EnemyPlayer()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score_history": [-0.0001316070556640625, -1.71661376953125e-05, -4.863638605456799e-05, -2.765654426184483e-05, -5.245195097813848e-06, -3.814697265625e-06, -1.5735626220703125e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -0.0006647109985351562, -5.161586284637451, -1.7165990357170813e-05, -0.0017965561710298061, -6.973743438720703e-05, -3.0517578125e-05, -1.2631528079509735e-05, 0.0, -1.4271421432495117, -1.83581723831594e-05, -0.0006250992882996798, -0.002005591057240963, -0.004007660783827305, -0.0015414986992254853, -0.0025228438898921013, 0.0, -8.022609836189076e-05, 0.0, -7.62939453125e-06, -0.002017974853515625, -4.9591064453125e-05, -1.9431114196777344e-05, -9.417489309271332e-06, -1.1444091796875e-05, -3.576278118089249e-07], "choice_history": [97, 283, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 201, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "FREE", "<EOS>", "Summon", "<EOS>", "Summon", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "DragonlingMechanic", "_type": "Template5", "hole2": [{"hole3": "Summon", "hole0": "Dragonling Mechanic", "_type": "Template15", "hole2": "FREE", "hole5": "Summon", "hole1": 4}], "hole1": "MinionCard"}, "score": -6.604502110852934, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, battlecry=Battlecry(Summon(), Summon()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score_history": [-0.0001316070556640625, -1.71661376953125e-05, -4.863638605456799e-05, -2.765654426184483e-05, -5.245195097813848e-06, -3.814697265625e-06, -1.5735626220703125e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -0.0006647109985351562, -0.07346057891845703, -5.960462772236497e-07, -8.070378680713475e-05, -4.8279762268066406e-05, -7.2479248046875e-05, -7.465248927474022e-06, -1.9073486328125e-06, -0.001064300537109375, -1.1920928244535389e-07, -0.0015947894426062703, -6.2525458335876465, -0.3360380530357361, -0.0001430511474609375, -0.019420623779296875, -4.1961669921875e-05, -0.0011425865814089775, -0.003737445455044508, -1.1801719665527344e-05, -0.00015473365783691406, -2.0265558760002023e-06, -1.549708758830093e-05, -0.00017069620662368834, -1.9073486328125e-06, -3.874296817230061e-05, 0.0, -1.1444091796875e-05, -0.0001220703125, -6.67572021484375e-05, -1.7523765563964844e-05, -4.6491513785440475e-06, -1.9073486328125e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Summon", "Mechanic", "<EOS>", 346, 88, 325, "Mechanical", "Dragonling", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "DragonlingMechanic", "_type": "Template5", "hole2": [{"hole4": [{"_type": "Template79", "hole0": "MechanicalDragonling"}], "hole3": "SummonMechanic", "hole0": "Dragonling Mechanic", "_type": "Template15", "hole2": "COMMON", "hole5": "PlayerSelector", "hole1": 4}], "hole1": "MinionCard"}, "score": -6.6909677682074715, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(SummonMechanic(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score_history": [-0.0001316070556640625, -1.71661376953125e-05, -4.863638605456799e-05, -2.765654426184483e-05, -5.245195097813848e-06, -3.814697265625e-06, -1.5735626220703125e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -0.0006647109985351562, -6.211861610412598, -8.22540732769994e-06, -0.0012572582345455885, -0.0007950067520141602, -0.38068389892578125, -4.38690185546875e-05, -4.2319297790527344e-05, -5.965950549580157e-06, -1.9073486328125e-06, -0.0034046173095703125, -6.675719760096399e-06, -0.08182360976934433, -0.0017656356794759631, -0.10112059861421585, -0.0005351364379748702, -0.00353240966796875, -0.000213623046875, -7.62939453125e-06, -0.01710456609725952, -0.0008854852640070021, -0.000530170917045325, -0.00020897344802506268, -1.9073486328125e-06, -1.0728831512096804e-05, 0.0, -5.7220458984375e-06, -0.0005435943603515625, -0.0001049041748046875, -1.8358230590820312e-05, -4.0531076592742465e-06, -2.288818359375e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 204, "Dragonling", " ", "Mechanic", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Summon", "<EOS>", "Summon", "<EOS>", 346, 88, 325, "Mechanical", "Dragonling", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "DragonlingMechanic", "_type": "Template5", "hole2": [{"hole6": [{"_type": "Template79", "hole0": "MechanicalDragonling"}], "hole3": "Summon", "hole0": "Dragonling Mechanic Mechanic", "_type": "Template15", "hole2": "COMMON", "hole5": "Summon", "hole1": 4}], "hole1": "MinionCard"}, "score": -6.80748141884532, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic Mechanic', 4, CHARACTER_CLASS\n            .ALL, CARD_RARITY.COMMON, battlecry=Battlecry(Summon(), Summon(\n            MechanicalDragonling())))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score_history": [-0.0001316070556640625, -1.71661376953125e-05, -4.863638605456799e-05, -2.765654426184483e-05, -5.245195097813848e-06, -3.814697265625e-06, -1.5735626220703125e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -0.0006647109985351562, -5.321050643920898, -3.576277322281385e-06, -3.528594970703125e-05, -0.0002504586591385305, -0.0015946626663208008, -1.4085671864449978e-05, 0.0, -1.0873908996582031, -1.9073486328125e-06, -0.3633761405944824, -0.00035005839890800416, -0.00305938720703125, -0.007950782775878906, -5.14984130859375e-05, -0.0022469456307590008, -0.0024025370366871357, -3.969655153923668e-05, -0.0023790597915649414, -2.503394853192731e-06, -6.318072337307967e-06, -1.1444091796875e-05, -0.00030994415283203125, -1.1444091796875e-05, -0.007203487679362297, -0.002336720936000347, -1.9431114196777344e-05, -0.0027604459319263697, -1.9073486328125e-06, -1.5139577953959815e-05, 0.0, -5.7220458984375e-06, -0.0064830780029296875, -0.0001697540283203125, -2.7060508728027344e-05, -4.529942543740617e-06, -2.288818359375e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 210, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "FREE", "<EOS>", "Summon", "<EOS>", 346, 88, 325, "Mechanical", "Dragonling", "<EOS>", "Player", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "DragonlingMechanic", "_type": "Template5", "hole2": [{"hole4": [{"_type": "Template79", "hole0": "MechanicalDragonling"}], "hole6": [{"_type": "Template79", "hole0": "EnemyPlayer"}], "hole3": "Summon", "hole0": "Dragonling Mechanic", "_type": "Template15", "hole2": "FREE", "hole5": "PlayerSelector", "hole1": 4}], "hole1": "MinionCard"}, "score": -6.812519515504157, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score_history": [-0.0001316070556640625, -1.71661376953125e-05, -4.863638605456799e-05, -2.765654426184483e-05, -5.245195097813848e-06, -3.814697265625e-06, -1.5735626220703125e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -0.0006647109985351562, -7.018242835998535, -4.768370445162873e-07, -0.0004616150399670005, -0.00016736984252929688, -0.0022144317626953125, -2.274801954627037e-05, -1.52587890625e-05, -0.003131866455078125, -2.1457672119140625e-06, -0.018040703609585762, -0.0004953612806275487, -0.001373291015625, -0.06612205505371094, -1.33514404296875e-05, -0.10008971393108368, -0.0013314583338797092, -3.123283022432588e-05, -0.0016001773765310645, -0.0003288456064183265, -1.77621805050876e-05, -0.007239341735839844, -0.000156402587890625, 0.0, -0.03916478157043457, -4.172325134277344e-06, -1.52587890625e-05, 0.0, -0.048146359622478485, -0.0007319856085814536, -6.198883056640625e-06, -0.005365717224776745, -1.9073486328125e-06, -2.6464374968782067e-05, 0.0, -3.814697265625e-06, -0.0043430328369140625, -0.0001010894775390625, -2.1219253540039062e-05, -4.6491513785440475e-06, -1.52587890625e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Summon", "<EOS>", 346, 88, 325, "Mechanical", "Dragonling", "<EOS>", "Player", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "DragonlingMechanic", "_type": "Template5", "hole2": [{"hole4": [{"_type": "Template79", "hole0": "MechanicalDragonling"}], "hole3": "Summon", "hole0": "Dragonling Mechanic", "_type": "Template15", "hole2": "COMMON", "hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}], "hole5": "PlayerSelector", "hole1": 4}], "hole1": "MinionCard"}, "score": -7.319980425295277, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score_history": [-0.0001316070556640625, -1.71661376953125e-05, -4.863638605456799e-05, -2.765654426184483e-05, -5.245195097813848e-06, -3.814697265625e-06, -1.5735626220703125e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -0.0006647109985351562, -0.07346057891845703, -5.960462772236497e-07, -8.070378680713475e-05, -4.8279762268066406e-05, -7.2479248046875e-05, -7.465248927474022e-06, -1.9073486328125e-06, -0.001064300537109375, -1.1920928244535389e-07, -0.0015947894426062703, -0.002766852267086506, -0.000156402587890625, -0.000133514404296875, -2.09808349609375e-05, -7.0011372566223145, -0.4066235423088074, -2.6583669750834815e-05, -0.00010669231414794922, -4.29153169534402e-06, -7.390948667307384e-06, -0.0001801137550501153, -1.9073486328125e-06, -3.8266152841970325e-05, 0.0, -1.1444091796875e-05, -0.0001354217529296875, -5.91278076171875e-05, -1.5497207641601562e-05, -4.529942543740617e-06, -1.9073486328125e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Summon", "<EOS>", 346, 88, 325, "Dragonling", "Dragonling", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "DragonlingMechanic", "_type": "Template5", "hole2": [{"hole4": [{"_type": "Template79", "hole0": "DragonlingDragonling"}], "hole3": "Summon", "hole0": "Dragonling Mechanic", "_type": "Template15", "hole2": "COMMON", "hole5": "PlayerSelector", "hole1": 4}], "hole1": "MinionCard"}, "score": -7.488710178431845, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            DragonlingDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score_history": [-0.0001316070556640625, -1.71661376953125e-05, -4.863638605456799e-05, -2.765654426184483e-05, -5.245195097813848e-06, -3.814697265625e-06, -1.5735626220703125e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -0.0006647109985351562, -6.382607460021973, -4.768360213347478e-06, -0.0011072842171415687, -7.772445678710938e-05, -0.0002346038818359375, -6.432412192225456e-06, 0.0, -0.0042552947998046875, -4.053113570989808e-06, -0.7385090589523315, -0.0005289109540171921, -0.0008778568590059876, -0.00010668662434909493, -0.5299062728881836, -0.0013065338134765625, -1.9073486328125e-06, -0.039650239050388336, -1.0728796951298136e-05, -0.0001277923583984375, 0.0, -0.0010924338130280375, -8.082384738372639e-05, -1.0728830375228426e-06, -5.1140759751433507e-05, 0.0, -1.7523756469017826e-05, 0.0, -1.33514404296875e-05, -0.011285781860351562, -5.91278076171875e-05, -2.3365020751953125e-05, -5.722029527532868e-06, -1.1444091796875e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 202, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Summon", "<EOS>", "Summon", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "DragonlingMechanic", "_type": "Template5", "hole2": [{"hole3": "Summon", "hole0": "Dragonling Mechanic", "_type": "Template15", "hole2": "COMMON", "hole7": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": "Summon", "hole1": 4}], "hole1": "MinionCard"}, "score": -7.7128954660678275, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(), Summon(picker\n            =UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score_history": [-0.0001316070556640625, -1.71661376953125e-05, -4.863638605456799e-05, -2.765654426184483e-05, -5.245195097813848e-06, -3.814697265625e-06, -1.5735626220703125e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -0.0006647109985351562, -6.382607460021973, -4.768360213347478e-06, -0.0011072842171415687, -7.772445678710938e-05, -0.0002346038818359375, -6.432412192225456e-06, 0.0, -0.0042552947998046875, -4.053113570989808e-06, -0.6716093420982361, -0.0006805725861340761, -0.0039043426513671875, -0.00036542891757562757, -0.7055063247680664, -0.001293182373046875, -1.9073486328125e-06, -0.024797281250357628, -1.2874520507466514e-05, -6.866455078125e-05, 0.0, -0.0013666151789948344, -5.555148163693957e-05, -1.0728830375228426e-06, -5.340573261491954e-05, 0.0, -1.585482641530689e-05, 0.0, -1.33514404296875e-05, -0.0047473907470703125, -5.91278076171875e-05, -2.1576881408691406e-05, -4.6491513785440475e-06, -1.1444091796875e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 202, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Bounce", "<EOS>", "Summon", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "DragonlingMechanic", "_type": "Template5", "hole2": [{"hole3": "Bounce", "hole0": "Dragonling Mechanic", "_type": "Template15", "hole2": "COMMON", "hole7": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": "Summon", "hole1": 4}], "hole1": "MinionCard"}, "score": -7.803817652399054, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Bounce(), Summon(picker\n            =UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score_history": [-0.0001316070556640625, -1.71661376953125e-05, -4.863638605456799e-05, -2.765654426184483e-05, -5.245195097813848e-06, -3.814697265625e-06, -1.5735626220703125e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -0.0006647109985351562, -5.2242913246154785, -2.3841855067985307e-07, -0.00016724903252907097, -7.271766662597656e-05, -0.000244140625, -4.397309385240078e-05, -1.9073486328125e-06, -0.004108428955078125, -1.1920928244535389e-07, -0.4308475852012634, -0.00545738497748971, 0.0, -0.6042261123657227, -0.005442619323730469, -0.05656646937131882, -0.02813708782196045, -3.170933268847875e-05, -1.1444091796875e-05, -0.0011386871337890625, -9.5367431640625e-06, -0.09967850148677826, -3.576278118089249e-07, -0.002140043769031763, -0.00029468536376953125, -0.00024125739582814276, -0.0688023492693901, -2.622604142743512e-06, -0.3961903750896454, -2.2649765014648438e-06, 0.0, -5.91278076171875e-05, -0.21883583068847656, -0.02608966827392578, -2.86102294921875e-05, -7.62939453125e-06, -0.010981433093547821, -0.00407564640045166, -0.00010752252273960039, -4.57763671875e-05, -0.005358695983886719, -0.000865936279296875, -1.9073486328125e-05, -0.00012969970703125, -0.019561052322387695, -7.748596544843167e-06, -5.14984130859375e-05, -0.14204025268554688, -0.004670143127441406, -0.001343369483947754, -0.00022006021754350513, -1.9073486328125e-06, -3.4332275390625e-05, -0.0046405792236328125, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -8.237361907958984e-05, -1.71661376953125e-05, -0.16893208026885986, -1.5497195136049413e-06, -0.0001068115234375, -0.0001850128173828125, 0.0, -0.004457950592041016, -2.32455840887269e-05, -0.00128936767578125, -3.4332275390625e-05, -0.25892817974090576, -5.7220458984375e-06, -2.8252596166566946e-05, -1.9073486328125e-06, -7.688998448429629e-05, 0.0, -7.62939453125e-06, -0.0013179779052734375, -3.4332275390625e-05, -1.633167266845703e-05, -1.0967194612021558e-05, -1.52587890625e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 208, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Give", "<EOS>", 346, 58, 231, "Change", "Attack", "<EOS>", 346, 52, 179, "Summon", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", "Self", "Selector", "<EOS>", 346, 45, 151, 21, 174, "Greater", "Than", "<EOS>", 346, 45, 150, 21, 174, "Count", "<EOS>", 346, 67, 281, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 353, 95, 336, "value", "<EOS>", 23, 179, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "DragonlingMechanic", "_type": "Template5", "hole2": [{"hole4": [{"hole3": 1, "hole2": "ChangeHealth", "_type": "Template32", "hole1": [{"n": 0, "_type": "Num"}], "hole0": "ChangeAttack"}], "hole3": "Give", "hole0": "Dragonling Mechanic", "_type": "Template15", "hole2": "COMMON", "hole8": [{"keywords": [{"value": {"n": 0, "_type": "Num"}, "_type": "keyword", "arg": "value"}], "_type": "Call", "func": {"_type": "Name", "id": "GreaterThan"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Count"}, "args": [{"_type": "Template48", "hole1": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "hole0": "IsType"}]}]}], "hole5": "SelfSelector", "hole1": 4}], "hole1": "MinionCard"}, "score": -7.803847361986541, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (0)), Buff(ChangeHealth(1))]), SelfSelector(), GreaterThan(\n            Count(CardSelector(condition=IsType(MINION_TYPE.DRAGON))),\n            value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score_history": [-0.0001316070556640625, -1.71661376953125e-05, -4.863638605456799e-05, -2.765654426184483e-05, -5.245195097813848e-06, -3.814697265625e-06, -1.5735626220703125e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -0.0006647109985351562, -5.321050643920898, -3.576277322281385e-06, -3.528594970703125e-05, -0.0002504586591385305, -0.0015946626663208008, -1.4085671864449978e-05, 0.0, -0.41925621032714844, -1.9073486328125e-06, -0.7665183544158936, -0.00012683088425546885, -5.14984130859375e-05, -0.0031576156616210938, -1.71661376953125e-05, -0.5132295489311218, -0.006012424826622009, -4.172325134277344e-06, -0.8998465538024902, -0.00031327223405241966, -3.62396240234375e-05, -0.0030355453491210938, -1.71661376953125e-05, -0.02489899843931198, -0.0006762687698937953, -0.0004797240544576198, -0.00016021728515625, -3.814697265625e-06, -5.841253368998878e-06, 0.0, -5.7220458984375e-06, -0.00258636474609375, -7.82012939453125e-05, -2.002716064453125e-05, -3.3378546504536644e-06, -1.52587890625e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 210, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "battlecry", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>", "Summon", "<EOS>", 346, 88, 325, "Mechanical", "Dragonling", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "DragonlingMechanic", "_type": "Template5", "hole2": [{"hole4": [{"_type": "Template79", "hole0": "EnemyPlayer"}], "hole6": [{"_type": "Template79", "hole0": "MechanicalDragonling"}], "hole3": "battlecry", "hole0": "Dragonling Mechanic", "_type": "Template15", "hole2": "COMMON", "hole5": "Summon", "hole1": 4}], "hole1": "MinionCard"}, "score": -7.964437065802024, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(battlecry(EnemyPlayer()\n            ), Summon(MechanicalDragonling())))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score_history": [-0.0001316070556640625, -1.71661376953125e-05, -4.863638605456799e-05, -2.765654426184483e-05, -5.245195097813848e-06, -3.814697265625e-06, -1.5735626220703125e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -0.0006647109985351562, -5.2242913246154785, -2.3841855067985307e-07, -0.00016724903252907097, -7.271766662597656e-05, -0.000244140625, -4.397309385240078e-05, -1.9073486328125e-06, -0.004108428955078125, -1.1920928244535389e-07, -0.4308475852012634, -0.00545738497748971, 0.0, -0.6042261123657227, -0.005442619323730469, -0.05656646937131882, -0.02813708782196045, -3.170933268847875e-05, -1.1444091796875e-05, -0.0011386871337890625, -9.5367431640625e-06, -0.09967850148677826, -3.576278118089249e-07, -0.002140043769031763, -0.00029468536376953125, -0.00024125739582814276, -0.0688023492693901, -2.622604142743512e-06, -1.1733777523040771, -7.748603820800781e-06, 0.0, -0.000270843505859375, -0.8454055786132812, -5.7220458984375e-06, -0.006417728494852781, -0.0020258112344890833, -4.410743713378906e-06, -0.009947906248271465, 0.0, -2.1099953301018104e-05, 0.0, -3.814697265625e-06, -0.002277374267578125, -0.000194549560546875, -3.254413604736328e-05, -5.006777428206988e-06, -2.6702880859375e-05, 0.0], "choice_history": [97, 283, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 208, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Give", "<EOS>", 346, 58, 231, "Change", "Attack", "<EOS>", 346, 52, 179, "Summon", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", "Minion", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "DragonlingMechanic", "_type": "Template5", "hole2": [{"hole4": [{"hole3": 1, "hole2": "ChangeHealth", "_type": "Template32", "hole1": [{"n": 0, "_type": "Num"}], "hole0": "ChangeAttack"}], "hole3": "Give", "hole0": "Dragonling Mechanic", "_type": "Template15", "hole2": "COMMON", "hole8": [{"_type": "Template79", "hole0": "EnemyPlayer"}], "hole5": "MinionSelector", "hole1": 4}], "hole1": "MinionCard"}, "score": -8.572913097551144, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (0)), Buff(ChangeHealth(1))]), MinionSelector(), EnemyPlayer()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}]}
{"index": 26, "beams": [{"score_history": [-0.0002689361572265625, -0.0001773834228515625, -9.536738616588991e-07, -0.00020656836568377912, -1.1920928244535389e-07, -6.770849722670391e-05, -2.3365020751953125e-05, -4.5299530029296875e-06, -7.62939453125e-06, -0.0008068084716796875, -0.0025691986083984375, -3.814697265625e-05, 0.0, -6.79492904964718e-06, 0.0, -0.0009282827377319336, -1.9073486328125e-06, -0.0001773834228515625, -1.9073486328125e-05, -0.0004329681396484375, -1.1920896213268861e-05, -3.826618194580078e-05, -4.9233411118621007e-05, -9.655952453613281e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.748603820800781e-06, 0.0, -1.33514404296875e-05, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0002498626708984375, 0.0, -0.003017425537109375, -2.288818359375e-05, -1.52587890625e-05, -0.0018444061279296875, -1.1444091796875e-05, 0.0, -0.0004367828369140625, -3.24249267578125e-05, -0.0003528594970703125, -1.9073486328125e-06, -5.7220458984375e-05, -0.0001125335693359375, -5.7220458984375e-06, -0.0002789497375488281, -3.814697265625e-06, -0.0036439895629882812, -8.0108642578125e-05, -3.24249267578125e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-06, -0.0005438327789306641, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00557255744934082, -1.1920928244535389e-07, -7.450580596923828e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000141143798828125, -7.82012939453125e-05, -2.0980818590032868e-05, 0.0, -0.0011768341064453125, -8.96453857421875e-05, -8.58306884765625e-05, -0.0001983642578125, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.00013554096221923828, 0.0, -0.0002155303955078125, -2.09808349609375e-05, -0.0009365081787109375, -3.814697265625e-06, -0.000225067138671875, 0.0, -0.0005666017532348633, -3.814697265625e-06, -1.52587890625e-05, -1.1920928244535389e-07, -0.00532504403963685, 0.0, -9.5367431640625e-05, -0.0018253326416015625, -7.05718994140625e-05, -0.0003050409723073244, -8.821448318485636e-06, -1.9073486328125e-06, -4.38690185546875e-05, -0.0022535324096679688, -0.0001455545425415039, -0.01727008819580078, -5.91278076171875e-05, -0.0048732757568359375, -6.103515625e-05, -0.016504287719726562, 0.0, -8.058547973632812e-05, 0.0, -0.0016422271728515625, 0.0, -0.0039268359541893005, 0.0, -2.6702880859375e-05, -0.14841365814208984, -0.0033321380615234375, -0.00080108642578125, 0.0, -5.7220458984375e-06, 0.0, -0.0015581839252263308, -1.1920928244535389e-07, -0.000225067138671875, -7.62939453125e-06, -0.007271170616149902, -5.483625955093885e-06], "choice_history": [97, 285, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Drain", " ", "Life", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 347, 78, 305, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"hole2": [{"_type": "Template67", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "DrainLife", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Drain Life"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -0.24261213039468998, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n"}, {"score_history": [-0.0002689361572265625, -0.0001773834228515625, -9.536738616588991e-07, -0.00020656836568377912, -1.1920928244535389e-07, -6.770849722670391e-05, -2.3365020751953125e-05, -4.5299530029296875e-06, -7.62939453125e-06, -0.0008068084716796875, -0.0025691986083984375, -3.814697265625e-05, 0.0, -6.79492904964718e-06, 0.0, -0.0009282827377319336, -1.9073486328125e-06, -0.0001773834228515625, -1.9073486328125e-05, -0.0004329681396484375, -1.1920896213268861e-05, -3.826618194580078e-05, -4.9233411118621007e-05, -9.655952453613281e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.748603820800781e-06, 0.0, -1.33514404296875e-05, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0002498626708984375, 0.0, -0.003017425537109375, -2.288818359375e-05, -1.52587890625e-05, -0.0018444061279296875, -1.1444091796875e-05, 0.0, -0.0004367828369140625, -3.24249267578125e-05, -0.0003528594970703125, -1.9073486328125e-06, -5.7220458984375e-05, -0.0001125335693359375, -5.7220458984375e-06, -0.0002789497375488281, -3.814697265625e-06, -0.0036439895629882812, -8.0108642578125e-05, -3.24249267578125e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-06, -0.0005438327789306641, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00557255744934082, -1.1920928244535389e-07, -7.450580596923828e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000141143798828125, -7.82012939453125e-05, -2.0980818590032868e-05, 0.0, -0.0011768341064453125, -8.96453857421875e-05, -8.58306884765625e-05, -0.0001983642578125, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.00013554096221923828, 0.0, -0.0002155303955078125, -2.09808349609375e-05, -0.0009365081787109375, -3.814697265625e-06, -0.000225067138671875, 0.0, -0.0005666017532348633, -3.814697265625e-06, -1.52587890625e-05, -1.1920928244535389e-07, -0.00532504403963685, 0.0, -9.5367431640625e-05, -0.0018253326416015625, -7.05718994140625e-05, -0.0003050409723073244, -8.821448318485636e-06, -1.9073486328125e-06, -4.38690185546875e-05, -0.0022535324096679688, -0.0001455545425415039, -0.01727008819580078, -5.91278076171875e-05, -0.0048732757568359375, -6.103515625e-05, -0.016504287719726562, 0.0, -8.058547973632812e-05, 0.0, -0.0016422271728515625, 0.0, -0.0039268359541893005, 0.0, -2.6702880859375e-05, -2.569188117980957, -0.001758575439453125, -0.0001678466796875, 0.0, -3.576278118089249e-07, -1.1920928244535389e-07, -0.0007532056188210845, -5.7220458984375e-06, -0.0007738383137620986, -1.1920928244535389e-07, -2.47955322265625e-05, -1.52587890625e-05, -0.0002657175064086914, -8.022785186767578e-05], "choice_history": [97, 285, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Drain", " ", "Life", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"hole2": [{"hole2": 2, "_type": "Template69", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "DrainLife", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Drain Life"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -2.6540257736141015, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n"}, {"score_history": [-0.0002689361572265625, -0.0001773834228515625, -9.536738616588991e-07, -0.00020656836568377912, -1.1920928244535389e-07, -6.770849722670391e-05, -2.3365020751953125e-05, -4.5299530029296875e-06, -7.62939453125e-06, -0.0008068084716796875, -0.0025691986083984375, -3.814697265625e-05, 0.0, -6.79492904964718e-06, 0.0, -0.0009282827377319336, -1.9073486328125e-06, -0.0001773834228515625, -1.9073486328125e-05, -0.0004329681396484375, -1.1920896213268861e-05, -3.826618194580078e-05, -4.9233411118621007e-05, -9.655952453613281e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.748603820800781e-06, 0.0, -1.33514404296875e-05, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0002498626708984375, 0.0, -0.003017425537109375, -2.288818359375e-05, -1.52587890625e-05, -0.0018444061279296875, -1.1444091796875e-05, 0.0, -0.0004367828369140625, -3.24249267578125e-05, -0.0003528594970703125, -1.9073486328125e-06, -5.7220458984375e-05, -0.0001125335693359375, -5.7220458984375e-06, -0.0002789497375488281, -3.814697265625e-06, -0.0036439895629882812, -8.0108642578125e-05, -3.24249267578125e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-06, -0.0005438327789306641, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00557255744934082, -1.1920928244535389e-07, -7.450580596923828e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000141143798828125, -7.82012939453125e-05, -2.0980818590032868e-05, 0.0, -0.0011768341064453125, -8.96453857421875e-05, -8.58306884765625e-05, -0.0001983642578125, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.00013554096221923828, 0.0, -0.0002155303955078125, -2.09808349609375e-05, -0.0009365081787109375, -3.814697265625e-06, -0.000225067138671875, 0.0, -0.0005666017532348633, -3.814697265625e-06, -1.52587890625e-05, -1.1920928244535389e-07, -0.00532504403963685, 0.0, -9.5367431640625e-05, -0.0018253326416015625, -7.05718994140625e-05, -0.0003050409723073244, -8.821448318485636e-06, -1.9073486328125e-06, -4.38690185546875e-05, -0.0022535324096679688, -0.0001455545425415039, -0.01727008819580078, -5.91278076171875e-05, -0.0048732757568359375, -6.103515625e-05, -0.016504287719726562, 0.0, -8.058547973632812e-05, 0.0, -0.0016422271728515625, 0.0, -0.0039268359541893005, 0.0, -2.6702880859375e-05, -3.690779685974121, -0.00017547607421875, -0.4986794590950012, -1.919269561767578e-05, -0.06375789642333984, -0.0003147125244140625, -0.2821950912475586, -3.814697265625e-06], "choice_history": [97, 285, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Drain", " ", "Life", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 347, 53, 183, "card_drawn", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"hole2": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "DrainLife", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Drain Life"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.616917200541117, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal('card_drawn', self)\n"}, {"score_history": [-0.0002689361572265625, -0.0001773834228515625, -9.536738616588991e-07, -0.00020656836568377912, -1.1920928244535389e-07, -6.770849722670391e-05, -2.3365020751953125e-05, -4.5299530029296875e-06, -7.62939453125e-06, -0.0008068084716796875, -0.0025691986083984375, -3.814697265625e-05, 0.0, -6.79492904964718e-06, 0.0, -0.0009282827377319336, -1.9073486328125e-06, -0.0001773834228515625, -1.9073486328125e-05, -0.0004329681396484375, -1.1920896213268861e-05, -3.826618194580078e-05, -4.9233411118621007e-05, -9.655952453613281e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.748603820800781e-06, 0.0, -1.33514404296875e-05, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0002498626708984375, 0.0, -0.003017425537109375, -2.288818359375e-05, -1.52587890625e-05, -0.0018444061279296875, -1.1444091796875e-05, 0.0, -0.0004367828369140625, -3.24249267578125e-05, -0.0003528594970703125, -1.9073486328125e-06, -5.7220458984375e-05, -0.0001125335693359375, -5.7220458984375e-06, -0.0002789497375488281, -3.814697265625e-06, -0.0036439895629882812, -8.0108642578125e-05, -3.24249267578125e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-06, -0.0005438327789306641, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00557255744934082, -1.1920928244535389e-07, -7.450580596923828e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000141143798828125, -7.82012939453125e-05, -2.0980818590032868e-05, 0.0, -0.0011768341064453125, -8.96453857421875e-05, -8.58306884765625e-05, -0.0001983642578125, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.00013554096221923828, 0.0, -0.0002155303955078125, -2.09808349609375e-05, -0.0009365081787109375, -3.814697265625e-06, -0.000225067138671875, 0.0, -0.0005666017532348633, -3.814697265625e-06, -1.52587890625e-05, -1.1920928244535389e-07, -0.00532504403963685, 0.0, -9.5367431640625e-05, -0.0018253326416015625, -7.05718994140625e-05, -0.0003050409723073244, -8.821448318485636e-06, -1.9073486328125e-06, -4.38690185546875e-05, -0.0022535324096679688, -0.0001455545425415039, -0.01727008819580078, -5.91278076171875e-05, -0.0048732757568359375, -6.103515625e-05, -0.016504287719726562, 0.0, -8.058547973632812e-05, 0.0, -0.0016422271728515625, 0.0, -0.0039268359541893005, 0.0, -2.6702880859375e-05, -3.989142417907715, -0.06482219696044922, -0.0008563995361328125, -3.814697265625e-06, -4.649161837733118e-06, 0.0, -0.0016167128924280405, -1.9073486328125e-06, -0.000782012939453125, -6.67572021484375e-05, -0.7275428771972656, 0.0, -0.0033475160598754883, 0.0, -0.033414602279663086, 0.0, -0.0015106201171875, -4.9591064453125e-05, -0.00016880035400390625, -1.7642974853515625e-05], "choice_history": [97, 285, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Drain", " ", "Life", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 347, 72, 294, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"hole2": [{"hole2": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Template57", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "DrainLife", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Drain Life"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.904340390502945, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(player.hero()), self)\n"}, {"score_history": [-0.0002689361572265625, -0.0001773834228515625, -9.536738616588991e-07, -0.00020656836568377912, -1.1920928244535389e-07, -6.770849722670391e-05, -2.3365020751953125e-05, -4.5299530029296875e-06, -7.62939453125e-06, -0.0008068084716796875, -0.0025691986083984375, -3.814697265625e-05, 0.0, -6.79492904964718e-06, 0.0, -0.0009282827377319336, -1.9073486328125e-06, -0.0001773834228515625, -1.9073486328125e-05, -0.0004329681396484375, -1.1920896213268861e-05, -3.826618194580078e-05, -4.9233411118621007e-05, -9.655952453613281e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.748603820800781e-06, 0.0, -1.33514404296875e-05, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0002498626708984375, 0.0, -0.003017425537109375, -2.288818359375e-05, -1.52587890625e-05, -0.0018444061279296875, -1.1444091796875e-05, 0.0, -0.0004367828369140625, -3.24249267578125e-05, -0.0003528594970703125, -1.9073486328125e-06, -5.7220458984375e-05, -0.0001125335693359375, -5.7220458984375e-06, -0.0002789497375488281, -3.814697265625e-06, -0.0036439895629882812, -8.0108642578125e-05, -3.24249267578125e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-06, -0.0005438327789306641, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00557255744934082, -1.1920928244535389e-07, -7.450580596923828e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000141143798828125, -7.82012939453125e-05, -2.0980818590032868e-05, 0.0, -0.0011768341064453125, -8.96453857421875e-05, -8.58306884765625e-05, -0.0001983642578125, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.00013554096221923828, 0.0, -0.0002155303955078125, -2.09808349609375e-05, -0.0009365081787109375, -3.814697265625e-06, -0.000225067138671875, 0.0, -0.0005666017532348633, -3.814697265625e-06, -1.52587890625e-05, -1.1920928244535389e-07, -0.00532504403963685, 0.0, -9.5367431640625e-05, -0.0018253326416015625, -7.05718994140625e-05, -0.0003050409723073244, -8.821448318485636e-06, -1.9073486328125e-06, -4.38690185546875e-05, -0.0022535324096679688, -0.0001455545425415039, -0.01727008819580078, -5.91278076171875e-05, -0.0048732757568359375, -6.103515625e-05, -4.117535591125488, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -0.7254940271377563, -1.9073486328125e-06, -0.010223627090454102, 0.0, -0.0004955523763783276, 0.0, -0.07473251223564148, -2.3841855067985307e-07, -7.05718994140625e-05, -0.136688232421875, -0.0032606124877929688, -0.0002117156982421875, 0.0, -9.655952453613281e-06, -1.1920928244535389e-07, -0.005528449546545744, -1.1920928244535389e-07, -0.0017375946044921875, -3.814697265625e-06, -0.011204123497009277, -5.245207830739673e-06], "choice_history": [97, 285, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Drain", " ", "Life", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 347, 78, 305, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"hole2": [{"_type": "Template67", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "DrainLife", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Drain Life"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.146096958757816, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.heal(player.effective_heal_power(2), self)\n"}, {"score_history": [-0.0002689361572265625, -0.0001773834228515625, -9.536738616588991e-07, -0.00020656836568377912, -1.1920928244535389e-07, -6.770849722670391e-05, -2.3365020751953125e-05, -4.5299530029296875e-06, -7.62939453125e-06, -0.0008068084716796875, -0.0025691986083984375, -3.814697265625e-05, 0.0, -6.79492904964718e-06, 0.0, -0.0009282827377319336, -1.9073486328125e-06, -0.0001773834228515625, -1.9073486328125e-05, -0.0004329681396484375, -1.1920896213268861e-05, -3.826618194580078e-05, -4.9233411118621007e-05, -9.655952453613281e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.748603820800781e-06, 0.0, -1.33514404296875e-05, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0002498626708984375, 0.0, -0.003017425537109375, -2.288818359375e-05, -1.52587890625e-05, -0.0018444061279296875, -1.1444091796875e-05, 0.0, -0.0004367828369140625, -3.24249267578125e-05, -0.0003528594970703125, -1.9073486328125e-06, -5.7220458984375e-05, -0.0001125335693359375, -5.7220458984375e-06, -0.0002789497375488281, -3.814697265625e-06, -0.0036439895629882812, -8.0108642578125e-05, -3.24249267578125e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-06, -0.0005438327789306641, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00557255744934082, -1.1920928244535389e-07, -7.450580596923828e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000141143798828125, -7.82012939453125e-05, -2.0980818590032868e-05, 0.0, -0.0011768341064453125, -8.96453857421875e-05, -8.58306884765625e-05, -0.0001983642578125, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.00013554096221923828, 0.0, -0.0002155303955078125, -2.09808349609375e-05, -0.0009365081787109375, -3.814697265625e-06, -0.000225067138671875, 0.0, -0.0005666017532348633, -3.814697265625e-06, -1.52587890625e-05, -1.1920928244535389e-07, -0.00532504403963685, 0.0, -9.5367431640625e-05, -0.0018253326416015625, -7.05718994140625e-05, -0.0003050409723073244, -8.821448318485636e-06, -1.9073486328125e-06, -4.38690185546875e-05, -0.0022535324096679688, -0.0001455545425415039, -0.01727008819580078, -5.91278076171875e-05, -0.0048732757568359375, -6.103515625e-05, -0.016504287719726562, 0.0, -8.058547973632812e-05, 0.0, -0.0016422271728515625, 0.0, -0.0039268359541893005, 0.0, -2.6702880859375e-05, -3.989142417907715, -0.06482219696044922, -0.0008563995361328125, -3.814697265625e-06, -4.649161837733118e-06, 0.0, -0.0016167128924280405, -1.9073486328125e-06, -0.000782012939453125, -6.67572021484375e-05, -0.6635322570800781, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -0.17011451721191406, 0.0, -0.006791114807128906, 0.0, -0.013524847105145454, -3.3378591979271732e-06, -0.20190906524658203, -7.62939453125e-06, -0.00026166439056396484, -5.9604644775390625e-06], "choice_history": [97, 285, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Drain", " ", "Life", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 347, 72, 294, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"hole2": [{"hole2": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Template57", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "DrainLife", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Drain Life"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.194477280987918, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(game.other_player.hero\n            ()), self)\n"}, {"score_history": [-0.0002689361572265625, -0.0001773834228515625, -9.536738616588991e-07, -0.00020656836568377912, -1.1920928244535389e-07, -6.770849722670391e-05, -2.3365020751953125e-05, -4.5299530029296875e-06, -7.62939453125e-06, -0.0008068084716796875, -0.0025691986083984375, -3.814697265625e-05, 0.0, -6.79492904964718e-06, 0.0, -0.0009282827377319336, -1.9073486328125e-06, -0.0001773834228515625, -1.9073486328125e-05, -0.0004329681396484375, -1.1920896213268861e-05, -3.826618194580078e-05, -4.9233411118621007e-05, -9.655952453613281e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.748603820800781e-06, 0.0, -1.33514404296875e-05, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0002498626708984375, 0.0, -0.003017425537109375, -2.288818359375e-05, -1.52587890625e-05, -0.0018444061279296875, -1.1444091796875e-05, 0.0, -0.0004367828369140625, -3.24249267578125e-05, -0.0003528594970703125, -1.9073486328125e-06, -5.7220458984375e-05, -0.0001125335693359375, -5.7220458984375e-06, -0.0002789497375488281, -3.814697265625e-06, -0.0036439895629882812, -8.0108642578125e-05, -3.24249267578125e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-06, -0.0005438327789306641, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00557255744934082, -1.1920928244535389e-07, -7.450580596923828e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000141143798828125, -7.82012939453125e-05, -2.0980818590032868e-05, 0.0, -0.0011768341064453125, -8.96453857421875e-05, -8.58306884765625e-05, -0.0001983642578125, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.00013554096221923828, 0.0, -0.0002155303955078125, -2.09808349609375e-05, -0.0009365081787109375, -3.814697265625e-06, -0.000225067138671875, 0.0, -0.0005666017532348633, -3.814697265625e-06, -1.52587890625e-05, -1.1920928244535389e-07, -0.00532504403963685, 0.0, -9.5367431640625e-05, -0.0018253326416015625, -7.05718994140625e-05, -0.0003050409723073244, -8.821448318485636e-06, -1.9073486328125e-06, -4.38690185546875e-05, -0.0022535324096679688, -0.0001455545425415039, -0.01727008819580078, -5.91278076171875e-05, -0.0048732757568359375, -6.103515625e-05, -0.016504287719726562, 0.0, -8.058547973632812e-05, 0.0, -0.0016422271728515625, 0.0, -0.0039268359541893005, 0.0, -2.6702880859375e-05, -5.124099254608154, -0.0011272430419921875, -0.009018936194479465, -8.344646857949556e-07, -1.71661376953125e-05, -1.1444091796875e-05, -0.002018451690673828, -0.00015842914581298828], "choice_history": [97, 285, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Drain", " ", "Life", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "DrainLife", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Drain Life"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.217443631184871, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.0002689361572265625, -0.0001773834228515625, -9.536738616588991e-07, -0.00020656836568377912, -1.1920928244535389e-07, -6.770849722670391e-05, -2.3365020751953125e-05, -4.5299530029296875e-06, -7.62939453125e-06, -0.0008068084716796875, -0.0025691986083984375, -3.814697265625e-05, 0.0, -6.79492904964718e-06, 0.0, -0.0009282827377319336, -1.9073486328125e-06, -0.0001773834228515625, -1.9073486328125e-05, -0.0004329681396484375, -1.1920896213268861e-05, -3.826618194580078e-05, -4.9233411118621007e-05, -9.655952453613281e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.748603820800781e-06, 0.0, -1.33514404296875e-05, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0002498626708984375, 0.0, -0.003017425537109375, -2.288818359375e-05, -1.52587890625e-05, -0.0018444061279296875, -1.1444091796875e-05, 0.0, -0.0004367828369140625, -3.24249267578125e-05, -0.0003528594970703125, -1.9073486328125e-06, -5.7220458984375e-05, -0.0001125335693359375, -5.7220458984375e-06, -0.0002789497375488281, -3.814697265625e-06, -0.0036439895629882812, -8.0108642578125e-05, -3.24249267578125e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-06, -0.0005438327789306641, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00557255744934082, -1.1920928244535389e-07, -7.450580596923828e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000141143798828125, -7.82012939453125e-05, -2.0980818590032868e-05, 0.0, -0.0011768341064453125, -8.96453857421875e-05, -8.58306884765625e-05, -0.0001983642578125, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.00013554096221923828, 0.0, -0.0002155303955078125, -2.09808349609375e-05, -0.0009365081787109375, -3.814697265625e-06, -0.000225067138671875, 0.0, -0.0005666017532348633, -3.814697265625e-06, -1.52587890625e-05, -1.1920928244535389e-07, -0.00532504403963685, 0.0, -9.5367431640625e-05, -0.0018253326416015625, -7.05718994140625e-05, -0.0003050409723073244, -8.821448318485636e-06, -1.9073486328125e-06, -4.38690185546875e-05, -0.0022535324096679688, -0.0001455545425415039, -0.01727008819580078, -5.91278076171875e-05, -0.0048732757568359375, -6.103515625e-05, -0.016504287719726562, 0.0, -8.058547973632812e-05, 0.0, -0.0016422271728515625, 0.0, -0.0039268359541893005, 0.0, -2.6702880859375e-05, -0.14841365814208984, -0.0033321380615234375, -0.00080108642578125, 0.0, -5.7220458984375e-06, 0.0, -0.0015581839252263308, -1.1920928244535389e-07, -0.000225067138671875, -7.62939453125e-06, -5.0110392570495605, 0.0], "choice_history": [97, 285, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Drain", " ", "Life", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 347, 78, 305, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 50, 174, "player", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"hole2": [{"_type": "Template67", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "player"}], "_type": "Template77", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "DrainLife", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Drain Life"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.2463747332021455, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), player)\n"}, {"score_history": [-0.0002689361572265625, -0.0001773834228515625, -9.536738616588991e-07, -0.00020656836568377912, -1.1920928244535389e-07, -6.770849722670391e-05, -2.3365020751953125e-05, -4.5299530029296875e-06, -7.62939453125e-06, -0.0008068084716796875, -0.0025691986083984375, -3.814697265625e-05, 0.0, -6.79492904964718e-06, 0.0, -0.0009282827377319336, -1.9073486328125e-06, -0.0001773834228515625, -1.9073486328125e-05, -0.0004329681396484375, -1.1920896213268861e-05, -3.826618194580078e-05, -4.9233411118621007e-05, -9.655952453613281e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.748603820800781e-06, 0.0, -1.33514404296875e-05, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0002498626708984375, 0.0, -0.003017425537109375, -2.288818359375e-05, -1.52587890625e-05, -0.0018444061279296875, -1.1444091796875e-05, 0.0, -0.0004367828369140625, -3.24249267578125e-05, -0.0003528594970703125, -1.9073486328125e-06, -5.7220458984375e-05, -0.0001125335693359375, -5.7220458984375e-06, -0.0002789497375488281, -3.814697265625e-06, -0.0036439895629882812, -8.0108642578125e-05, -3.24249267578125e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-06, -0.0005438327789306641, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00557255744934082, -1.1920928244535389e-07, -7.450580596923828e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000141143798828125, -7.82012939453125e-05, -2.0980818590032868e-05, 0.0, -0.0011768341064453125, -8.96453857421875e-05, -8.58306884765625e-05, -0.0001983642578125, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.00013554096221923828, 0.0, -0.0002155303955078125, -2.09808349609375e-05, -0.0009365081787109375, -3.814697265625e-06, -0.000225067138671875, 0.0, -0.0005666017532348633, -3.814697265625e-06, -1.52587890625e-05, -1.1920928244535389e-07, -0.00532504403963685, 0.0, -9.5367431640625e-05, -0.0018253326416015625, -7.05718994140625e-05, -0.0003050409723073244, -8.821448318485636e-06, -1.9073486328125e-06, -4.38690185546875e-05, -0.0022535324096679688, -0.0001455545425415039, -0.01727008819580078, -5.91278076171875e-05, -0.0048732757568359375, -6.103515625e-05, -4.117535591125488, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -0.6624923944473267, 0.0, -0.0590289831161499, 0.0, -0.3639622926712036, 0.0, -0.015205387026071548, -2.0265579223632812e-06, -4.57763671875e-05, -0.15476036071777344, -0.003635406494140625, -0.000202178955078125, 0.0, -1.1563301086425781e-05, -1.1920928244535389e-07, -0.005068778991699219, -1.1920928244535389e-07, -0.00289154052734375, -3.814697265625e-06, -0.016303420066833496, -4.88758041683468e-06], "choice_history": [97, 285, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Drain", " ", "Life", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 347, 78, 305, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"hole2": [{"_type": "Template67", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "DrainLife", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Drain Life"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.46004788965498, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.hero.heal(player.effective_heal_power(2), self)\n"}, {"score_history": [-0.0002689361572265625, -0.0001773834228515625, -9.536738616588991e-07, -0.00020656836568377912, -1.1920928244535389e-07, -6.770849722670391e-05, -2.3365020751953125e-05, -4.5299530029296875e-06, -7.62939453125e-06, -0.0008068084716796875, -0.0025691986083984375, -3.814697265625e-05, 0.0, -6.79492904964718e-06, 0.0, -0.0009282827377319336, -1.9073486328125e-06, -0.0001773834228515625, -1.9073486328125e-05, -0.0004329681396484375, -1.1920896213268861e-05, -3.826618194580078e-05, -4.9233411118621007e-05, -9.655952453613281e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.748603820800781e-06, 0.0, -1.33514404296875e-05, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0002498626708984375, 0.0, -0.003017425537109375, -2.288818359375e-05, -1.52587890625e-05, -0.0018444061279296875, -1.1444091796875e-05, 0.0, -0.0004367828369140625, -3.24249267578125e-05, -0.0003528594970703125, -1.9073486328125e-06, -5.7220458984375e-05, -0.0001125335693359375, -5.7220458984375e-06, -0.0002789497375488281, -3.814697265625e-06, -0.0036439895629882812, -8.0108642578125e-05, -3.24249267578125e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-06, -0.0005438327789306641, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00557255744934082, -1.1920928244535389e-07, -7.450580596923828e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000141143798828125, -7.82012939453125e-05, -2.0980818590032868e-05, 0.0, -0.0011768341064453125, -8.96453857421875e-05, -8.58306884765625e-05, -0.0001983642578125, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.00013554096221923828, 0.0, -0.0002155303955078125, -2.09808349609375e-05, -0.0009365081787109375, -3.814697265625e-06, -0.000225067138671875, 0.0, -0.0005666017532348633, -3.814697265625e-06, -1.52587890625e-05, -1.1920928244535389e-07, -0.00532504403963685, 0.0, -9.5367431640625e-05, -0.0018253326416015625, -7.05718994140625e-05, -0.0003050409723073244, -8.821448318485636e-06, -1.9073486328125e-06, -4.38690185546875e-05, -0.0022535324096679688, -0.0001455545425415039, -0.01727008819580078, -5.91278076171875e-05, -0.0048732757568359375, -6.103515625e-05, -0.016504287719726562, 0.0, -8.058547973632812e-05, 0.0, -0.0016422271728515625, 0.0, -0.0039268359541893005, 0.0, -2.6702880859375e-05, -3.690779685974121, -0.00017547607421875, -2.107569456100464, 0.0, -0.000644683837890625, -0.000331878662109375, -0.2625761032104492, 0.0], "choice_history": [97, 285, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Drain", " ", "Life", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 347, 53, 183, "<UNK>", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"hole2": [{"_type": "Str", "s": "<UNK>"}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "DrainLife", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Drain Life"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.143069155668833, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal('<UNK>', self)\n"}, {"score_history": [-0.0002689361572265625, -0.0001773834228515625, -9.536738616588991e-07, -0.00020656836568377912, -1.1920928244535389e-07, -6.770849722670391e-05, -2.3365020751953125e-05, -4.5299530029296875e-06, -7.62939453125e-06, -0.0008068084716796875, -0.0025691986083984375, -3.814697265625e-05, 0.0, -6.79492904964718e-06, 0.0, -0.0009282827377319336, -1.9073486328125e-06, -0.0001773834228515625, -1.9073486328125e-05, -0.0004329681396484375, -1.1920896213268861e-05, -3.826618194580078e-05, -4.9233411118621007e-05, -9.655952453613281e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.748603820800781e-06, 0.0, -1.33514404296875e-05, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0002498626708984375, 0.0, -0.003017425537109375, -2.288818359375e-05, -1.52587890625e-05, -0.0018444061279296875, -1.1444091796875e-05, 0.0, -0.0004367828369140625, -3.24249267578125e-05, -0.0003528594970703125, -1.9073486328125e-06, -5.7220458984375e-05, -0.0001125335693359375, -5.7220458984375e-06, -0.0002789497375488281, -3.814697265625e-06, -0.0036439895629882812, -8.0108642578125e-05, -3.24249267578125e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-06, -0.0005438327789306641, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00557255744934082, -1.1920928244535389e-07, -7.450580596923828e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000141143798828125, -7.82012939453125e-05, -2.0980818590032868e-05, 0.0, -0.0011768341064453125, -8.96453857421875e-05, -8.58306884765625e-05, -0.0001983642578125, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.00013554096221923828, 0.0, -0.0002155303955078125, -2.09808349609375e-05, -0.0009365081787109375, -3.814697265625e-06, -0.000225067138671875, 0.0, -0.0005666017532348633, -3.814697265625e-06, -1.52587890625e-05, -1.1920928244535389e-07, -0.00532504403963685, 0.0, -9.5367431640625e-05, -0.0018253326416015625, -7.05718994140625e-05, -0.0003050409723073244, -8.821448318485636e-06, -1.9073486328125e-06, -4.38690185546875e-05, -0.0022535324096679688, -0.0001455545425415039, -0.01727008819580078, -5.91278076171875e-05, -0.0048732757568359375, -6.103515625e-05, -0.016504287719726562, 0.0, -8.058547973632812e-05, 0.0, -0.0016422271728515625, 0.0, -0.0039268359541893005, 0.0, -2.6702880859375e-05, -3.690779685974121, -0.00017547607421875, -2.202021837234497, -1.9073486328125e-06, -0.04223346710205078, -5.53131103515625e-05, -0.1322946548461914, -3.814697265625e-06], "choice_history": [97, 285, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Drain", " ", "Life", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"hole2": [{"_type": "Str", "s": "character_attack"}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "DrainLife", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Drain Life"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.148558028196909, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal('character_attack', self)\n"}, {"score_history": [-0.0002689361572265625, -0.0001773834228515625, -9.536738616588991e-07, -0.00020656836568377912, -1.1920928244535389e-07, -6.770849722670391e-05, -2.3365020751953125e-05, -4.5299530029296875e-06, -7.62939453125e-06, -0.0008068084716796875, -0.0025691986083984375, -3.814697265625e-05, 0.0, -6.79492904964718e-06, 0.0, -0.0009282827377319336, -1.9073486328125e-06, -0.0001773834228515625, -1.9073486328125e-05, -0.0004329681396484375, -1.1920896213268861e-05, -3.826618194580078e-05, -4.9233411118621007e-05, -9.655952453613281e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.748603820800781e-06, 0.0, -1.33514404296875e-05, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0002498626708984375, 0.0, -0.003017425537109375, -2.288818359375e-05, -1.52587890625e-05, -0.0018444061279296875, -1.1444091796875e-05, 0.0, -0.0004367828369140625, -3.24249267578125e-05, -0.0003528594970703125, -1.9073486328125e-06, -5.7220458984375e-05, -0.0001125335693359375, -5.7220458984375e-06, -0.0002789497375488281, -3.814697265625e-06, -0.0036439895629882812, -8.0108642578125e-05, -3.24249267578125e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-06, -0.0005438327789306641, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00557255744934082, -1.1920928244535389e-07, -7.450580596923828e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000141143798828125, -7.82012939453125e-05, -2.0980818590032868e-05, 0.0, -0.0011768341064453125, -8.96453857421875e-05, -8.58306884765625e-05, -0.0001983642578125, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.00013554096221923828, 0.0, -0.0002155303955078125, -2.09808349609375e-05, -0.0009365081787109375, -3.814697265625e-06, -0.000225067138671875, 0.0, -0.0005666017532348633, -3.814697265625e-06, -1.52587890625e-05, -1.1920928244535389e-07, -0.00532504403963685, 0.0, -9.5367431640625e-05, -0.0018253326416015625, -7.05718994140625e-05, -0.0003050409723073244, -8.821448318485636e-06, -1.9073486328125e-06, -4.38690185546875e-05, -0.0022535324096679688, -0.0001455545425415039, -6.1261396408081055, -0.002841949462890625, -0.00276947021484375, -1.71661376953125e-05, -0.0027179718017578125, 0.0, -1.1086463018727954e-05, 0.0, -0.0009028911590576172, -9.918212890625e-05], "choice_history": [97, 285, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Drain", " ", "Life", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "DrainLife", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Drain Life"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.172047063861989, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.draw()\n"}, {"score_history": [-0.0002689361572265625, -0.0001773834228515625, -9.536738616588991e-07, -0.00020656836568377912, -1.1920928244535389e-07, -6.770849722670391e-05, -2.3365020751953125e-05, -4.5299530029296875e-06, -7.62939453125e-06, -0.0008068084716796875, -6.329042434692383, -0.000881195068359375, -1.9073486328125e-06, -1.4662741705251392e-05, -1.9073486328125e-06, -0.0015126460930332541, -7.62939453125e-06, -0.18740463256835938, -0.0003204345703125, -5.7220458984375e-05, -7.164221460698172e-05, -1.52587890625e-05, -0.0002773620653897524, -1.9073486328125e-06, -0.0001544952392578125, 0.0, -1.3709068298339844e-05, 0.0, -5.91278076171875e-05, -0.000152587890625, -1.33514404296875e-05, -1.9073486328125e-06, -0.000278472900390625, 0.0, -0.0033893585205078125, -2.288818359375e-05, -0.0001068115234375, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0001163482666015625, -1.1444091796875e-05, -0.0001163482666015625, -1.9073486328125e-06, -0.0358123779296875, -0.0013294219970703125, -0.00022745132446289062, -1.9073486328125e-06, -2.9444683605106547e-05, -1.71661376953125e-05, -3.933906555175781e-06, 0.0, -0.000118255615234375, -9.5367431640625e-06, -1.3351374946068972e-05, 0.0, -0.008353233337402344, -1.52587890625e-05, -5.7220458984375e-05, -3.62396240234375e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00011837482452392578, 0.0, -0.0014743804931640625, -2.09808349609375e-05, -0.001605987548828125, -3.814697265625e-06, -0.0005970001220703125, 0.0, -0.008611798286437988, -3.814697265625e-06, -1.71661376953125e-05, -2.3841855067985307e-07, -0.007820529863238335, 0.0, -8.58306884765625e-05, -0.001804351806640625, -7.62939453125e-05, -0.0002645561471581459, -7.986990567587782e-06, -1.9073486328125e-06, -3.62396240234375e-05, -0.0021452903747558594, -0.00013208389282226562, -0.033362388610839844, -5.91278076171875e-05, -0.008176803588867188, -6.67572021484375e-05, -0.016864776611328125, 0.0, -7.092952728271484e-05, 0.0, -0.0017174482345581055, 0.0, -0.0037465011700987816, 0.0, -2.6702880859375e-05, -0.15198707580566406, -0.0033369064331054688, -0.000835418701171875, 0.0, -5.7220458984375e-06, 0.0, -0.0015494817635044456, -1.1920928244535389e-07, -0.00022125244140625, -7.62939453125e-06, -0.007649779319763184, -5.483625955093885e-06], "choice_history": [97, 285, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Drain", " ", "Life", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 51, 175, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 347, 78, 305, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"hole2": [{"_type": "Template67", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "DrainLife", "_type": "Template5", "hole2": [{"hole2": [{"_type": "Str", "s": "Drain Life"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.826252698583588, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n"}, {"score_history": [-0.0002689361572265625, -0.0001773834228515625, -9.536738616588991e-07, -0.00020656836568377912, -1.1920928244535389e-07, -6.770849722670391e-05, -2.3365020751953125e-05, -4.5299530029296875e-06, -7.62939453125e-06, -7.256032943725586, -0.0001354217529296875, -1.0728830375228426e-06, -3.6716461181640625e-05, -8.344646857949556e-07, 0.0, -9.536738616588991e-07, 0.0, -0.0012664794921875, 0.0, -0.00035858154296875, 0.0, -0.00018310546875, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -5.53131103515625e-05, -5.7220458984375e-06, -2.300734558957629e-05, -1.1920928244535389e-07, -0.005797386169433594, -2.47955322265625e-05, -4.76837158203125e-05, -0.0003299713134765625, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00011277198791503906, 0.0, -0.053526878356933594, -1.9073486328125e-05, -0.0003566741943359375, -3.814697265625e-06, -0.0010814666748046875, 0.0, -0.3516198396682739, -5.7220458984375e-06, -3.635883331298828e-05, -5.960462772236497e-07, -0.0022976428736001253, 0.0, -7.82012939453125e-05, -0.0016498565673828125, -7.43865966796875e-05, -0.00034570437856018543, -6.318072337307967e-06, -1.9073486328125e-06, -3.0517578125e-05, -0.0023363828659057617, -0.00013196468353271484, -0.07599830627441406, -6.4849853515625e-05, -0.017910003662109375, -8.0108642578125e-05, -0.016763687133789062, 0.0, -4.8041343688964844e-05, 0.0, -0.0018117427825927734, 0.0, -0.00388510012999177, 0.0, -3.0517578125e-05, -0.15655231475830078, -0.0034084320068359375, -0.0008831024169921875, 0.0, -5.7220458984375e-06, 0.0, -0.0015381567645817995, -1.1920928244535389e-07, -0.0002307891845703125, -9.5367431640625e-06, -0.007526755332946777, -5.483625955093885e-06], "choice_history": [97, 285, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Drain", " ", "Life", "<EOS>", "3", "<EOS>", "WARLOCK", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 347, 78, 305, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"hole2": [{"_type": "Template67", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "DrainLife", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "WARLOCK", "_type": "Template34", "hole1": 3, "hole0": "Drain Life"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.965627238818605, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n"}, {"score_history": [-0.0002689361572265625, -0.0001773834228515625, -9.536738616588991e-07, -0.00020656836568377912, -1.1920928244535389e-07, -6.770849722670391e-05, -2.3365020751953125e-05, -4.5299530029296875e-06, -7.62939453125e-06, -0.0008068084716796875, -0.0025691986083984375, -3.814697265625e-05, 0.0, -6.79492904964718e-06, 0.0, -0.0009282827377319336, -1.9073486328125e-06, -0.0001773834228515625, -1.9073486328125e-05, -0.0004329681396484375, -1.1920896213268861e-05, -3.826618194580078e-05, -4.9233411118621007e-05, -9.655952453613281e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.748603820800781e-06, 0.0, -1.33514404296875e-05, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0002498626708984375, 0.0, -0.003017425537109375, -2.288818359375e-05, -1.52587890625e-05, -0.0018444061279296875, -1.1444091796875e-05, 0.0, -0.0004367828369140625, -3.24249267578125e-05, -0.0003528594970703125, -1.9073486328125e-06, -5.7220458984375e-05, -0.0001125335693359375, -5.7220458984375e-06, -0.0002789497375488281, -3.814697265625e-06, -0.0036439895629882812, -8.0108642578125e-05, -3.24249267578125e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-06, -0.0005438327789306641, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00557255744934082, -1.1920928244535389e-07, -7.450580596923828e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000141143798828125, -7.82012939453125e-05, -2.0980818590032868e-05, 0.0, -0.0011768341064453125, -8.96453857421875e-05, -8.58306884765625e-05, -0.0001983642578125, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.00013554096221923828, 0.0, -0.0002155303955078125, -2.09808349609375e-05, -0.0009365081787109375, -3.814697265625e-06, -0.000225067138671875, 0.0, -0.0005666017532348633, -3.814697265625e-06, -1.52587890625e-05, -1.1920928244535389e-07, -0.00532504403963685, 0.0, -9.5367431640625e-05, -0.0018253326416015625, -7.05718994140625e-05, -0.0003050409723073244, -8.821448318485636e-06, -1.9073486328125e-06, -4.38690185546875e-05, -0.0022535324096679688, -0.0001455545425415039, -0.01727008819580078, -5.91278076171875e-05, -0.0048732757568359375, -6.103515625e-05, -0.016504287719726562, 0.0, -8.058547973632812e-05, 0.0, -0.0016422271728515625, 0.0, -0.0039268359541893005, 0.0, -2.6702880859375e-05, -3.989142417907715, -0.06482219696044922, -0.0008563995361328125, -3.814697265625e-06, -4.649161837733118e-06, 0.0, -0.0016167128924280405, -1.9073486328125e-06, -0.000782012939453125, -6.67572021484375e-05, -0.6635322570800781, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -0.17011451721191406, 0.0, -0.006791114807128906, 0.0, -0.013524847105145454, -3.3378591979271732e-06, -1.741774559020996, -0.002986907958984375, -0.000156402587890625, -0.0010929107666015625, -0.5654854774475098, -0.001957169035449624, -0.6653289794921875, -3.814697265625e-05, -0.08654403686523438, -7.05718994140625e-05, -0.01568603515625, -4.38690185546875e-05, -0.00012969970703125, -9.5367431640625e-06, -1.1938953399658203, 0.0, -0.06566452980041504, 0.0, -0.002048210008069873, -1.1920928244535389e-07, -1.1444091796875e-05, -0.13913345336914062, -1.9073486328125e-06, -0.0008678436279296875, 0.0, -9.5367431640625e-05, -5.7220458984375e-06, -0.00021564960479736328, 0.0, -0.0011463165283203125, 0.0], "choice_history": [97, 285, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Drain", " ", "Life", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 347, 72, 294, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 47, 167, 0, 282, "x", "<EOS>", 17, 153, 13, 143, 13, 143, 21, 174, "character", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 343, 4, 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"hole2": [{"hole2": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Template57", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"body": {"comparators": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DEMON"}], "_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"value": {"value": {"_type": "Name", "id": "character"}, "_type": "Attribute", "attr": "card"}, "_type": "Attribute", "attr": "minion_type"}}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "x"}}], "_type": "Template77", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "DrainLife", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Drain Life"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -9.476683167195432, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(game.other_player.hero\n            ()), lambda x: character.card.minion_type == MINION_TYPE.DEMON)\n"}]}
{"index": 27, "beams": [{"score_history": [-0.000640869140625, -2.6702880859375e-05, -3.4332275390625e-05, -0.0001068115234375, -1.1444091796875e-05, -0.00016652150952722877, -2.7418097943154862e-06, -0.008640049956738949, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.15406359732151e-05, -8.535290544386953e-05, -4.291534423828125e-06, -0.0008411407470703125, -0.0011835098266601562, -8.58306884765625e-05, -4.52994936495088e-06, -9.071826934814453e-05, -0.00013731967192143202, -9.655952453613281e-06, -3.5047098208451644e-05, -1.9073486328125e-06, -0.0026264190673828125, -0.000194549560546875, -0.003917694091796875, 0.0, -0.000217437744140625, 0.0, -0.0003070831298828125, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -0.00185394287109375, 0.0, -0.000461578369140625, -1.9073486328125e-06, -0.0042934417724609375, -0.06352901458740234, -0.003530830144882202, -7.390975224552676e-05, -2.6702880859375e-05, -5.91278076171875e-05, 0.0, -0.00017046094581019133, -9.5367431640625e-06, -0.0062656402587890625, -0.0004062652587890625, -3.814697265625e-06, -0.0011234283447265625, -0.000255584716796875, 0.0, -0.0006735324859619141, 0.0, -0.000102996826171875, 0.0, -5.924701690673828e-05, -1.71661376953125e-05, 0.0, -0.000152587890625, -7.62939453125e-05, -0.00013433984713628888, 0.0, -1.2278658687137067e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Dread", "Infernal", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 29, 266, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "DEMON", "hole3": "COMMON", "hole0": "Dread Infernal", "_type": "Template4", "hole2": "WARLOCK", "hole7": "battlecry", "hole8": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}], "hole2": "CharacterSelector", "_type": "Template43", "hole1": [{"n": 1, "_type": "Num"}], "hole0": "Damage"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 6}, {"_type": "Template19", "hole1": 6, "hole0": 6}], "_type": "ClassDef", "name": "DreadInfernal"}], "_type": "Module"}, "score": -0.10276388792021862, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score_history": [-0.000640869140625, -2.6702880859375e-05, -3.4332275390625e-05, -0.0001068115234375, -1.1444091796875e-05, -0.00016652150952722877, -2.7418097943154862e-06, -0.008640049956738949, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.15406359732151e-05, -8.535290544386953e-05, -4.291534423828125e-06, -0.0008411407470703125, -0.0011835098266601562, -8.58306884765625e-05, -4.52994936495088e-06, -9.071826934814453e-05, -0.00013731967192143202, -9.655952453613281e-06, -3.5047098208451644e-05, -1.9073486328125e-06, -0.0026264190673828125, -0.000194549560546875, -0.003917694091796875, 0.0, -0.000217437744140625, 0.0, -0.0003070831298828125, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -0.00185394287109375, 0.0, -0.000461578369140625, -1.9073486328125e-06, -0.0042934417724609375, -4.49057674407959, -0.010454058647155762, -0.0018616914749145508, -0.00037384033203125, -5.7220458984375e-06, 0.0, -0.00020694731210824102, 0.0, -0.0015659332275390625, -2.47955322265625e-05, -3.814697265625e-06, -0.009076118469238281, -0.0023899078369140625, -2.3364747903542593e-05, 0.0, -1.6808415239211172e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Dread", "Infernal", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 29, 265, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Hero", "Selector", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "DEMON", "hole3": "COMMON", "hole0": "Dread Infernal", "_type": "Template4", "hole2": "WARLOCK", "hole7": "battlecry", "hole8": {"hole2": "HeroSelector", "_type": "Template43", "hole1": [{"n": 1, "_type": "Num"}], "hole0": "Damage"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 6}, {"_type": "Template19", "hole1": 6, "hole0": 6}], "_type": "ClassDef", "name": "DreadInfernal"}], "_type": "Module"}, "score": -4.542660875791398, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score_history": [-0.000640869140625, -2.6702880859375e-05, -3.4332275390625e-05, -0.0001068115234375, -1.1444091796875e-05, -0.00016652150952722877, -2.7418097943154862e-06, -4.7556586265563965, -0.006436214316636324, -8.7738037109375e-05, -1.52587890625e-05, -5.7220458984375e-06, -1.4290446415543556e-05, -0.00012075660924892873, -5.125998541188892e-06, -0.0006999969482421875, -0.0011768341064453125, -7.62939453125e-05, -7.271752110682428e-06, -0.00011336803436279297, -0.00013982297969050705, -2.110004425048828e-05, -3.4451179089955986e-05, -1.9073486328125e-06, -0.0029048919677734375, -0.0002994537353515625, -0.0062808990478515625, 0.0, -0.0001430511474609375, 0.0, -0.0003795623779296875, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -0.0018024444580078125, 0.0, -0.000492095947265625, 0.0, -0.004474639892578125, -0.060599327087402344, -0.003649928141385317, -7.569789158878848e-05, -2.86102294921875e-05, -6.29425048828125e-05, 0.0, -0.00015377344971057028, -1.1444091796875e-05, -0.0060863494873046875, -0.000400543212890625, -3.814697265625e-06, -0.0010986328125, -0.0002536773681640625, 0.0, -0.0006697177886962891, 0.0, -0.000102996826171875, 0.0, -5.924701690673828e-05, -1.71661376953125e-05, 0.0, -0.00014495849609375, -8.0108642578125e-05, -0.0001248043408850208, 0.0, -1.2278656868147664e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Dread", "Infernal", "Infernal", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 29, 266, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "DEMON", "hole3": "COMMON", "hole0": "Dread Infernal", "_type": "Template4", "hole2": "WARLOCK", "hole7": "battlecry", "hole8": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}], "hole2": "CharacterSelector", "_type": "Template43", "hole1": [{"n": 1, "_type": "Num"}], "hole0": "Damage"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 6}, {"_type": "Template19", "hole1": 6, "hole0": 6}], "_type": "ClassDef", "name": "DreadInfernalInfernal"}], "_type": "Module"}, "score": -4.856063036190562, "inferred_code": "class DreadInfernalInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score_history": [-0.000640869140625, -2.6702880859375e-05, -3.4332275390625e-05, -0.0001068115234375, -1.1444091796875e-05, -0.00016652150952722877, -2.7418097943154862e-06, -0.008640049956738949, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.15406359732151e-05, -8.535290544386953e-05, -4.291534423828125e-06, -0.0008411407470703125, -0.0011835098266601562, -8.58306884765625e-05, -4.52994936495088e-06, -9.071826934814453e-05, -0.00013731967192143202, -9.655952453613281e-06, -3.5047098208451644e-05, -1.9073486328125e-06, -0.0026264190673828125, -0.000194549560546875, -0.003917694091796875, 0.0, -0.000217437744140625, 0.0, -0.0003070831298828125, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -0.00185394287109375, 0.0, -0.000461578369140625, -1.9073486328125e-06, -0.0042934417724609375, -0.06352901458740234, -0.003530830144882202, -7.390975224552676e-05, -2.6702880859375e-05, -5.91278076171875e-05, 0.0, -0.00017046094581019133, -9.5367431640625e-06, -5.369305610656738, -9.5367431640625e-06, -3.814697265625e-06, -0.001018524169921875, -0.0001773834228515625, 0.0, -0.00116729736328125, 0.0, -6.866455078125e-05, 0.0, -5.91278076171875e-05, -1.537799835205078e-05, 0.0, -0.000171661376953125, -7.05718994140625e-05, -0.00013290952483657748, 0.0, -1.4901257600286044e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Dread", "Infernal", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 29, 266, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Hero", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "DEMON", "hole3": "COMMON", "hole0": "Dread Infernal", "_type": "Template4", "hole2": "WARLOCK", "hole7": "battlecry", "hole8": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}], "hole2": "HeroSelector", "_type": "Template43", "hole1": [{"n": 1, "_type": "Num"}], "hole0": "Damage"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 6}, {"_type": "Template19", "hole1": 6, "hole0": 6}], "_type": "ClassDef", "name": "DreadInfernal"}], "_type": "Module"}, "score": -5.465696093304132, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), HeroSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score_history": [-0.000640869140625, -2.6702880859375e-05, -3.4332275390625e-05, -0.0001068115234375, -1.1444091796875e-05, -0.00016652150952722877, -2.7418097943154862e-06, -0.008640049956738949, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.15406359732151e-05, -8.535290544386953e-05, -4.291534423828125e-06, -0.0008411407470703125, -0.0011835098266601562, -8.58306884765625e-05, -4.52994936495088e-06, -9.071826934814453e-05, -0.00013731967192143202, -9.655952453613281e-06, -3.5047098208451644e-05, -1.9073486328125e-06, -0.0026264190673828125, -0.000194549560546875, -0.003917694091796875, 0.0, -0.000217437744140625, 0.0, -0.0003070831298828125, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -0.00185394287109375, 0.0, -0.000461578369140625, -1.9073486328125e-06, -0.0042934417724609375, -5.556451320648193, -0.018047265708446503, -0.0013194062048569322, -0.02255988121032715, -5.7220440794480965e-06, -1.1920928244535389e-07, -0.12184524536132812, -0.0004596710205078125, 0.0, -0.032836075872182846, 0.0, -5.7220458984375e-05, 0.0, -0.00010704994201660156, -3.254413604736328e-05, 0.0, -0.0002288818359375, -9.34600830078125e-05, -0.00011991735664196312, 0.0, -1.2159471225459129e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Dread", "Infernal", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 29, 263, "Damage", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "DEMON", "hole3": "COMMON", "hole0": "Dread Infernal", "_type": "Template4", "hole2": "WARLOCK", "hole7": "battlecry", "hole8": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}], "hole2": "MinionSelector", "_type": "Template43", "hole0": "Damage"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 6}, {"_type": "Template19", "hole1": 6, "hole0": 6}], "_type": "ClassDef", "name": "DreadInfernal"}], "_type": "Module"}, "score": -5.7802570695364395, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(), MinionSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score_history": [-0.000640869140625, -2.6702880859375e-05, -3.4332275390625e-05, -0.0001068115234375, -1.1444091796875e-05, -0.00016652150952722877, -2.7418097943154862e-06, -0.008640049956738949, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.15406359732151e-05, -8.535290544386953e-05, -4.291534423828125e-06, -0.0008411407470703125, -0.0011835098266601562, -8.58306884765625e-05, -4.52994936495088e-06, -9.071826934814453e-05, -0.00013731967192143202, -9.655952453613281e-06, -3.5047098208451644e-05, -1.9073486328125e-06, -0.0026264190673828125, -0.000194549560546875, -0.003917694091796875, 0.0, -0.000217437744140625, 0.0, -0.0003070831298828125, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -0.00185394287109375, 0.0, -0.000461578369140625, -1.9073486328125e-06, -0.0042934417724609375, -5.452540397644043, -0.02229241468012333, -0.00021660327911376953, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -0.000878860882949084, -5.7220458984375e-06, -0.3096742630004883, 0.0, 0.0, -0.0017032623291015625, -0.14447784423828125, -5.7220458984375e-05, -0.04701390862464905, -0.013576626777648926, -1.9073486328125e-06, -0.0013446807861328125, -4.38690185546875e-05, -0.0003844952443614602, 0.0, -1.8835051378118806e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Dread", "Infernal", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 29, 267, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Hero", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "DEMON", "hole3": "COMMON", "hole0": "Dread Infernal", "_type": "Template4", "hole2": "WARLOCK", "hole7": "battlecry", "hole8": {"hole3": [{"_type": "Template79", "hole0": "EnemyPlayer"}], "hole2": "HeroSelector", "_type": "Template43", "hole1": [{"n": 1, "_type": "Num"}], "hole0": "Damage"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 6}, {"_type": "Template19", "hole1": 6, "hole0": 6}], "_type": "ClassDef", "name": "DreadInfernal"}], "_type": "Module"}, "score": -6.0203444653104725, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), HeroSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score_history": [-0.000640869140625, -2.6702880859375e-05, -3.4332275390625e-05, -0.0001068115234375, -1.1444091796875e-05, -0.00016652150952722877, -2.7418097943154862e-06, -0.008640049956738949, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.15406359732151e-05, -8.535290544386953e-05, -4.291534423828125e-06, -0.0008411407470703125, -0.0011835098266601562, -8.58306884765625e-05, -4.52994936495088e-06, -9.071826934814453e-05, -0.00013731967192143202, -9.655952453613281e-06, -3.5047098208451644e-05, -1.9073486328125e-06, -0.0026264190673828125, -0.000194549560546875, -0.003917694091796875, 0.0, -0.000217437744140625, 0.0, -0.0003070831298828125, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -0.00185394287109375, 0.0, -0.000461578369140625, -1.9073486328125e-06, -0.0042934417724609375, -5.1468424797058105, -0.07085524499416351, -0.004012380260974169, -1.0579054355621338, -0.00012385845184326172, -1.1920922133867862e-06, -0.000179290771484375, -0.03396320343017578, -1.33514404296875e-05, -0.01130006741732359, -0.00043082208139821887, 0.0, -0.001697540283203125, -7.2479248046875e-05, -0.00023874769976828247, 0.0, -1.9192779291188344e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Dread", "Infernal", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 29, 264, "Damage", "<EOS>", "Weapon", "Selector", "<EOS>", 346, 88, 325, "Both", "Player", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "DEMON", "hole3": "COMMON", "hole0": "Dread Infernal", "_type": "Template4", "hole2": "WARLOCK", "hole7": "battlecry", "hole8": {"hole3": [{"_type": "Template79", "hole0": "BothPlayer"}], "hole2": "WeaponSelector", "_type": "Template43", "hole0": "Damage"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 6}, {"_type": "Template19", "hole1": 6, "hole0": 6}], "_type": "ClassDef", "name": "DreadInfernal"}], "_type": "Module"}, "score": -6.353736415191634, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(), WeaponSelector(BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score_history": [-0.000640869140625, -2.6702880859375e-05, -3.4332275390625e-05, -0.0001068115234375, -1.1444091796875e-05, -0.00016652150952722877, -2.7418097943154862e-06, -0.008640049956738949, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.15406359732151e-05, -8.535290544386953e-05, -4.291534423828125e-06, -0.0008411407470703125, -0.0011835098266601562, -8.58306884765625e-05, -4.52994936495088e-06, -9.071826934814453e-05, -0.00013731967192143202, -9.655952453613281e-06, -3.5047098208451644e-05, -1.9073486328125e-06, -6.70195198059082, -1.9073486328125e-06, -0.0054340362548828125, 0.0, -0.0002574920654296875, 0.0, -0.0002002716064453125, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -0.0019550323486328125, 0.0, -0.000446319580078125, -1.9073486328125e-06, -0.004239082336425781, -0.06369876861572266, -0.003557181917130947, -7.569789158878848e-05, -2.6702880859375e-05, -5.7220458984375e-05, 0.0, -0.00017308321548625827, -9.5367431640625e-06, -0.00652313232421875, -0.0004215240478515625, -3.814697265625e-06, -0.001148223876953125, -0.0002593994140625, 0.0, -0.0006735324859619141, 0.0, -0.000102996826171875, 0.0, -5.924701690673828e-05, -1.71661376953125e-05, 0.0, -0.000152587890625, -7.62939453125e-05, -0.00013457823661156, 0.0, -1.2278658687137067e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Dread", "Infernal", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 29, 266, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "DEMON", "hole3": "COMMON", "hole0": "Dread Infernal", "_type": "Template4", "hole2": "ALL", "hole7": "battlecry", "hole8": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}], "hole2": "CharacterSelector", "_type": "Template43", "hole1": [{"n": 1, "_type": "Num"}], "hole0": "Damage"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 6}, {"_type": "Template19", "hole1": 6, "hole0": 6}], "_type": "ClassDef", "name": "DreadInfernal"}], "_type": "Module"}, "score": -6.803874257082271, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score_history": [-0.000640869140625, -2.6702880859375e-05, -3.4332275390625e-05, -0.0001068115234375, -1.1444091796875e-05, -0.00016652150952722877, -2.7418097943154862e-06, -0.008640049956738949, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.15406359732151e-05, -8.535290544386953e-05, -4.291534423828125e-06, -0.0008411407470703125, -0.0011835098266601562, -8.58306884765625e-05, -4.52994936495088e-06, -9.071826934814453e-05, -0.00013731967192143202, -9.655952453613281e-06, -3.5047098208451644e-05, -1.9073486328125e-06, -0.0026264190673828125, -0.000194549560546875, -0.003917694091796875, 0.0, -0.000217437744140625, 0.0, -0.0003070831298828125, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -0.00185394287109375, 0.0, -0.000461578369140625, -1.9073486328125e-06, -0.0042934417724609375, -0.06352901458740234, -6.656496524810791, -9.918212890625e-05, -0.0002346038818359375, -4.1961669921875e-05, 0.0, -0.0002814190520439297, 0.0, -0.10274410247802734, -0.0005112886428833008, -3.814697265625e-06, -0.001888275146484375, -0.0002651214599609375, 0.0, -0.0005991458892822266, 0.0, -0.000102996826171875, 0.0, -5.733966827392578e-05, -1.9073486328125e-05, 0.0, -0.000152587890625, -7.05718994140625e-05, -0.00013696208770852536, 0.0, -1.2397866157698445e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Dread", "Infernal", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 29, 266, "Draw", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "DEMON", "hole3": "COMMON", "hole0": "Dread Infernal", "_type": "Template4", "hole2": "WARLOCK", "hole7": "battlecry", "hole8": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}], "hole2": "CharacterSelector", "_type": "Template43", "hole1": [{"n": 1, "_type": "Num"}], "hole0": "Draw"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 6}, {"_type": "Template19", "hole1": 6, "hole0": 6}], "_type": "ClassDef", "name": "DreadInfernal"}], "_type": "Module"}, "score": -6.853327513142858, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Draw(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score_history": [-0.000640869140625, -2.6702880859375e-05, -3.4332275390625e-05, -0.0001068115234375, -1.1444091796875e-05, -0.00016652150952722877, -2.7418097943154862e-06, -0.008640049956738949, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.15406359732151e-05, -8.535290544386953e-05, -4.291534423828125e-06, -0.0008411407470703125, -0.0011835098266601562, -8.58306884765625e-05, -4.52994936495088e-06, -9.071826934814453e-05, -0.00013731967192143202, -9.655952453613281e-06, -3.5047098208451644e-05, -1.9073486328125e-06, -0.0026264190673828125, -0.000194549560546875, -6.028606414794922, -9.5367431640625e-06, -0.8506240844726562, 0.0, -0.0006046295166015625, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -0.0018062591552734375, 0.0, -0.00046539306640625, -1.9073486328125e-06, -0.0042247772216796875, -0.06293296813964844, -0.0037854553665965796, -7.379054295597598e-05, -2.6702880859375e-05, -5.7220458984375e-05, 0.0, -0.00016438227612525225, -1.1444091796875e-05, -0.00601959228515625, -0.0003986358642578125, -3.814697265625e-06, -0.001129150390625, -0.00025177001953125, 0.0, -0.0006697177886962891, 0.0, -0.000102996826171875, 0.0, -5.924701690673828e-05, -1.71661376953125e-05, 0.0, -0.000152587890625, -7.62939453125e-05, -0.00013410145766101778, 0.0, -1.2278658687137067e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Dread", "Infernal", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "WARLOCK", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 29, 266, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "DEMON", "hole3": "WARLOCK", "hole0": "Dread Infernal", "_type": "Template4", "hole2": "WARLOCK", "hole7": "battlecry", "hole8": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}], "hole2": "CharacterSelector", "_type": "Template43", "hole1": [{"n": 1, "_type": "Num"}], "hole0": "Damage"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 6}, {"_type": "Template19", "hole1": 6, "hole0": 6}], "_type": "ClassDef", "name": "DreadInfernal"}], "_type": "Module"}, "score": -6.977456084747018, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.WARLOCK, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score_history": [-0.000640869140625, -2.6702880859375e-05, -3.4332275390625e-05, -0.0001068115234375, -1.1444091796875e-05, -0.00016652150952722877, -2.7418097943154862e-06, -0.008640049956738949, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.15406359732151e-05, -8.535290544386953e-05, -4.291534423828125e-06, -0.0008411407470703125, -0.0011835098266601562, -8.58306884765625e-05, -4.52994936495088e-06, -9.071826934814453e-05, -0.00013731967192143202, -9.655952453613281e-06, -3.5047098208451644e-05, -1.9073486328125e-06, -0.0026264190673828125, -0.000194549560546875, -0.003917694091796875, 0.0, -0.000217437744140625, 0.0, -0.0003070831298828125, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -0.00185394287109375, 0.0, -0.000461578369140625, -1.9073486328125e-06, -0.0042934417724609375, -5.1468424797058105, -0.07085524499416351, -0.004012380260974169, -1.0794886350631714, -4.827972952625714e-05, -2.3841855067985307e-07, -0.10989952087402344, -0.08658409118652344, -1.1444091796875e-05, -0.4621976315975189, -0.004103302024304867, 0.0, -0.0007114410400390625, -5.7220458984375e-05, -0.0005472592893056571, 0.0, -1.3232316632638685e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Dread", "Infernal", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 29, 264, "Damage", "<EOS>", "Minion", "Selector", "<EOS>", 346, 88, 325, "Both", "Player", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "DEMON", "hole3": "COMMON", "hole0": "Dread Infernal", "_type": "Template4", "hole2": "WARLOCK", "hole7": "battlecry", "hole8": {"hole3": [{"_type": "Template79", "hole0": "BothPlayer"}], "hole2": "MinionSelector", "_type": "Template43", "hole0": "Damage"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 6}, {"_type": "Template19", "hole1": 6, "hole0": 6}], "_type": "ClassDef", "name": "DreadInfernal"}], "_type": "Module"}, "score": -6.9914535300247, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(), MinionSelector(BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score_history": [-0.000640869140625, -2.6702880859375e-05, -3.4332275390625e-05, -0.0001068115234375, -1.1444091796875e-05, -0.00016652150952722877, -2.7418097943154862e-06, -0.008640049956738949, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.15406359732151e-05, -8.535290544386953e-05, -4.291534423828125e-06, -0.0008411407470703125, -0.0011835098266601562, -8.58306884765625e-05, -4.52994936495088e-06, -9.071826934814453e-05, -0.00013731967192143202, -9.655952453613281e-06, -3.5047098208451644e-05, -1.9073486328125e-06, -0.0026264190673828125, -0.000194549560546875, -0.003917694091796875, 0.0, -0.000217437744140625, 0.0, -0.0003070831298828125, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -0.00185394287109375, 0.0, -0.000461578369140625, -1.9073486328125e-06, -0.0042934417724609375, -0.06352901458740234, -0.003530830144882202, -7.390975224552676e-05, -2.6702880859375e-05, -5.91278076171875e-05, 0.0, -0.00017046094581019133, -9.5367431640625e-06, -0.0062656402587890625, -0.0004062652587890625, -3.814697265625e-06, -6.898972511291504, -2.288818359375e-05, 0.0, -6.4849853515625e-05, 0.0, -0.0002040863037109375, -1.9073486328125e-06, -0.0007191896438598633, -1.728534698486328e-05, 0.0, -0.0001277923583984375, -7.62939453125e-06, -0.0025447607040405273, -1.9073486328125e-06, -0.037578582763671875, -1.9073486328125e-06, -0.000301361083984375, -0.0001277923583984375, 0.0, -0.0004253387451171875, -8.392333984375e-05, -0.0008312584250234067, 0.0, -2.3126494852476753e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Dread", "Infernal", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 29, 266, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "DEMON", "hole3": "COMMON", "hole0": "Dread Infernal", "_type": "Template4", "hole2": "WARLOCK", "hole7": "battlecry", "hole8": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole2": "CharacterSelector", "_type": "Template43", "hole1": [{"n": 1, "_type": "Num"}], "hole0": "Damage"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 6}, {"_type": "Template19", "hole1": 6, "hole0": 6}], "_type": "ClassDef", "name": "DreadInfernal"}], "_type": "Module"}, "score": -7.0422145303871275, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score_history": [-0.000640869140625, -2.6702880859375e-05, -3.4332275390625e-05, -0.0001068115234375, -1.1444091796875e-05, -0.00016652150952722877, -2.7418097943154862e-06, -0.008640049956738949, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.15406359732151e-05, -8.535290544386953e-05, -4.291534423828125e-06, -0.0008411407470703125, -0.0011835098266601562, -8.58306884765625e-05, -4.52994936495088e-06, -9.071826934814453e-05, -0.00013731967192143202, -9.655952453613281e-06, -3.5047098208451644e-05, -1.9073486328125e-06, -0.0026264190673828125, -0.000194549560546875, -0.003917694091796875, 0.0, -0.000217437744140625, 0.0, -0.0003070831298828125, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -0.00185394287109375, 0.0, -0.000461578369140625, -1.9073486328125e-06, -0.0042934417724609375, -5.1468424797058105, -0.07085524499416351, -0.004012380260974169, -1.246436357498169, -0.00017606676556169987, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -0.0031249418389052153, -5.7220458984375e-06, -0.6796092987060547, -0.010102272033691406, -0.0019824490882456303, -8.487445302307606e-05, -0.00016223093552980572, -2.1457672119140625e-06, -0.01886284351348877, -8.96453857421875e-05, -0.000720977783203125, -0.000209808349609375, -0.019739389419555664, -2.86102294921875e-05], "choice_history": [96, 173, 358, 105, 152, "Dread", "Infernal", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 29, 264, "Damage", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", 121, 212, "6", "<EOS>", "6", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "DEMON", "hole3": "COMMON", "hole0": "Dread Infernal", "_type": "Template4", "hole2": "WARLOCK", "hole7": "battlecry", "hole8": {"hole3": [{"n": 1, "_type": "Num"}], "hole2": "Damage", "_type": "Template43", "hole0": "Damage"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 6}, {"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template17", "hole1": 6, "hole0": 6}], "_type": "ClassDef", "name": "DreadInfernal"}], "_type": "Module"}, "score": -7.2291555706285635, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(), Damage(1)))\n\n    def create_minion(self, player):\n        return Minion(6, 6, taunt=True)\n"}, {"score_history": [-0.000640869140625, -2.6702880859375e-05, -3.4332275390625e-05, -0.0001068115234375, -1.1444091796875e-05, -0.00016652150952722877, -2.7418097943154862e-06, -0.008640049956738949, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.15406359732151e-05, -8.535290544386953e-05, -4.291534423828125e-06, -0.0008411407470703125, -0.0011835098266601562, -8.58306884765625e-05, -4.52994936495088e-06, -9.071826934814453e-05, -0.00013731967192143202, -9.655952453613281e-06, -3.5047098208451644e-05, -1.9073486328125e-06, -0.0026264190673828125, -0.000194549560546875, -0.003917694091796875, 0.0, -0.000217437744140625, 0.0, -0.0003070831298828125, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -0.00185394287109375, 0.0, -0.000461578369140625, -1.9073486328125e-06, -0.0042934417724609375, -6.190036773681641, -0.0010920560453087091, -0.00018274782632943243, -0.0002117156982421875, -5.7220458984375e-06, 0.0, -0.00025043252389878035, -5.7220458984375e-06, -0.5806989669799805, -3.814697265625e-06, 0.0, -0.000133514404296875, -0.4648399353027344, -0.000946044921875, -0.000141143798828125, 0.0, -6.29425048828125e-05, -0.00018310546875, -1.9073486328125e-06, -0.6353442668914795, -7.748603820800781e-06, -0.0007610321044921875, -1.9073486328125e-06, -0.01916050910949707, -0.000225067138671875, 0.0, -0.0004215240478515625, -7.43865966796875e-05, -5.781483559985645e-05, 0.0, -1.1563453881535679e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Dread", "Infernal", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 29, 268, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Hero", "Selector", "<EOS>", 346, 51, 176, "Null", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "DEMON", "hole3": "COMMON", "hole0": "Dread Infernal", "_type": "Template4", "hole2": "WARLOCK", "hole7": "battlecry", "hole8": {"hole4": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole3": [{"value": "Null", "_type": "NameConstant"}], "hole0": "Damage", "_type": "Template43", "hole2": "HeroSelector", "hole1": [{"n": 1, "_type": "Num"}]}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 6}, {"_type": "Template19", "hole1": 6, "hole0": 6}], "_type": "ClassDef", "name": "DreadInfernal"}], "_type": "Module"}, "score": -7.920943494398443, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), HeroSelector(Null, picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score_history": [-0.000640869140625, -2.6702880859375e-05, -3.4332275390625e-05, -0.0001068115234375, -1.1444091796875e-05, -0.00016652150952722877, -2.7418097943154862e-06, -0.008640049956738949, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.15406359732151e-05, -8.535290544386953e-05, -4.291534423828125e-06, -0.0008411407470703125, -0.0011835098266601562, -8.58306884765625e-05, -4.52994936495088e-06, -9.071826934814453e-05, -0.00013731967192143202, -9.655952453613281e-06, -3.5047098208451644e-05, -1.9073486328125e-06, -0.0026264190673828125, -0.000194549560546875, -0.003917694091796875, 0.0, -0.000217437744140625, 0.0, -0.0003070831298828125, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -0.00185394287109375, 0.0, -0.000461578369140625, -1.9073486328125e-06, -0.0042934417724609375, -0.06352901458740234, -0.003530830144882202, -7.390975224552676e-05, -2.6702880859375e-05, -5.91278076171875e-05, 0.0, -0.00017046094581019133, -9.5367431640625e-06, -0.0062656402587890625, -0.0004062652587890625, -3.814697265625e-06, -0.0011234283447265625, -0.000255584716796875, 0.0, -0.0006735324859619141, 0.0, -0.000102996826171875, 0.0, -5.924701690673828e-05, -1.71661376953125e-05, 0.0, -0.000152587890625, -7.62939453125e-05, -8.952898979187012, 0.0, -1.716806582408026e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Dread", "Infernal", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 29, 266, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 122, 213, "3", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "DEMON", "hole3": "COMMON", "hole0": "Dread Infernal", "_type": "Template4", "hole2": "WARLOCK", "hole7": "battlecry", "hole8": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}], "hole2": "CharacterSelector", "_type": "Template43", "hole1": [{"n": 1, "_type": "Num"}], "hole0": "Damage"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 6}, {"_type": "Template19", "hole1": 6, "hole0": 3}], "_type": "ClassDef", "name": "DreadInfernal"}], "_type": "Module"}, "score": -9.055533416667231, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 6)\n"}]}
{"index": 28, "beams": [{"score_history": [-0.005069732666015625, -5.7220458984375e-06, -0.005090865306556225, -1.6689191397745162e-05, -9.65590606938349e-06, -3.5390257835388184e-07, -1.621246337890625e-05, 0.0, -8.58306884765625e-05, -0.0030775070190429688, -0.036029815673828125, -1.311301275563892e-06, -1.657007851463277e-05, -6.31808916295995e-06, -0.0001697540283203125, -6.079643753764685e-06, -7.43865966796875e-05, -0.00057220458984375, -9.5367431640625e-06, -0.005541798658668995, -0.0015505858464166522, -1.9073486328125e-06, -5.340576171875e-05, -1.52587890625e-05, -0.00012009497731924057, -2.288818359375e-05, -0.0033150911331176758, -2.682209014892578e-05, 0.0, -0.0001506805419921875, -9.5367431640625e-05, -1.9073486328125e-05, -0.000263214111328125, -1.9073486328125e-06, -0.000179290771484375, 0.0, -0.0014538764953613281, -6.520748138427734e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.0002079010009765625, -0.0004506111145019531, -1.1920928244535389e-07, -0.003787994384765625, 0.0, -0.0002498626708984375, -5.924701690673828e-05, -1.1920928244535389e-07, -0.00014698503946419805, 0.0, -0.001592874526977539, 0.0, -4.76837158203125e-05, -0.0004291534423828125, -9.5367431640625e-05, -9.536870493320748e-07, -7.033323527139146e-06, -8.870760211721063e-06, -3.576278118089249e-07], "choice_history": [97, 283, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "ElvenArcher", "_type": "Template5", "hole2": [{"hole4": [{"n": 1, "_type": "Num"}], "hole3": "Damage", "hole0": "Elven Archer", "_type": "Template15", "hole2": "COMMON", "hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": "CharacterSelector", "hole1": 1}], "hole1": "MinionCard"}, "score": -0.0702773710112723, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score_history": [-5.672935485839844, -0.0001544952392578125, -2.09808349609375e-05, -0.000148773193359375, -2.09808349609375e-05, -3.755022044060752e-05, -1.5735502529423684e-05, -0.0002273062855238095, -7.62939453125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -2.2530119167640805e-05, -0.00011706205259542912, -1.7642851162236184e-05, -0.0013866424560546875, -0.006550788879394531, -4.00543212890625e-05, -1.1920928244535389e-07, -2.2292137145996094e-05, -7.390969585685525e-06, -1.9073486328125e-06, -1.8834793081623502e-05, 0.0, -0.00019276140665169805, 0.0, -0.0009326934814453125, 0.0, -0.006302595138549805, -1.9073486328125e-06, -8.20159912109375e-05, 0.0, -4.57763671875e-05, -4.0531158447265625e-06, -0.11968719959259033, 0.0, -0.0006760358810424805, -1.9073486328125e-06, -0.009467124938964844, -0.030149459838867188, -0.024030428379774094, -4.506066761678085e-05, 0.0, -2.6702880859375e-05, 0.0, -0.0002504271105863154, -1.728534698486328e-05, -0.0022355318069458008, -1.4781950994802173e-05, 0.0, -0.012952804565429688, -0.000308990478515625, -1.9073486328125e-06, -0.0003833770751953125, 0.0, -6.67572021484375e-05, -1.9073486328125e-06, -0.0005379915237426758, -0.00010538101196289062, -1.9073486328125e-06, -0.0001010894775390625, -0.000133514404296875, -0.0007175207138061523, -1.1920928244535389e-07, -0.0018672943115234375, 0.0, -0.0001392364501953125, -0.00014126300811767578, 0.0, -0.0016078948974609375, -6.866455078125e-05, -1.9073304429184645e-05, -1.0728830375228426e-06, -9.671275620348752e-06, 0.0], "choice_history": [96, 173, 358, 105, 152, "Elven", "Archer", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 29, 266, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", 122, 213, "1", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "<UNK>", "hole3": "COMMON", "hole0": "Elven Archer", "_type": "Template4", "hole2": "ALL", "hole7": "battlecry", "hole8": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole2": "CharacterSelector", "_type": "Template43", "hole1": [{"n": 1, "_type": "Num"}], "hole0": "Damage"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 1}, {"_type": "Template19", "hole1": 1, "hole0": 1}], "_type": "ClassDef", "name": "ElvenArcher"}], "_type": "Module"}, "score": -5.8951597760618455, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score_history": [-0.005069732666015625, -5.7220458984375e-06, -5.902822494506836, -1.6689191397745162e-05, -9.65590606938349e-06, -3.5390257835388184e-07, -1.621246337890625e-05, 0.0, -8.58306884765625e-05, -0.0030775070190429688, -0.036029815673828125, -1.311301275563892e-06, -1.657007851463277e-05, -6.31808916295995e-06, -0.0001697540283203125, -6.079643753764685e-06, -7.43865966796875e-05, -0.00057220458984375, -9.5367431640625e-06, -0.005541798658668995, -0.0015505858464166522, -1.9073486328125e-06, -5.340576171875e-05, -1.52587890625e-05, -0.00012009497731924057, -2.288818359375e-05, -0.0033150911331176758, -2.682209014892578e-05, 0.0, -0.0001506805419921875, -9.5367431640625e-05, -1.9073486328125e-05, -0.000263214111328125, -1.9073486328125e-06, -0.000179290771484375, 0.0, -0.0014538764953613281, -6.520748138427734e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.0002079010009765625, -0.0004506111145019531, -1.1920928244535389e-07, -0.003787994384765625, 0.0, -0.0002498626708984375, -5.924701690673828e-05, -1.1920928244535389e-07, -0.00014698503946419805, 0.0, -0.001592874526977539, 0.0, -4.76837158203125e-05, -0.0004291534423828125, -9.5367431640625e-05, -9.536870493320748e-07, -7.033323527139146e-06, -8.870760211721063e-06, -3.576278118089249e-07], "choice_history": [97, 283, "<UNK>", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "<UNK>Archer", "_type": "Template5", "hole2": [{"hole4": [{"n": 1, "_type": "Num"}], "hole3": "Damage", "hole0": "Elven Archer", "_type": "Template15", "hole2": "COMMON", "hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": "CharacterSelector", "hole1": 1}], "hole1": "MinionCard"}, "score": -5.968009000211552, "inferred_code": "class <UNK>Archer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score_history": [-0.005069732666015625, -5.7220458984375e-06, -0.005090865306556225, -1.6689191397745162e-05, -9.65590606938349e-06, -3.5390257835388184e-07, -1.621246337890625e-05, 0.0, -8.58306884765625e-05, -0.0030775070190429688, -0.036029815673828125, -1.311301275563892e-06, -1.657007851463277e-05, -6.31808916295995e-06, -0.0001697540283203125, -6.079643753764685e-06, -7.43865966796875e-05, -0.00057220458984375, -9.5367431640625e-06, -0.005541798658668995, -0.0015505858464166522, -1.9073486328125e-06, -5.340576171875e-05, -1.52587890625e-05, -0.00012009497731924057, -2.288818359375e-05, -0.0033150911331176758, -2.682209014892578e-05, 0.0, -0.0001506805419921875, -9.5367431640625e-05, -1.9073486328125e-05, -0.000263214111328125, -1.9073486328125e-06, -0.000179290771484375, 0.0, -0.0014538764953613281, -6.520748138427734e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.0002079010009765625, -0.0004506111145019531, -1.1920928244535389e-07, -5.7855424880981445, -0.0015506744384765625, -0.005700111389160156, -0.0025075674057006836, -6.43729799776338e-06, -0.11067462712526321, 0.0, -0.000347137451171875, 0.0, -0.0026532411575317383, 0.0, -1.33514404296875e-05, -0.0002269744873046875, -0.0001316070556640625, -8.344653679159819e-07, -2.038458114839159e-05, -5.3948606364429e-06, -3.576278118089249e-07], "choice_history": [97, 283, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 35, 315, "Random", "Picker", "<EOS>", "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "ElvenArcher", "_type": "Template5", "hole2": [{"hole4": [{"n": 1, "_type": "Num"}], "hole3": "Damage", "hole0": "Elven Archer", "_type": "Template15", "hole2": "COMMON", "hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template74", "hole1": 1, "hole0": "RandomPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": "CharacterSelector", "hole1": 1}], "hole1": "MinionCard"}, "score": -5.973232057056343, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=RandomPicker(1))))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score_history": [-0.005069732666015625, -5.7220458984375e-06, -0.005090865306556225, -1.6689191397745162e-05, -9.65590606938349e-06, -3.5390257835388184e-07, -1.621246337890625e-05, 0.0, -8.58306884765625e-05, -0.0030775070190429688, -4.3807525634765625, -1.8596476365928538e-05, -1.4543528777721804e-05, -3.933906555175781e-06, -0.08287429809570312, -5.125993084220681e-06, -3.814697265625e-06, -0.0033884048461914062, -5.006785613659304e-06, -0.02388782426714897, -6.377505633281544e-05, -1.4649001359939575, -0.005673050880432129, -7.152555099310121e-07, -0.006740570068359375, -0.000270843505859375, -1.9073486328125e-06, -0.05216823145747185, -0.0038772819098085165, -1.1920928244535389e-07, -0.005554100964218378, -1.9073486328125e-06, -0.00041413307189941406, 0.0, -3.24249267578125e-05, -9.34600830078125e-05, -0.0003204345703125, -9.536745437799254e-07, -2.109982233378105e-05, -8.035567589104176e-06, -4.768370445162873e-07], "choice_history": [97, 283, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 204, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "damage", "<EOS>", "Weapon", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "ElvenArcher", "_type": "Template5", "hole2": [{"hole6": [{"_type": "Template79", "hole0": "EnemyPlayer"}], "hole3": "damage", "hole0": "Elven Archer", "_type": "Template15", "hole2": "COMMON", "hole5": "WeaponSelector", "hole1": 1}], "hole1": "MinionCard"}, "score": -6.044470338814669, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(damage(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score_history": [-0.005069732666015625, -5.7220458984375e-06, -6.140814781188965, -0.017830371856689453, -0.00011538793478393927, -1.1827796697616577e-07, -1.9669532775878906e-05, 0.0, -0.0001888275146484375, -0.006114959716796875, -0.03649139404296875, -1.6689286894688848e-06, -1.657007851463277e-05, -5.960462203802308e-06, -7.82012939453125e-05, -6.794897217332618e-06, -6.67572021484375e-05, -0.0005779266357421875, -9.5367431640625e-06, -0.005679669789969921, -0.0013808439252898097, -1.9073486328125e-06, -4.76837158203125e-05, -1.52587890625e-05, -0.00012897932901978493, -2.09808349609375e-05, -0.0031338930130004883, -2.872943878173828e-05, 0.0, -0.0001621246337890625, -0.0001068115234375, -2.09808349609375e-05, -0.0002613067626953125, 0.0, -0.0001773834228515625, 0.0, -0.0014767646789550781, -6.508827209472656e-05, -1.9073486328125e-06, -5.91278076171875e-05, -0.0002193450927734375, -0.0004429817199707031, -1.1920928244535389e-07, -0.0037975311279296875, 0.0, -0.000247955322265625, -6.115436553955078e-05, -1.1920928244535389e-07, -0.00014293193817138672, 0.0, -0.001653909683227539, 0.0, -4.76837158203125e-05, -0.0003986358642578125, -9.34600830078125e-05, 5.960353064438095e-07, -7.390948667307384e-06, -8.98938742466271e-06, -3.576278118089249e-07], "choice_history": [97, 283, "Force", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "ForceArcher", "_type": "Template5", "hole2": [{"hole4": [{"n": 1, "_type": "Num"}], "hole3": "Damage", "hole0": "Elven Archer", "_type": "Template15", "hole2": "COMMON", "hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": "CharacterSelector", "hole1": 1}], "hole1": "MinionCard"}, "score": -6.227305791748833, "inferred_code": "class ForceArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score_history": [-0.005069732666015625, -5.7220458984375e-06, -0.005090865306556225, -1.6689191397745162e-05, -9.65590606938349e-06, -3.5390257835388184e-07, -1.621246337890625e-05, 0.0, -8.58306884765625e-05, -0.0030775070190429688, -0.036029815673828125, -1.311301275563892e-06, -1.657007851463277e-05, -6.31808916295995e-06, -0.0001697540283203125, -6.079643753764685e-06, -7.43865966796875e-05, -0.00057220458984375, -9.5367431640625e-06, -0.005541798658668995, -0.0015505858464166522, -1.9073486328125e-06, -5.340576171875e-05, -1.52587890625e-05, -0.00012009497731924057, -2.288818359375e-05, -6.197183132171631, -3.814697265625e-06, 0.0, -0.0008602142333984375, -0.000377655029296875, -1.52587890625e-05, -0.0004825592041015625, -1.9073486328125e-06, -0.0002155303955078125, 0.0, -0.0022454261779785156, -6.902217864990234e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.0001983642578125, -0.0005189180374145508, -1.1920928244535389e-07, -0.0042667388916015625, 0.0, -0.0002536773681640625, -5.733966827392578e-05, -1.1920928244535389e-07, -0.00016486643289681524, 0.0, -0.0015718936920166016, 0.0, -4.9591064453125e-05, -0.000484466552734375, -9.5367431640625e-05, -8.34477987154969e-07, -6.794906312279636e-06, -7.440074114128947e-06, -3.576278118089249e-07], "choice_history": [97, 283, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Minion", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "ElvenArcher", "_type": "Template5", "hole2": [{"hole4": [{"n": 1, "_type": "Num"}], "hole3": "Damage", "hole0": "Elven Archer", "_type": "Template15", "hole2": "COMMON", "hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": "MinionSelector", "hole1": 1}], "hole1": "MinionCard"}, "score": -6.2667531150856775, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score_history": [-0.005069732666015625, -5.7220458984375e-06, -0.005090865306556225, -1.6689191397745162e-05, -9.65590606938349e-06, -3.5390257835388184e-07, -1.621246337890625e-05, 0.0, -8.58306884765625e-05, -0.0030775070190429688, -5.892968654632568, -1.311301275563892e-06, -7.987022399902344e-06, -4.768371127283899e-06, -7.2479248046875e-05, -3.5762897709901154e-07, -9.5367431640625e-06, -0.0006160736083984375, -2.0265579223632812e-06, -0.23447920382022858, -0.0027328256983309984, -1.9073486328125e-06, -0.000331878662109375, -7.62939453125e-06, -5.182027962291613e-06, -2.1457672119140625e-06, -0.22112953662872314, -3.4689903259277344e-05, 0.0, -0.0002314990560989827, 0.0, -0.0009341239929199219, 0.0, -1.33514404296875e-05, -0.0944976806640625, -8.96453857421875e-05, 1.788137979019666e-06, -2.3245540432981215e-05, -2.6548514142632484e-06, -3.576278118089249e-07], "choice_history": [97, 283, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "ElvenArcher", "_type": "Template5", "hole2": [{"hole4": [{"n": 1, "_type": "Num"}], "hole3": "Damage", "hole0": "Elven Archer", "_type": "Template15", "hole2": "COMMON", "hole5": "CharacterSelector", "hole1": 1}], "hole1": "MinionCard"}, "score": -6.461571533975217, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector()))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score_history": [-0.005069732666015625, -5.7220458984375e-06, -0.005090865306556225, -1.6689191397745162e-05, -9.65590606938349e-06, -3.5390257835388184e-07, -1.621246337890625e-05, 0.0, -8.58306884765625e-05, -0.0030775070190429688, -6.2899041175842285, -0.0001161031104857102, -7.62939453125e-06, -8.463532867608592e-05, -2.5033950805664062e-05, -8.583025191910565e-06, -1.9073486328125e-06, -0.029741287231445312, -3.814697265625e-06, -0.13480281829833984, -3.6239478504285216e-05, -3.814697265625e-06, -6.4849853515625e-05, -1.9073486328125e-06, -4.088878631591797e-05, -6.318092346191406e-06, -0.008508682250976562, -2.3841855067985307e-07, 0.0, -0.000102996826171875, -0.0006465911865234375, -3.0517578125e-05, -0.03743700310587883, -0.0036630630493164062, -1.9073486328125e-06, -0.001913909101858735, -1.9073486328125e-06, -0.00036072731018066406, 0.0, -2.09808349609375e-05, -0.00012969970703125, -6.4849853515625e-05, 4.768370445162873e-07, -2.95634672511369e-05, -1.7159618437290192e-06, -5.960462772236497e-07], "choice_history": [97, 283, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 210, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Hero", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "ElvenArcher", "_type": "Template5", "hole2": [{"hole4": [{"n": 1, "_type": "Num"}], "hole6": [{"_type": "Template79", "hole0": "EnemyPlayer"}], "hole3": "Damage", "hole0": "Elven Archer", "_type": "Template15", "hole2": "COMMON", "hole5": "HeroSelector", "hole1": 1}], "hole1": "MinionCard"}, "score": -6.521136989974281, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1), HeroSelector\n            (EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score_history": [-0.005069732666015625, -5.7220458984375e-06, -0.005090865306556225, -1.6689191397745162e-05, -9.65590606938349e-06, -3.5390257835388184e-07, -1.621246337890625e-05, 0.0, -8.58306884765625e-05, -0.0030775070190429688, -4.3807525634765625, -1.8596476365928538e-05, -1.4543528777721804e-05, -3.933906555175781e-06, -0.08287429809570312, -5.125993084220681e-06, -3.814697265625e-06, -0.0033884048461914062, -5.006785613659304e-06, -0.02388782426714897, -6.377505633281544e-05, -1.627492070198059, -4.899495979771018e-05, -2.09808349609375e-05, -0.19063091278076172, -5.7220458984375e-06, -0.00011685502977343276, -1.1920922133867862e-06, -0.012929916381835938, -0.000141143798828125, -0.00042426586151123047, 0.0, -3.4332275390625e-05, -0.47312164306640625, -0.000171661376953125, 1.1920928244535389e-07, -1.847726889536716e-05, -4.199115210212767e-06, -3.576278118089249e-07], "choice_history": [97, 283, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 204, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "damage", "<EOS>", "COMMON", "<EOS>", 346, 52, 179, "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "ElvenArcher", "_type": "Template5", "hole2": [{"hole6": [{"n": 1, "_type": "Num"}], "hole3": "damage", "hole0": "Elven Archer", "_type": "Template15", "hole2": "COMMON", "hole5": "COMMON", "hole1": 1}], "hole1": "MinionCard"}, "score": -6.80955306182404, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(damage(), COMMON(1)))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score_history": [-0.005069732666015625, -5.7220458984375e-06, -0.005090865306556225, -1.6689191397745162e-05, -9.65590606938349e-06, -3.5390257835388184e-07, -1.621246337890625e-05, 0.0, -8.58306884765625e-05, -0.0030775070190429688, -0.036029815673828125, -1.311301275563892e-06, -1.657007851463277e-05, -6.31808916295995e-06, -0.0001697540283203125, -6.079643753764685e-06, -7.43865966796875e-05, -0.00057220458984375, -9.5367431640625e-06, -6.71242094039917, -0.0024535402189940214, -0.025426864624023438, -0.008108139038085938, -5.53131103515625e-05, -1.4165998436510563e-06, -5.7220458984375e-06, -0.00868678092956543, -2.6702880859375e-05, 0.0, -0.0001678466796875, -9.1552734375e-05, -1.52587890625e-05, -0.0003910064697265625, 0.0, -0.0001811981201171875, 0.0, -0.001404404640197754, -8.618831634521484e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.000213623046875, -0.0004582405090332031, -1.1920928244535389e-07, -0.003864288330078125, 0.0, -0.0002498626708984375, -5.924701690673828e-05, -1.1920928244535389e-07, -0.00014889238809701055, 0.0, -0.0015947818756103516, 0.0, -4.76837158203125e-05, -0.0004425048828125, -9.5367431640625e-05, -7.152691523515387e-07, -6.9141146923357155e-06, -8.393486496061087e-06, -3.576278118089249e-07], "choice_history": [97, 283, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "ElvenArcher", "_type": "Template5", "hole2": [{"hole4": [{"n": 1, "_type": "Num"}], "hole3": "damage", "hole0": "Elven Archer", "_type": "Template15", "hole2": "COMMON", "hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": "CharacterSelector", "hole1": 1}], "hole1": "MinionCard"}, "score": -6.8170316601223675, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score_history": [-0.005069732666015625, -5.7220458984375e-06, -0.005090865306556225, -1.6689191397745162e-05, -9.65590606938349e-06, -3.5390257835388184e-07, -1.621246337890625e-05, 0.0, -8.58306884765625e-05, -0.0030775070190429688, -0.036029815673828125, -1.311301275563892e-06, -1.657007851463277e-05, -6.31808916295995e-06, -0.0001697540283203125, -6.079643753764685e-06, -7.43865966796875e-05, -0.00057220458984375, -9.5367431640625e-06, -6.2031402587890625, -0.000321269006235525, -0.0010204315185546875, -0.7178449630737305, -0.0001220703125, -3.2759562600404024e-05, -9.5367431640625e-06, -0.010334253311157227, -2.491474151611328e-05, 0.0, -0.00018310546875, -8.392333984375e-05, -1.52587890625e-05, -0.0004119873046875, -1.9073486328125e-06, -0.0001926422119140625, 0.0, -0.0013358592987060547, -9.191036224365234e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.0002155303955078125, -0.00043511390686035156, -1.1920928244535389e-07, -0.0041522979736328125, 0.0, -0.000247955322265625, -6.115436553955078e-05, -1.1920928244535389e-07, -0.00015091894601937383, 0.0, -0.001562356948852539, 0.0, -4.76837158203125e-05, -0.000446319580078125, -9.5367431640625e-05, -9.536870493320748e-07, -7.033323527139146e-06, -8.03597504273057e-06, -3.576278118089249e-07], "choice_history": [97, 283, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "COMMON", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "ElvenArcher", "_type": "Template5", "hole2": [{"hole4": [{"n": 1, "_type": "Num"}], "hole3": "COMMON", "hole0": "Elven Archer", "_type": "Template15", "hole2": "COMMON", "hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": "CharacterSelector", "hole1": 1}], "hole1": "MinionCard"}, "score": -6.992914135193516, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(COMMON(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score_history": [-0.005069732666015625, -5.7220458984375e-06, -0.005090865306556225, -1.6689191397745162e-05, -9.65590606938349e-06, -3.5390257835388184e-07, -1.621246337890625e-05, 0.0, -8.58306884765625e-05, -0.0030775070190429688, -0.036029815673828125, -1.311301275563892e-06, -1.657007851463277e-05, -6.31808916295995e-06, -0.0001697540283203125, -6.079643753764685e-06, -7.43865966796875e-05, -0.00057220458984375, -9.5367431640625e-06, -0.005541798658668995, -0.0015505858464166522, -1.9073486328125e-06, -5.340576171875e-05, -1.52587890625e-05, -0.00012009497731924057, -2.288818359375e-05, -0.0033150911331176758, -2.682209014892578e-05, 0.0, -0.0001506805419921875, -9.5367431640625e-05, -1.9073486328125e-05, -0.000263214111328125, -1.9073486328125e-06, -0.000179290771484375, 0.0, -0.0014538764953613281, -6.520748138427734e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.0002079010009765625, -0.0004506111145019531, -1.1920928244535389e-07, -0.003787994384765625, 0.0, -0.0002498626708984375, -5.924701690673828e-05, -1.1920928244535389e-07, -0.00014698503946419805, 0.0, -6.943926811218262, -3.814697265625e-06, -7.43865966796875e-05, -0.00106048583984375, -0.0002651214599609375, -1.19210699267569e-06, -4.6491513785440475e-06, -2.5122310034930706e-05, -2.3841855067985307e-07], "choice_history": [97, 283, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "p", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "ElvenArcher", "_type": "Template5", "hole2": [{"hole4": [{"n": 1, "_type": "Num"}], "hole3": "Damage", "hole0": "Elven Archer", "_type": "Template15", "hole2": "COMMON", "hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": "CharacterSelector", "hole1": 1}], "hole1": "MinionCard"}, "score": -7.0134568982948196, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n"}, {"score_history": [-0.005069732666015625, -5.7220458984375e-06, -0.005090865306556225, -1.6689191397745162e-05, -9.65590606938349e-06, -3.5390257835388184e-07, -1.621246337890625e-05, 0.0, -8.58306884765625e-05, -0.0030775070190429688, -4.3807525634765625, -1.8596476365928538e-05, -1.4543528777721804e-05, -3.933906555175781e-06, -0.08287429809570312, -5.125993084220681e-06, -3.814697265625e-06, -0.0033884048461914062, -5.006785613659304e-06, -0.02388782426714897, -6.377505633281544e-05, -0.8689364194869995, -0.0017905235290527344, -4.410734163684538e-06, -0.1810007095336914, -0.32224178314208984, -0.0002613067626953125, -0.3537493348121643, -0.008706449531018734, -0.002169489860534668, -8.189676736947149e-05, -0.9357659220695496, 0.0, -0.002246856689453125, -3.814697265625e-06, -0.01780569553375244, -0.00032830238342285156, -9.5367431640625e-06, -0.0006516608409583569, -1.9073486328125e-06, -0.0005398988723754883, 0.0, -1.9073486328125e-05, -0.0006580352783203125, -8.58306884765625e-05, -2.384196307048114e-07, -2.276871418871451e-05, -4.110741429030895e-06, -5.960462772236497e-07], "choice_history": [97, 283, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 204, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "damage", "<EOS>", "Minion", "Selector", "<EOS>", 347, 84, 315, "Attack", "Greater", "Than", "<EOS>", "6", "<EOS>", 88, 325, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "ElvenArcher", "_type": "Template5", "hole2": [{"hole6": [{"_type": "Template74", "hole1": 6, "hole0": "AttackGreaterThan"}, {"_type": "Template79", "hole0": "BothPlayer"}], "hole3": "damage", "hole0": "Elven Archer", "_type": "Template15", "hole2": "COMMON", "hole5": "MinionSelector", "hole1": 1}], "hole1": "MinionCard"}, "score": -7.20147702903202, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(damage(),\n            MinionSelector(AttackGreaterThan(6), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score_history": [-0.005069732666015625, -5.7220458984375e-06, -0.005090865306556225, -1.6689191397745162e-05, -9.65590606938349e-06, -3.5390257835388184e-07, -1.621246337890625e-05, 0.0, -8.58306884765625e-05, -0.0030775070190429688, -4.3807525634765625, -1.8596476365928538e-05, -1.4543528777721804e-05, -3.933906555175781e-06, -0.08287429809570312, -5.125993084220681e-06, -3.814697265625e-06, -0.0033884048461914062, -5.006785613659304e-06, -0.02388782426714897, -6.377505633281544e-05, -0.8689364194869995, -0.0017905235290527344, -4.410734163684538e-06, -0.1810007095336914, -0.32224178314208984, -0.0002613067626953125, -0.3537493348121643, -0.008706449531018734, -0.002169489860534668, -8.189676736947149e-05, -0.9942584037780762, -2.0265579223632812e-06, -0.0001888275146484375, -7.62939453125e-06, -0.06893253326416016, -0.00021457672119140625, -9.5367431640625e-06, -0.0003723619447555393, -1.9073486328125e-06, -0.0004749298095703125, 0.0, -1.71661376953125e-05, -0.0011272430419921875, -8.58306884765625e-05, -4.768380676978268e-07, -2.3245540432981215e-05, -3.5142002161592245e-06, -5.960462772236497e-07], "choice_history": [97, 283, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 204, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "damage", "<EOS>", "Minion", "Selector", "<EOS>", 347, 84, 315, "Attack", "Greater", "Than", "<EOS>", "1", "<EOS>", 88, 325, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "ElvenArcher", "_type": "Template5", "hole2": [{"hole6": [{"_type": "Template74", "hole1": 1, "hole0": "AttackGreaterThan"}, {"_type": "Template79", "hole0": "BothPlayer"}], "hole3": "damage", "hole0": "Elven Archer", "_type": "Template15", "hole2": "COMMON", "hole5": "MinionSelector", "hole1": 1}], "hole1": "MinionCard"}, "score": -7.309053586048606, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(damage(),\n            MinionSelector(AttackGreaterThan(1), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}]}
{"index": 29, "beams": [{"score_history": [-0.0047054290771484375, -8.58306884765625e-05, -5.7220458984375e-06, -0.000118255615234375, -0.00012969970703125, -1.9311753931106068e-05, -1.7886159184854478e-06, -0.00010382900654803962, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.0039664125069976e-05, -0.0002542734146118164, -1.5735622582724318e-05, -0.0001068115234375, -0.004406929016113281, -1.8107166290283203, -2.4556969947298057e-05, -0.00048150637303479016, -3.934848791686818e-06, -0.0005686283111572266, -1.4066616131458431e-05, -5.7220458984375e-06, -0.0016194581985473633, -1.9073486328125e-06, -0.0006008148193359375, -1.1444091796875e-05, -0.0001544952392578125, -4.9591064453125e-05, -0.000537872314453125, -0.000234007733524777, -2.9921395253040828e-05, -0.0060577392578125, -0.007058143615722656, -0.0007343292236328125, 0.0, -0.0038032366428524256, -4.768360213347478e-06, -0.007354378700256348, -0.00012218952178955078], "choice_history": [96, 173, 358, 105, 152, "Excess", "Mana", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 199, "Excess", " ", "Mana", "<EOS>", "0", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", 346, 51, 175, "False", "<EOS>", 126, 224, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": [{"value": true, "_type": "NameConstant"}], "hole3": "COMMON", "hole0": "Excess Mana", "_type": "Template14", "hole2": "DRUID", "hole1": 0}, {"_type": "Template3", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}], "_type": "ClassDef", "name": "ExcessMana"}], "_type": "Module"}, "score": -1.8502035150499978, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n"}, {"score_history": [-0.0047054290771484375, -8.58306884765625e-05, -5.7220458984375e-06, -0.000118255615234375, -0.00012969970703125, -1.9311753931106068e-05, -1.7886159184854478e-06, -0.00010382900654803962, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.0039664125069976e-05, -0.0002542734146118164, -1.5735622582724318e-05, -0.0001068115234375, -0.004406929016113281, -0.19523239135742188, -3.933906555175781e-06, -0.00014578920672647655, -1.4305323929875158e-06, -9.310245513916016e-05, -1.215931297338102e-05, -5.7220458984375e-06, -0.001033782958984375, -1.9073486328125e-06, -0.5968561172485352, 0.0, -0.0001220703125, -3.814697265625e-05, -1.33514404296875e-05, -0.00024330615997314453, -5.7220458984375e-06, -0.000263214111328125, -9.1552734375e-05, -1.52587890625e-05, 0.0, -9.918212890625e-05, -2.288818359375e-05, -0.0002652406692504883, -7.62939453125e-06, -0.00011444091796875, 0.0, -0.10266530513763428, 0.0, -0.0029077529907226562, -0.0699319839477539, -0.00054168701171875, -1.9073486328125e-06, -0.000110626220703125, 0.0, -0.03397417068481445, -5.960462772236497e-07, -0.0031960008200258017, -1.4305012882687151e-05, -0.5127065181732178, -4.768370445162873e-07, -0.15285205841064453, -0.020300865173339844, -0.000698089599609375, -1.33514404296875e-05, 0.0, -0.0002857049403246492, -4.768370445162873e-07, -0.07667659968137741, -5.733966827392578e-05, -0.08370795845985413, -0.9110785126686096, -0.0006847381591796875, -9.5367431640625e-05, -0.11139333248138428, -6.31808916295995e-06], "choice_history": [96, 173, 358, 105, 152, "Excess", "Mana", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Excess", " ", "Mana", "<EOS>", "0", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "Mana", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Excess Mana", "_type": "Template14", "hole2": "DRUID", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 0}, {"hole2": [{"hole2": 0, "_type": "Template69", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "ExcessMana"}], "_type": "Module"}, "score": -2.8886045568352188, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(0), self)\n"}, {"score_history": [-0.0047054290771484375, -8.58306884765625e-05, -5.7220458984375e-06, -0.000118255615234375, -0.00012969970703125, -1.9311753931106068e-05, -1.7886159184854478e-06, -0.00010382900654803962, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.0039664125069976e-05, -0.0002542734146118164, -1.5735622582724318e-05, -0.0001068115234375, -0.004406929016113281, -0.19523239135742188, -3.933906555175781e-06, -0.00014578920672647655, -1.4305323929875158e-06, -9.310245513916016e-05, -1.215931297338102e-05, -5.7220458984375e-06, -0.001033782958984375, -1.9073486328125e-06, -1.0497312545776367, -1.9073486328125e-06, -8.58306884765625e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.0003345012664794922, -1.9073486328125e-06, -7.82012939453125e-05, -0.0001316070556640625, -1.52587890625e-05, 0.0, -0.0001125335693359375, -2.86102294921875e-05, -0.0002576112747192383, -5.7220458984375e-06, -0.0001068115234375, 0.0, -0.09609496593475342, 0.0, -0.004062652587890625, -0.05039024353027344, -0.000392913818359375, 0.0, -0.000110626220703125, 0.0, -0.034171104431152344, -4.768370445162873e-07, -0.003069877391681075, -1.3232143828645349e-05, -0.40398740768432617, -5.960462772236497e-07, -0.12953948974609375, -0.019845008850097656, -0.000698089599609375, -1.33514404296875e-05, 0.0, -0.00028606245177797973, -4.768370445162873e-07, -0.07514750212430954, -5.733966827392578e-05, -0.08511331677436829, -0.9082351922988892, -0.00067138671875, -9.34600830078125e-05, -0.11236345767974854, -6.31808916295995e-06], "choice_history": [96, 173, 358, 105, 152, "Excess", "Mana", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Excess", " ", "Mana", "<EOS>", "0", "<EOS>", "DRUID", "<EOS>", "EPIC", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "Mana", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "EPIC", "hole0": "Excess Mana", "_type": "Template14", "hole2": "DRUID", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 0}, {"hole2": [{"hole2": 0, "_type": "Template69", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "ExcessMana"}], "_type": "Module"}, "score": -3.1818617336094235, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(0), self)\n"}, {"score_history": [-0.0047054290771484375, -8.58306884765625e-05, -5.7220458984375e-06, -0.000118255615234375, -0.00012969970703125, -1.9311753931106068e-05, -1.7886159184854478e-06, -0.00010382900654803962, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.0039664125069976e-05, -0.0002542734146118164, -1.5735622582724318e-05, -0.0001068115234375, -0.004406929016113281, -0.19523239135742188, -3.933906555175781e-06, -0.00014578920672647655, -1.4305323929875158e-06, -9.310245513916016e-05, -1.215931297338102e-05, -5.7220458984375e-06, -0.001033782958984375, -1.9073486328125e-06, -0.5968561172485352, 0.0, -0.0001220703125, -3.814697265625e-05, -1.33514404296875e-05, -0.00024330615997314453, -5.7220458984375e-06, -0.000263214111328125, -9.1552734375e-05, -1.52587890625e-05, 0.0, -9.918212890625e-05, -2.288818359375e-05, -0.0002652406692504883, -7.62939453125e-06, -0.00011444091796875, 0.0, -0.10266530513763428, 0.0, -0.0029077529907226562, -0.0699319839477539, -0.00054168701171875, -1.9073486328125e-06, -0.000110626220703125, 0.0, -0.03397417068481445, -5.960462772236497e-07, -0.0031960008200258017, -1.4305012882687151e-05, -0.5127065181732178, -4.768370445162873e-07, -1.9683055877685547, -0.04222297668457031, -6.29425048828125e-05, -0.04360836371779442, -0.09833534061908722], "choice_history": [96, 173, 358, 105, 152, "Excess", "Mana", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Excess", " ", "Mana", "<EOS>", "0", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 346, 52, 179, "Mana", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Excess Mana", "_type": "Template14", "hole2": "DRUID", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 0}, {"hole2": [{"n": 0, "_type": "Num"}], "_type": "Template3", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "ExcessMana"}], "_type": "Module"}, "score": -3.683289055089233, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(0)\n"}, {"score_history": [-0.0047054290771484375, -8.58306884765625e-05, -5.7220458984375e-06, -0.000118255615234375, -0.00012969970703125, -1.9311753931106068e-05, -1.7886159184854478e-06, -0.00010382900654803962, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.0039664125069976e-05, -0.0002542734146118164, -1.5735622582724318e-05, -0.0001068115234375, -0.004406929016113281, -0.19523239135742188, -3.933906555175781e-06, -0.00014578920672647655, -1.4305323929875158e-06, -9.310245513916016e-05, -1.215931297338102e-05, -5.7220458984375e-06, -0.001033782958984375, -1.9073486328125e-06, -0.5968561172485352, 0.0, -0.0001220703125, -3.814697265625e-05, -1.33514404296875e-05, -0.00024330615997314453, -5.7220458984375e-06, -0.000263214111328125, -9.1552734375e-05, -1.52587890625e-05, 0.0, -9.918212890625e-05, -2.288818359375e-05, -0.0002652406692504883, -7.62939453125e-06, -0.00011444091796875, 0.0, -0.10266530513763428, 0.0, -0.0029077529907226562, -0.0699319839477539, -0.00054168701171875, -1.9073486328125e-06, -0.000110626220703125, 0.0, -0.03397417068481445, -5.960462772236497e-07, -0.0031960008200258017, -1.4305012882687151e-05, -2.1706340312957764, -1.4305104514278355e-06, -3.814697265625e-06, -0.2993030548095703, 0.0, -0.3387417197227478, -2.0742329070344567e-05], "choice_history": [96, 173, 358, 105, 152, "Excess", "Mana", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Excess", " ", "Mana", "<EOS>", "0", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Excess Mana", "_type": "Template14", "hole2": "DRUID", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 0}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "ExcessMana"}], "_type": "Module"}, "score": -3.826751642148963, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score_history": [-0.0047054290771484375, -8.58306884765625e-05, -5.7220458984375e-06, -0.000118255615234375, -0.00012969970703125, -1.9311753931106068e-05, -1.7886159184854478e-06, -0.00010382900654803962, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.0039664125069976e-05, -0.0002542734146118164, -1.5735622582724318e-05, -0.0001068115234375, -0.004406929016113281, -0.19523239135742188, -3.933906555175781e-06, -0.00014578920672647655, -1.4305323929875158e-06, -9.310245513916016e-05, -1.215931297338102e-05, -5.7220458984375e-06, -0.001033782958984375, -1.9073486328125e-06, -0.5968561172485352, 0.0, -0.0001220703125, -3.814697265625e-05, -1.33514404296875e-05, -0.00024330615997314453, -5.7220458984375e-06, -0.000263214111328125, -9.1552734375e-05, -1.52587890625e-05, 0.0, -9.918212890625e-05, -2.288818359375e-05, -0.0002652406692504883, -7.62939453125e-06, -0.00011444091796875, 0.0, -0.10266530513763428, 0.0, -0.0029077529907226562, -2.9055376052856445, -0.08962821960449219, 0.0, -0.005249849520623684, -1.1920928244535389e-07, -0.015556097030639648, -2.0265579223632812e-06], "choice_history": [96, 173, 358, 105, 152, "Excess", "Mana", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Excess", " ", "Mana", "<EOS>", "0", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 224, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Excess Mana", "_type": "Template14", "hole2": "DRUID", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 0}, {"_type": "Template3", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}], "_type": "ClassDef", "name": "ExcessMana"}], "_type": "Module"}, "score": -3.9262494888998773, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n"}, {"score_history": [-0.0047054290771484375, -8.58306884765625e-05, -5.7220458984375e-06, -0.000118255615234375, -0.00012969970703125, -1.9311753931106068e-05, -1.7886159184854478e-06, -0.00010382900654803962, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.0039664125069976e-05, -0.0002542734146118164, -1.5735622582724318e-05, -0.0001068115234375, -0.004406929016113281, -0.19523239135742188, -3.933906555175781e-06, -0.00014578920672647655, -1.4305323929875158e-06, -9.310245513916016e-05, -1.215931297338102e-05, -5.7220458984375e-06, -0.001033782958984375, -1.9073486328125e-06, -0.5968561172485352, 0.0, -0.0001220703125, -3.814697265625e-05, -1.33514404296875e-05, -0.00024330615997314453, -5.7220458984375e-06, -0.000263214111328125, -9.1552734375e-05, -1.52587890625e-05, 0.0, -9.918212890625e-05, -2.288818359375e-05, -0.0002652406692504883, -7.62939453125e-06, -0.00011444091796875, 0.0, -0.10266530513763428, 0.0, -0.0029077529907226562, -0.0699319839477539, -0.00054168701171875, -1.9073486328125e-06, -0.000110626220703125, 0.0, -0.03397417068481445, -5.960462772236497e-07, -0.0031960008200258017, -1.4305012882687151e-05, -0.5127065181732178, -4.768370445162873e-07, -0.15285205841064453, -0.020300865173339844, -0.000698089599609375, -1.33514404296875e-05, 0.0, -0.0002857049403246492, -4.768370445162873e-07, -0.07667659968137741, -5.733966827392578e-05, -0.08370795845985413, -0.715015172958374, -0.12835153937339783, -1.5495396852493286, -0.010488510131835938, -0.0002155303955078125, -0.04727470874786377, -8.344629350176547e-06], "choice_history": [96, 173, 358, 105, 152, "Excess", "Mana", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Excess", " ", "Mana", "<EOS>", "0", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "Mana", "Mana", "Mana", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Excess Mana", "_type": "Template14", "hole2": "DRUID", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 0}, {"hole2": [{"hole2": 0, "_type": "Template69", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "ExcessMana"}], "_type": "Module"}, "score": -4.3162397794909, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(0), self)\n"}, {"score_history": [-0.0047054290771484375, -8.58306884765625e-05, -5.7220458984375e-06, -0.000118255615234375, -0.00012969970703125, -1.9311753931106068e-05, -1.7886159184854478e-06, -0.00010382900654803962, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.0039664125069976e-05, -0.0002542734146118164, -1.5735622582724318e-05, -0.0001068115234375, -0.004406929016113281, -0.19523239135742188, -3.933906555175781e-06, -0.00014578920672647655, -1.4305323929875158e-06, -9.310245513916016e-05, -1.215931297338102e-05, -5.7220458984375e-06, -0.001033782958984375, -1.9073486328125e-06, -1.0497312545776367, -1.9073486328125e-06, -8.58306884765625e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.0003345012664794922, -1.9073486328125e-06, -7.82012939453125e-05, -0.0001316070556640625, -1.52587890625e-05, 0.0, -0.0001125335693359375, -2.86102294921875e-05, -0.0002576112747192383, -5.7220458984375e-06, -0.0001068115234375, 0.0, -0.09609496593475342, 0.0, -0.004062652587890625, -0.05039024353027344, -0.000392913818359375, 0.0, -0.000110626220703125, 0.0, -0.034171104431152344, -4.768370445162873e-07, -0.003069877391681075, -1.3232143828645349e-05, -2.2597603797912598, -1.4305104514278355e-06, -3.814697265625e-06, -0.28286075592041016, 0.0, -0.3382253050804138, -2.121916077157948e-05], "choice_history": [96, 173, 358, 105, 152, "Excess", "Mana", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Excess", " ", "Mana", "<EOS>", "0", "<EOS>", "DRUID", "<EOS>", "EPIC", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "EPIC", "hole0": "Excess Mana", "_type": "Template14", "hole2": "DRUID", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 0}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "ExcessMana"}], "_type": "Module"}, "score": -4.326676182677829, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score_history": [-0.0047054290771484375, -8.58306884765625e-05, -5.7220458984375e-06, -0.000118255615234375, -0.00012969970703125, -1.9311753931106068e-05, -1.7886159184854478e-06, -0.00010382900654803962, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.0039664125069976e-05, -0.0002542734146118164, -1.5735622582724318e-05, -0.0001068115234375, -0.004406929016113281, -0.19523239135742188, -3.933906555175781e-06, -0.00014578920672647655, -1.4305323929875158e-06, -9.310245513916016e-05, -1.215931297338102e-05, -5.7220458984375e-06, -0.001033782958984375, -1.9073486328125e-06, -0.5968561172485352, 0.0, -0.0001220703125, -3.814697265625e-05, -1.33514404296875e-05, -0.00024330615997314453, -5.7220458984375e-06, -0.000263214111328125, -9.1552734375e-05, -1.52587890625e-05, 0.0, -9.918212890625e-05, -2.288818359375e-05, -0.0002652406692504883, -7.62939453125e-06, -0.00011444091796875, 0.0, -0.10266530513763428, 0.0, -0.0029077529907226562, -0.0699319839477539, -0.00054168701171875, -1.9073486328125e-06, -0.000110626220703125, 0.0, -0.03397417068481445, -5.960462772236497e-07, -0.0031960008200258017, -1.4305012882687151e-05, -1.6437633037567139, -4.398822784423828e-05, -6.67572021484375e-05, -1.2828140258789062, -1.33514404296875e-05, -0.4925819933414459, -0.019508641213178635], "choice_history": [96, 173, 358, 105, 152, "Excess", "Mana", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Excess", " ", "Mana", "<EOS>", "0", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 346, 52, 179, "Mana", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Excess Mana", "_type": "Template14", "hole2": "DRUID", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 0}, {"hole2": [{"n": 0, "_type": "Num"}], "_type": "Template3", "hole1": "add_effect", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "ExcessMana"}], "_type": "Module"}, "score": -4.456838909844748, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(0)\n"}, {"score_history": [-0.0047054290771484375, -8.58306884765625e-05, -5.7220458984375e-06, -0.000118255615234375, -0.00012969970703125, -1.9311753931106068e-05, -1.7886159184854478e-06, -0.00010382900654803962, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.0039664125069976e-05, -0.0002542734146118164, -1.5735622582724318e-05, -0.0001068115234375, -0.004406929016113281, -0.19523239135742188, -3.933906555175781e-06, -0.00014578920672647655, -1.4305323929875158e-06, -9.310245513916016e-05, -1.215931297338102e-05, -5.7220458984375e-06, -0.001033782958984375, -1.9073486328125e-06, -1.0497312545776367, -1.9073486328125e-06, -8.58306884765625e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.0003345012664794922, -1.9073486328125e-06, -7.82012939453125e-05, -0.0001316070556640625, -1.52587890625e-05, 0.0, -0.0001125335693359375, -2.86102294921875e-05, -0.0002576112747192383, -5.7220458984375e-06, -0.0001068115234375, 0.0, -0.09609496593475342, 0.0, -0.004062652587890625, -3.3114490509033203, -0.15747642517089844, 0.0, -0.010601753368973732, -1.1920928244535389e-07, -0.01853311061859131, -2.0265579223632812e-06], "choice_history": [96, 173, 358, 105, 152, "Excess", "Mana", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Excess", " ", "Mana", "<EOS>", "0", "<EOS>", "DRUID", "<EOS>", "EPIC", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 224, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "EPIC", "hole0": "Excess Mana", "_type": "Template14", "hole2": "DRUID", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 0}, {"_type": "Template3", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}], "_type": "ClassDef", "name": "ExcessMana"}], "_type": "Module"}, "score": -4.855717288973203, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n"}, {"score_history": [-0.0047054290771484375, -8.58306884765625e-05, -5.7220458984375e-06, -0.000118255615234375, -0.00012969970703125, -1.9311753931106068e-05, -1.7886159184854478e-06, -0.00010382900654803962, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.0039664125069976e-05, -0.0002542734146118164, -1.5735622582724318e-05, -0.0001068115234375, -0.004406929016113281, -0.19523239135742188, -3.933906555175781e-06, -0.00014578920672647655, -1.4305323929875158e-06, -9.310245513916016e-05, -1.215931297338102e-05, -5.7220458984375e-06, -0.001033782958984375, -1.9073486328125e-06, -0.5968561172485352, 0.0, -0.0001220703125, -3.814697265625e-05, -1.33514404296875e-05, -0.00024330615997314453, -5.7220458984375e-06, -0.000263214111328125, -9.1552734375e-05, -1.52587890625e-05, 0.0, -9.918212890625e-05, -2.288818359375e-05, -0.0002652406692504883, -7.62939453125e-06, -0.00011444091796875, 0.0, -0.10266530513763428, 0.0, -0.0029077529907226562, -0.0699319839477539, -0.00054168701171875, -1.9073486328125e-06, -0.000110626220703125, 0.0, -0.03397417068481445, -5.960462772236497e-07, -0.0031960008200258017, -1.4305012882687151e-05, -1.6437633037567139, -4.398822784423828e-05, -6.67572021484375e-05, -0.34671592712402344, -1.33514404296875e-05, -7.62939453125e-05, 0.0, -0.23916281759738922, -3.0159948437358253e-05, -0.000331878662109375, -0.01329803466796875, -0.00017547607421875, -0.5171403884887695, -3.0517578125e-05, -0.7322797775268555, -4.38690185546875e-05, -1.0391297340393066, -3.933906555175781e-06], "choice_history": [96, 173, 358, 105, 152, "Excess", "Mana", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Excess", " ", "Mana", "<EOS>", "0", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 346, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "card_drawn", "<EOS>", 50, 174, "demon_card", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Excess Mana", "_type": "Template14", "hole2": "DRUID", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 0}, {"hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "Attribute"}, "args": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "demon_card"}]}], "_type": "Template3", "hole1": "add_effect", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "ExcessMana"}], "_type": "Module"}, "score": -5.550353057988843, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Attribute('card_drawn', demon_card))\n"}, {"score_history": [-0.0047054290771484375, -8.58306884765625e-05, -5.7220458984375e-06, -16.203937530517578], "choice_history": [96, 173, 358, 104], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score": -16.2087345123291, "inferred_code": "break\n"}, {"score_history": [-0.0047054290771484375, -8.58306884765625e-05, -22.13758087158203], "choice_history": [96, 173, 357], "model_output": {"body": [], "_type": "Module"}, "score": -22.142372131347656, "inferred_code": ""}]}
{"index": 30, "beams": [{"score_history": [-0.027280807495117188, -7.05718994140625e-05, -1.9073486328125e-06, -9.918212890625e-05, -2.47955322265625e-05, -2.9802276912960224e-06, -0.00024434964871034026, -9.5367431640625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -0.0010514564346522093, -1.4781950994802173e-05, -2.0265579223632812e-06, -2.09808349609375e-05, -0.03667640686035156, -0.0067653656005859375, -3.576278118089249e-07, -1.9073486328125e-06, -7.330933294724673e-05, -3.814697265625e-06, -0.000786423624958843, 0.0, -0.0003129243850708008, -1.9073486328125e-06, -0.02451014518737793, -9.5367431640625e-06, -0.002025604248046875, 0.0, -0.000514984130859375, -9.5367431640625e-06, -0.002399444580078125, -0.000377655029296875, -9.72747802734375e-05, -1.71661376953125e-05, -0.019232749938964844, -5.7220458984375e-06, -0.018015027046203613, -2.0265579223632812e-06, -0.02062702178955078, -0.0003910064697265625, -0.0002079010009765625, -2.47955322265625e-05, -0.00046539306640625, -2.9802317840221804e-06, -0.000530242919921875, -2.6702880859375e-05, -0.00032806396484375, -0.0002117156982421875, -0.001190185546875, -1.9073486328125e-06, -0.016775131225585938, -2.6702880859375e-05, -0.0002307891845703125, -3.814697265625e-06, -0.0015728473663330078, -1.0371208190917969e-05, -0.0035054683685302734, -7.62939453125e-06, -1.52587890625e-05, -0.0050029754638671875, 0.0, -0.0025806427001953125, -0.0009632110595703125, -0.0003299713134765625, -2.47955322265625e-05, -0.0021684160456061363, -7.271740287251305e-06, -0.0018281936645507812, 0.0, -0.0020885467529296875, -2.09808349609375e-05, -5.7220458984375e-05, 0.0, -0.00027906891773454845, -6.43729799776338e-06, -0.011808395385742188, -1.9073486328125e-06, -0.02804279327392578, -0.001377105712890625, -6.866455078125e-05, 0.0, -5.91278076171875e-05, 0.0, -0.005532264709472656, 0.0, -7.62939453125e-06, 0.0, -0.001509596244432032, 0.0, -3.814697265625e-06, -0.0006198883056640625, 0.0, -0.0013375282287597656, -1.8954096958623268e-05], "choice_history": [96, 173, 358, 105, 152, "Execute", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 167, 0, 282, "target", "<EOS>", 15, 146, 2, 347, 46, 153, 13, 143, 21, 174, "target", "<EOS>", "health", "<EOS>", 343, 12, 346, 85, 317, 21, 174, "target", "<EOS>", "calculate_max_health", "<EOS>", 85, 317, 21, 174, "target", "<EOS>", "spell_targetable", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_enemy_minion_spell_target", "hole3": "FREE", "hole0": "Execute", "_type": "Template4", "hole2": "WARRIOR", "hole7": "filter_func", "hole8": {"body": {"values": [{"comparators": [{"_type": "Template76", "hole1": "calculate_max_health", "hole0": {"_type": "Name", "id": "target"}}], "_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}}, {"_type": "Template76", "hole1": "spell_targetable", "hole0": {"_type": "Name", "id": "target"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "target"}}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 1}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Execute"}], "_type": "Module"}, "score": -0.2526288477551475, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score_history": [-0.027280807495117188, -7.05718994140625e-05, -1.9073486328125e-06, -9.918212890625e-05, -2.47955322265625e-05, -2.9802276912960224e-06, -0.00024434964871034026, -9.5367431640625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -0.0010514564346522093, -1.4781950994802173e-05, -2.0265579223632812e-06, -2.09808349609375e-05, -3.411703109741211, -0.0001125335693359375, -3.576278118089249e-07, -3.576278118089249e-07, -4.768370445162873e-07, -1.9073486328125e-06, -0.000385045976145193, 0.0, -0.00039565563201904297, 0.0, -0.000392913818359375, -0.0002346038818359375, -1.52587890625e-05, -0.000492095947265625, -1.9073486328125e-06, -0.013060569763183594, -1.33514404296875e-05, -9.34600830078125e-05, -3.814697265625e-06, -3.814697265625e-05, -2.09808349609375e-05, -0.0006467103958129883, -0.000324249267578125, -0.0002384185791015625, -4.57763671875e-05, -0.11104345321655273, -5.7220458984375e-06, -0.0003528594970703125, -0.0033168792724609375, -1.71661376953125e-05, 0.0, -0.0002231597900390625, 0.0, -8.0108642578125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.003784891916438937, 0.0, -5.7220458984375e-06, -0.0004367828369140625, 0.0, -0.00081634521484375, -1.847726889536716e-05], "choice_history": [96, 173, 358, 105, 152, "Execute", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Execute", "_type": "Template14", "hole2": "WARRIOR", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Execute"}], "_type": "Module"}, "score": -3.577217219133445, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score_history": [-0.027280807495117188, -7.05718994140625e-05, -1.9073486328125e-06, -9.918212890625e-05, -2.47955322265625e-05, -2.9802276912960224e-06, -0.00024434964871034026, -9.5367431640625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -0.0010514564346522093, -1.4781950994802173e-05, -2.0265579223632812e-06, -2.09808349609375e-05, -0.03667640686035156, -0.0067653656005859375, -3.576278118089249e-07, -1.9073486328125e-06, -7.330933294724673e-05, -3.814697265625e-06, -0.000786423624958843, 0.0, -0.0003129243850708008, -1.9073486328125e-06, -3.8068015575408936, -7.62939453125e-06, -0.3839426040649414, 0.0, -0.002582550048828125, -1.9073486328125e-06, -0.0019397735595703125, -3.4332275390625e-05, -7.82012939453125e-05, -5.7220458984375e-06, -0.03161334991455078, -5.7220458984375e-06, -0.02114689350128174, -2.0265579223632812e-06, -0.01778697967529297, -0.0003223419189453125, -0.00025177001953125, -2.47955322265625e-05, -0.00045883655548095703, -2.9802317840221804e-06, -0.000518798828125, -2.6702880859375e-05, -0.0003299713134765625, -0.000217437744140625, -0.00118255615234375, -1.9073486328125e-06, -0.015314102172851562, -2.6702880859375e-05, -0.0002288818359375, -3.814697265625e-06, -0.0015652179718017578, -1.0371208190917969e-05, -0.0035092830657958984, -7.62939453125e-06, -1.52587890625e-05, -0.0050182342529296875, 0.0, -0.0025815963745117188, -0.0009632110595703125, -0.00032806396484375, -2.47955322265625e-05, -0.002167581580579281, -7.271740287251305e-06, -0.0018281936645507812, 0.0, -0.0020923614501953125, -2.09808349609375e-05, -5.7220458984375e-05, 0.0, -0.0002800225920509547, -6.43729799776338e-06, -0.011804580688476562, -1.9073486328125e-06, -0.02803325653076172, -0.0013742446899414062, -6.866455078125e-05, 0.0, -5.91278076171875e-05, 0.0, -0.005524635314941406, 0.0, -7.62939453125e-06, 0.0, -0.0015093579422682524, 0.0, -3.814697265625e-06, -0.000621795654296875, 0.0, -0.0013375282287597656, -1.883488948806189e-05], "choice_history": [96, 173, 358, 105, 152, "Execute", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "FREE", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 167, 0, 282, "target", "<EOS>", 15, 146, 2, 347, 46, 153, 13, 143, 21, 174, "target", "<EOS>", "health", "<EOS>", 343, 12, 346, 85, 317, 21, 174, "target", "<EOS>", "calculate_max_health", "<EOS>", 85, 317, 21, 174, "target", "<EOS>", "spell_targetable", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "FREE", "hole6": "find_enemy_minion_spell_target", "hole3": "FREE", "hole0": "Execute", "_type": "Template4", "hole2": "WARRIOR", "hole7": "filter_func", "hole8": {"body": {"values": [{"comparators": [{"_type": "Template76", "hole1": "calculate_max_health", "hole0": {"_type": "Name", "id": "target"}}], "_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}}, {"_type": "Template76", "hole1": "spell_targetable", "hole0": {"_type": "Name", "id": "target"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "target"}}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 1}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Execute"}], "_type": "Module"}, "score": -4.429220601833038, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, FREE=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score_history": [-0.027280807495117188, -7.05718994140625e-05, -1.9073486328125e-06, -9.918212890625e-05, -2.47955322265625e-05, -2.9802276912960224e-06, -0.00024434964871034026, -9.5367431640625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -0.0010514564346522093, -1.4781950994802173e-05, -2.0265579223632812e-06, -2.09808349609375e-05, -0.03667640686035156, -0.0067653656005859375, -3.576278118089249e-07, -1.9073486328125e-06, -7.330933294724673e-05, -3.814697265625e-06, -0.000786423624958843, 0.0, -0.0003129243850708008, -1.9073486328125e-06, -0.02451014518737793, -9.5367431640625e-06, -0.002025604248046875, 0.0, -0.000514984130859375, -9.5367431640625e-06, -0.002399444580078125, -0.000377655029296875, -9.72747802734375e-05, -1.71661376953125e-05, -4.496910095214844, -1.9073486328125e-06, -0.012006759643554688, -6.079673767089844e-06, -0.0201263427734375, -0.000362396240234375, -0.0003833770751953125, -2.6702880859375e-05, -0.0005387067794799805, -3.218649908376392e-06, -0.000499725341796875, -2.6702880859375e-05, -0.00029754638671875, -0.00023651123046875, -0.0012912750244140625, -1.9073486328125e-06, -0.018674850463867188, -3.24249267578125e-05, -0.000217437744140625, -3.814697265625e-06, -0.0014563798904418945, -1.0371208190917969e-05, -0.003480672836303711, -5.7220458984375e-06, -1.52587890625e-05, -0.00496673583984375, 0.0, -0.0025663375854492188, -0.0009441375732421875, -0.0003108978271484375, -2.47955322265625e-05, -0.0021673431620001793, -7.271740287251305e-06, -0.0018445253372192383, 0.0, -0.0020656585693359375, -2.09808349609375e-05, -5.53131103515625e-05, 0.0, -0.00027728077839128673, -4.52994936495088e-06, -0.01177215576171875, -1.9073486328125e-06, -0.02804279327392578, -0.0013790130615234375, -6.866455078125e-05, 0.0, -5.91278076171875e-05, 0.0, -0.0055294036865234375, 0.0, -7.62939453125e-06, 0.0, -0.0015100728487595916, 0.0, -3.814697265625e-06, -0.00061798095703125, 0.0, -0.0013365745544433594, -1.8954096958623268e-05], "choice_history": [96, 173, 358, 105, 152, "Execute", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 167, 0, 282, "target", "<EOS>", 15, 146, 2, 347, 46, 153, 13, 143, 21, 174, "target", "<EOS>", "health", "<EOS>", 343, 12, 346, 85, 317, 21, 174, "target", "<EOS>", "calculate_max_health", "<EOS>", 85, 317, 21, 174, "target", "<EOS>", "spell_targetable", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_minion_spell_target", "hole3": "FREE", "hole0": "Execute", "_type": "Template4", "hole2": "WARRIOR", "hole7": "filter_func", "hole8": {"body": {"values": [{"comparators": [{"_type": "Template76", "hole1": "calculate_max_health", "hole0": {"_type": "Name", "id": "target"}}], "_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}}, {"_type": "Template76", "hole1": "spell_targetable", "hole0": {"_type": "Name", "id": "target"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "target"}}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 1}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Execute"}], "_type": "Module"}, "score": -4.7256920780363885, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score_history": [-0.027280807495117188, -7.05718994140625e-05, -1.9073486328125e-06, -9.918212890625e-05, -2.47955322265625e-05, -2.9802276912960224e-06, -0.00024434964871034026, -9.5367431640625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -0.0010514564346522093, -1.4781950994802173e-05, -2.0265579223632812e-06, -2.09808349609375e-05, -0.03667640686035156, -0.0067653656005859375, -3.576278118089249e-07, -1.9073486328125e-06, -7.330933294724673e-05, -3.814697265625e-06, -0.000786423624958843, 0.0, -0.0003129243850708008, -1.9073486328125e-06, -0.02451014518737793, -9.5367431640625e-06, -0.002025604248046875, 0.0, -0.000514984130859375, -9.5367431640625e-06, -0.002399444580078125, -0.000377655029296875, -9.72747802734375e-05, -1.71661376953125e-05, -0.019232749938964844, -5.7220458984375e-06, -0.018015027046203613, -2.0265579223632812e-06, -0.02062702178955078, -0.0003910064697265625, -0.0002079010009765625, -2.47955322265625e-05, -0.00046539306640625, -2.9802317840221804e-06, -0.000530242919921875, -2.6702880859375e-05, -0.00032806396484375, -0.0002117156982421875, -0.001190185546875, -1.9073486328125e-06, -4.128369331359863, -3.814697265625e-06, -0.014521476812660694, -0.0002933466457761824, -0.000141143798828125, -0.7542734146118164, 0.0, -0.02795886993408203, -0.00090789794921875, -6.29425048828125e-05, -7.62939453125e-06, -0.0004998429212719202, -6.318072337307967e-06, -0.0033729076385498047, 0.0, -0.002162933349609375, -3.0517578125e-05, -6.29425048828125e-05, 0.0, -0.00019919870828744024, -3.8146954466355965e-06, -0.011137962341308594, -1.9073486328125e-06, -0.0326080322265625, -0.0012331008911132812, -6.4849853515625e-05, 0.0, -5.14984130859375e-05, 0.0, -0.0053691864013671875, 0.0, -7.62939453125e-06, 0.0, -0.0014583487063646317, 0.0, -3.814697265625e-06, -0.0005893707275390625, 0.0, -0.0013068914413452148, -1.8954096958623268e-05], "choice_history": [96, 173, 358, 105, 152, "Execute", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 167, 0, 282, "target", "<EOS>", 15, 146, 2, 347, 46, 153, 21, 174, "target", "<EOS>", 343, 12, 346, 85, 317, 21, 174, "target", "<EOS>", "calculate_max_health", "<EOS>", 85, 317, 21, 174, "target", "<EOS>", "spell_targetable", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_enemy_minion_spell_target", "hole3": "FREE", "hole0": "Execute", "_type": "Template4", "hole2": "WARRIOR", "hole7": "filter_func", "hole8": {"body": {"values": [{"comparators": [{"_type": "Template76", "hole1": "calculate_max_health", "hole0": {"_type": "Name", "id": "target"}}], "_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"_type": "Name", "id": "target"}}, {"_type": "Template76", "hole1": "spell_targetable", "hole0": {"_type": "Name", "id": "target"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "target"}}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 1}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Execute"}], "_type": "Module"}, "score": -5.151465322818183, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score_history": [-0.027280807495117188, -7.05718994140625e-05, -1.9073486328125e-06, -9.918212890625e-05, -2.47955322265625e-05, -2.9802276912960224e-06, -0.00024434964871034026, -9.5367431640625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -0.0010514564346522093, -1.4781950994802173e-05, -2.0265579223632812e-06, -2.09808349609375e-05, -0.03667640686035156, -0.0067653656005859375, -3.576278118089249e-07, -1.9073486328125e-06, -7.330933294724673e-05, -3.814697265625e-06, -0.000786423624958843, 0.0, -0.0003129243850708008, -1.9073486328125e-06, -0.02451014518737793, -9.5367431640625e-06, -0.002025604248046875, 0.0, -0.000514984130859375, -9.5367431640625e-06, -0.002399444580078125, -0.000377655029296875, -9.72747802734375e-05, -1.71661376953125e-05, -0.019232749938964844, -5.7220458984375e-06, -0.018015027046203613, -2.0265579223632812e-06, -0.02062702178955078, -0.0003910064697265625, -0.0002079010009765625, -2.47955322265625e-05, -0.00046539306640625, -2.9802317840221804e-06, -0.000530242919921875, -2.6702880859375e-05, -0.00032806396484375, -0.0002117156982421875, -0.001190185546875, -1.9073486328125e-06, -0.016775131225585938, -2.6702880859375e-05, -0.0002307891845703125, -3.814697265625e-06, -0.0015728473663330078, -1.0371208190917969e-05, -0.0035054683685302734, -7.62939453125e-06, -1.52587890625e-05, -0.0050029754638671875, 0.0, -0.0025806427001953125, -0.0009632110595703125, -0.0003299713134765625, -2.47955322265625e-05, -0.0021684160456061363, -7.271740287251305e-06, -0.0018281936645507812, 0.0, -0.0020885467529296875, -2.09808349609375e-05, -5.7220458984375e-05, 0.0, -0.00027906891773454845, -6.43729799776338e-06, -4.942305564880371, -1.9073486328125e-06, -0.0284423828125, -0.0030012130737304688, -5.7220458984375e-05, 0.0, -6.866455078125e-05, 0.0, -0.004914283752441406, 0.0, -7.62939453125e-06, 0.0, -0.0014826204860582948, 0.0, -3.814697265625e-06, -0.0005626678466796875, 0.0, -0.0013326406478881836, -1.966933996300213e-05], "choice_history": [96, 173, 358, 105, 152, "Execute", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 167, 0, 282, "target", "<EOS>", 15, 146, 2, 347, 46, 153, 13, 143, 21, 174, "target", "<EOS>", "health", "<EOS>", 343, 12, 346, 85, 317, 21, 174, "target", "<EOS>", "calculate_max_health", "<EOS>", 85, 317, 21, 174, "target", "<EOS>", "calculate_max_health", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_enemy_minion_spell_target", "hole3": "FREE", "hole0": "Execute", "_type": "Template4", "hole2": "WARRIOR", "hole7": "filter_func", "hole8": {"body": {"values": [{"comparators": [{"_type": "Template76", "hole1": "calculate_max_health", "hole0": {"_type": "Name", "id": "target"}}], "_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}}, {"_type": "Template76", "hole1": "calculate_max_health", "hole0": {"_type": "Name", "id": "target"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "target"}}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 1}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Execute"}], "_type": "Module"}, "score": -5.184441457288301, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            calculate_max_health())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score_history": [-0.027280807495117188, -7.05718994140625e-05, -1.9073486328125e-06, -9.918212890625e-05, -2.47955322265625e-05, -2.9802276912960224e-06, -0.00024434964871034026, -9.5367431640625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -0.0010514564346522093, -1.4781950994802173e-05, -2.0265579223632812e-06, -2.09808349609375e-05, -0.03667640686035156, -0.0067653656005859375, -3.576278118089249e-07, -1.9073486328125e-06, -7.330933294724673e-05, -3.814697265625e-06, -0.000786423624958843, 0.0, -0.0003129243850708008, -1.9073486328125e-06, -0.02451014518737793, -9.5367431640625e-06, -0.002025604248046875, 0.0, -0.000514984130859375, -9.5367431640625e-06, -0.002399444580078125, -0.000377655029296875, -9.72747802734375e-05, -1.71661376953125e-05, -0.019232749938964844, -5.7220458984375e-06, -0.018015027046203613, -2.0265579223632812e-06, -0.02062702178955078, -0.0003910064697265625, -0.0002079010009765625, -2.47955322265625e-05, -0.00046539306640625, -2.9802317840221804e-06, -0.000530242919921875, -2.6702880859375e-05, -0.00032806396484375, -0.0002117156982421875, -0.001190185546875, -1.9073486328125e-06, -4.128369331359863, -3.814697265625e-06, -0.014521476812660694, -0.0002933466457761824, -0.000141143798828125, -0.8955221176147461, -3.814697265625e-06, -0.020502090454101562, -0.003726959228515625, -5.435943603515625e-05, -2.1457672119140625e-06, -0.4830303192138672, -0.000110626220703125, -0.0004863739013671875, -7.62939453125e-06, -0.00027620792388916016, -5.960462772236497e-07, -0.08134186267852783, 0.0, -0.05308818817138672, -0.0012521743774414062, -7.2479248046875e-05, 0.0, -6.103515625e-05, 0.0, -0.0065898895263671875, 0.0, -7.62939453125e-06, 0.0, -0.001828290056437254, 0.0, -3.814697265625e-06, -0.0005588531494140625, 0.0, -0.001295328140258789, -1.8715683836489916e-05], "choice_history": [96, 173, 358, 105, 152, "Execute", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 167, 0, 282, "target", "<EOS>", 15, 146, 2, 347, 46, 153, 21, 174, "target", "<EOS>", 343, 8, 346, 51, 176, "Null", "<EOS>", 85, 317, 21, 174, "target", "<EOS>", "spell_targetable", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_enemy_minion_spell_target", "hole3": "FREE", "hole0": "Execute", "_type": "Template4", "hole2": "WARRIOR", "hole7": "filter_func", "hole8": {"body": {"values": [{"comparators": [{"value": "Null", "_type": "NameConstant"}], "_type": "Compare", "ops": [{"_type": "Is"}], "left": {"_type": "Name", "id": "target"}}, {"_type": "Template76", "hole1": "spell_targetable", "hole0": {"_type": "Name", "id": "target"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "target"}}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 1}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Execute"}], "_type": "Module"}, "score": -5.8579060465938255, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target is Null and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score_history": [-0.027280807495117188, -7.05718994140625e-05, -1.9073486328125e-06, -9.918212890625e-05, -2.47955322265625e-05, -2.9802276912960224e-06, -0.00024434964871034026, -9.5367431640625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -0.0010514564346522093, -1.4781950994802173e-05, -2.0265579223632812e-06, -2.09808349609375e-05, -0.03667640686035156, -0.0067653656005859375, -3.576278118089249e-07, -1.9073486328125e-06, -7.330933294724673e-05, -3.814697265625e-06, -0.000786423624958843, 0.0, -0.0003129243850708008, -1.9073486328125e-06, -0.02451014518737793, -9.5367431640625e-06, -0.002025604248046875, 0.0, -0.000514984130859375, -9.5367431640625e-06, -0.002399444580078125, -0.000377655029296875, -9.72747802734375e-05, -1.71661376953125e-05, -0.019232749938964844, -5.7220458984375e-06, -0.018015027046203613, -2.0265579223632812e-06, -5.6671142578125, -1.71661376953125e-05, -0.029769303277134895, -3.814697265625e-06, -0.03907012939453125, -0.0007114410400390625, -5.340576171875e-05, 0.0, -1.52587890625e-05, 0.0, -0.0007266998291015625, 0.0, -1.52587890625e-05, 0.0, -0.002890010131523013, 0.0, -1.33514404296875e-05, -0.0002689361572265625, -1.9073486328125e-06, -0.00340878963470459, -1.8358061424805783e-05], "choice_history": [96, 173, 358, 105, 152, "Execute", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 23, 179, "1", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_enemy_minion_spell_target", "hole3": "FREE", "hole0": "Execute", "_type": "Template4", "hole2": "WARRIOR", "hole7": "filter_func", "hole8": {"n": 1, "_type": "Num"}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 1}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Execute"}], "_type": "Module"}, "score": -5.884825604953164, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score_history": [-0.027280807495117188, -7.05718994140625e-05, -1.9073486328125e-06, -9.918212890625e-05, -2.47955322265625e-05, -2.9802276912960224e-06, -0.00024434964871034026, -9.5367431640625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -0.0010514564346522093, -1.4781950994802173e-05, -2.0265579223632812e-06, -2.09808349609375e-05, -0.03667640686035156, -0.0067653656005859375, -3.576278118089249e-07, -1.9073486328125e-06, -7.330933294724673e-05, -3.814697265625e-06, -0.000786423624958843, 0.0, -0.0003129243850708008, -1.9073486328125e-06, -0.02451014518737793, -9.5367431640625e-06, -0.002025604248046875, 0.0, -0.000514984130859375, -9.5367431640625e-06, -0.002399444580078125, -0.000377655029296875, -9.72747802734375e-05, -1.71661376953125e-05, -0.019232749938964844, -5.7220458984375e-06, -5.62603235244751, -1.9073486328125e-06, -0.0667276382446289, -0.000331878662109375, -0.00011444091796875, -2.6702880859375e-05, -0.0011917352676391602, -3.218649908376392e-06, -0.0004062652587890625, -2.09808349609375e-05, -0.00028228759765625, -0.0001583099365234375, -0.00128936767578125, -1.9073486328125e-06, -0.02194976806640625, -2.288818359375e-05, -0.00023651123046875, -3.814697265625e-06, -0.0018829107284545898, -1.2278556823730469e-05, -0.003565549850463867, -9.5367431640625e-06, -1.71661376953125e-05, -0.005040168762207031, 0.0, -0.0025949478149414062, -0.00095367431640625, -0.0003223419189453125, -2.47955322265625e-05, -0.002197860972955823, -7.271740287251305e-06, -0.0018177032470703125, 0.0, -0.0020580291748046875, -2.09808349609375e-05, -5.7220458984375e-05, 0.0, -0.0002795457548927516, -6.43729799776338e-06, -0.011942863464355469, -1.9073486328125e-06, -0.027875900268554688, -0.0013952255249023438, -7.05718994140625e-05, 0.0, -5.91278076171875e-05, 0.0, -0.005466461181640625, 0.0, -7.62939453125e-06, 0.0, -0.001508405664935708, 0.0, -3.814697265625e-06, -0.0006256103515625, 0.0, -0.0013432502746582031, -1.8954096958623268e-05], "choice_history": [96, 173, 358, 105, 152, "Execute", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "deactivate", "<EOS>", 18, 167, 0, 282, "target", "<EOS>", 15, 146, 2, 347, 46, 153, 13, 143, 21, 174, "target", "<EOS>", "health", "<EOS>", 343, 12, 346, 85, 317, 21, 174, "target", "<EOS>", "calculate_max_health", "<EOS>", 85, 317, 21, 174, "target", "<EOS>", "spell_targetable", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_enemy_minion_spell_target", "hole3": "FREE", "hole0": "Execute", "_type": "Template4", "hole2": "WARRIOR", "hole7": "deactivate", "hole8": {"body": {"values": [{"comparators": [{"_type": "Template76", "hole1": "calculate_max_health", "hole0": {"_type": "Name", "id": "target"}}], "_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}}, {"_type": "Template76", "hole1": "spell_targetable", "hole0": {"_type": "Name", "id": "target"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "target"}}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 1}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Execute"}], "_type": "Module"}, "score": -5.912700580114631, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, deactivate=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score_history": [-0.027280807495117188, -7.05718994140625e-05, -1.9073486328125e-06, -9.918212890625e-05, -2.47955322265625e-05, -2.9802276912960224e-06, -0.00024434964871034026, -9.5367431640625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -0.0010514564346522093, -1.4781950994802173e-05, -2.0265579223632812e-06, -2.09808349609375e-05, -0.03667640686035156, -0.0067653656005859375, -3.576278118089249e-07, -1.9073486328125e-06, -7.330933294724673e-05, -3.814697265625e-06, -0.000786423624958843, 0.0, -0.0003129243850708008, -1.9073486328125e-06, -0.02451014518737793, -9.5367431640625e-06, -0.002025604248046875, 0.0, -0.000514984130859375, -9.5367431640625e-06, -0.002399444580078125, -0.000377655029296875, -9.72747802734375e-05, -1.71661376953125e-05, -0.019232749938964844, -5.7220458984375e-06, -0.018015027046203613, -2.0265579223632812e-06, -0.02062702178955078, -0.0003910064697265625, -0.0002079010009765625, -2.47955322265625e-05, -0.00046539306640625, -2.9802317840221804e-06, -0.000530242919921875, -2.6702880859375e-05, -0.00032806396484375, -0.0002117156982421875, -0.001190185546875, -1.9073486328125e-06, -0.016775131225585938, -2.6702880859375e-05, -0.0002307891845703125, -3.814697265625e-06, -0.0015728473663330078, -1.0371208190917969e-05, -0.0035054683685302734, -7.62939453125e-06, -1.52587890625e-05, -0.0050029754638671875, 0.0, -0.0025806427001953125, -0.0009632110595703125, -0.0003299713134765625, -2.47955322265625e-05, -0.0021684160456061363, -7.271740287251305e-06, -0.0018281936645507812, 0.0, -0.0020885467529296875, -2.09808349609375e-05, -5.7220458984375e-05, 0.0, -0.00027906891773454845, -6.43729799776338e-06, -0.011808395385742188, -1.9073486328125e-06, -3.8750696182250977, -0.003935813903808594, -0.0009002685546875, 0.0, -0.0024679899215698242, -6.866455078125e-05, -0.0005435943603515625, 0.0, -0.008893966674804688, -0.012606620788574219, -0.00046539306640625, -0.00645971205085516, 0.0, -3.24249267578125e-05, 0.0, -2.86102294921875e-05, -4.768370445162873e-07, -0.007826805114746094, 0.0, -9.1552734375e-05, 0.0, -0.0052318572998046875, 0.0, -9.655952453613281e-06, -2.384185791015625e-06, -0.4092525541782379, 0.0, -3.814697265625e-06, -0.00031280517578125, 0.0, -0.0037540197372436523, -3.933904736186378e-06, -0.000637054443359375, 0.0, -0.000652313232421875, 0.0, -1.0277376174926758, 0.0, -7.748603820800781e-06, -4.768370445162873e-07, -0.4359600245952606, 0.0, -1.9073486328125e-06, -0.00029754638671875, 0.0, -0.0032591819763183594, -4.41074053014745e-06], "choice_history": [96, 173, 358, 105, 152, "Execute", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 167, 0, 282, "target", "<EOS>", 15, 146, 2, 347, 46, 153, 13, 143, 21, 174, "target", "<EOS>", "health", "<EOS>", 343, 12, 346, 85, 317, 21, 174, "target", "<EOS>", "calculate_max_health", "<EOS>", 85, 317, 21, 174, "target", "<EOS>", "spell_targetable", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_enemy_minion_spell_target", "hole3": "FREE", "hole0": "Execute", "_type": "Template4", "hole2": "WARRIOR", "hole7": "filter_func", "hole8": {"body": {"values": [{"comparators": [{"_type": "Template76", "hole1": "calculate_max_health", "hole0": {"_type": "Name", "id": "target"}}], "_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}}, {"_type": "Template76", "hole1": "spell_targetable", "hole0": {"_type": "Name", "id": "target"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "target"}}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 1}, {"hole4": "die", "hole6": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole3": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole0": {"_type": "Template79", "hole0": "super"}, "_type": "Template7", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole7": "die", "hole8": [{"_type": "Name", "id": "self"}], "hole5": [{"_type": "Name", "id": "self"}], "hole1": "use"}], "_type": "ClassDef", "name": "Execute"}], "_type": "Module"}, "score": -6.020572299460298, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        self.target.die(self)\n"}, {"score_history": [-3.6291980743408203, -0.002376556396484375, -0.0002829628065228462, -2.3841855067985307e-07, -8.344640036739293e-07, -3.0994415283203125e-05, -6.198863957251888e-06, -0.00011444091796875, -0.6206560134887695, -0.000457763671875, -8.20159912109375e-05, 0.0, -5.364412118069595e-06, -1.52587890625e-05, -0.00020039081573486328, 0.0, -0.005466461181640625, -9.72747802734375e-05, -0.0004749298095703125, -5.24520601175027e-06, -2.384185791015625e-06, -0.00037384033203125, -2.09808349609375e-05, -1.3113005934428656e-06, -5.7220458984375e-06, -2.09808349609375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -9.250640869140625e-05, -7.62939453125e-06, -0.0024214982986450195, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.05718994140625e-05, -1.33514404296875e-05, -0.0033054351806640625, -1.9073486328125e-06, -9.918212890625e-05, -2.47955322265625e-05, -2.288818359375e-05, -0.0002911090850830078, -3.814697265625e-06, -0.03476142883300781, -2.288818359375e-05, -0.0023746490478515625, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.00063323974609375, -4.1961669921875e-05, -7.62939453125e-05, -8.392333984375e-05, -0.03119802474975586, -2.6702880859375e-05, -9.72747802734375e-05, 0.0, -1.919269561767578e-05, 0.0, -0.000347137451171875, -3.62396240234375e-05, -2.1457672119140625e-06, -2.9802317840221804e-06, -0.0381011962890625, -1.33514404296875e-05, -2.6702880859375e-05, -0.0002155303955078125, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -1.3470649719238281e-05, -6.4849853515625e-05, -8.344650268554688e-06, 0.0, -2.8967857360839844e-05, 0.0, -1.251697449333733e-05, -2.3841855067985307e-07, -0.0222320556640625, -5.7220458984375e-06, -1.33514404296875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.259647399187088, -3.814697265625e-06, -0.00125885009765625, -9.5367431640625e-06, -2.09808349609375e-05, 0.0, -0.16103553771972656, 0.0, -6.67572021484375e-05, -3.814697265625e-06, -0.0010554790496826172, -0.0002880096435546875, -0.0003795623779296875, -7.62939453125e-06, -0.02003169059753418, -1.9073486328125e-06, -0.0007076263427734375, -0.0001125335693359375, -5.7220458984375e-06, -5.14984130859375e-05, 0.0, -0.0015554428100585938, 0.0, -6.496906280517578e-05, 0.0, -0.0001010894775390625, -5.91278076171875e-05, -5.53131103515625e-05, -0.000125885009765625, -0.012415409088134766, -1.5258743587764911e-05, -0.003269195556640625, -4.00543212890625e-05, -0.00020729990501422435, -6.675719760096399e-06, -1.1424674987792969, -5.7220458984375e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.00024831295013427734, -1.0490413842489943e-05, -0.013726234436035156, -1.33514404296875e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.0073986053466796875, 0.0, -0.0015239715576171875, 0.0, -0.00437164306640625, -1.9073486328125e-06, -1.52587890625e-05, -0.0005054473876953125, 0.0, -0.1426377296447754, -1.1920928244535389e-07], "choice_history": [97, 285, "Execute", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Execute", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_battlecry_target", "<EOS>", 347, 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 47, 167, 0, 282, "x", "<EOS>", 22, 175, "True", "<EOS>", 102, 142, 346, 50, 174, "target", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "targets", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_battlecry_target"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"body": {"value": true, "_type": "NameConstant"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "x"}}]}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "target"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "targets"}]}, "_type": "Assign"}], "hole3": "use", "hole0": "Execute", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Execute"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.1724533880974874, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = hearthbreaker.targeting.find_enemy_minion_battlecry_target(\n            player.game, lambda x: True)\n        target = game.random_choice(targets)\n"}, {"score_history": [-0.027280807495117188, -7.05718994140625e-05, -1.9073486328125e-06, -9.918212890625e-05, -2.47955322265625e-05, -2.9802276912960224e-06, -0.00024434964871034026, -9.5367431640625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -0.0010514564346522093, -1.4781950994802173e-05, -2.0265579223632812e-06, -2.09808349609375e-05, -3.411703109741211, -0.0001125335693359375, -3.576278118089249e-07, -3.576278118089249e-07, -4.768370445162873e-07, -1.9073486328125e-06, -0.000385045976145193, 0.0, -0.00039565563201904297, 0.0, -0.000392913818359375, -0.0002346038818359375, -1.52587890625e-05, -0.000492095947265625, -1.9073486328125e-06, -0.013060569763183594, -1.33514404296875e-05, -9.34600830078125e-05, -3.814697265625e-06, -3.814697265625e-05, -2.09808349609375e-05, -0.0006467103958129883, -0.000324249267578125, -0.0002384185791015625, -4.57763671875e-05, -2.8524250984191895, 0.0, -0.00075531005859375, -0.0008068084716796875, -1.1444091796875e-05, 0.0, -0.00029754638671875, 0.0, -0.0001316070556640625, 0.0, -7.62939453125e-06, 0.0, -0.00369214522652328, 0.0, -3.814697265625e-06, -0.0004177093505859375, 0.0, -0.0007992982864379883, -2.038458114839159e-05], "choice_history": [96, 173, 358, 105, 152, "Execute", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Execute", "_type": "Template14", "hole2": "WARRIOR", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Execute"}], "_type": "Module"}, "score": -6.316478725222396, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.find_minion_spell_target\n            )\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score_history": [-3.6291980743408203, -0.002376556396484375, -0.0002829628065228462, -2.3841855067985307e-07, -8.344640036739293e-07, -3.0994415283203125e-05, -6.198863957251888e-06, -0.00011444091796875, -0.6206560134887695, -0.000457763671875, -8.20159912109375e-05, 0.0, -5.364412118069595e-06, -1.52587890625e-05, -0.00020039081573486328, 0.0, -0.005466461181640625, -9.72747802734375e-05, -0.0004749298095703125, -5.24520601175027e-06, -2.384185791015625e-06, -0.00037384033203125, -2.09808349609375e-05, -1.3113005934428656e-06, -5.7220458984375e-06, -2.09808349609375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -9.250640869140625e-05, -7.62939453125e-06, -0.0024214982986450195, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.05718994140625e-05, -1.33514404296875e-05, -0.0033054351806640625, -1.9073486328125e-06, -9.918212890625e-05, -2.47955322265625e-05, -2.288818359375e-05, -0.0002911090850830078, -3.814697265625e-06, -0.03476142883300781, -2.288818359375e-05, -0.0023746490478515625, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.00063323974609375, -4.1961669921875e-05, -7.62939453125e-05, -8.392333984375e-05, -0.03119802474975586, -2.6702880859375e-05, -9.72747802734375e-05, 0.0, -1.919269561767578e-05, 0.0, -0.000347137451171875, -3.62396240234375e-05, -2.1457672119140625e-06, -2.9802317840221804e-06, -0.0381011962890625, -1.33514404296875e-05, -2.6702880859375e-05, -0.0002155303955078125, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -1.3470649719238281e-05, -6.4849853515625e-05, -8.344650268554688e-06, 0.0, -2.8967857360839844e-05, 0.0, -1.251697449333733e-05, -2.3841855067985307e-07, -0.0222320556640625, -5.7220458984375e-06, -1.33514404296875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.259647399187088, -3.814697265625e-06, -0.00125885009765625, -9.5367431640625e-06, -2.09808349609375e-05, 0.0, -0.16103553771972656, 0.0, -6.67572021484375e-05, -3.814697265625e-06, -0.0010554790496826172, -0.0002880096435546875, -0.0003795623779296875, -7.62939453125e-06, -0.02003169059753418, -1.9073486328125e-06, -0.0007076263427734375, -0.0001125335693359375, -5.7220458984375e-06, -5.14984130859375e-05, 0.0, -0.0015554428100585938, 0.0, -6.496906280517578e-05, 0.0, -0.0001010894775390625, -5.91278076171875e-05, -5.53131103515625e-05, -0.000125885009765625, -0.012415409088134766, -1.5258743587764911e-05, -0.003269195556640625, -4.00543212890625e-05, -0.00020729990501422435, -6.675719760096399e-06, -0.8098421096801758, -0.00040435791015625, -0.5105047225952148, 0.0, -0.0015544891357421875, -0.0001773834228515625, -0.01974773406982422, -0.00201416015625, -0.002162098651751876, -1.978870750463102e-05, -0.0010013580322265625, -0.00033295154571533203, -1.9073486328125e-06, -0.00064849853515625, -0.008001327514648438, -9.34600830078125e-05, -0.007015228271484375, -5.7220458984375e-06, -0.000560760498046875, -5.7220458984375e-06, -6.866455078125e-05, 0.0, -0.3731330633163452, -2.3841855067985307e-07, -0.7002570629119873, -1.9073486328125e-06, -0.12315630912780762, -5.9604644775390625e-06, -0.21013200283050537, -0.0001016855239868164, -0.0025482177734375, -0.02025604248046875, -3.814697265625e-06, -0.8185494542121887, -1.1920928244535389e-07, -0.0114898681640625, 0.0, -8.58306884765625e-05, 0.0, -0.0001125335693359375, -5.7220458984375e-06, -0.1500720977783203, 0.0], "choice_history": [97, 285, "Execute", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Execute", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_battlecry_target", "<EOS>", 347, 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 47, 167, 0, 282, "x", "<EOS>", 22, 175, "True", "<EOS>", 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_battlecry_target"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"body": {"value": true, "_type": "NameConstant"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "x"}}]}, "_type": "Assign"}, {"body": [{"hole2": [{"_type": "Str", "s": "character_attack"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Template77", "hole1": "unbind", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "current_player"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "_type": "FunctionDef", "name": "deactivate"}], "hole3": "use", "hole0": "Execute", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Execute"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -8.633544250584713, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = hearthbreaker.targeting.find_enemy_minion_battlecry_target(\n            player.game, lambda x: True)\n\n        def deactivate(self, player):\n            game.current_player.current_player.unbind('character_attack',\n                self._reveal)\n"}, {"score_history": [-3.6291980743408203, -0.002376556396484375, -0.0002829628065228462, -2.3841855067985307e-07, -8.344640036739293e-07, -3.0994415283203125e-05, -6.198863957251888e-06, -0.00011444091796875, -0.6206560134887695, -0.000457763671875, -8.20159912109375e-05, 0.0, -5.364412118069595e-06, -1.52587890625e-05, -0.00020039081573486328, 0.0, -0.005466461181640625, -9.72747802734375e-05, -0.0004749298095703125, -5.24520601175027e-06, -2.384185791015625e-06, -0.00037384033203125, -2.09808349609375e-05, -1.3113005934428656e-06, -5.7220458984375e-06, -2.09808349609375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -9.250640869140625e-05, -7.62939453125e-06, -0.0024214982986450195, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.05718994140625e-05, -1.33514404296875e-05, -0.0033054351806640625, -1.9073486328125e-06, -9.918212890625e-05, -2.47955322265625e-05, -2.288818359375e-05, -0.0002911090850830078, -3.814697265625e-06, -0.03476142883300781, -2.288818359375e-05, -0.0023746490478515625, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.00063323974609375, -4.1961669921875e-05, -7.62939453125e-05, -8.392333984375e-05, -0.03119802474975586, -2.6702880859375e-05, -9.72747802734375e-05, 0.0, -1.919269561767578e-05, 0.0, -0.000347137451171875, -3.62396240234375e-05, -2.1457672119140625e-06, -2.9802317840221804e-06, -0.0381011962890625, -1.33514404296875e-05, -2.6702880859375e-05, -0.0002155303955078125, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -1.3470649719238281e-05, -6.4849853515625e-05, -8.344650268554688e-06, 0.0, -2.8967857360839844e-05, 0.0, -1.251697449333733e-05, -2.3841855067985307e-07, -0.0222320556640625, -5.7220458984375e-06, -1.33514404296875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.259647399187088, -3.814697265625e-06, -0.00125885009765625, -9.5367431640625e-06, -2.09808349609375e-05, 0.0, -0.16103553771972656, 0.0, -6.67572021484375e-05, -3.814697265625e-06, -0.0010554790496826172, -0.0002880096435546875, -0.0003795623779296875, -7.62939453125e-06, -0.02003169059753418, -1.9073486328125e-06, -0.0007076263427734375, -0.0001125335693359375, -5.7220458984375e-06, -5.14984130859375e-05, 0.0, -0.0015554428100585938, 0.0, -6.496906280517578e-05, 0.0, -0.0001010894775390625, -5.91278076171875e-05, -5.53131103515625e-05, -0.000125885009765625, -0.012415409088134766, -1.5258743587764911e-05, -0.003269195556640625, -4.00543212890625e-05, -0.00020729990501422435, -6.675719760096399e-06, -0.8098421096801758, -0.00040435791015625, -0.5105047225952148, 0.0, -0.0015544891357421875, -0.0001773834228515625, -0.01974773406982422, -0.00201416015625, -0.002162098651751876, -1.978870750463102e-05, -0.0010013580322265625, -0.00033295154571533203, -1.9073486328125e-06, -0.00064849853515625, -0.008001327514648438, -9.34600830078125e-05, -0.007015228271484375, -5.7220458984375e-06, -0.000560760498046875, -5.7220458984375e-06, -6.866455078125e-05, 0.0, -0.3731330633163452, -2.3841855067985307e-07, -0.7310044765472412, 0.0, -0.03730962052941322, 0.0, -0.3670487701892853, -5.9604644775390625e-06, -0.00247955322265625, -0.04053020477294922, -3.814697265625e-06, -0.7528603076934814, -1.1920928244535389e-07, -0.09326171875, 0.0, -6.103515625e-05, 0.0, -0.000415802001953125, -5.7220458984375e-06, -0.35871124267578125, 0.0], "choice_history": [97, 285, "Execute", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Execute", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_battlecry_target", "<EOS>", 347, 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 47, 167, 0, 282, "x", "<EOS>", 22, 175, "True", "<EOS>", 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_battlecry_target"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"body": {"value": true, "_type": "NameConstant"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "x"}}]}, "_type": "Assign"}, {"body": [{"hole2": [{"_type": "Str", "s": "character_attack"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Template77", "hole1": "unbind", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}, "_type": "FunctionDef", "name": "deactivate"}], "hole3": "use", "hole0": "Execute", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Execute"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -8.980463969714513, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = hearthbreaker.targeting.find_enemy_minion_battlecry_target(\n            player.game, lambda x: True)\n\n        def deactivate(self, player):\n            game.other_player.hero.unbind('character_attack', self._reveal)\n"}, {"score_history": [-0.027280807495117188, -7.05718994140625e-05, -1.9073486328125e-06, -16.88518714904785], "choice_history": [96, 173, 358, 104], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score": -16.912540435791016, "inferred_code": "break\n"}]}
{"index": 31, "beams": [{"score_history": [-6.4849853515625e-05, -0.0001068115234375, -1.7881377516459906e-06, -0.000947797205299139, -1.3470558769768104e-05, -8.475421054754406e-05, -8.344646857949556e-07, -5.400113150244579e-05, -1.2516919014160521e-05, -1.52587890625e-05, -0.00542449951171875, -0.006591796875, -2.1338462829589844e-05, -0.00018131732940673828, -1.33514404296875e-05, -9.918212890625e-05, -0.0005785226821899414, -1.9073486328125e-06, -1.072882923836005e-06, 0.0, -0.006237030029296875, 0.0, -1.1444091796875e-05, 0.0, -7.987022399902344e-06, 0.0, -6.67572021484375e-05, -1.52587890625e-05, -8.940672159951646e-06, -2.861018856492592e-06, -0.000762939453125, -4.76837158203125e-05, -2.86102294921875e-05, -0.00104522705078125, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -4.649161837733118e-06, -1.33514404296875e-05, -1.1444084520917386e-05, 0.0, -1.4662702596979216e-05, -1.1920928244535389e-07, -3.087519871769473e-05, -5.960462772236497e-07, -0.0001850128173828125, -0.000438690185546875, -0.0004863739013671875, -1.9073486328125e-06, -0.0002690553665161133, 0.0, -0.0003452301025390625, -9.72747802734375e-05, -6.29425048828125e-05, -5.53131103515625e-05, -3.24249267578125e-05, 0.0, -0.0014172792434692383, -9.5367431640625e-06, -0.0002155303955078125, -1.1444091796875e-05, -1.71661376953125e-05, -0.000110626220703125, -5.7220458984375e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.0001659393310546875, -5.7220458984375e-06, -8.416175842285156e-05, -1.9073486328125e-06, -0.016139745712280273, 0.0, -0.00033807719592005014, -3.814697265625e-06, -1.52587890625e-05, -0.000179290771484375, -0.000263214111328125, -0.00040435791015625, -0.0017642974853515625, -0.00022327863553073257, -4.768360213347478e-06, -0.0014811489963904023, 0.0, -1.33514404296875e-05, -0.00080108642578125, -2.288818359375e-05, -0.0006185979582369328, -0.00015031162183731794, -0.0001583099365234375, -0.0001220703125, -0.00048565774341113865, -0.00020647048950195312, -0.010847091674804688, -0.00067901611328125, -0.010301589965820312, -5.7220458984375e-06, -0.0004253387451171875, -1.9073486328125e-05, -4.172325134277344e-06, -2.3841855067985307e-07, -0.001116633415222168, -2.09808349609375e-05], "choice_history": [97, 285, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "FanOfKnives", "_type": "Template5", "hole2": [{"hole2": "ROGUE", "_type": "Template31", "hole1": 3, "hole0": "Fan of Knives"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -0.07342356528751992, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score_history": [-6.4849853515625e-05, -0.0001068115234375, -1.7881377516459906e-06, -0.000947797205299139, -1.3470558769768104e-05, -8.475421054754406e-05, -8.344646857949556e-07, -5.400113150244579e-05, -1.2516919014160521e-05, -1.52587890625e-05, -0.00542449951171875, -0.006591796875, -2.1338462829589844e-05, -0.00018131732940673828, -1.33514404296875e-05, -9.918212890625e-05, -0.0005785226821899414, -1.9073486328125e-06, -1.072882923836005e-06, 0.0, -0.006237030029296875, 0.0, -1.1444091796875e-05, 0.0, -7.987022399902344e-06, 0.0, -6.67572021484375e-05, -1.52587890625e-05, -8.940672159951646e-06, -2.861018856492592e-06, -0.000762939453125, -4.76837158203125e-05, -2.86102294921875e-05, -0.00104522705078125, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -4.649161837733118e-06, -1.33514404296875e-05, -1.1444084520917386e-05, 0.0, -1.4662702596979216e-05, -1.1920928244535389e-07, -3.087519871769473e-05, -5.960462772236497e-07, -0.0001850128173828125, -0.000438690185546875, -0.0004863739013671875, -1.9073486328125e-06, -0.0002690553665161133, 0.0, -0.0003452301025390625, -9.72747802734375e-05, -6.29425048828125e-05, -5.53131103515625e-05, -3.24249267578125e-05, 0.0, -0.0014172792434692383, -9.5367431640625e-06, -0.0002155303955078125, -1.1444091796875e-05, -1.71661376953125e-05, -0.000110626220703125, -5.7220458984375e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.0001659393310546875, -5.7220458984375e-06, -8.416175842285156e-05, -1.9073486328125e-06, -4.380673885345459, 0.0, -0.0002884864807128906, -3.814697265625e-06, -1.33514404296875e-05, -0.000583648681640625, -0.0002918243408203125, -0.0003108978271484375, -0.00295257568359375, -0.00023400760255753994, -5.245195097813848e-06, -0.0014155617682263255, 0.0, -1.33514404296875e-05, -0.0007839202880859375, -2.288818359375e-05, -0.0006433767848648131, -0.0001551984460093081, -0.0001659393310546875, -0.000125885009765625, -0.000463365635368973, -0.00020074844360351562, -0.011152267456054688, -0.0006885528564453125, -0.010768890380859375, -5.7220458984375e-06, -0.000438690185546875, -2.09808349609375e-05, -4.172325134277344e-06, -2.3841855067985307e-07, -0.0011324882507324219, -1.9073486328125e-05], "choice_history": [97, 285, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "FanOfKnives", "_type": "Template5", "hole2": [{"hole2": "ROGUE", "_type": "Template31", "hole1": 3, "hole0": "Fan of Knives"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.440186760351843, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.current_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score_history": [-6.4849853515625e-05, -0.0001068115234375, -1.7881377516459906e-06, -0.000947797205299139, -1.3470558769768104e-05, -8.475421054754406e-05, -8.344646857949556e-07, -5.400113150244579e-05, -1.2516919014160521e-05, -1.52587890625e-05, -0.00542449951171875, -0.006591796875, -2.1338462829589844e-05, -0.00018131732940673828, -1.33514404296875e-05, -9.918212890625e-05, -0.0005785226821899414, -1.9073486328125e-06, -1.072882923836005e-06, 0.0, -0.006237030029296875, 0.0, -1.1444091796875e-05, 0.0, -7.987022399902344e-06, 0.0, -6.67572021484375e-05, -1.52587890625e-05, -8.940672159951646e-06, -2.861018856492592e-06, -0.000762939453125, -4.76837158203125e-05, -2.86102294921875e-05, -0.00104522705078125, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -4.649161837733118e-06, -1.33514404296875e-05, -1.1444084520917386e-05, 0.0, -1.4662702596979216e-05, -1.1920928244535389e-07, -3.087519871769473e-05, -5.960462772236497e-07, -0.0001850128173828125, -0.000438690185546875, -0.0004863739013671875, -1.9073486328125e-06, -0.0002690553665161133, 0.0, -0.0003452301025390625, -9.72747802734375e-05, -6.29425048828125e-05, -5.53131103515625e-05, -3.24249267578125e-05, 0.0, -0.0014172792434692383, -9.5367431640625e-06, -0.0002155303955078125, -1.1444091796875e-05, -1.71661376953125e-05, -0.000110626220703125, -5.7220458984375e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.0001659393310546875, -5.7220458984375e-06, -8.416175842285156e-05, -1.9073486328125e-06, -0.016139745712280273, 0.0, -0.00033807719592005014, -3.814697265625e-06, -1.52587890625e-05, -0.000179290771484375, -0.000263214111328125, -0.00040435791015625, -0.0017642974853515625, -0.00022327863553073257, -4.768360213347478e-06, -0.0014811489963904023, 0.0, -1.33514404296875e-05, -0.00080108642578125, -2.288818359375e-05, -0.0006185979582369328, -0.00015031162183731794, -0.0001583099365234375, -0.0001220703125, -0.00048565774341113865, -0.00020647048950195312, -0.010847091674804688, -0.00067901611328125, -4.721436500549316, -0.003912925720214844, -0.07370663434267044, -0.00015817851817701012], "choice_history": [97, 285, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "FanOfKnives", "_type": "Template5", "hole2": [{"hole2": "ROGUE", "_type": "Template31", "hole1": 3, "hole0": "Fan of Knives"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.8607440551808665, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score_history": [-6.4849853515625e-05, -0.0001068115234375, -1.7881377516459906e-06, -0.000947797205299139, -1.3470558769768104e-05, -8.475421054754406e-05, -8.344646857949556e-07, -5.400113150244579e-05, -1.2516919014160521e-05, -1.52587890625e-05, -0.00542449951171875, -0.006591796875, -2.1338462829589844e-05, -0.00018131732940673828, -1.33514404296875e-05, -9.918212890625e-05, -0.0005785226821899414, -1.9073486328125e-06, -1.072882923836005e-06, 0.0, -5.613471031188965, -1.2993798009119928e-05, -6.330013275146484e-05, 0.0, -1.7881382518680766e-05, 0.0, -5.340576171875e-05, -3.0517578125e-05, -1.0609588571242057e-05, -2.7418097943154862e-06, -0.00078582763671875, -4.9591064453125e-05, -2.6702880859375e-05, -0.0010318756103515625, -2.47955322265625e-05, -5.7220458984375e-06, 0.0, -4.649161837733118e-06, -1.33514404296875e-05, -1.1324875231366605e-05, 0.0, -1.41858699862496e-05, -1.1920928244535389e-07, -3.063678013859317e-05, -4.768370445162873e-07, -0.0001926422119140625, -0.0004405975341796875, -0.00048828125, -1.9073486328125e-06, -0.0002633333206176758, 0.0, -0.0003414154052734375, -9.72747802734375e-05, -6.29425048828125e-05, -5.53131103515625e-05, -3.24249267578125e-05, 0.0, -0.0013905763626098633, -9.5367431640625e-06, -0.0002155303955078125, -1.1444091796875e-05, -1.71661376953125e-05, -0.000110626220703125, -5.7220458984375e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.0001659393310546875, -5.7220458984375e-06, -8.416175842285156e-05, -1.9073486328125e-06, -0.016147375106811523, 0.0, -0.00033807719592005014, -3.814697265625e-06, -1.52587890625e-05, -0.000179290771484375, -0.000263214111328125, -0.00040435791015625, -0.0017642974853515625, -0.0002243515191366896, -4.768360213347478e-06, -0.001480196719057858, 0.0, -1.33514404296875e-05, -0.00080108642578125, -2.288818359375e-05, -0.0006184788071550429, -0.00015031162183731794, -0.0001583099365234375, -0.0001220703125, -0.00048577695270068944, -0.00020647048950195312, -0.011617660522460938, -0.00067901611328125, -0.010301589965820312, -5.7220458984375e-06, -0.0004291534423828125, -1.9073486328125e-05, -4.172325134277344e-06, -2.3841855067985307e-07, -0.001116633415222168, -2.09808349609375e-05], "choice_history": [97, 285, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "FanOfKnives", "_type": "Template5", "hole2": [{"hole2": "PALADIN", "_type": "Template31", "hole1": 3, "hole0": "Fan of Knives"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.681499781498779, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score_history": [-6.4849853515625e-05, -0.0001068115234375, -1.7881377516459906e-06, -0.000947797205299139, -1.3470558769768104e-05, -8.475421054754406e-05, -8.344646857949556e-07, -5.400113150244579e-05, -1.2516919014160521e-05, -1.52587890625e-05, -0.00542449951171875, -0.006591796875, -2.1338462829589844e-05, -0.00018131732940673828, -1.33514404296875e-05, -9.918212890625e-05, -0.0005785226821899414, -1.9073486328125e-06, -1.072882923836005e-06, 0.0, -0.006237030029296875, 0.0, -1.1444091796875e-05, 0.0, -7.987022399902344e-06, 0.0, -6.67572021484375e-05, -1.52587890625e-05, -8.940672159951646e-06, -2.861018856492592e-06, -0.000762939453125, -4.76837158203125e-05, -2.86102294921875e-05, -0.00104522705078125, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -4.649161837733118e-06, -1.33514404296875e-05, -1.1444084520917386e-05, 0.0, -1.4662702596979216e-05, -1.1920928244535389e-07, -3.087519871769473e-05, -5.960462772236497e-07, -0.0001850128173828125, -0.000438690185546875, -0.0004863739013671875, -1.9073486328125e-06, -0.0002690553665161133, 0.0, -0.0003452301025390625, -9.72747802734375e-05, -6.29425048828125e-05, -5.53131103515625e-05, -3.24249267578125e-05, 0.0, -0.0014172792434692383, -9.5367431640625e-06, -0.0002155303955078125, -1.1444091796875e-05, -1.71661376953125e-05, -0.000110626220703125, -5.7220458984375e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.0001659393310546875, -5.7220458984375e-06, -8.416175842285156e-05, -1.9073486328125e-06, -0.016139745712280273, 0.0, -0.00033807719592005014, -3.814697265625e-06, -1.52587890625e-05, -0.000179290771484375, -0.000263214111328125, -0.00040435791015625, -0.0017642974853515625, -0.00022327863553073257, -4.768360213347478e-06, -0.0014811489963904023, 0.0, -1.33514404296875e-05, -0.00080108642578125, -2.288818359375e-05, -0.0006185979582369328, -0.00015031162183731794, -0.0001583099365234375, -0.0001220703125, -0.00048565774341113865, -0.00020647048950195312, -4.874546051025391, -0.000339508056640625, -0.24012041091918945, 0.0, -0.0001373291015625, -2.09808349609375e-05, -0.006183624267578125, -1.52587890625e-05, -0.00014150142669677734, -1.07287787614041e-05, 0.0, -8.225440979003906e-06, -2.3841855067985307e-07, -5.7220458984375e-06, -1.2636180144909304e-05, -7.867782187531702e-06, -0.006360054016113281, -0.0015811920166015625, -0.0005035400390625, -0.040528297424316406, -3.814697265625e-05, -0.000392913818359375, -0.026889801025390625, -0.0002880096435546875, -0.000110626220703125, -3.4332275390625e-05, 0.0, -0.00025496131274849176, -3.933906555175781e-06, -0.0033905659802258015, 0.0, -1.1563293810468167e-05, 0.0, -0.00014816905604675412, -2.861018856492592e-06, -0.011288642883300781, -9.5367431640625e-06, -0.010344505310058594, -0.0002002716064453125, -0.000370025634765625, 0.0, -0.00014221663877833635, -7.152556463552173e-06, -1.1444091796875e-05, -0.0001087188720703125, -1.9073486328125e-05, -0.00054931640625, -9.5367431640625e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.00017368793487548828, -3.814697265625e-06, -0.018576502799987793, 0.0, -0.0002487831225153059, -1.9073486328125e-06, -0.0043659210205078125, -0.0072269439697265625, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.639802098274231, 0.0], "choice_history": [97, 285, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 2, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole3": "use", "hole0": "FanOfKnives", "_type": "Template5", "hole2": [{"hole2": "ROGUE", "_type": "Template31", "hole1": 3, "hole0": "Fan of Knives"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.945606265252444, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n\n        def can_use(self, player, game):\n            return super().can_use(player, game) and len(game.other_player.\n                minions) >= 2\n"}, {"score_history": [-6.4849853515625e-05, -0.0001068115234375, -1.7881377516459906e-06, -0.000947797205299139, -1.3470558769768104e-05, -8.475421054754406e-05, -8.344646857949556e-07, -5.400113150244579e-05, -1.2516919014160521e-05, -1.52587890625e-05, -0.00542449951171875, -0.006591796875, -2.1338462829589844e-05, -0.00018131732940673828, -1.33514404296875e-05, -9.918212890625e-05, -0.0005785226821899414, -1.9073486328125e-06, -1.072882923836005e-06, 0.0, -0.006237030029296875, 0.0, -1.1444091796875e-05, 0.0, -7.987022399902344e-06, 0.0, -6.67572021484375e-05, -1.52587890625e-05, -8.940672159951646e-06, -2.861018856492592e-06, -0.000762939453125, -4.76837158203125e-05, -2.86102294921875e-05, -0.00104522705078125, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -4.649161837733118e-06, -1.33514404296875e-05, -1.1444084520917386e-05, 0.0, -1.4662702596979216e-05, -1.1920928244535389e-07, -3.087519871769473e-05, -5.960462772236497e-07, -0.0001850128173828125, -0.000438690185546875, -0.0004863739013671875, -1.9073486328125e-06, -0.0002690553665161133, 0.0, -0.0003452301025390625, -9.72747802734375e-05, -6.29425048828125e-05, -5.53131103515625e-05, -3.24249267578125e-05, 0.0, -0.0014172792434692383, -9.5367431640625e-06, -0.0002155303955078125, -1.1444091796875e-05, -1.71661376953125e-05, -0.000110626220703125, -5.7220458984375e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.0001659393310546875, -5.7220458984375e-06, -8.416175842285156e-05, -1.9073486328125e-06, -0.016139745712280273, 0.0, -0.00033807719592005014, -3.814697265625e-06, -1.52587890625e-05, -0.000179290771484375, -0.000263214111328125, -0.00040435791015625, -0.0017642974853515625, -0.00022327863553073257, -4.768360213347478e-06, -0.0014811489963904023, 0.0, -1.33514404296875e-05, -0.00080108642578125, -2.288818359375e-05, -0.0006185979582369328, -0.00015031162183731794, -0.0001583099365234375, -0.0001220703125, -0.00048565774341113865, -0.00020647048950195312, -4.874546051025391, -0.000339508056640625, -0.24012041091918945, 0.0, -0.0001373291015625, -2.09808349609375e-05, -0.006183624267578125, -1.52587890625e-05, -0.00014150142669677734, -1.07287787614041e-05, 0.0, -8.225440979003906e-06, -2.3841855067985307e-07, -5.7220458984375e-06, -1.2636180144909304e-05, -7.867782187531702e-06, -0.006360054016113281, -0.0015811920166015625, -0.0005035400390625, -0.040528297424316406, -3.814697265625e-05, -0.000392913818359375, -0.026889801025390625, -0.0002880096435546875, -0.000110626220703125, -3.4332275390625e-05, 0.0, -0.00025496131274849176, -3.933906555175781e-06, -0.0033905659802258015, 0.0, -1.1563293810468167e-05, 0.0, -0.00014816905604675412, -2.861018856492592e-06, -0.011288642883300781, -9.5367431640625e-06, -0.010344505310058594, -0.0002002716064453125, -0.000370025634765625, 0.0, -0.00014221663877833635, -7.152556463552173e-06, -1.1444091796875e-05, -0.0001087188720703125, -1.9073486328125e-05, -0.00054931640625, -9.5367431640625e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.00017368793487548828, -3.814697265625e-06, -0.018576502799987793, 0.0, -0.0002487831225153059, -1.9073486328125e-06, -0.0043659210205078125, -0.0072269439697265625, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.7550554275512695, 0.0], "choice_history": [97, 285, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 1, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole3": "use", "hole0": "FanOfKnives", "_type": "Template5", "hole2": [{"hole2": "ROGUE", "_type": "Template31", "hole1": 3, "hole0": "Fan of Knives"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.060859594529482, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n\n        def can_use(self, player, game):\n            return super().can_use(player, game) and len(game.other_player.\n                minions) >= 1\n"}, {"score_history": [-6.4849853515625e-05, -0.0001068115234375, -1.7881377516459906e-06, -0.000947797205299139, -1.3470558769768104e-05, -8.475421054754406e-05, -8.344646857949556e-07, -5.400113150244579e-05, -1.2516919014160521e-05, -1.52587890625e-05, -5.281193733215332, -0.000804901123046875, -1.1920928244535389e-07, -0.000118255615234375, -2.6702880859375e-05, -0.000102996826171875, -0.0009213685989379883, -2.3841855067985307e-07, -1.1920928244535389e-07, -1.9073486328125e-06, -0.012390851974487305, -1.9073486328125e-06, -0.014436960220336914, 0.0, -0.000244140625, -9.5367431640625e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.0001068115234375, -7.62939453125e-06, -0.00028765201568603516, -1.3709068298339844e-05, -0.00019466876983642578, -1.9073486328125e-06, -0.03692798316478729, -7.867794920457527e-06, -4.0531158447265625e-05, 0.0, -2.813339051499497e-05, 0.0, -6.4849853515625e-05, -1.71661376953125e-05, -6.556507287314162e-06, -1.0728830375228426e-06, -0.0006542205810546875, -4.00543212890625e-05, -0.00018310546875, -0.00070953369140625, -0.0001506805419921875, -2.86102294921875e-05, 0.0, -4.649161837733118e-06, -1.52587890625e-05, -1.3589850823336747e-05, 0.0, -1.0490395652595907e-05, -1.1920928244535389e-07, -4.7326026106020436e-05, -2.3841855067985307e-07, -1.0095558166503906, -0.0001468658447265625, -0.0002460479736328125, 0.0, -0.00021374225616455078, 0.0, -0.000514984130859375, -8.0108642578125e-05, -6.29425048828125e-05, -4.38690185546875e-05, -3.24249267578125e-05, 0.0, -0.0012323856353759766, -9.655952453613281e-06, -0.000217437744140625, -1.33514404296875e-05, -2.288818359375e-05, -0.000102996826171875, -3.814697265625e-06, -2.47955322265625e-05, -3.814697265625e-06, -0.0001735687255859375, -5.7220458984375e-06, -8.809566497802734e-05, -1.9073486328125e-06, -0.015440702438354492, 0.0, -0.00036859477404505014, -3.814697265625e-06, -1.71661376953125e-05, -0.0002193450927734375, -0.000240325927734375, -0.0003871917724609375, -0.002162933349609375, -0.00022208644077181816, -4.887569048150908e-06, -0.0015749444719403982, 0.0, -1.33514404296875e-05, -0.0008029937744140625, -2.09808349609375e-05, -0.0006174063892103732, -0.0001481661747675389, -0.0001544952392578125, -0.0001220703125, -0.00049495609709993, -0.00020837783813476562, -0.00623321533203125, -0.0008087158203125, -0.012441635131835938, -3.814697265625e-06, -0.000431060791015625, -2.288818359375e-05, -4.172325134277344e-06, -2.3841855067985307e-07, -0.0009534358396194875, -1.9073486328125e-05], "choice_history": [97, 285, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "FanOfKnives", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Fan of Knives", "_type": "Template27", "hole2": "ROGUE", "hole1": 3}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.4081692339592635, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score_history": [-6.4849853515625e-05, -0.0001068115234375, -1.7881377516459906e-06, -0.000947797205299139, -1.3470558769768104e-05, -8.475421054754406e-05, -8.344646857949556e-07, -5.400113150244579e-05, -1.2516919014160521e-05, -1.52587890625e-05, -5.281193733215332, -0.000804901123046875, -1.1920928244535389e-07, -0.000118255615234375, -2.6702880859375e-05, -0.000102996826171875, -0.0009213685989379883, -2.3841855067985307e-07, -1.1920928244535389e-07, -1.9073486328125e-06, -0.012390851974487305, -1.9073486328125e-06, -0.014436960220336914, 0.0, -0.000244140625, -9.5367431640625e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.0001068115234375, -7.62939453125e-06, -0.00028765201568603516, -1.3709068298339844e-05, -0.00019466876983642578, -1.9073486328125e-06, -0.03692798316478729, -7.867794920457527e-06, -4.0531158447265625e-05, 0.0, -2.813339051499497e-05, 0.0, -6.4849853515625e-05, -1.71661376953125e-05, -6.556507287314162e-06, -1.0728830375228426e-06, -0.0006542205810546875, -4.00543212890625e-05, -0.00018310546875, -0.00070953369140625, -0.0001506805419921875, -2.86102294921875e-05, 0.0, -4.649161837733118e-06, -1.52587890625e-05, -1.3589850823336747e-05, 0.0, -1.0490395652595907e-05, -1.1920928244535389e-07, -4.7326026106020436e-05, -2.3841855067985307e-07, -0.4596738815307617, -8.58306884765625e-05, -0.0002651214599609375, -3.62396240234375e-05, -0.578369140625, 0.0, -0.03111410140991211, -1.1444091796875e-05, -2.300739288330078e-05, -4.887569048150908e-06, -0.0006521922769024968, -2.3841855067985307e-07, -2.09808349609375e-05, -0.001220703125, -2.47955322265625e-05, -0.0004947162815369666, -0.00022706791060045362, -3.814697265625e-05, -0.0001983642578125, -0.0008865593117661774, -0.0001608133316040039, -0.0015125274658203125, -0.0005702972412109375, -0.030997276306152344, -3.814697265625e-06, -0.0003204345703125, -1.9073486328125e-05, -6.079673767089844e-06, -1.1920928244535389e-07, -0.0011996030807495117, -1.71661376953125e-05], "choice_history": [97, 285, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "FanOfKnives", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Fan of Knives", "_type": "Template27", "hole2": "ROGUE", "hole1": 3}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.459383581232601, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score_history": [-6.4849853515625e-05, -0.0001068115234375, -1.7881377516459906e-06, -0.000947797205299139, -1.3470558769768104e-05, -8.475421054754406e-05, -8.344646857949556e-07, -5.400113150244579e-05, -1.2516919014160521e-05, -1.52587890625e-05, -0.00542449951171875, -0.006591796875, -2.1338462829589844e-05, -0.00018131732940673828, -1.33514404296875e-05, -9.918212890625e-05, -0.0005785226821899414, -1.9073486328125e-06, -1.072882923836005e-06, 0.0, -0.006237030029296875, 0.0, -1.1444091796875e-05, 0.0, -7.987022399902344e-06, 0.0, -6.67572021484375e-05, -1.52587890625e-05, -8.940672159951646e-06, -2.861018856492592e-06, -0.000762939453125, -4.76837158203125e-05, -2.86102294921875e-05, -0.00104522705078125, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -4.649161837733118e-06, -1.33514404296875e-05, -1.1444084520917386e-05, 0.0, -1.4662702596979216e-05, -1.1920928244535389e-07, -3.087519871769473e-05, -5.960462772236497e-07, -0.0001850128173828125, -0.000438690185546875, -0.0004863739013671875, -1.9073486328125e-06, -0.0002690553665161133, 0.0, -0.0003452301025390625, -9.72747802734375e-05, -6.29425048828125e-05, -5.53131103515625e-05, -3.24249267578125e-05, 0.0, -0.0014172792434692383, -9.5367431640625e-06, -0.0002155303955078125, -1.1444091796875e-05, -1.71661376953125e-05, -0.000110626220703125, -5.7220458984375e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.0001659393310546875, -5.7220458984375e-06, -8.416175842285156e-05, -1.9073486328125e-06, -0.016139745712280273, 0.0, -0.00033807719592005014, -3.814697265625e-06, -1.52587890625e-05, -0.000179290771484375, -0.000263214111328125, -0.00040435791015625, -0.0017642974853515625, -0.00022327863553073257, -4.768360213347478e-06, -0.0014811489963904023, 0.0, -1.33514404296875e-05, -0.00080108642578125, -2.288818359375e-05, -0.0006185979582369328, -0.00015031162183731794, -0.0001583099365234375, -0.0001220703125, -0.00048565774341113865, -0.00020647048950195312, -6.360474586486816, -0.0012187957763671875, -0.001857757568359375, 0.0, -0.00895702838897705, -1.1920928244535389e-07, -0.006153106689453125, -8.0108642578125e-05, -0.030994415283203125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0003323554992675781, 0.0, -0.0007277727127075195, 0.0, -0.015708336606621742, -5.9604644775390625e-06, -4.76837158203125e-05, -0.0036678314208984375, -0.0001220703125, -0.00042724609375, -0.00255584716796875, -8.368490671273321e-05, -2.622600959512056e-06, -0.05148975923657417, 0.0, -1.71661376953125e-05, -0.0005970001220703125, -2.288818359375e-05, -0.0006113191484473646, -0.0001411338453181088, -0.0001697540283203125, -0.0001277923583984375, -0.0006297813379205763, -0.00019311904907226562], "choice_history": [97, 285, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "FanOfKnives", "_type": "Template5", "hole2": [{"hole2": "ROGUE", "_type": "Template31", "hole1": 3, "hole0": "Fan of Knives"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.537437917394229, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score_history": [-6.4849853515625e-05, -0.0001068115234375, -1.7881377516459906e-06, -0.000947797205299139, -1.3470558769768104e-05, -8.475421054754406e-05, -8.344646857949556e-07, -5.400113150244579e-05, -1.2516919014160521e-05, -1.52587890625e-05, -5.281193733215332, -0.000804901123046875, -1.1920928244535389e-07, -0.000118255615234375, -2.6702880859375e-05, -0.000102996826171875, -0.0009213685989379883, -2.3841855067985307e-07, -1.1920928244535389e-07, -1.9073486328125e-06, -0.012390851974487305, -1.9073486328125e-06, -0.014436960220336914, 0.0, -0.000244140625, -9.5367431640625e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.0001068115234375, -7.62939453125e-06, -0.00028765201568603516, -1.3709068298339844e-05, -0.00019466876983642578, -1.9073486328125e-06, -0.03692798316478729, -7.867794920457527e-06, -4.0531158447265625e-05, 0.0, -2.813339051499497e-05, 0.0, -6.4849853515625e-05, -1.71661376953125e-05, -6.556507287314162e-06, -1.0728830375228426e-06, -0.0006542205810546875, -4.00543212890625e-05, -0.00018310546875, -0.00070953369140625, -0.0001506805419921875, -2.86102294921875e-05, 0.0, -4.649161837733118e-06, -1.52587890625e-05, -1.3589850823336747e-05, 0.0, -1.0490395652595907e-05, -1.1920928244535389e-07, -4.7326026106020436e-05, -2.3841855067985307e-07, -0.4596738815307617, -8.58306884765625e-05, -0.0002651214599609375, -3.62396240234375e-05, -0.8230476379394531, 0.0, -2.09808349609375e-05, 0.0, -0.00013017654418945312, 0.0, -0.01101541519165039, 0.0, -0.000255802646279335, -5.960462772236497e-07, -0.0029654421377927065, -1.0728830375228426e-06, -2.6702880859375e-05, -0.0007724761962890625, -8.0108642578125e-05, -9.942007454810664e-05, -0.0002108589978888631, -7.82012939453125e-05, -9.918212890625e-05, -0.0003180500934831798, -8.785724639892578e-05, -0.0006771087646484375, -0.0003833770751953125, -0.027568817138671875, -1.9073486328125e-06, -0.0002803802490234375, -1.33514404296875e-05, -5.9604644775390625e-06, -1.1920928244535389e-07, -0.0009424686431884766, -1.33514404296875e-05], "choice_history": [97, 285, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "FanOfKnives", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Fan of Knives", "_type": "Template27", "hole2": "ROGUE", "hole1": 3}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.6803868535742765, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score_history": [-6.4849853515625e-05, -0.0001068115234375, -1.7881377516459906e-06, -0.000947797205299139, -1.3470558769768104e-05, -8.475421054754406e-05, -8.344646857949556e-07, -5.400113150244579e-05, -1.2516919014160521e-05, -1.52587890625e-05, -0.00542449951171875, -0.006591796875, -2.1338462829589844e-05, -0.00018131732940673828, -1.33514404296875e-05, -9.918212890625e-05, -0.0005785226821899414, -1.9073486328125e-06, -1.072882923836005e-06, 0.0, -6.707952499389648, -1.9073486328125e-06, -1.3709068298339844e-05, 0.0, -1.2993811651540454e-05, 0.0, -4.76837158203125e-05, -3.814697265625e-05, -8.463837730232626e-06, -1.7881377516459906e-06, -0.0008697509765625, -5.7220458984375e-05, -2.86102294921875e-05, -0.0008335113525390625, -2.6702880859375e-05, -7.62939453125e-06, 0.0, -4.649161837733118e-06, -1.33514404296875e-05, -1.1086458471254446e-05, 0.0, -1.41858699862496e-05, -1.1920928244535389e-07, -3.266333806095645e-05, -5.960462772236497e-07, -0.000194549560546875, -0.0004405975341796875, -0.00049591064453125, -1.9073486328125e-06, -0.0002690553665161133, 0.0, -0.000335693359375, -9.72747802734375e-05, -6.29425048828125e-05, -5.53131103515625e-05, -3.24249267578125e-05, 0.0, -0.001413583755493164, -9.5367431640625e-06, -0.0002155303955078125, -1.1444091796875e-05, -1.71661376953125e-05, -0.000110626220703125, -5.7220458984375e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.0001659393310546875, -5.7220458984375e-06, -8.416175842285156e-05, -1.9073486328125e-06, -0.016091108322143555, 0.0, -0.00033807719592005014, -3.814697265625e-06, -1.52587890625e-05, -0.0001811981201171875, -0.0002651214599609375, -0.00040435791015625, -0.0017719268798828125, -0.0002243515191366896, -4.768360213347478e-06, -0.0014831727603450418, 0.0, -1.33514404296875e-05, -0.00080108642578125, -2.288818359375e-05, -0.0006184788071550429, -0.0001501924270996824, -0.0001583099365234375, -0.0001220703125, -0.00048577695270068944, -0.00020647048950195312, -0.01064300537109375, -0.000667572021484375, -0.0102996826171875, -5.7220458984375e-06, -0.0004253387451171875, -1.9073486328125e-05, -4.172325134277344e-06, -2.3841855067985307e-07, -0.0011185407638549805, -2.09808349609375e-05], "choice_history": [97, 285, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "FanOfKnives", "_type": "Template5", "hole2": [{"hole2": "HUNTER", "_type": "Template31", "hole1": 3, "hole0": "Fan of Knives"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.774815974762667, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score_history": [-6.4849853515625e-05, -0.0001068115234375, -1.7881377516459906e-06, -0.000947797205299139, -1.3470558769768104e-05, -8.475421054754406e-05, -8.344646857949556e-07, -5.400113150244579e-05, -1.2516919014160521e-05, -1.52587890625e-05, -0.00542449951171875, -0.006591796875, -2.1338462829589844e-05, -0.00018131732940673828, -1.33514404296875e-05, -9.918212890625e-05, -0.0005785226821899414, -1.9073486328125e-06, -1.072882923836005e-06, 0.0, -0.006237030029296875, 0.0, -1.1444091796875e-05, 0.0, -7.987022399902344e-06, 0.0, -6.67572021484375e-05, -1.52587890625e-05, -8.940672159951646e-06, -2.861018856492592e-06, -0.000762939453125, -4.76837158203125e-05, -2.86102294921875e-05, -0.00104522705078125, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -4.649161837733118e-06, -1.33514404296875e-05, -1.1444084520917386e-05, 0.0, -1.4662702596979216e-05, -1.1920928244535389e-07, -3.087519871769473e-05, -5.960462772236497e-07, -0.0001850128173828125, -0.000438690185546875, -0.0004863739013671875, -1.9073486328125e-06, -0.0002690553665161133, 0.0, -0.0003452301025390625, -9.72747802734375e-05, -6.29425048828125e-05, -5.53131103515625e-05, -3.24249267578125e-05, 0.0, -0.0014172792434692383, -9.5367431640625e-06, -0.0002155303955078125, -1.1444091796875e-05, -1.71661376953125e-05, -0.000110626220703125, -5.7220458984375e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.0001659393310546875, -5.7220458984375e-06, -8.416175842285156e-05, -1.9073486328125e-06, -6.885981559753418, 0.0, -0.0008879899396561086, -1.9073486328125e-06, -1.9073486328125e-05, -0.0002346038818359375, -0.0003185272216796875, -0.0002765655517578125, -0.00435638427734375, -0.00026094887289218605, -4.768360213347478e-06, -0.0015785092255100608, 0.0, -1.33514404296875e-05, -0.0007686614990234375, -2.288818359375e-05, -0.0006492189131677151, -0.00015031162183731794, -0.000148773193359375, -0.0001239776611328125, -0.00048792280722409487, -0.00019884109497070312, -0.011539459228515625, -0.0007152557373046875, -0.010288238525390625, -5.7220458984375e-06, -0.0004215240478515625, -2.09808349609375e-05, -4.172325134277344e-06, -2.3841855067985307e-07, -0.0011092424392700195, -1.9073486328125e-05], "choice_history": [97, 285, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "minions", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "minions"}]}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "FanOfKnives", "_type": "Template5", "hole2": [{"hole2": "ROGUE", "_type": "Template31", "hole1": 3, "hole0": "Fan of Knives"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.947216402908815, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.minions.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score_history": [-6.4849853515625e-05, -0.0001068115234375, -1.7881377516459906e-06, -0.000947797205299139, -1.3470558769768104e-05, -8.475421054754406e-05, -8.344646857949556e-07, -5.400113150244579e-05, -1.2516919014160521e-05, -1.52587890625e-05, -0.00542449951171875, -0.006591796875, -2.1338462829589844e-05, -0.00018131732940673828, -1.33514404296875e-05, -9.918212890625e-05, -0.0005785226821899414, -1.9073486328125e-06, -1.072882923836005e-06, 0.0, -0.006237030029296875, 0.0, -1.1444091796875e-05, 0.0, -7.987022399902344e-06, 0.0, -6.67572021484375e-05, -1.52587890625e-05, -8.940672159951646e-06, -2.861018856492592e-06, -0.000762939453125, -4.76837158203125e-05, -2.86102294921875e-05, -0.00104522705078125, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -4.649161837733118e-06, -1.33514404296875e-05, -1.1444084520917386e-05, 0.0, -1.4662702596979216e-05, -1.1920928244535389e-07, -3.087519871769473e-05, -5.960462772236497e-07, -0.0001850128173828125, -0.000438690185546875, -0.0004863739013671875, -1.9073486328125e-06, -0.0002690553665161133, 0.0, -0.0003452301025390625, -9.72747802734375e-05, -6.29425048828125e-05, -5.53131103515625e-05, -3.24249267578125e-05, 0.0, -0.0014172792434692383, -9.5367431640625e-06, -0.0002155303955078125, -1.1444091796875e-05, -1.71661376953125e-05, -0.000110626220703125, -5.7220458984375e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.0001659393310546875, -5.7220458984375e-06, -8.416175842285156e-05, -1.9073486328125e-06, -6.916285991668701, -2.47955322265625e-05, -0.00010859957546927035, -3.814697265625e-06, -1.52587890625e-05, -0.000286102294921875, -0.0001888275146484375, -0.0003070831298828125, -0.0037441253662109375, -0.00024235222372226417, -5.245195097813848e-06, -0.001457802951335907, 0.0, -1.33514404296875e-05, -0.0007877349853515625, -2.288818359375e-05, -0.0006367078167386353, -0.0001538873475510627, -0.0001506805419921875, -0.00012969970703125, -0.000491737388074398, -0.00020074844360351562, -0.011310577392578125, -0.00070953369140625, -0.010540008544921875, -5.7220458984375e-06, -0.00042724609375, -2.09808349609375e-05, -4.172325134277344e-06, -2.3841855067985307e-07, -0.001120924949645996, -1.9073486328125e-05], "choice_history": [97, 285, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "opponent", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "minions"}]}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "FanOfKnives", "_type": "Template5", "hole2": [{"hole2": "ROGUE", "_type": "Template31", "hole1": 3, "hole0": "Fan of Knives"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.976023624061689, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.opponent.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score_history": [-6.4849853515625e-05, -0.0001068115234375, -1.7881377516459906e-06, -0.000947797205299139, -1.3470558769768104e-05, -8.475421054754406e-05, -8.344646857949556e-07, -5.400113150244579e-05, -1.2516919014160521e-05, -1.52587890625e-05, -0.00542449951171875, -0.006591796875, -2.1338462829589844e-05, -0.00018131732940673828, -1.33514404296875e-05, -9.918212890625e-05, -0.0005785226821899414, -1.9073486328125e-06, -1.072882923836005e-06, 0.0, -0.006237030029296875, 0.0, -1.1444091796875e-05, 0.0, -7.987022399902344e-06, 0.0, -6.67572021484375e-05, -1.52587890625e-05, -8.940672159951646e-06, -2.861018856492592e-06, -0.000762939453125, -4.76837158203125e-05, -2.86102294921875e-05, -0.00104522705078125, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -4.649161837733118e-06, -1.33514404296875e-05, -1.1444084520917386e-05, 0.0, -1.4662702596979216e-05, -1.1920928244535389e-07, -3.087519871769473e-05, -5.960462772236497e-07, -0.0001850128173828125, -0.000438690185546875, -0.0004863739013671875, -1.9073486328125e-06, -0.0002690553665161133, 0.0, -0.0003452301025390625, -9.72747802734375e-05, -6.29425048828125e-05, -5.53131103515625e-05, -3.24249267578125e-05, 0.0, -0.0014172792434692383, -9.5367431640625e-06, -0.0002155303955078125, -1.1444091796875e-05, -1.71661376953125e-05, -0.000110626220703125, -5.7220458984375e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.0001659393310546875, -5.7220458984375e-06, -8.416175842285156e-05, -1.9073486328125e-06, -0.016139745712280273, 0.0, -0.00033807719592005014, -3.814697265625e-06, -1.52587890625e-05, -0.000179290771484375, -0.000263214111328125, -0.00040435791015625, -0.0017642974853515625, -0.00022327863553073257, -4.768360213347478e-06, -6.654175758361816, -8.344646857949556e-07, -1.33514404296875e-05, -0.045864105224609375, -0.033477783203125, -0.2738182544708252, -0.00012743467232212424, -0.06602859497070312, -0.014934539794921875, -0.0005283355712890625, -1.9073486328125e-06, -9.5367431640625e-06, -0.000720977783203125, -0.002074003219604492, -7.152555099310121e-07, -0.0012589686084538698, -5.7220458984375e-06], "choice_history": [97, 285, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "add_buff", "<EOS>", 346, 69, 290, "Frozen", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template54", "hole0": "Frozen"}], "_type": "Template77", "hole1": "add_buff", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "FanOfKnives", "_type": "Template5", "hole2": [{"hole2": "ROGUE", "_type": "Template31", "hole1": 3, "hole0": "Fan of Knives"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.13898463833339, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.add_buff(Buff(Frozen()))\n        player.draw()\n"}, {"score_history": [-6.4849853515625e-05, -0.0001068115234375, -1.7881377516459906e-06, -0.000947797205299139, -1.3470558769768104e-05, -8.475421054754406e-05, -8.344646857949556e-07, -5.400113150244579e-05, -1.2516919014160521e-05, -1.52587890625e-05, -0.00542449951171875, -0.006591796875, -2.1338462829589844e-05, -0.00018131732940673828, -1.33514404296875e-05, -9.918212890625e-05, -0.0005785226821899414, -1.9073486328125e-06, -1.072882923836005e-06, 0.0, -0.006237030029296875, 0.0, -1.1444091796875e-05, 0.0, -7.987022399902344e-06, 0.0, -6.67572021484375e-05, -1.52587890625e-05, -8.940672159951646e-06, -2.861018856492592e-06, -0.000762939453125, -4.76837158203125e-05, -2.86102294921875e-05, -0.00104522705078125, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -4.649161837733118e-06, -1.33514404296875e-05, -1.1444084520917386e-05, 0.0, -1.4662702596979216e-05, -1.1920928244535389e-07, -3.087519871769473e-05, -5.960462772236497e-07, -0.0001850128173828125, -0.000438690185546875, -0.0004863739013671875, -1.9073486328125e-06, -0.0002690553665161133, 0.0, -0.0003452301025390625, -9.72747802734375e-05, -6.29425048828125e-05, -5.53131103515625e-05, -3.24249267578125e-05, 0.0, -0.0014172792434692383, -9.5367431640625e-06, -0.0002155303955078125, -1.1444091796875e-05, -1.71661376953125e-05, -0.000110626220703125, -5.7220458984375e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.0001659393310546875, -5.7220458984375e-06, -8.416175842285156e-05, -1.9073486328125e-06, -0.016139745712280273, 0.0, -0.00033807719592005014, -3.814697265625e-06, -1.52587890625e-05, -0.000179290771484375, -0.000263214111328125, -0.00040435791015625, -0.0017642974853515625, -0.00022327863553073257, -4.768360213347478e-06, -0.0014811489963904023, 0.0, -1.33514404296875e-05, -0.00080108642578125, -2.288818359375e-05, -0.0006185979582369328, -0.00015031162183731794, -0.0001583099365234375, -0.0001220703125, -0.00048565774341113865, -0.00020647048950195312, -6.852954864501953, -0.01306915283203125, -0.08842849731445312, -4.1961669921875e-05, -0.001720428466796875, -2.86102294921875e-05, -0.002017974853515625, -3.814697265625e-06, -0.01080620288848877, -3.576278118089249e-07, -0.01357310451567173, 0.0, -1.9073486328125e-06, -0.0032224655151367188, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.006976458244025707, 0.0, -0.0008525848388671875, -0.2080221176147461, -0.0024852752685546875, -0.00464630126953125, -3.814697265625e-06, -1.1444091796875e-05, -7.43865966796875e-05, -3.111359183094464e-05, -4.768370445162873e-07, -0.0014110751217231154, -2.110004425048828e-05], "choice_history": [97, 285, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 109, 160, 17, 153, 13, 143, 21, 174, "player", "<EOS>", "cards_played", "<EOS>", 343, 5, 346, 52, 179, "0", "<EOS>", 358, 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"body": [{"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "_type": "If", "test": {"comparators": [{"n": 0, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "cards_played"}}}], "hole3": "use", "hole0": "FanOfKnives", "_type": "Template5", "hole2": [{"hole2": "ROGUE", "_type": "Template31", "hole1": 3, "hole0": "Fan of Knives"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.260416828334421, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        if player.cards_played > 0:\n            player.draw()\n"}]}
{"index": 32, "beams": [{"score_history": [-0.000972747802734375, -0.000133514404296875, -1.9073486328125e-06, -0.0001277923583984375, -0.00012969970703125, -2.0146166207268834e-05, -2.634490556374658e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003653703606687486, -7.641315460205078e-05, -9.655952453613281e-06, -7.62939453125e-05, -0.0052204132080078125, -0.0002384185791015625, -4.053113570989808e-06, 0.0, -3.5762775496550603e-07, -1.9073486328125e-06, -0.0004825592041015625, -5.7220458984375e-06, -0.00010311603546142578, 0.0, -0.0009784698486328125, -0.0004329681396484375, -0.0004482269287109375, -0.00043892860412597656, -2.09808349609375e-05, -0.00072479248046875, -2.47955322265625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -6.67572021484375e-05, -5.91278076171875e-05, -0.00018453598022460938, -5.936622619628906e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0014364647213369608, -2.3841830625315197e-06, -9.72747802734375e-05, -1.52587890625e-05, -3.62396240234375e-05, 0.0, -0.00110626220703125, 0.0, -0.00011873245239257812, -1.9073486328125e-06, -8.52346420288086e-05, -8.4638240878121e-06, -6.270203448366374e-05, -2.3841855067985307e-07, -0.000514984130859375, -0.0013895034790039062, -3.24249267578125e-05, -0.004392743110656738, -4.768370445162873e-07, -3.0517578125e-05, -7.62939453125e-06, -0.0012311802711337805, -0.000655055046081543], "choice_history": [96, 173, 358, 105, 152, "Fireball", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Fireball", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "6", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Fireball", "_type": "Template14", "hole2": "MAGE", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 4}, {"hole2": [{"_type": "Template61", "hole0": 6}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Fireball"}], "_type": "Module"}, "score": -0.022704929671107266, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score_history": [-0.000972747802734375, -0.000133514404296875, -1.9073486328125e-06, -0.0001277923583984375, -0.00012969970703125, -2.0146166207268834e-05, -2.634490556374658e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003653703606687486, -7.641315460205078e-05, -9.655952453613281e-06, -7.62939453125e-05, -0.0052204132080078125, -0.0002384185791015625, -4.053113570989808e-06, 0.0, -3.5762775496550603e-07, -1.9073486328125e-06, -0.0004825592041015625, -5.7220458984375e-06, -0.00010311603546142578, 0.0, -0.0009784698486328125, -0.0004329681396484375, -0.0004482269287109375, -0.00043892860412597656, -2.09808349609375e-05, -0.00072479248046875, -2.47955322265625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -6.67572021484375e-05, -5.91278076171875e-05, -0.00018453598022460938, -5.936622619628906e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0014364647213369608, -2.3841830625315197e-06, -9.72747802734375e-05, -1.52587890625e-05, -3.62396240234375e-05, 0.0, -0.00110626220703125, 0.0, -0.00011873245239257812, -1.9073486328125e-06, -8.52346420288086e-05, -8.4638240878121e-06, -6.270203448366374e-05, -2.3841855067985307e-07, -0.000514984130859375, -0.0013895034790039062, -3.24249267578125e-05, -5.432360649108887, -2.2649765014648438e-06, -4.38690185546875e-05, -5.7220458984375e-06, -0.001857398310676217, -0.00023126602172851562], "choice_history": [96, 173, 358, 105, 152, "Fireball", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Fireball", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "4", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Fireball", "_type": "Template14", "hole2": "MAGE", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 4}, {"hole2": [{"_type": "Template61", "hole0": 4}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Fireball"}], "_type": "Module"}, "score": -5.4508884969157805, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(4), self)\n"}, {"score_history": [-0.000972747802734375, -0.000133514404296875, -1.9073486328125e-06, -0.0001277923583984375, -0.00012969970703125, -2.0146166207268834e-05, -2.634490556374658e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003653703606687486, -7.641315460205078e-05, -9.655952453613281e-06, -7.62939453125e-05, -0.0052204132080078125, -0.0002384185791015625, -4.053113570989808e-06, 0.0, -3.5762775496550603e-07, -1.9073486328125e-06, -0.0004825592041015625, -5.7220458984375e-06, -0.00010311603546142578, 0.0, -0.0009784698486328125, -0.0004329681396484375, -0.0004482269287109375, -0.00043892860412597656, -2.09808349609375e-05, -0.00072479248046875, -2.47955322265625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -6.67572021484375e-05, -5.91278076171875e-05, -0.00018453598022460938, -5.936622619628906e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0014364647213369608, -2.3841830625315197e-06, -9.72747802734375e-05, -1.52587890625e-05, -3.62396240234375e-05, 0.0, -6.816717147827148, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.024407386779785156, 0.0, -0.01973581314086914, 0.0, -0.0037012076936662197, -3.3378546504536644e-06, -0.00039986695628613234, -6.794906312279636e-06, -0.0008525848388671875, -0.0014781951904296875, -0.0001087188720703125, -0.00199735164642334, -1.4305104514278355e-06, -8.20159912109375e-05, -7.62939453125e-06, -0.0018495232798159122, -0.0002713202848099172], "choice_history": [96, 173, 358, 105, 152, "Fireball", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Fireball", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "6", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Fireball", "_type": "Template14", "hole2": "MAGE", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 4}, {"hole2": [{"_type": "Template61", "hole0": 6}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}], "_type": "ClassDef", "name": "Fireball"}], "_type": "Module"}, "score": -6.884713902017893, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(6), self)\n"}, {"score_history": [-0.000972747802734375, -0.000133514404296875, -1.9073486328125e-06, -0.0001277923583984375, -0.00012969970703125, -2.0146166207268834e-05, -2.634490556374658e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003653703606687486, -7.641315460205078e-05, -9.655952453613281e-06, -7.62939453125e-05, -7.393644332885742, -0.00836181640625, -6.556510470545618e-06, -1.5497195136049413e-06, -2.6225941383017926e-06, 0.0, -0.00025177001953125, -6.4849853515625e-05, -0.0903787612915039, -1.9073486328125e-06, -0.020244598388671875, -5.7220458984375e-06, -0.0036029815673828125, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0006892681121826172, -1.71661376953125e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.0011253926204517484, -2.145764938177308e-06, -0.0001010894775390625, -1.71661376953125e-05, -3.814697265625e-05, 0.0, -0.0013561248779296875, 0.0, -0.0002828836441040039, -1.9073486328125e-06, -0.0002300739288330078, -8.22540732769994e-06, -6.162923091324046e-05, -3.576278118089249e-07, -0.0006256103515625, -0.0013227462768554688, -1.33514404296875e-05, -0.005060672760009766, -5.960462772236497e-07, -2.09808349609375e-05, -9.5367431640625e-06, -0.0024151578545570374, -0.00027108192443847656], "choice_history": [96, 173, 358, 105, 152, "Fireball", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 137, 326, "Fireball", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "6", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "FREE", "hole0": "Fireball", "_type": "Template8", "hole2": "MAGE", "hole1": 4}, {"hole2": [{"_type": "Template61", "hole0": 6}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Fireball"}], "_type": "Module"}, "score": -7.532245423460267, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, FREE=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score_history": [-0.000972747802734375, -0.000133514404296875, -1.9073486328125e-06, -0.0001277923583984375, -0.00012969970703125, -2.0146166207268834e-05, -2.634490556374658e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003653703606687486, -7.641315460205078e-05, -9.655952453613281e-06, -7.62939453125e-05, -0.0052204132080078125, -0.0002384185791015625, -4.053113570989808e-06, 0.0, -3.5762775496550603e-07, -1.9073486328125e-06, -0.0004825592041015625, -5.7220458984375e-06, -0.00010311603546142578, 0.0, -0.0009784698486328125, -0.0004329681396484375, -0.0004482269287109375, -0.00043892860412597656, -2.09808349609375e-05, -0.00072479248046875, -2.47955322265625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -6.67572021484375e-05, -5.91278076171875e-05, -0.00018453598022460938, -5.936622619628906e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0014364647213369608, -2.3841830625315197e-06, -9.72747802734375e-05, -1.52587890625e-05, -3.62396240234375e-05, 0.0, -0.00110626220703125, 0.0, -0.00011873245239257812, -1.9073486328125e-06, -8.52346420288086e-05, -8.4638240878121e-06, -6.270203448366374e-05, -2.3841855067985307e-07, -0.000514984130859375, -0.0013895034790039062, -3.24249267578125e-05, -0.004392743110656738, -4.768370445162873e-07, -3.0517578125e-05, -7.62939453125e-06, -0.0012311802711337805, -7.594759941101074, 0.0], "choice_history": [96, 173, 358, 105, 152, "Fireball", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Fireball", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "6", "<EOS>", 50, 174, "self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Fireball", "_type": "Template14", "hole2": "MAGE", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 4}, {"hole2": [{"_type": "Template61", "hole0": 6}, {"_type": "Name", "id": "selfSelector"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Fireball"}], "_type": "Module"}, "score": -7.6168098157261, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), selfSelector)\n"}, {"score_history": [-0.000972747802734375, -0.000133514404296875, -1.9073486328125e-06, -0.0001277923583984375, -0.00012969970703125, -2.0146166207268834e-05, -2.634490556374658e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003653703606687486, -7.641315460205078e-05, -9.655952453613281e-06, -7.62939453125e-05, -7.483179092407227, -0.06630325317382812, -2.8729025871143676e-05, -1.1920928244535389e-07, -2.3841852225814364e-07, 0.0, -0.006185770034790039, 0.0, -0.03273773193359375, -0.0003566741943359375, -0.0010395050048828125, 0.0, -0.008394241333007812, 0.0, -0.01067662239074707, -1.1920928244535389e-07, -0.00012636184692382812, -5.8412379075889476e-06, -3.600055424612947e-05, -1.1920928244535389e-07, -0.0005016326904296875, -0.0007953643798828125, -9.5367431640625e-06, -0.004786252975463867, -1.0728830375228426e-06, -3.814697265625e-05, -1.1444091796875e-05, -0.005606405436992645, -0.0002447366714477539], "choice_history": [96, 173, 358, 105, 152, "Fireball", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 116, 196, "Fireball", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "6", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "MAGE", "_type": "Template12", "hole1": 4, "hole0": "Fireball"}, {"hole2": [{"_type": "Template61", "hole0": 6}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Fireball"}], "_type": "Module"}, "score": -7.623018249574933, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score_history": [-0.000972747802734375, -0.000133514404296875, -1.9073486328125e-06, -0.0001277923583984375, -0.00012969970703125, -2.0146166207268834e-05, -2.634490556374658e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003653703606687486, -7.641315460205078e-05, -9.655952453613281e-06, -7.62939453125e-05, -0.0052204132080078125, -0.0002384185791015625, -4.053113570989808e-06, 0.0, -3.5762775496550603e-07, -1.9073486328125e-06, -0.0004825592041015625, -5.7220458984375e-06, -0.00010311603546142578, 0.0, -0.0009784698486328125, -0.0004329681396484375, -0.0004482269287109375, -0.00043892860412597656, -2.09808349609375e-05, -0.00072479248046875, -2.47955322265625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -6.67572021484375e-05, -5.91278076171875e-05, -0.00018453598022460938, -5.936622619628906e-05, -1.52587890625e-05, -3.814697265625e-06, -7.633405685424805, -3.814697265625e-06, -0.0002231597900390625, -2.288818359375e-05, -7.43865966796875e-05, 0.0, -0.000576019287109375, 0.0, -9.560585021972656e-05, -1.9073486328125e-06, -6.985664367675781e-05, -6.6756979322235566e-06, -3.43316605722066e-05, -2.3841855067985307e-07, -0.0003490447998046875, -0.0013408660888671875, -3.24249267578125e-05, -0.0044536590576171875, -4.768370445162873e-07, -3.814697265625e-05, -7.62939453125e-06, -0.0012520417803898454, -0.000586390495300293], "choice_history": [96, 173, 358, 105, 152, "Fireball", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Fireball", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "targeting", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "6", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Fireball", "_type": "Template14", "hole2": "MAGE", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "targeting"}, "_type": "keyword", "arg": "target_func"}], "hole1": 4}, {"hole2": [{"_type": "Template61", "hole0": 6}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Fireball"}], "_type": "Module"}, "score": -7.6540545018239925, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.targeting)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score_history": [-0.000972747802734375, -0.000133514404296875, -1.9073486328125e-06, -0.0001277923583984375, -0.00012969970703125, -2.0146166207268834e-05, -2.634490556374658e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003653703606687486, -7.641315460205078e-05, -9.655952453613281e-06, -7.62939453125e-05, -0.0052204132080078125, -0.0002384185791015625, -4.053113570989808e-06, 0.0, -3.5762775496550603e-07, -1.9073486328125e-06, -0.0004825592041015625, -5.7220458984375e-06, -0.00010311603546142578, 0.0, -0.0009784698486328125, -0.0004329681396484375, -0.0004482269287109375, -0.00043892860412597656, -2.09808349609375e-05, -0.00072479248046875, -2.47955322265625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -6.67572021484375e-05, -5.91278076171875e-05, -0.00018453598022460938, -5.936622619628906e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0014364647213369608, -2.3841830625315197e-06, -9.72747802734375e-05, -1.52587890625e-05, -3.62396240234375e-05, 0.0, -0.00110626220703125, 0.0, -0.00011873245239257812, -1.9073486328125e-06, -8.52346420288086e-05, -8.4638240878121e-06, -6.270203448366374e-05, -2.3841855067985307e-07, -0.000514984130859375, -7.51181697845459, -5.53131103515625e-05, -0.07359122484922409, 0.0, -0.17394542694091797, -1.9073486328125e-06, -0.00028777102124877274, -0.0001360177993774414], "choice_history": [96, 173, 358, 105, 152, "Fireball", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Fireball", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 52, 179, "6", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Fireball", "_type": "Template14", "hole2": "MAGE", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 4}, {"hole2": [{"n": 6, "_type": "Num"}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Fireball"}], "_type": "Module"}, "score": -7.774800038552115, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(6, self)\n"}, {"score_history": [-0.000972747802734375, -0.000133514404296875, -1.9073486328125e-06, -0.0001277923583984375, -0.00012969970703125, -2.0146166207268834e-05, -2.634490556374658e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003653703606687486, -7.641315460205078e-05, -9.655952453613281e-06, -7.62939453125e-05, -0.0052204132080078125, -0.0002384185791015625, -4.053113570989808e-06, 0.0, -3.5762775496550603e-07, -1.9073486328125e-06, -0.0004825592041015625, -5.7220458984375e-06, -0.00010311603546142578, 0.0, -0.0009784698486328125, -0.0004329681396484375, -0.0004482269287109375, -0.00043892860412597656, -2.09808349609375e-05, -0.00072479248046875, -2.47955322265625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -6.67572021484375e-05, -5.91278076171875e-05, -0.00018453598022460938, -5.936622619628906e-05, -1.52587890625e-05, -3.814697265625e-06, -7.939530372619629, -2.0265558760002023e-06, -0.0001850128173828125, -2.86102294921875e-05, -2.47955322265625e-05, 0.0, -0.002197265625, 0.0, -0.0004144906997680664, -1.1920928244535389e-07, -0.00010478496551513672, -7.390948667307384e-06, -4.6252091124188155e-05, -2.3841855067985307e-07, -0.000392913818359375, -0.0012569427490234375, -3.24249267578125e-05, -0.004118204116821289, -4.768370445162873e-07, -3.4332275390625e-05, -7.62939453125e-06, -0.001173721393570304, -0.0006171464920043945], "choice_history": [96, 173, 358, 105, 152, "Fireball", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Fireball", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "6", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Fireball", "_type": "Template14", "hole2": "MAGE", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 4}, {"hole2": [{"_type": "Template61", "hole0": 6}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Fireball"}], "_type": "Module"}, "score": -7.961654403587964, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score_history": [-0.000972747802734375, -0.000133514404296875, -1.9073486328125e-06, -0.0001277923583984375, -0.00012969970703125, -2.0146166207268834e-05, -2.634490556374658e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003653703606687486, -7.641315460205078e-05, -9.655952453613281e-06, -7.62939453125e-05, -0.0052204132080078125, -0.0002384185791015625, -4.053113570989808e-06, 0.0, -3.5762775496550603e-07, -1.9073486328125e-06, -7.96773624420166, -3.814697265625e-06, -3.504753112792969e-05, 0.0, -0.0005645751953125, -0.0002307891845703125, -0.0002803802490234375, -0.00029778480529785156, -1.71661376953125e-05, -0.0006809234619140625, -2.288818359375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -6.866455078125e-05, -4.76837158203125e-05, -0.0002015829086303711, -4.589557647705078e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.001414409140124917, -2.622600959512056e-06, -9.34600830078125e-05, -1.52587890625e-05, -3.62396240234375e-05, 0.0, -0.0012836456298828125, 0.0, -0.00013017654418945312, -1.9073486328125e-06, -0.00012743473052978516, -8.583032467868179e-06, -5.9960402722936124e-05, -2.3841855067985307e-07, -0.00054168701171875, -0.0013942718505859375, -3.24249267578125e-05, -0.004415631294250488, -4.768370445162873e-07, -3.0517578125e-05, -7.62939453125e-06, -0.0012575250584632158, -0.0006628036499023438], "choice_history": [96, 173, 358, 105, 152, "Fireball", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Fireball", "<EOS>", "4", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "6", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Fireball", "_type": "Template14", "hole2": "ROGUE", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 4}, {"hole2": [{"_type": "Template61", "hole0": 6}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Fireball"}], "_type": "Module"}, "score": -7.989199249346228, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score_history": [-0.000972747802734375, -0.000133514404296875, -1.9073486328125e-06, -0.0001277923583984375, -0.00012969970703125, -2.0146166207268834e-05, -2.634490556374658e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.950204372406006, -3.4332275390625e-05, -0.000438690185546875, -0.04967689514160156, -0.0002593994140625, -4.52994936495088e-06, -1.1920928244535389e-07, -5.960462203802308e-07, -3.814697265625e-06, -0.0005016326904296875, -5.7220458984375e-06, -0.00012600421905517578, 0.0, -0.000736236572265625, -0.0004634857177734375, -0.00020599365234375, -0.00031876564025878906, -2.288818359375e-05, -0.00083160400390625, -2.288818359375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -6.866455078125e-05, -6.866455078125e-05, -0.0001806020736694336, -6.127357482910156e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0014917771331965923, -2.3841830625315197e-06, -0.0001049041748046875, -1.71661376953125e-05, -4.00543212890625e-05, 0.0, -0.0017795562744140625, 0.0, -0.00012445449829101562, -1.9073486328125e-06, -0.00010645389556884766, -7.152531907195225e-06, -5.0662616558838636e-05, -2.3841855067985307e-07, -0.00051116943359375, -0.0013637542724609375, -3.24249267578125e-05, -0.004396557807922363, -4.768370445162873e-07, -3.0517578125e-05, -9.5367431640625e-06, -0.0012725453125312924, -0.0006476640701293945], "choice_history": [96, 173, 358, 105, 152, "Fireball", "<EOS>", 346, 50, 174, "damage", "<EOS>", 359, 118, 198, "Fireball", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "6", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "damage"}], "body": [{"hole3": "FREE", "hole0": "Fireball", "_type": "Template14", "hole2": "MAGE", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 4}, {"hole2": [{"_type": "Template61", "hole0": 6}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Fireball"}], "_type": "Module"}, "score": -8.017682647862408, "inferred_code": "class Fireball(damage):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score_history": [-0.000972747802734375, -0.000133514404296875, -1.9073486328125e-06, -9.443203926086426, -0.1403970718383789, -0.16377341747283936, -1.1920928244535389e-07, -0.00048672157572582364, 0.0, -0.008800506591796875, 0.0], "choice_history": [96, 173, 358, 127, 230, "Fireball", "<EOS>", "4", "<EOS>", "ROGUE", "<EOS>"], "model_output": {"body": [{"hole2": "ROGUE", "_type": "Template31", "hole1": 4, "hole0": "Fireball"}], "_type": "Module"}, "score": -9.757769932330113, "inferred_code": "super().__init__('Fireball', 4, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON)\n"}, {"score_history": [-0.000972747802734375, -0.000133514404296875, -1.9073486328125e-06, -9.443203926086426, -0.1403970718383789, -1.95246160030365, -1.1920928244535389e-07, -0.00048672157572582364, 0.0, -0.008800506591796875, 0.0], "choice_history": [96, 173, 358, 127, 230, "<UNK>", "<EOS>", "4", "<EOS>", "ROGUE", "<EOS>"], "model_output": {"body": [{"hole2": "ROGUE", "_type": "Template31", "hole1": 4, "hole0": "<UNK>"}], "_type": "Module"}, "score": -11.546458115160924, "inferred_code": "super().__init__('<UNK>', 4, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON)\n"}, {"score_history": [-0.000972747802734375, -0.000133514404296875, -1.9073486328125e-06, -16.168228149414062], "choice_history": [96, 173, 358, 104], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score": -16.169336318969727, "inferred_code": "break\n"}, {"score_history": [-0.000972747802734375, -0.000133514404296875, -23.157438278198242], "choice_history": [96, 173, 357], "model_output": {"body": [], "_type": "Module"}, "score": -23.158544540405273, "inferred_code": ""}]}
{"index": 33, "beams": [{"score_history": [-2.09808349609375e-05, -0.0006885528564453125, -2.622600959512056e-06, -8.106222594506107e-06, -1.1920928244535389e-07, -5.3048133850097656e-05, -1.4305104514278355e-06, -7.62939453125e-06, -0.0012989044189453125, -0.001140594482421875, -2.2649765014648438e-06, -5.7220458984375e-06, -8.344646857949556e-07, 0.0, -0.001325845718383789, -2.288818359375e-05, -1.3947486877441406e-05, 0.0, -3.206721521564759e-05, 0.0, -2.86102294921875e-05, -0.000164031982421875, -1.1086422091466375e-05, -2.5272369384765625e-05, -0.014578819274902344, -3.4332275390625e-05, -1.1444091796875e-05, -1.71661376953125e-05, -0.0001049041748046875, -9.5367431640625e-06, -1.9073486328125e-06, -4.589557647705078e-05, -2.6702880859375e-05, -2.4914739697123878e-05, 0.0, -4.446501407073811e-05, -1.1920928244535389e-07, -3.1709590984974056e-05, -4.768370445162873e-07, -0.000308990478515625, -0.0002727508544921875, -0.0007572174072265625, -1.71661376953125e-05, -0.0028454065322875977, 0.0, -0.0001392364501953125, -0.000324249267578125, -0.000217437744140625, -5.53131103515625e-05, -4.9591064453125e-05, 0.0, -0.00684356689453125, -0.0001392364501953125, -0.00010311603546142578, -5.7220458984375e-06, -4.38690185546875e-05, -0.0001316070556640625, -7.82012939453125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -6.866455078125e-05, -3.0517578125e-05, -2.4199485778808594e-05, -3.814697265625e-06, -0.004975795745849609, 0.0, -0.00018572749104350805, -5.7220458984375e-06, -5.7220458984375e-06, -0.000492095947265625, -0.00012969970703125, -0.0006847381591796875, -0.00035858154296875, -0.0001485344546381384, -2.264974000354414e-06, -0.023432951420545578, 0.0, -1.52587890625e-05, -0.005181312561035156, -0.0001201629638671875, -0.00022684020223096013, -0.0002048014575848356, -4.57763671875e-05, -3.24249267578125e-05, -0.0001964569091796875, -3.266334533691406e-05], "choice_history": [97, 285, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "4", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 4}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "hole3": "use", "hole0": "Flamestrike", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 7, "hole0": "Flamestrike"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -0.06874724704708512, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"score_history": [-2.09808349609375e-05, -0.0006885528564453125, -2.622600959512056e-06, -8.106222594506107e-06, -1.1920928244535389e-07, -5.3048133850097656e-05, -1.4305104514278355e-06, -7.62939453125e-06, -0.0012989044189453125, -0.001140594482421875, -2.2649765014648438e-06, -5.7220458984375e-06, -8.344646857949556e-07, 0.0, -0.001325845718383789, -2.288818359375e-05, -1.3947486877441406e-05, 0.0, -3.206721521564759e-05, 0.0, -2.86102294921875e-05, -0.000164031982421875, -1.1086422091466375e-05, -2.5272369384765625e-05, -0.014578819274902344, -3.4332275390625e-05, -1.1444091796875e-05, -1.71661376953125e-05, -0.0001049041748046875, -9.5367431640625e-06, -1.9073486328125e-06, -4.589557647705078e-05, -2.6702880859375e-05, -2.4914739697123878e-05, 0.0, -4.446501407073811e-05, -1.1920928244535389e-07, -3.1709590984974056e-05, -4.768370445162873e-07, -0.000308990478515625, -0.0002727508544921875, -0.0007572174072265625, -1.71661376953125e-05, -0.0028454065322875977, 0.0, -0.0001392364501953125, -0.000324249267578125, -0.000217437744140625, -5.53131103515625e-05, -4.9591064453125e-05, 0.0, -0.00684356689453125, -0.0001392364501953125, -0.00010311603546142578, -5.7220458984375e-06, -4.38690185546875e-05, -0.0001316070556640625, -7.82012939453125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -6.866455078125e-05, -3.0517578125e-05, -2.4199485778808594e-05, -3.814697265625e-06, -0.004975795745849609, 0.0, -0.00018572749104350805, -5.7220458984375e-06, -5.7220458984375e-06, -0.000492095947265625, -0.00012969970703125, -0.0006847381591796875, -0.00035858154296875, -0.0001485344546381384, -2.264974000354414e-06, -4.019221305847168, -4.410734163684538e-06, -0.000263214111328125, -0.0121307373046875, -0.0022802352905273438, -0.01038806326687336, -5.8412548241904005e-05], "choice_history": [97, 285, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "add_buff", "<EOS>", 346, 69, 290, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template54", "hole0": "Frozen"}], "_type": "Template77", "hole1": "add_buff", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "hole3": "use", "hole0": "Flamestrike", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 7, "hole0": "Flamestrike"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.083604977207287, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.add_buff(Buff(Frozen()))\n"}, {"score_history": [-2.09808349609375e-05, -0.0006885528564453125, -2.622600959512056e-06, -8.106222594506107e-06, -1.1920928244535389e-07, -5.3048133850097656e-05, -1.4305104514278355e-06, -7.62939453125e-06, -0.0012989044189453125, -0.001140594482421875, -2.2649765014648438e-06, -5.7220458984375e-06, -8.344646857949556e-07, 0.0, -0.001325845718383789, -2.288818359375e-05, -1.3947486877441406e-05, 0.0, -3.206721521564759e-05, 0.0, -2.86102294921875e-05, -0.000164031982421875, -1.1086422091466375e-05, -2.5272369384765625e-05, -4.66245174407959, -0.0001049041748046875, -3.24249267578125e-05, -4.38690185546875e-05, -0.0001068115234375, -1.1444091796875e-05, -1.9073486328125e-06, -4.971027374267578e-05, -2.86102294921875e-05, -2.706050690903794e-05, 0.0, -5.0306221965001896e-05, -1.1920928244535389e-07, -3.1709590984974056e-05, -5.960462772236497e-07, -0.03170204162597656, -1.9073486328125e-06, -5.340576171875e-05, -1.1444091796875e-05, -2.288818359375e-05, -0.02239091694355011, -1.1920928244535389e-07, -0.0002307891845703125, -1.71661376953125e-05, -9.34600830078125e-05, -3.814697265625e-05, -0.0002155303955078125, 0.0, -0.00012731552124023438, -1.1444091796875e-05, -0.00015461444854736328, -3.814697265625e-06, -6.29425048828125e-05, -8.58306884765625e-05, -0.0002803802490234375, -1.52587890625e-05, -7.62939453125e-06, -8.392333984375e-05, -2.6702880859375e-05, -3.349781036376953e-05, -3.814697265625e-06, -0.006579756736755371, 0.0, -0.00016069391858763993, -3.814697265625e-06, -3.0517578125e-05, -0.000125885009765625, -0.000370025634765625, -2.09808349609375e-05, -0.019060730934143066, 0.0, -0.029338564723730087, -5.3048108384246007e-05, -0.000301361083984375, -0.000148773193359375, -5.7220458984375e-06, -0.0001659393310546875, -1.9073486328125e-06, -7.82012939453125e-05, -1.33514404296875e-05, -2.3365020751953125e-05, -1.9073486328125e-06, -0.02743971347808838, -1.9073486328125e-06, -0.17963242530822754, -2.2649765014648438e-06, -0.015187263488769531, -0.00012969970703125, -1.71661376953125e-05, -6.103515625e-05, -0.0003037452697753906, -1.1920928244535389e-07, -0.02039051055908203, -9.5367431640625e-06, -0.0008261203765869141, -8.344646857949556e-07, -0.0002593994140625, -0.0159912109375, -0.00017547607421875, -0.0004825592041015625, -4.9591064453125e-05, -0.00018537043069954962, -2.3841855067985307e-07, -0.1612405925989151, 0.0, -9.5367431640625e-06, -0.0035562515258789062, -0.0001811981201171875, -0.0018784552812576294, -0.00013482567737810314, -0.0001678466796875, -3.0517578125e-05, -0.0002669095993041992, -2.491474151611328e-05], "choice_history": [97, 285, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "extend", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 21, 174, "targets", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "4", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Template77", "hole1": "extend", "hole0": {"_type": "Name", "id": "targets"}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 4}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Name", "id": "targets"}}], "hole3": "use", "hole0": "Flamestrike", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 7, "hole0": "Flamestrike"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.208592544648241, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"score_history": [-2.09808349609375e-05, -0.0006885528564453125, -2.622600959512056e-06, -8.106222594506107e-06, -1.1920928244535389e-07, -5.3048133850097656e-05, -1.4305104514278355e-06, -7.62939453125e-06, -0.0012989044189453125, -0.001140594482421875, -2.2649765014648438e-06, -5.7220458984375e-06, -8.344646857949556e-07, 0.0, -0.001325845718383789, -2.288818359375e-05, -1.3947486877441406e-05, 0.0, -3.206721521564759e-05, 0.0, -2.86102294921875e-05, -0.000164031982421875, -1.1086422091466375e-05, -2.5272369384765625e-05, -0.014578819274902344, -3.4332275390625e-05, -1.1444091796875e-05, -1.71661376953125e-05, -0.0001049041748046875, -9.5367431640625e-06, -1.9073486328125e-06, -4.589557647705078e-05, -2.6702880859375e-05, -2.4914739697123878e-05, 0.0, -4.446501407073811e-05, -1.1920928244535389e-07, -3.1709590984974056e-05, -4.768370445162873e-07, -0.000308990478515625, -0.0002727508544921875, -0.0007572174072265625, -1.71661376953125e-05, -0.0028454065322875977, 0.0, -0.0001392364501953125, -0.000324249267578125, -0.000217437744140625, -5.53131103515625e-05, -4.9591064453125e-05, 0.0, -5.1958818435668945, -1.1920928244535389e-07, -0.008382081985473633, -9.5367431640625e-06, -0.0015430450439453125, -0.5838527679443359, -3.0517578125e-05, -3.62396240234375e-05, -2.47955322265625e-05, -4.76837158203125e-05, -6.103515625e-05, -6.735321221640334e-05, -1.9073486328125e-06, -0.0029336214065551758, 0.0, -0.005769933108240366, -3.933906555175781e-06, -3.24249267578125e-05, -0.0005626678466796875, -0.0001201629638671875, -0.0006847381591796875, -0.000659942626953125, -0.00013661345292348415, -1.4305104514278355e-06, -0.029228923842310905, 0.0, -1.52587890625e-05, -0.005214691162109375, -0.0001316070556640625, -0.00022254939540289342, -0.0001835821894928813, -4.76837158203125e-05, -3.4332275390625e-05, -0.00020289419626351446, -2.8848648071289062e-05], "choice_history": [97, 285, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "4", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 4}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "hole3": "use", "hole0": "Flamestrike", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 7, "hole0": "Flamestrike"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.86092907953887, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.random_choice(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"score_history": [-2.09808349609375e-05, -0.0006885528564453125, -2.622600959512056e-06, -8.106222594506107e-06, -1.1920928244535389e-07, -5.3048133850097656e-05, -1.4305104514278355e-06, -7.62939453125e-06, -0.0012989044189453125, -0.001140594482421875, -2.2649765014648438e-06, -5.7220458984375e-06, -8.344646857949556e-07, 0.0, -0.001325845718383789, -2.288818359375e-05, -1.3947486877441406e-05, 0.0, -3.206721521564759e-05, 0.0, -2.86102294921875e-05, -0.000164031982421875, -1.1086422091466375e-05, -2.5272369384765625e-05, -0.014578819274902344, -3.4332275390625e-05, -1.1444091796875e-05, -1.71661376953125e-05, -0.0001049041748046875, -9.5367431640625e-06, -1.9073486328125e-06, -4.589557647705078e-05, -2.6702880859375e-05, -2.4914739697123878e-05, 0.0, -4.446501407073811e-05, -1.1920928244535389e-07, -3.1709590984974056e-05, -4.768370445162873e-07, -0.000308990478515625, -0.0002727508544921875, -0.0007572174072265625, -1.71661376953125e-05, -0.0028454065322875977, 0.0, -0.0001392364501953125, -0.000324249267578125, -0.000217437744140625, -5.53131103515625e-05, -4.9591064453125e-05, 0.0, -0.00684356689453125, -0.0001392364501953125, -0.00010311603546142578, -5.7220458984375e-06, -4.38690185546875e-05, -0.0001316070556640625, -7.82012939453125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -6.866455078125e-05, -3.0517578125e-05, -2.4199485778808594e-05, -3.814697265625e-06, -5.853621006011963, -1.1444091796875e-05, -0.00016987323760986328, -1.33514404296875e-05, -5.7220458984375e-06, -0.0030078887939453125, -8.7738037109375e-05, -0.0009822845458984375, -0.0002994537353515625, -0.00012087798677384853, -2.264974000354414e-06, -0.012707581743597984, 0.0, -1.33514404296875e-05, -0.0052967071533203125, -0.0001373291015625, -0.00021241765352897346, -0.000184416669071652, -4.76837158203125e-05, -3.4332275390625e-05, -0.00018703936075326055, -3.075599670410156e-05], "choice_history": [97, 285, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "4", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 4}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "minions"}]}}], "hole3": "use", "hole0": "Flamestrike", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 7, "hole0": "Flamestrike"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.909443236001479, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.current_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"score_history": [-2.09808349609375e-05, -0.0006885528564453125, -2.622600959512056e-06, -8.106222594506107e-06, -1.1920928244535389e-07, -5.3048133850097656e-05, -1.4305104514278355e-06, -7.62939453125e-06, -0.0012989044189453125, -0.001140594482421875, -2.2649765014648438e-06, -5.7220458984375e-06, -8.344646857949556e-07, 0.0, -0.001325845718383789, -2.288818359375e-05, -1.3947486877441406e-05, 0.0, -3.206721521564759e-05, 0.0, -2.86102294921875e-05, -0.000164031982421875, -1.1086422091466375e-05, -2.5272369384765625e-05, -0.014578819274902344, -3.4332275390625e-05, -1.1444091796875e-05, -1.71661376953125e-05, -0.0001049041748046875, -9.5367431640625e-06, -1.9073486328125e-06, -4.589557647705078e-05, -2.6702880859375e-05, -2.4914739697123878e-05, 0.0, -4.446501407073811e-05, -1.1920928244535389e-07, -3.1709590984974056e-05, -4.768370445162873e-07, -0.000308990478515625, -0.0002727508544921875, -0.0007572174072265625, -1.71661376953125e-05, -0.0028454065322875977, 0.0, -0.0001392364501953125, -0.000324249267578125, -0.000217437744140625, -5.53131103515625e-05, -4.9591064453125e-05, 0.0, -5.1958818435668945, -1.1920928244535389e-07, -0.008382081985473633, -9.5367431640625e-06, -0.0015430450439453125, -0.8236064910888672, -9.5367431640625e-06, -0.1335209608078003, -0.00011050696775782853, -0.0002956390380859375, -0.0057163238525390625, -0.0007038116455078125, -8.20159912109375e-05, -0.000400543212890625, -0.001000862568616867, -2.3841855067985307e-07, -0.008509138599038124, 0.0, -1.1444091796875e-05, -0.005616188049316406, -0.00054931640625, -0.0007569557637907565, -0.00016009803221095353, -7.62939453125e-05, -3.0517578125e-05, -0.0003652572340797633, -3.266334533691406e-05], "choice_history": [97, 285, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "4", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 4}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"_type": "Name", "id": "minions"}]}}], "hole3": "use", "hole0": "Flamestrike", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 7, "hole0": "Flamestrike"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.212145742629737, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.random_choice(minions):\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"score_history": [-2.09808349609375e-05, -0.0006885528564453125, -2.622600959512056e-06, -8.106222594506107e-06, -1.1920928244535389e-07, -5.3048133850097656e-05, -1.4305104514278355e-06, -7.62939453125e-06, -0.0012989044189453125, -0.001140594482421875, -2.2649765014648438e-06, -5.7220458984375e-06, -8.344646857949556e-07, 0.0, -0.001325845718383789, -2.288818359375e-05, -1.3947486877441406e-05, 0.0, -3.206721521564759e-05, 0.0, -2.86102294921875e-05, -0.000164031982421875, -1.1086422091466375e-05, -2.5272369384765625e-05, -5.785771369934082, -3.814697265625e-06, -3.24249267578125e-05, -3.0517578125e-05, -0.000148773193359375, -1.9073486328125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -4.00543212890625e-05, -1.6570091247558594e-05, 0.0, -4.8398935177829117e-05, -1.1920928244535389e-07, -3.0279072234407067e-05, -9.536738616588991e-07, -0.005211830139160156, -0.0002918243408203125, -0.0004215240478515625, -5.7220458984375e-06, -0.00023102760314941406, 0.0, -0.0003185272216796875, -0.000232696533203125, -0.0001049041748046875, -6.103515625e-05, -1.9073486328125e-05, 0.0, -0.008884429931640625, -0.000141143798828125, -0.00010132789611816406, -1.1444091796875e-05, -4.38690185546875e-05, -0.000118255615234375, -7.2479248046875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -6.67572021484375e-05, -3.0517578125e-05, -2.5987625122070312e-05, -3.814697265625e-06, -0.004742145538330078, 0.0, -0.00017976709932554513, -5.7220458984375e-06, -3.814697265625e-06, -0.000499725341796875, -0.0001392364501953125, -0.0007534027099609375, -0.000385284423828125, -0.00014448145520873368, -2.0265558760002023e-06, -0.02658800780773163, 0.0, -1.33514404296875e-05, -0.005246162414550781, -0.0001163482666015625, -0.00023101245460566133, -0.0002067088062176481, -4.57763671875e-05, -3.24249267578125e-05, -0.00020039080118294805, -3.266334533691406e-05, -0.48631763458251953, -0.0009136199951171875, -0.001789093017578125, -3.814697265625e-06, -0.014764785766601562, -1.52587890625e-05, -0.003430123208090663, -2.3841855067985307e-07, -0.05892789363861084, -1.52587890625e-05], "choice_history": [97, 285, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "4", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 4}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "Flamestrike", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 7, "hole0": "Flamestrike"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.413211846080188, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n        player.draw()\n"}, {"score_history": [-2.09808349609375e-05, -0.0006885528564453125, -2.622600959512056e-06, -8.106222594506107e-06, -1.1920928244535389e-07, -5.3048133850097656e-05, -1.4305104514278355e-06, -7.62939453125e-06, -0.0012989044189453125, -0.001140594482421875, -2.2649765014648438e-06, -5.7220458984375e-06, -8.344646857949556e-07, 0.0, -0.001325845718383789, -2.288818359375e-05, -1.3947486877441406e-05, 0.0, -3.206721521564759e-05, 0.0, -2.86102294921875e-05, -0.000164031982421875, -1.1086422091466375e-05, -2.5272369384765625e-05, -0.014578819274902344, -3.4332275390625e-05, -1.1444091796875e-05, -1.71661376953125e-05, -0.0001049041748046875, -9.5367431640625e-06, -1.9073486328125e-06, -4.589557647705078e-05, -2.6702880859375e-05, -2.4914739697123878e-05, 0.0, -4.446501407073811e-05, -1.1920928244535389e-07, -3.1709590984974056e-05, -4.768370445162873e-07, -0.000308990478515625, -0.0002727508544921875, -0.0007572174072265625, -1.71661376953125e-05, -5.970953464508057, 0.0, -0.000453948974609375, -1.52587890625e-05, -0.15112972259521484, -6.4849853515625e-05, -0.010188211686909199, -5.9604644775390625e-06, -5.14984130859375e-05, -0.00016021728515625, -2.6702880859375e-05, -0.00035450051655061543, -2.09808349609375e-05, -0.008154869079589844, -1.9073486328125e-06, -0.1135738343000412, -3.24249267578125e-05, -0.022165298461914062, -0.2670259475708008, -0.001148223876953125, -0.0009593963623046875, -2.47955322265625e-05, -0.000171661376953125, -5.7220458984375e-06, -0.034581296145915985, -3.576278118089249e-07, -0.020628809928894043, -1.9073486328125e-06], "choice_history": [97, 285, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "4", "<EOS>", 358, 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"n": 4, "_type": "Num"}]}}], "hole3": "use", "hole0": "Flamestrike", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 7, "hole0": "Flamestrike"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.623044847267508, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 4):\n            player.draw()\n"}, {"score_history": [-2.09808349609375e-05, -0.0006885528564453125, -2.622600959512056e-06, -8.106222594506107e-06, -1.1920928244535389e-07, -5.3048133850097656e-05, -1.4305104514278355e-06, -7.62939453125e-06, -0.0012989044189453125, -0.001140594482421875, -2.2649765014648438e-06, -5.7220458984375e-06, -8.344646857949556e-07, 0.0, -0.001325845718383789, -2.288818359375e-05, -1.3947486877441406e-05, 0.0, -3.206721521564759e-05, 0.0, -2.86102294921875e-05, -0.000164031982421875, -1.1086422091466375e-05, -2.5272369384765625e-05, -4.66245174407959, -0.0001049041748046875, -3.24249267578125e-05, -4.38690185546875e-05, -0.0001068115234375, -1.1444091796875e-05, -1.9073486328125e-06, -4.971027374267578e-05, -2.86102294921875e-05, -2.706050690903794e-05, 0.0, -5.0306221965001896e-05, -1.1920928244535389e-07, -3.1709590984974056e-05, -5.960462772236497e-07, -0.03170204162597656, -1.9073486328125e-06, -5.340576171875e-05, -1.1444091796875e-05, -2.288818359375e-05, -0.02239091694355011, -1.1920928244535389e-07, -0.0002307891845703125, -1.71661376953125e-05, -9.34600830078125e-05, -3.814697265625e-05, -0.0002155303955078125, 0.0, -0.00012731552124023438, -1.1444091796875e-05, -0.00015461444854736328, -3.814697265625e-06, -6.29425048828125e-05, -8.58306884765625e-05, -0.0002803802490234375, -1.52587890625e-05, -7.62939453125e-06, -8.392333984375e-05, -2.6702880859375e-05, -3.349781036376953e-05, -3.814697265625e-06, -0.006579756736755371, 0.0, -0.00016069391858763993, -3.814697265625e-06, -3.0517578125e-05, -0.000125885009765625, -0.000370025634765625, -2.09808349609375e-05, -0.019060730934143066, 0.0, -0.029338564723730087, -5.3048108384246007e-05, -0.000301361083984375, -0.000148773193359375, -5.7220458984375e-06, -0.0001659393310546875, -1.9073486328125e-06, -7.82012939453125e-05, -1.33514404296875e-05, -2.3365020751953125e-05, -1.9073486328125e-06, -0.02743971347808838, -1.9073486328125e-06, -1.8543663024902344, -2.50339189733495e-06, -0.014232635498046875, -8.392333984375e-05, -2.6702880859375e-05, -1.52587890625e-05, -0.0004930496215820312, 0.0, -0.003025054931640625, -9.5367431640625e-06, -0.001711726188659668, -8.344646857949556e-07, -0.000274658203125, -0.0131988525390625, -0.0003261566162109375, -0.0004978179931640625, -6.866455078125e-05, -0.00021219250629656017, -2.3841855067985307e-07, -0.11784031242132187, 0.0, -5.7220458984375e-06, -0.003665924072265625, -0.000347137451171875, -0.001261080033145845, -0.00014877316425554454, -0.0001678466796875, -2.6702880859375e-05, -0.00033092498779296875, -3.075599670410156e-05], "choice_history": [97, 285, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "extend", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "hero", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 21, 174, "targets", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "4", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Template77", "hole1": "extend", "hole0": {"_type": "Name", "id": "targets"}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 4}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Name", "id": "targets"}}], "hole3": "use", "hole0": "Flamestrike", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 7, "hole0": "Flamestrike"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.819768218062229, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.hero)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"score_history": [-2.09808349609375e-05, -0.0006885528564453125, -2.622600959512056e-06, -8.106222594506107e-06, -1.1920928244535389e-07, -5.3048133850097656e-05, -1.4305104514278355e-06, -7.62939453125e-06, -0.0012989044189453125, -0.001140594482421875, -2.2649765014648438e-06, -5.7220458984375e-06, -8.344646857949556e-07, 0.0, -6.814375877380371, -1.9073486328125e-06, -1.3828277587890625e-05, 0.0, -2.670283538463991e-05, 0.0, -1.9073486328125e-05, -9.5367431640625e-05, -4.529942543740617e-06, -1.1682510375976562e-05, -0.09467601776123047, -4.00543212890625e-05, -1.52587890625e-05, -1.9073486328125e-05, -0.0001049041748046875, -9.5367431640625e-06, -1.9073486328125e-06, -4.398822784423828e-05, -2.6702880859375e-05, -2.694129761948716e-05, 0.0, -4.1246374166803434e-05, -1.1920928244535389e-07, -3.14711760438513e-05, -4.768370445162873e-07, -0.0003032684326171875, -0.0002593994140625, -0.000789642333984375, -1.71661376953125e-05, -0.0028139352798461914, 0.0, -0.0001316070556640625, -0.0003185272216796875, -0.0002231597900390625, -5.53131103515625e-05, -4.76837158203125e-05, 0.0, -0.0068988800048828125, -0.0001392364501953125, -0.00010311603546142578, -5.7220458984375e-06, -4.38690185546875e-05, -0.00012969970703125, -8.0108642578125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -6.866455078125e-05, -3.0517578125e-05, -2.4199485778808594e-05, -3.814697265625e-06, -0.004995822906494141, 0.0, -0.0001853698631748557, -5.7220458984375e-06, -5.7220458984375e-06, -0.0004901885986328125, -0.0001277923583984375, -0.0006866455078125, -0.0003490447998046875, -0.00014877285866532475, -2.264974000354414e-06, -0.023175574839115143, 0.0, -1.33514404296875e-05, -0.005184173583984375, -0.0001201629638671875, -0.00022660181275568902, -0.0002048014575848356, -4.57763671875e-05, -3.24249267578125e-05, -0.0001964569091796875, -3.266334533691406e-05], "choice_history": [97, 285, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Flamestrike", "<EOS>", "7", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "4", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 4}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "hole3": "use", "hole0": "Flamestrike", "_type": "Template5", "hole2": [{"hole2": "ROGUE", "_type": "Template31", "hole1": 7, "hole0": "Flamestrike"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.961557230488651, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"score_history": [-2.09808349609375e-05, -0.0006885528564453125, -2.622600959512056e-06, -8.106222594506107e-06, -1.1920928244535389e-07, -5.3048133850097656e-05, -1.4305104514278355e-06, -7.62939453125e-06, -0.0012989044189453125, -0.001140594482421875, -2.2649765014648438e-06, -5.7220458984375e-06, -8.344646857949556e-07, 0.0, -0.001325845718383789, -2.288818359375e-05, -1.3947486877441406e-05, 0.0, -3.206721521564759e-05, 0.0, -2.86102294921875e-05, -0.000164031982421875, -1.1086422091466375e-05, -2.5272369384765625e-05, -0.014578819274902344, -3.4332275390625e-05, -1.1444091796875e-05, -1.71661376953125e-05, -0.0001049041748046875, -9.5367431640625e-06, -1.9073486328125e-06, -4.589557647705078e-05, -2.6702880859375e-05, -2.4914739697123878e-05, 0.0, -4.446501407073811e-05, -1.1920928244535389e-07, -3.1709590984974056e-05, -4.768370445162873e-07, -0.000308990478515625, -0.0002727508544921875, -0.0007572174072265625, -1.71661376953125e-05, -0.0028454065322875977, 0.0, -0.0001392364501953125, -0.000324249267578125, -0.000217437744140625, -5.53131103515625e-05, -4.9591064453125e-05, 0.0, -0.00684356689453125, -0.0001392364501953125, -0.00010311603546142578, -5.7220458984375e-06, -4.38690185546875e-05, -0.0001316070556640625, -7.82012939453125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -6.866455078125e-05, -3.0517578125e-05, -2.4199485778808594e-05, -3.814697265625e-06, -0.004975795745849609, 0.0, -0.00018572749104350805, -5.7220458984375e-06, -5.7220458984375e-06, -0.000492095947265625, -0.00012969970703125, -0.0006847381591796875, -0.00035858154296875, -0.0001485344546381384, -2.264974000354414e-06, -6.73989200592041, -1.5497195136049413e-06, -1.33514404296875e-05, -0.18455123901367188, -0.000133514404296875, -0.14426253736019135, -2.3841855067985307e-07], "choice_history": [97, 285, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "die", "<EOS>", 346, 50, 174, "minion", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Name", "id": "minion"}], "_type": "Template77", "hole1": "die", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "hole3": "use", "hole0": "Flamestrike", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 7, "hole0": "Flamestrike"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.108113034381361, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.die(minion)\n"}, {"score_history": [-2.09808349609375e-05, -0.0006885528564453125, -2.622600959512056e-06, -8.106222594506107e-06, -1.1920928244535389e-07, -5.3048133850097656e-05, -1.4305104514278355e-06, -7.62939453125e-06, -0.0012989044189453125, -0.001140594482421875, -2.2649765014648438e-06, -5.7220458984375e-06, -8.344646857949556e-07, 0.0, -0.001325845718383789, -2.288818359375e-05, -1.3947486877441406e-05, 0.0, -3.206721521564759e-05, 0.0, -2.86102294921875e-05, -0.000164031982421875, -1.1086422091466375e-05, -2.5272369384765625e-05, -0.014578819274902344, -3.4332275390625e-05, -1.1444091796875e-05, -1.71661376953125e-05, -0.0001049041748046875, -9.5367431640625e-06, -1.9073486328125e-06, -4.589557647705078e-05, -2.6702880859375e-05, -2.4914739697123878e-05, 0.0, -4.446501407073811e-05, -1.1920928244535389e-07, -3.1709590984974056e-05, -4.768370445162873e-07, -0.000308990478515625, -0.0002727508544921875, -0.0007572174072265625, -1.71661376953125e-05, -0.0028454065322875977, 0.0, -0.0001392364501953125, -0.000324249267578125, -0.000217437744140625, -5.53131103515625e-05, -4.9591064453125e-05, 0.0, -0.00684356689453125, -0.0001392364501953125, -0.00010311603546142578, -5.7220458984375e-06, -4.38690185546875e-05, -0.0001316070556640625, -7.82012939453125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -6.866455078125e-05, -3.0517578125e-05, -2.4199485778808594e-05, -3.814697265625e-06, -0.004975795745849609, 0.0, -0.00018572749104350805, -5.7220458984375e-06, -5.7220458984375e-06, -0.000492095947265625, -0.00012969970703125, -0.0006847381591796875, -0.00035858154296875, -0.0001485344546381384, -2.264974000354414e-06, -0.023432951420545578, 0.0, -1.52587890625e-05, -5.802434921264648, -0.025064468383789062, -0.0057010650634765625, -1.33514404296875e-05, -0.0013296602992340922, -4.768370445162873e-07, -0.04156136140227318, -6.914134246471804e-06, -0.002532958984375, -0.00020599365234375, -0.010461807250976562, -1.9073486328125e-06, -0.0001131296157836914, -7.152555099310121e-07, -0.3945333957672119, -2.3841855067985307e-07, -0.000125885009765625, -0.03214836120605469, -2.86102294921875e-05, -0.6296715140342712, 0.0, -0.007982254028320312, -2.47955322265625e-05, -0.11661160737276077, -5.841255187988281e-06, -0.003662109375, -1.9073486328125e-05, -0.0002186298370361328, -8.726119995117188e-05], "choice_history": [97, 285, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 72, 295, 21, 174, "player", "<EOS>", "effective_spell_damage", "<EOS>", 13, 143, 21, 174, "game", "<EOS>", "<UNK>", "<EOS>", 347, 52, 179, "2", "<EOS>", 52, 179, "7", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"hole3": [{"n": 2, "_type": "Num"}, {"n": 7, "_type": "Num"}], "hole2": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Template57", "hole1": "effective_spell_damage", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "hole3": "use", "hole0": "Flamestrike", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 7, "hole0": "Flamestrike"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.137255115998826, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(game.<UNK>(2, 7)), self\n                )\n"}, {"score_history": [-2.09808349609375e-05, -0.0006885528564453125, -2.622600959512056e-06, -8.106222594506107e-06, -1.1920928244535389e-07, -5.3048133850097656e-05, -1.4305104514278355e-06, -7.62939453125e-06, -0.0012989044189453125, -0.001140594482421875, -2.2649765014648438e-06, -5.7220458984375e-06, -8.344646857949556e-07, 0.0, -0.001325845718383789, -2.288818359375e-05, -1.3947486877441406e-05, 0.0, -3.206721521564759e-05, 0.0, -2.86102294921875e-05, -0.000164031982421875, -1.1086422091466375e-05, -2.5272369384765625e-05, -5.785771369934082, -3.814697265625e-06, -3.24249267578125e-05, -3.0517578125e-05, -0.000148773193359375, -1.9073486328125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -4.00543212890625e-05, -1.6570091247558594e-05, 0.0, -4.8398935177829117e-05, -1.1920928244535389e-07, -3.0279072234407067e-05, -9.536738616588991e-07, -0.005211830139160156, -0.0002918243408203125, -0.0004215240478515625, -5.7220458984375e-06, -0.00023102760314941406, 0.0, -0.0003185272216796875, -0.000232696533203125, -0.0001049041748046875, -6.103515625e-05, -1.9073486328125e-05, 0.0, -0.008884429931640625, -0.000141143798828125, -0.00010132789611816406, -1.1444091796875e-05, -4.38690185546875e-05, -0.000118255615234375, -7.2479248046875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -6.67572021484375e-05, -3.0517578125e-05, -2.5987625122070312e-05, -3.814697265625e-06, -0.004742145538330078, 0.0, -0.00017976709932554513, -5.7220458984375e-06, -3.814697265625e-06, -0.000499725341796875, -0.0001392364501953125, -0.0007534027099609375, -0.000385284423828125, -0.00014448145520873368, -2.0265558760002023e-06, -0.02658800780773163, 0.0, -1.33514404296875e-05, -0.005246162414550781, -0.0001163482666015625, -0.00023101245460566133, -0.0002067088062176481, -4.57763671875e-05, -3.24249267578125e-05, -0.00020039080118294805, -3.266334533691406e-05, -1.0938348770141602, -0.001110076904296875, -0.000408172607421875, -1.9073486328125e-06, -0.0001112222671508789, -1.1920928244535389e-07, -0.020404815673828125, -1.33514404296875e-05, -0.0068378448486328125, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.00019657611846923828, -1.9073486328125e-06, -0.0007269382476806641, 0.0, -0.005903629120439291, -0.00011205673217773438, -7.05718994140625e-05, -0.006687164306640625, -8.20159912109375e-05, -0.000522613525390625, -0.0006656646728515625, -0.00010752677189884707, -3.576278118089249e-07, -0.2588545083999634, 0.0, -2.288818359375e-05, -0.0049266815185546875, -0.0001544952392578125, -0.0002496034139767289, -0.00023269638768397272, -4.76837158203125e-05, -3.62396240234375e-05, -0.00021207331155892462, -3.075599670410156e-05], "choice_history": [97, 285, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "4", "<EOS>", 50, 174, "self", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "4", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 4}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 4}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "Flamestrike", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 7, "hole0": "Flamestrike"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.249645029663874, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"score_history": [-2.09808349609375e-05, -0.0006885528564453125, -2.622600959512056e-06, -8.106222594506107e-06, -1.1920928244535389e-07, -5.3048133850097656e-05, -1.4305104514278355e-06, -7.62939453125e-06, -0.0012989044189453125, -0.001140594482421875, -2.2649765014648438e-06, -5.7220458984375e-06, -8.344646857949556e-07, 0.0, -0.001325845718383789, -2.288818359375e-05, -1.3947486877441406e-05, 0.0, -3.206721521564759e-05, 0.0, -2.86102294921875e-05, -0.000164031982421875, -1.1086422091466375e-05, -2.5272369384765625e-05, -0.014578819274902344, -3.4332275390625e-05, -1.1444091796875e-05, -1.71661376953125e-05, -0.0001049041748046875, -9.5367431640625e-06, -1.9073486328125e-06, -4.589557647705078e-05, -2.6702880859375e-05, -2.4914739697123878e-05, 0.0, -4.446501407073811e-05, -1.1920928244535389e-07, -3.1709590984974056e-05, -4.768370445162873e-07, -0.000308990478515625, -0.0002727508544921875, -0.0007572174072265625, -1.71661376953125e-05, -0.0028454065322875977, 0.0, -0.0001392364501953125, -0.000324249267578125, -0.000217437744140625, -5.53131103515625e-05, -4.9591064453125e-05, 0.0, -7.541959762573242, -3.814697265625e-06, -0.001168370246887207, -1.9073486328125e-06, -8.96453857421875e-05, -5.340576171875e-05, -7.62939453125e-05, -2.288818359375e-05, -1.52587890625e-05, -3.4332275390625e-05, -3.0517578125e-05, -3.135204315185547e-05, -7.62939453125e-06, -0.005495548248291016, 0.0, -0.0003213798627257347, -3.814697265625e-06, -7.62939453125e-06, -0.0004253387451171875, -9.5367431640625e-05, -0.0006046295166015625, -0.000408172607421875, -0.00013816336286254227, -2.0265558760002023e-06, -0.02662324160337448, 0.0, -1.52587890625e-05, -0.005068778991699219, -0.000118255615234375, -0.00022421804897021502, -0.00019371499365661293, -4.57763671875e-05, -3.24249267578125e-05, -0.00019443035125732422, -3.075599670410156e-05], "choice_history": [97, 285, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "len", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "4", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 4}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "len"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "hole3": "use", "hole0": "Flamestrike", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 7, "hole0": "Flamestrike"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.608318417029622, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in len.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"score_history": [-2.09808349609375e-05, -0.0006885528564453125, -2.622600959512056e-06, -8.106222594506107e-06, -1.1920928244535389e-07, -5.3048133850097656e-05, -1.4305104514278355e-06, -7.62939453125e-06, -0.0012989044189453125, -0.001140594482421875, -2.2649765014648438e-06, -5.7220458984375e-06, -8.344646857949556e-07, 0.0, -0.001325845718383789, -2.288818359375e-05, -1.3947486877441406e-05, 0.0, -3.206721521564759e-05, 0.0, -2.86102294921875e-05, -0.000164031982421875, -1.1086422091466375e-05, -2.5272369384765625e-05, -0.014578819274902344, -3.4332275390625e-05, -1.1444091796875e-05, -1.71661376953125e-05, -0.0001049041748046875, -9.5367431640625e-06, -1.9073486328125e-06, -4.589557647705078e-05, -2.6702880859375e-05, -2.4914739697123878e-05, 0.0, -4.446501407073811e-05, -1.1920928244535389e-07, -3.1709590984974056e-05, -4.768370445162873e-07, -0.000308990478515625, -0.0002727508544921875, -0.0007572174072265625, -1.71661376953125e-05, -0.0028454065322875977, 0.0, -0.0001392364501953125, -0.000324249267578125, -0.000217437744140625, -5.53131103515625e-05, -4.9591064453125e-05, 0.0, -0.00684356689453125, -0.0001392364501953125, -0.00010311603546142578, -5.7220458984375e-06, -4.38690185546875e-05, -0.0001316070556640625, -7.82012939453125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -6.866455078125e-05, -3.0517578125e-05, -2.4199485778808594e-05, -3.814697265625e-06, -7.578227519989014, -0.0005397796630859375, -0.00026094913482666016, -9.5367431640625e-06, -5.7220458984375e-06, -0.001556396484375, -8.0108642578125e-05, -0.000598907470703125, -0.0006103515625, -0.00011825543333543465, -2.145764938177308e-06, -0.021011635661125183, 0.0, -1.52587890625e-05, -0.005118370056152344, -0.000118255615234375, -0.0002288663963554427, -0.00018966187781188637, -4.57763671875e-05, -3.4332275390625e-05, -0.000194549560546875, -3.0875205993652344e-05], "choice_history": [97, 285, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "opponent", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "4", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 4}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "minions"}]}}], "hole3": "use", "hole0": "Flamestrike", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 7, "hole0": "Flamestrike"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.641266970729802, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.opponent.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n"}]}
{"index": 34, "beams": [{"score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -0.002484489232301712, -2.32455840887269e-05, -3.576278118089249e-07, -7.110647857189178e-07, -2.872943878173828e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.0023345947265625, -0.0004787445068359375, -3.576278118089249e-07, -1.811981201171875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.000268780771875754, 0.0, -0.001796722412109375, 0.0, -0.0007859468460083008, 0.0, -0.0020122528076171875, -2.47955322265625e-05, -2.288818359375e-05, 0.0, -0.00016021728515625, 0.0, -0.010423660278320312, 0.0, -2.47955322265625e-05, 0.0, -0.000225067138671875, 0.0, -3.814697265625e-06, -0.0008563995361328125, -1.52587890625e-05, -1.0847986231965479e-05, -2.861018856492592e-06, -0.00011896601063199341, -3.576278118089249e-07, -0.0059619927778840065, -1.1920928244535389e-07, -0.008693695068359375, -0.037639617919921875, -0.0015621185302734375, -2.288818359375e-05, -0.000293731689453125, -0.0022726058959960938, -6.29425048828125e-05, -0.0009398385882377625, -6.318092346191406e-06, -0.0024290084838867188, -1.33514404296875e-05, -0.0002924203872680664, -5.3405718063004315e-05, -1.7881371604744345e-05, -0.0024313535541296005, -4.291525328881107e-06], "choice_history": [97, 283, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "2", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 2}, {"_type": "Template55", "hole1": "Adjacent", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 3, "hole0": 0}], "hole3": "create_minion", "hole0": "FlametongueTotem", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "TOTEM"}, "hole3": "minion_type", "hole0": "Flametongue Totem", "_type": "Template27", "hole2": "SHAMAN", "hole1": 2}], "hole1": "MinionCard"}, "score": -0.08489506882170161, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n"}, {"score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -0.002484489232301712, -2.32455840887269e-05, -3.576278118089249e-07, -7.110647857189178e-07, -2.872943878173828e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.0023345947265625, -0.0004787445068359375, -3.576278118089249e-07, -1.811981201171875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.000268780771875754, 0.0, -0.001796722412109375, 0.0, -0.0007859468460083008, 0.0, -0.0020122528076171875, -2.47955322265625e-05, -2.288818359375e-05, 0.0, -0.00016021728515625, 0.0, -5.377941131591797, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0003108978271484375, 0.0, -7.62939453125e-06, -0.000514984130859375, -1.71661376953125e-05, -1.4424220353248529e-05, -2.622600959512056e-06, -0.00014220969751477242, -2.3841855067985307e-07, -0.0057765888050198555, -1.1920928244535389e-07, -0.009503364562988281, -0.031744956970214844, -0.001434326171875, -2.09808349609375e-05, -0.0002803802490234375, -0.0022630691528320312, -6.29425048828125e-05, -0.0009500756859779358, -6.318092346191406e-06, -0.002391815185546875, -1.33514404296875e-05, -0.00029011070728302, -5.1498369430191815e-05, -1.7881371604744345e-05, -0.0024215001612901688, -4.291525328881107e-06], "choice_history": [97, 283, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "2", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 2}, {"_type": "Template55", "hole1": "Adjacent", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 3, "hole0": 0}], "hole3": "create_minion", "hole0": "FlametongueTotem", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "hole3": "minion_type", "hole0": "Flametongue Totem", "_type": "Template27", "hole2": "SHAMAN", "hole1": 2}], "hole1": "MinionCard"}, "score": -5.446723222468869, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n"}, {"score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -0.002484489232301712, -2.32455840887269e-05, -3.576278118089249e-07, -7.110647857189178e-07, -2.872943878173828e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.0023345947265625, -0.0004787445068359375, -3.576278118089249e-07, -1.811981201171875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.000268780771875754, 0.0, -0.001796722412109375, 0.0, -0.0007859468460083008, 0.0, -0.0020122528076171875, -2.47955322265625e-05, -2.288818359375e-05, 0.0, -0.00016021728515625, 0.0, -5.876972198486328, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -0.0001201629638671875, 0.0, -9.5367431640625e-06, -0.0009441375732421875, -1.71661376953125e-05, -1.2278481335670222e-05, -2.7418097943154862e-06, -0.00013160129310563207, -3.576278118089249e-07, -0.005691180005669594, -1.1920928244535389e-07, -0.008052825927734375, -0.03659534454345703, -0.0015201568603515625, -2.09808349609375e-05, -0.000293731689453125, -0.0022974014282226562, -6.4849853515625e-05, -0.0009684441611170769, -6.318092346191406e-06, -0.0023860931396484375, -1.33514404296875e-05, -0.0002910345792770386, -5.3286508773453534e-05, -1.7762164134182967e-05, -0.0024631591513752937, -4.291525328881107e-06], "choice_history": [97, 283, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "2", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 2}, {"_type": "Template55", "hole1": "Adjacent", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 3, "hole0": 0}], "hole3": "create_minion", "hole0": "FlametongueTotem", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DEMON"}, "hole3": "minion_type", "hole0": "Flametongue Totem", "_type": "Template27", "hole2": "SHAMAN", "hole1": 2}], "hole1": "MinionCard"}, "score": -5.949488859680564, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n"}, {"score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -0.002484489232301712, -2.32455840887269e-05, -3.576278118089249e-07, -7.110647857189178e-07, -2.872943878173828e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.0023345947265625, -0.0004787445068359375, -3.576278118089249e-07, -1.811981201171875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.000268780771875754, 0.0, -0.001796722412109375, 0.0, -0.0007859468460083008, 0.0, -0.0020122528076171875, -2.47955322265625e-05, -2.288818359375e-05, 0.0, -0.00016021728515625, 0.0, -0.010423660278320312, 0.0, -2.47955322265625e-05, 0.0, -0.000225067138671875, 0.0, -3.814697265625e-06, -0.0008563995361328125, -1.52587890625e-05, -1.0847986231965479e-05, -2.861018856492592e-06, -0.00011896601063199341, -3.576278118089249e-07, -6.37756872177124, -3.4570634852570947e-06, -0.0038022994995117188, -2.09808349609375e-05, -0.0045995707623660564, 0.0], "choice_history": [97, 283, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "0", "<EOS>", "3", "<EOS>", "stealth", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "stealth", "_type": "Template50", "hole1": 3, "hole0": 0}], "hole3": "create_minion", "hole0": "FlametongueTotem", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "TOTEM"}, "hole3": "minion_type", "hole0": "Flametongue Totem", "_type": "Template27", "hole2": "SHAMAN", "hole1": 2}], "hole1": "MinionCard"}, "score": -6.408192517812324, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, stealth=True)\n"}, {"score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -0.002484489232301712, -2.32455840887269e-05, -3.576278118089249e-07, -7.110647857189178e-07, -2.872943878173828e-05, -3.933906555175781e-06, -1.9073486328125e-06, -6.412686347961426, -2.86102294921875e-05, -2.0265558760002023e-06, -2.4795530407573096e-05, -2.3841855067985307e-07, 0.0, -0.017048774287104607, 0.0, -0.0013294219970703125, 0.0, -5.7220458984375e-06, 0.0, -6.341934204101562e-05, 0.0, -1.9073486328125e-06, -0.0015316009521484375, -3.814697265625e-05, -1.597391747054644e-05, -3.814689989667386e-06, -0.00022469335817731917, -4.768370445162873e-07, -0.0031700036488473415, 0.0, -0.00757598876953125, -0.1390399932861328, -0.0008832216262817383, -1.71661376953125e-05, -0.0001678466796875, -0.0016536712646484375, -8.0108642578125e-05, -0.0010778573341667652, -6.079673767089844e-06, -0.0023298263549804688, -1.33514404296875e-05, -0.00026991963386535645, -5.173678437131457e-05, -1.5020355931483209e-05, -0.0028668255545198917, -3.814689989667386e-06], "choice_history": [97, 283, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "2", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 2}, {"_type": "Template55", "hole1": "Adjacent", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 3, "hole0": 0}], "hole3": "create_minion", "hole0": "FlametongueTotem", "_type": "Template5", "hole2": [{"hole2": "SHAMAN", "_type": "Template31", "hole1": 2, "hole0": "Flametongue Totem"}], "hole1": "MinionCard"}, "score": -6.594834719029251, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n"}, {"score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -6.540184020996094, -2.32455840887269e-05, -3.576278118089249e-07, -7.110647857189178e-07, -2.872943878173828e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.0023345947265625, -0.0004787445068359375, -3.576278118089249e-07, -1.811981201171875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.000268780771875754, 0.0, -0.001796722412109375, 0.0, -0.0007859468460083008, 0.0, -0.0020122528076171875, -2.47955322265625e-05, -2.288818359375e-05, 0.0, -0.00016021728515625, 0.0, -0.010423660278320312, 0.0, -2.47955322265625e-05, 0.0, -0.000225067138671875, 0.0, -3.814697265625e-06, -0.0008563995361328125, -1.52587890625e-05, -1.0847986231965479e-05, -2.861018856492592e-06, -0.00011896601063199341, -3.576278118089249e-07, -0.0059619927778840065, -1.1920928244535389e-07, -0.008693695068359375, -0.037639617919921875, -0.0015621185302734375, -2.288818359375e-05, -0.000293731689453125, -0.0022726058959960938, -6.29425048828125e-05, -0.0009398385882377625, -6.318092346191406e-06, -0.0024290084838867188, -1.33514404296875e-05, -0.0002924203872680664, -5.3405718063004315e-05, -1.7881371604744345e-05, -0.0024313535541296005, -4.291525328881107e-06], "choice_history": [97, 283, "<UNK>", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "2", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 2}, {"_type": "Template55", "hole1": "Adjacent", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 3, "hole0": 0}], "hole3": "create_minion", "hole0": "<UNK>Totem", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "TOTEM"}, "hole3": "minion_type", "hole0": "Flametongue Totem", "_type": "Template27", "hole2": "SHAMAN", "hole1": 2}], "hole1": "MinionCard"}, "score": -6.622594600585494, "inferred_code": "class <UNK>Totem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n"}, {"score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -0.002484489232301712, -2.32455840887269e-05, -3.576278118089249e-07, -7.110647857189178e-07, -2.872943878173828e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.0023345947265625, -0.0004787445068359375, -3.576278118089249e-07, -1.811981201171875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.000268780771875754, 0.0, -0.001796722412109375, 0.0, -0.0007859468460083008, 0.0, -0.0020122528076171875, -2.47955322265625e-05, -2.288818359375e-05, 0.0, -0.00016021728515625, 0.0, -0.010423660278320312, 0.0, -2.47955322265625e-05, 0.0, -0.000225067138671875, 0.0, -3.814697265625e-06, -0.0008563995361328125, -1.52587890625e-05, -1.0847986231965479e-05, -2.861018856492592e-06, -0.00011896601063199341, -3.576278118089249e-07, -0.0059619927778840065, -1.1920928244535389e-07, -0.008693695068359375, -5.76051139831543, -0.02068185806274414, -1.1444091796875e-05, -0.0003337860107421875, -0.0011920928955078125, -4.57763671875e-05, -0.0006804431322962046, -5.9604644775390625e-06, -0.0043277740478515625, -1.33514404296875e-05, -0.00045987963676452637, -6.937978469068184e-05, -2.4437862521153875e-05, -0.0029664100147783756, -5.483612312673358e-06, -4.57763671875e-05, -0.044872283935546875, -0.015863418579101562, -0.14543212950229645, -2.0265579223632812e-06, -0.0030975341796875, -0.07500839233398438, -0.0014085769653320312, -0.28176307678222656, -1.1920928244535389e-07, -0.2943754196166992, -0.000148773193359375, -0.0031058192253112793, -3.683563772938214e-05, 0.0], "choice_history": [97, 283, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 37, 322, "Aura", "<EOS>", 347, 80, 310, "2", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>", 346, 87, 324, "Aura", "<EOS>", 347, 81, 311, "1", "<EOS>", 88, 325, "Minion", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"hole2": [{"_type": "Template78_expr_seq", "hole1": [{"_type": "Template71", "hole0": 1}, {"_type": "Template79", "hole0": "MinionSelector"}], "hole0": "Aura"}], "_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 2}, {"_type": "Template55", "hole1": "Adjacent", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 3, "hole0": 0}], "hole3": "create_minion", "hole0": "FlametongueTotem", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "TOTEM"}, "hole3": "minion_type", "hole0": "Flametongue Totem", "_type": "Template27", "hole2": "SHAMAN", "hole1": 2}], "hole1": "MinionCard"}, "score": -6.693342952761483, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent())), Aura(ChangeHealth(1), MinionSelector())])\n"}, {"score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -0.002484489232301712, -2.32455840887269e-05, -3.576278118089249e-07, -7.110647857189178e-07, -2.872943878173828e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.0023345947265625, -0.0004787445068359375, -3.576278118089249e-07, -1.811981201171875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.000268780771875754, 0.0, -0.001796722412109375, 0.0, -0.0007859468460083008, 0.0, -0.0020122528076171875, -2.47955322265625e-05, -2.288818359375e-05, 0.0, -0.00016021728515625, 0.0, -0.010423660278320312, 0.0, -2.47955322265625e-05, 0.0, -0.000225067138671875, 0.0, -3.814697265625e-06, -0.0008563995361328125, -1.52587890625e-05, -1.0847986231965479e-05, -2.861018856492592e-06, -0.00011896601063199341, -3.576278118089249e-07, -6.570797443389893, -8.225440979003906e-06, -0.005578041076660156, -2.288818359375e-05, -0.18405067920684814, -2.0265579223632812e-06], "choice_history": [97, 283, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "0", "<EOS>", "3", "<EOS>", "spell_targetable", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "spell_targetable", "_type": "Template50", "hole1": 3, "hole0": 0}], "hole3": "create_minion", "hole0": "FlametongueTotem", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "TOTEM"}, "hole3": "minion_type", "hole0": "Flametongue Totem", "_type": "Template27", "hole2": "SHAMAN", "hole1": 2}], "hole1": "MinionCard"}, "score": -6.782656791736656, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, spell_targetable=True)\n"}, {"score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -0.002484489232301712, -2.32455840887269e-05, -3.576278118089249e-07, -7.110647857189178e-07, -2.872943878173828e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.0023345947265625, -0.0004787445068359375, -3.576278118089249e-07, -1.811981201171875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.000268780771875754, 0.0, -0.001796722412109375, 0.0, -0.0007859468460083008, 0.0, -0.0020122528076171875, -2.47955322265625e-05, -2.288818359375e-05, 0.0, -0.00016021728515625, 0.0, -0.010423660278320312, 0.0, -2.47955322265625e-05, 0.0, -0.000225067138671875, 0.0, -3.814697265625e-06, -0.0008563995361328125, -1.52587890625e-05, -1.0847986231965479e-05, -2.861018856492592e-06, -0.00011896601063199341, -3.576278118089249e-07, -0.0059619927778840065, -1.1920928244535389e-07, -6.632336616516113, -0.0001392364501953125, -0.15359771251678467, 0.0], "choice_history": [97, 283, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "auras", "_type": "Template50", "hole1": 3, "hole0": 0}], "hole3": "create_minion", "hole0": "FlametongueTotem", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "TOTEM"}, "hole3": "minion_type", "hole0": "Flametongue Totem", "_type": "Template27", "hole2": "SHAMAN", "hole1": 2}], "hole1": "MinionCard"}, "score": -6.81423316535102, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=True)\n"}, {"score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -0.002484489232301712, -2.32455840887269e-05, -3.576278118089249e-07, -7.110647857189178e-07, -2.872943878173828e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.0023345947265625, -0.0004787445068359375, -3.576278118089249e-07, -1.811981201171875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.000268780771875754, 0.0, -6.7783966064453125, -5.7220458984375e-06, -0.0001411437406204641, 0.0, -0.0012264251708984375, -2.288818359375e-05, -1.33514404296875e-05, 0.0, -0.0002460479736328125, 0.0, -0.012205123901367188, 0.0, -2.288818359375e-05, 0.0, -0.000213623046875, 0.0, -5.7220458984375e-06, -0.000873565673828125, -1.52587890625e-05, -1.07287787614041e-05, -2.861018856492592e-06, -0.0001220651320181787, -3.576278118089249e-07, -0.006053207907825708, -1.1920928244535389e-07, -0.008739471435546875, -0.03531169891357422, -0.001552581787109375, -2.288818359375e-05, -0.0002803802490234375, -0.002239227294921875, -6.4849853515625e-05, -0.0010057706385850906, -6.318092346191406e-06, -0.002437591552734375, -1.33514404296875e-05, -0.00028993189334869385, -5.173678437131457e-05, -1.7881371604744345e-05, -0.0024219669867306948, -4.291525328881107e-06], "choice_history": [97, 283, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "2", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 2}, {"_type": "Template55", "hole1": "Adjacent", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 3, "hole0": 0}], "hole3": "create_minion", "hole0": "FlametongueTotem", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "TOTEM"}, "hole3": "minion_type", "hole0": "Flametongue Totem", "_type": "Template27", "hole2": "PALADIN", "hole1": 2}], "hole1": "MinionCard"}, "score": -6.859750280517169, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n"}, {"score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -0.002484489232301712, -2.32455840887269e-05, -3.576278118089249e-07, -7.110647857189178e-07, -2.872943878173828e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.0023345947265625, -0.0004787445068359375, -3.576278118089249e-07, -1.811981201171875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.000268780771875754, 0.0, -0.001796722412109375, 0.0, -0.0007859468460083008, 0.0, -0.0020122528076171875, -2.47955322265625e-05, -2.288818359375e-05, 0.0, -0.00016021728515625, 0.0, -0.010423660278320312, 0.0, -2.47955322265625e-05, 0.0, -0.000225067138671875, 0.0, -3.814697265625e-06, -0.0008563995361328125, -1.52587890625e-05, -1.0847986231965479e-05, -2.861018856492592e-06, -0.00011896601063199341, -3.576278118089249e-07, -0.0059619927778840065, -1.1920928244535389e-07, -5.0802459716796875, -0.0036706924438476562, -0.0001068115234375, -0.019539833068847656, -0.030162811279296875, -0.0008113189833238721, -0.005901336669921875, -0.04154002666473389, -5.996227264404297e-05, -1.9073486328125e-06, 0.0, -0.4581871032714844, -6.67572021484375e-05, -0.01218999270349741, -3.814697265625e-06, -0.032230257987976074, 0.0, 0.0, -0.0716315507888794, -0.0022498369216918945, -8.010863530216739e-05, -3.0517578125e-05, -0.0001316070556640625, -6.866455078125e-05, -3.814697265625e-06, 0.0, -0.24750399589538574, -0.0003511905379127711, -0.00418853759765625, -0.10331153869628906, -0.014204978942871094, -0.008689284324645996, -0.00033974647521972656, -5.7220458984375e-06, -0.0002307891845703125, -0.000720977783203125, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -0.0008567571640014648, -3.814697265625e-06, -0.7482709884643555, -5.7220458984375e-06, -0.000202178955078125, -0.000255584716796875, 0.0, -0.03426170349121094, -3.516674041748047e-05, -0.004832267761230469, -9.5367431640625e-06, -0.03009669855237007, -1.9073486328125e-06], "choice_history": [97, 283, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 19, 169, 346, 61, 247, "Aura", "<EOS>", "Change", "Attack", "<EOS>", 346, 52, 179, "2", "<EOS>", "Self", "Selector", "<EOS>", "Greater", "Than", "<EOS>", 346, 45, 150, 21, 174, "Count", "<EOS>", 346, 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 353, 95, 336, "value", "<EOS>", 23, 179, "0", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"elts": [{"hole6": "GreaterThan", "hole3": "SelfSelector", "hole0": "Aura", "_type": "Template39", "hole2": [{"n": 2, "_type": "Num"}], "hole7": [{"_type": "Call", "func": {"_type": "Name", "id": "Count"}, "args": [{"_type": "Template59", "hole1": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "hole0": "IsType"}]}], "hole8": [{"value": {"n": 0, "_type": "Num"}, "_type": "keyword", "arg": "value"}], "hole1": "ChangeAttack"}], "_type": "List"}, "hole2": "auras", "_type": "Template50", "hole1": 3, "hole0": 0}], "hole3": "create_minion", "hole0": "FlametongueTotem", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "TOTEM"}, "hole3": "minion_type", "hole0": "Flametongue Totem", "_type": "Template27", "hole2": "SHAMAN", "hole1": 2}], "hole1": "MinionCard"}, "score": -6.985470552194151, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), SelfSelector(),\n            GreaterThan(Count(MinionSelector(IsType(MINION_TYPE.MECH))),\n            value=0))])\n"}, {"score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -0.002484489232301712, -2.32455840887269e-05, -3.576278118089249e-07, -7.110647857189178e-07, -2.872943878173828e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.0023345947265625, -0.0004787445068359375, -3.576278118089249e-07, -1.811981201171875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.000268780771875754, 0.0, -0.001796722412109375, 0.0, -0.0007859468460083008, 0.0, -0.0020122528076171875, -2.47955322265625e-05, -2.288818359375e-05, 0.0, -0.00016021728515625, 0.0, -0.010423660278320312, 0.0, -2.47955322265625e-05, 0.0, -0.000225067138671875, 0.0, -3.814697265625e-06, -0.0008563995361328125, -1.52587890625e-05, -1.0847986231965479e-05, -2.861018856492592e-06, -0.00011896601063199341, -3.576278118089249e-07, -0.0059619927778840065, -1.1920928244535389e-07, -5.0802459716796875, -0.0036706924438476562, -0.0001068115234375, -0.019539833068847656, -0.030162811279296875, -0.0008113189833238721, -0.005901336669921875, -0.04154002666473389, -5.996227264404297e-05, -1.9073486328125e-06, 0.0, -0.4581871032714844, -6.67572021484375e-05, -0.01218999270349741, -3.814697265625e-06, -0.032230257987976074, 0.0, 0.0, -0.0716315507888794, -0.0022498369216918945, -8.010863530216739e-05, -3.0517578125e-05, -0.0001316070556640625, -6.866455078125e-05, -3.814697265625e-06, 0.0, -0.24750399589538574, -0.0003511905379127711, -0.00418853759765625, -0.10331153869628906, -0.014204978942871094, -0.008689284324645996, -0.00033974647521972656, -5.7220458984375e-06, -0.0002307891845703125, -0.000720977783203125, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -0.0008567571640014648, -3.814697265625e-06, -0.8167810440063477, 0.0, -0.000457763671875, -0.0001983642578125, 0.0, -0.016882896423339844, -2.622604188218247e-05, -0.0037260055541992188, -9.5367431640625e-06, -0.017980458214879036, -1.9073486328125e-06], "choice_history": [97, 283, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 19, 169, 346, 61, 247, "Aura", "<EOS>", "Change", "Attack", "<EOS>", 346, 52, 179, "2", "<EOS>", "Self", "Selector", "<EOS>", "Greater", "Than", "<EOS>", 346, 45, 150, 21, 174, "Count", "<EOS>", 346, 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 353, 95, 336, "value", "<EOS>", 23, 179, "0", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"elts": [{"hole6": "GreaterThan", "hole3": "SelfSelector", "hole0": "Aura", "_type": "Template39", "hole2": [{"n": 2, "_type": "Num"}], "hole7": [{"_type": "Call", "func": {"_type": "Name", "id": "Count"}, "args": [{"_type": "Template59", "hole1": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "TOTEM"}], "hole0": "IsType"}]}], "hole8": [{"value": {"n": 0, "_type": "Num"}, "_type": "keyword", "arg": "value"}], "hole1": "ChangeAttack"}], "_type": "List"}, "hole2": "auras", "_type": "Template50", "hole1": 3, "hole0": 0}], "hole3": "create_minion", "hole0": "FlametongueTotem", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "TOTEM"}, "hole3": "minion_type", "hole0": "Flametongue Totem", "_type": "Template27", "hole2": "SHAMAN", "hole1": 2}], "hole1": "MinionCard"}, "score": -7.023562999637129, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), SelfSelector(),\n            GreaterThan(Count(MinionSelector(IsType(MINION_TYPE.TOTEM))),\n            value=0))])\n"}, {"score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -0.002484489232301712, -2.32455840887269e-05, -3.576278118089249e-07, -7.110647857189178e-07, -2.872943878173828e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.0023345947265625, -0.0004787445068359375, -3.576278118089249e-07, -1.811981201171875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.000268780771875754, 0.0, -0.001796722412109375, 0.0, -0.0007859468460083008, 0.0, -6.466327667236328, -0.0015659332275390625, -0.7417784333229065, 0.0, -0.00021970272064208984, 0.0, -2.7179714379599318e-05, 0.0, -3.814697265625e-06, -0.0005855560302734375, -3.62396240234375e-05, -1.6927575416048057e-05, -2.264974000354414e-06, -0.0001777304132701829, -2.384185791015625e-06, -0.005046678241342306, 0.0, -0.0067501068115234375, -0.06178092956542969, -0.0009652376174926758, -2.47955322265625e-05, -0.0001964569091796875, -0.0018167495727539062, -6.67572021484375e-05, -0.001123548485338688, -6.198883056640625e-06, -0.0024566650390625, -1.33514404296875e-05, -0.00026942789554595947, -5.0544684199849144e-05, -1.6093232261482626e-05, -0.0024776409845799208, -4.172316494077677e-06], "choice_history": [97, 283, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 23, 179, "3", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "2", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 2}, {"_type": "Template55", "hole1": "Adjacent", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 3, "hole0": 0}], "hole3": "create_minion", "hole0": "FlametongueTotem", "_type": "Template5", "hole2": [{"hole4": {"n": 3, "_type": "Num"}, "hole3": "minion_type", "hole0": "Flametongue Totem", "_type": "Template27", "hole2": "SHAMAN", "hole1": 2}], "hole1": "MinionCard"}, "score": -7.302104493591855, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=3)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n"}, {"score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -0.002484489232301712, -2.32455840887269e-05, -3.576278118089249e-07, -7.110647857189178e-07, -2.872943878173828e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.0023345947265625, -0.0004787445068359375, -3.576278118089249e-07, -1.811981201171875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.000268780771875754, 0.0, -0.001796722412109375, 0.0, -0.0007859468460083008, 0.0, -6.466327667236328, -0.0015659332275390625, -0.7561156749725342, 0.0, -0.000598907470703125, 0.0, -3.6239616747479886e-05, 0.0, -3.814697265625e-06, -0.0025424957275390625, -3.4332275390625e-05, -1.6212332411669195e-05, -1.9073468138230965e-06, -0.00019644299754872918, -2.384185791015625e-06, -0.005670997779816389, 0.0, -0.0081329345703125, -0.05242919921875, -0.0011101961135864258, -2.47955322265625e-05, -0.0001964569091796875, -0.0020122528076171875, -7.2479248046875e-05, -0.0012122178450226784, -6.198883056640625e-06, -0.00250244140625, -1.33514404296875e-05, -0.0002657473087310791, -5.066388985142112e-05, -1.5854815501370467e-05, -0.0024804682470858097, -4.0531076592742465e-06], "choice_history": [97, 283, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 23, 179, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "2", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 2}, {"_type": "Template55", "hole1": "Adjacent", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 3, "hole0": 0}], "hole3": "create_minion", "hole0": "FlametongueTotem", "_type": "Template5", "hole2": [{"hole4": {"n": 0, "_type": "Num"}, "hole3": "minion_type", "hole0": "Flametongue Totem", "_type": "Template27", "hole2": "SHAMAN", "hole1": 2}], "hole1": "MinionCard"}, "score": -7.3119376266666904, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=0)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n"}, {"score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -0.002484489232301712, -2.32455840887269e-05, -3.576278118089249e-07, -7.110647857189178e-07, -2.872943878173828e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.0023345947265625, -0.0004787445068359375, -3.576278118089249e-07, -1.811981201171875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.000268780771875754, 0.0, -0.001796722412109375, 0.0, -0.0007859468460083008, 0.0, -0.0020122528076171875, -2.47955322265625e-05, -2.288818359375e-05, 0.0, -0.00016021728515625, 0.0, -0.010423660278320312, 0.0, -2.47955322265625e-05, 0.0, -0.000225067138671875, 0.0, -3.814697265625e-06, -8.060011863708496, -0.000335693359375, -0.00011848701251437888, 0.0, -0.0005768439150415361, 0.0], "choice_history": [97, 283, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "0", "<EOS>", "3", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 3, "hole0": 0}], "hole3": "create_minion", "hole0": "FlametongueTotem", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "TOTEM"}, "hole3": "minion_type", "hole0": "Flametongue Totem", "_type": "Template27", "hole2": "SHAMAN", "hole1": 2}], "hole1": "MinionCard"}, "score": -8.08223568490746, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3)\n"}]}
{"index": 35, "beams": [{"score_history": [-4.9591064453125e-05, -0.00014495849609375, -2.3841830625315197e-06, -8.618476567789912e-05, -3.549456596374512e-05, -2.7775760827353224e-05, -1.3589828085969202e-05, -4.57763671875e-05, -0.0048847198486328125, -0.06380653381347656, -3.62396240234375e-05, -1.9073486328125e-06, -6.914137884450611e-06, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.000736236572265625, -0.0004596710205078125, -0.0001811981201171875, -1.0967213711410295e-05, -0.001791128539480269, -4.76837158203125e-05, -5.7220458984375e-06, -0.004931232891976833, 0.0, -0.0008678436279296875, -2.09808349609375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -5.7578086853027344e-05, -7.62939453125e-06, -2.3245811462402344e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.52587890625e-05, -3.62396240234375e-05, 0.0, -6.151199340820312e-05, -0.0001277923583984375, -0.03956794738769531, -1.9073486328125e-06, -0.001018524169921875, -1.1444091796875e-05, -2.5033950805664062e-05, -2.47955322265625e-05, -0.0003833770751953125, -0.009680747985839844, -0.0012264251708984375, -0.007644772529602051, 0.0, -4.00543212890625e-05, 0.0, -0.6686364412307739, -1.9073486328125e-06, -4.9591064453125e-05, -0.0010967254638671875, -5.7220458984375e-06, -2.062299427052494e-05, -8.702239938429557e-06, -2.67025734501658e-05, -4.768370445162873e-07, -0.002592325210571289, 0.0, -6.67572021484375e-05, -7.62939453125e-06, -0.00018143653869628906, 0.0], "choice_history": [97, 283, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Frog", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 130, 287, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "p", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 1, "hole0": 0}], "hole3": "create_minion", "hole0": "Frog", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Frog"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -0.8109127247033712, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n"}, {"score_history": [-4.9591064453125e-05, -0.00014495849609375, -2.3841830625315197e-06, -8.618476567789912e-05, -3.549456596374512e-05, -2.7775760827353224e-05, -1.3589828085969202e-05, -4.57763671875e-05, -0.0048847198486328125, -0.06380653381347656, -3.62396240234375e-05, -1.9073486328125e-06, -6.914137884450611e-06, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.000736236572265625, -0.0004596710205078125, -0.0001811981201171875, -1.0967213711410295e-05, -0.001791128539480269, -4.76837158203125e-05, -5.7220458984375e-06, -0.004931232891976833, 0.0, -0.0008678436279296875, -2.09808349609375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -5.7578086853027344e-05, -7.62939453125e-06, -2.3245811462402344e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.52587890625e-05, -3.62396240234375e-05, 0.0, -6.151199340820312e-05, -0.0001277923583984375, -0.03956794738769531, -1.9073486328125e-06, -0.001018524169921875, -1.1444091796875e-05, -2.5033950805664062e-05, -2.47955322265625e-05, -0.0003833770751953125, -0.009680747985839844, -0.0012264251708984375, -0.007644772529602051, 0.0, -4.00543212890625e-05, 0.0, -0.7947942018508911, 0.0, -1.52587890625e-05, -0.000431060791015625, -9.5367431640625e-06, -8.22540732769994e-06, -8.821448318485636e-06, -1.931178485392593e-05, -5.960462772236497e-07, -0.0024417638778686523, 0.0, -5.7220458984375e-05, -7.62939453125e-06, -0.00023484230041503906, 0.0], "choice_history": [97, 283, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Frog", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 1, "hole0": 0}], "hole3": "create_minion", "hole0": "Frog", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Frog"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -0.9362461534518047, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n"}, {"score_history": [-4.9591064453125e-05, -0.00014495849609375, -2.3841830625315197e-06, -8.618476567789912e-05, -3.549456596374512e-05, -2.7775760827353224e-05, -1.3589828085969202e-05, -4.57763671875e-05, -0.0048847198486328125, -2.871352195739746, -0.0001354217529296875, -3.814697265625e-06, -5.006785613659304e-06, 0.0, -0.00014889240264892578, -7.748603820800781e-06, -0.13495254516601562, -0.00019073486328125, -1.52587890625e-05, -9.775130820344202e-06, -0.002072373405098915, -0.000385284423828125, -2.6702880859375e-05, -0.000670120120048523, -1.9073486328125e-06, -0.000133514404296875, -1.33514404296875e-05, -7.62939453125e-06, -9.5367431640625e-06, -2.3126602172851562e-05, 0.0, -2.7060508728027344e-05, -5.7220458984375e-06, -6.103515625e-05, -3.0517578125e-05, -2.09808349609375e-05, 0.0, -4.434585207491182e-05, -0.00010466574894962832, -0.0040416717529296875, -1.9073486328125e-06, -0.000255584716796875, -2.09808349609375e-05, -4.6133995056152344e-05, -9.5367431640625e-06, -0.00035858154296875, -4.1961669921875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001506805419921875, 0.0, -0.001277923583984375, 0.0, -7.82012939453125e-05, 0.0, -0.039478302001953125, -5.7220458984375e-06, -3.62396240234375e-05, -0.03102397918701172, -0.0002193450927734375, -0.013326030224561691, -2.0265579223632812e-06, -0.0019868123345077038, -1.1920928244535389e-07, -0.0023404359817504883, -1.9073486328125e-06, -0.000102996826171875, -7.62939453125e-06, -0.0002690553665161133, 0.0], "choice_history": [97, 283, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 351, 53, 183, "Frog", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 130, 287, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "p", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 1, "hole0": 0}], "hole3": "create_minion", "hole0": "Frog", "_type": "Template5", "hole2": [{"hole2": [{"_type": "Str", "s": "Frog"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}, {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -3.110867840794519, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n"}, {"score_history": [-4.9591064453125e-05, -0.00014495849609375, -2.3841830625315197e-06, -8.618476567789912e-05, -3.549456596374512e-05, -2.7775760827353224e-05, -1.3589828085969202e-05, -4.57763671875e-05, -0.0048847198486328125, -0.06380653381347656, -3.62396240234375e-05, -1.9073486328125e-06, -6.914137884450611e-06, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.000736236572265625, -0.0004596710205078125, -0.0001811981201171875, -1.0967213711410295e-05, -0.001791128539480269, -4.76837158203125e-05, -5.7220458984375e-06, -0.004931232891976833, 0.0, -0.0008678436279296875, -2.09808349609375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -5.7578086853027344e-05, -7.62939453125e-06, -2.3245811462402344e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.52587890625e-05, -3.62396240234375e-05, 0.0, -6.151199340820312e-05, -0.0001277923583984375, -0.03956794738769531, -1.9073486328125e-06, -0.001018524169921875, -1.1444091796875e-05, -2.5033950805664062e-05, -2.47955322265625e-05, -0.0003833770751953125, -0.009680747985839844, -0.0012264251708984375, -0.007644772529602051, 0.0, -4.00543212890625e-05, 0.0, -3.656057357788086, -9.5367431640625e-06, -3.62396240234375e-05, -0.001312255859375, -3.814697265625e-06, -2.2053474822314456e-05, -8.106198947643861e-06, -2.2768756025470793e-05, -3.576278118089249e-07, -0.002374887466430664, 0.0, -7.43865966796875e-05, -7.62939453125e-06, -0.0002480745315551758, 0.0], "choice_history": [97, 283, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Frog", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "_", "<EOS>", 358, 130, 287, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "_", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 1, "hole0": 0}], "hole3": "create_minion", "hole0": "Frog", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Frog"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -3.798395153317813, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, _):\n        return Minion(0, 1, taunt=True)\n"}, {"score_history": [-4.9591064453125e-05, -0.00014495849609375, -2.3841830625315197e-06, -8.618476567789912e-05, -3.549456596374512e-05, -2.7775760827353224e-05, -1.3589828085969202e-05, -4.57763671875e-05, -0.0048847198486328125, -0.06380653381347656, -3.62396240234375e-05, -1.9073486328125e-06, -6.914137884450611e-06, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.000736236572265625, -0.0004596710205078125, -0.0001811981201171875, -1.0967213711410295e-05, -0.001791128539480269, -4.76837158203125e-05, -5.7220458984375e-06, -0.004931232891976833, 0.0, -0.0008678436279296875, -2.09808349609375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -5.7578086853027344e-05, -7.62939453125e-06, -2.3245811462402344e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.52587890625e-05, -3.62396240234375e-05, 0.0, -6.151199340820312e-05, -0.0001277923583984375, -3.343502998352051, -1.9073486328125e-06, -0.000751495361328125, -1.33514404296875e-05, -8.606910705566406e-05, -1.52587890625e-05, -0.000423431396484375, -0.007622718811035156, -0.0015354156494140625, -0.02139413356781006, 0.0, -0.0001125335693359375, 0.0, -0.3820430040359497, -1.9073486328125e-06, -5.14984130859375e-05, -0.00115203857421875, -5.7220458984375e-06, -2.062299427052494e-05, -9.536697689327411e-06, -2.6583367798593827e-05, -4.768370445162873e-07, -0.002569437026977539, 0.0, -6.67572021484375e-05, -7.62939453125e-06, -0.00016796588897705078, 0.0], "choice_history": [97, 283, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Frog", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 130, 287, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "p", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 1, "hole0": 0}], "hole3": "create_minion", "hole0": "Frog", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Frog"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -3.840175148215053, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n"}, {"score_history": [-4.9591064453125e-05, -0.00014495849609375, -2.3841830625315197e-06, -8.618476567789912e-05, -3.549456596374512e-05, -2.7775760827353224e-05, -1.3589828085969202e-05, -4.57763671875e-05, -0.0048847198486328125, -0.06380653381347656, -3.62396240234375e-05, -1.9073486328125e-06, -6.914137884450611e-06, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.000736236572265625, -0.0004596710205078125, -0.0001811981201171875, -1.0967213711410295e-05, -0.001791128539480269, -4.76837158203125e-05, -5.7220458984375e-06, -0.004931232891976833, 0.0, -0.0008678436279296875, -2.09808349609375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -5.7578086853027344e-05, -7.62939453125e-06, -2.3245811462402344e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.52587890625e-05, -3.62396240234375e-05, 0.0, -6.151199340820312e-05, -0.0001277923583984375, -3.343502998352051, -1.9073486328125e-06, -0.000751495361328125, -1.33514404296875e-05, -8.606910705566406e-05, -1.52587890625e-05, -0.000423431396484375, -0.007622718811035156, -0.0015354156494140625, -0.02139413356781006, 0.0, -0.0001125335693359375, 0.0, -1.2938090562820435, 0.0, -1.33514404296875e-05, -0.0004215240478515625, -9.5367431640625e-06, -7.033323527139146e-06, -9.775113539944869e-06, -1.8477332559996285e-05, -5.960462772236497e-07, -0.002443671226501465, 0.0, -5.53131103515625e-05, -7.62939453125e-06, -0.00021958351135253906, 0.0], "choice_history": [97, 283, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Frog", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 1, "hole0": 0}], "hole3": "create_minion", "hole0": "Frog", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Frog"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -4.75106751595996, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n"}, {"score_history": [-4.9591064453125e-05, -0.00014495849609375, -2.3841830625315197e-06, -8.618476567789912e-05, -3.549456596374512e-05, -2.7775760827353224e-05, -1.3589828085969202e-05, -4.57763671875e-05, -0.0048847198486328125, -2.871352195739746, -0.0001354217529296875, -3.814697265625e-06, -5.006785613659304e-06, 0.0, -0.00014889240264892578, -7.748603820800781e-06, -2.0956897735595703, -0.0003662109375, -9.918212890625e-05, -3.4570680327306036e-06, -0.017186300829052925, -2.288818359375e-05, -1.9073486328125e-06, -0.011317279189825058, -1.9073486328125e-06, -0.000568389892578125, -3.4332275390625e-05, -1.52587890625e-05, -3.814697265625e-06, -4.8279762268066406e-05, -1.33514404296875e-05, -1.7523765563964844e-05, -3.814697265625e-06, -1.33514404296875e-05, -9.5367431640625e-06, -2.6702880859375e-05, 0.0, -7.62939453125e-05, -0.00038278099964372814, -0.03883552551269531, -1.9073486328125e-06, -0.000850677490234375, -1.9073486328125e-05, -2.8848648071289062e-05, -2.47955322265625e-05, -2.288818359375e-05, 0.0, -0.006683349609375, -1.52587890625e-05, -1.33514404296875e-05, -0.00131988525390625, -2.288818359375e-05, -0.00031716562807559967, -2.2649765014648438e-06, -0.0006236300687305629, -2.3841855067985307e-07, -0.0024453401565551758, -1.9073486328125e-06, -8.96453857421875e-05, -7.62939453125e-06, -0.0002461671829223633, 0.0], "choice_history": [97, 283, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Frog", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 130, 287, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "p", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 1, "hole0": 0}], "hole3": "create_minion", "hole0": "Frog", "_type": "Template5", "hole2": [{"hole2": [{"_type": "Str", "s": "Frog"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -5.054418330823381, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n"}, {"score_history": [-4.9591064453125e-05, -0.00014495849609375, -2.3841830625315197e-06, -8.618476567789912e-05, -3.549456596374512e-05, -2.7775760827353224e-05, -1.3589828085969202e-05, -4.57763671875e-05, -0.0048847198486328125, -0.06380653381347656, -3.62396240234375e-05, -1.9073486328125e-06, -6.914137884450611e-06, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.000736236572265625, -0.0004596710205078125, -0.0001811981201171875, -1.0967213711410295e-05, -0.001791128539480269, -4.76837158203125e-05, -5.7220458984375e-06, -0.004931232891976833, 0.0, -0.0008678436279296875, -2.09808349609375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -5.7578086853027344e-05, -7.62939453125e-06, -2.3245811462402344e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.52587890625e-05, -3.62396240234375e-05, 0.0, -6.151199340820312e-05, -0.0001277923583984375, -0.03956794738769531, -1.9073486328125e-06, -0.001018524169921875, -1.1444091796875e-05, -2.5033950805664062e-05, -2.47955322265625e-05, -0.0003833770751953125, -0.009680747985839844, -0.0012264251708984375, -5.16763973236084, -0.0017080307006835938, -9.5367431640625e-06, 0.0, -0.10532188415527344, 0.0, -2.288818359375e-05, -0.0006561279296875, -1.1444091796875e-05, -9.894321920000948e-06, -6.437280717364047e-06, -3.2662930607330054e-05, -4.768370445162873e-07, -0.0027277469635009766, -1.9073486328125e-06, -6.866455078125e-05, -7.62939453125e-06, -0.00025963783264160156, 0.0], "choice_history": [97, 283, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Frog", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 1, "hole0": 0}], "hole3": "create_minion", "hole0": "Frog", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "DRAGON"}], "hole2": [{"_type": "Str", "s": "Frog"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -5.40901755933362, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n"}, {"score_history": [-4.9591064453125e-05, -0.00014495849609375, -2.3841830625315197e-06, -8.618476567789912e-05, -3.549456596374512e-05, -2.7775760827353224e-05, -1.3589828085969202e-05, -4.57763671875e-05, -5.35079288482666, -0.00020599365234375, -3.814697265625e-06, -0.550372838973999, -0.002863501198589802, 0.0, -0.0008556842803955078, -1.9073486328125e-06, -0.0060083866119384766, -2.0265558760002023e-06, -0.0001850128173828125, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -9.34600830078125e-05, -2.3841855067985307e-07, -0.0005952119827270508, 0.0, -1.33514404296875e-05, 0.0, -0.016511917114257812, 0.0, -3.0517578125e-05, -0.0009250640869140625, -1.1444091796875e-05, -1.966933996300213e-05, -1.0609570381348021e-05, -3.802717765211128e-05, -4.768370445162873e-07, -0.00634610652923584, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -0.00016415119171142578, 0.0], "choice_history": [97, 283, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Frog", "<EOS>", "0", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 1, "hole0": 0}], "hole3": "create_minion", "hole0": "Frog", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Frog", "_type": "Template26", "hole2": "COMMON", "hole1": 0}], "hole1": "MinionCard"}, "score": -5.936513364546585, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n"}, {"score_history": [-4.9591064453125e-05, -0.00014495849609375, -2.3841830625315197e-06, -8.618476567789912e-05, -3.549456596374512e-05, -2.7775760827353224e-05, -1.3589828085969202e-05, -4.57763671875e-05, -0.0048847198486328125, -0.06380653381347656, -3.62396240234375e-05, -1.9073486328125e-06, -6.914137884450611e-06, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.000736236572265625, -0.0004596710205078125, -0.0001811981201171875, -1.0967213711410295e-05, -0.001791128539480269, -4.76837158203125e-05, -5.7220458984375e-06, -5.337512493133545, 0.0, -0.001300811767578125, -1.52587890625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -2.682209014892578e-05, -5.7220458984375e-06, -1.3470649719238281e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-05, -3.814697265625e-05, 0.0, -5.757808321504854e-05, -0.00010061263310490176, -0.034282684326171875, -1.9073486328125e-06, -0.0014781951904296875, -1.33514404296875e-05, -2.6941299438476562e-05, -3.0517578125e-05, -0.000431060791015625, -0.008012771606445312, -0.0010280609130859375, -0.008455038070678711, 0.0, -3.814697265625e-05, 0.0, -0.7274504899978638, 0.0, -1.52587890625e-05, -0.00041961669921875, -9.5367431640625e-06, -8.106198947643861e-06, -9.059865078597795e-06, -1.8954162442241795e-05, -5.960462772236497e-07, -0.0024455785751342773, 0.0, -5.7220458984375e-05, -7.62939453125e-06, -0.00023865699768066406, 0.0], "choice_history": [97, 283, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Frog", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 1, "hole0": 0}], "hole3": "create_minion", "hole0": "Frog", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Frog"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -6.196010803350703, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n"}, {"score_history": [-4.9591064453125e-05, -0.00014495849609375, -2.3841830625315197e-06, -8.618476567789912e-05, -3.549456596374512e-05, -2.7775760827353224e-05, -1.3589828085969202e-05, -4.57763671875e-05, -0.0048847198486328125, -0.06380653381347656, -3.62396240234375e-05, -1.9073486328125e-06, -6.914137884450611e-06, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.000736236572265625, -0.0004596710205078125, -0.0001811981201171875, -1.0967213711410295e-05, -0.001791128539480269, -4.76837158203125e-05, -5.7220458984375e-06, -5.337512493133545, 0.0, -0.001300811767578125, -1.52587890625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -2.682209014892578e-05, -5.7220458984375e-06, -1.3470649719238281e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-05, -3.814697265625e-05, 0.0, -5.757808321504854e-05, -0.00010061263310490176, -0.034282684326171875, -1.9073486328125e-06, -0.0014781951904296875, -1.33514404296875e-05, -2.6941299438476562e-05, -3.0517578125e-05, -0.000431060791015625, -0.008012771606445312, -0.0010280609130859375, -0.008455038070678711, 0.0, -3.814697265625e-05, 0.0, -0.7316914796829224, -1.9073486328125e-06, -4.76837158203125e-05, -0.0010204315185546875, -5.7220458984375e-06, -2.074220174108632e-05, -9.059865078597795e-06, -2.598733590275515e-05, -4.768370445162873e-07, -0.0026056766510009766, 0.0, -6.67572021484375e-05, -7.62939453125e-06, -0.00019097328186035156, 0.0], "choice_history": [97, 283, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Frog", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 130, 287, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "p", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 1, "hole0": 0}], "hole3": "create_minion", "hole0": "Frog", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Frog"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -6.201024626503454, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n"}, {"score_history": [-4.9591064453125e-05, -0.00014495849609375, -2.3841830625315197e-06, -8.618476567789912e-05, -3.549456596374512e-05, -2.7775760827353224e-05, -1.3589828085969202e-05, -4.57763671875e-05, -0.0048847198486328125, -0.06380653381347656, -3.62396240234375e-05, -1.9073486328125e-06, -6.914137884450611e-06, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.000736236572265625, -0.0004596710205078125, -0.0001811981201171875, -1.0967213711410295e-05, -0.001791128539480269, -4.76837158203125e-05, -5.7220458984375e-06, -0.004931232891976833, 0.0, -0.0008678436279296875, -2.09808349609375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -5.7578086853027344e-05, -7.62939453125e-06, -2.3245811462402344e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.52587890625e-05, -3.62396240234375e-05, 0.0, -6.151199340820312e-05, -0.0001277923583984375, -0.03956794738769531, -1.9073486328125e-06, -0.001018524169921875, -1.1444091796875e-05, -2.5033950805664062e-05, -2.47955322265625e-05, -0.0003833770751953125, -4.810953140258789, -0.00482940673828125, -0.13510477542877197, 0.0, -0.0042572021484375, -0.0002117156982421875, -0.01030731201171875, -0.0007476806640625, -0.0081634521484375, -0.005755186080932617, -7.11679458618164e-05, -0.0005359649658203125, -0.0010242462158203125, -0.3761177062988281, -0.36074161529541016, -0.0005289316177368164, -5.471661643241532e-05, -0.0005321502685546875, -1.9073486328125e-06, -0.09151995182037354, -0.00010907640535151586, -3.576278118089249e-07, -0.0015344619750976562, -0.0001201629638671875, -5.14984130859375e-05, -0.08350681513547897, -5.960462772236497e-07, -0.000156402587890625, 0.0, -0.0009194612503051758, -0.00011432169412728399, 0.0, -0.09802913665771484, -0.0017108917236328125, -0.004479408264160156, -0.00038909912109375, -2.6702880859375e-05, -0.0029822606593370438, -1.9073486328125e-06, -4.971027374267578e-05, 0.0, -0.09773075580596924, 0.0, -5.7220458984375e-06, -0.38524818420410156, -5.14984130859375e-05, -3.0278701160568744e-05, -5.006777428206988e-06, -2.2768756025470793e-05, -1.1920928244535389e-07, -0.00225675106048584, 0.0, -5.7220458984375e-05, -3.814697265625e-06, -4.38690185546875e-05, 0.0], "choice_history": [97, 283, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Frog", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 95, 336, "choices", "<EOS>", 19, 169, 346, 69, 291, "Mana", "Change", "<EOS>", 347, 77, 301, "Count", "<EOS>", 21, 174, "Minion", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 89, 331, 139, 23, 179, "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 1, "hole0": 0}], "hole3": "create_minion", "hole0": "Frog", "_type": "Template5", "hole2": [{"hole3": [{"value": {"elts": [{"_type": "Template54", "hole1": [{"hole3": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}], "_type": "Template64", "hole1": {"_type": "Name", "id": "MinionSelector"}, "hole0": "Count"}, {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "hole0": "ManaChange"}], "_type": "List"}, "_type": "keyword", "arg": "choices"}], "hole2": [{"_type": "Str", "s": "Frog"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -6.610722174299319, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, choices=[Buff(ManaChange(Count(MinionSelector(players=\n            BothPlayer())), -1))])\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n"}, {"score_history": [-4.9591064453125e-05, -0.00014495849609375, -2.3841830625315197e-06, -8.618476567789912e-05, -3.549456596374512e-05, -2.7775760827353224e-05, -1.3589828085969202e-05, -4.57763671875e-05, -5.35079288482666, -0.00020599365234375, -3.814697265625e-06, -0.8780035376548767, -0.4894004464149475, -0.017308251932263374, 0.0, -0.0005697011947631836, -3.814697265625e-06, -0.008835077285766602, -2.0265558760002023e-06, -0.0001220703125, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -8.96453857421875e-05, -2.3841855067985307e-07, -0.0005837678909301758, 0.0, -1.33514404296875e-05, 0.0, -0.012937545776367188, 0.0, -3.24249267578125e-05, -0.0008983612060546875, -1.1444091796875e-05, -1.9430925021879375e-05, -1.1205610462639015e-05, -3.802717765211128e-05, -3.576278118089249e-07, -0.006777167320251465, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -0.00018131732940673828, 0.0], "choice_history": [97, 283, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Frog", "Frog", "<EOS>", "0", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 1, "hole0": 0}], "hole3": "create_minion", "hole0": "Frog", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "FrogFrog", "_type": "Template26", "hole2": "COMMON", "hole1": 0}], "hole1": "MinionCard"}, "score": -6.767302972493468, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('FrogFrog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n"}, {"score_history": [-4.9591064453125e-05, -0.00014495849609375, -2.3841830625315197e-06, -8.618476567789912e-05, -3.549456596374512e-05, -2.7775760827353224e-05, -1.3589828085969202e-05, -4.57763671875e-05, -5.35079288482666, -0.00020599365234375, -3.814697265625e-06, -0.8780035376548767, -0.9574645757675171, -0.0036426063161343336, -0.018181290477514267, 0.0, -0.0007946491241455078, -1.9073486328125e-06, -0.014772415161132812, -1.4305104514278355e-06, -0.0001087188720703125, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -8.392333984375e-05, -2.3841855067985307e-07, -0.00063323974609375, 0.0, -1.1444091796875e-05, 0.0, -0.007419586181640625, 0.0, -3.4332275390625e-05, -0.0008563995361328125, -9.5367431640625e-06, -1.811964830267243e-05, -1.2516897186287679e-05, -3.647750781965442e-05, -3.576278118089249e-07, -0.007221579551696777, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -0.00020241737365722656, 0.0], "choice_history": [97, 283, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Frog", "Frog", "Frog", "<EOS>", "0", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 1, "hole0": 0}], "hole3": "create_minion", "hole0": "Frog", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "FrogFrogFrog", "_type": "Template26", "hole2": "COMMON", "hole1": 0}], "hole1": "MinionCard"}, "score": -7.240973154140903, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('FrogFrogFrog', 0, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n"}, {"score_history": [-4.9591064453125e-05, -0.00014495849609375, -2.3841830625315197e-06, -8.618476567789912e-05, -3.549456596374512e-05, -2.7775760827353224e-05, -1.3589828085969202e-05, -4.57763671875e-05, -0.0048847198486328125, -0.06380653381347656, -3.62396240234375e-05, -1.9073486328125e-06, -6.914137884450611e-06, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.000736236572265625, -0.0004596710205078125, -0.0001811981201171875, -1.0967213711410295e-05, -0.001791128539480269, -4.76837158203125e-05, -5.7220458984375e-06, -0.004931232891976833, 0.0, -0.0008678436279296875, -2.09808349609375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -5.7578086853027344e-05, -7.62939453125e-06, -2.3245811462402344e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.52587890625e-05, -3.62396240234375e-05, 0.0, -6.151199340820312e-05, -0.0001277923583984375, -0.03956794738769531, -1.9073486328125e-06, -0.001018524169921875, -1.1444091796875e-05, -2.5033950805664062e-05, -2.47955322265625e-05, -0.0003833770751953125, -4.810953140258789, -0.00482940673828125, -0.13510477542877197, 0.0, -0.0042572021484375, -0.0002117156982421875, -0.01030731201171875, -0.0007476806640625, -0.0081634521484375, -0.005755186080932617, -7.11679458618164e-05, -0.0005359649658203125, -0.0010242462158203125, -0.3761177062988281, -0.36074161529541016, -0.0005289316177368164, -5.471661643241532e-05, -0.0005321502685546875, -1.9073486328125e-06, -0.09151995182037354, -0.00010907640535151586, -3.576278118089249e-07, -0.0015344619750976562, -0.0001201629638671875, -5.14984130859375e-05, -0.08350681513547897, -5.960462772236497e-07, -0.000156402587890625, 0.0, -0.0009194612503051758, -0.00011432169412728399, 0.0, -0.09802913665771484, -0.0017108917236328125, -0.004479408264160156, -0.00038909912109375, -2.6702880859375e-05, -0.0029822606593370438, -1.9073486328125e-06, -4.971027374267578e-05, 0.0, -0.09773075580596924, 0.0, -5.7220458984375e-06, -1.1425647735595703, -0.000133514404296875, -0.00854183454066515, -3.576278118089249e-07, -0.0006410970236174762, 0.0], "choice_history": [97, 283, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Frog", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 95, 336, "choices", "<EOS>", 19, 169, 346, 69, 291, "Mana", "Change", "<EOS>", 347, 77, 301, "Count", "<EOS>", 21, 174, "Minion", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 89, 331, 139, 23, 179, "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "0", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 0}], "hole3": "create_minion", "hole0": "Frog", "_type": "Template5", "hole2": [{"hole3": [{"value": {"elts": [{"_type": "Template54", "hole1": [{"hole3": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}], "_type": "Template64", "hole1": {"_type": "Name", "id": "MinionSelector"}, "hole0": "Count"}, {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "hole0": "ManaChange"}], "_type": "List"}, "_type": "keyword", "arg": "choices"}], "hole2": [{"_type": "Str", "s": "Frog"}, {"n": 0, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -7.374884240158906, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, choices=[Buff(ManaChange(Count(MinionSelector(players=\n            BothPlayer())), -1))])\n\n    def create_minion(self, player):\n        return Minion(0, 1)\n"}]}
{"index": 36, "beams": [{"score_history": [-3.0517578125e-05, -0.0005016326904296875, -1.1920928244535389e-07, -2.503383075236343e-05, -2.0265558760002023e-06, -2.384144681855105e-05, -5.7220458984375e-05, -2.0265558760002023e-06, -7.62939453125e-06, -0.0004520416259765625, -0.000659942626953125, -1.1920922133867862e-06, -0.00012040138244628906, -4.0531158447265625e-06, 0.0, -0.00036971812369301915, -1.9073486328125e-06, -0.000118255615234375, -5.7220458984375e-05, -5.7220458984375e-06, 0.0, -0.0001817941665649414, 0.0, -3.814697265625e-05, -5.14984130859375e-05, -1.0490381100680679e-05, -4.9948692321777344e-05, -0.08286380767822266, -5.340576171875e-05, -5.7220458984375e-06, -1.9073486328125e-05, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -1.33514404296875e-05, -6.67572021484375e-05, -1.728534698486328e-05, 0.0, -1.4066696166992188e-05, 0.0, -2.3484230041503906e-05, -8.344646857949556e-07, -0.0003070831298828125, -0.000370025634765625, -0.00031280517578125, -0.0001468658447265625, -0.005965113639831543, 0.0, -0.059456825256347656, -1.9073486328125e-05, -0.00083160400390625, -1.9073486328125e-06, -0.0001239776611328125, -4.38690185546875e-05, -0.00015270709991455078, -3.814697265625e-06, -0.0017757415771484375, 0.0, -0.0015726475976407528, -0.0001764287444530055, -4.00543212890625e-05, -0.0008983612060546875, -2.288818359375e-05, -0.0009441375732421875, -0.0005207061767578125, -0.0004248605982866138, 0.0, -0.021986333653330803, -1.9073486328125e-06, -0.00011444091796875, -0.0009517669677734375, -0.0025701522827148438, -0.00853427778929472, -0.001830458641052246], "choice_history": [97, 285, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "add_buff", "<EOS>", 346, 69, 290, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template54", "hole0": "Frozen"}], "_type": "Template77", "hole1": "add_buff", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "FrostNova", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 3, "hole0": "Frost Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -0.1960063178215634, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Frozen()))\n"}, {"score_history": [-3.0517578125e-05, -0.0005016326904296875, -1.1920928244535389e-07, -2.503383075236343e-05, -2.0265558760002023e-06, -2.384144681855105e-05, -5.7220458984375e-05, -2.0265558760002023e-06, -7.62939453125e-06, -0.0004520416259765625, -0.000659942626953125, -1.1920922133867862e-06, -0.00012040138244628906, -4.0531158447265625e-06, 0.0, -0.00036971812369301915, -1.9073486328125e-06, -0.000118255615234375, -5.7220458984375e-05, -5.7220458984375e-06, 0.0, -0.0001817941665649414, 0.0, -3.814697265625e-05, -5.14984130859375e-05, -1.0490381100680679e-05, -4.9948692321777344e-05, -0.08286380767822266, -5.340576171875e-05, -5.7220458984375e-06, -1.9073486328125e-05, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -1.33514404296875e-05, -6.67572021484375e-05, -1.728534698486328e-05, 0.0, -1.4066696166992188e-05, 0.0, -2.3484230041503906e-05, -8.344646857949556e-07, -0.0003070831298828125, -0.000370025634765625, -0.00031280517578125, -0.0001468658447265625, -0.005965113639831543, 0.0, -2.87874698638916, -0.056624412536621094, -0.0001068115234375, -1.52587890625e-05, -8.96453857421875e-05, -3.814697265625e-06, -0.003435492515563965, -4.00543212890625e-05, -0.0004596710205078125, -1.9073486328125e-05, -0.0001621246337890625, -0.00409698486328125, -0.001369476318359375, -2.86102294921875e-05, -3.62396240234375e-05, -5.53131103515625e-05, -8.392333984375e-05, -4.8041343688964844e-05, -1.9073486328125e-06, -0.025897979736328125, 0.0, -0.00018537015421316028, -1.9311904907226562e-05, -1.52587890625e-05, -0.0004215240478515625, -9.5367431640625e-06, -0.000453948974609375, -0.0004291534423828125, -0.00048077048268169165, 0.0, -0.019442277029156685, -1.9073486328125e-06, -8.392333984375e-05, -0.0009775161743164062, -0.0019664764404296875, -0.007573802024126053, -0.0013837814331054688], "choice_history": [97, 285, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "add_buff", "<EOS>", 346, 69, 290, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template54", "hole0": "Frozen"}], "_type": "Template77", "hole1": "add_buff", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "hole3": "use", "hole0": "FrostNova", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 3, "hole0": "Frost Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -3.097773755211499, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.add_buff(Buff(Frozen()))\n"}, {"score_history": [-3.0517578125e-05, -0.0005016326904296875, -1.1920928244535389e-07, -2.503383075236343e-05, -2.0265558760002023e-06, -2.384144681855105e-05, -5.7220458984375e-05, -2.0265558760002023e-06, -7.62939453125e-06, -0.0004520416259765625, -0.000659942626953125, -1.1920922133867862e-06, -0.00012040138244628906, -4.0531158447265625e-06, 0.0, -0.00036971812369301915, -1.9073486328125e-06, -0.000118255615234375, -5.7220458984375e-05, -5.7220458984375e-06, 0.0, -0.0001817941665649414, 0.0, -3.814697265625e-05, -5.14984130859375e-05, -1.0490381100680679e-05, -4.9948692321777344e-05, -2.895979881286621, -6.67572021484375e-05, -9.5367431640625e-06, -2.86102294921875e-05, -0.0001316070556640625, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -5.924701690673828e-05, -2.6941299438476562e-05, 0.0, -1.800060272216797e-05, 0.0, -2.3484230041503906e-05, -9.536738616588991e-07, -0.0038661956787109375, -9.5367431640625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.033517010509967804, -1.1920928244535389e-07, -0.0015010833740234375, -4.57763671875e-05, -1.33514404296875e-05, -0.000118255615234375, -6.4849853515625e-05, 0.0, -0.0003432035446166992, -1.1444091796875e-05, -0.0008697509765625, -3.814697265625e-06, -9.5367431640625e-05, -0.0016918182373046875, -0.00067138671875, -3.4332275390625e-05, -2.47955322265625e-05, -5.53131103515625e-05, -2.288818359375e-05, -3.1113624572753906e-05, -1.9073486328125e-06, -0.02901744842529297, 0.0, -0.0001270770444534719, -1.728534698486328e-05, -6.29425048828125e-05, -4.9591064453125e-05, -0.0002689361572265625, -3.24249267578125e-05, -0.009855269454419613, 0.0, -0.11755001544952393, -4.971027374267578e-05, -9.34600830078125e-05, -9.1552734375e-05, -1.9073486328125e-06, -0.2066516876220703, -1.9073486328125e-06, -3.0517578125e-05, -3.4332275390625e-05, -2.1219253540039062e-05, -1.9073486328125e-06, -0.008465051651000977, -7.62939453125e-06, -0.022104382514953613, -5.841255187988281e-06, -0.0072650909423828125, -7.62939453125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -0.00019359588623046875, 0.0, -0.00750732421875, -1.9073486328125e-06, -0.009166955947875977, -4.768370445162873e-07, -0.000213623046875, -0.04282379150390625, -1.1444091796875e-05, -0.0008487701416015625, -0.0002460479736328125, -0.020590178668498993, 0.0, -0.941346287727356, -1.9073486328125e-06, -0.0001049041748046875, -0.02052593231201172, -0.0020847320556640625, -0.010207349434494972, -0.00032067298889160156], "choice_history": [97, 285, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "extend", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 21, 174, "targets", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "add_buff", "<EOS>", 346, 69, 290, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Template77", "hole1": "extend", "hole0": {"_type": "Name", "id": "targets"}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template54", "hole0": "Frozen"}], "_type": "Template77", "hole1": "add_buff", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Name", "id": "targets"}}], "hole3": "use", "hole0": "FrostNova", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 3, "hole0": "Frost Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.400264484933459, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.add_buff(Buff(Frozen()))\n"}, {"score_history": [-3.0517578125e-05, -0.0005016326904296875, -1.1920928244535389e-07, -2.503383075236343e-05, -2.0265558760002023e-06, -2.384144681855105e-05, -5.7220458984375e-05, -2.0265558760002023e-06, -7.62939453125e-06, -0.0004520416259765625, -0.000659942626953125, -1.1920922133867862e-06, -0.00012040138244628906, -4.0531158447265625e-06, 0.0, -0.00036971812369301915, -1.9073486328125e-06, -0.000118255615234375, -5.7220458984375e-05, -5.7220458984375e-06, 0.0, -0.0001817941665649414, 0.0, -3.814697265625e-05, -5.14984130859375e-05, -1.0490381100680679e-05, -4.9948692321777344e-05, -2.895979881286621, -6.67572021484375e-05, -9.5367431640625e-06, -2.86102294921875e-05, -0.0001316070556640625, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -5.924701690673828e-05, -2.6941299438476562e-05, 0.0, -1.800060272216797e-05, 0.0, -2.3484230041503906e-05, -9.536738616588991e-07, -0.0038661956787109375, -9.5367431640625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.033517010509967804, -1.1920928244535389e-07, -0.0015010833740234375, -4.57763671875e-05, -1.33514404296875e-05, -0.000118255615234375, -6.4849853515625e-05, 0.0, -0.0003432035446166992, -1.1444091796875e-05, -0.0008697509765625, -3.814697265625e-06, -9.5367431640625e-05, -0.0016918182373046875, -0.00067138671875, -3.4332275390625e-05, -2.47955322265625e-05, -5.53131103515625e-05, -2.288818359375e-05, -3.1113624572753906e-05, -1.9073486328125e-06, -0.02901744842529297, 0.0, -0.0001270770444534719, -1.728534698486328e-05, -6.29425048828125e-05, -4.9591064453125e-05, -0.0002689361572265625, -3.24249267578125e-05, -0.009855269454419613, 0.0, -0.11755001544952393, -4.971027374267578e-05, -9.34600830078125e-05, -9.1552734375e-05, -1.9073486328125e-06, -0.2066516876220703, -1.9073486328125e-06, -3.0517578125e-05, -3.4332275390625e-05, -2.1219253540039062e-05, -1.9073486328125e-06, -0.008465051651000977, -7.62939453125e-06, -0.022104382514953613, -5.841255187988281e-06, -0.0072650909423828125, -7.62939453125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -0.00019359588623046875, 0.0, -0.00750732421875, -1.9073486328125e-06, -0.009166955947875977, -4.768370445162873e-07, -0.000213623046875, -0.04282379150390625, -1.1444091796875e-05, -0.0008487701416015625, -0.0002460479736328125, -0.020590178668498993, 0.0, -0.9638034105300903, 0.0, -0.000118255615234375, -0.025911331176757812, 0.0, -0.7439240217208862, 0.0], "choice_history": [97, 285, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "extend", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 21, 174, "targets", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "die", "<EOS>", 346, 50, 174, "minion", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Template77", "hole1": "extend", "hole0": {"_type": "Name", "id": "targets"}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Name", "id": "minion"}], "_type": "Template77", "hole1": "die", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Name", "id": "targets"}}], "hole3": "use", "hole0": "FrostNova", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 3, "hole0": "Frost Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.159429717934572, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.die(minion)\n"}, {"score_history": [-3.0517578125e-05, -0.0005016326904296875, -1.1920928244535389e-07, -2.503383075236343e-05, -2.0265558760002023e-06, -2.384144681855105e-05, -5.7220458984375e-05, -2.0265558760002023e-06, -7.62939453125e-06, -0.0004520416259765625, -0.000659942626953125, -1.1920922133867862e-06, -0.00012040138244628906, -4.0531158447265625e-06, 0.0, -0.00036971812369301915, -1.9073486328125e-06, -0.000118255615234375, -5.7220458984375e-05, -5.7220458984375e-06, 0.0, -0.0001817941665649414, 0.0, -3.814697265625e-05, -5.14984130859375e-05, -1.0490381100680679e-05, -4.9948692321777344e-05, -2.895979881286621, -6.67572021484375e-05, -9.5367431640625e-06, -2.86102294921875e-05, -0.0001316070556640625, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -5.924701690673828e-05, -2.6941299438476562e-05, 0.0, -1.800060272216797e-05, 0.0, -2.3484230041503906e-05, -9.536738616588991e-07, -0.0038661956787109375, -9.5367431640625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.033517010509967804, -1.1920928244535389e-07, -0.0015010833740234375, -4.57763671875e-05, -1.33514404296875e-05, -0.000118255615234375, -6.4849853515625e-05, 0.0, -0.0003432035446166992, -1.1444091796875e-05, -0.0008697509765625, -3.814697265625e-06, -9.5367431640625e-05, -0.0016918182373046875, -0.00067138671875, -3.4332275390625e-05, -2.47955322265625e-05, -5.53131103515625e-05, -2.288818359375e-05, -3.1113624572753906e-05, -1.9073486328125e-06, -0.02901744842529297, 0.0, -0.0001270770444534719, -1.728534698486328e-05, -6.29425048828125e-05, -4.9591064453125e-05, -0.0002689361572265625, -3.24249267578125e-05, -0.009855269454419613, 0.0, -0.11755001544952393, -4.971027374267578e-05, -9.34600830078125e-05, -9.1552734375e-05, -1.9073486328125e-06, -0.2066516876220703, -1.9073486328125e-06, -3.0517578125e-05, -3.4332275390625e-05, -2.1219253540039062e-05, -1.9073486328125e-06, -0.008465051651000977, -7.62939453125e-06, -0.022104382514953613, -5.841255187988281e-06, -0.0072650909423828125, -7.62939453125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -0.00019359588623046875, 0.0, -0.00750732421875, -1.9073486328125e-06, -0.009166955947875977, -4.768370445162873e-07, -0.000213623046875, -0.04282379150390625, -1.1444091796875e-05, -0.0008487701416015625, -0.0002460479736328125, -0.020590178668498993, 0.0, -0.9638034105300903, 0.0, -0.000118255615234375, -0.025911331176757812, 0.0, -0.8770426511764526, -2.3841855067985307e-07], "choice_history": [97, 285, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "extend", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 21, 174, "targets", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Template77", "hole1": "extend", "hole0": {"_type": "Name", "id": "targets"}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "die", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Name", "id": "targets"}}], "hole3": "use", "hole0": "FrostNova", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 3, "hole0": "Frost Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.292548585808689, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.die(self)\n"}, {"score_history": [-3.0517578125e-05, -0.0005016326904296875, -1.1920928244535389e-07, -2.503383075236343e-05, -2.0265558760002023e-06, -2.384144681855105e-05, -5.7220458984375e-05, -2.0265558760002023e-06, -7.62939453125e-06, -0.0004520416259765625, -0.000659942626953125, -1.1920922133867862e-06, -0.00012040138244628906, -4.0531158447265625e-06, 0.0, -0.00036971812369301915, -1.9073486328125e-06, -0.000118255615234375, -5.7220458984375e-05, -5.7220458984375e-06, 0.0, -0.0001817941665649414, 0.0, -3.814697265625e-05, -5.14984130859375e-05, -1.0490381100680679e-05, -4.9948692321777344e-05, -0.08286380767822266, -5.340576171875e-05, -5.7220458984375e-06, -1.9073486328125e-05, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -1.33514404296875e-05, -6.67572021484375e-05, -1.728534698486328e-05, 0.0, -1.4066696166992188e-05, 0.0, -2.3484230041503906e-05, -8.344646857949556e-07, -0.0003070831298828125, -0.000370025634765625, -0.00031280517578125, -0.0001468658447265625, -0.005965113639831543, 0.0, -0.059456825256347656, -1.9073486328125e-05, -0.00083160400390625, -1.9073486328125e-06, -0.0001239776611328125, -4.38690185546875e-05, -0.00015270709991455078, -3.814697265625e-06, -0.0017757415771484375, 0.0, -0.0015726475976407528, -0.0001764287444530055, -4.00543212890625e-05, -0.0008983612060546875, -2.288818359375e-05, -0.0009441375732421875, -0.0005207061767578125, -0.0004248605982866138, 0.0, -0.021986333653330803, -1.9073486328125e-06, -0.00011444091796875, -0.0009517669677734375, -0.0025701522827148438, -5.960138320922852, -0.020963067188858986, 0.0], "choice_history": [97, 285, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "add_buff", "<EOS>", 346, 69, 290, "Cant", "Attack", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template54", "hole0": "CantAttack"}], "_type": "Template77", "hole1": "add_buff", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "FrostNova", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 3, "hole0": "Frost Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.166742969502927, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(CantAttack()))\n"}, {"score_history": [-3.0517578125e-05, -0.0005016326904296875, -1.1920928244535389e-07, -2.503383075236343e-05, -2.0265558760002023e-06, -2.384144681855105e-05, -5.7220458984375e-05, -2.0265558760002023e-06, -7.62939453125e-06, -0.0004520416259765625, -0.000659942626953125, -1.1920922133867862e-06, -0.00012040138244628906, -4.0531158447265625e-06, 0.0, -0.00036971812369301915, -1.9073486328125e-06, -0.000118255615234375, -5.7220458984375e-05, -5.7220458984375e-06, 0.0, -0.0001817941665649414, 0.0, -3.814697265625e-05, -5.14984130859375e-05, -1.0490381100680679e-05, -4.9948692321777344e-05, -2.895979881286621, -6.67572021484375e-05, -9.5367431640625e-06, -2.86102294921875e-05, -0.0001316070556640625, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -5.924701690673828e-05, -2.6941299438476562e-05, 0.0, -1.800060272216797e-05, 0.0, -2.3484230041503906e-05, -9.536738616588991e-07, -0.0038661956787109375, -9.5367431640625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.033517010509967804, -1.1920928244535389e-07, -0.0015010833740234375, -4.57763671875e-05, -1.33514404296875e-05, -0.000118255615234375, -6.4849853515625e-05, 0.0, -0.0003432035446166992, -1.1444091796875e-05, -0.0008697509765625, -3.814697265625e-06, -9.5367431640625e-05, -0.0016918182373046875, -0.00067138671875, -3.4332275390625e-05, -2.47955322265625e-05, -5.53131103515625e-05, -2.288818359375e-05, -3.1113624572753906e-05, -1.9073486328125e-06, -0.02901744842529297, 0.0, -0.0001270770444534719, -1.728534698486328e-05, -6.29425048828125e-05, -4.9591064453125e-05, -0.0002689361572265625, -3.24249267578125e-05, -0.009855269454419613, 0.0, -0.11755001544952393, -4.971027374267578e-05, -9.34600830078125e-05, -9.1552734375e-05, -1.9073486328125e-06, -1.6798810958862305, -3.814697265625e-06, -0.22420525550842285, 0.0, -0.23189926147460938, 0.0, -0.07277488708496094, -2.86102294921875e-05, -9.5367431640625e-06, -1.52587890625e-05, -0.00029861927032470703, 0.0, -0.0038623809814453125, 0.0, -0.0030976533889770508, -9.655952453613281e-06, -0.0001659393310546875, -0.012378692626953125, -1.1444091796875e-05, -0.000537872314453125, -0.00038909912109375, -0.016939986497163773, 0.0, -0.9211790561676025, -1.9073486328125e-06, -0.0001277923583984375, -0.019952774047851562, -0.0023593902587890625, -0.011460955254733562, -0.00038361549377441406], "choice_history": [97, 285, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "extend", "<EOS>", 346, 42, 143, 21, 174, "game", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 21, 174, "targets", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "add_buff", "<EOS>", 346, 69, 290, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"hole2": [{"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "minions"}], "_type": "Template77", "hole1": "extend", "hole0": {"_type": "Name", "id": "targets"}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template54", "hole0": "Frozen"}], "_type": "Template77", "hole1": "add_buff", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Name", "id": "targets"}}], "hole3": "use", "hole0": "FrostNova", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 3, "hole0": "Frost Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.301342944740313, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.minions)\n        for minion in targets:\n            minion.add_buff(Buff(Frozen()))\n"}, {"score_history": [-3.0517578125e-05, -0.0005016326904296875, -1.1920928244535389e-07, -2.503383075236343e-05, -2.0265558760002023e-06, -2.384144681855105e-05, -5.7220458984375e-05, -2.0265558760002023e-06, -7.62939453125e-06, -0.0004520416259765625, -0.000659942626953125, -1.1920922133867862e-06, -0.00012040138244628906, -4.0531158447265625e-06, 0.0, -0.00036971812369301915, -1.9073486328125e-06, -0.000118255615234375, -5.7220458984375e-05, -5.7220458984375e-06, 0.0, -0.0001817941665649414, 0.0, -3.814697265625e-05, -5.14984130859375e-05, -1.0490381100680679e-05, -4.9948692321777344e-05, -0.08286380767822266, -5.340576171875e-05, -5.7220458984375e-06, -1.9073486328125e-05, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -1.33514404296875e-05, -6.67572021484375e-05, -1.728534698486328e-05, 0.0, -1.4066696166992188e-05, 0.0, -2.3484230041503906e-05, -8.344646857949556e-07, -0.0003070831298828125, -0.000370025634765625, -0.00031280517578125, -0.0001468658447265625, -0.005965113639831543, 0.0, -0.059456825256347656, -1.9073486328125e-05, -0.00083160400390625, -1.9073486328125e-06, -0.0001239776611328125, -4.38690185546875e-05, -0.00015270709991455078, -3.814697265625e-06, -0.0017757415771484375, 0.0, -0.0015726475976407528, -0.0001764287444530055, -4.00543212890625e-05, -0.0008983612060546875, -2.288818359375e-05, -0.0009441375732421875, -0.0005207061767578125, -0.0004248605982866138, 0.0, -0.021986333653330803, -1.9073486328125e-06, -0.00011444091796875, -0.0009517669677734375, -0.0025701522827148438, -6.053436279296875, -0.12057816982269287], "choice_history": [97, 285, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "add_buff", "<EOS>", 346, 69, 290, "Aura", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template54", "hole0": "Aura"}], "_type": "Template77", "hole1": "add_buff", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "FrostNova", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 3, "hole0": "Frost Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.359656030510784, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Aura()))\n"}, {"score_history": [-3.0517578125e-05, -0.0005016326904296875, -1.1920928244535389e-07, -2.503383075236343e-05, -2.0265558760002023e-06, -2.384144681855105e-05, -5.7220458984375e-05, -2.0265558760002023e-06, -7.62939453125e-06, -0.0004520416259765625, -0.000659942626953125, -1.1920922133867862e-06, -0.00012040138244628906, -4.0531158447265625e-06, 0.0, -0.00036971812369301915, -1.9073486328125e-06, -0.000118255615234375, -5.7220458984375e-05, -5.7220458984375e-06, 0.0, -0.0001817941665649414, 0.0, -3.814697265625e-05, -5.14984130859375e-05, -1.0490381100680679e-05, -4.9948692321777344e-05, -0.08286380767822266, -5.340576171875e-05, -5.7220458984375e-06, -1.9073486328125e-05, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -1.33514404296875e-05, -6.67572021484375e-05, -1.728534698486328e-05, 0.0, -1.4066696166992188e-05, 0.0, -2.3484230041503906e-05, -8.344646857949556e-07, -0.0003070831298828125, -0.000370025634765625, -0.00031280517578125, -0.0001468658447265625, -0.005965113639831543, 0.0, -0.059456825256347656, -1.9073486328125e-05, -0.00083160400390625, -1.9073486328125e-06, -0.0001239776611328125, -4.38690185546875e-05, -0.00015270709991455078, -3.814697265625e-06, -0.0017757415771484375, 0.0, -0.0015726475976407528, -0.0001764287444530055, -4.00543212890625e-05, -0.0008983612060546875, -2.288818359375e-05, -0.0009441375732421875, -0.0005207061767578125, -0.0004248605982866138, 0.0, -5.4734086990356445, 0.0, -4.76837158203125e-05, -0.02659893035888672, -7.62939453125e-06, -0.8495030403137207, 0.0], "choice_history": [97, 285, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "die", "<EOS>", 346, 50, 174, "minion", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Name", "id": "minion"}], "_type": "Template77", "hole1": "die", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "FrostNova", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 3, "hole0": "Frost Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.509582963039399, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.die(minion)\n"}, {"score_history": [-3.0517578125e-05, -0.0005016326904296875, -1.1920928244535389e-07, -2.503383075236343e-05, -2.0265558760002023e-06, -2.384144681855105e-05, -5.7220458984375e-05, -2.0265558760002023e-06, -7.62939453125e-06, -0.0004520416259765625, -0.000659942626953125, -1.1920922133867862e-06, -0.00012040138244628906, -4.0531158447265625e-06, 0.0, -0.00036971812369301915, -1.9073486328125e-06, -0.000118255615234375, -5.7220458984375e-05, -5.7220458984375e-06, 0.0, -0.0001817941665649414, 0.0, -3.814697265625e-05, -5.14984130859375e-05, -1.0490381100680679e-05, -4.9948692321777344e-05, -0.08286380767822266, -5.340576171875e-05, -5.7220458984375e-06, -1.9073486328125e-05, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -1.33514404296875e-05, -6.67572021484375e-05, -1.728534698486328e-05, 0.0, -1.4066696166992188e-05, 0.0, -2.3484230041503906e-05, -8.344646857949556e-07, -0.0003070831298828125, -0.000370025634765625, -0.00031280517578125, -0.0001468658447265625, -6.478372097015381, 0.0, -0.003772735595703125, -1.9073486328125e-05, -0.024438858032226562, 0.0, -5.7220458984375e-05, -1.1444091796875e-05, -5.91278076171875e-05, -3.814697265625e-06, -0.00153350830078125, 0.0, -0.0042475806549191475, -0.000123619640362449, -5.7220458984375e-05, -0.0010318756103515625, -2.288818359375e-05, -0.0011730194091796875, -0.0005435943603515625, -0.0004830347024835646, 0.0, -0.022540055215358734, -1.9073486328125e-06, -0.0001220703125, -0.0009832382202148438, -0.0029134750366210938, -0.008892097510397434, -0.0020346641540527344], "choice_history": [97, 285, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "player", "<EOS>", 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "add_buff", "<EOS>", 346, 69, 290, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "player"}, "body": [{"hole2": [{"_type": "Template54", "hole0": "Frozen"}], "_type": "Template77", "hole1": "add_buff", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "FrostNova", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 3, "hole0": "Frost Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.640480482334503, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for player in game.other_player.minions:\n            minion.add_buff(Buff(Frozen()))\n"}, {"score_history": [-3.0517578125e-05, -0.0005016326904296875, -1.1920928244535389e-07, -2.503383075236343e-05, -2.0265558760002023e-06, -2.384144681855105e-05, -5.7220458984375e-05, -2.0265558760002023e-06, -7.62939453125e-06, -0.0004520416259765625, -0.000659942626953125, -1.1920922133867862e-06, -0.00012040138244628906, -4.0531158447265625e-06, 0.0, -0.00036971812369301915, -1.9073486328125e-06, -0.000118255615234375, -5.7220458984375e-05, -5.7220458984375e-06, 0.0, -0.0001817941665649414, 0.0, -3.814697265625e-05, -5.14984130859375e-05, -1.0490381100680679e-05, -4.9948692321777344e-05, -0.08286380767822266, -5.340576171875e-05, -5.7220458984375e-06, -1.9073486328125e-05, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -1.33514404296875e-05, -6.67572021484375e-05, -1.728534698486328e-05, 0.0, -1.4066696166992188e-05, 0.0, -2.3484230041503906e-05, -8.344646857949556e-07, -0.0003070831298828125, -0.000370025634765625, -0.00031280517578125, -0.0001468658447265625, -0.005965113639831543, 0.0, -0.059456825256347656, -1.9073486328125e-05, -0.00083160400390625, -1.9073486328125e-06, -0.0001239776611328125, -4.38690185546875e-05, -0.00015270709991455078, -3.814697265625e-06, -0.0017757415771484375, 0.0, -0.0015726475976407528, -0.0001764287444530055, -4.00543212890625e-05, -0.0008983612060546875, -2.288818359375e-05, -0.0009441375732421875, -0.0005207061767578125, -0.0004248605982866138, 0.0, -6.150154113769531, -2.1457672119140625e-06, -7.2479248046875e-05, -0.0049037933349609375, -2.86102294921875e-05, -0.4615294635295868, 0.0], "choice_history": [97, 285, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "append", "<EOS>", 346, 50, 174, "minion", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Name", "id": "minion"}], "_type": "Template77", "hole1": "append", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "FrostNova", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 3, "hole0": "Frost Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.776707586099626, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.append(minion)\n"}, {"score_history": [-3.0517578125e-05, -0.0005016326904296875, -1.1920928244535389e-07, -2.503383075236343e-05, -2.0265558760002023e-06, -2.384144681855105e-05, -5.7220458984375e-05, -2.0265558760002023e-06, -7.62939453125e-06, -0.0004520416259765625, -0.000659942626953125, -1.1920922133867862e-06, -0.00012040138244628906, -4.0531158447265625e-06, 0.0, -0.00036971812369301915, -1.9073486328125e-06, -0.000118255615234375, -5.7220458984375e-05, -5.7220458984375e-06, 0.0, -0.0001817941665649414, 0.0, -3.814697265625e-05, -5.14984130859375e-05, -1.0490381100680679e-05, -4.9948692321777344e-05, -0.08286380767822266, -5.340576171875e-05, -5.7220458984375e-06, -1.9073486328125e-05, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -1.33514404296875e-05, -6.67572021484375e-05, -1.728534698486328e-05, 0.0, -1.4066696166992188e-05, 0.0, -2.3484230041503906e-05, -8.344646857949556e-07, -0.0003070831298828125, -0.000370025634765625, -0.00031280517578125, -0.0001468658447265625, -0.005965113639831543, 0.0, -0.059456825256347656, -1.9073486328125e-05, -0.00083160400390625, -1.9073486328125e-06, -0.0001239776611328125, -4.38690185546875e-05, -0.00015270709991455078, -3.814697265625e-06, -0.0017757415771484375, 0.0, -0.0015726475976407528, -0.0001764287444530055, -4.00543212890625e-05, -0.0008983612060546875, -2.288818359375e-05, -0.0009441375732421875, -0.0005207061767578125, -0.0004248605982866138, 0.0, -6.563384532928467, -1.9073486328125e-06, -0.000446319580078125, -0.039676666259765625, -0.00656890869140625, -0.01611449383199215, -0.0021077394485473633], "choice_history": [97, 285, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "add_effect", "<EOS>", 346, 69, 290, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template54", "hole0": "Frozen"}], "_type": "Template77", "hole1": "add_effect", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "FrostNova", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 3, "hole0": "Frost Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.788317548309685, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_effect(Buff(Frozen()))\n"}, {"score_history": [-3.0517578125e-05, -0.0005016326904296875, -1.1920928244535389e-07, -2.503383075236343e-05, -2.0265558760002023e-06, -2.384144681855105e-05, -5.7220458984375e-05, -2.0265558760002023e-06, -7.62939453125e-06, -0.0004520416259765625, -0.000659942626953125, -1.1920922133867862e-06, -0.00012040138244628906, -4.0531158447265625e-06, 0.0, -0.00036971812369301915, -1.9073486328125e-06, -0.000118255615234375, -5.7220458984375e-05, -5.7220458984375e-06, 0.0, -0.0001817941665649414, 0.0, -3.814697265625e-05, -5.14984130859375e-05, -1.0490381100680679e-05, -4.9948692321777344e-05, -0.08286380767822266, -5.340576171875e-05, -5.7220458984375e-06, -1.9073486328125e-05, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -1.33514404296875e-05, -6.67572021484375e-05, -1.728534698486328e-05, 0.0, -1.4066696166992188e-05, 0.0, -2.3484230041503906e-05, -8.344646857949556e-07, -0.0003070831298828125, -0.000370025634765625, -0.00031280517578125, -0.0001468658447265625, -0.005965113639831543, 0.0, -0.059456825256347656, -1.9073486328125e-05, -0.00083160400390625, -1.9073486328125e-06, -0.0001239776611328125, -4.38690185546875e-05, -0.00015270709991455078, -3.814697265625e-06, -0.0017757415771484375, 0.0, -0.0015726475976407528, -0.0001764287444530055, -4.00543212890625e-05, -0.0008983612060546875, -2.288818359375e-05, -0.0009441375732421875, -0.0005207061767578125, -0.0004248605982866138, 0.0, -5.4734086990356445, 0.0, -4.76837158203125e-05, -0.02659893035888672, -7.62939453125e-06, -1.2053837776184082, -2.503394853192731e-06], "choice_history": [97, 285, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "die", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "FrostNova", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 3, "hole0": "Frost Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.86546620373894, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.die(self)\n"}, {"score_history": [-3.0517578125e-05, -0.0005016326904296875, -1.1920928244535389e-07, -2.503383075236343e-05, -2.0265558760002023e-06, -2.384144681855105e-05, -5.7220458984375e-05, -2.0265558760002023e-06, -7.62939453125e-06, -0.0004520416259765625, -0.000659942626953125, -1.1920922133867862e-06, -0.00012040138244628906, -4.0531158447265625e-06, 0.0, -0.00036971812369301915, -1.9073486328125e-06, -0.000118255615234375, -5.7220458984375e-05, -5.7220458984375e-06, 0.0, -0.0001817941665649414, 0.0, -3.814697265625e-05, -5.14984130859375e-05, -1.0490381100680679e-05, -4.9948692321777344e-05, -3.952530860900879, -0.0001316070556640625, -5.7220458984375e-06, -2.09808349609375e-05, -0.0001220703125, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -3.62396240234375e-05, -1.919269561767578e-05, 0.0, -1.7642974853515625e-05, 0.0, -2.3484230041503906e-05, -8.344646857949556e-07, -0.4107322692871094, -5.7220458984375e-06, -2.09808349609375e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.01989920251071453, -2.0265579223632812e-06, -0.0010576248168945312, -4.38690185546875e-05, -1.33514404296875e-05, -0.0001049041748046875, -6.4849853515625e-05, 0.0, -0.0004990100860595703, -1.33514404296875e-05, -0.0009479522705078125, -3.814697265625e-06, -9.5367431640625e-05, -0.0016956329345703125, -0.000606536865234375, -3.62396240234375e-05, -2.6702880859375e-05, -5.340576171875e-05, -2.288818359375e-05, -2.7298927307128906e-05, -1.9073486328125e-06, -0.02900409698486328, 0.0, -0.00012695783516392112, -1.537799835205078e-05, -0.0002002716064453125, -3.24249267578125e-05, -0.00038909912109375, -3.4332275390625e-05, -0.024556398391723633, 0.0, -0.154876708984375, -4.208087921142578e-05, -0.0001010894775390625, -7.62939453125e-05, -1.9073486328125e-06, -0.25533485412597656, -1.9073486328125e-06, -2.86102294921875e-05, -3.4332275390625e-05, -2.5033950805664062e-05, -1.9073486328125e-06, -0.007505655288696289, -7.62939453125e-06, -0.02099907398223877, -5.841255187988281e-06, -0.07971858978271484, -0.0001049041748046875, -1.1444091796875e-05, -2.288818359375e-05, -0.005188941955566406, 0.0, -0.0013599395751953125, -1.9073486328125e-06, -0.004202842712402344, -2.0265579223632812e-06, -0.0003223419189453125, -0.0715780258178711, -1.1444091796875e-05, -0.00063323974609375, -0.0003376007080078125, -0.02592550590634346, 0.0, -0.9211535453796387, -1.9073486328125e-06, -0.000118255615234375, -0.01765918731689453, -0.002536773681640625, -0.010906022973358631, -0.00030732154846191406, -0.07386970520019531, -0.025699615478515625, -0.0034761428833007812, -1.9073486328125e-06, -0.00688934326171875, -9.5367431640625e-06, -0.3023040294647217, 0.0, -0.008480191230773926, -1.1444091796875e-05, -0.08054828643798828, -0.0001068115234375, -0.4125232696533203, -0.000270843505859375, -0.00623321533203125, -1.9073486328125e-06, -0.0015152692794799805, -2.110004425048828e-05, -7.748603820800781e-06, 0.0, -6.234645115910098e-05, -1.1920928244535389e-07, -3.4928300010506064e-05, -3.2186455882765586e-06], "choice_history": [97, 285, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 363, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "extend", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 21, 174, "targets", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "add_buff", "<EOS>", 346, 69, 290, "Frozen", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>", 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Template77", "hole1": "extend", "hole0": {"_type": "Name", "id": "targets"}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template54", "hole0": "Frozen"}], "_type": "Template77", "hole1": "add_buff", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Name", "id": "targets"}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}, {"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}], "hole3": "use", "hole0": "FrostNova", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 3, "hole0": "Frost Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.949281130077551, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.add_buff(Buff(Frozen()))\n        player.draw()\n        super().use(player, game)\n"}, {"score_history": [-3.0517578125e-05, -0.0005016326904296875, -1.1920928244535389e-07, -2.503383075236343e-05, -2.0265558760002023e-06, -2.384144681855105e-05, -5.7220458984375e-05, -2.0265558760002023e-06, -7.62939453125e-06, -0.0004520416259765625, -0.000659942626953125, -1.1920922133867862e-06, -0.00012040138244628906, -4.0531158447265625e-06, 0.0, -0.00036971812369301915, -1.9073486328125e-06, -0.000118255615234375, -5.7220458984375e-05, -5.7220458984375e-06, 0.0, -0.0001817941665649414, 0.0, -3.814697265625e-05, -5.14984130859375e-05, -1.0490381100680679e-05, -4.9948692321777344e-05, -9.594846725463867, -0.05094718933105469, -4.00543212890625e-05, -0.00042724609375, -6.67572021484375e-05, -5.7220458984375e-06, 0.0, -3.933906555175781e-06, -0.00011837482452392578, -2.5033950805664062e-05, 0.0, -1.2159347534179688e-05, 0.0, -2.3484230041503906e-05, -1.311301275563892e-06], "choice_history": [97, 285, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 358, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}], "hole3": "use", "hole0": "FrostNova", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 3, "hole0": "Frost Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -9.649290372801026, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n"}]}
{"index": 37, "beams": [{"score_history": [-3.24249267578125e-05, -0.000385284423828125, 0.0, -2.4795503122732043e-05, -2.622600959512056e-06, -8.344646857949556e-07, -1.4901155736879446e-05, -4.410734163684538e-06, -0.000110626220703125, -4.9591064453125e-05, -0.0013179779052734375, -4.00543212890625e-05, -1.9073486328125e-06, -1.03711727206246e-05, -3.814697265625e-06, -5.114077794132754e-05, -5.7220458984375e-06, -0.000347137451171875, -2.86102294921875e-05, -0.0006046295166015625, -3.576278118089249e-07, -4.172325134277344e-05, -0.0016976594924926758, -0.0007305145263671875, -2.86102294921875e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0014896392822265625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.0002117156982421875, 0.0, -0.0004405975341796875, -9.918212890625e-05, -3.814697265625e-06, -0.000386953295674175, -2.0265579223632812e-06, -0.073455810546875, -4.9591064453125e-05, -0.000164031982421875, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.002559661865234375, -3.933906555175781e-06, -9.1552734375e-05, -1.33514404296875e-05, -0.00022589309082832187, -5.924577999394387e-05, -0.00027751867310144007, 0.0, -3.933906555175781e-06, 0.0, -8.58306884765625e-05, -9.5367431640625e-06, -4.649161837733118e-06, -2.2649765014648438e-06, -0.0028285980224609375, -7.62939453125e-06, -4.00543212890625e-05, -0.0001621246337890625, -0.0001621246337890625, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -8.225440979003906e-06, 0.0, -9.655952453613281e-06, 0.0, -2.6941268515656702e-05, -1.1920928244535389e-07, -0.00095367431640625, -4.1961669921875e-05, -0.0003719329833984375, 0.0, -0.0023746490478515625, 0.0, -7.43865966796875e-05, -3.814697265625e-06, -2.1338462829589844e-05, -1.311301275563892e-06, -0.0002004950656555593, -1.1920928244535389e-07, -5.7220458984375e-05, -0.0020656585693359375, -5.91278076171875e-05, -0.00016809487715363503, -4.768360213347478e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0001504421088611707, -0.00047433358849957585, -0.00057220458984375, -0.0002288818359375, -0.0038299560546875, -0.0014438629150390625, -0.002013325458392501, -0.00014221383025869727], "choice_history": [97, 285, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Frost", " ", "Shock", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "FrostShock", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -0.10393128884270197, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score_history": [-3.24249267578125e-05, -0.000385284423828125, 0.0, -2.4795503122732043e-05, -2.622600959512056e-06, -8.344646857949556e-07, -1.4901155736879446e-05, -4.410734163684538e-06, -0.000110626220703125, -4.9591064453125e-05, -0.0013179779052734375, -4.00543212890625e-05, -1.9073486328125e-06, -1.03711727206246e-05, -3.814697265625e-06, -5.114077794132754e-05, -5.7220458984375e-06, -0.000347137451171875, -2.86102294921875e-05, -0.0006046295166015625, -3.576278118089249e-07, -4.172325134277344e-05, -0.0016976594924926758, -0.0007305145263671875, -2.86102294921875e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0014896392822265625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.0002117156982421875, 0.0, -0.0004405975341796875, -9.918212890625e-05, -3.814697265625e-06, -0.000386953295674175, -2.0265579223632812e-06, -3.1065216064453125, -0.001617431640625, -0.04173198342323303, 0.0, -0.00012028217315673828, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -3.4570680327306036e-06, -2.491474151611328e-05, -0.0735931396484375, -1.1444091796875e-05, -6.29425048828125e-05, -0.0001049041748046875, -9.34600830078125e-05, -5.7220458984375e-06, 0.0, -2.0265579223632812e-06, -7.62939453125e-06, -7.987022399902344e-06, 0.0, -7.987022399902344e-06, 0.0, -5.638498259941116e-05, -1.1920928244535389e-07, -0.0020904541015625, -4.1961669921875e-05, -0.000270843505859375, -3.814697265625e-06, -0.0080413818359375, 0.0, -0.0004006624221801758, -5.841255187988281e-06, -1.5854835510253906e-05, -1.311301275563892e-06, -0.00019430894462857395, 0.0, -6.67572021484375e-05, -0.0023937225341796875, -5.53131103515625e-05, -0.0001620200928300619, -4.172316494077677e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00016140936349984258, -0.0005540846614167094, -0.0009937286376953125, -0.0002765655517578125, -0.004082679748535156, -0.0011577606201171875, -0.002259135013446212, -0.0001312468375544995], "choice_history": [97, 285, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Frost", " ", "Shock", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 23, 179, "1", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "FrostShock", "_type": "Template5", "hole2": [{"hole3": [{"value": {"n": 1, "_type": "Num"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -3.255769410134512, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score_history": [-3.24249267578125e-05, -0.000385284423828125, 0.0, -2.4795503122732043e-05, -2.622600959512056e-06, -8.344646857949556e-07, -1.4901155736879446e-05, -4.410734163684538e-06, -0.000110626220703125, -4.9591064453125e-05, -0.0013179779052734375, -4.00543212890625e-05, -1.9073486328125e-06, -1.03711727206246e-05, -3.814697265625e-06, -5.114077794132754e-05, -5.7220458984375e-06, -0.000347137451171875, -2.86102294921875e-05, -0.0006046295166015625, -3.576278118089249e-07, -4.172325134277344e-05, -0.0016976594924926758, -0.0007305145263671875, -2.86102294921875e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0014896392822265625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.0002117156982421875, 0.0, -0.0004405975341796875, -9.918212890625e-05, -3.814697265625e-06, -0.000386953295674175, -2.0265579223632812e-06, -0.073455810546875, -4.9591064453125e-05, -0.000164031982421875, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.002559661865234375, -3.933906555175781e-06, -9.1552734375e-05, -1.33514404296875e-05, -0.00022589309082832187, -5.924577999394387e-05, -0.00027751867310144007, 0.0, -3.933906555175781e-06, 0.0, -8.58306884765625e-05, -9.5367431640625e-06, -4.649161837733118e-06, -2.2649765014648438e-06, -0.0028285980224609375, -7.62939453125e-06, -4.00543212890625e-05, -0.0001621246337890625, -0.0001621246337890625, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -8.225440979003906e-06, 0.0, -9.655952453613281e-06, 0.0, -2.6941268515656702e-05, -1.1920928244535389e-07, -0.00095367431640625, -4.1961669921875e-05, -0.0003719329833984375, 0.0, -0.0023746490478515625, 0.0, -7.43865966796875e-05, -3.814697265625e-06, -2.1338462829589844e-05, -1.311301275563892e-06, -0.0002004950656555593, -1.1920928244535389e-07, -5.7220458984375e-05, -0.0020656585693359375, -5.91278076171875e-05, -0.00016809487715363503, -4.768360213347478e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0001504421088611707, -0.00047433358849957585, -0.00057220458984375, -0.0002288818359375, -5.770805358886719, -7.62939453125e-06, -0.0019817352294921875, 0.0, -0.00048434731434099376, -3.576278118089249e-07, -0.004479633178561926, -2.288818359375e-05], "choice_history": [97, 285, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Frost", " ", "Shock", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "FrostShock", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.874283880399375, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score_history": [-3.24249267578125e-05, -0.000385284423828125, 0.0, -2.4795503122732043e-05, -2.622600959512056e-06, -8.344646857949556e-07, -1.4901155736879446e-05, -4.410734163684538e-06, -0.000110626220703125, -4.9591064453125e-05, -0.0013179779052734375, -4.00543212890625e-05, -1.9073486328125e-06, -1.03711727206246e-05, -3.814697265625e-06, -5.114077794132754e-05, -5.7220458984375e-06, -0.000347137451171875, -2.86102294921875e-05, -0.0006046295166015625, -3.576278118089249e-07, -4.172325134277344e-05, -0.0016976594924926758, -0.0007305145263671875, -2.86102294921875e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0014896392822265625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.0002117156982421875, 0.0, -0.0004405975341796875, -9.918212890625e-05, -3.814697265625e-06, -0.000386953295674175, -2.0265579223632812e-06, -0.073455810546875, -4.9591064453125e-05, -0.000164031982421875, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.002559661865234375, -3.933906555175781e-06, -9.1552734375e-05, -1.33514404296875e-05, -0.00022589309082832187, -5.924577999394387e-05, -0.00027751867310144007, 0.0, -3.933906555175781e-06, 0.0, -8.58306884765625e-05, -9.5367431640625e-06, -4.649161837733118e-06, -2.2649765014648438e-06, -0.0028285980224609375, -7.62939453125e-06, -4.00543212890625e-05, -0.0001621246337890625, -0.0001621246337890625, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -8.225440979003906e-06, 0.0, -9.655952453613281e-06, 0.0, -2.6941268515656702e-05, -1.1920928244535389e-07, -0.00095367431640625, -4.1961669921875e-05, -0.0003719329833984375, 0.0, -6.050241470336914, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.05771458148956299, 0.0, -0.10019314289093018, 0.0, -0.002745640929788351, -3.576278118089249e-07, -0.00032087479485198855, -1.1920928244535389e-07, -2.09808349609375e-05, -0.001430511474609375, -0.0002460479736328125, -0.00019699335098266602, -4.0531076592742465e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00010609626770019531, -0.00043833203380927444, -0.001033782958984375, -0.000179290771484375, -0.0031757354736328125, -0.0021457672119140625, -0.0016727445181459188, -0.00017583047156222165], "choice_history": [97, 285, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Frost", " ", "Shock", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "FrostShock", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.31210269652432, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score_history": [-3.24249267578125e-05, -0.000385284423828125, 0.0, -2.4795503122732043e-05, -2.622600959512056e-06, -8.344646857949556e-07, -1.4901155736879446e-05, -4.410734163684538e-06, -0.000110626220703125, -4.9591064453125e-05, -0.0013179779052734375, -4.00543212890625e-05, -1.9073486328125e-06, -1.03711727206246e-05, -3.814697265625e-06, -5.114077794132754e-05, -5.7220458984375e-06, -0.000347137451171875, -2.86102294921875e-05, -0.0006046295166015625, -3.576278118089249e-07, -4.172325134277344e-05, -0.0016976594924926758, -0.0007305145263671875, -2.86102294921875e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0014896392822265625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.0002117156982421875, 0.0, -0.0004405975341796875, -9.918212890625e-05, -3.814697265625e-06, -0.000386953295674175, -2.0265579223632812e-06, -5.016434669494629, -1.2577238082885742, -0.0189015194773674, -7.522005762439221e-05, -1.33514404296875e-05, -0.0020751953125, -1.9073486328125e-06, -0.010046016424894333, -1.9073486328125e-06, -0.0115433931350708, -0.0002038429956883192, -1.1920928244535389e-07, -0.013059616088867188, -0.000194549560546875, -1.9073486328125e-06, -4.5895572839071974e-05, -1.9073486328125e-06, -3.4332275390625e-05, -2.47955322265625e-05, -0.019719600677490234, -0.0001035928726196289, -1.9073486328125e-06, -0.00022125244140625, -1.9073486328125e-06, -0.006640911102294922, -5.7220458984375e-06, -0.0005130767822265625, -2.6702880859375e-05, -0.0004024505615234375, -5.543231964111328e-05, -1.1920928244535389e-07, -0.0026477575302124023, 0.0, -1.9073486328125e-06, 0.0, -0.00284576416015625, -5.91278076171875e-05, -4.410743713378906e-06, -2.1457672119140625e-06, -0.008024215698242188, -2.09808349609375e-05, -4.9591064453125e-05, -0.000102996826171875, -0.00011444091796875, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.987022399902344e-06, 0.0, -6.079673767089844e-06, -1.1920928244535389e-07, -6.198773917276412e-05, -1.1920928244535389e-07, -0.0011730194091796875, -4.38690185546875e-05, -0.0001201629638671875, -1.9073486328125e-06, -0.03646659851074219, 0.0, -0.0004044771194458008, -5.841255187988281e-06, -1.5974044799804688e-05, -9.536738616588991e-07, -0.00019717015675269067, 0.0, -5.91278076171875e-05, -0.00213623046875, -5.53131103515625e-05, -0.0001646042801439762, -4.291525328881107e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00016331671213265508, -0.0005638598231598735, -0.0004405975341796875, -0.0002231597900390625, -0.00391387939453125, -0.0014400482177734375, -0.0020778176840394735, -0.00014340583584271371], "choice_history": [97, 285, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Frost", " ", "Shock", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 29, 266, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "FrostShock", "_type": "Template5", "hole2": [{"hole3": [{"value": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole2": "CharacterSelector", "_type": "Template43", "hole1": [{"n": 1, "_type": "Num"}], "hole0": "Damage"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.430232790413157, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score_history": [-3.24249267578125e-05, -0.000385284423828125, 0.0, -2.4795503122732043e-05, -2.622600959512056e-06, -8.344646857949556e-07, -1.4901155736879446e-05, -4.410734163684538e-06, -0.000110626220703125, -4.9591064453125e-05, -0.0013179779052734375, -4.00543212890625e-05, -1.9073486328125e-06, -1.03711727206246e-05, -3.814697265625e-06, -5.114077794132754e-05, -5.7220458984375e-06, -0.000347137451171875, -2.86102294921875e-05, -0.0006046295166015625, -3.576278118089249e-07, -4.172325134277344e-05, -6.38148307800293, -0.000751495361328125, -5.91278076171875e-05, -2.47955322265625e-05, -1.7881393432617188e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.001316070556640625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -0.000225067138671875, 0.0, -0.0004291534423828125, -0.000102996826171875, -3.814697265625e-06, -0.00040006631752476096, -2.0265579223632812e-06, -0.07262039184570312, -4.76837158203125e-05, -0.00016021728515625, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0027408599853515625, -3.933906555175781e-06, -9.5367431640625e-05, -1.33514404296875e-05, -0.0002257736341562122, -5.91265779803507e-05, -0.00027763788239099085, 0.0, -3.933906555175781e-06, 0.0, -8.58306884765625e-05, -9.5367431640625e-06, -4.5299530029296875e-06, -2.2649765014648438e-06, -0.00283050537109375, -7.62939453125e-06, -4.00543212890625e-05, -0.0001621246337890625, -0.0001621246337890625, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -8.225440979003906e-06, 0.0, -9.655952453613281e-06, 0.0, -2.6941268515656702e-05, -1.1920928244535389e-07, -0.0009555816650390625, -4.1961669921875e-05, -0.0003719329833984375, 0.0, -0.00237274169921875, 0.0, -7.43865966796875e-05, -3.814697265625e-06, -2.1338462829589844e-05, -1.311301275563892e-06, -0.00020037588546983898, -1.1920928244535389e-07, -5.7220458984375e-05, -0.002063751220703125, -5.91278076171875e-05, -0.00016619497910141945, -4.768360213347478e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0001504421088611707, -0.00047433358849957585, -0.00057220458984375, -0.0002288818359375, -0.0038328170776367188, -0.0014438629150390625, -0.002014279132708907, -0.00014221383025869727], "choice_history": [97, 285, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Frost", " ", "Frost", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "FrostShock", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Frost Frost"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.482966411324739, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Frost', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score_history": [-3.24249267578125e-05, -0.000385284423828125, 0.0, -2.4795503122732043e-05, -2.622600959512056e-06, -8.344646857949556e-07, -1.4901155736879446e-05, -4.410734163684538e-06, -0.000110626220703125, -4.9591064453125e-05, -0.0013179779052734375, -4.00543212890625e-05, -1.9073486328125e-06, -1.03711727206246e-05, -3.814697265625e-06, -5.114077794132754e-05, -5.7220458984375e-06, -0.000347137451171875, -2.86102294921875e-05, -0.0006046295166015625, -3.576278118089249e-07, -4.172325134277344e-05, -0.0016976594924926758, -0.0007305145263671875, -2.86102294921875e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0014896392822265625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.0002117156982421875, 0.0, -0.0004405975341796875, -9.918212890625e-05, -3.814697265625e-06, -0.000386953295674175, -2.0265579223632812e-06, -3.1065216064453125, -0.001617431640625, -3.573232650756836, -1.9073486328125e-06, -4.76837158203125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -4.41074053014745e-06, -2.3126602172851562e-05, -0.06560707092285156, -1.1444091796875e-05, -6.29425048828125e-05, -0.000102996826171875, -8.392333984375e-05, -5.7220458984375e-06, 0.0, -2.0265579223632812e-06, -7.62939453125e-06, -7.987022399902344e-06, 0.0, -7.987022399902344e-06, 0.0, -5.102079376229085e-05, -1.1920928244535389e-07, -0.002132415771484375, -4.1961669921875e-05, -0.0002765655517578125, -3.814697265625e-06, -0.0068035125732421875, 0.0, -0.0003739595413208008, -5.841255187988281e-06, -1.5854835510253906e-05, -1.311301275563892e-06, -0.00019371294183656573, 0.0, -6.67572021484375e-05, -0.0023975372314453125, -5.53131103515625e-05, -0.00016243360005319118, -4.172316494077677e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00016140936349984258, -0.0005539654521271586, -0.0010204315185546875, -0.00028228759765625, -0.004055023193359375, -0.00115966796875, -0.0022581813391298056, -0.0001308892242377624], "choice_history": [97, 285, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Frost", " ", "Shock", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 23, 179, "3", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "FrostShock", "_type": "Template5", "hole2": [{"hole3": [{"value": {"n": 3, "_type": "Num"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.777976219791803, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=3)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score_history": [-3.24249267578125e-05, -0.000385284423828125, 0.0, -2.4795503122732043e-05, -2.622600959512056e-06, -8.344646857949556e-07, -1.4901155736879446e-05, -4.410734163684538e-06, -0.000110626220703125, -4.9591064453125e-05, -0.0013179779052734375, -4.00543212890625e-05, -1.9073486328125e-06, -1.03711727206246e-05, -3.814697265625e-06, -5.114077794132754e-05, -5.7220458984375e-06, -0.000347137451171875, -2.86102294921875e-05, -0.0006046295166015625, -3.576278118089249e-07, -4.172325134277344e-05, -0.0016976594924926758, -0.0007305145263671875, -2.86102294921875e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0014896392822265625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.0002117156982421875, 0.0, -0.0004405975341796875, -9.918212890625e-05, -3.814697265625e-06, -0.000386953295674175, -2.0265579223632812e-06, -3.1065216064453125, -0.001617431640625, -0.04173198342323303, 0.0, -0.00012028217315673828, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -3.4570680327306036e-06, -2.491474151611328e-05, -2.718839645385742, -0.0004425048828125, -5.53131103515625e-05, -2.6702880859375e-05, -0.000179290771484375, -1.1444091796875e-05, 0.0, -4.0531158447265625e-06, -1.33514404296875e-05, -8.58306884765625e-06, 0.0, -1.1920928955078125e-05, 0.0, -3.755058423848823e-05, -1.1920928244535389e-07, -0.016412734985351562, -0.017278671264648438, -0.007788658142089844, -2.6702880859375e-05, -0.000308990478515625, 0.0, -0.27983570098876953, -1.52587890625e-05, -0.0001901388168334961, -3.576278118089249e-07, -0.3218778371810913, 0.0, -1.9073486328125e-06, -0.10080909729003906, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.0011232536053285003, 0.0, -0.00052642822265625, -0.030574798583984375, -9.1552734375e-05, -0.005157470703125, 0.0, -0.09726142883300781, 0.0, -0.0055887699127197266, -2.1457672119140625e-06, -2.622604188218247e-05, -8.344646857949556e-07, -0.00019835190323647112, 0.0, -5.91278076171875e-05, -0.001468658447265625, -9.1552734375e-05, -0.0001429496333003044, -6.9141146923357155e-06, -5.7220458984375e-06, -5.7220458984375e-06, -7.593630289193243e-05, -0.00022387498756870627, -0.0006389617919921875, -0.030933380126953125, -4.57763671875e-05, -0.00188446044921875, -3.814697265625e-06, -0.0031299591064453125, 0.0, -0.001789093017578125, -5.7220458984375e-06, -2.1457672119140625e-05, -9.536738616588991e-07, -0.00016307779878843576, 0.0, -4.1961669921875e-05, -0.00128936767578125, -2.47955322265625e-05, -0.00016404292546212673, -5.245195097813848e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0001575946807861328, -0.00018990036915056407], "choice_history": [97, 285, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Frost", " ", "Shock", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 23, 179, "1", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 109, 161, 17, 153, 13, 143, 21, 174, "player", "<EOS>", "cards_played", "<EOS>", 343, 5, 346, 52, 179, "0", "<EOS>", 358, 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 358, 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"body": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "orelse": [{"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "If", "test": {"comparators": [{"n": 0, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "cards_played"}}}], "hole3": "use", "hole0": "FrostShock", "_type": "Template5", "hole2": [{"hole3": [{"value": {"n": 1, "_type": "Num"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.805763710878061, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.cards_played > 0:\n            self.target.damage(player.effective_spell_damage(1), self)\n        else:\n            self.target.damage(player.effective_spell_damage(1), self)\n"}, {"score_history": [-3.24249267578125e-05, -0.000385284423828125, 0.0, -2.4795503122732043e-05, -2.622600959512056e-06, -8.344646857949556e-07, -1.4901155736879446e-05, -4.410734163684538e-06, -0.000110626220703125, -4.9591064453125e-05, -0.0013179779052734375, -4.00543212890625e-05, -1.9073486328125e-06, -1.03711727206246e-05, -3.814697265625e-06, -5.114077794132754e-05, -5.7220458984375e-06, -0.000347137451171875, -2.86102294921875e-05, -0.0006046295166015625, -3.576278118089249e-07, -4.172325134277344e-05, -0.0016976594924926758, -0.0007305145263671875, -2.86102294921875e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0014896392822265625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.0002117156982421875, 0.0, -0.0004405975341796875, -9.918212890625e-05, -3.814697265625e-06, -0.000386953295674175, -2.0265579223632812e-06, -5.016434669494629, -1.3931379318237305, -0.007881349883973598, -0.0001512765884399414, -6.103515625e-05, -0.034244537353515625, -1.9073486328125e-06, -0.018666723743081093, -1.9073486328125e-06, -0.17198288440704346, -5.5193893786054105e-05, 0.0, -0.0101318359375, -6.29425048828125e-05, -0.000148773193359375, -0.00018417835235595703, -7.033323527139146e-06, -0.0007381439208984375, -9.5367431640625e-05, -1.9073486328125e-06, -0.004908045753836632, -3.099436753473128e-06, -0.0001392364501953125, -5.7220458984375e-06, -0.11645805835723877, -0.0001227855682373047, 0.0, -0.0007780787418596447, 0.0, -2.0265579223632812e-06, 0.0, -0.000873565673828125, -3.24249267578125e-05, -4.768371127283899e-06, -2.1457672119140625e-06, -0.01961231231689453, -4.00543212890625e-05, -4.57763671875e-05, -0.0001087188720703125, -0.0001983642578125, -7.62939453125e-06, 0.0, 0.0, -9.5367431640625e-06, -7.987022399902344e-06, 0.0, -6.556510470545618e-06, -1.1920928244535389e-07, -8.237110159825534e-05, -1.1920928244535389e-07, -0.0014019012451171875, -4.57763671875e-05, -0.0001316070556640625, -1.9073486328125e-06, -0.03148078918457031, 0.0, -0.0004254579544067383, -5.841255187988281e-06, -1.5974044799804688e-05, -9.536738616588991e-07, -0.00020837571355514228, 0.0, -6.67572021484375e-05, -0.002338409423828125, -5.53131103515625e-05, -0.00016483827494084835, -4.172316494077677e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0001631975028431043, -0.0005580185679718852, -0.0006103515625, -0.0002651214599609375, -0.003960609436035156, -0.0012989044189453125, -0.002254128223285079, -0.0001338692381978035], "choice_history": [97, 285, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Frost", " ", "Shock", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 29, 268, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 346, 51, 176, "Null", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "FrostShock", "_type": "Template5", "hole2": [{"hole3": [{"value": {"hole4": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole3": [{"value": "Null", "_type": "NameConstant"}], "hole0": "Damage", "_type": "Template43", "hole2": "CharacterSelector", "hole1": [{"n": 1, "_type": "Num"}]}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.851408928495445, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=Battlecry(Damage(1),\n            CharacterSelector(Null, picker=UserPicker())))\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score_history": [-3.24249267578125e-05, -0.000385284423828125, 0.0, -2.4795503122732043e-05, -2.622600959512056e-06, -8.344646857949556e-07, -1.4901155736879446e-05, -4.410734163684538e-06, -0.000110626220703125, -4.9591064453125e-05, -0.0013179779052734375, -4.00543212890625e-05, -1.9073486328125e-06, -1.03711727206246e-05, -3.814697265625e-06, -5.114077794132754e-05, -5.7220458984375e-06, -0.000347137451171875, -2.86102294921875e-05, -0.0006046295166015625, -3.576278118089249e-07, -4.172325134277344e-05, -0.0016976594924926758, -0.0007305145263671875, -2.86102294921875e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0014896392822265625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.0002117156982421875, 0.0, -0.0004405975341796875, -9.918212890625e-05, -3.814697265625e-06, -0.000386953295674175, -2.0265579223632812e-06, -0.073455810546875, -4.9591064453125e-05, -0.000164031982421875, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -5.99271297454834, 0.0, -0.02225506119430065, 0.0, -0.8345770239830017, -1.4066622497921344e-05, -0.023075634613633156, 0.0, -6.186962127685547e-05, 0.0, -0.0001392364501953125, -5.7220458984375e-06, -4.410743713378906e-06, -4.410743713378906e-06, -0.0022258758544921875, -1.1444091796875e-05, -4.00543212890625e-05, -0.00011444091796875, -9.918212890625e-05, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -7.987022399902344e-06, 0.0, -7.748603820800781e-06, 0.0, -2.4557086362619884e-05, -1.1920928244535389e-07, -0.0009403228759765625, -4.38690185546875e-05, -0.00037384033203125, 0.0, -0.0026607513427734375, 0.0, -7.2479248046875e-05, -3.814697265625e-06, -2.1338462829589844e-05, -1.1920922133867862e-06, -0.0001790420210454613, -1.1920928244535389e-07, -4.9591064453125e-05, -0.001949310302734375, -5.91278076171875e-05, -0.0001738639548420906, -4.529942543740617e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00016522406076546758, -0.0005472897319123149, -0.000545501708984375, -0.0002288818359375, -0.0037031173706054688, -0.0014476776123046875, -0.0020327565725892782, -0.00014519398973789066], "choice_history": [97, 285, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Frost", " ", "Shock", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "FrostShock", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.972817694856573, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=game.other_player.hero)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score_history": [-3.24249267578125e-05, -0.000385284423828125, 0.0, -2.4795503122732043e-05, -2.622600959512056e-06, -8.344646857949556e-07, -1.4901155736879446e-05, -4.410734163684538e-06, -0.000110626220703125, -4.9591064453125e-05, -0.0013179779052734375, -4.00543212890625e-05, -1.9073486328125e-06, -1.03711727206246e-05, -3.814697265625e-06, -5.114077794132754e-05, -5.7220458984375e-06, -0.000347137451171875, -2.86102294921875e-05, -0.0006046295166015625, -3.576278118089249e-07, -4.172325134277344e-05, -0.0016976594924926758, -0.0007305145263671875, -2.86102294921875e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0014896392822265625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.0002117156982421875, 0.0, -0.0004405975341796875, -9.918212890625e-05, -3.814697265625e-06, -0.000386953295674175, -2.0265579223632812e-06, -0.073455810546875, -4.9591064453125e-05, -0.000164031982421875, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.002559661865234375, -3.933906555175781e-06, -9.1552734375e-05, -1.33514404296875e-05, -0.00022589309082832187, -5.924577999394387e-05, -0.00027751867310144007, 0.0, -3.933906555175781e-06, 0.0, -8.58306884765625e-05, -9.5367431640625e-06, -4.649161837733118e-06, -2.2649765014648438e-06, -0.0028285980224609375, -7.62939453125e-06, -4.00543212890625e-05, -0.0001621246337890625, -0.0001621246337890625, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -8.225440979003906e-06, 0.0, -9.655952453613281e-06, 0.0, -2.6941268515656702e-05, -1.1920928244535389e-07, -0.00095367431640625, -4.1961669921875e-05, -0.0003719329833984375, 0.0, -0.0023746490478515625, 0.0, -7.43865966796875e-05, -3.814697265625e-06, -2.1338462829589844e-05, -1.311301275563892e-06, -0.0002004950656555593, -1.1920928244535389e-07, -5.7220458984375e-05, -6.8658342361450195, -0.000152587890625, -5.167879135115072e-05, -3.576278118089249e-07, -9.34600830078125e-05, -1.9073486328125e-06, -6.234645115910098e-05, -0.00010836123692570254, -0.017370223999023438, -0.0003414154052734375, -0.009472846984863281, -0.0006732940673828125, -0.0011954307556152344, -0.00015926192281767726], "choice_history": [97, 285, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Frost", " ", "Shock", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 52, 179, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"n": 1, "_type": "Num"}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "FrostShock", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.988284383464574, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(1, self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score_history": [-3.24249267578125e-05, -0.000385284423828125, 0.0, -2.4795503122732043e-05, -2.622600959512056e-06, -8.344646857949556e-07, -1.4901155736879446e-05, -4.410734163684538e-06, -0.000110626220703125, -4.9591064453125e-05, -0.0013179779052734375, -4.00543212890625e-05, -1.9073486328125e-06, -1.03711727206246e-05, -3.814697265625e-06, -5.114077794132754e-05, -5.7220458984375e-06, -0.000347137451171875, -2.86102294921875e-05, -0.0006046295166015625, -3.576278118089249e-07, -4.172325134277344e-05, -0.0016976594924926758, -0.0007305145263671875, -2.86102294921875e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0014896392822265625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.0002117156982421875, 0.0, -0.0004405975341796875, -9.918212890625e-05, -3.814697265625e-06, -0.000386953295674175, -2.0265579223632812e-06, -0.073455810546875, -4.9591064453125e-05, -0.000164031982421875, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -5.99271297454834, 0.0, -0.02225506119430065, 0.0, -1.1432013511657715, -1.5973972040228546e-05, -0.009885113686323166, 0.0, -1.1801719665527344e-05, 0.0, -0.0001544952392578125, -9.5367431640625e-06, -6.4373016357421875e-06, -2.503394853192731e-06, -0.00249481201171875, -9.5367431640625e-06, -4.1961669921875e-05, -0.000125885009765625, -0.0001220703125, -1.52587890625e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -7.987022399902344e-06, 0.0, -7.748603820800781e-06, 0.0, -2.4318669602507725e-05, -1.1920928244535389e-07, -0.000885009765625, -4.1961669921875e-05, -0.00037384033203125, 0.0, -0.0025005340576171875, 0.0, -7.62939453125e-05, -3.814697265625e-06, -2.1338462829589844e-05, -1.1920922133867862e-06, -0.0001983496913453564, -1.1920928244535389e-07, -5.340576171875e-05, -0.001987457275390625, -5.91278076171875e-05, -0.00016877055168151855, -4.6491513785440475e-06, -3.814697265625e-06, -7.62939453125e-06, -0.00015592573618050665, -0.0005061624688096344, -0.000560760498046875, -0.00023651123046875, -0.003734588623046875, -0.0014438629150390625, -0.0020402667578309774, -0.00014269063831306994], "choice_history": [97, 285, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Frost", " ", "Shock", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "FrostShock", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.268377176052397, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=game.other_player.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score_history": [-3.24249267578125e-05, -0.000385284423828125, 0.0, -2.4795503122732043e-05, -2.622600959512056e-06, -8.344646857949556e-07, -1.4901155736879446e-05, -4.410734163684538e-06, -0.000110626220703125, -4.9591064453125e-05, -0.0013179779052734375, -4.00543212890625e-05, -1.9073486328125e-06, -1.03711727206246e-05, -3.814697265625e-06, -5.114077794132754e-05, -5.7220458984375e-06, -0.000347137451171875, -2.86102294921875e-05, -0.0006046295166015625, -3.576278118089249e-07, -4.172325134277344e-05, -0.0016976594924926758, -7.233687400817871, -1.4781926438445225e-05, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.000152587890625, 0.0, -0.00185394287109375, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -0.0002193450927734375, 0.0, -0.000408172607421875, -9.1552734375e-05, -3.814697265625e-06, -0.00040090078255161643, -2.1457672119140625e-06, -0.06376934051513672, -4.38690185546875e-05, -0.00016021728515625, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0025768280029296875, -3.933906555175781e-06, -9.34600830078125e-05, -1.33514404296875e-05, -0.00022422436450142413, -5.721932393498719e-05, -0.0002692932612262666, 0.0, -3.933906555175781e-06, 0.0, -8.392333984375e-05, -9.5367431640625e-06, -4.649161837733118e-06, -2.2649765014648438e-06, -0.0027923583984375, -7.62939453125e-06, -4.00543212890625e-05, -0.000164031982421875, -0.000164031982421875, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -8.225440979003906e-06, 0.0, -9.655952453613281e-06, 0.0, -2.706047598621808e-05, -1.1920928244535389e-07, -0.000957489013671875, -4.1961669921875e-05, -0.0003719329833984375, 0.0, -0.0023651123046875, 0.0, -7.43865966796875e-05, -3.814697265625e-06, -2.1338462829589844e-05, -1.311301275563892e-06, -0.00020061426039319485, -1.1920928244535389e-07, -5.91278076171875e-05, -0.0020694732666015625, -5.91278076171875e-05, -0.00016582291573286057, -4.768360213347478e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0001505613181507215, -0.00047254544915631413, -0.00057220458984375, -0.0002288818359375, -0.00383758544921875, -0.0014438629150390625, -0.0020152328070253134, -0.00014233303954824805], "choice_history": [97, 285, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Frost", " ", "Shock", " ", "Shock", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "FrostShock", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Frost Shock Shock"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.327592704880132, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score_history": [-3.24249267578125e-05, -0.000385284423828125, 0.0, -2.4795503122732043e-05, -2.622600959512056e-06, -8.344646857949556e-07, -1.4901155736879446e-05, -4.410734163684538e-06, -0.000110626220703125, -4.9591064453125e-05, -6.857139587402344, -0.00030517578125, -5.7220458984375e-06, -2.622604142743512e-06, -1.9073486328125e-06, -0.00013864006905350834, 0.0, -0.23050212860107422, -0.00026702880859375, -0.0001811981201171875, -1.5258672647178173e-05, -4.8279762268066406e-05, -2.1576881408691406e-05, -5.7220458984375e-06, -1.9073486328125e-05, -9.5367431640625e-06, 1.1920928244535389e-07, -1.9073486328125e-06, -0.0008411407470703125, -8.96453857421875e-05, -2.09808349609375e-05, 0.0, -0.0003108978271484375, 0.0, -0.003475189208984375, 0.0, -5.7220458984375e-05, -3.814697265625e-06, -0.0002231597900390625, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -0.0010013580322265625, -1.9073486328125e-06, -0.016488075256347656, -1.52587890625e-05, -0.0001271963119506836, -1.9073486328125e-06, -0.00024091856903396547, -1.9073486328125e-06, -0.00018978118896484375, -7.62939453125e-06, -8.392333984375e-05, -7.62939453125e-06, -4.5299530029296875e-06, -1.7404556274414062e-05, -0.20795154571533203, -1.9073486328125e-05, -4.9591064453125e-05, -0.000152587890625, -4.38690185546875e-05, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -7.867813110351562e-06, 0.0, -7.748603820800781e-06, -1.1920928244535389e-07, -4.970985901309177e-05, -1.1920928244535389e-07, -0.0032835006713867188, -4.57763671875e-05, -0.0002613067626953125, 0.0, -0.00588226318359375, 0.0, -0.0001277923583984375, -3.814697265625e-06, -1.9431114196777344e-05, -1.1920922133867862e-06, -0.0001829847606131807, 0.0, -5.91278076171875e-05, -0.002071380615234375, -5.91278076171875e-05, -0.00016765203326940536, -4.410734163684538e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0001651048514759168, -0.0005544422892853618, -0.0005626678466796875, -0.000255584716796875, -0.004235267639160156, -0.001117706298828125, -0.002171277767047286, -0.00013231963384896517], "choice_history": [97, 285, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Frost", " ", "Shock", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 51, 175, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "FrostShock", "_type": "Template5", "hole2": [{"hole2": [{"_type": "Str", "s": "Frost Shock"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.342203890417174, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score_history": [-3.24249267578125e-05, -0.000385284423828125, 0.0, -2.4795503122732043e-05, -2.622600959512056e-06, -8.344646857949556e-07, -1.4901155736879446e-05, -4.410734163684538e-06, -0.000110626220703125, -4.9591064453125e-05, -0.0013179779052734375, -4.00543212890625e-05, -1.9073486328125e-06, -1.03711727206246e-05, -3.814697265625e-06, -5.114077794132754e-05, -5.7220458984375e-06, -0.000347137451171875, -2.86102294921875e-05, -0.0006046295166015625, -3.576278118089249e-07, -4.172325134277344e-05, -0.0016976594924926758, -0.0007305145263671875, -2.86102294921875e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0014896392822265625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.0002117156982421875, 0.0, -0.0004405975341796875, -9.918212890625e-05, -3.814697265625e-06, -0.000386953295674175, -2.0265579223632812e-06, -0.073455810546875, -4.9591064453125e-05, -0.000164031982421875, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.002559661865234375, -3.933906555175781e-06, -9.1552734375e-05, -1.33514404296875e-05, -0.00022589309082832187, -5.924577999394387e-05, -0.00027751867310144007, 0.0, -3.933906555175781e-06, 0.0, -8.58306884765625e-05, -9.5367431640625e-06, -4.649161837733118e-06, -2.2649765014648438e-06, -6.604140281677246, -1.71661376953125e-05, -2.47955322265625e-05, -4.57763671875e-05, -0.00022125244140625, -7.62939453125e-06, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -1.0013580322265625e-05, 0.0, -9.655952453613281e-06, 0.0, -2.3365011657006107e-05, -1.1920928244535389e-07, -0.5043849945068359, -4.57763671875e-05, -0.0011959075927734375, 0.0, -0.0002002716064453125, 0.0, -9.34600830078125e-05, -5.7220458984375e-06, -1.919269561767578e-05, -5.960462772236497e-07, -0.00025388787616975605, 0.0, -3.4332275390625e-05, -0.0024394989013671875, -5.91278076171875e-05, -0.00016512838192284107, -4.410734163684538e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00022661684488411993, -0.0005476473015733063, -0.029254913330078125, -6.29425048828125e-05, -0.004683494567871094, -0.00310516357421875, -0.0022988314740359783, -7.820077007636428e-05, -0.4727764129638672, -3.62396240234375e-05, -0.0013561248779296875, -1.9073486328125e-06, -0.24155235290527344, 0.0, -0.0013275146484375, -1.728534698486328e-05, -3.075599670410156e-05, -9.536738616588991e-07, -0.00018584127246867865, 0.0, -5.340576171875e-05, -0.002613067626953125, -6.866455078125e-05, -0.00011198548600077629, -1.7881377516459906e-06, -3.814697265625e-06, -3.814697265625e-06, -8.58306884765625e-05, -0.00042223927448503673, -0.1555042266845703, -0.000102996826171875, -0.004649162292480469, -0.00341796875, -0.0020498032681643963, -8.535321103408933e-05], "choice_history": [97, 285, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Frost", " ", "Shock", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 362, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "FrostShock", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Frost Shock"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -8.125538373923398, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n"}]}
{"index": 38, "beams": [{"score_history": [-0.0001506805419921875, -0.000278472900390625, -0.0001037067049765028, -8.344646857949556e-07, -8.344646857949556e-07, -3.5405155358603224e-05, -7.271740287251305e-06, -6.67572021484375e-05, -0.001621246337890625, -5.14984130859375e-05, -0.00012230873107910156, 0.0, -1.5497195136049413e-06, 0.0, -0.004378557205200195, -0.0001888275146484375, -0.0018788576126098633, -5.841255187988281e-06, -0.00136566162109375, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -0.00016176699136849493, -1.0490413842489943e-05, -2.491474151611328e-05, -1.52587890625e-05, -0.013957181945443153, -1.4305104514278355e-06, -0.0004878040053881705, 0.0, -6.23464584350586e-05, 0.0, -0.0006008148193359375, -3.814697265625e-06, -1.3113007298670709e-05, -2.1457672119140625e-06, -0.002277374267578125, -3.814697265625e-06, -5.53131103515625e-05, -0.0003452301025390625, -8.392333984375e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -2.384185791015625e-05, -2.3841855067985307e-07, -0.00010096874029841274, -1.1920928244535389e-07, -0.00495147705078125, -3.4332275390625e-05, -0.0001468658447265625, 0.0, -0.0048542022705078125, 0.0, -5.161762237548828e-05, -2.2649765014648438e-06, -4.649162292480469e-05, -3.3378546504536644e-06, -7.760358130326495e-05, 0.0, -3.4332275390625e-05, -0.0025882720947265625, -0.0002498626708984375, -0.009702562354505062, -1.311301275563892e-06, -3.814697265625e-06, -9.5367431640625e-06, -0.0002925153821706772, -0.0015794021310284734, -0.0002269744873046875, -0.00089263916015625, -0.0022230148315429688, -0.0007610321044921875, -0.005590915214270353, -0.00011765655654016882], "choice_history": [97, 285, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "Frostbolt", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Frostbolt", "_type": "Template27", "hole2": "MAGE", "hole1": 2}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -0.06306397884392112, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score_history": [-0.0001506805419921875, -0.000278472900390625, -0.0001037067049765028, -8.344646857949556e-07, -8.344646857949556e-07, -3.5405155358603224e-05, -7.271740287251305e-06, -6.67572021484375e-05, -0.001621246337890625, -5.14984130859375e-05, -0.00012230873107910156, 0.0, -1.5497195136049413e-06, 0.0, -0.004378557205200195, -0.0001888275146484375, -0.0018788576126098633, -5.841255187988281e-06, -0.00136566162109375, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -0.00016176699136849493, -1.0490413842489943e-05, -2.491474151611328e-05, -1.52587890625e-05, -0.013957181945443153, -1.4305104514278355e-06, -0.0004878040053881705, 0.0, -6.23464584350586e-05, 0.0, -0.0006008148193359375, -3.814697265625e-06, -1.3113007298670709e-05, -2.1457672119140625e-06, -0.002277374267578125, -3.814697265625e-06, -5.53131103515625e-05, -0.0003452301025390625, -8.392333984375e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -2.384185791015625e-05, -2.3841855067985307e-07, -0.00010096874029841274, -1.1920928244535389e-07, -0.00495147705078125, -3.4332275390625e-05, -0.0001468658447265625, 0.0, -0.0048542022705078125, 0.0, -5.161762237548828e-05, -2.2649765014648438e-06, -4.649162292480469e-05, -3.3378546504536644e-06, -7.760358130326495e-05, 0.0, -3.4332275390625e-05, -0.0025882720947265625, -0.0002498626708984375, -4.6410956382751465, -1.1801649634435307e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.00031933074933476746, -0.001309859217144549, -0.000553131103515625, -0.0013675689697265625, -0.0024366378784179688, -0.000827789306640625, -0.005229830276221037, -0.00012027847697027028], "choice_history": [97, 285, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "Frostbolt", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Frostbolt", "_type": "Template27", "hole2": "MAGE", "hole1": 2}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.694944006526121, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score_history": [-0.0001506805419921875, -0.000278472900390625, -0.0001037067049765028, -8.344646857949556e-07, -8.344646857949556e-07, -3.5405155358603224e-05, -7.271740287251305e-06, -6.67572021484375e-05, -0.001621246337890625, -5.14984130859375e-05, -0.00012230873107910156, 0.0, -1.5497195136049413e-06, 0.0, -0.004378557205200195, -0.0001888275146484375, -0.0018788576126098633, -5.841255187988281e-06, -0.00136566162109375, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -0.00016176699136849493, -1.0490413842489943e-05, -2.491474151611328e-05, -1.52587890625e-05, -5.117184162139893, -2.1457672119140625e-06, -0.001489519840106368, 0.0, -8.094310760498047e-05, 0.0, -0.00032806396484375, -5.7220458984375e-06, -1.4185894542606547e-05, -4.0531158447265625e-06, -0.0025959014892578125, -3.814697265625e-06, -7.2479248046875e-05, -0.000293731689453125, -8.392333984375e-05, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -9.655952453613281e-06, 0.0, -2.384185791015625e-05, -2.3841855067985307e-07, -0.00010263758304063231, -1.1920928244535389e-07, -0.005153656005859375, -3.4332275390625e-05, -0.0001506805419921875, 0.0, -0.004913330078125, 0.0, -5.161762237548828e-05, -2.2649765014648438e-06, -4.649162292480469e-05, -3.4570634852570947e-06, -7.18818700988777e-05, 0.0, -3.4332275390625e-05, -0.0025615692138671875, -0.0002460479736328125, -0.00971889402717352, -1.4305104514278355e-06, -3.814697265625e-06, -7.62939453125e-06, -0.000285364396404475, -0.0016055089654400945, -0.0002155303955078125, -0.0009021759033203125, -0.00220489501953125, -0.000743865966796875, -0.0056164260022342205, -0.00011908695887541398], "choice_history": [97, 285, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "damage", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "Frostbolt", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "damage"}, "hole3": "target_func", "hole0": "Frostbolt", "_type": "Template27", "hole2": "MAGE", "hole1": 2}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.16758223595135, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.damage)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score_history": [-0.0001506805419921875, -0.000278472900390625, -0.0001037067049765028, -8.344646857949556e-07, -8.344646857949556e-07, -3.5405155358603224e-05, -7.271740287251305e-06, -6.67572021484375e-05, -0.001621246337890625, -5.14984130859375e-05, -0.00012230873107910156, 0.0, -1.5497195136049413e-06, 0.0, -0.004378557205200195, -0.0001888275146484375, -0.0018788576126098633, -5.841255187988281e-06, -0.00136566162109375, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -0.00016176699136849493, -1.0490413842489943e-05, -2.491474151611328e-05, -1.52587890625e-05, -5.363791465759277, -8.988057379610837e-05, -0.0014500109246000648, 0.0, -5.829334259033203e-05, 0.0, -0.0009002685546875, -1.1444091796875e-05, -1.692770456429571e-05, -2.1457672119140625e-06, -0.0022525787353515625, -3.814697265625e-06, -6.4849853515625e-05, -0.0003147125244140625, -8.392333984375e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -2.384185791015625e-05, -2.3841855067985307e-07, -9.965751087293029e-05, -1.1920928244535389e-07, -0.0049896240234375, -3.62396240234375e-05, -0.0001468658447265625, 0.0, -0.0051422119140625, 0.0, -5.161762237548828e-05, -2.2649765014648438e-06, -4.649162292480469e-05, -3.3378546504536644e-06, -7.295469549717382e-05, 0.0, -3.4332275390625e-05, -0.002597808837890625, -0.0002460479736328125, -0.009669422172009945, -1.4305104514278355e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0002860794775187969, -0.0015982371987774968, -0.000209808349609375, -0.0008831024169921875, -0.002246856689453125, -0.0007801055908203125, -0.005607842933386564, -0.00011682215699693188], "choice_history": [97, 285, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "Frostbolt", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "hole3": "target_func", "hole0": "Frostbolt", "_type": "Template27", "hole2": "MAGE", "hole1": 2}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.414547590504036, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score_history": [-0.0001506805419921875, -0.000278472900390625, -0.0001037067049765028, -8.344646857949556e-07, -8.344646857949556e-07, -3.5405155358603224e-05, -7.271740287251305e-06, -6.67572021484375e-05, -0.001621246337890625, -5.14984130859375e-05, -0.00012230873107910156, 0.0, -1.5497195136049413e-06, 0.0, -5.519869804382324, -1.9073486328125e-06, -0.001443028450012207, -7.748603820800781e-06, -0.000247955322265625, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001354217529296875, -1.9073486328125e-06, -0.0002378225326538086, -1.0728831512096804e-05, -2.1219253540039062e-05, -1.52587890625e-05, -0.012430967763066292, -1.4305104514278355e-06, -0.0005253549898043275, 0.0, -6.61611557006836e-05, 0.0, -0.0006046295166015625, -5.7220458984375e-06, -1.3113007298670709e-05, -2.1457672119140625e-06, -0.002338409423828125, -3.814697265625e-06, -5.53131103515625e-05, -0.0003509521484375, -8.20159912109375e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -2.384185791015625e-05, -2.3841855067985307e-07, -0.00010156475764233619, -1.1920928244535389e-07, -0.004993438720703125, -3.4332275390625e-05, -0.0001468658447265625, 0.0, -0.0048580169677734375, 0.0, -5.161762237548828e-05, -2.2649765014648438e-06, -4.649162292480469e-05, -3.3378546504536644e-06, -7.831879338482395e-05, 0.0, -3.4332275390625e-05, -0.0025959014892578125, -0.0002498626708984375, -0.009736298583447933, -1.311301275563892e-06, -3.814697265625e-06, -9.5367431640625e-06, -0.0002953757648356259, -0.0015698653878644109, -0.0002307891845703125, -0.00090789794921875, -0.0022192001342773438, -0.000759124755859375, -0.005578398238867521, -0.00011789496056735516], "choice_history": [97, 285, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Frostbolt", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "Frostbolt", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Frostbolt", "_type": "Template27", "hole2": "ROGUE", "hole1": 2}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.575622699194092, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score_history": [-0.0001506805419921875, -0.000278472900390625, -0.0001037067049765028, -8.344646857949556e-07, -8.344646857949556e-07, -3.5405155358603224e-05, -7.271740287251305e-06, -6.67572021484375e-05, -0.001621246337890625, -5.14984130859375e-05, -0.00012230873107910156, 0.0, -1.5497195136049413e-06, 0.0, -0.004378557205200195, -0.0001888275146484375, -0.0018788576126098633, -5.841255187988281e-06, -0.00136566162109375, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -0.00016176699136849493, -1.0490413842489943e-05, -2.491474151611328e-05, -1.52587890625e-05, -0.013957181945443153, -1.4305104514278355e-06, -0.0004878040053881705, 0.0, -6.23464584350586e-05, 0.0, -0.0006008148193359375, -3.814697265625e-06, -1.3113007298670709e-05, -2.1457672119140625e-06, -0.002277374267578125, -3.814697265625e-06, -5.53131103515625e-05, -0.0003452301025390625, -8.392333984375e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -2.384185791015625e-05, -2.3841855067985307e-07, -0.00010096874029841274, -1.1920928244535389e-07, -0.00495147705078125, -3.4332275390625e-05, -0.0001468658447265625, 0.0, -5.335841178894043, 0.0, -1.1444091796875e-05, 0.0, -0.39513981342315674, 0.0, -0.1245192289352417, 0.0, -0.0063477568328380585, -9.536738616588991e-07, -3.898105933330953e-05, -1.1920922133867862e-06, -2.6702880859375e-05, -0.0017223358154296875, -0.0004558563232421875, -0.0017772912979125977, -3.099436753473128e-06, -3.0517578125e-05, -3.814697265625e-06, -0.0002221985487267375, -0.0016628192970529199, -0.0003452301025390625, -0.0016574859619140625, -0.0024175643920898438, -0.000774383544921875, -0.006998896133154631, -0.00016724393935874104], "choice_history": [97, 285, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "Frostbolt", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Frostbolt", "_type": "Template27", "hole2": "MAGE", "hole1": 2}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.913920607862757, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score_history": [-0.0001506805419921875, -0.000278472900390625, -0.0001037067049765028, -8.344646857949556e-07, -8.344646857949556e-07, -3.5405155358603224e-05, -7.271740287251305e-06, -6.67572021484375e-05, -0.001621246337890625, -5.14984130859375e-05, -0.00012230873107910156, 0.0, -1.5497195136049413e-06, 0.0, -0.004378557205200195, -0.0001888275146484375, -0.0018788576126098633, -5.841255187988281e-06, -0.00136566162109375, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -0.00016176699136849493, -1.0490413842489943e-05, -2.491474151611328e-05, -1.52587890625e-05, -0.013957181945443153, -1.4305104514278355e-06, -0.0004878040053881705, 0.0, -6.23464584350586e-05, 0.0, -0.0006008148193359375, -3.814697265625e-06, -1.3113007298670709e-05, -2.1457672119140625e-06, -0.002277374267578125, -3.814697265625e-06, -5.53131103515625e-05, -0.0003452301025390625, -8.392333984375e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -2.384185791015625e-05, -2.3841855067985307e-07, -0.00010096874029841274, -1.1920928244535389e-07, -0.00495147705078125, -3.4332275390625e-05, -0.0001468658447265625, 0.0, -0.0048542022705078125, 0.0, -5.161762237548828e-05, -2.2649765014648438e-06, -4.649162292480469e-05, -3.3378546504536644e-06, -7.760358130326495e-05, 0.0, -3.4332275390625e-05, -0.0025882720947265625, -0.0002498626708984375, -0.009702562354505062, -1.311301275563892e-06, -3.814697265625e-06, -9.5367431640625e-06, -0.0002925153821706772, -0.0015794021310284734, -0.0002269744873046875, -0.00089263916015625, -0.0022230148315429688, -0.0007610321044921875, -6.094892978668213, -0.0008991956128738821], "choice_history": [97, 285, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Aura", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template37", "hole0": "Aura"}, "_type": "Expr"}], "hole3": "use", "hole0": "Frostbolt", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Frostbolt", "_type": "Template27", "hole2": "MAGE", "hole1": 2}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.153147581354197, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Aura()))\n"}, {"score_history": [-0.0001506805419921875, -0.000278472900390625, -0.0001037067049765028, -8.344646857949556e-07, -8.344646857949556e-07, -3.5405155358603224e-05, -7.271740287251305e-06, -6.67572021484375e-05, -0.001621246337890625, -5.14984130859375e-05, -0.00012230873107910156, 0.0, -1.5497195136049413e-06, 0.0, -0.004378557205200195, -0.0001888275146484375, -0.0018788576126098633, -5.841255187988281e-06, -0.00136566162109375, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -0.00016176699136849493, -1.0490413842489943e-05, -2.491474151611328e-05, -1.52587890625e-05, -0.013957181945443153, -1.4305104514278355e-06, -0.0004878040053881705, 0.0, -6.23464584350586e-05, 0.0, -0.0006008148193359375, -3.814697265625e-06, -1.3113007298670709e-05, -2.1457672119140625e-06, -0.002277374267578125, -3.814697265625e-06, -5.53131103515625e-05, -0.0003452301025390625, -8.392333984375e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -2.384185791015625e-05, -2.3841855067985307e-07, -0.00010096874029841274, -1.1920928244535389e-07, -0.00495147705078125, -3.4332275390625e-05, -0.0001468658447265625, 0.0, -0.0048542022705078125, 0.0, -5.161762237548828e-05, -2.2649765014648438e-06, -4.649162292480469e-05, -3.3378546504536644e-06, -7.760358130326495e-05, 0.0, -3.4332275390625e-05, -6.247405052185059, -0.0002574920654296875, -0.01984691619873047, 0.0, -3.4332275390625e-05, -1.1444091796875e-05, -0.00013589851732831448, -7.724724127911031e-05, -0.0029888153076171875, -0.0006580352783203125, -0.0037641525268554688, -0.0006885528564453125, -0.006582379341125488, -5.483618951984681e-05], "choice_history": [97, 285, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 52, 179, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"n": 3, "_type": "Num"}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "Frostbolt", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Frostbolt", "_type": "Template27", "hole2": "MAGE", "hole1": 2}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.321329623189477, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(3, self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score_history": [-0.0001506805419921875, -0.000278472900390625, -0.0001037067049765028, -8.344646857949556e-07, -8.344646857949556e-07, -3.5405155358603224e-05, -7.271740287251305e-06, -6.67572021484375e-05, -0.001621246337890625, -5.14984130859375e-05, -0.00012230873107910156, 0.0, -1.5497195136049413e-06, 0.0, -0.004378557205200195, -0.0001888275146484375, -0.0018788576126098633, -5.841255187988281e-06, -0.00136566162109375, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -0.00016176699136849493, -1.0490413842489943e-05, -2.491474151611328e-05, -1.52587890625e-05, -0.013957181945443153, -1.4305104514278355e-06, -0.0004878040053881705, 0.0, -6.23464584350586e-05, 0.0, -0.0006008148193359375, -3.814697265625e-06, -1.3113007298670709e-05, -2.1457672119140625e-06, -0.002277374267578125, -3.814697265625e-06, -5.53131103515625e-05, -0.0003452301025390625, -8.392333984375e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -2.384185791015625e-05, -2.3841855067985307e-07, -0.00010096874029841274, -1.1920928244535389e-07, -0.00495147705078125, -3.4332275390625e-05, -0.0001468658447265625, 0.0, -0.0048542022705078125, 0.0, -5.161762237548828e-05, -2.2649765014648438e-06, -4.649162292480469e-05, -3.3378546504536644e-06, -7.760358130326495e-05, 0.0, -3.4332275390625e-05, -0.0025882720947265625, -0.0002498626708984375, -0.009702562354505062, -1.311301275563892e-06, -3.814697265625e-06, -9.5367431640625e-06, -0.0002925153821706772, -6.724701881408691, 0.0, -0.008749008178710938, -0.002986907958984375, -0.002979278564453125, -0.0007877349853515625, -0.0035788994282484055, -0.00016378748114220798], "choice_history": [97, 285, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "Selector", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "selfSelector"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "Frostbolt", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Frostbolt", "_type": "Template27", "hole2": "MAGE", "hole1": 2}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.795619842364168, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), selfSelector)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score_history": [-0.0001506805419921875, -0.000278472900390625, -0.0001037067049765028, -8.344646857949556e-07, -8.344646857949556e-07, -3.5405155358603224e-05, -7.271740287251305e-06, -6.67572021484375e-05, -0.001621246337890625, -5.14984130859375e-05, -0.00012230873107910156, 0.0, -1.5497195136049413e-06, 0.0, -0.004378557205200195, -0.0001888275146484375, -0.0018788576126098633, -5.841255187988281e-06, -0.00136566162109375, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -0.00016176699136849493, -1.0490413842489943e-05, -2.491474151611328e-05, -1.52587890625e-05, -0.013957181945443153, -1.4305104514278355e-06, -0.0004878040053881705, 0.0, -6.23464584350586e-05, 0.0, -0.0006008148193359375, -3.814697265625e-06, -1.3113007298670709e-05, -2.1457672119140625e-06, -0.002277374267578125, -3.814697265625e-06, -5.53131103515625e-05, -0.0003452301025390625, -8.392333984375e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -2.384185791015625e-05, -2.3841855067985307e-07, -0.00010096874029841274, -1.1920928244535389e-07, -0.00495147705078125, -3.4332275390625e-05, -0.0001468658447265625, 0.0, -0.0048542022705078125, 0.0, -5.161762237548828e-05, -2.2649765014648438e-06, -4.649162292480469e-05, -3.3378546504536644e-06, -7.760358130326495e-05, 0.0, -3.4332275390625e-05, -0.0025882720947265625, -0.0002498626708984375, -0.009702562354505062, -1.311301275563892e-06, -3.814697265625e-06, -9.5367431640625e-06, -0.0002925153821706772, -0.0015794021310284734, -0.0002269744873046875, -0.00089263916015625, -0.0022230148315429688, -0.0007610321044921875, -6.770127296447754, -0.0018922088202089071], "choice_history": [97, 285, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "extend", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template37", "hole0": "extend"}, "_type": "Expr"}], "hole3": "use", "hole0": "Frostbolt", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Frostbolt", "_type": "Template27", "hole2": "MAGE", "hole1": 2}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.829374912341073, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(extend()))\n"}, {"score_history": [-0.0001506805419921875, -0.000278472900390625, -0.0001037067049765028, -8.344646857949556e-07, -8.344646857949556e-07, -3.5405155358603224e-05, -7.271740287251305e-06, -6.67572021484375e-05, -0.001621246337890625, -5.14984130859375e-05, -0.00012230873107910156, 0.0, -1.5497195136049413e-06, 0.0, -0.004378557205200195, -0.0001888275146484375, -0.0018788576126098633, -5.841255187988281e-06, -0.00136566162109375, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -0.00016176699136849493, -1.0490413842489943e-05, -2.491474151611328e-05, -1.52587890625e-05, -6.789349555969238, -1.1920928244535389e-07, -0.0011103034485131502, 0.0, -0.0003255605697631836, 0.0, -0.0010547637939453125, -1.1444091796875e-05, -2.3007363779470325e-05, -2.384185791015625e-06, -0.0022792816162109375, -5.7220458984375e-06, -6.103515625e-05, -0.00035858154296875, -8.96453857421875e-05, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -9.655952453613281e-06, 0.0, -2.193450927734375e-05, -2.3841855067985307e-07, -0.00010120715160155669, -1.1920928244535389e-07, -0.0051097869873046875, -3.24249267578125e-05, -0.000148773193359375, 0.0, -0.0057659149169921875, 0.0, -4.971027374267578e-05, -2.1457672119140625e-06, -4.649162292480469e-05, -3.3378546504536644e-06, -7.37891168682836e-05, 0.0, -3.4332275390625e-05, -0.0025653839111328125, -0.0002460479736328125, -0.009672998450696468, -1.4305104514278355e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0002846492570824921, -0.001601932686753571, -0.000255584716796875, -0.0009765625, -0.0021991729736328125, -0.00072479248046875, -0.005728840362280607, -0.00012087495269952342], "choice_history": [97, 285, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "heal", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "Frostbolt", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "heal"}, "hole3": "target_func", "hole0": "Frostbolt", "_type": "Template27", "hole2": "MAGE", "hole1": 2}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.841053794256098, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.heal)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score_history": [-0.0001506805419921875, -0.000278472900390625, -0.0001037067049765028, -8.344646857949556e-07, -8.344646857949556e-07, -3.5405155358603224e-05, -7.271740287251305e-06, -6.67572021484375e-05, -0.001621246337890625, -5.14984130859375e-05, -0.00012230873107910156, 0.0, -1.5497195136049413e-06, 0.0, -0.004378557205200195, -0.0001888275146484375, -0.0018788576126098633, -5.841255187988281e-06, -0.00136566162109375, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -0.00016176699136849493, -1.0490413842489943e-05, -2.491474151611328e-05, -1.52587890625e-05, -0.013957181945443153, -1.4305104514278355e-06, -0.0004878040053881705, 0.0, -6.23464584350586e-05, 0.0, -0.0006008148193359375, -3.814697265625e-06, -1.3113007298670709e-05, -2.1457672119140625e-06, -0.002277374267578125, -3.814697265625e-06, -5.53131103515625e-05, -0.0003452301025390625, -8.392333984375e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -2.384185791015625e-05, -2.3841855067985307e-07, -0.00010096874029841274, -1.1920928244535389e-07, -0.00495147705078125, -3.4332275390625e-05, -0.0001468658447265625, 0.0, -0.0048542022705078125, 0.0, -5.161762237548828e-05, -2.2649765014648438e-06, -4.649162292480469e-05, -3.3378546504536644e-06, -7.760358130326495e-05, 0.0, -3.4332275390625e-05, -0.0025882720947265625, -0.0002498626708984375, -0.009702562354505062, -1.311301275563892e-06, -3.814697265625e-06, -9.5367431640625e-06, -0.0002925153821706772, -0.0015794021310284734, -0.0002269744873046875, -0.00089263916015625, -7.016373634338379, -7.62939453125e-06, -0.031513214111328125, 0.0, -0.0001318453869316727, -7.152555099310121e-07, -0.0027153126429766417, -9.5367431640625e-06], "choice_history": [97, 285, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "Frostbolt", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Frostbolt", "_type": "Template27", "hole2": "MAGE", "hole1": 2}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.105123248009896, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n"}, {"score_history": [-0.0001506805419921875, -0.000278472900390625, -0.0001037067049765028, -8.344646857949556e-07, -8.344646857949556e-07, -3.5405155358603224e-05, -7.271740287251305e-06, -6.67572021484375e-05, -6.741476058959961, -0.0021953582763671875, -1.4662718058389146e-05, -3.814697265625e-06, -1.1920928244535389e-07, 0.0, -0.0003070831298828125, -3.0517578125e-05, -1.52587890625e-05, 0.0, -9.775161743164062e-06, 0.0, -0.0001201629638671875, -3.814697265625e-05, -1.7166048564831726e-05, -4.184246063232422e-05, -0.043625831604003906, -5.7220458984375e-06, -0.00035858154296875, -0.0003337860107421875, -0.000125885009765625, -5.7220458984375e-06, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -5.841255187988281e-06, 0.0, -1.1563299267436378e-05, -1.1920928244535389e-07, -0.00015460675058420748, -1.1920928244535389e-07, -0.3876008987426758, -8.0108642578125e-05, -6.67572021484375e-05, -1.9073486328125e-06, -0.103790283203125, 0.0, -0.0002256631851196289, -3.099440846199286e-06, -6.079673039494082e-05, -3.3378546504536644e-06, -5.8770092437043786e-05, -1.1920928244535389e-07, -4.00543212890625e-05, -0.0030517578125, -0.00023651123046875, -0.00861132051795721, -1.9073468138230965e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00032970221946015954, -0.0015410166233778, -6.866455078125e-05, -0.0016613006591796875, -0.002674102783203125, -0.0005950927734375, -0.006827829871326685, -0.00012385478476062417], "choice_history": [97, 285, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "Frostbolt", "_type": "Template5", "hole2": [{"hole2": "MAGE", "_type": "Template31", "hole1": 2, "hole0": "Frostbolt"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.30721575796494, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score_history": [-0.0001506805419921875, -0.000278472900390625, -0.0001037067049765028, -8.344646857949556e-07, -8.344646857949556e-07, -3.5405155358603224e-05, -7.271740287251305e-06, -6.67572021484375e-05, -0.001621246337890625, -5.14984130859375e-05, -0.00012230873107910156, 0.0, -1.5497195136049413e-06, 0.0, -0.004378557205200195, -0.0001888275146484375, -0.0018788576126098633, -5.841255187988281e-06, -0.00136566162109375, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -0.00016176699136849493, -1.0490413842489943e-05, -2.491474151611328e-05, -1.52587890625e-05, -0.013957181945443153, -1.4305104514278355e-06, -0.0004878040053881705, 0.0, -6.23464584350586e-05, 0.0, -0.0006008148193359375, -3.814697265625e-06, -1.3113007298670709e-05, -2.1457672119140625e-06, -0.002277374267578125, -3.814697265625e-06, -5.53131103515625e-05, -0.0003452301025390625, -8.392333984375e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -2.384185791015625e-05, -2.3841855067985307e-07, -0.00010096874029841274, -1.1920928244535389e-07, -5.445060729980469, -3.814697265625e-06, -8.0108642578125e-05, -0.0005950927734375, -2.09808349609375e-05, -0.9806175827980042, -4.768371127283899e-06, -0.002475738525390625, -5.340576171875e-05, -8.20159912109375e-05, -1.9073486328125e-06, -0.16576576232910156, 0.0, -0.0007972699822857976, -6.31808916295995e-06, -0.0013630390167236328, -7.82012939453125e-05, -3.814697265625e-06, -0.0026264190673828125, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.08725357055664062, -0.0001125335693359375, -0.0005568265914916992, 0.0, -0.036823153495788574, 0.0, -0.002043171552941203, -1.9073486328125e-06, -0.029598236083984375, -3.0517578125e-05, -0.023645401000976562, -1.1444091796875e-05, -0.001696347608231008, -4.768370445162873e-07, -0.18492577970027924, -9.178776963381097e-05, -6.103515625e-05, -0.0055637359619140625, -1.52587890625e-05, -0.000156402587890625, 0.0, -0.001399993896484375, -5.7220458984375e-06, -0.001134634017944336, -1.1920928244535389e-07, -0.5298216342926025, 0.0, -0.0002802609815262258, -3.3854863431770355e-05], "choice_history": [97, 285, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "append", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "hero", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Template77", "hole1": "append", "hole0": {"_type": "Name", "id": "targets"}}], "hole3": "use", "hole0": "Frostbolt", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Frostbolt", "_type": "Template27", "hole2": "MAGE", "hole1": 2}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.533553237106005, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.append(game.current_player.hero)\n"}, {"score_history": [-0.0001506805419921875, -0.000278472900390625, -0.0001037067049765028, -8.344646857949556e-07, -8.344646857949556e-07, -3.5405155358603224e-05, -7.271740287251305e-06, -6.67572021484375e-05, -0.001621246337890625, -5.14984130859375e-05, -0.00012230873107910156, 0.0, -1.5497195136049413e-06, 0.0, -0.004378557205200195, -0.0001888275146484375, -0.0018788576126098633, -5.841255187988281e-06, -0.00136566162109375, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -0.00016176699136849493, -1.0490413842489943e-05, -2.491474151611328e-05, -1.52587890625e-05, -0.013957181945443153, -1.4305104514278355e-06, -0.0004878040053881705, 0.0, -6.23464584350586e-05, 0.0, -0.0006008148193359375, -3.814697265625e-06, -1.3113007298670709e-05, -2.1457672119140625e-06, -0.002277374267578125, -3.814697265625e-06, -5.53131103515625e-05, -0.0003452301025390625, -8.392333984375e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -2.384185791015625e-05, -2.3841855067985307e-07, -0.00010096874029841274, -1.1920928244535389e-07, -5.445060729980469, -3.814697265625e-06, -8.0108642578125e-05, -0.0005950927734375, -2.09808349609375e-05, -0.6137323975563049, -4.172316494077677e-06, -0.016488075256347656, -1.9073486328125e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.01001739501953125, 0.0, -0.006561279296875, -1.9073486328125e-06, -0.08626352995634079, -3.385492891538888e-05, -0.011258482933044434, -1.9073486328125e-06, -0.008982596918940544, -9.655922440288123e-06, -0.0026531219482421875, -0.0150604248046875, -1.9073486328125e-06, -0.00054168701171875, 0.0, -0.001459360122680664, -8.344646857949556e-07, -0.00016342735034413636, 0.0, -3.4332275390625e-05, -8.0108642578125e-05, -0.0001506805419921875, -0.00011444091796875, -0.002587541937828064, -0.00032026408007368445, -0.12252235412597656, -2.47955322265625e-05, -0.02788066864013672, -5.7220458984375e-06, -0.010972976684570312, -6.103515625e-05, -0.0001068115234375, 0.0, -0.6925158500671387, -1.1920928244535389e-07, -0.06819713115692139, -1.7881377516459906e-06, -0.008411332033574581, -2.3841830625315197e-06, -0.0003948211669921875, -0.021757125854492188, -1.1444091796875e-05, -0.0003108978271484375, 0.0, -0.0001468658447265625, -9.5367431640625e-06, -6.508827209472656e-05, 0.0, -0.21504688262939453, 0.0, -0.13979721069335938, -0.0013370513916015625, -0.0006313323974609375, -1.52587890625e-05, -9.918212890625e-05, -4.38690185546875e-05, -0.20414039492607117, -0.00013350549852475524, -3.814697265625e-05, -0.842320442199707, -1.71661376953125e-05, -0.005848884582519531, -0.0001544952392578125, -0.00023185326426755637, -3.862326775561087e-05, -0.0006389617919921875, -0.03750038146972656, -4.1961669921875e-05, -0.24129867553710938, 0.0, -0.00026702880859375, 0.0, -0.0002048015594482422, -1.1920928244535389e-07, -2.586841583251953e-05, -1.5497195136049413e-06, -3.3497781259939075e-05, 0.0, -3.814697265625e-05, -0.00170135498046875, -4.9591064453125e-05, -0.2450547218322754, -7.152555099310121e-07, -3.814697265625e-06, -3.814697265625e-06, -0.00014221557648852468, -0.00019943629740737379, -0.000705718994140625, -0.036910057067871094, -5.53131103515625e-05, -0.00042724609375, 0.0, -0.010051727294921875, 0.0, -0.005173206329345703, -5.960462772236497e-07, -5.519390106201172e-05, -9.536738616588991e-07, -8.475740469293669e-05, 0.0, -3.814697265625e-05, -0.0010128021240234375, -7.62939453125e-05, -0.12781572341918945, -9.536738616588991e-07, -3.814697265625e-06, -5.7220458984375e-06, -0.00017904801643453538, -0.0002793053281493485], "choice_history": [97, 285, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 347, 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 47, 167, 0, 282, "x", "<EOS>", 17, 153, 13, 143, 13, 143, 21, 174, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 343, 8, 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 161, 17, 153, 21, 174, "<UNK>", "<EOS>", 343, 9, 346, 51, 176, "Null", "<EOS>", 358, 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 358, 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"body": {"comparators": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Compare", "ops": [{"_type": "Is"}], "left": {"value": {"value": {"_type": "Name", "id": "x"}, "_type": "Attribute", "attr": "card"}, "_type": "Attribute", "attr": "minion_type"}}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "x"}}]}, "_type": "Assign"}, {"body": [{"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "orelse": [{"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "If", "test": {"comparators": [{"value": "Null", "_type": "NameConstant"}], "_type": "Compare", "ops": [{"_type": "IsNot"}], "left": {"_type": "Name", "id": "<UNK>"}}}], "hole3": "use", "hole0": "Frostbolt", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Frostbolt", "_type": "Template27", "hole2": "MAGE", "hole1": 2}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -9.32432621084559, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is not Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n"}]}
{"index": 39, "beams": [{"score_history": [-2.09808349609375e-05, -1.71661376953125e-05, -6.186844257172197e-05, -2.479527029208839e-05, -7.152531907195225e-06, -6.121397018432617e-05, -2.09808349609375e-05, -4.172325134277344e-06, -1.9073486328125e-06, -0.0006771087646484375, -3.24249267578125e-05, -2.1457672119140625e-06, -3.0398367016459815e-05, 0.0, -3.814697265625e-06, -4.1960774979088455e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0003032684326171875, 0.0, -1.9073486328125e-06, -0.00130462646484375, -1.71661376953125e-05, -4.768358849105425e-06, -5.960446742392378e-06, -3.5558303352445364e-05, -2.3841855067985307e-07, -0.01165318489074707, 0.0, -0.0001068115234375, -2.86102294921875e-05, -6.711483001708984e-05, 0.0], "choice_history": [97, 283, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "FrostwolfGrunt", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 2, "hole0": "Frostwolf Grunt"}], "hole1": "MinionCard"}, "score": -0.01456782395732148, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"score_history": [-2.09808349609375e-05, -1.71661376953125e-05, -6.186844257172197e-05, -2.479527029208839e-05, -7.152531907195225e-06, -6.121397018432617e-05, -2.09808349609375e-05, -4.172325134277344e-06, -1.9073486328125e-06, -0.0006771087646484375, -3.24249267578125e-05, -2.1457672119140625e-06, -3.0398367016459815e-05, 0.0, -3.814697265625e-06, -4.1960774979088455e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0003032684326171875, 0.0, -1.9073486328125e-06, -0.00130462646484375, -1.71661376953125e-05, -4.768358849105425e-06, -5.960446742392378e-06, -3.5558303352445364e-05, -2.3841855067985307e-07, -5.251495361328125, 0.0, -0.0011043548583984375, -5.53131103515625e-05, -0.0006660223007202148, 0.0], "choice_history": [97, 283, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "divine_shield", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "FrostwolfGrunt", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 2, "hole0": "Frostwolf Grunt"}], "hole1": "MinionCard"}, "score": -5.256033154081223, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, divine_shield=True)\n"}, {"score_history": [-2.09808349609375e-05, -1.71661376953125e-05, -6.186844257172197e-05, -2.479527029208839e-05, -7.152531907195225e-06, -6.121397018432617e-05, -2.09808349609375e-05, -4.172325134277344e-06, -1.9073486328125e-06, -0.0006771087646484375, -3.24249267578125e-05, -2.1457672119140625e-06, -3.0398367016459815e-05, 0.0, -3.814697265625e-06, -4.1960774979088455e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0003032684326171875, 0.0, -1.9073486328125e-06, -0.00130462646484375, -1.71661376953125e-05, -4.768358849105425e-06, -5.960446742392378e-06, -3.5558303352445364e-05, -2.3841855067985307e-07, -5.314550399780273, 0.0, -0.0009479522705078125, -6.29425048828125e-05, -0.10129773616790771, -1.33514404296875e-05], "choice_history": [97, 283, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "spell_targetable", "<EOS>", 22, 175, "False", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "spell_targetable", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "FrostwolfGrunt", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 2, "hole0": "Frostwolf Grunt"}], "hole1": "MinionCard"}, "score": -5.419584484647629, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_targetable=True)\n"}, {"score_history": [-2.09808349609375e-05, -1.71661376953125e-05, -6.186844257172197e-05, -2.479527029208839e-05, -7.152531907195225e-06, -6.121397018432617e-05, -2.09808349609375e-05, -4.172325134277344e-06, -1.9073486328125e-06, -0.0006771087646484375, -3.24249267578125e-05, -2.1457672119140625e-06, -3.0398367016459815e-05, 0.0, -3.814697265625e-06, -4.1960774979088455e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0003032684326171875, 0.0, -1.9073486328125e-06, -6.952179908752441, -0.0006685256958007812, -0.00019744038581848145, -2.288818359375e-05, -9.894339200400282e-06, -1.1920928244535389e-07, -6.592483259737492e-05, 0.0, -0.001529693603515625, -0.001003265380859375, -6.67572021484375e-05, -0.21093976497650146, 0.0, -0.0001735687255859375, -4.76837158203125e-05, -0.0004423856735229492, 0.0, -0.22350692749023438, -0.000186920166015625, -0.23464475572109222, -1.9073486328125e-06, -0.0015048980712890625, -4.9591064453125e-05, -0.00017344951629638672, -1.1920928244535389e-07], "choice_history": [97, 283, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 354, 95, 336, "taunt", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": [{"value": {"value": true, "_type": "NameConstant"}, "_type": "keyword", "arg": "taunt"}, {"value": {"value": true, "_type": "NameConstant"}, "_type": "keyword", "arg": "taunt"}], "hole2": 2, "_type": "Template68", "hole1": 2, "hole0": "Minion"}], "hole3": "create_minion", "hole0": "FrostwolfGrunt", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 2, "hole0": "Frostwolf Grunt"}], "hole1": "MinionCard"}, "score": -7.628760173617579, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True, taunt=True)\n"}, {"score_history": [-2.09808349609375e-05, -1.71661376953125e-05, -6.186844257172197e-05, -2.479527029208839e-05, -7.152531907195225e-06, -6.121397018432617e-05, -2.09808349609375e-05, -4.172325134277344e-06, -1.9073486328125e-06, -0.0006771087646484375, -3.24249267578125e-05, -2.1457672119140625e-06, -3.0398367016459815e-05, 0.0, -3.814697265625e-06, -4.1960774979088455e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0003032684326171875, 0.0, -1.9073486328125e-06, -0.00130462646484375, -1.71661376953125e-05, -4.768358849105425e-06, -5.960446742392378e-06, -3.5558303352445364e-05, -2.3841855067985307e-07, -5.314550399780273, 0.0, -0.0009479522705078125, -6.29425048828125e-05, -2.351188898086548, -5.7220458984375e-06], "choice_history": [97, 283, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "spell_targetable", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "spell_targetable", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "FrostwolfGrunt", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 2, "hole0": "Frostwolf Grunt"}], "hole1": "MinionCard"}, "score": -7.669468017171738, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_targetable=True)\n"}, {"score_history": [-2.09808349609375e-05, -1.71661376953125e-05, -6.186844257172197e-05, -2.479527029208839e-05, -7.152531907195225e-06, -6.121397018432617e-05, -2.09808349609375e-05, -4.172325134277344e-06, -1.9073486328125e-06, -0.0006771087646484375, -3.24249267578125e-05, -2.1457672119140625e-06, -3.0398367016459815e-05, 0.0, -3.814697265625e-06, -4.1960774979088455e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0003032684326171875, 0.0, -1.9073486328125e-06, -0.00130462646484375, -1.71661376953125e-05, -4.768358849105425e-06, -5.960446742392378e-06, -3.5558303352445364e-05, -2.3841855067985307e-07, -7.817924499511719, -1.9073486328125e-06, -0.0002079010009765625, -4.57763671875e-05, -0.0005095005035400391, 0.0], "choice_history": [97, 283, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "windfury", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "windfury", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "FrostwolfGrunt", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 2, "hole0": "Frostwolf Grunt"}], "hole1": "MinionCard"}, "score": -7.821401687215683, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, windfury=True)\n"}, {"score_history": [-2.09808349609375e-05, -1.71661376953125e-05, -6.186844257172197e-05, -2.479527029208839e-05, -7.152531907195225e-06, -6.121397018432617e-05, -2.09808349609375e-05, -4.172325134277344e-06, -1.9073486328125e-06, -0.0006771087646484375, -3.24249267578125e-05, -2.1457672119140625e-06, -3.0398367016459815e-05, 0.0, -3.814697265625e-06, -4.1960774979088455e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -8.34650707244873, 0.0, -1.1444091796875e-05, -0.0014553070068359375, -9.5367431640625e-06, -4.649150469049346e-06, -1.5497195136049413e-06, -3.265973646193743e-05, -1.1920928244535389e-07, -0.0073403120040893555, 0.0, -7.62939453125e-05, -2.288818359375e-05, -7.271766662597656e-05, 0.0], "choice_history": [97, 283, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "p", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "FrostwolfGrunt", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 2, "hole0": "Frostwolf Grunt"}], "hole1": "MinionCard"}, "score": -8.35657315847822, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, p):\n        return Minion(2, 2, taunt=True)\n"}, {"score_history": [-2.09808349609375e-05, -1.71661376953125e-05, -6.186844257172197e-05, -2.479527029208839e-05, -7.152531907195225e-06, -6.121397018432617e-05, -2.09808349609375e-05, -4.172325134277344e-06, -1.9073486328125e-06, -8.320509910583496, -0.03369617462158203, -1.52587890625e-05, -0.000446319580078125, -8.106231689453125e-06, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -0.0005168914794921875, -0.000484466552734375, -3.4332275390625e-05, -5.722038622479886e-06, -3.8623809814453125e-05, -2.6583367798593827e-05, -0.00011074542999267578, -1.9073486328125e-06, -1.9073486328125e-06, -1.7642971215536818e-05, 0.0, -6.4849853515625e-05, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -9.655952453613281e-06, 0.0, -8.96453857421875e-05, -1.9073486328125e-06, -0.0001468658447265625, 0.0, -3.814697265625e-05, 0.0, -1.3828277587890625e-05, -5.91278076171875e-05, -0.14638710021972656, -3.814697265625e-06, -7.05718994140625e-05, -5.7220458984375e-06, -9.655952453613281e-06, -4.00543212890625e-05, -0.0003528594970703125, -0.00927734375, -0.0005931854248046875, -0.021562576293945312, 0.0, -5.7220458984375e-06, 0.0, -0.07153606414794922, 0.0, -1.33514404296875e-05, -0.0004863739013671875, -2.288818359375e-05, -2.741813204920618e-06, -1.0013530300057027e-05, -2.1490704966709018e-05, -2.3841855067985307e-07, -0.004367947578430176, 0.0, -5.340576171875e-05, -2.09808349609375e-05, -0.00010323524475097656, 0.0], "choice_history": [97, 283, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Frostwolf", " ", "Grunt", "<EOS>", 52, 179, "2", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "FrostwolfGrunt", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "MECH"}], "hole2": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"n": 2, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -8.611565323083113, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"score_history": [-2.09808349609375e-05, -1.71661376953125e-05, -6.186844257172197e-05, -2.479527029208839e-05, -7.152531907195225e-06, -6.121397018432617e-05, -2.09808349609375e-05, -4.172325134277344e-06, -1.9073486328125e-06, -0.0006771087646484375, -3.24249267578125e-05, -2.1457672119140625e-06, -3.0398367016459815e-05, 0.0, -3.814697265625e-06, -4.1960774979088455e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0003032684326171875, 0.0, -1.9073486328125e-06, -0.00130462646484375, -1.71661376953125e-05, -4.768358849105425e-06, -5.960446742392378e-06, -3.5558303352445364e-05, -2.3841855067985307e-07, -9.137595176696777, 0.0, -0.0010356903076171875, -2.86102294921875e-05, -0.0006946325302124023, -1.9073486328125e-06], "choice_history": [97, 283, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "SHAMAN", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "FrostwolfGrunt", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 2, "hole0": "Frostwolf Grunt"}], "hole1": "MinionCard"}, "score": -9.14206811959636, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, SHAMAN=True)\n"}, {"score_history": [-2.09808349609375e-05, -1.71661376953125e-05, -6.186844257172197e-05, -2.479527029208839e-05, -7.152531907195225e-06, -6.121397018432617e-05, -2.09808349609375e-05, -4.172325134277344e-06, -1.9073486328125e-06, -0.0006771087646484375, -3.24249267578125e-05, -2.1457672119140625e-06, -3.0398367016459815e-05, 0.0, -3.814697265625e-06, -4.1960774979088455e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0003032684326171875, 0.0, -1.9073486328125e-06, -0.00130462646484375, -1.71661376953125e-05, -4.768358849105425e-06, -5.960446742392378e-06, -3.5558303352445364e-05, -2.3841855067985307e-07, -9.285563468933105, 0.0, -0.0005817413330078125, -2.86102294921875e-05, -0.0001932382583618164, -1.9073486328125e-06], "choice_history": [97, 283, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "stealth", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "stealth", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "FrostwolfGrunt", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 2, "hole0": "Frostwolf Grunt"}], "hole1": "MinionCard"}, "score": -9.289081068586228, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, stealth=True)\n"}, {"score_history": [-2.09808349609375e-05, -1.71661376953125e-05, -6.186844257172197e-05, -2.479527029208839e-05, -7.152531907195225e-06, -6.121397018432617e-05, -2.09808349609375e-05, -4.172325134277344e-06, -1.9073486328125e-06, -0.0006771087646484375, -3.24249267578125e-05, -2.1457672119140625e-06, -3.0398367016459815e-05, 0.0, -3.814697265625e-06, -4.1960774979088455e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0003032684326171875, 0.0, -1.9073486328125e-06, -0.00130462646484375, -1.71661376953125e-05, -4.768358849105425e-06, -5.960446742392378e-06, -3.5558303352445364e-05, -2.3841855067985307e-07, -9.2609281539917, -0.20754623413085938, -0.0001125335693359375, -0.008355140686035156, -4.9591064453125e-05, -0.0011485815048217773, -1.9073486328125e-06], "choice_history": [97, 283, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "TurnEnded", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "FrostwolfGrunt", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 2, "hole0": "Frostwolf Grunt"}], "hole1": "MinionCard"}, "score": -9.480854244779465, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, TurnEnded=True)\n"}, {"score_history": [-2.09808349609375e-05, -1.71661376953125e-05, -6.186844257172197e-05, -2.479527029208839e-05, -7.152531907195225e-06, -6.121397018432617e-05, -2.09808349609375e-05, -4.172325134277344e-06, -1.9073486328125e-06, -0.0006771087646484375, -3.24249267578125e-05, -2.1457672119140625e-06, -3.0398367016459815e-05, 0.0, -3.814697265625e-06, -4.1960774979088455e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0003032684326171875, 0.0, -1.9073486328125e-06, -0.00130462646484375, -1.71661376953125e-05, -4.768358849105425e-06, -5.960446742392378e-06, -3.5558303352445364e-05, -2.3841855067985307e-07, -9.483006477355957, 0.0, -0.0003490447998046875, -9.1552734375e-05, -0.0003705024719238281, -1.9073486328125e-06], "choice_history": [97, 283, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "FrostwolfGrunt", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 2, "hole0": "Frostwolf Grunt"}], "hole1": "MinionCard"}, "score": -9.486531587194321, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, charge=True)\n"}, {"score_history": [-2.09808349609375e-05, -1.71661376953125e-05, -6.186844257172197e-05, -2.479527029208839e-05, -7.152531907195225e-06, -6.121397018432617e-05, -2.09808349609375e-05, -4.172325134277344e-06, -1.9073486328125e-06, -0.0006771087646484375, -3.24249267578125e-05, -2.1457672119140625e-06, -3.0398367016459815e-05, 0.0, -3.814697265625e-06, -4.1960774979088455e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0003032684326171875, 0.0, -1.9073486328125e-06, -0.00130462646484375, -1.71661376953125e-05, -4.768358849105425e-06, -5.960446742392378e-06, -3.5558303352445364e-05, -2.3841855067985307e-07, -9.496980667114258, -1.9073486328125e-06, -0.006188392639160156, -0.000118255615234375, -0.01678013801574707, -1.9073486328125e-06], "choice_history": [97, 283, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "DRUID", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "FrostwolfGrunt", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 2, "hole0": "Frostwolf Grunt"}], "hole1": "MinionCard"}, "score": -9.522783370565293, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, DRUID=True)\n"}, {"score_history": [-2.09808349609375e-05, -1.71661376953125e-05, -6.186844257172197e-05, -2.479527029208839e-05, -7.152531907195225e-06, -6.121397018432617e-05, -2.09808349609375e-05, -4.172325134277344e-06, -1.9073486328125e-06, -0.0006771087646484375, -3.24249267578125e-05, -2.1457672119140625e-06, -3.0398367016459815e-05, 0.0, -3.814697265625e-06, -4.1960774979088455e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0003032684326171875, 0.0, -1.9073486328125e-06, -6.952179908752441, -0.0006685256958007812, -0.00019744038581848145, -2.288818359375e-05, -9.894339200400282e-06, -1.1920928244535389e-07, -6.592483259737492e-05, 0.0, -0.001529693603515625, -0.001003265380859375, -6.67572021484375e-05, -0.21093976497650146, 0.0, -0.0001735687255859375, -4.76837158203125e-05, -0.0004423856735229492, 0.0, -0.22350692749023438, -0.000186920166015625, -1.8000468015670776, -1.9073486328125e-06, -0.0057048797607421875, -8.0108642578125e-05, -0.5239506959915161, -8.20159912109375e-05], "choice_history": [97, 283, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 354, 95, 336, "taunt", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "spell_targetable", "<EOS>", 22, 175, "False", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": [{"value": {"value": true, "_type": "NameConstant"}, "_type": "keyword", "arg": "taunt"}, {"value": {"value": true, "_type": "NameConstant"}, "_type": "keyword", "arg": "spell_targetable"}], "hole2": 2, "_type": "Template68", "hole1": 2, "hole0": "Minion"}], "hole3": "create_minion", "hole0": "FrostwolfGrunt", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 2, "hole0": "Frostwolf Grunt"}], "hole1": "MinionCard"}, "score": -9.72225186198829, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True, spell_targetable=True)\n"}, {"score_history": [-2.09808349609375e-05, -1.71661376953125e-05, -6.186844257172197e-05, -2.479527029208839e-05, -7.152531907195225e-06, -6.121397018432617e-05, -2.09808349609375e-05, -4.172325134277344e-06, -1.9073486328125e-06, -0.0006771087646484375, -3.24249267578125e-05, -2.1457672119140625e-06, -3.0398367016459815e-05, 0.0, -3.814697265625e-06, -4.1960774979088455e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0003032684326171875, 0.0, -1.9073486328125e-06, -10.540733337402344, -0.0005779266357421875, -0.0005797850317321718, -1.1920928244535389e-07, -0.00015116417489480227, 0.0], "choice_history": [97, 283, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "FrostwolfGrunt", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 2, "hole0": "Frostwolf Grunt"}], "hole1": "MinionCard"}, "score": -10.54338611680759, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}]}
{"index": 40, "beams": [{"score_history": [-9.918212890625e-05, -3.24249267578125e-05, -5.996135587338358e-05, -2.6344954676460475e-05, -3.576272320060525e-06, -4.5705586671829224e-05, -1.33514404296875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.001010894775390625, -2.09808349609375e-05, -1.1920928244535389e-07, -3.1828880310058594e-05, 0.0, -3.814697265625e-06, -5.161752415006049e-05, 0.0, -2.86102294921875e-05, 0.0, -5.91278076171875e-05, 0.0, -0.0005035400390625, 0.0, -1.9073486328125e-06, -0.0012454986572265625, -1.71661376953125e-05, -1.6093243175419047e-05, -1.764281842042692e-05, -5.245191459835041e-06, -1.1920928244535389e-07, -0.023939967155456543, 0.0, -0.0001068115234375, -3.24249267578125e-05, -0.00011849403381347656, 0.0], "choice_history": [97, 283, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 2, "hole0": 1}], "hole3": "create_minion", "hole0": "GoldshireFootman", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 1, "hole0": "Goldshire Footman"}], "hole1": "MinionCard"}, "score": -0.027496623233659534, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n"}, {"score_history": [-9.918212890625e-05, -3.24249267578125e-05, -5.996135587338358e-05, -2.6344954676460475e-05, -3.576272320060525e-06, -4.5705586671829224e-05, -1.33514404296875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.001010894775390625, -2.09808349609375e-05, -1.1920928244535389e-07, -3.1828880310058594e-05, 0.0, -3.814697265625e-06, -5.161752415006049e-05, 0.0, -2.86102294921875e-05, 0.0, -5.91278076171875e-05, 0.0, -0.0005035400390625, 0.0, -1.9073486328125e-06, -0.0012454986572265625, -1.71661376953125e-05, -1.6093243175419047e-05, -1.764281842042692e-05, -5.245191459835041e-06, -1.1920928244535389e-07, -4.129778861999512, 0.0, -0.0008754730224609375, -4.76837158203125e-05, -0.0007632970809936523, 0.0], "choice_history": [97, 283, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "2", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "divine_shield", "_type": "Template50", "hole1": 2, "hole0": 1}], "hole3": "create_minion", "hole0": "GoldshireFootman", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 1, "hole0": "Goldshire Footman"}], "hole1": "MinionCard"}, "score": -4.134764241412981, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, divine_shield=True)\n"}, {"score_history": [-9.918212890625e-05, -3.24249267578125e-05, -5.996135587338358e-05, -2.6344954676460475e-05, -3.576272320060525e-06, -4.5705586671829224e-05, -1.33514404296875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.001010894775390625, -2.09808349609375e-05, -1.1920928244535389e-07, -3.1828880310058594e-05, 0.0, -3.814697265625e-06, -5.161752415006049e-05, 0.0, -2.86102294921875e-05, 0.0, -5.91278076171875e-05, 0.0, -0.0005035400390625, 0.0, -1.9073486328125e-06, -0.0012454986572265625, -1.71661376953125e-05, -1.6093243175419047e-05, -1.764281842042692e-05, -5.245191459835041e-06, -1.1920928244535389e-07, -5.368799209594727, 0.0, -0.0007228851318359375, -0.000102996826171875, -0.1417917013168335, -3.814697265625e-06], "choice_history": [97, 283, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "2", "<EOS>", "spell_targetable", "<EOS>", 22, 175, "False", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "spell_targetable", "_type": "Template50", "hole1": 2, "hole0": 1}], "hole3": "create_minion", "hole0": "GoldshireFootman", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 1, "hole0": "Goldshire Footman"}], "hole1": "MinionCard"}, "score": -5.514719533161028, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, spell_targetable=True)\n"}, {"score_history": [-9.918212890625e-05, -3.24249267578125e-05, -5.996135587338358e-05, -2.6344954676460475e-05, -3.576272320060525e-06, -4.5705586671829224e-05, -1.33514404296875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.001010894775390625, -2.09808349609375e-05, -1.1920928244535389e-07, -3.1828880310058594e-05, 0.0, -3.814697265625e-06, -5.161752415006049e-05, 0.0, -2.86102294921875e-05, 0.0, -5.91278076171875e-05, 0.0, -0.0005035400390625, 0.0, -1.9073486328125e-06, -0.0012454986572265625, -1.71661376953125e-05, -1.6093243175419047e-05, -1.764281842042692e-05, -5.245191459835041e-06, -1.1920928244535389e-07, -6.715755462646484, -1.9073486328125e-06, -0.00022125244140625, -5.53131103515625e-05, -0.0005972385406494141, 0.0], "choice_history": [97, 283, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "2", "<EOS>", "windfury", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "windfury", "_type": "Template50", "hole1": 2, "hole0": 1}], "hole3": "create_minion", "hole0": "GoldshireFootman", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 1, "hole0": "Goldshire Footman"}], "hole1": "MinionCard"}, "score": -6.719930099681719, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, windfury=True)\n"}, {"score_history": [-9.918212890625e-05, -3.24249267578125e-05, -5.996135587338358e-05, -2.6344954676460475e-05, -3.576272320060525e-06, -4.5705586671829224e-05, -1.33514404296875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.001010894775390625, -2.09808349609375e-05, -1.1920928244535389e-07, -3.1828880310058594e-05, 0.0, -3.814697265625e-06, -5.161752415006049e-05, 0.0, -2.86102294921875e-05, 0.0, -5.91278076171875e-05, 0.0, -0.0005035400390625, 0.0, -1.9073486328125e-06, -0.0012454986572265625, -1.71661376953125e-05, -1.6093243175419047e-05, -1.764281842042692e-05, -5.245191459835041e-06, -1.1920928244535389e-07, -5.368799209594727, 0.0, -0.0007228851318359375, -0.000102996826171875, -2.0346500873565674, -3.814697265625e-06], "choice_history": [97, 283, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "2", "<EOS>", "spell_targetable", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "spell_targetable", "_type": "Template50", "hole1": 2, "hole0": 1}], "hole3": "create_minion", "hole0": "GoldshireFootman", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 1, "hole0": "Goldshire Footman"}], "hole1": "MinionCard"}, "score": -7.407577919200762, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, spell_targetable=True)\n"}, {"score_history": [-9.918212890625e-05, -3.24249267578125e-05, -5.996135587338358e-05, -2.6344954676460475e-05, -3.576272320060525e-06, -4.5705586671829224e-05, -1.33514404296875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.001010894775390625, -2.09808349609375e-05, -1.1920928244535389e-07, -3.1828880310058594e-05, 0.0, -3.814697265625e-06, -5.161752415006049e-05, 0.0, -2.86102294921875e-05, 0.0, -5.91278076171875e-05, 0.0, -0.0005035400390625, 0.0, -1.9073486328125e-06, -6.998279571533203, -0.0006971359252929688, -0.0002369508147239685, -2.6702880859375e-05, -7.331369124585763e-05, -1.1920928244535389e-07, -4.3749274482252076e-05, 0.0, -0.0017566680908203125, -0.0019073486328125, -7.62939453125e-05, -0.22972416877746582, 0.0, -0.0001354217529296875, -3.24249267578125e-05, -0.0003827810287475586, 0.0, -0.09886837005615234, -0.0002288818359375, -0.2516518831253052, 0.0, -0.00052642822265625, -2.6702880859375e-05, -0.00010526180267333984, -1.1920928244535389e-07], "choice_history": [97, 283, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "1", "<EOS>", "2", "<EOS>", 354, 95, 336, "taunt", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": [{"value": {"value": true, "_type": "NameConstant"}, "_type": "keyword", "arg": "taunt"}, {"value": {"value": true, "_type": "NameConstant"}, "_type": "keyword", "arg": "taunt"}], "hole2": 2, "_type": "Template68", "hole1": 1, "hole0": "Minion"}], "hole3": "create_minion", "hole0": "GoldshireFootman", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 1, "hole0": "Goldshire Footman"}], "hole1": "MinionCard"}, "score": -7.586777457953737, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True, taunt=True)\n"}, {"score_history": [-9.918212890625e-05, -3.24249267578125e-05, -5.996135587338358e-05, -2.6344954676460475e-05, -3.576272320060525e-06, -4.5705586671829224e-05, -1.33514404296875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.001010894775390625, -2.09808349609375e-05, -1.1920928244535389e-07, -3.1828880310058594e-05, 0.0, -3.814697265625e-06, -5.161752415006049e-05, 0.0, -2.86102294921875e-05, 0.0, -5.91278076171875e-05, 0.0, -7.79914665222168, 0.0, -7.62939453125e-06, -0.001338958740234375, -9.5367431640625e-06, -4.804133641300723e-05, -4.172316494077677e-06, -6.318066425592406e-06, -1.1920928244535389e-07, -0.013327240943908691, 0.0, -7.82012939453125e-05, -3.0517578125e-05, -0.00012421607971191406, 0.0], "choice_history": [97, 283, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 130, 287, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "p", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 2, "hole0": 1}], "hole3": "create_minion", "hole0": "GoldshireFootman", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 1, "hole0": "Goldshire Footman"}], "hole1": "MinionCard"}, "score": -7.815613316873154, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, p):\n        return Minion(1, 2, taunt=True)\n"}, {"score_history": [-9.918212890625e-05, -3.24249267578125e-05, -5.996135587338358e-05, -2.6344954676460475e-05, -3.576272320060525e-06, -4.5705586671829224e-05, -1.33514404296875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.001010894775390625, -2.09808349609375e-05, -1.1920928244535389e-07, -3.1828880310058594e-05, 0.0, -3.814697265625e-06, -5.161752415006049e-05, 0.0, -2.86102294921875e-05, 0.0, -5.91278076171875e-05, 0.0, -0.0005035400390625, 0.0, -1.9073486328125e-06, -0.0012454986572265625, -1.71661376953125e-05, -1.6093243175419047e-05, -1.764281842042692e-05, -5.245191459835041e-06, -1.1920928244535389e-07, -8.48474407196045, 0.0, -0.000843048095703125, -6.29425048828125e-05, -0.00040471553802490234, 0.0], "choice_history": [97, 283, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "SHAMAN", "_type": "Template50", "hole1": 2, "hole0": 1}], "hole3": "create_minion", "hole0": "GoldshireFootman", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 1, "hole0": "Goldshire Footman"}], "hole1": "MinionCard"}, "score": -8.489353703693254, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, SHAMAN=True)\n"}, {"score_history": [-9.918212890625e-05, -3.24249267578125e-05, -5.996135587338358e-05, -2.6344954676460475e-05, -3.576272320060525e-06, -4.5705586671829224e-05, -1.33514404296875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -7.712943077087402, -0.1315593719482422, -1.9073486328125e-05, -0.0006885528564453125, -7.987022399902344e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.00159454345703125, -0.00025177001953125, -4.00543212890625e-05, -1.1920922133867862e-06, -4.8041343688964844e-05, -1.6808447981020436e-05, -6.29425048828125e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.4227468606550246e-05, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -6.866455078125e-05, -3.814697265625e-06, -6.103515625e-05, -3.814697265625e-06, -6.4849853515625e-05, 0.0, -1.3470649719238281e-05, -3.4332275390625e-05, -0.5024890899658203, 0.0, -0.000217437744140625, -5.7220458984375e-06, -1.9073486328125e-05, -2.47955322265625e-05, -0.0001583099365234375, -0.024188995361328125, -0.0005970001220703125, -0.07871437072753906, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.05020618438720703, 0.0, -9.5367431640625e-06, -0.00048828125, -3.0517578125e-05, -1.049041748046875e-05, -1.0132738680113107e-05, -7.986986929608975e-06, -1.1920928244535389e-07, -0.005897641181945801, 0.0, -4.9591064453125e-05, -2.47955322265625e-05, -0.00010502338409423828, 0.0], "choice_history": [97, 283, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Goldshire", " ", "Footman", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 2, "hole0": 1}], "hole3": "create_minion", "hole0": "GoldshireFootman", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "MECH"}], "hole2": [{"_type": "Str", "s": "Goldshire Footman"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -8.511206674772659, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n"}, {"score_history": [-9.918212890625e-05, -3.24249267578125e-05, -5.996135587338358e-05, -2.6344954676460475e-05, -3.576272320060525e-06, -4.5705586671829224e-05, -1.33514404296875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.001010894775390625, -2.09808349609375e-05, -1.1920928244535389e-07, -3.1828880310058594e-05, 0.0, -3.814697265625e-06, -5.161752415006049e-05, 0.0, -2.86102294921875e-05, 0.0, -5.91278076171875e-05, 0.0, -0.0005035400390625, 0.0, -1.9073486328125e-06, -0.0012454986572265625, -1.71661376953125e-05, -1.6093243175419047e-05, -1.764281842042692e-05, -5.245191459835041e-06, -1.1920928244535389e-07, -8.749610900878906, 0.0, -0.00034332275390625, -0.0001010894775390625, -0.0005782842636108398, -1.9073486328125e-06], "choice_history": [97, 283, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 2, "hole0": 1}], "hole3": "create_minion", "hole0": "GoldshireFootman", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 1, "hole0": "Goldshire Footman"}], "hole1": "MinionCard"}, "score": -8.75393443031679, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, charge=True)\n"}, {"score_history": [-9.918212890625e-05, -3.24249267578125e-05, -5.996135587338358e-05, -2.6344954676460475e-05, -3.576272320060525e-06, -4.5705586671829224e-05, -1.33514404296875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.001010894775390625, -2.09808349609375e-05, -1.1920928244535389e-07, -3.1828880310058594e-05, 0.0, -3.814697265625e-06, -5.161752415006049e-05, 0.0, -2.86102294921875e-05, 0.0, -5.91278076171875e-05, 0.0, -0.0005035400390625, 0.0, -1.9073486328125e-06, -0.0012454986572265625, -1.71661376953125e-05, -1.6093243175419047e-05, -1.764281842042692e-05, -5.245191459835041e-06, -1.1920928244535389e-07, -8.902875900268555, 0.0, -0.001102447509765625, -0.0001068115234375, -0.0034848451614379883, -1.9073486328125e-06], "choice_history": [97, 283, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "2", "<EOS>", "Attack", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "Attack", "_type": "Template50", "hole1": 2, "hole0": 1}], "hole3": "create_minion", "hole0": "GoldshireFootman", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 1, "hole0": "Goldshire Footman"}], "hole1": "MinionCard"}, "score": -8.910870837406023, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, Attack=True)\n"}, {"score_history": [-9.918212890625e-05, -3.24249267578125e-05, -5.996135587338358e-05, -2.6344954676460475e-05, -3.576272320060525e-06, -4.5705586671829224e-05, -1.33514404296875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -7.712943077087402, -0.1315593719482422, -1.9073486328125e-05, -0.0006885528564453125, -7.987022399902344e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.00159454345703125, -0.00025177001953125, -4.00543212890625e-05, -1.1920922133867862e-06, -4.8041343688964844e-05, -1.6808447981020436e-05, -6.29425048828125e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.4227468606550246e-05, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -6.866455078125e-05, -3.814697265625e-06, -6.103515625e-05, -3.814697265625e-06, -6.4849853515625e-05, 0.0, -1.3470649719238281e-05, -3.4332275390625e-05, -0.9609642028808594, -3.814697265625e-06, -8.7738037109375e-05, -7.62939453125e-06, -1.52587890625e-05, -2.6702880859375e-05, -0.0001125335693359375, -0.0364990234375, -0.0006237030029296875, -0.014197349548339844, 0.0, -3.814697265625e-06, 0.0, -0.07124805450439453, 0.0, -9.5367431640625e-06, -0.00052642822265625, -3.62396240234375e-05, -1.2278556823730469e-05, -1.0490362910786644e-05, -7.510153409384657e-06, -1.1920928244535389e-07, -0.005792737007141113, 0.0, -4.9591064453125e-05, -2.47955322265625e-05, -0.00010120868682861328, 0.0], "choice_history": [97, 283, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Goldshire", " ", "Footman", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 2, "hole0": 1}], "hole3": "create_minion", "hole0": "GoldshireFootman", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "MECH"}], "hole2": [{"_type": "Str", "s": "Goldshire Footman"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -8.93830661793367, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n"}, {"score_history": [-9.918212890625e-05, -3.24249267578125e-05, -5.996135587338358e-05, -2.6344954676460475e-05, -3.576272320060525e-06, -4.5705586671829224e-05, -1.33514404296875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.001010894775390625, -2.09808349609375e-05, -1.1920928244535389e-07, -3.1828880310058594e-05, 0.0, -3.814697265625e-06, -5.161752415006049e-05, 0.0, -2.86102294921875e-05, 0.0, -5.91278076171875e-05, 0.0, -0.0005035400390625, 0.0, -1.9073486328125e-06, -0.0012454986572265625, -1.71661376953125e-05, -1.6093243175419047e-05, -1.764281842042692e-05, -5.245191459835041e-06, -1.1920928244535389e-07, -8.971719741821289, 0.0, -0.0003986358642578125, -3.814697265625e-05, -0.0001951456069946289, 0.0], "choice_history": [97, 283, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "2", "<EOS>", "stealth", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "stealth", "_type": "Template50", "hole1": 2, "hole0": 1}], "hole3": "create_minion", "hole0": "GoldshireFootman", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 1, "hole0": "Goldshire Footman"}], "hole1": "MinionCard"}, "score": -8.975650595859392, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, stealth=True)\n"}, {"score_history": [-9.918212890625e-05, -3.24249267578125e-05, -5.996135587338358e-05, -2.6344954676460475e-05, -3.576272320060525e-06, -4.5705586671829224e-05, -1.33514404296875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.001010894775390625, -2.09808349609375e-05, -1.1920928244535389e-07, -3.1828880310058594e-05, 0.0, -3.814697265625e-06, -5.161752415006049e-05, 0.0, -2.86102294921875e-05, 0.0, -5.91278076171875e-05, 0.0, -0.0005035400390625, 0.0, -1.9073486328125e-06, -0.0012454986572265625, -1.71661376953125e-05, -1.6093243175419047e-05, -1.764281842042692e-05, -5.245191459835041e-06, -1.1920928244535389e-07, -9.063392639160156, -0.14821624755859375, -0.000125885009765625, -0.006537437438964844, -5.53131103515625e-05, -0.001009225845336914, -1.9073486328125e-06], "choice_history": [97, 283, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "TurnEnded", "_type": "Template50", "hole1": 2, "hole0": 1}], "hole3": "create_minion", "hole0": "GoldshireFootman", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 1, "hole0": "Goldshire Footman"}], "hole1": "MinionCard"}, "score": -9.222637581065996, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, TurnEnded=True)\n"}, {"score_history": [-9.918212890625e-05, -3.24249267578125e-05, -5.996135587338358e-05, -2.6344954676460475e-05, -3.576272320060525e-06, -4.5705586671829224e-05, -1.33514404296875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.001010894775390625, -2.09808349609375e-05, -1.1920928244535389e-07, -3.1828880310058594e-05, 0.0, -3.814697265625e-06, -5.161752415006049e-05, 0.0, -2.86102294921875e-05, 0.0, -5.91278076171875e-05, 0.0, -0.0005035400390625, 0.0, -1.9073486328125e-06, -10.66470718383789, -0.00070953369140625, -0.0008059146930463612, -8.344646857949556e-07, -0.00015091670502442867, 0.0], "choice_history": [97, 283, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 1}], "hole3": "create_minion", "hole0": "GoldshireFootman", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 1, "hole0": "Goldshire Footman"}], "hole1": "MinionCard"}, "score": -10.668371543728988, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2)\n"}]}
{"index": 41, "beams": [{"score_history": [-3.62396240234375e-05, -3.814697265625e-05, -0.00022290059132501483, -3.099436753473128e-06, -4.410734163684538e-06, -1.0669231414794922e-05, -2.3245811462402344e-05, -1.8358125089434907e-05, -1.52587890625e-05, -0.0028171539306640625, -0.0001506805419921875, 0.0, -3.921985626220703e-05, -4.053113570989808e-06, -4.780292510986328e-05, -1.3231212506070733e-05, -7.748603820800781e-06, -0.0004775524139404297, -1.9073486328125e-06, -0.0005944966687820852, -3.3378591979271732e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -0.0005384683609008789, -7.390969585685525e-06, -0.003016233444213867, -1.9073486328125e-06, -9.918212890625e-05, 0.0, -0.000110626220703125, 0.0, -1.9073486328125e-05, -0.0005512237548828125, -5.7220458984375e-06, -5.4836082199472e-06, -6.556489552167477e-06, -4.650899791158736e-05, -2.3841855067985307e-07, -0.0029518466908484697, 0.0, -0.0001888275146484375, -0.0033102035522460938, -0.0008488893508911133, -2.09808349609375e-05, -0.000240325927734375, -0.019910812377929688, -0.0007228851318359375, -0.00017344953084830195, -0.004974484443664551, -0.33206653594970703, -0.000255584716796875, -6.67572021484375e-05, -2.288818359375e-05, -0.0010069655254483223, -0.00012981891632080078, 0.0, -0.0011577606201171875, -0.002307891845703125, -0.0006885528564453125, -0.004196046851575375, 0.0, -5.14984130859375e-05, -0.0002231597900390625, -0.0017306709196418524, -0.00037038279697299004, 0.0], "choice_history": [97, 283, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 45, 150, 21, 174, "Minion", "Selector", "<EOS>", 347, 74, 297, "MURLOC", "<EOS>", 88, 325, "Both", "Player", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Template60", "hole0": "MURLOC"}, {"_type": "Template79", "hole0": "BothPlayer"}]}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "GrimscaleOracle", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type", "hole0": "Grimscale Oracle", "_type": "Template26", "hole2": "COMMON", "hole1": 1}], "hole1": "MinionCard"}, "score": -0.38657060779698327, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n"}, {"score_history": [-3.62396240234375e-05, -3.814697265625e-05, -0.00022290059132501483, -3.099436753473128e-06, -4.410734163684538e-06, -1.0669231414794922e-05, -2.3245811462402344e-05, -1.8358125089434907e-05, -1.52587890625e-05, -0.0028171539306640625, -0.0001506805419921875, 0.0, -3.921985626220703e-05, -4.053113570989808e-06, -4.780292510986328e-05, -1.3231212506070733e-05, -7.748603820800781e-06, -0.0004775524139404297, -1.9073486328125e-06, -0.0005944966687820852, -3.3378591979271732e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -0.0005384683609008789, -7.390969585685525e-06, -0.003016233444213867, -1.9073486328125e-06, -9.918212890625e-05, 0.0, -0.000110626220703125, 0.0, -1.9073486328125e-05, -0.0005512237548828125, -5.7220458984375e-06, -5.4836082199472e-06, -6.556489552167477e-06, -4.650899791158736e-05, -2.3841855067985307e-07, -0.0029518466908484697, 0.0, -0.0001888275146484375, -0.0033102035522460938, -0.0008488893508911133, -2.09808349609375e-05, -0.000240325927734375, -0.019910812377929688, -0.0007228851318359375, -0.00017344953084830195, -0.004974484443664551, -1.2909536361694336, -6.67572021484375e-05, -0.00033295387402176857, -0.00018608442042022943, -5.4596363042946905e-05, -1.0646971464157104, -0.0012760133249685168, -2.3245540432981215e-05], "choice_history": [97, 283, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "Minion", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template55", "hole1": "MinionSelector", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "GrimscaleOracle", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type", "hole0": "Grimscale Oracle", "_type": "Template26", "hole2": "COMMON", "hole1": 1}], "hole1": "MinionCard"}, "score": -2.399886526519566, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            MinionSelector()))])\n"}, {"score_history": [-3.62396240234375e-05, -3.814697265625e-05, -0.00022290059132501483, -3.099436753473128e-06, -4.410734163684538e-06, -1.0669231414794922e-05, -2.3245811462402344e-05, -1.8358125089434907e-05, -1.52587890625e-05, -0.0028171539306640625, -0.0001506805419921875, 0.0, -3.921985626220703e-05, -4.053113570989808e-06, -4.780292510986328e-05, -1.3231212506070733e-05, -7.748603820800781e-06, -0.0004775524139404297, -1.9073486328125e-06, -0.0005944966687820852, -3.3378591979271732e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -0.0005384683609008789, -7.390969585685525e-06, -0.003016233444213867, -1.9073486328125e-06, -9.918212890625e-05, 0.0, -0.000110626220703125, 0.0, -1.9073486328125e-05, -0.0005512237548828125, -5.7220458984375e-06, -5.4836082199472e-06, -6.556489552167477e-06, -4.650899791158736e-05, -2.3841855067985307e-07, -0.0029518466908484697, 0.0, -0.0001888275146484375, -0.0033102035522460938, -0.0008488893508911133, -2.09808349609375e-05, -0.000240325927734375, -0.019910812377929688, -0.0007228851318359375, -0.00017344953084830195, -0.004974484443664551, -1.2909536361694336, -6.67572021484375e-05, -0.00033295387402176857, -0.00018608442042022943, -5.4596363042946905e-05, -1.4369581937789917, -0.0013366930652409792], "choice_history": [97, 283, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "Attack", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template55", "hole1": "Attack", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "GrimscaleOracle", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type", "hole0": "Grimscale Oracle", "_type": "Template26", "hole2": "COMMON", "hole1": 1}], "hole1": "MinionCard"}, "score": -2.772185008082687, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            Attack()))])\n"}, {"score_history": [-3.62396240234375e-05, -3.814697265625e-05, -0.00022290059132501483, -3.099436753473128e-06, -4.410734163684538e-06, -1.0669231414794922e-05, -2.3245811462402344e-05, -1.8358125089434907e-05, -1.52587890625e-05, -0.0028171539306640625, -0.0001506805419921875, 0.0, -3.921985626220703e-05, -4.053113570989808e-06, -4.780292510986328e-05, -1.3231212506070733e-05, -7.748603820800781e-06, -0.0004775524139404297, -1.9073486328125e-06, -0.0005944966687820852, -3.3378591979271732e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -0.0005384683609008789, -7.390969585685525e-06, -0.003016233444213867, -1.9073486328125e-06, -9.918212890625e-05, 0.0, -0.000110626220703125, 0.0, -1.9073486328125e-05, -0.0005512237548828125, -5.7220458984375e-06, -5.4836082199472e-06, -6.556489552167477e-06, -4.650899791158736e-05, -2.3841855067985307e-07, -0.0029518466908484697, 0.0, -0.0001888275146484375, -0.0033102035522460938, -0.0008488893508911133, -2.09808349609375e-05, -0.000240325927734375, -0.019910812377929688, -0.0007228851318359375, -0.00017344953084830195, -0.004974484443664551, -1.2909536361694336, -6.67572021484375e-05, -0.00033295387402176857, -0.00018608442042022943, -5.4596363042946905e-05, -1.8883322477340698, -0.0007468127878382802], "choice_history": [97, 283, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "Murlocs", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template55", "hole1": "Murlocs", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "GrimscaleOracle", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type", "hole0": "Grimscale Oracle", "_type": "Template26", "hole2": "COMMON", "hole1": 1}], "hole1": "MinionCard"}, "score": -3.2229691817603623, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            Murlocs()))])\n"}, {"score_history": [-3.62396240234375e-05, -3.814697265625e-05, -0.00022290059132501483, -3.099436753473128e-06, -4.410734163684538e-06, -1.0669231414794922e-05, -2.3245811462402344e-05, -1.8358125089434907e-05, -1.52587890625e-05, -0.0028171539306640625, -0.0001506805419921875, 0.0, -3.921985626220703e-05, -4.053113570989808e-06, -4.780292510986328e-05, -1.3231212506070733e-05, -7.748603820800781e-06, -0.0004775524139404297, -1.9073486328125e-06, -0.0005944966687820852, -3.3378591979271732e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -0.0005384683609008789, -7.390969585685525e-06, -0.003016233444213867, -1.9073486328125e-06, -9.918212890625e-05, 0.0, -0.000110626220703125, 0.0, -1.9073486328125e-05, -0.0005512237548828125, -5.7220458984375e-06, -5.4836082199472e-06, -6.556489552167477e-06, -4.650899791158736e-05, -2.3841855067985307e-07, -0.0029518466908484697, 0.0, -0.0001888275146484375, -0.0033102035522460938, -0.0008488893508911133, -2.09808349609375e-05, -0.000240325927734375, -0.019910812377929688, -0.0007228851318359375, -0.00017344953084830195, -0.004974484443664551, -1.2909536361694336, -6.67572021484375e-05, -0.00033295387402176857, -0.00018608442042022943, -5.4596363042946905e-05, -2.1367719173431396, -0.0007468127878382802], "choice_history": [97, 283, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "have", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template55", "hole1": "have", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "GrimscaleOracle", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type", "hole0": "Grimscale Oracle", "_type": "Template26", "hole2": "COMMON", "hole1": 1}], "hole1": "MinionCard"}, "score": -3.471408851369432, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            have()))])\n"}, {"score_history": [-3.62396240234375e-05, -3.814697265625e-05, -0.00022290059132501483, -3.099436753473128e-06, -4.410734163684538e-06, -1.0669231414794922e-05, -2.3245811462402344e-05, -1.8358125089434907e-05, -1.52587890625e-05, -0.0028171539306640625, -0.0001506805419921875, 0.0, -3.921985626220703e-05, -4.053113570989808e-06, -4.780292510986328e-05, -1.3231212506070733e-05, -7.748603820800781e-06, -0.0004775524139404297, -1.9073486328125e-06, -0.0005944966687820852, -3.3378591979271732e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -0.0005384683609008789, -7.390969585685525e-06, -0.003016233444213867, -1.9073486328125e-06, -9.918212890625e-05, 0.0, -0.000110626220703125, 0.0, -1.9073486328125e-05, -0.0005512237548828125, -5.7220458984375e-06, -5.4836082199472e-06, -6.556489552167477e-06, -4.650899791158736e-05, -2.3841855067985307e-07, -0.0029518466908484697, 0.0, -0.0001888275146484375, -0.0033102035522460938, -0.0008488893508911133, -2.09808349609375e-05, -0.000240325927734375, -0.019910812377929688, -0.0007228851318359375, -0.00017344953084830195, -0.004974484443664551, -1.2909536361694336, -6.67572021484375e-05, -0.00033295387402176857, -0.00018608442042022943, -5.4596363042946905e-05, -2.406100273132324, -6.699550431221724e-05], "choice_history": [97, 283, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template55", "hole1": "1", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "GrimscaleOracle", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type", "hole0": "Grimscale Oracle", "_type": "Template26", "hole2": "COMMON", "hole1": 1}], "hole1": "MinionCard"}, "score": -3.7400573898750906, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(1()))])\n"}, {"score_history": [-3.62396240234375e-05, -3.814697265625e-05, -0.00022290059132501483, -3.099436753473128e-06, -4.410734163684538e-06, -1.0669231414794922e-05, -2.3245811462402344e-05, -1.8358125089434907e-05, -1.52587890625e-05, -0.0028171539306640625, -0.0001506805419921875, 0.0, -3.921985626220703e-05, -4.053113570989808e-06, -4.780292510986328e-05, -1.3231212506070733e-05, -7.748603820800781e-06, -0.0004775524139404297, -1.9073486328125e-06, -0.0005944966687820852, -3.3378591979271732e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -0.0005384683609008789, -7.390969585685525e-06, -0.003016233444213867, -1.9073486328125e-06, -9.918212890625e-05, 0.0, -0.000110626220703125, 0.0, -1.9073486328125e-05, -0.0005512237548828125, -5.7220458984375e-06, -5.4836082199472e-06, -6.556489552167477e-06, -4.650899791158736e-05, -2.3841855067985307e-07, -0.0029518466908484697, 0.0, -0.0001888275146484375, -0.0033102035522460938, -0.0008488893508911133, -2.09808349609375e-05, -0.000240325927734375, -0.019910812377929688, -0.0007228851318359375, -0.00017344953084830195, -0.004974484443664551, -1.2909536361694336, -6.67572021484375e-05, -0.00033295387402176857, -0.00018608442042022943, -5.4596363042946905e-05, -3.24576473236084, -0.25138020515441895], "choice_history": [97, 283, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "Grimscale", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template55", "hole1": "Grimscale", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "GrimscaleOracle", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type", "hole0": "Grimscale Oracle", "_type": "Template26", "hole2": "COMMON", "hole1": 1}], "hole1": "MinionCard"}, "score": -4.831035058753713, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            Grimscale()))])\n"}, {"score_history": [-3.62396240234375e-05, -3.814697265625e-05, -0.00022290059132501483, -3.099436753473128e-06, -4.410734163684538e-06, -1.0669231414794922e-05, -2.3245811462402344e-05, -1.8358125089434907e-05, -1.52587890625e-05, -0.0028171539306640625, -0.0001506805419921875, 0.0, -3.921985626220703e-05, -4.053113570989808e-06, -4.780292510986328e-05, -1.3231212506070733e-05, -7.748603820800781e-06, -0.0004775524139404297, -1.9073486328125e-06, -0.0005944966687820852, -3.3378591979271732e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -0.0005384683609008789, -7.390969585685525e-06, -0.003016233444213867, -1.9073486328125e-06, -9.918212890625e-05, 0.0, -0.000110626220703125, 0.0, -1.9073486328125e-05, -0.0005512237548828125, -5.7220458984375e-06, -5.4836082199472e-06, -6.556489552167477e-06, -4.650899791158736e-05, -2.3841855067985307e-07, -0.0029518466908484697, 0.0, -0.0001888275146484375, -0.0033102035522460938, -0.0008488893508911133, -2.09808349609375e-05, -0.000240325927734375, -3.9537839889526367, -0.002513885498046875, -0.000255584716796875, -0.0001316070556640625, -0.1277771294116974, -0.19607281684875488, -1.9073486328125e-06, -0.009237289428710938, -0.19229888916015625, -0.000835418701171875, -0.017978783696889877, 0.0, -6.866455078125e-05, -0.0002689361572265625, -0.0028160472866147757, -0.0005339377094060183, 0.0, -1.0139169692993164, -0.038443565368652344, -9.405496530234814e-05, -0.00022314196394290775, -0.0016565322875976562, -1.9073486328125e-06, -0.0001932362501975149, -0.0005089044570922852, -3.099436753473128e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0003602506476454437, -1.1444091796875e-05, -0.016860485076904297, -1.9073486328125e-06, -1.9073486328125e-06], "choice_history": [97, 283, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 45, 150, 21, 174, "Minion", "Selector", "<EOS>", 347, 74, 297, "MURLOC", "<EOS>", 88, 325, "Both", "Player", "<EOS>", 60, 238, "Give", "<EOS>", 21, 174, "Change", "Attack", "<EOS>", 346, 52, 179, "1", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Template60", "hole0": "MURLOC"}, {"_type": "Template79", "hole0": "BothPlayer"}]}, {"hole3": "SelfSelector", "hole2": [{"n": 1, "_type": "Num"}], "_type": "Template38", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole0": "Give"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "GrimscaleOracle", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type", "hole0": "Grimscale Oracle", "_type": "Template26", "hole2": "COMMON", "hole1": 1}], "hole1": "MinionCard"}, "score": -5.593380105579826, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(MinionSelector(IsType(MINION_TYPE.\n            MURLOC), BothPlayer()), ActionTag(Give(ChangeAttack(1)),\n            SelfSelector()))])\n"}, {"score_history": [-3.62396240234375e-05, -3.814697265625e-05, -0.00022290059132501483, -3.099436753473128e-06, -4.410734163684538e-06, -1.0669231414794922e-05, -2.3245811462402344e-05, -1.8358125089434907e-05, -1.52587890625e-05, -0.0028171539306640625, -0.0001506805419921875, 0.0, -3.921985626220703e-05, -4.053113570989808e-06, -4.780292510986328e-05, -1.3231212506070733e-05, -7.748603820800781e-06, -0.0004775524139404297, -1.9073486328125e-06, -0.0005944966687820852, -3.3378591979271732e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -0.0005384683609008789, -7.390969585685525e-06, -0.003016233444213867, -1.9073486328125e-06, -9.918212890625e-05, 0.0, -0.000110626220703125, 0.0, -1.9073486328125e-05, -0.0005512237548828125, -5.7220458984375e-06, -5.4836082199472e-06, -6.556489552167477e-06, -4.650899791158736e-05, -2.3841855067985307e-07, -0.0029518466908484697, 0.0, -0.0001888275146484375, -0.0033102035522460938, -0.0008488893508911133, -2.09808349609375e-05, -0.000240325927734375, -0.019910812377929688, -0.0007228851318359375, -0.00017344953084830195, -0.004974484443664551, -1.2909536361694336, -6.67572021484375e-05, -0.00033295387402176857, -0.00018608442042022943, -5.4596363042946905e-05, -4.725931167602539, -0.03705963119864464], "choice_history": [97, 283, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "Oracle", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template55", "hole1": "Oracle", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "GrimscaleOracle", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type", "hole0": "Grimscale Oracle", "_type": "Template26", "hole2": "COMMON", "hole1": 1}], "hole1": "MinionCard"}, "score": -6.096880920039638, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            Oracle()))])\n"}, {"score_history": [-3.62396240234375e-05, -3.814697265625e-05, -0.00022290059132501483, -3.099436753473128e-06, -4.410734163684538e-06, -1.0669231414794922e-05, -2.3245811462402344e-05, -1.8358125089434907e-05, -1.52587890625e-05, -0.0028171539306640625, -0.0001506805419921875, 0.0, -3.921985626220703e-05, -4.053113570989808e-06, -4.780292510986328e-05, -1.3231212506070733e-05, -7.748603820800781e-06, -0.0004775524139404297, -1.9073486328125e-06, -0.0005944966687820852, -3.3378591979271732e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -0.0005384683609008789, -7.390969585685525e-06, -0.003016233444213867, -1.9073486328125e-06, -9.918212890625e-05, 0.0, -0.000110626220703125, 0.0, -1.9073486328125e-05, -0.0005512237548828125, -5.7220458984375e-06, -5.4836082199472e-06, -6.556489552167477e-06, -4.650899791158736e-05, -2.3841855067985307e-07, -0.0029518466908484697, 0.0, -0.0001888275146484375, -0.0033102035522460938, -0.0008488893508911133, -2.09808349609375e-05, -0.000240325927734375, -0.019910812377929688, -0.0007228851318359375, -0.00017344953084830195, -0.004974484443664551, -1.2909536361694336, -6.67572021484375e-05, -0.00033295387402176857, -0.00018608442042022943, -5.4596363042946905e-05, -3.24576473236084, -1.51900315284729, -2.145764938177308e-06], "choice_history": [97, 283, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "Grimscale", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template55", "hole1": "GrimscaleSelector", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "GrimscaleOracle", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type", "hole0": "Grimscale Oracle", "_type": "Template26", "hole2": "COMMON", "hole1": 1}], "hole1": "MinionCard"}, "score": -6.098660152211522, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            GrimscaleSelector()))])\n"}, {"score_history": [-3.62396240234375e-05, -3.814697265625e-05, -0.00022290059132501483, -3.099436753473128e-06, -4.410734163684538e-06, -1.0669231414794922e-05, -2.3245811462402344e-05, -1.8358125089434907e-05, -1.52587890625e-05, -0.0028171539306640625, -0.0001506805419921875, 0.0, -3.921985626220703e-05, -4.053113570989808e-06, -4.780292510986328e-05, -1.3231212506070733e-05, -7.748603820800781e-06, -0.0004775524139404297, -1.9073486328125e-06, -0.0005944966687820852, -3.3378591979271732e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -0.0005384683609008789, -7.390969585685525e-06, -0.003016233444213867, -1.9073486328125e-06, -9.918212890625e-05, 0.0, -0.000110626220703125, 0.0, -1.9073486328125e-05, -0.0005512237548828125, -5.7220458984375e-06, -5.4836082199472e-06, -6.556489552167477e-06, -4.650899791158736e-05, -2.3841855067985307e-07, -0.0029518466908484697, 0.0, -0.0001888275146484375, -0.0033102035522460938, -0.0008488893508911133, -2.09808349609375e-05, -0.000240325927734375, -0.019910812377929688, -0.0007228851318359375, -0.00017344953084830195, -0.004974484443664551, -6.280381679534912, -0.0013790130615234375, -0.0010899752378463745, -0.00014340400230139494, 0.0], "choice_history": [97, 283, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Minion", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "GrimscaleOracle", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type", "hole0": "Grimscale Oracle", "_type": "Template26", "hole2": "COMMON", "hole1": 1}], "hole1": "MinionCard"}, "score": -6.3252901650459705, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector())])\n"}, {"score_history": [-3.62396240234375e-05, -3.814697265625e-05, -0.00022290059132501483, -3.099436753473128e-06, -4.410734163684538e-06, -1.0669231414794922e-05, -2.3245811462402344e-05, -1.8358125089434907e-05, -1.52587890625e-05, -0.0028171539306640625, -0.0001506805419921875, 0.0, -3.921985626220703e-05, -4.053113570989808e-06, -4.780292510986328e-05, -1.3231212506070733e-05, -7.748603820800781e-06, -0.0004775524139404297, -1.9073486328125e-06, -0.0005944966687820852, -3.3378591979271732e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -0.0005384683609008789, -7.390969585685525e-06, -0.003016233444213867, -1.9073486328125e-06, -9.918212890625e-05, 0.0, -0.000110626220703125, 0.0, -1.9073486328125e-05, -0.0005512237548828125, -5.7220458984375e-06, -5.4836082199472e-06, -6.556489552167477e-06, -4.650899791158736e-05, -2.3841855067985307e-07, -0.0029518466908484697, 0.0, -0.0001888275146484375, -0.0033102035522460938, -0.0008488893508911133, -2.09808349609375e-05, -0.000240325927734375, -3.9537839889526367, -0.002513885498046875, -0.000255584716796875, -0.0001316070556640625, -0.1277771294116974, -0.19607281684875488, -1.9073486328125e-06, -0.009237289428710938, -0.19229888916015625, -0.000835418701171875, -0.017978783696889877, 0.0, -6.866455078125e-05, -0.0002689361572265625, -0.0028160472866147757, -0.0005339377094060183, 0.0, -0.46463680267333984, -0.0063343048095703125, -2.47955322265625e-05, 0.0, -1.3209136724472046, -0.0018141268519684672, -4.255681051290594e-05, -0.0014247894287109375, -0.04221534729003906, -0.0051975250244140625, -1.811981201171875e-05, -0.011951565742492676, -6.496906280517578e-05, -0.02354562282562256, -5.7220458984375e-06, -0.0015298128128051758, -0.006748199462890625, -8.70227722771233e-06, -0.0328751876950264, -1.33514404296875e-05, -0.0008373260498046875, -0.0001773834228515625, -0.4144478142261505, -8.225440979003906e-06, 0.0], "choice_history": [97, 283, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 45, 150, 21, 174, "Minion", "Selector", "<EOS>", 347, 74, 297, "MURLOC", "<EOS>", 88, 325, "Both", "Player", "<EOS>", 45, 150, 21, 174, "Action", "Tag", "<EOS>", 347, 55, 215, "Change", "Attack", "<EOS>", "1", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 88, 325, "Minion", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Template60", "hole0": "MURLOC"}, {"_type": "Template79", "hole0": "BothPlayer"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"hole3": 1, "hole2": "ChangeHealth", "_type": "Template21", "hole1": 1, "hole0": "ChangeAttack"}, {"_type": "Template79", "hole0": "MinionSelector"}]}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "GrimscaleOracle", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type", "hole0": "Grimscale Oracle", "_type": "Template26", "hole2": "COMMON", "hole1": 1}], "hole1": "MinionCard"}, "score": -6.855925271433279, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(MinionSelector(IsType(MINION_TYPE.\n            MURLOC), BothPlayer()), ActionTag(Give([Buff(ChangeAttack(1)),\n            Buff(ChangeHealth(1))]), MinionSelector()))])\n"}, {"score_history": [-3.62396240234375e-05, -3.814697265625e-05, -0.00022290059132501483, -3.099436753473128e-06, -4.410734163684538e-06, -1.0669231414794922e-05, -2.3245811462402344e-05, -1.8358125089434907e-05, -1.52587890625e-05, -0.0028171539306640625, -0.0001506805419921875, 0.0, -3.921985626220703e-05, -4.053113570989808e-06, -4.780292510986328e-05, -1.3231212506070733e-05, -7.748603820800781e-06, -0.0004775524139404297, -1.9073486328125e-06, -0.0005944966687820852, -3.3378591979271732e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -0.0005384683609008789, -7.390969585685525e-06, -0.003016233444213867, -1.9073486328125e-06, -9.918212890625e-05, 0.0, -0.000110626220703125, 0.0, -1.9073486328125e-05, -8.390406608581543, -0.0001983642578125, -1.4185804502631072e-05, -2.50339189733495e-06, -2.5752517103683203e-05, 0.0], "choice_history": [97, 283, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "GrimscaleOracle", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type", "hole0": "Grimscale Oracle", "_type": "Template26", "hole2": "COMMON", "hole1": 1}], "hole1": "MinionCard"}, "score": -8.398985069091623, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score_history": [-3.62396240234375e-05, -3.814697265625e-05, -0.00022290059132501483, -3.099436753473128e-06, -4.410734163684538e-06, -1.0669231414794922e-05, -2.3245811462402344e-05, -1.8358125089434907e-05, -1.52587890625e-05, -7.8768205642700195, -0.011843681335449219, -0.005743503570556641, -0.0002730871783569455, -2.264991962874774e-06, -2.622604142743512e-06, -1.4027661085128784, 0.0, -0.1616438627243042, 0.0, -1.1444091796875e-05, -0.09016609191894531, -0.0001201629638671875, -1.1920922133867862e-06, -1.4305104514278355e-06, -1.299663563258946e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "create_minion", "hole0": "GrimscaleOracle", "_type": "Template5", "hole2": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole1": "MinionCard"}, "score": -9.54978146192581, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        return Minion(1, 1)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score_history": [-3.62396240234375e-05, -3.814697265625e-05, -0.00022290059132501483, -3.099436753473128e-06, -4.410734163684538e-06, -1.0669231414794922e-05, -2.3245811462402344e-05, -1.8358125089434907e-05, -1.52587890625e-05, -7.8768205642700195, -0.011843681335449219, -0.005743503570556641, -0.0002730871783569455, -2.264991962874774e-06, -2.622604142743512e-06, -0.49039971828460693, -1.537160873413086, -0.08510354161262512, 0.0, -9.5367431640625e-06, -0.18622112274169922, -0.0001354217529296875, -2.3841855067985307e-07, -5.483620952873025e-06, -7.272323273355141e-06, -2.3841855067985307e-07], "choice_history": [97, 283, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>", "Minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole3": "Minion", "hole0": "GrimscaleOracle", "_type": "Template5", "hole2": [{"_type": "Template62", "hole1": 1, "hole0": 1}], "hole1": "MinionCard"}, "score": -10.194101500595877, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        return Minion(1, 1)\n\n    def Minion(self, player):\n        return Minion(1, 1)\n"}]}
{"index": 42, "beams": [{"score_history": [-4.00543212890625e-05, -5.14984130859375e-05, -0.00011669908417388797, -0.00032019594800658524, -0.0012572346022352576, -2.777537883957848e-05, -7.26478174328804e-06, -3.8623809814453125e-05, -9.5367431640625e-06, -0.0014286041259765625, -0.018929481506347656, -0.0005359649658203125, -1.049041748046875e-05, -0.00012028217315673828, -6.294228660408407e-05, -2.6702880859375e-05, -0.0018998384475708008, -5.53131103515625e-05, -1.585482641530689e-05, -1.1920928244535389e-07, -0.0008504390716552734, -3.814697265625e-06, -0.001251220703125, -5.91278076171875e-05, -0.02418994903564453, -0.009263038635253906, -0.006176471710205078, -1.1682510375976562e-05, -2.6702880859375e-05, -8.7738037109375e-05, -5.7220458984375e-06, -0.005555034149438143, -1.9073486328125e-06, -0.00012409687042236328, -0.0005743503570556641, -3.814697265625e-06, -0.007003903388977051, 0.0, -0.000607609748840332, 0.0, -0.000125885009765625, -0.0001678466796875, -2.288818359375e-05, -0.0031148195266723633, -2.50339189733495e-06, -0.00016056202002801, 0.0], "choice_history": [97, 283, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 29, 265, "Heal", "<EOS>", 346, 52, 179, "6", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "6", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 6, "hole0": 5}], "hole3": "create_minion", "hole0": "GuardianOfKings", "_type": "Template5", "hole2": [{"hole4": {"hole2": "HeroSelector", "_type": "Template43", "hole1": [{"n": 6, "_type": "Num"}], "hole0": "Heal"}, "hole3": "battlecry", "hole0": "Guardian of Kings", "_type": "Template27", "hole2": "PALADIN", "hole1": 7}], "hole1": "MinionCard"}, "score": -0.08434560553950377, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score_history": [-4.00543212890625e-05, -5.14984130859375e-05, -0.00011669908417388797, -0.00032019594800658524, -0.0012572346022352576, -2.777537883957848e-05, -7.26478174328804e-06, -3.8623809814453125e-05, -9.5367431640625e-06, -0.0014286041259765625, -0.018929481506347656, -0.0005359649658203125, -1.049041748046875e-05, -0.00012028217315673828, -6.294228660408407e-05, -2.6702880859375e-05, -0.0018998384475708008, -5.53131103515625e-05, -1.585482641530689e-05, -1.1920928244535389e-07, -0.0008504390716552734, -3.814697265625e-06, -0.001251220703125, -5.91278076171875e-05, -0.02418994903564453, -0.009263038635253906, -0.006176471710205078, -1.1682510375976562e-05, -2.6702880859375e-05, -8.7738037109375e-05, -5.7220458984375e-06, -0.005555034149438143, -1.9073486328125e-06, -0.00012409687042236328, -0.0005743503570556641, -3.814697265625e-06, -5.139423370361328, -0.0003662109375, -0.0014666318893432617, 0.0, -0.00014495849609375, -0.00043487548828125, -2.86102294921875e-05, -0.006059765815734863, -1.7881377516459906e-06, -0.00011765264935093, 0.0], "choice_history": [97, 283, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 29, 265, "Heal", "<EOS>", 346, 52, 179, "6", "<EOS>", "Hero", "Selector", "<EOS>", "Hero", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "6", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 6, "hole0": 5}], "hole3": "Hero", "hole0": "GuardianOfKings", "_type": "Template5", "hole2": [{"hole4": {"hole2": "HeroSelector", "_type": "Template43", "hole1": [{"n": 6, "_type": "Num"}], "hole0": "Heal"}, "hole3": "battlecry", "hole0": "Guardian of Kings", "_type": "Template27", "hole2": "PALADIN", "hole1": 7}], "hole1": "MinionCard"}, "score": -5.221183451594918, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def Hero(self, player):\n        return Minion(5, 6)\n"}, {"score_history": [-4.00543212890625e-05, -5.14984130859375e-05, -0.00011669908417388797, -0.00032019594800658524, -0.0012572346022352576, -2.777537883957848e-05, -7.26478174328804e-06, -3.8623809814453125e-05, -9.5367431640625e-06, -0.0014286041259765625, -0.018929481506347656, -0.0005359649658203125, -1.049041748046875e-05, -0.00012028217315673828, -6.294228660408407e-05, -2.6702880859375e-05, -0.0018998384475708008, -5.53131103515625e-05, -1.585482641530689e-05, -1.1920928244535389e-07, -0.0008504390716552734, -3.814697265625e-06, -0.001251220703125, -5.91278076171875e-05, -0.02418994903564453, -0.009263038635253906, -0.006176471710205078, -1.1682510375976562e-05, -2.6702880859375e-05, -8.7738037109375e-05, -5.7220458984375e-06, -5.500931262969971, -5.841255187988281e-06, -4.780292510986328e-05, -0.00041413307189941406, -7.62939453125e-06, -0.006761789321899414, 0.0, -0.0005712509155273438, 0.0, -0.0001277923583984375, -0.0001850128173828125, -2.288818359375e-05, -0.0035115480422973633, -2.9802276912960224e-06, -0.0001299296854995191, 0.0], "choice_history": [97, 283, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 29, 265, "Heal", "<EOS>", 346, 52, 179, "5", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "6", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 6, "hole0": 5}], "hole3": "create_minion", "hole0": "GuardianOfKings", "_type": "Template5", "hole2": [{"hole4": {"hole2": "HeroSelector", "_type": "Template43", "hole1": [{"n": 5, "_type": "Num"}], "hole0": "Heal"}, "hole3": "battlecry", "hole0": "Guardian of Kings", "_type": "Template27", "hole2": "PALADIN", "hole1": 7}], "hole1": "MinionCard"}, "score": -5.579600245336216, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(5), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score_history": [-4.00543212890625e-05, -5.14984130859375e-05, -0.00011669908417388797, -0.00032019594800658524, -0.0012572346022352576, -2.777537883957848e-05, -7.26478174328804e-06, -3.8623809814453125e-05, -9.5367431640625e-06, -0.0014286041259765625, -4.276228904724121, -0.0071468353271484375, -0.0001773834228515625, -1.9073486328125e-06, -6.079673767089844e-06, -3.814697265625e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.0013370513916015625, -0.000202178955078125, -4.76837158203125e-05, -5.6980417866725475e-05, -8.7738037109375e-05, -0.00019156573398504406, -4.38690185546875e-05, -0.004712359048426151, -0.0030536651611328125, -6.103515625e-05, -1.9073486328125e-05, -2.7894933737115934e-05, -5.7220458984375e-06, -5.14984130859375e-05, -8.7738037109375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -4.57763671875e-05, -2.09808349609375e-05, -0.0006746053695678711, 0.0, -4.76837158203125e-05, -6.103515625e-05, -7.62939453125e-06, 0.0, -8.20159912109375e-05, -7.62939453125e-06, -0.13851070404052734, -1.9073486328125e-06, -0.0005550384521484375, -0.0051021575927734375, 0.0, -0.7315781116485596, -0.00016033649444580078, -0.005167961120605469, -1.9073486328125e-05, -0.17589405179023743, 0.0, -0.0001239776611328125, 0.0, -8.785724639892578e-05, 0.0, -7.05718994140625e-05, -0.3990774154663086, -3.0517578125e-05, -0.003780364990234375, -1.3947389561508317e-05, -0.0006567466771230102, 0.0], "choice_history": [97, 283, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Guardian", " ", "of", " ", "Kings", "<EOS>", 52, 179, "7", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 95, 336, "overload", "<EOS>", 23, 179, "6", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "6", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 6, "hole0": 5}], "hole3": "create_minion", "hole0": "GuardianOfKings", "_type": "Template5", "hole2": [{"hole3": [{"value": {"n": 6, "_type": "Num"}, "_type": "keyword", "arg": "overload"}], "hole2": [{"_type": "Str", "s": "Guardian of Kings"}, {"n": 7, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "EPIC"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -5.758693320262864, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC, overload=6)\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score_history": [-4.00543212890625e-05, -5.14984130859375e-05, -0.00011669908417388797, -0.00032019594800658524, -0.0012572346022352576, -2.777537883957848e-05, -7.26478174328804e-06, -3.8623809814453125e-05, -9.5367431640625e-06, -0.0014286041259765625, -0.018929481506347656, -0.0005359649658203125, -1.049041748046875e-05, -0.00012028217315673828, -6.294228660408407e-05, -2.6702880859375e-05, -0.0018998384475708008, -5.53131103515625e-05, -1.585482641530689e-05, -1.1920928244535389e-07, -0.0008504390716552734, -3.814697265625e-06, -0.001251220703125, -5.91278076171875e-05, -0.02418994903564453, -0.009263038635253906, -0.006176471710205078, -1.1682510375976562e-05, -2.6702880859375e-05, -8.7738037109375e-05, -5.7220458984375e-06, -0.005555034149438143, -1.9073486328125e-06, -0.00012409687042236328, -0.0005743503570556641, -3.814697265625e-06, -0.007003903388977051, 0.0, -0.000607609748840332, 0.0, -0.000125885009765625, -0.0001678466796875, -2.288818359375e-05, -5.773520469665527, -3.576278118089249e-07, -1.597391747054644e-05, 0.0], "choice_history": [97, 283, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 29, 265, "Heal", "<EOS>", 346, 52, 179, "6", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "6", "<EOS>", "6", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 6, "hole0": 6}], "hole3": "create_minion", "hole0": "GuardianOfKings", "_type": "Template5", "hole2": [{"hole4": {"hole2": "HeroSelector", "_type": "Template43", "hole1": [{"n": 6, "_type": "Num"}], "hole0": "Heal"}, "hole3": "battlecry", "hole0": "Guardian of Kings", "_type": "Template27", "hole2": "PALADIN", "hole1": 7}], "hole1": "MinionCard"}, "score": -5.854604521811716, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score_history": [-4.00543212890625e-05, -5.14984130859375e-05, -0.00011669908417388797, -0.00032019594800658524, -0.0012572346022352576, -2.777537883957848e-05, -7.26478174328804e-06, -3.8623809814453125e-05, -9.5367431640625e-06, -0.0014286041259765625, -0.018929481506347656, -0.0005359649658203125, -1.049041748046875e-05, -0.00012028217315673828, -6.294228660408407e-05, -2.6702880859375e-05, -6.27058219909668, -0.0001544952392578125, -0.0004159212112426758, -5.7220458984375e-06, -2.086153835989535e-05, 0.0, -0.0009810924530029297, -3.814697265625e-06, -0.001087188720703125, -3.4332275390625e-05, -0.03565406799316406, -0.010210037231445312, -0.007262706756591797, -7.748603820800781e-06, -2.47955322265625e-05, -0.000118255615234375, -5.7220458984375e-06, -0.005409360863268375, -1.9073486328125e-06, -0.00012028217315673828, -0.0006449222564697266, -5.7220458984375e-06, -0.006084561347961426, 0.0, -0.00048542022705078125, 0.0, -0.0001010894775390625, -0.00022125244140625, -2.09808349609375e-05, -0.0031167268753051758, -2.622600959512056e-06, -0.0001578206429257989, 0.0], "choice_history": [97, 283, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Guardian", " ", "of", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 29, 265, "Heal", "<EOS>", 346, 52, 179, "6", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "6", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 6, "hole0": 5}], "hole3": "create_minion", "hole0": "GuardianOfKings", "_type": "Template5", "hole2": [{"hole4": {"hole2": "HeroSelector", "_type": "Template43", "hole1": [{"n": 6, "_type": "Num"}], "hole0": "Heal"}, "hole3": "battlecry", "hole0": "Guardian of of Kings", "_type": "Template27", "hole2": "PALADIN", "hole1": 7}], "hole1": "MinionCard"}, "score": -6.3659249816303145, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score_history": [-4.00543212890625e-05, -5.14984130859375e-05, -0.00011669908417388797, -0.00032019594800658524, -0.0012572346022352576, -2.777537883957848e-05, -7.26478174328804e-06, -3.8623809814453125e-05, -9.5367431640625e-06, -0.0014286041259765625, -0.018929481506347656, -0.0005359649658203125, -1.049041748046875e-05, -0.00012028217315673828, -6.294228660408407e-05, -2.6702880859375e-05, -0.0018998384475708008, -5.53131103515625e-05, -1.585482641530689e-05, -1.1920928244535389e-07, -0.0008504390716552734, -3.814697265625e-06, -0.001251220703125, -5.91278076171875e-05, -0.02418994903564453, -0.009263038635253906, -0.006176471710205078, -1.1682510375976562e-05, -2.6702880859375e-05, -8.7738037109375e-05, -5.7220458984375e-06, -6.53405237197876, -2.0265579223632812e-06, -5.984306335449219e-05, -0.0004584789276123047, -9.5367431640625e-06, -0.0032808780670166016, 0.0, -0.000779271125793457, 0.0, -0.000125885009765625, -0.0001544952392578125, -2.47955322265625e-05, -0.0026818513870239258, -2.861018856492592e-06, -9.953480184776708e-05, 0.0], "choice_history": [97, 283, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 29, 265, "Heal", "<EOS>", 346, 52, 179, "7", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "6", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 6, "hole0": 5}], "hole3": "create_minion", "hole0": "GuardianOfKings", "_type": "Template5", "hole2": [{"hole4": {"hole2": "HeroSelector", "_type": "Template43", "hole1": [{"n": 7, "_type": "Num"}], "hole0": "Heal"}, "hole3": "battlecry", "hole0": "Guardian of Kings", "_type": "Template27", "hole2": "PALADIN", "hole1": 7}], "hole1": "MinionCard"}, "score": -6.608612213619828, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(7), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score_history": [-4.00543212890625e-05, -5.14984130859375e-05, -0.00011669908417388797, -0.00032019594800658524, -0.0012572346022352576, -2.777537883957848e-05, -7.26478174328804e-06, -3.8623809814453125e-05, -9.5367431640625e-06, -0.0014286041259765625, -0.018929481506347656, -0.0005359649658203125, -1.049041748046875e-05, -0.00012028217315673828, -6.294228660408407e-05, -2.6702880859375e-05, -0.0018998384475708008, -5.53131103515625e-05, -1.585482641530689e-05, -1.1920928244535389e-07, -0.0008504390716552734, -3.814697265625e-06, -0.001251220703125, -5.91278076171875e-05, -4.897432327270508, -0.02551746368408203, -1.196014165878296, -0.05055036395788193, -0.0007572174072265625, -0.0660400390625, -3.814697265625e-06, -0.05870252847671509, 0.0, -0.3309497833251953, -2.47955322265625e-05, -0.0017762184143066406, 0.0, -1.52587890625e-05, -0.0008258819580078125, -0.0001163482666015625, -0.007248282432556152, -5.245195097813848e-06, -0.0006708066212013364, 0.0], "choice_history": [97, 283, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 28, 261, "Restore", "<EOS>", 346, 52, 179, "6", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "6", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 6, "hole0": 5}], "hole3": "create_minion", "hole0": "GuardianOfKings", "_type": "Template5", "hole2": [{"hole4": {"_type": "Template42", "hole1": [{"n": 6, "_type": "Num"}], "hole0": "Restore"}, "hole3": "battlecry", "hole0": "Guardian of Kings", "_type": "Template27", "hole2": "PALADIN", "hole1": 7}], "hole1": "MinionCard"}, "score": -6.663769620280611, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Restore(6),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score_history": [-4.00543212890625e-05, -5.14984130859375e-05, -0.00011669908417388797, -0.00032019594800658524, -6.6971869468688965, -1.8715683836489916e-05, -6.615896563744172e-05, -7.61193223297596e-06, -5.555152893066406e-05, -9.5367431640625e-06, -0.0016002655029296875, -0.014390945434570312, -0.0006046295166015625, -1.049041748046875e-05, -0.00012791156768798828, -6.687619315925986e-05, -3.0517578125e-05, -0.049228668212890625, -0.0008983612060546875, -2.2768967028241605e-05, -2.0265579223632812e-06, -0.0008475780487060547, -3.814697265625e-06, -0.0013962984085083008, -5.53131103515625e-05, -0.023728370666503906, -0.009057998657226562, -0.0062830448150634766, -9.775161743164062e-06, -2.86102294921875e-05, -8.58306884765625e-05, -5.7220458984375e-06, -0.005726099479943514, 0.0, -0.00012791156768798828, -0.0005800724029541016, -3.814697265625e-06, -0.007141232490539551, 0.0, -0.000611424446105957, 0.0, -0.00012969970703125, -0.0001621246337890625, -2.288818359375e-05, -0.0031548738479614258, -2.3841830625315197e-06, -0.0001599660754436627, 0.0], "choice_history": [97, 283, "Guardian", "Of", "The", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 29, 265, "Heal", "<EOS>", 346, 52, 179, "6", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "6", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 6, "hole0": 5}], "hole3": "create_minion", "hole0": "GuardianOfTheKings", "_type": "Template5", "hole2": [{"hole4": {"hole2": "HeroSelector", "_type": "Template43", "hole1": [{"n": 6, "_type": "Num"}], "hole0": "Heal"}, "hole3": "battlecry", "hole0": "Guardian of Kings", "_type": "Template27", "hole2": "PALADIN", "hole1": 7}], "hole1": "MinionCard"}, "score": -6.824181278888318, "inferred_code": "class GuardianOfTheKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score_history": [-4.00543212890625e-05, -5.14984130859375e-05, -0.00011669908417388797, -0.00032019594800658524, -0.0012572346022352576, -2.777537883957848e-05, -7.26478174328804e-06, -3.8623809814453125e-05, -9.5367431640625e-06, -0.0014286041259765625, -0.018929481506347656, -0.0005359649658203125, -1.049041748046875e-05, -0.00012028217315673828, -6.294228660408407e-05, -2.6702880859375e-05, -0.0018998384475708008, -5.53131103515625e-05, -1.585482641530689e-05, -1.1920928244535389e-07, -0.0008504390716552734, -3.814697265625e-06, -0.001251220703125, -5.91278076171875e-05, -0.02418994903564453, -5.333520889282227, -1.5299596786499023, -0.0001399517059326172, -3.4332275390625e-05, -0.000957489013671875, -1.9073486328125e-06, -0.10456237196922302, 0.0, -0.0038560573011636734, -0.0010156631469726562, -1.9073486328125e-06, -0.0004749298095703125, -1.71661376953125e-05, 0.0, -0.002813577651977539, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -0.005827069282531738, -0.00019681453704833984, 0.0, -0.000321862637065351, 0.0, -9.78708267211914e-05, 0.0, -4.57763671875e-05, -0.000125885009765625, -6.866455078125e-05, -0.0024263858795166016, -2.0265558760002023e-06, -0.0014881737297400832, 0.0], "choice_history": [97, 283, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 29, 266, "Draw", "<EOS>", 346, 52, 179, "6", "<EOS>", "Hero", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "6", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 6, "hole0": 5}], "hole3": "create_minion", "hole0": "GuardianOfKings", "_type": "Template5", "hole2": [{"hole4": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}], "hole2": "HeroSelector", "_type": "Template43", "hole1": [{"n": 6, "_type": "Num"}], "hole0": "Draw"}, "hole3": "battlecry", "hole0": "Guardian of Kings", "_type": "Template27", "hole2": "PALADIN", "hole1": 7}], "hole1": "MinionCard"}, "score": -7.039355124750493, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(6), HeroSelector(\n            players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score_history": [-4.00543212890625e-05, -5.14984130859375e-05, -0.00011669908417388797, -0.00032019594800658524, -0.0012572346022352576, -2.777537883957848e-05, -7.26478174328804e-06, -3.8623809814453125e-05, -9.5367431640625e-06, -0.0014286041259765625, -0.018929481506347656, -0.0005359649658203125, -1.049041748046875e-05, -0.00012028217315673828, -6.294228660408407e-05, -2.6702880859375e-05, -0.0018998384475708008, -5.53131103515625e-05, -1.585482641530689e-05, -1.1920928244535389e-07, -0.0008504390716552734, -3.814697265625e-06, -0.001251220703125, -5.91278076171875e-05, -4.897432327270508, -0.02551746368408203, -1.908191442489624, -0.04234671592712402, -2.6702880859375e-05, -0.005390167236328125, -9.5367431640625e-06, -0.10132291913032532, 0.0, -0.0720062255859375, -2.09808349609375e-05, -0.001539468765258789, 0.0, -1.1444091796875e-05, -0.0007724761962890625, -0.0001068115234375, -0.008151888847351074, -6.318072337307967e-06, -0.0007622911944054067, 0.0], "choice_history": [97, 283, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 28, 261, "Heal", "<EOS>", 346, 52, 179, "6", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "6", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 6, "hole0": 5}], "hole3": "create_minion", "hole0": "GuardianOfKings", "_type": "Template5", "hole2": [{"hole4": {"_type": "Template42", "hole1": [{"n": 6, "_type": "Num"}], "hole0": "Heal"}, "hole3": "battlecry", "hole0": "Guardian of Kings", "_type": "Template27", "hole2": "PALADIN", "hole1": 7}], "hole1": "MinionCard"}, "score": -7.09073425978567, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score_history": [-4.00543212890625e-05, -5.14984130859375e-05, -0.00011669908417388797, -0.00032019594800658524, -0.0012572346022352576, -2.777537883957848e-05, -7.26478174328804e-06, -3.8623809814453125e-05, -9.5367431640625e-06, -0.0014286041259765625, -0.018929481506347656, -0.0005359649658203125, -1.049041748046875e-05, -0.00012028217315673828, -6.294228660408407e-05, -2.6702880859375e-05, -0.0018998384475708008, -5.53131103515625e-05, -1.585482641530689e-05, -1.1920928244535389e-07, -0.0008504390716552734, -3.814697265625e-06, -0.001251220703125, -5.91278076171875e-05, -4.897432327270508, -0.02551746368408203, -0.8094078302383423, -0.4279022216796875, -0.008272171020507812, -0.0035610198974609375, -1.52587890625e-05, -0.6303357481956482, -0.459811270236969, -2.2649763195659034e-05, -0.0009219646453857422, -3.814697265625e-06, -2.6941299438476562e-05, 0.0, -2.288818359375e-05, -3.4332275390625e-05, -6.103515625e-05, -0.003445267677307129, -4.768370445162873e-07, -0.0004129749140702188, 0.0], "choice_history": [97, 283, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 28, 261, "Health", "<EOS>", 346, 88, 325, "Battle", "Axe", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "6", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 6, "hole0": 5}], "hole3": "create_minion", "hole0": "GuardianOfKings", "_type": "Template5", "hole2": [{"hole4": {"_type": "Template42", "hole1": [{"_type": "Template79", "hole0": "BattleAxe"}], "hole0": "Health"}, "hole3": "battlecry", "hole0": "Guardian of Kings", "_type": "Template27", "hole2": "PALADIN", "hole1": 7}], "hole1": "MinionCard"}, "score": -7.29432673577309, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Health(BattleAxe()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score_history": [-4.00543212890625e-05, -5.14984130859375e-05, -0.00011669908417388797, -0.00032019594800658524, -0.0012572346022352576, -2.777537883957848e-05, -7.26478174328804e-06, -3.8623809814453125e-05, -9.5367431640625e-06, -0.0014286041259765625, -4.276228904724121, -0.0071468353271484375, -0.0001773834228515625, -1.9073486328125e-06, -6.079673767089844e-06, -3.814697265625e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.0013370513916015625, -0.000202178955078125, -4.76837158203125e-05, -5.6980417866725475e-05, -8.7738037109375e-05, -0.00019156573398504406, -4.38690185546875e-05, -0.004712359048426151, -0.0030536651611328125, -6.103515625e-05, -1.9073486328125e-05, -2.7894933737115934e-05, -5.7220458984375e-06, -5.14984130859375e-05, -8.7738037109375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -4.57763671875e-05, -2.09808349609375e-05, -0.0006746053695678711, 0.0, -4.76837158203125e-05, -6.103515625e-05, -7.62939453125e-06, 0.0, -8.20159912109375e-05, -7.62939453125e-06, -0.13851070404052734, -1.9073486328125e-06, -0.0005550384521484375, -0.0051021575927734375, 0.0, -2.188380479812622, -1.52587890625e-05, -0.7780055999755859, -6.103515625e-05, -7.43865966796875e-05, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -6.496906280517578e-05, -5.7220458984375e-06, -2.09808349609375e-05, -1.1444091796875e-05, -0.12846624851226807, -1.9073486328125e-06, -0.0006694793701171875, 0.0, -0.007069706916809082, 0.0, -0.0004062652587890625, -0.09206485748291016, -1.0668067932128906, -4.410585097502917e-05, -0.00021958351135253906, -0.00024831295013427734, -4.625213477993384e-05, -0.0027902608271688223, 0.0], "choice_history": [97, 283, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Guardian", " ", "of", " ", "Kings", "<EOS>", 52, 179, "7", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 306, "Minion", "<EOS>", "5", "<EOS>", "6", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole2": 6, "_type": "Template68", "hole1": 5, "hole0": "Minion"}], "hole3": "create_minion", "hole0": "GuardianOfKings", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Guardian of Kings"}, {"n": 7, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "EPIC"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -8.707536554135004, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score_history": [-4.00543212890625e-05, -5.14984130859375e-05, -0.00011669908417388797, -0.00032019594800658524, -0.0012572346022352576, -2.777537883957848e-05, -7.26478174328804e-06, -3.8623809814453125e-05, -9.5367431640625e-06, -0.0014286041259765625, -4.276228904724121, -0.0071468353271484375, -0.0001773834228515625, -1.9073486328125e-06, -6.079673767089844e-06, -3.814697265625e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.0013370513916015625, -0.000202178955078125, -4.76837158203125e-05, -5.6980417866725475e-05, -8.7738037109375e-05, -0.00019156573398504406, -4.38690185546875e-05, -0.004712359048426151, -0.0030536651611328125, -6.103515625e-05, -1.9073486328125e-05, -2.7894933737115934e-05, -5.7220458984375e-06, -5.14984130859375e-05, -8.7738037109375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -4.57763671875e-05, -2.09808349609375e-05, -0.0006746053695678711, 0.0, -4.76837158203125e-05, -6.103515625e-05, -7.62939453125e-06, 0.0, -8.20159912109375e-05, -7.62939453125e-06, -0.13851070404052734, -1.9073486328125e-06, -0.0005550384521484375, -0.0051021575927734375, 0.0, -2.188380479812622, -1.52587890625e-05, -0.7780055999755859, -6.103515625e-05, -7.43865966796875e-05, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -6.496906280517578e-05, -5.7220458984375e-06, -2.09808349609375e-05, -1.1444091796875e-05, -0.12846624851226807, -1.9073486328125e-06, -0.0006694793701171875, 0.0, -0.007069706916809082, 0.0, -0.0004062652587890625, -0.09206485748291016, -0.44605541229248047, -3.2103853300213814e-05, -6.496906280517578e-05, -0.0003739595413208008, -0.0016648017335683107, -0.0012460333527997136, -2.0265558760002023e-06, -0.0124969482421875, -0.037062644958496094, -1.9073486328125e-06, -0.7270431518554688, -2.09808349609375e-05, -0.01470184326171875, -4.76837158203125e-05, -0.43680906295776367, -1.9073486328125e-06, -0.6522083282470703, -2.288818359375e-05, -1.6043071746826172, -0.10763359069824219, -0.2333393096923828, -6.29425048828125e-05, -0.4475440979003906, 0.0], "choice_history": [97, 283, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Guardian", " ", "of", " ", "Kings", "<EOS>", 52, 179, "7", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "5", "<EOS>", "6", "<EOS>", 354, 95, 336, "windfury", "<EOS>", 22, 175, "False", "<EOS>", 95, 336, "User", "<EOS>", 23, 179, "3", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": [{"value": {"value": true, "_type": "NameConstant"}, "_type": "keyword", "arg": "windfury"}, {"value": {"n": 3, "_type": "Num"}, "_type": "keyword", "arg": "User"}], "hole2": 6, "_type": "Template68", "hole1": 5, "hole0": "Minion"}], "hole3": "create_minion", "hole0": "GuardianOfKings", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Guardian of Kings"}, {"n": 7, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "EPIC"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -12.360125014472715, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def create_minion(self, player):\n        return Minion(5, 6, windfury=True, User=3)\n"}, {"score_history": [-4.00543212890625e-05, -5.14984130859375e-05, -0.00011669908417388797, -0.00032019594800658524, -0.0012572346022352576, -2.777537883957848e-05, -7.26478174328804e-06, -3.8623809814453125e-05, -9.5367431640625e-06, -0.0014286041259765625, -4.276228904724121, -0.0071468353271484375, -0.0001773834228515625, -1.9073486328125e-06, -6.079673767089844e-06, -3.814697265625e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.0013370513916015625, -0.000202178955078125, -4.76837158203125e-05, -5.6980417866725475e-05, -8.7738037109375e-05, -0.00019156573398504406, -4.38690185546875e-05, -0.004712359048426151, -0.0030536651611328125, -6.103515625e-05, -1.9073486328125e-05, -2.7894933737115934e-05, -5.7220458984375e-06, -5.14984130859375e-05, -8.7738037109375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -4.57763671875e-05, -2.09808349609375e-05, -0.0006746053695678711, 0.0, -4.76837158203125e-05, -6.103515625e-05, -7.62939453125e-06, 0.0, -8.20159912109375e-05, -7.62939453125e-06, -0.13851070404052734, -1.9073486328125e-06, -0.0005550384521484375, -0.0051021575927734375, 0.0, -2.188380479812622, -1.52587890625e-05, -0.7780055999755859, -6.103515625e-05, -7.43865966796875e-05, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -6.496906280517578e-05, -5.7220458984375e-06, -2.09808349609375e-05, -1.1444091796875e-05, -0.12846624851226807, -1.9073486328125e-06, -0.0006694793701171875, 0.0, -0.007069706916809082, 0.0, -0.0004062652587890625, -0.09206485748291016, -0.44605541229248047, -3.2103853300213814e-05, -6.496906280517578e-05, -0.0003739595413208008, -0.0016648017335683107, -0.0012460333527997136, -2.0265558760002023e-06, -0.0124969482421875, -0.037062644958496094, -1.9073486328125e-06, -0.7270431518554688, -2.09808349609375e-05, -0.01470184326171875, -4.76837158203125e-05, -0.43680906295776367, -1.9073486328125e-06, -0.6522083282470703, -2.288818359375e-05, -2.1580429077148438, -0.05927753448486328, -0.016386032104492188, -0.5009517669677734, -0.8050475120544434, -0.0024110078811645508, -0.0061473846435546875, -0.03227424621582031, -0.0001468658447265625, -0.7220157384872437, -1.234532117843628, -0.40427684783935547, -1.5494632720947266, -0.9736729860305786, -0.3284597396850586, -0.19797849655151367, 0.0, -1.2700862884521484, -0.001293182373046875, -0.8742185235023499, -0.024024248123168945, -3.933906555175781e-06, -5.7220458984375e-06, -0.014332771301269531, -2.09808349609375e-05, -0.7938605546951294, 0.0], "choice_history": [97, 283, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Guardian", " ", "of", " ", "Kings", "<EOS>", 52, 179, "7", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "5", "<EOS>", "6", "<EOS>", 354, 95, 336, "windfury", "<EOS>", 22, 175, "False", "<EOS>", 95, 336, "hearthbreaker", "<EOS>", 37, 322, "Aura", "<EOS>", 347, 84, 315, "Increase", "Minion", "Card", "Used", "Used", "<EOS>", "2", "<EOS>", 83, 314, "User", "Picker", "<EOS>", 346, 50, 174, "player", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": [{"value": {"value": true, "_type": "NameConstant"}, "_type": "keyword", "arg": "windfury"}, {"value": {"hole2": [{"_type": "Name", "id": "player"}], "_type": "Template78", "hole1": [{"_type": "Template74", "hole1": 2, "hole0": "IncreaseMinionCardUsedUsed"}, {"_type": "Template73_expr_seq", "hole0": "UserPicker"}], "hole0": "Aura"}, "_type": "keyword", "arg": "hearthbreaker"}], "hole2": 6, "_type": "Template68", "hole1": 5, "hole0": "Minion"}], "hole3": "create_minion", "hole0": "GuardianOfKings", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Guardian of Kings"}, {"n": 7, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "EPIC"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -21.936168560672513, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def create_minion(self, player):\n        return Minion(5, 6, windfury=True, hearthbreaker=[Aura(\n            IncreaseMinionCardUsedUsed(2), UserPicker()), player])\n"}]}
{"index": 43, "beams": [{"score_history": [-0.0005645751953125, -0.0020313262939453125, -0.01791844703257084, -3.2782078051241115e-05, -7.867782187531702e-06, -9.980052709579468e-06, -1.1563301086425781e-05, -3.2186455882765586e-06, 0.0, -0.0015964508056640625, -7.05718994140625e-05, -3.4570680327306036e-06, -2.777576446533203e-05, -2.3841855067985307e-07, -1.919269561767578e-05, -0.0011112524662166834, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001621246337890625, 0.0, -1.7404556274414062e-05, 0.0, -1.9073486328125e-06, -0.07915687561035156, -7.82012939453125e-05, -0.0007161909597925842, -2.3841855067985307e-07, -0.002655790885910392, 0.0, -0.00275421142578125, 0.0, -0.000194549560546875, -0.0002593994140625, -0.007293921895325184, -2.3841855067985307e-07, -0.0003986358642578125, -0.005227088928222656, -0.002895355224609375, -1.9073486328125e-05, -1.1444091796875e-05, -0.01745770126581192, -0.019107520580291748, -6.079673767089844e-06, -0.01580047607421875, -0.0003185272216796875, -1.1444091796875e-05, -0.0038040876388549805, -0.0001565095444675535, -0.004614830017089844, -0.0002880096435546875, -0.0008814386674202979, -0.0048165288753807545, -0.024110987782478333, -2.1219253540039062e-05, -0.00547027587890625, -0.00102996826171875, -0.00026905478443950415, -0.00900995172560215, -0.000141143798828125, -0.001239776611328125, -0.00022971609723754227, -8.440016972599551e-05, -7.986990567587782e-06, -1.9073486328125e-06, -3.0517578125e-05, -6.103515625e-05, -0.016542259603738785, -2.288818359375e-05, -0.0005002021789550781, -2.09808349609375e-05, -2.86102294921875e-05], "choice_history": [97, 283, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 37, 321, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Character", "Damaged", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Minion", "Is", "Target", "<EOS>", 60, 238, "Give", "<EOS>", 21, 174, "Change", "Attack", "<EOS>", 346, 52, 179, "3", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "CharacterDamaged"}, "keywords": [{"value": {"_type": "Template79", "hole0": "MinionIsTarget"}, "_type": "keyword", "arg": "condition"}]}, {"hole3": "SelfSelector", "hole2": [{"n": 3, "_type": "Num"}], "_type": "Template38", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole0": "Give"}], "hole0": "Effect"}, "hole2": "effects", "_type": "Template50", "hole1": 7, "hole0": 2}], "hole3": "create_minion", "hole0": "GurubashiBerserker", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 5, "hole0": "Gurubashi Berserker"}], "hole1": "MinionCard"}, "score": -0.2513507387190259, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n"}, {"score_history": [-0.0005645751953125, -0.0020313262939453125, -4.036709785461426, -3.2782078051241115e-05, -7.867782187531702e-06, -9.980052709579468e-06, -1.1563301086425781e-05, -3.2186455882765586e-06, 0.0, -0.0015964508056640625, -7.05718994140625e-05, -3.4570680327306036e-06, -2.777576446533203e-05, -2.3841855067985307e-07, -1.919269561767578e-05, -0.0011112524662166834, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001621246337890625, 0.0, -1.7404556274414062e-05, 0.0, -1.9073486328125e-06, -0.07915687561035156, -7.82012939453125e-05, -0.0007161909597925842, -2.3841855067985307e-07, -0.002655790885910392, 0.0, -0.00275421142578125, 0.0, -0.000194549560546875, -0.0002593994140625, -0.007293921895325184, -2.3841855067985307e-07, -0.0003986358642578125, -0.005227088928222656, -0.002895355224609375, -1.9073486328125e-05, -1.1444091796875e-05, -0.01745770126581192, -0.019107520580291748, -6.079673767089844e-06, -0.01580047607421875, -0.0003185272216796875, -1.1444091796875e-05, -0.0038040876388549805, -0.0001565095444675535, -0.004614830017089844, -0.0002880096435546875, -0.0008814386674202979, -0.0048165288753807545, -0.024110987782478333, -2.1219253540039062e-05, -0.00547027587890625, -0.00102996826171875, -0.00026905478443950415, -0.00900995172560215, -0.000141143798828125, -0.001239776611328125, -0.00022971609723754227, -8.440016972599551e-05, -7.986990567587782e-06, -1.9073486328125e-06, -3.0517578125e-05, -6.103515625e-05, -0.016542259603738785, -2.288818359375e-05, -0.0005002021789550781, -2.09808349609375e-05, -2.86102294921875e-05], "choice_history": [97, 283, "<UNK>", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 37, 321, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Character", "Damaged", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Minion", "Is", "Target", "<EOS>", 60, 238, "Give", "<EOS>", 21, 174, "Change", "Attack", "<EOS>", 346, 52, 179, "3", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "CharacterDamaged"}, "keywords": [{"value": {"_type": "Template79", "hole0": "MinionIsTarget"}, "_type": "keyword", "arg": "condition"}]}, {"hole3": "SelfSelector", "hole2": [{"n": 3, "_type": "Num"}], "_type": "Template38", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole0": "Give"}], "hole0": "Effect"}, "hole2": "effects", "_type": "Template50", "hole1": 7, "hole0": 2}], "hole3": "create_minion", "hole0": "<UNK>Berserker", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 5, "hole0": "Gurubashi Berserker"}], "hole1": "MinionCard"}, "score": -4.270142077147881, "inferred_code": "class <UNK>Berserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n"}, {"score_history": [-0.0005645751953125, -0.0020313262939453125, -0.01791844703257084, -3.2782078051241115e-05, -7.867782187531702e-06, -9.980052709579468e-06, -1.1563301086425781e-05, -3.2186455882765586e-06, 0.0, -0.0015964508056640625, -7.05718994140625e-05, -3.4570680327306036e-06, -2.777576446533203e-05, -2.3841855067985307e-07, -1.919269561767578e-05, -0.0011112524662166834, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001621246337890625, 0.0, -1.7404556274414062e-05, 0.0, -1.9073486328125e-06, -0.07915687561035156, -7.82012939453125e-05, -0.0007161909597925842, -2.3841855067985307e-07, -0.002655790885910392, 0.0, -0.00275421142578125, 0.0, -0.000194549560546875, -0.0002593994140625, -0.007293921895325184, -2.3841855067985307e-07, -0.0003986358642578125, -0.005227088928222656, -0.002895355224609375, -1.9073486328125e-05, -1.1444091796875e-05, -0.01745770126581192, -0.019107520580291748, -6.079673767089844e-06, -0.01580047607421875, -0.0003185272216796875, -1.1444091796875e-05, -0.0038040876388549805, -0.0001565095444675535, -0.004614830017089844, -0.0002880096435546875, -0.0008814386674202979, -0.0048165288753807545, -3.90198016166687, -0.28510212898254395, -0.025151722133159637, -1.1563301086425781e-05, -0.0085601806640625, -0.001132965087890625, -0.0006247749552130699, -0.007268901914358139, -0.0001392364501953125, -0.000659942626953125, -0.000176906498381868, -0.00017547607421875, -1.07287787614041e-05, -1.9073486328125e-06, -2.86102294921875e-05, -6.67572021484375e-05, -0.016974996775388718, -2.6702880859375e-05, -0.0005801916122436523, -2.288818359375e-05, -2.6702880859375e-05], "choice_history": [97, 283, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 37, 321, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Character", "Damaged", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Minion", "Is", "Minion", "Is", "Target", "<EOS>", 60, 238, "Give", "<EOS>", 21, 174, "Change", "Attack", "<EOS>", 346, 52, 179, "3", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "CharacterDamaged"}, "keywords": [{"value": {"_type": "Template79", "hole0": "MinionIsMinionIsTarget"}, "_type": "keyword", "arg": "condition"}]}, {"hole3": "SelfSelector", "hole2": [{"n": 3, "_type": "Num"}], "_type": "Template38", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole0": "Give"}], "hole0": "Effect"}, "hole2": "effects", "_type": "Template50", "hole1": 7, "hole0": 2}], "hole3": "create_minion", "hole0": "GurubashiBerserker", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 5, "hole0": "Gurubashi Berserker"}], "hole1": "MinionCard"}, "score": -4.441251302497818, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsMinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n"}, {"score_history": [-0.0005645751953125, -0.0020313262939453125, -0.01791844703257084, -3.2782078051241115e-05, -7.867782187531702e-06, -9.980052709579468e-06, -1.1563301086425781e-05, -3.2186455882765586e-06, 0.0, -0.0015964508056640625, -7.05718994140625e-05, -3.4570680327306036e-06, -2.777576446533203e-05, -2.3841855067985307e-07, -1.919269561767578e-05, -0.0011112524662166834, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001621246337890625, 0.0, -1.7404556274414062e-05, 0.0, -1.9073486328125e-06, -0.07915687561035156, -7.82012939453125e-05, -0.0007161909597925842, -2.3841855067985307e-07, -0.002655790885910392, 0.0, -0.00275421142578125, 0.0, -0.000194549560546875, -0.0002593994140625, -0.007293921895325184, -2.3841855067985307e-07, -0.0003986358642578125, -0.005227088928222656, -0.002895355224609375, -1.9073486328125e-05, -1.1444091796875e-05, -0.01745770126581192, -0.019107520580291748, -6.079673767089844e-06, -0.01580047607421875, -0.0003185272216796875, -1.1444091796875e-05, -0.0038040876388549805, -0.0001565095444675535, -0.004614830017089844, -0.0002880096435546875, -0.0008814386674202979, -0.0048165288753807545, -0.024110987782478333, -2.1219253540039062e-05, -0.00547027587890625, -0.00102996826171875, -0.00026905478443950415, -0.00900995172560215, -0.000141143798828125, -0.001239776611328125, -0.00022971609723754227, -8.440016972599551e-05, -7.986990567587782e-06, -1.9073486328125e-06, -3.0517578125e-05, -6.103515625e-05, -4.897603988647461, -6.866455078125e-05, -0.00018548965454101562, -2.09808349609375e-05, -1.1444091796875e-05], "choice_history": [97, 283, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 37, 321, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Character", "Damaged", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Minion", "Is", "Target", "<EOS>", 60, 238, "Give", "<EOS>", 21, 174, "Change", "Attack", "<EOS>", 346, 52, 179, "1", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "CharacterDamaged"}, "keywords": [{"value": {"_type": "Template79", "hole0": "MinionIsTarget"}, "_type": "keyword", "arg": "condition"}]}, {"hole3": "SelfSelector", "hole2": [{"n": 1, "_type": "Num"}], "_type": "Template38", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole0": "Give"}], "hole0": "Effect"}, "hole2": "effects", "_type": "Template50", "hole1": 7, "hole0": 2}], "hole3": "create_minion", "hole0": "GurubashiBerserker", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 5, "hole0": "Gurubashi Berserker"}], "hole1": "MinionCard"}, "score": -5.132126365467826, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(1)),\n            SelfSelector()))])\n"}, {"score_history": [-0.0005645751953125, -0.0020313262939453125, -0.01791844703257084, -3.2782078051241115e-05, -7.867782187531702e-06, -9.980052709579468e-06, -1.1563301086425781e-05, -3.2186455882765586e-06, 0.0, -0.0015964508056640625, -7.05718994140625e-05, -3.4570680327306036e-06, -2.777576446533203e-05, -2.3841855067985307e-07, -1.919269561767578e-05, -0.0011112524662166834, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001621246337890625, 0.0, -1.7404556274414062e-05, 0.0, -1.9073486328125e-06, -0.07915687561035156, -7.82012939453125e-05, -0.0007161909597925842, -2.3841855067985307e-07, -0.002655790885910392, 0.0, -0.00275421142578125, 0.0, -0.000194549560546875, -0.0002593994140625, -0.007293921895325184, -2.3841855067985307e-07, -0.0003986358642578125, -0.005227088928222656, -0.002895355224609375, -1.9073486328125e-05, -1.1444091796875e-05, -0.01745770126581192, -0.019107520580291748, -6.079673767089844e-06, -0.01580047607421875, -0.0003185272216796875, -1.1444091796875e-05, -0.0038040876388549805, -0.0001565095444675535, -0.004614830017089844, -0.0002880096435546875, -0.0008814386674202979, -0.0048165288753807545, -0.024110987782478333, -2.1219253540039062e-05, -0.00547027587890625, -0.00102996826171875, -0.00026905478443950415, -0.00900995172560215, -0.000141143798828125, -0.001239776611328125, -0.00022971609723754227, -8.440016972599551e-05, -7.986990567587782e-06, -1.9073486328125e-06, -3.0517578125e-05, -6.103515625e-05, -5.0831618309021, -1.1444091796875e-05, -0.0006836652755737305, -2.288818359375e-05, -3.0517578125e-05], "choice_history": [97, 283, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 37, 321, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Character", "Damaged", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Minion", "Is", "Target", "<EOS>", 60, 238, "Give", "<EOS>", 21, 174, "Change", "Attack", "<EOS>", 346, 52, 179, "2", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "CharacterDamaged"}, "keywords": [{"value": {"_type": "Template79", "hole0": "MinionIsTarget"}, "_type": "keyword", "arg": "condition"}]}, {"hole3": "SelfSelector", "hole2": [{"n": 2, "_type": "Num"}], "_type": "Template38", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole0": "Give"}], "hole0": "Effect"}, "hole2": "effects", "_type": "Template50", "hole1": 7, "hole0": 2}], "hole3": "create_minion", "hole0": "GurubashiBerserker", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 5, "hole0": "Gurubashi Berserker"}], "hole1": "MinionCard"}, "score": -5.318146143719474, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(2)),\n            SelfSelector()))])\n"}, {"score_history": [-0.0005645751953125, -0.0020313262939453125, -0.01791844703257084, -3.2782078051241115e-05, -7.867782187531702e-06, -9.980052709579468e-06, -1.1563301086425781e-05, -3.2186455882765586e-06, 0.0, -0.0015964508056640625, -7.05718994140625e-05, -3.4570680327306036e-06, -2.777576446533203e-05, -2.3841855067985307e-07, -1.919269561767578e-05, -0.0011112524662166834, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001621246337890625, 0.0, -1.7404556274414062e-05, 0.0, -1.9073486328125e-06, -2.5869951248168945, -6.4849853515625e-05, -0.0002346038818359375, -0.05316925048828125, -3.755022044060752e-05, -5.590789805864915e-05, -4.6610399294877425e-05, -6.69950240990147e-05, -0.2440018504858017, -5.555071766139008e-05, -2.09808349609375e-05, -0.004996299743652344, -9.34600830078125e-05, -0.01229095458984375, -1.4631938934326172, -0.00446319580078125, -0.0876648873090744, -0.9238336086273193], "choice_history": [97, 283, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 234, "2", "<EOS>", "7", "<EOS>", "Damaged", "<EOS>", 346, 48, 169, 346, 69, 290, "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole4": [{"elts": [{"_type": "Template54", "hole0": "2"}], "_type": "List"}], "hole2": "Damaged", "_type": "Template36", "hole1": 7, "hole0": 2}, "_type": "Return"}], "hole3": "create_minion", "hole0": "GurubashiBerserker", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 5, "hole0": "Gurubashi Berserker"}], "hole1": "MinionCard"}, "score": -5.4048890616856795, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(Damaged(), [Buff(2())])])\n"}, {"score_history": [-0.0005645751953125, -0.0020313262939453125, -0.01791844703257084, -3.2782078051241115e-05, -7.867782187531702e-06, -9.980052709579468e-06, -1.1563301086425781e-05, -3.2186455882765586e-06, 0.0, -0.0015964508056640625, -7.05718994140625e-05, -3.4570680327306036e-06, -2.777576446533203e-05, -2.3841855067985307e-07, -1.919269561767578e-05, -0.0011112524662166834, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001621246337890625, 0.0, -1.7404556274414062e-05, 0.0, -1.9073486328125e-06, -0.07915687561035156, -7.82012939453125e-05, -0.0007161909597925842, -2.3841855067985307e-07, -0.002655790885910392, 0.0, -0.00275421142578125, 0.0, -0.000194549560546875, -0.0002593994140625, -0.007293921895325184, -2.3841855067985307e-07, -0.0003986358642578125, -0.005227088928222656, -0.002895355224609375, -1.9073486328125e-05, -1.1444091796875e-05, -0.01745770126581192, -0.019107520580291748, -6.079673767089844e-06, -0.01580047607421875, -0.0003185272216796875, -1.1444091796875e-05, -0.0038040876388549805, -0.0001565095444675535, -0.004614830017089844, -0.0002880096435546875, -0.0008814386674202979, -0.0048165288753807545, -0.024110987782478333, -2.1219253540039062e-05, -0.00547027587890625, -0.00102996826171875, -0.00026905478443950415, -5.147363185882568, -0.02349674701690674, -9.72747802734375e-05, -0.003185272216796875, -0.00018203258514404297, -8.96453857421875e-05, -2.0265558760002023e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.91278076171875e-05, -0.01486787386238575, -1.33514404296875e-05, -0.0005495548248291016, -2.09808349609375e-05, -2.6702880859375e-05], "choice_history": [97, 283, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 37, 321, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Character", "Damaged", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Minion", "Is", "Target", "<EOS>", 60, 238, "Give", "Aura", "<EOS>", 21, 174, "Change", "Attack", "<EOS>", 346, 52, 179, "3", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "CharacterDamaged"}, "keywords": [{"value": {"_type": "Template79", "hole0": "MinionIsTarget"}, "_type": "keyword", "arg": "condition"}]}, {"hole3": "SelfSelector", "hole2": [{"n": 3, "_type": "Num"}], "_type": "Template38", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole0": "GiveAura"}], "hole0": "Effect"}, "hole2": "effects", "_type": "Template50", "hole1": 7, "hole0": 2}], "hole3": "create_minion", "hole0": "GurubashiBerserker", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 5, "hole0": "Gurubashi Berserker"}], "hole1": "MinionCard"}, "score": -5.4134346366994635, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(GiveAura(ChangeAttack(3)),\n            SelfSelector()))])\n"}, {"score_history": [-0.0005645751953125, -0.0020313262939453125, -0.01791844703257084, -3.2782078051241115e-05, -7.867782187531702e-06, -9.980052709579468e-06, -1.1563301086425781e-05, -3.2186455882765586e-06, 0.0, -0.0015964508056640625, -7.05718994140625e-05, -3.4570680327306036e-06, -2.777576446533203e-05, -2.3841855067985307e-07, -1.919269561767578e-05, -0.0011112524662166834, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001621246337890625, 0.0, -1.7404556274414062e-05, 0.0, -1.9073486328125e-06, -0.07915687561035156, -7.82012939453125e-05, -0.0007161909597925842, -2.3841855067985307e-07, -0.002655790885910392, 0.0, -0.00275421142578125, 0.0, -0.000194549560546875, -0.0002593994140625, -0.007293921895325184, -2.3841855067985307e-07, -0.0003986358642578125, -0.005227088928222656, -0.002895355224609375, -1.9073486328125e-05, -1.1444091796875e-05, -0.01745770126581192, -0.019107520580291748, -6.079673767089844e-06, -0.01580047607421875, -0.0003185272216796875, -1.1444091796875e-05, -0.0038040876388549805, -0.0001565095444675535, -0.004614830017089844, -0.0002880096435546875, -0.0008814386674202979, -0.0048165288753807545, -3.90198016166687, -1.4120333194732666, -0.010822296142578125, -0.0005741119384765625, -6.246558768907562e-05, -0.0008245699573308229, -0.0001544952392578125, -0.004580497741699219, -0.00039815856143832207, -3.6239605833543465e-05, -7.629365427419543e-06, -1.9073486328125e-06, -2.6702880859375e-05, -6.4849853515625e-05, -0.016446778550744057, -2.6702880859375e-05, -0.0005134344100952148, -1.52587890625e-05, -1.71661376953125e-05], "choice_history": [97, 283, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 37, 321, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Character", "Damaged", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Minion", "Is", "Minion", "<EOS>", 60, 238, "Give", "<EOS>", 21, 174, "Change", "Attack", "<EOS>", 346, 52, 179, "3", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "CharacterDamaged"}, "keywords": [{"value": {"_type": "Template79", "hole0": "MinionIsMinion"}, "_type": "keyword", "arg": "condition"}]}, {"hole3": "SelfSelector", "hole2": [{"n": 3, "_type": "Num"}], "_type": "Template38", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole0": "Give"}], "hole0": "Effect"}, "hole2": "effects", "_type": "Template50", "hole1": 7, "hole0": 2}], "hole3": "create_minion", "hole0": "GurubashiBerserker", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 5, "hole0": "Gurubashi Berserker"}], "hole1": "MinionCard"}, "score": -5.541114602382237, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsMinion()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n"}, {"score_history": [-0.0005645751953125, -0.0020313262939453125, -0.01791844703257084, -3.2782078051241115e-05, -7.867782187531702e-06, -9.980052709579468e-06, -1.1563301086425781e-05, -3.2186455882765586e-06, 0.0, -0.0015964508056640625, -7.05718994140625e-05, -3.4570680327306036e-06, -2.777576446533203e-05, -2.3841855067985307e-07, -1.919269561767578e-05, -0.0011112524662166834, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001621246337890625, 0.0, -1.7404556274414062e-05, 0.0, -1.9073486328125e-06, -2.5869951248168945, -6.4849853515625e-05, -0.0002346038818359375, -0.05316925048828125, -3.755022044060752e-05, -5.590789805864915e-05, -4.6610399294877425e-05, -6.69950240990147e-05, -0.2440018504858017, -5.555071766139008e-05, -2.09808349609375e-05, -0.004996299743652344, -9.34600830078125e-05, -0.01229095458984375, -1.4631938934326172, -0.00446319580078125, -0.0876648873090744, -1.1315215826034546, -0.015662655234336853], "choice_history": [97, 283, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 234, "2", "<EOS>", "7", "<EOS>", "Damaged", "<EOS>", 346, 48, 169, 346, 69, 290, "2", "Attack", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole4": [{"elts": [{"_type": "Template54", "hole0": "2Attack"}], "_type": "List"}], "hole2": "Damaged", "_type": "Template36", "hole1": 7, "hole0": 2}, "_type": "Return"}], "hole3": "create_minion", "hole0": "GurubashiBerserker", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 5, "hole0": "Gurubashi Berserker"}], "hole1": "MinionCard"}, "score": -5.628239690896152, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(Damaged(), [Buff(2Attack())])])\n"}, {"score_history": [-0.0005645751953125, -0.0020313262939453125, -0.01791844703257084, -3.2782078051241115e-05, -7.867782187531702e-06, -9.980052709579468e-06, -1.1563301086425781e-05, -3.2186455882765586e-06, 0.0, -0.0015964508056640625, -7.05718994140625e-05, -3.4570680327306036e-06, -2.777576446533203e-05, -2.3841855067985307e-07, -1.919269561767578e-05, -0.0011112524662166834, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001621246337890625, 0.0, -1.7404556274414062e-05, 0.0, -1.9073486328125e-06, -0.07915687561035156, -7.82012939453125e-05, -0.0007161909597925842, -2.3841855067985307e-07, -0.002655790885910392, 0.0, -0.00275421142578125, 0.0, -0.000194549560546875, -0.0002593994140625, -0.007293921895325184, -2.3841855067985307e-07, -0.0003986358642578125, -5.4379987716674805, -0.0014543533325195312, -0.005095720291137695, -0.009506329894065857, -0.000194549560546875, -0.004921913146972656, 0.0, -0.004489898681640625, -3.814697265625e-06, -0.0541299544274807, -0.0005487203598022461, -4.291534423828125e-06, -0.06541252136230469, -0.0838475227355957, -0.00102996826171875, 0.0, -0.06425740569829941, -0.0051627568900585175, -0.000270843505859375, -0.019942283630371094, -0.001804351806640625, -2.7537309506442398e-05, -6.258476787479594e-05, -0.0002002716064453125, -0.0002193450927734375, -0.00023317329760175198, -0.00010216235386906192, -7.152531907195225e-06, -1.9073486328125e-06, -1.9073486328125e-05, -4.38690185546875e-05, -0.018563756719231606, -9.5367431640625e-06, -0.0003170967102050781, -1.33514404296875e-05, -1.71661376953125e-05], "choice_history": [97, 283, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 37, 321, "Effect", "<EOS>", 347, 71, 293, "Character", "Damaged", "<EOS>", "player", "<EOS>", 38, 325, "Both", "Player", "<EOS>", "condition", "<EOS>", 38, 325, "Is", "Minion", "<EOS>", 60, 238, "Give", "<EOS>", 21, 174, "Change", "Attack", "<EOS>", 346, 52, 179, "3", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"hole4": {"_type": "Template79", "hole0": "IsMinion"}, "hole3": "condition", "hole0": "CharacterDamaged", "_type": "Template56", "hole2": {"_type": "Template79", "hole0": "BothPlayer"}, "hole1": "player"}, {"hole3": "SelfSelector", "hole2": [{"n": 3, "_type": "Num"}], "_type": "Template38", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole0": "Give"}], "hole0": "Effect"}, "hole2": "effects", "_type": "Template50", "hole1": 7, "hole0": 2}], "hole3": "create_minion", "hole0": "GurubashiBerserker", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 5, "hole0": "Gurubashi Berserker"}], "hole1": "MinionCard"}, "score": -5.897025697274017, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(player=\n            BothPlayer(), condition=IsMinion()), ActionTag(Give(\n            ChangeAttack(3)), SelfSelector()))])\n"}, {"score_history": [-0.0005645751953125, -0.0020313262939453125, -0.01791844703257084, -3.2782078051241115e-05, -7.867782187531702e-06, -9.980052709579468e-06, -1.1563301086425781e-05, -3.2186455882765586e-06, 0.0, -0.0015964508056640625, -7.05718994140625e-05, -3.4570680327306036e-06, -2.777576446533203e-05, -2.3841855067985307e-07, -1.919269561767578e-05, -0.0011112524662166834, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001621246337890625, 0.0, -1.7404556274414062e-05, 0.0, -1.9073486328125e-06, -0.07915687561035156, -7.82012939453125e-05, -0.0007161909597925842, -2.3841855067985307e-07, -0.002655790885910392, 0.0, -0.00275421142578125, 0.0, -0.000194549560546875, -0.0002593994140625, -0.007293921895325184, -2.3841855067985307e-07, -0.0003986358642578125, -0.005227088928222656, -0.002895355224609375, -1.9073486328125e-05, -1.1444091796875e-05, -4.6471123695373535, -0.11813902854919434, -0.0021065473556518555, -0.044116973876953125, -0.0005550384521484375, -6.103515625e-05, -0.03375053405761719, 0.0, -3.814697265625e-05, -3.814697265625e-06, -0.8911997079849243, -0.00036966800689697266, -7.152555099310121e-07, -0.015108108520507812, -0.00135040283203125, -3.5524288250599056e-05, -0.0012165304506197572, -0.0001583099365234375, -0.0066852569580078125, -0.0005428732838481665, -4.673001967603341e-05, -1.4424220353248529e-05, -1.9073486328125e-06, -5.340576171875e-05, -5.53131103515625e-05, -0.017446530982851982, -2.6702880859375e-05, -0.00029981136322021484, -2.86102294921875e-05, -2.288818359375e-05], "choice_history": [97, 283, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 37, 321, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Minion", "Died", "<EOS>", 353, 95, 336, "player", "<EOS>", 38, 325, "Enemy", "Player", "<EOS>", 60, 238, "Give", "<EOS>", 21, 174, "Change", "Attack", "<EOS>", 346, 52, 179, "3", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "MinionDied"}, "keywords": [{"value": {"_type": "Template79", "hole0": "EnemyPlayer"}, "_type": "keyword", "arg": "player"}]}, {"hole3": "SelfSelector", "hole2": [{"n": 3, "_type": "Num"}], "_type": "Template38", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole0": "Give"}], "hole0": "Effect"}, "hole2": "effects", "_type": "Template50", "hole1": 7, "hole0": 2}], "hole3": "create_minion", "hole0": "GurubashiBerserker", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 5, "hole0": "Gurubashi Berserker"}], "hole1": "MinionCard"}, "score": -5.905811613229531, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(MinionDied(player=EnemyPlayer()\n            ), ActionTag(Give(ChangeAttack(3)), SelfSelector()))])\n"}, {"score_history": [-0.0005645751953125, -0.0020313262939453125, -0.01791844703257084, -3.2782078051241115e-05, -7.867782187531702e-06, -9.980052709579468e-06, -1.1563301086425781e-05, -3.2186455882765586e-06, 0.0, -0.0015964508056640625, -7.05718994140625e-05, -3.4570680327306036e-06, -2.777576446533203e-05, -2.3841855067985307e-07, -1.919269561767578e-05, -0.0011112524662166834, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001621246337890625, 0.0, -1.7404556274414062e-05, 0.0, -1.9073486328125e-06, -0.07915687561035156, -7.82012939453125e-05, -0.0007161909597925842, -2.3841855067985307e-07, -0.002655790885910392, 0.0, -0.00275421142578125, 0.0, -0.000194549560546875, -0.0002593994140625, -0.007293921895325184, -2.3841855067985307e-07, -0.0003986358642578125, -0.005227088928222656, -0.002895355224609375, -1.9073486328125e-05, -1.1444091796875e-05, -4.6471123695373535, -0.11813902854919434, -0.0021065473556518555, -0.044116973876953125, -0.0005550384521484375, -6.103515625e-05, -0.03375053405761719, 0.0, -3.814697265625e-05, -3.814697265625e-06, -0.9059988260269165, -0.0008857246139086783, -7.510183422709815e-06, -0.041581153869628906, -0.0010547637939453125, -3.492828909656964e-05, -0.0014109606854617596, -0.0001373291015625, -0.004515647888183594, -0.000456807145383209, -6.13927622907795e-05, -1.4066597032069694e-05, -1.9073486328125e-06, -6.4849853515625e-05, -5.7220458984375e-05, -0.01731465756893158, -2.288818359375e-05, -0.00030541419982910156, -2.47955322265625e-05, -2.6702880859375e-05], "choice_history": [97, 283, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 37, 321, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Minion", "Died", "<EOS>", 353, 95, 336, "player", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 60, 238, "Give", "<EOS>", 21, 174, "Change", "Attack", "<EOS>", 346, 52, 179, "3", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "MinionDied"}, "keywords": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "player"}]}, {"hole3": "SelfSelector", "hole2": [{"n": 3, "_type": "Num"}], "_type": "Template38", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole0": "Give"}], "hole0": "Effect"}, "hole2": "effects", "_type": "Template50", "hole1": 7, "hole0": 2}], "hole3": "create_minion", "hole0": "GurubashiBerserker", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 5, "hole0": "Gurubashi Berserker"}], "hole1": "MinionCard"}, "score": -5.945125738595067, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(MinionDied(player=BothPlayer()),\n            ActionTag(Give(ChangeAttack(3)), SelfSelector()))])\n"}, {"score_history": [-0.0005645751953125, -0.0020313262939453125, -0.01791844703257084, -3.2782078051241115e-05, -7.867782187531702e-06, -9.980052709579468e-06, -1.1563301086425781e-05, -3.2186455882765586e-06, 0.0, -0.0015964508056640625, -7.05718994140625e-05, -3.4570680327306036e-06, -2.777576446533203e-05, -2.3841855067985307e-07, -1.919269561767578e-05, -0.0011112524662166834, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001621246337890625, 0.0, -1.7404556274414062e-05, 0.0, -1.9073486328125e-06, -2.5869951248168945, -6.4849853515625e-05, -0.0002346038818359375, -0.05316925048828125, -3.755022044060752e-05, -5.590789805864915e-05, -4.6610399294877425e-05, -6.69950240990147e-05, -0.2440018504858017, -5.555071766139008e-05, -2.09808349609375e-05, -0.004996299743652344, -9.34600830078125e-05, -0.01229095458984375, -2.899970531463623, -0.0962677001953125, -0.07220401614904404, -4.661045386455953e-05], "choice_history": [97, 283, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 234, "2", "<EOS>", "7", "<EOS>", "Damaged", "<EOS>", 346, 48, 169, 346, 66, 279, "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole4": [{"elts": [{"_type": "Template47", "hole0": 2}], "_type": "List"}], "hole2": "Damaged", "_type": "Template36", "hole1": 7, "hole0": 2}, "_type": "Return"}], "hole3": "create_minion", "hole0": "GurubashiBerserker", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 5, "hole0": "Gurubashi Berserker"}], "hole1": "MinionCard"}, "score": -5.9942223347777315, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(Damaged(), [Buff(ChangeAttack(2\n            ))])])\n"}, {"score_history": [-0.0005645751953125, -0.0020313262939453125, -0.01791844703257084, -3.2782078051241115e-05, -7.867782187531702e-06, -9.980052709579468e-06, -1.1563301086425781e-05, -3.2186455882765586e-06, 0.0, -0.0015964508056640625, -7.05718994140625e-05, -3.4570680327306036e-06, -2.777576446533203e-05, -2.3841855067985307e-07, -1.919269561767578e-05, -0.0011112524662166834, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001621246337890625, 0.0, -1.7404556274414062e-05, 0.0, -1.9073486328125e-06, -2.5869951248168945, -6.4849853515625e-05, -0.0002346038818359375, -0.05316925048828125, -3.755022044060752e-05, -5.590789805864915e-05, -4.6610399294877425e-05, -6.69950240990147e-05, -0.2440018504858017, -5.555071766139008e-05, -2.09808349609375e-05, -0.004996299743652344, -9.34600830078125e-05, -0.01229095458984375, -0.40883827209472656, -0.021818161010742188, -0.38921546936035156, -0.023102641105651855, -7.62939453125e-06, -0.21720993518829346, -0.07504594326019287, -3.933906555175781e-06, 0.0, -0.008106231689453125, -9.5367431640625e-06, -0.010552823543548584, -1.1920928244535389e-07, -0.0002913475036621094, -5.7220458984375e-06, -3.62396240234375e-05, -0.05182528495788574, -0.0005857944488525391, -5.161762237548828e-05, -3.814697265625e-06, -0.0003147125244140625, -0.0002231597900390625, -4.00543212890625e-05, -6.103515625e-05, -0.5175403356552124, -3.409384953556582e-05, -0.01677703857421875, -0.4486856460571289, -0.20219039916992188, -0.00010526180267333984, -0.027179360389709473, 0.0, -0.0001163482666015625, -0.0018291473388671875, -3.814697265625e-06, -0.0001926422119140625, -1.52587890625e-05, -0.018604278564453125, -7.62939453125e-06, -0.28489112854003906, -8.344650268554688e-06, -0.0005474090576171875, -0.000125885009765625, -3.814697265625e-06, -0.06145286560058594, -2.86102294921875e-05, -0.34932613372802734, -6.4849853515625e-05, -0.017439842224121094, -9.5367431640625e-06], "choice_history": [97, 283, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 234, "2", "<EOS>", "7", "<EOS>", "Damaged", "<EOS>", 346, 48, 169, 346, 61, 247, "Action", "Tag", "<EOS>", "Change", "Attack", "<EOS>", 346, 52, 179, "2", "<EOS>", "Self", "Selector", "<EOS>", "Greater", "Than", "<EOS>", 346, 45, 150, 21, 174, "Count", "<EOS>", 346, 67, 281, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 353, 95, 336, "value", "<EOS>", 23, 179, "0", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole4": [{"elts": [{"hole6": "GreaterThan", "hole3": "SelfSelector", "hole0": "ActionTag", "_type": "Template39", "hole2": [{"n": 2, "_type": "Num"}], "hole7": [{"_type": "Call", "func": {"_type": "Name", "id": "Count"}, "args": [{"_type": "Template48", "hole1": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "hole0": "IsType"}]}], "hole8": [{"value": {"n": 0, "_type": "Num"}, "_type": "keyword", "arg": "value"}], "hole1": "ChangeAttack"}], "_type": "List"}], "hole2": "Damaged", "_type": "Template36", "hole1": 7, "hole0": 2}, "_type": "Return"}], "hole3": "create_minion", "hole0": "GurubashiBerserker", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 5, "hole0": "Gurubashi Berserker"}], "hole1": "MinionCard"}, "score": -6.080262630809294, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(Damaged(), [ActionTag(\n            ChangeAttack(2), SelfSelector(), GreaterThan(Count(CardSelector\n            (condition=IsType(MINION_TYPE.DRAGON))), value=0))])])\n"}, {"score_history": [-0.0005645751953125, -0.0020313262939453125, -0.01791844703257084, -3.2782078051241115e-05, -7.867782187531702e-06, -9.980052709579468e-06, -1.1563301086425781e-05, -3.2186455882765586e-06, 0.0, -0.0015964508056640625, -7.05718994140625e-05, -3.4570680327306036e-06, -2.777576446533203e-05, -2.3841855067985307e-07, -1.919269561767578e-05, -0.0011112524662166834, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001621246337890625, 0.0, -1.7404556274414062e-05, 0.0, -1.9073486328125e-06, -2.5869951248168945, -6.4849853515625e-05, -0.0002346038818359375, -0.05316925048828125, -3.755022044060752e-05, -5.590789805864915e-05, -4.6610399294877425e-05, -6.69950240990147e-05, -0.2440018504858017, -5.555071766139008e-05, -2.09808349609375e-05, -0.004996299743652344, -9.34600830078125e-05, -0.01229095458984375, -0.40883827209472656, -0.021818161010742188, -0.38921546936035156, -0.023102641105651855, -7.62939453125e-06, -0.21720993518829346, -0.07504594326019287, -3.933906555175781e-06, 0.0, -0.008106231689453125, -9.5367431640625e-06, -0.010552823543548584, -1.1920928244535389e-07, -0.0002913475036621094, -5.7220458984375e-06, -3.62396240234375e-05, -0.05182528495788574, -0.0005857944488525391, -5.161762237548828e-05, -3.814697265625e-06, -0.0003147125244140625, -0.0002231597900390625, -4.00543212890625e-05, -6.103515625e-05, -1.4193214178085327, -1.71661376953125e-05, -3.814697265625e-06, -0.014417648315429688, -0.000850677490234375, -0.5099066495895386, -1.71661376953125e-05, -0.007122039794921875, -8.0108642578125e-05, -0.0033884039148688316, -0.000468701240606606, -2.3841830625315197e-06, -0.016092300415039062, -0.00029754638671875, -1.33514404296875e-05, -0.004677414894104004, -1.1682510375976562e-05, -0.009050369262695312, -0.00011444091796875, -0.0066387467086315155, -1.52587890625e-05], "choice_history": [97, 283, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 234, "2", "<EOS>", "7", "<EOS>", "Damaged", "<EOS>", 346, 48, 169, 346, 61, 247, "Action", "Tag", "<EOS>", "Change", "Attack", "<EOS>", 346, 52, 179, "2", "<EOS>", "Self", "Selector", "<EOS>", "Greater", "Than", "<EOS>", 346, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "health", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", 353, 95, 336, "value", "<EOS>", 23, 179, "0", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole4": [{"elts": [{"hole6": "GreaterThan", "hole3": "SelfSelector", "hole0": "ActionTag", "_type": "Template39", "hole2": [{"n": 2, "_type": "Num"}], "hole7": [{"_type": "Call", "func": {"_type": "Name", "id": "Attribute"}, "args": [{"_type": "Str", "s": "health"}, {"_type": "Template79", "hole0": "SelfSelector"}]}], "hole8": [{"value": {"n": 0, "_type": "Num"}, "_type": "keyword", "arg": "value"}], "hole1": "ChangeAttack"}], "_type": "List"}], "hole2": "Damaged", "_type": "Template36", "hole1": 7, "hole0": 2}, "_type": "Return"}], "hole3": "create_minion", "hole0": "GurubashiBerserker", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 5, "hole0": "Gurubashi Berserker"}], "hole1": "MinionCard"}, "score": -6.125590244991791, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(Damaged(), [ActionTag(\n            ChangeAttack(2), SelfSelector(), GreaterThan(Attribute('health',\n            SelfSelector()), value=0))])])\n"}]}
{"index": 44, "beams": [{"score_history": [-0.0002117156982421875, -0.0003414154052734375, -7.748573807475623e-06, -0.00020062841940671206, -0.013590533286333084, -4.2080348066519946e-05, -7.903257937869057e-05, -0.00025582313537597656, -4.172325134277344e-06, -6.103515625e-05, -0.000164031982421875, -0.0002841949462890625, -0.0003299713134765625, -1.9073486328125e-05, -6.186878454172984e-05, 0.0, -0.0003504753112792969, -1.9073486328125e-06, -0.0016994476318359375, -8.96453857421875e-05, -0.0003757476806640625, -1.9907896785298362e-05, -5.53131103515625e-05, -4.053115117130801e-05, -4.9591064453125e-05, -0.0011084078578278422, -0.000690460205078125, -1.9073486328125e-05, -9.5367431640625e-06, -3.576278118089249e-07, -2.288818359375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -3.814697265625e-06, -1.1444091796875e-05, -6.4849853515625e-05, -5.7220458984375e-06, -0.0008854866027832031, -2.09808349609375e-05, -3.0517578125e-05, -5.14984130859375e-05, -1.1444091796875e-05, 0.0, -8.404254913330078e-05, -2.6702880859375e-05, -0.000629425048828125, -1.9073486328125e-06, -0.0016765594482421875, -9.72747802734375e-05, -7.62939453125e-06, -0.0017248360672965646, -2.0265579223632812e-06, -0.007298469543457031, -0.000171661376953125, -0.0001010894775390625, -5.7220458984375e-05, -3.814697265625e-05, -3.24249267578125e-05, -0.00036847591400146484, -3.814697265625e-06, -0.002084970474243164, 0.0, -0.005356774665415287, -9.65590606938349e-06, -0.0002498626708984375, 0.0, -0.00012886524200439453, 0.0, -0.0003299713134765625, -8.7738037109375e-05, -0.00010680697596399114, -6.437280717364047e-06, -0.01358795166015625, -1.71661376953125e-05, -6.866455078125e-05, -0.0008678436279296875, -1.71661376953125e-05, -1.52587890625e-05, 0.0, -3.933906555175781e-05, -1.9073486328125e-06, -0.00011456011998234317, 0.0, -1.3232214769232087e-05, -1.1920928244535389e-07, -0.0003096969739999622, -7.152555099310121e-07, -0.000545501708984375, -2.47955322265625e-05, -0.0004978179931640625, -1.9073486328125e-06, -0.0044651031494140625, 0.0, -0.0002999305725097656, -2.0265579223632812e-06, -0.0016225576400756836, -1.0967194612021558e-05, -0.0005664817290380597, -2.50339189733495e-06, -5.14984130859375e-05, -0.013513565063476562, -4.9591064453125e-05, -0.0007599588134326041, -0.0015673328889533877, -7.62939453125e-06, -0.00011444091796875, -0.0014385753311216831, -0.00018095967243425548, -4.38690185546875e-05, -0.0010318756103515625, -0.0035724639892578125, -4.57763671875e-05, -0.0001201629638671875, -5.7220458984375e-06, -1.251697449333733e-05, -2.634490556374658e-05, -0.0007991605089046061, -1.33514404296875e-05], "choice_history": [97, 285, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 52, 179, "4", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "HammerOfWrath", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"n": 4, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -0.08844322795828674, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n"}, {"score_history": [-0.0002117156982421875, -0.0003414154052734375, -7.748573807475623e-06, -0.00020062841940671206, -4.320595741271973, -0.00014149195339996368, -0.0005500037805177271, -9.917705756379291e-05, -0.0003070831298828125, -6.079673767089844e-06, -7.62939453125e-05, -0.0001239776611328125, -0.00035858154296875, -0.0003299713134765625, -3.0517578125e-05, -7.200146501418203e-05, 0.0, -0.0004845857620239258, -1.9073486328125e-06, -0.00171661376953125, -8.20159912109375e-05, -0.000484466552734375, -2.02655210159719e-05, -5.53131103515625e-05, -4.0650356822879985e-05, -4.9591064453125e-05, -0.0011638401774689555, -0.000732421875, -2.09808349609375e-05, -1.1444091796875e-05, -4.768370445162873e-07, -2.09808349609375e-05, -1.33514404296875e-05, -2.86102294921875e-05, -3.814697265625e-06, -1.1444091796875e-05, -6.4849853515625e-05, -5.7220458984375e-06, -0.0008836984634399414, -2.09808349609375e-05, -3.24249267578125e-05, -5.14984130859375e-05, -1.1444091796875e-05, 0.0, -0.00010883808135986328, -2.86102294921875e-05, -0.000614166259765625, -1.9073486328125e-06, -0.0017490386962890625, -0.000102996826171875, -9.5367431640625e-06, -0.0017759765032678843, -2.0265579223632812e-06, -0.007349967956542969, -0.0001697540283203125, -0.0001010894775390625, -5.7220458984375e-05, -3.814697265625e-05, -3.24249267578125e-05, -0.00037038326263427734, -3.814697265625e-06, -0.002100229263305664, 0.0, -0.005329378880560398, -9.65590606938349e-06, -0.00025177001953125, 0.0, -0.0001289844512939453, 0.0, -0.0003299713134765625, -8.7738037109375e-05, -0.00010621098772389814, -6.437280717364047e-06, -0.013548851013183594, -1.71661376953125e-05, -6.866455078125e-05, -0.0008697509765625, -1.71661376953125e-05, -1.52587890625e-05, 0.0, -3.933906555175781e-05, -1.9073486328125e-06, -0.00011456011998234317, 0.0, -1.3232214769232087e-05, -1.1920928244535389e-07, -0.0003095777938142419, -7.152555099310121e-07, -0.000545501708984375, -2.47955322265625e-05, -0.000499725341796875, -1.9073486328125e-06, -0.004451751708984375, 0.0, -0.0002999305725097656, -2.0265579223632812e-06, -0.0016254186630249023, -1.0967194612021558e-05, -0.0005705348448827863, -2.50339189733495e-06, -5.14984130859375e-05, -0.013514518737792969, -4.9591064453125e-05, -0.0007599588134326041, -0.001566023682244122, -7.62939453125e-06, -0.00011444091796875, -0.0014371465658769011, -0.00018107888172380626, -4.38690185546875e-05, -0.0010318756103515625, -0.003574371337890625, -4.57763671875e-05, -0.0001201629638671875, -5.7220458984375e-06, -1.251697449333733e-05, -2.634490556374658e-05, -0.0007990413578227162, -1.33514404296875e-05], "choice_history": [97, 285, "Hammer", "Of", "The", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 52, 179, "4", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "HammerOfTheWrath", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"n": 4, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.396738386824033, "inferred_code": "class HammerOfTheWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n"}, {"score_history": [-0.0002117156982421875, -0.0003414154052734375, -7.748573807475623e-06, -0.00020062841940671206, -0.013590533286333084, -4.2080348066519946e-05, -7.903257937869057e-05, -0.00025582313537597656, -4.172325134277344e-06, -6.103515625e-05, -0.000164031982421875, -0.0002841949462890625, -0.0003299713134765625, -1.9073486328125e-05, -6.186878454172984e-05, 0.0, -0.0003504753112792969, -1.9073486328125e-06, -0.0016994476318359375, -8.96453857421875e-05, -0.0003757476806640625, -1.9907896785298362e-05, -5.53131103515625e-05, -4.053115117130801e-05, -4.9591064453125e-05, -0.0011084078578278422, -0.000690460205078125, -1.9073486328125e-05, -9.5367431640625e-06, -3.576278118089249e-07, -2.288818359375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -3.814697265625e-06, -1.1444091796875e-05, -6.4849853515625e-05, -5.7220458984375e-06, -0.0008854866027832031, -2.09808349609375e-05, -3.0517578125e-05, -5.14984130859375e-05, -1.1444091796875e-05, 0.0, -8.404254913330078e-05, -2.6702880859375e-05, -0.000629425048828125, -1.9073486328125e-06, -0.0016765594482421875, -9.72747802734375e-05, -7.62939453125e-06, -0.0017248360672965646, -2.0265579223632812e-06, -0.007298469543457031, -0.000171661376953125, -0.0001010894775390625, -5.7220458984375e-05, -3.814697265625e-05, -3.24249267578125e-05, -0.00036847591400146484, -3.814697265625e-06, -0.002084970474243164, 0.0, -0.005356774665415287, -9.65590606938349e-06, -0.0002498626708984375, 0.0, -0.00012886524200439453, 0.0, -0.0003299713134765625, -8.7738037109375e-05, -0.00010680697596399114, -6.437280717364047e-06, -4.424245834350586, -9.72747802734375e-05, -0.000659942626953125, -0.00077056884765625, -2.86102294921875e-05, -1.71661376953125e-05, 0.0, -0.00011229515075683594, 0.0, -8.320795313920826e-05, 0.0, -1.3828244846081361e-05, -1.1920928244535389e-07, -0.0004884808440692723, -7.152555099310121e-07, -0.0056438446044921875, -3.24249267578125e-05, -0.0037660598754882812, -1.9073486328125e-06, -0.000701904296875, 0.0, -0.0004152059555053711, -2.0265579223632812e-06, -0.00101470947265625, -1.3112935448589269e-05, -0.0006937974831089377, -1.311301275563892e-06, -6.103515625e-05, -0.01581287384033203, -6.4849853515625e-05, -0.0006830687634646893, -0.0010924350935965776, -1.1444091796875e-05, -0.0001087188720703125, -0.0012764029670506716, -0.00018751618335954845, -1.71661376953125e-05, -0.0007343292236328125, -0.0027313232421875, -1.9073486328125e-05, -9.1552734375e-05, -1.9073486328125e-06, -3.5643577575683594e-05, -2.1815061700181104e-05, -0.0010131164453923702, -1.1444091796875e-05, -7.62939453125e-05, -0.00028228759765625, -0.010042190551757812, -1.71661376953125e-05, -0.0001373291015625, 0.0, -3.445148468017578e-05, -1.2278481335670222e-05, -0.0012083037290722132, -3.933906555175781e-06, -6.103515625e-05, -0.000217437744140625, -0.00569915771484375, -3.62396240234375e-05, -0.0002384185791015625, 0.0, -1.9669532775878906e-05, -2.5748875486897305e-05, -0.0010708546033129096, -2.1457672119140625e-06], "choice_history": [97, 285, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 52, 179, "4", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 362, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "HammerOfWrath", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"n": 4, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.5239602257567455, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n        player.draw()\n        player.draw()\n"}, {"score_history": [-0.0002117156982421875, -0.0003414154052734375, -7.748573807475623e-06, -0.00020062841940671206, -0.013590533286333084, -4.2080348066519946e-05, -7.903257937869057e-05, -0.00025582313537597656, -4.172325134277344e-06, -6.103515625e-05, -0.000164031982421875, -0.0002841949462890625, -0.0003299713134765625, -1.9073486328125e-05, -6.186878454172984e-05, 0.0, -0.0003504753112792969, -1.9073486328125e-06, -0.0016994476318359375, -8.96453857421875e-05, -0.0003757476806640625, -1.9907896785298362e-05, -5.53131103515625e-05, -4.053115117130801e-05, -4.9591064453125e-05, -0.0011084078578278422, -0.000690460205078125, -1.9073486328125e-05, -9.5367431640625e-06, -3.576278118089249e-07, -2.288818359375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -3.814697265625e-06, -1.1444091796875e-05, -6.4849853515625e-05, -5.7220458984375e-06, -0.0008854866027832031, -2.09808349609375e-05, -3.0517578125e-05, -5.14984130859375e-05, -1.1444091796875e-05, 0.0, -8.404254913330078e-05, -2.6702880859375e-05, -0.000629425048828125, -1.9073486328125e-06, -0.0016765594482421875, -9.72747802734375e-05, -7.62939453125e-06, -0.0017248360672965646, -2.0265579223632812e-06, -5.194482803344727, -0.000507354736328125, -0.04941946268081665, -1.1920928244535389e-07, -0.00017380714416503906, -3.814697265625e-06, -2.110004425048828e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0023555755615234375, -0.00013422164192888886, -1.1205666851310525e-05, -0.017107009887695312, -1.33514404296875e-05, -0.0001697540283203125, -0.000240325927734375, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -2.2649763195659034e-05, -1.9073486328125e-06, -2.133846101060044e-05, 0.0, -2.098078948620241e-05, -1.1920928244535389e-07, -0.00016259774565696716, -4.768370445162873e-07, -0.0014781951904296875, -4.1961669921875e-05, -0.000385284423828125, -1.9073486328125e-06, -0.0069732666015625, 0.0, -0.001743912696838379, -2.1457672119140625e-06, -0.0010575054911896586, -2.4199192921514623e-05, -0.00043940480099990964, -1.7881377516459906e-06, -5.91278076171875e-05, -0.011485099792480469, -4.1961669921875e-05, -0.0007983443210832775, -0.0016041103517636657, -7.62939453125e-06, -0.0001125335693359375, -0.0017964912112802267, -0.00016951558063738048, -6.4849853515625e-05, -0.0014133453369140625, -0.003910064697265625, -6.29425048828125e-05, -0.0001220703125, -5.7220458984375e-06, -6.4373016357421875e-06, -2.109982233378105e-05, -0.00078783486969769, -1.71661376953125e-05], "choice_history": [97, 285, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 52, 179, "4", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 23, 179, "3", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "HammerOfWrath", "_type": "Template5", "hole2": [{"hole3": [{"value": {"n": 3, "_type": "Num"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"n": 4, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.325139298698602, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=3)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n"}, {"score_history": [-0.0002117156982421875, -0.0003414154052734375, -7.748573807475623e-06, -0.00020062841940671206, -0.013590533286333084, -4.2080348066519946e-05, -7.903257937869057e-05, -0.00025582313537597656, -4.172325134277344e-06, -6.103515625e-05, -0.000164031982421875, -0.0002841949462890625, -0.0003299713134765625, -1.9073486328125e-05, -6.186878454172984e-05, 0.0, -0.0003504753112792969, -1.9073486328125e-06, -0.0016994476318359375, -8.96453857421875e-05, -0.0003757476806640625, -1.9907896785298362e-05, -5.53131103515625e-05, -4.053115117130801e-05, -4.9591064453125e-05, -0.0011084078578278422, -0.000690460205078125, -1.9073486328125e-05, -9.5367431640625e-06, -3.576278118089249e-07, -2.288818359375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -3.814697265625e-06, -1.1444091796875e-05, -6.4849853515625e-05, -5.7220458984375e-06, -0.0008854866027832031, -2.09808349609375e-05, -3.0517578125e-05, -5.14984130859375e-05, -1.1444091796875e-05, 0.0, -8.404254913330078e-05, -2.6702880859375e-05, -0.000629425048828125, -1.9073486328125e-06, -0.0016765594482421875, -9.72747802734375e-05, -7.62939453125e-06, -0.0017248360672965646, -2.0265579223632812e-06, -0.007298469543457031, -0.000171661376953125, -0.0001010894775390625, -5.7220458984375e-05, -3.814697265625e-05, -3.24249267578125e-05, -0.00036847591400146484, -3.814697265625e-06, -0.002084970474243164, 0.0, -5.4605841636657715, -4.768370445162873e-07, -0.0006345510482788086, 0.0, -8.916854130802676e-05, 0.0, -0.0002498626708984375, -7.43865966796875e-05, -6.735168426530436e-05, -4.410734163684538e-06, -0.013301849365234375, -1.71661376953125e-05, -7.2479248046875e-05, -0.00081634521484375, -1.52587890625e-05, -1.52587890625e-05, 0.0, -4.124641418457031e-05, -1.9073486328125e-06, -0.00011277198063908145, 0.0, -1.3113007298670709e-05, -1.1920928244535389e-07, -0.0003058822767343372, -7.152555099310121e-07, -0.0006542205810546875, -2.6702880859375e-05, -0.0004825592041015625, -1.9073486328125e-06, -0.00438690185546875, 0.0, -0.0003097057342529297, -2.0265579223632812e-06, -0.001591324806213379, -1.1324817933200393e-05, -0.0005738727049902081, -2.264974000354414e-06, -5.340576171875e-05, -0.013401985168457031, -4.76837158203125e-05, -0.0007869001128710806, -0.0015450753271579742, -7.62939453125e-06, -0.00011444091796875, -0.0014428639551624656, -0.00018095967243425548, -4.1961669921875e-05, -0.001041412353515625, -0.003520965576171875, -4.38690185546875e-05, -0.0001201629638671875, -5.7220458984375e-06, -1.251697449333733e-05, -2.610649426060263e-05, -0.0008141798316501081, -1.33514404296875e-05], "choice_history": [97, 285, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 52, 179, "4", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "damage", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "HammerOfWrath", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "damage"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"n": 4, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.543401595248092, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.damage)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n"}, {"score_history": [-0.0002117156982421875, -0.0003414154052734375, -7.748573807475623e-06, -0.00020062841940671206, -0.013590533286333084, -4.2080348066519946e-05, -7.903257937869057e-05, -0.00025582313537597656, -4.172325134277344e-06, -6.103515625e-05, -0.000164031982421875, -0.0002841949462890625, -0.0003299713134765625, -1.9073486328125e-05, -6.186878454172984e-05, 0.0, -0.0003504753112792969, -1.9073486328125e-06, -0.0016994476318359375, -8.96453857421875e-05, -0.0003757476806640625, -1.9907896785298362e-05, -5.53131103515625e-05, -4.053115117130801e-05, -4.9591064453125e-05, -0.0011084078578278422, -0.000690460205078125, -1.9073486328125e-05, -9.5367431640625e-06, -3.576278118089249e-07, -2.288818359375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -3.814697265625e-06, -1.1444091796875e-05, -6.4849853515625e-05, -5.7220458984375e-06, -0.0008854866027832031, -2.09808349609375e-05, -3.0517578125e-05, -5.14984130859375e-05, -1.1444091796875e-05, 0.0, -8.404254913330078e-05, -2.6702880859375e-05, -0.000629425048828125, -1.9073486328125e-06, -0.0016765594482421875, -9.72747802734375e-05, -7.62939453125e-06, -0.0017248360672965646, -2.0265579223632812e-06, -0.007298469543457031, -0.000171661376953125, -0.0001010894775390625, -5.7220458984375e-05, -3.814697265625e-05, -3.24249267578125e-05, -0.00036847591400146484, -3.814697265625e-06, -0.002084970474243164, 0.0, -0.005356774665415287, -9.65590606938349e-06, -0.0002498626708984375, 0.0, -0.00012886524200439453, 0.0, -0.0003299713134765625, -8.7738037109375e-05, -0.00010680697596399114, -6.437280717364047e-06, -0.01358795166015625, -1.71661376953125e-05, -6.866455078125e-05, -0.0008678436279296875, -1.71661376953125e-05, -1.52587890625e-05, 0.0, -3.933906555175781e-05, -1.9073486328125e-06, -0.00011456011998234317, 0.0, -1.3232214769232087e-05, -1.1920928244535389e-07, -0.0003096969739999622, -7.152555099310121e-07, -0.000545501708984375, -2.47955322265625e-05, -0.0004978179931640625, -1.9073486328125e-06, -0.0044651031494140625, 0.0, -0.0002999305725097656, -2.0265579223632812e-06, -0.0016225576400756836, -1.0967194612021558e-05, -0.0005664817290380597, -2.50339189733495e-06, -5.14984130859375e-05, -5.53018856048584, -0.000286102294921875, -7.331336382776499e-05, -1.5497195136049413e-06, -2.6702880859375e-05, -6.4849853515625e-05, -0.00013935539755038917, -3.1948089599609375e-05, -0.0005035400390625, -0.0001811981201171875, -0.00888824462890625, -3.62396240234375e-05, -0.000118255615234375, -1.9073486328125e-06, -4.0531158447265625e-06, -3.2186455882765586e-06, -0.0004976987256668508, -3.62396240234375e-05], "choice_history": [97, 285, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 52, 179, "4", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 52, 179, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"n": 3, "_type": "Num"}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "HammerOfWrath", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"n": 4, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.6062229085601345, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(3, self)\n        player.draw()\n"}, {"score_history": [-0.0002117156982421875, -0.0003414154052734375, -7.748573807475623e-06, -0.00020062841940671206, -0.013590533286333084, -4.2080348066519946e-05, -7.903257937869057e-05, -0.00025582313537597656, -4.172325134277344e-06, -6.103515625e-05, -0.000164031982421875, -0.0002841949462890625, -0.0003299713134765625, -1.9073486328125e-05, -6.186878454172984e-05, 0.0, -0.0003504753112792969, -1.9073486328125e-06, -0.0016994476318359375, -8.96453857421875e-05, -0.0003757476806640625, -1.9907896785298362e-05, -5.53131103515625e-05, -4.053115117130801e-05, -4.9591064453125e-05, -0.0011084078578278422, -0.000690460205078125, -1.9073486328125e-05, -9.5367431640625e-06, -3.576278118089249e-07, -2.288818359375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -3.814697265625e-06, -1.1444091796875e-05, -6.4849853515625e-05, -5.7220458984375e-06, -0.0008854866027832031, -2.09808349609375e-05, -3.0517578125e-05, -5.14984130859375e-05, -1.1444091796875e-05, 0.0, -8.404254913330078e-05, -2.6702880859375e-05, -0.000629425048828125, -1.9073486328125e-06, -0.0016765594482421875, -9.72747802734375e-05, -7.62939453125e-06, -0.0017248360672965646, -2.0265579223632812e-06, -0.007298469543457031, -0.000171661376953125, -0.0001010894775390625, -5.7220458984375e-05, -3.814697265625e-05, -3.24249267578125e-05, -0.00036847591400146484, -3.814697265625e-06, -0.002084970474243164, 0.0, -0.005356774665415287, -9.65590606938349e-06, -0.0002498626708984375, 0.0, -0.00012886524200439453, 0.0, -0.0003299713134765625, -8.7738037109375e-05, -0.00010680697596399114, -6.437280717364047e-06, -0.01358795166015625, -1.71661376953125e-05, -6.866455078125e-05, -0.0008678436279296875, -1.71661376953125e-05, -1.52587890625e-05, 0.0, -3.933906555175781e-05, -1.9073486328125e-06, -0.00011456011998234317, 0.0, -1.3232214769232087e-05, -1.1920928244535389e-07, -0.0003096969739999622, -7.152555099310121e-07, -0.000545501708984375, -2.47955322265625e-05, -0.0004978179931640625, -1.9073486328125e-06, -5.41823673248291, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.007464408874511719, 0.0, -0.45621025562286377, 0.0, -0.023531630635261536, -1.6689286894688848e-06, -0.0004947094712406397, -0.00013124081306159496, -0.0002593994140625, -0.0074977874755859375, -0.000263214111328125, -0.00016164778207894415, -0.004940573126077652, -8.20159912109375e-05, -0.0002384185791015625, -0.0007974577601999044, -0.000130653046653606, -4.76837158203125e-05, -0.0015773773193359375, -0.0045146942138671875, -1.9073486328125e-05, -0.000152587890625, -7.62939453125e-06, -1.072883515007561e-05, -2.0265373677830212e-05, -0.0007678139954805374, -1.71661376953125e-05], "choice_history": [97, 285, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 52, 179, "4", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "HammerOfWrath", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"n": 4, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.985728121742959, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n        player.draw()\n"}, {"score_history": [-0.0002117156982421875, -0.0003414154052734375, -7.748573807475623e-06, -0.00020062841940671206, -0.013590533286333084, -4.2080348066519946e-05, -7.903257937869057e-05, -0.00025582313537597656, -4.172325134277344e-06, -6.103515625e-05, -0.000164031982421875, -0.0002841949462890625, -0.0003299713134765625, -1.9073486328125e-05, -6.186878454172984e-05, 0.0, -0.0003504753112792969, -1.9073486328125e-06, -0.0016994476318359375, -8.96453857421875e-05, -0.0003757476806640625, -1.9907896785298362e-05, -5.53131103515625e-05, -4.053115117130801e-05, -4.9591064453125e-05, -0.0011084078578278422, -0.000690460205078125, -1.9073486328125e-05, -9.5367431640625e-06, -3.576278118089249e-07, -2.288818359375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -3.814697265625e-06, -1.1444091796875e-05, -6.4849853515625e-05, -5.7220458984375e-06, -0.0008854866027832031, -2.09808349609375e-05, -3.0517578125e-05, -5.14984130859375e-05, -1.1444091796875e-05, 0.0, -8.404254913330078e-05, -2.6702880859375e-05, -0.000629425048828125, -1.9073486328125e-06, -0.0016765594482421875, -9.72747802734375e-05, -7.62939453125e-06, -0.0017248360672965646, -2.0265579223632812e-06, -0.007298469543457031, -0.000171661376953125, -0.0001010894775390625, -5.7220458984375e-05, -3.814697265625e-05, -3.24249267578125e-05, -0.00036847591400146484, -3.814697265625e-06, -0.002084970474243164, 0.0, -0.005356774665415287, -9.65590606938349e-06, -0.0002498626708984375, 0.0, -0.00012886524200439453, 0.0, -0.0003299713134765625, -8.7738037109375e-05, -0.00010680697596399114, -6.437280717364047e-06, -0.01358795166015625, -1.71661376953125e-05, -6.866455078125e-05, -0.0008678436279296875, -1.71661376953125e-05, -1.52587890625e-05, 0.0, -3.933906555175781e-05, -1.9073486328125e-06, -0.00011456011998234317, 0.0, -1.3232214769232087e-05, -1.1920928244535389e-07, -0.0003096969739999622, -7.152555099310121e-07, -0.000545501708984375, -2.47955322265625e-05, -0.0004978179931640625, -1.9073486328125e-06, -0.0044651031494140625, 0.0, -0.0002999305725097656, -2.0265579223632812e-06, -0.0016225576400756836, -1.0967194612021558e-05, -0.0005664817290380597, -2.50339189733495e-06, -5.14984130859375e-05, -0.013513565063476562, -4.9591064453125e-05, -0.0007599588134326041, -0.0015673328889533877, -7.62939453125e-06, -0.00011444091796875, -0.0014385753311216831, -0.00018095967243425548, -4.38690185546875e-05, -0.0010318756103515625, -6.11650276184082, -0.0659494400024414, -0.04317081719636917, -5.924526340095326e-05], "choice_history": [97, 285, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 52, 179, "4", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "HammerOfWrath", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"n": 4, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.309529993065716, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score_history": [-0.0002117156982421875, -0.0003414154052734375, -7.748573807475623e-06, -0.00020062841940671206, -0.013590533286333084, -4.2080348066519946e-05, -7.903257937869057e-05, -0.00025582313537597656, -4.172325134277344e-06, -6.103515625e-05, -0.000164031982421875, -0.0002841949462890625, -0.0003299713134765625, -1.9073486328125e-05, -6.186878454172984e-05, 0.0, -0.0003504753112792969, -1.9073486328125e-06, -0.0016994476318359375, -8.96453857421875e-05, -0.0003757476806640625, -1.9907896785298362e-05, -5.53131103515625e-05, -4.053115117130801e-05, -4.9591064453125e-05, -0.0011084078578278422, -0.000690460205078125, -1.9073486328125e-05, -9.5367431640625e-06, -3.576278118089249e-07, -2.288818359375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -3.814697265625e-06, -1.1444091796875e-05, -6.4849853515625e-05, -5.7220458984375e-06, -0.0008854866027832031, -2.09808349609375e-05, -3.0517578125e-05, -5.14984130859375e-05, -1.1444091796875e-05, 0.0, -8.404254913330078e-05, -2.6702880859375e-05, -0.000629425048828125, -1.9073486328125e-06, -0.0016765594482421875, -9.72747802734375e-05, -7.62939453125e-06, -0.0017248360672965646, -2.0265579223632812e-06, -0.007298469543457031, -0.000171661376953125, -0.0001010894775390625, -5.7220458984375e-05, -3.814697265625e-05, -3.24249267578125e-05, -0.00036847591400146484, -3.814697265625e-06, -6.464080810546875, -2.3841855067985307e-07, -0.014961090870201588, -9.179073458653875e-06, -0.0001500844955444336, 0.0, -5.97238504269626e-05, 0.0, -0.00034332275390625, -5.7220458984375e-05, -4.327240458223969e-05, -2.3841830625315197e-06, -0.010876655578613281, -1.71661376953125e-05, -6.29425048828125e-05, -0.000823974609375, -1.71661376953125e-05, -1.52587890625e-05, 0.0, -3.743171691894531e-05, -1.9073486328125e-06, -0.00011849402653751895, 0.0, -1.3113007298670709e-05, -1.1920928244535389e-07, -0.00031923322239890695, -8.344646857949556e-07, -0.000606536865234375, -2.6702880859375e-05, -0.000530242919921875, -1.9073486328125e-06, -0.0039501190185546875, 0.0, -0.0002884864807128906, -2.0265579223632812e-06, -0.0015984773635864258, -1.0847986231965479e-05, -0.000580071471631527, -2.50339189733495e-06, -5.14984130859375e-05, -0.013468742370605469, -4.9591064453125e-05, -0.0007604356505908072, -0.0015543593326583505, -7.62939453125e-06, -0.00011444091796875, -0.0014215469127520919, -0.00018107888172380626, -4.38690185546875e-05, -0.0010776519775390625, -0.0035228729248046875, -4.1961669921875e-05, -0.0001201629638671875, -5.7220458984375e-06, -1.251697449333733e-05, -2.586808113846928e-05, -0.0008142982260324061, -1.52587890625e-05], "choice_history": [97, 285, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 52, 179, "4", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "find_spell_target", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "HammerOfWrath", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"n": 4, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.556533187802437, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.find_spell_target.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n"}, {"score_history": [-0.0002117156982421875, -0.0003414154052734375, -7.748573807475623e-06, -0.00020062841940671206, -0.013590533286333084, -4.2080348066519946e-05, -7.903257937869057e-05, -0.00025582313537597656, -4.172325134277344e-06, -6.103515625e-05, -0.000164031982421875, -0.0002841949462890625, -0.0003299713134765625, -1.9073486328125e-05, -6.186878454172984e-05, 0.0, -0.0003504753112792969, -1.9073486328125e-06, -6.440507888793945, -0.000743865966796875, -0.0001544952392578125, -1.5258743587764911e-05, -5.7220458984375e-05, -5.3405754442792386e-05, -5.7220458984375e-05, -0.0007704495219513774, -0.0005168914794921875, -1.1444091796875e-05, -1.52587890625e-05, -9.536738616588991e-07, -3.0517578125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -1.1444091796875e-05, -1.52587890625e-05, -3.814697265625e-05, -5.7220458984375e-06, -0.0012291669845581055, -1.33514404296875e-05, -0.000141143798828125, -7.2479248046875e-05, -8.392333984375e-05, 0.0, -4.208087921142578e-05, -2.09808349609375e-05, -0.0004901885986328125, -1.9073486328125e-06, -0.039078712463378906, -0.0055828094482421875, -0.0029734675772488117, -1.311301275563892e-06, -0.0008106231689453125, -0.002628326416015625, -1.52587890625e-05, -0.0006508826627396047, -1.9073486328125e-06, -9.5367431640625e-05, -0.0001049041748046875, -5.14984130859375e-05, -2.288818359375e-05, -7.62939453125e-05, -4.1961669921875e-05, -0.00019109249114990234, -2.0265579223632812e-06, -0.0010040998458862305, 0.0, -0.006598123349249363, -1.597391747054644e-05, -0.00016069412231445312, 0.0, -0.00012016295659122989, 0.0, -0.0002613067626953125, -8.58306884765625e-05, -5.233204137766734e-05, -7.510157047363464e-06, -0.009709358215332031, -1.52587890625e-05, -7.2479248046875e-05, -0.0009555816650390625, -1.71661376953125e-05, -1.33514404296875e-05, 0.0, -3.719329833984375e-05, -1.9073486328125e-06, -0.00010895728337345645, 0.0, -1.1086449376307428e-05, -1.1920928244535389e-07, -0.0003141073975712061, -8.344646857949556e-07, -0.0005092620849609375, -2.47955322265625e-05, -0.0003566741943359375, -1.9073486328125e-06, -0.008630752563476562, 0.0, -0.00048089027404785156, -2.1457672119140625e-06, -0.0014917850494384766, -1.3828182090946939e-05, -0.0005089039332233369, -2.50339189733495e-06, -5.7220458984375e-05, -0.0139923095703125, -4.76837158203125e-05, -0.0008146759355440736, -0.001559477299451828, -7.62939453125e-06, -0.0001163482666015625, -0.0015507490606978536, -0.0001827478117775172, -4.1961669921875e-05, -0.0010395050048828125, -0.003536224365234375, -4.9591064453125e-05, -0.0001201629638671875, -5.7220458984375e-06, -1.251697449333733e-05, -2.634490556374658e-05, -0.0007948697893880308, -1.52587890625e-05], "choice_history": [97, 285, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 52, 179, "4", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 51, 175, "False", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "HammerOfWrath", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"n": 4, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.569027919537454, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, True, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n"}, {"score_history": [-0.0002117156982421875, -0.0003414154052734375, -7.748573807475623e-06, -0.00020062841940671206, -0.013590533286333084, -4.2080348066519946e-05, -7.903257937869057e-05, -0.00025582313537597656, -4.172325134277344e-06, -6.103515625e-05, -0.000164031982421875, -0.0002841949462890625, -0.0003299713134765625, -1.9073486328125e-05, -6.186878454172984e-05, 0.0, -0.0003504753112792969, -1.9073486328125e-06, -0.0016994476318359375, -8.96453857421875e-05, -0.0003757476806640625, -1.9907896785298362e-05, -5.53131103515625e-05, -4.053115117130801e-05, -4.9591064453125e-05, -0.0011084078578278422, -0.000690460205078125, -1.9073486328125e-05, -9.5367431640625e-06, -3.576278118089249e-07, -2.288818359375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -3.814697265625e-06, -1.1444091796875e-05, -6.4849853515625e-05, -5.7220458984375e-06, -0.0008854866027832031, -2.09808349609375e-05, -3.0517578125e-05, -5.14984130859375e-05, -1.1444091796875e-05, 0.0, -8.404254913330078e-05, -2.6702880859375e-05, -0.000629425048828125, -1.9073486328125e-06, -0.0016765594482421875, -9.72747802734375e-05, -7.62939453125e-06, -0.0017248360672965646, -2.0265579223632812e-06, -0.007298469543457031, -0.000171661376953125, -0.0001010894775390625, -5.7220458984375e-05, -3.814697265625e-05, -3.24249267578125e-05, -0.00036847591400146484, -3.814697265625e-06, -0.002084970474243164, 0.0, -0.005356774665415287, -9.65590606938349e-06, -0.0002498626708984375, 0.0, -0.00012886524200439453, 0.0, -0.0003299713134765625, -8.7738037109375e-05, -0.00010680697596399114, -6.437280717364047e-06, -0.01358795166015625, -1.71661376953125e-05, -6.866455078125e-05, -0.0008678436279296875, -1.71661376953125e-05, -1.52587890625e-05, 0.0, -3.933906555175781e-05, -1.9073486328125e-06, -0.00011456011998234317, 0.0, -1.3232214769232087e-05, -1.1920928244535389e-07, -0.0003096969739999622, -7.152555099310121e-07, -0.000545501708984375, -2.47955322265625e-05, -0.0004978179931640625, -1.9073486328125e-06, -5.41823673248291, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.007464408874511719, 0.0, -1.111953854560852, -1.9073486328125e-06, -0.001598834409378469, -1.311301275563892e-06, -0.0007043115911073983, -5.936446541454643e-05, -3.4332275390625e-05, -0.005881309509277344, -0.0002803802490234375, -0.00016033647989388555, -0.005920040886849165, -6.4849853515625e-05, -0.000217437744140625, -0.0006820102571509778, -0.000126242361147888, -4.76837158203125e-05, -0.0013790130615234375, -0.004375457763671875, -1.71661376953125e-05, -0.0001468658447265625, -5.7220458984375e-06, -1.072883515007561e-05, -1.9788545614574105e-05, -0.0007282361621037126, -1.52587890625e-05], "choice_history": [97, 285, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 52, 179, "4", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "hero"}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "HammerOfWrath", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"n": 4, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.618284872817348, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.current_player.hero.damage(player.effective_spell_damage(3), self)\n        player.draw()\n"}, {"score_history": [-0.0002117156982421875, -0.0003414154052734375, -7.748573807475623e-06, -0.00020062841940671206, -0.013590533286333084, -4.2080348066519946e-05, -7.903257937869057e-05, -0.00025582313537597656, -4.172325134277344e-06, -6.103515625e-05, -0.000164031982421875, -0.0002841949462890625, -0.0003299713134765625, -1.9073486328125e-05, -6.186878454172984e-05, 0.0, -0.0003504753112792969, -1.9073486328125e-06, -0.0016994476318359375, -8.96453857421875e-05, -0.0003757476806640625, -1.9907896785298362e-05, -5.53131103515625e-05, -4.053115117130801e-05, -4.9591064453125e-05, -0.0011084078578278422, -0.000690460205078125, -1.9073486328125e-05, -9.5367431640625e-06, -3.576278118089249e-07, -2.288818359375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -3.814697265625e-06, -1.1444091796875e-05, -6.4849853515625e-05, -5.7220458984375e-06, -0.0008854866027832031, -2.09808349609375e-05, -3.0517578125e-05, -5.14984130859375e-05, -1.1444091796875e-05, 0.0, -8.404254913330078e-05, -2.6702880859375e-05, -0.000629425048828125, -1.9073486328125e-06, -0.0016765594482421875, -9.72747802734375e-05, -7.62939453125e-06, -6.6846394538879395, -5.245099600870162e-05, -0.036296844482421875, -2.6702880859375e-05, -0.002142583020031452, -2.741813204920618e-06, -0.00043570995330810547, -3.814697265625e-06, -1.1682510375976562e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.002216339111328125, -0.0001959619694389403, -8.225420970120467e-06, -0.009115219116210938, -1.52587890625e-05, -0.000152587890625, -0.000247955322265625, -1.52587890625e-05, -1.52587890625e-05, 0.0, -2.324580964341294e-05, -3.814697265625e-06, -2.133846101060044e-05, 0.0, -2.1576830476988107e-05, -1.1920928244535389e-07, -0.00014960468979552388, -4.768370445162873e-07, -0.00154876708984375, -3.814697265625e-05, -0.0003681182861328125, -1.9073486328125e-06, -0.0064754486083984375, 0.0, -0.0015929937362670898, -2.1457672119140625e-06, -0.0010631083277985454, -2.276871418871451e-05, -0.0004187816521152854, -2.0265558760002023e-06, -5.91278076171875e-05, -0.011509895324707031, -4.1961669921875e-05, -0.0007714030216448009, -0.0016292229993268847, -7.62939453125e-06, -0.0001125335693359375, -0.0018119615269824862, -0.00016951558063738048, -7.2479248046875e-05, -0.00141143798828125, -0.0038089752197265625, -6.4849853515625e-05, -0.0001239776611328125, -5.7220458984375e-06, -6.4373016357421875e-06, -2.1457441107486375e-05, -0.0007943916134536266, -1.71661376953125e-05], "choice_history": [97, 285, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 52, 179, "4", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "overload", "<EOS>", 23, 179, "3", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "HammerOfWrath", "_type": "Template5", "hole2": [{"hole3": [{"value": {"n": 3, "_type": "Num"}, "_type": "keyword", "arg": "overload"}], "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"n": 4, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.793674145608797, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, overload=3)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n"}, {"score_history": [-0.0002117156982421875, -0.0003414154052734375, -7.748573807475623e-06, -0.00020062841940671206, -0.013590533286333084, -4.2080348066519946e-05, -7.903257937869057e-05, -0.00025582313537597656, -4.172325134277344e-06, -6.103515625e-05, -0.000164031982421875, -0.0002841949462890625, -0.0003299713134765625, -1.9073486328125e-05, -6.186878454172984e-05, 0.0, -0.0003504753112792969, -1.9073486328125e-06, -0.0016994476318359375, -8.96453857421875e-05, -0.0003757476806640625, -1.9907896785298362e-05, -5.53131103515625e-05, -4.053115117130801e-05, -4.9591064453125e-05, -0.0011084078578278422, -0.000690460205078125, -1.9073486328125e-05, -9.5367431640625e-06, -3.576278118089249e-07, -2.288818359375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -3.814697265625e-06, -1.1444091796875e-05, -6.4849853515625e-05, -5.7220458984375e-06, -0.0008854866027832031, -2.09808349609375e-05, -3.0517578125e-05, -5.14984130859375e-05, -1.1444091796875e-05, 0.0, -8.404254913330078e-05, -2.6702880859375e-05, -0.000629425048828125, -1.9073486328125e-06, -0.0016765594482421875, -9.72747802734375e-05, -7.62939453125e-06, -0.0017248360672965646, -2.0265579223632812e-06, -0.007298469543457031, -0.000171661376953125, -0.0001010894775390625, -5.7220458984375e-05, -3.814697265625e-05, -3.24249267578125e-05, -0.00036847591400146484, -3.814697265625e-06, -0.002084970474243164, 0.0, -0.005356774665415287, -9.65590606938349e-06, -0.0002498626708984375, 0.0, -0.00012886524200439453, 0.0, -0.0003299713134765625, -8.7738037109375e-05, -0.00010680697596399114, -6.437280717364047e-06, -0.01358795166015625, -1.71661376953125e-05, -6.866455078125e-05, -0.0008678436279296875, -1.71661376953125e-05, -1.52587890625e-05, 0.0, -3.933906555175781e-05, -1.9073486328125e-06, -0.00011456011998234317, 0.0, -1.3232214769232087e-05, -1.1920928244535389e-07, -0.0003096969739999622, -7.152555099310121e-07, -0.000545501708984375, -2.47955322265625e-05, -0.0004978179931640625, -1.9073486328125e-06, -0.0044651031494140625, 0.0, -0.0002999305725097656, -2.0265579223632812e-06, -6.800264835357666, 0.0, -0.00338689424097538, -1.847726889536716e-05, -0.000156402587890625, -0.015614509582519531, -0.000148773193359375, -0.0004155624774284661, -0.001315210247412324, -5.7220458984375e-06, -0.000171661376953125, -0.0010481823701411486, -0.00013923642109148204, -4.38690185546875e-05, -0.00107574462890625, -0.0032634735107421875, -4.38690185546875e-05, -0.000125885009765625, -7.62939453125e-06, -1.251697449333733e-05, -2.753696753643453e-05, -0.0008203841862268746, -1.52587890625e-05], "choice_history": [97, 285, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 52, 179, "4", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "BEAST", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "BEAST"}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "HammerOfWrath", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"n": 4, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.891007557287303, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.BEAST.damage(player.effective_spell_damage(3), self)\n        player.draw()\n"}, {"score_history": [-0.0002117156982421875, -0.0003414154052734375, -7.748573807475623e-06, -0.00020062841940671206, -0.013590533286333084, -4.2080348066519946e-05, -7.903257937869057e-05, -0.00025582313537597656, -4.172325134277344e-06, -6.103515625e-05, -0.000164031982421875, -0.0002841949462890625, -0.0003299713134765625, -1.9073486328125e-05, -6.186878454172984e-05, 0.0, -0.0003504753112792969, -1.9073486328125e-06, -0.0016994476318359375, -8.96453857421875e-05, -0.0003757476806640625, -1.9907896785298362e-05, -5.53131103515625e-05, -4.053115117130801e-05, -4.9591064453125e-05, -0.0011084078578278422, -0.000690460205078125, -1.9073486328125e-05, -9.5367431640625e-06, -3.576278118089249e-07, -2.288818359375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -3.814697265625e-06, -1.1444091796875e-05, -6.4849853515625e-05, -5.7220458984375e-06, -0.0008854866027832031, -2.09808349609375e-05, -3.0517578125e-05, -5.14984130859375e-05, -1.1444091796875e-05, 0.0, -8.404254913330078e-05, -2.6702880859375e-05, -0.000629425048828125, -1.9073486328125e-06, -0.0016765594482421875, -9.72747802734375e-05, -7.62939453125e-06, -0.0017248360672965646, -2.0265579223632812e-06, -0.007298469543457031, -0.000171661376953125, -0.0001010894775390625, -5.7220458984375e-05, -3.814697265625e-05, -3.24249267578125e-05, -0.00036847591400146484, -3.814697265625e-06, -0.002084970474243164, 0.0, -0.005356774665415287, -9.65590606938349e-06, -0.0002498626708984375, 0.0, -0.00012886524200439453, 0.0, -0.0003299713134765625, -8.7738037109375e-05, -0.00010680697596399114, -6.437280717364047e-06, -0.01358795166015625, -1.71661376953125e-05, -6.866455078125e-05, -0.0008678436279296875, -1.71661376953125e-05, -1.52587890625e-05, 0.0, -3.933906555175781e-05, -1.9073486328125e-06, -0.00011456011998234317, 0.0, -1.3232214769232087e-05, -1.1920928244535389e-07, -0.0003096969739999622, -7.152555099310121e-07, -0.000545501708984375, -2.47955322265625e-05, -0.0004978179931640625, -1.9073486328125e-06, -0.0044651031494140625, 0.0, -0.0002999305725097656, -2.0265579223632812e-06, -0.0016225576400756836, -1.0967194612021558e-05, -0.0005664817290380597, -2.50339189733495e-06, -5.14984130859375e-05, -4.817384719848633, -0.15743255615234375, -0.0010986328125, -5.7220458984375e-06, -0.0003953442501369864, -2.5152843591058627e-05, -0.35392963886260986, -2.5152843591058627e-05, -1.441659927368164, -0.0001277923583984375, -0.0652623400092125, -0.0005277194431982934, -0.003631591796875, -0.0020160675048828125, -0.6630653142929077, -0.0025289240293204784, -0.0005817413330078125, -0.0015716552734375, -0.013074874877929688, -4.57763671875e-05, -0.0002536773681640625, -3.814697265625e-06, -2.2292137145996094e-05, -1.847726889536716e-05, -0.000892992306035012, -7.62939453125e-06], "choice_history": [97, 285, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 52, 179, "4", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 72, 294, 21, 174, "player", "<EOS>", "damage", "<EOS>", 21, 174, "player", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"hole2": {"_type": "Name", "id": "player"}, "_type": "Template57", "hole1": "damage", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "HammerOfWrath", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"n": 4, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.59072945847327, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.damage(player()), self)\n        player.draw()\n"}, {"score_history": [-0.0002117156982421875, -0.0003414154052734375, -7.748573807475623e-06, -0.00020062841940671206, -0.013590533286333084, -4.2080348066519946e-05, -7.903257937869057e-05, -0.00025582313537597656, -4.172325134277344e-06, -6.103515625e-05, -0.000164031982421875, -0.0002841949462890625, -0.0003299713134765625, -1.9073486328125e-05, -6.186878454172984e-05, 0.0, -0.0003504753112792969, -1.9073486328125e-06, -0.0016994476318359375, -8.96453857421875e-05, -0.0003757476806640625, -1.9907896785298362e-05, -5.53131103515625e-05, -4.053115117130801e-05, -4.9591064453125e-05, -0.0011084078578278422, -0.000690460205078125, -1.9073486328125e-05, -9.5367431640625e-06, -3.576278118089249e-07, -2.288818359375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -3.814697265625e-06, -1.1444091796875e-05, -6.4849853515625e-05, -5.7220458984375e-06, -0.0008854866027832031, -2.09808349609375e-05, -3.0517578125e-05, -5.14984130859375e-05, -1.1444091796875e-05, 0.0, -8.404254913330078e-05, -2.6702880859375e-05, -0.000629425048828125, -1.9073486328125e-06, -0.0016765594482421875, -9.72747802734375e-05, -7.62939453125e-06, -0.0017248360672965646, -2.0265579223632812e-06, -0.007298469543457031, -0.000171661376953125, -0.0001010894775390625, -5.7220458984375e-05, -3.814697265625e-05, -3.24249267578125e-05, -0.00036847591400146484, -3.814697265625e-06, -0.002084970474243164, 0.0, -0.005356774665415287, -9.65590606938349e-06, -0.0002498626708984375, 0.0, -0.00012886524200439453, 0.0, -0.0003299713134765625, -8.7738037109375e-05, -0.00010680697596399114, -6.437280717364047e-06, -0.01358795166015625, -1.71661376953125e-05, -6.866455078125e-05, -0.0008678436279296875, -1.71661376953125e-05, -1.52587890625e-05, 0.0, -3.933906555175781e-05, -1.9073486328125e-06, -0.00011456011998234317, 0.0, -1.3232214769232087e-05, -1.1920928244535389e-07, -0.0003096969739999622, -7.152555099310121e-07, -0.000545501708984375, -2.47955322265625e-05, -0.0004978179931640625, -1.9073486328125e-06, -0.0044651031494140625, 0.0, -0.0002999305725097656, -2.0265579223632812e-06, -0.0016225576400756836, -1.0967194612021558e-05, -0.0005664817290380597, -2.50339189733495e-06, -5.14984130859375e-05, -0.013513565063476562, -4.9591064453125e-05, -0.0007599588134326041, -0.0015673328889533877, -7.62939453125e-06, -0.00011444091796875, -0.0014385753311216831, -0.00018095967243425548, -4.38690185546875e-05, -0.0010318756103515625, -0.0035724639892578125, -4.57763671875e-05, -0.0001201629638671875, -5.7220458984375e-06, -1.251697449333733e-05, -2.634490556374658e-05, -7.810790061950684, -3.576278118089249e-07], "choice_history": [97, 285, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 52, 179, "4", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "game", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template76", "hole1": "game", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "HammerOfWrath", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hammer of Wrath"}, {"n": 4, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.898421135587448, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.game()\n"}]}
{"index": 45, "beams": [{"score_history": [-0.000247955322265625, -0.008157730102539062, -0.00015805903240107, -0.0018355483189225197, -0.0008493128116242588, -3.421248038648628e-05, -5.841252459504176e-06, -8.90493392944336e-05, -2.2649677703157067e-05, -0.000988006591796875, -8.7738037109375e-05, -0.0008106231689453125, -0.0001068115234375, -8.7738037109375e-05, -0.0007427695672959089, -1.9073486328125e-06, -0.0002887248992919922, 0.0, -0.0011234283447265625, -0.000110626220703125, -0.0013580322265625, -4.410734163684538e-06, -0.00012159346078988165, -0.00022017580340616405, -7.43865966796875e-05, -0.0009691715240478516, -0.0002841949462890625, -0.00020599365234375, -3.0517578125e-05, -0.0001982170360861346, -5.7220458984375e-06, -2.288818359375e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.0002155303955078125, -1.33514404296875e-05, -0.0005112886428833008, -1.9073486328125e-05, -4.1961669921875e-05, -2.288818359375e-05, -0.0002384185791015625, -3.814697265625e-06, -0.00044858455657958984, -9.5367431640625e-06, -0.0010433197021484375, -1.33514404296875e-05, -0.0007915496826171875, -4.57763671875e-05, -5.7220458984375e-06, -0.013360141776502132, -2.0265579223632812e-06, -0.0003795623779296875, -1.33514404296875e-05, -0.000244140625, 0.0, -3.814697265625e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0006486177444458008, -3.814697265625e-06, -0.009699344635009766, -1.1920928244535389e-07, -0.02189767360687256, 0.0, -1.835809598560445e-05, 0.0, -0.0036411285400390625, -0.00017547607421875, -0.00018356749205850065, -4.076874756719917e-05, -0.045665740966796875, -0.00023651123046875, -0.0001049041748046875, -7.43865966796875e-05, -0.0001850128173828125, -1.1444091796875e-05, 0.0, -0.0014764175284653902, -0.00012993812561035156, -0.00038406188832595944, -1.0728830375228426e-06, -3.778920290642418e-05, 0.0, -0.0004479839699342847, -5.960462772236497e-07, -0.005303382873535156, -2.47955322265625e-05, -5.7220458984375e-06, -0.006655693054199219, -6.866455078125e-05, -9.5367431640625e-06, 0.0, -0.03086376190185547, -1.9073486328125e-06, -0.0009347200393676758, -5.960462772236497e-07, -0.0016428232192993164, -6.079673767089844e-06, -0.01776360161602497, 0.0, -0.000751495361328125, -0.0002498626708984375, -0.0003122087218798697, -4.768370445162873e-07], "choice_history": [97, 285, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hand", " ", "of", " ", "Protection", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "divine_shield"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole3": "use", "hole0": "HandOfProtection", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -0.18650307816039202, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n"}, {"score_history": [-0.000247955322265625, -0.008157730102539062, -0.00015805903240107, -0.0018355483189225197, -0.0008493128116242588, -3.421248038648628e-05, -5.841252459504176e-06, -8.90493392944336e-05, -2.2649677703157067e-05, -0.000988006591796875, -8.7738037109375e-05, -0.0008106231689453125, -0.0001068115234375, -8.7738037109375e-05, -0.0007427695672959089, -1.9073486328125e-06, -0.0002887248992919922, 0.0, -0.0011234283447265625, -0.000110626220703125, -0.0013580322265625, -4.410734163684538e-06, -0.00012159346078988165, -0.00022017580340616405, -7.43865966796875e-05, -0.0009691715240478516, -0.0002841949462890625, -0.00020599365234375, -3.0517578125e-05, -0.0001982170360861346, -5.7220458984375e-06, -2.288818359375e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.0002155303955078125, -1.33514404296875e-05, -0.0005112886428833008, -1.9073486328125e-05, -4.1961669921875e-05, -2.288818359375e-05, -0.0002384185791015625, -3.814697265625e-06, -0.00044858455657958984, -9.5367431640625e-06, -0.0010433197021484375, -1.33514404296875e-05, -0.0007915496826171875, -4.57763671875e-05, -5.7220458984375e-06, -0.013360141776502132, -2.0265579223632812e-06, -0.0003795623779296875, -1.33514404296875e-05, -0.000244140625, 0.0, -3.814697265625e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0006486177444458008, -3.814697265625e-06, -0.009699344635009766, -1.1920928244535389e-07, -0.02189767360687256, 0.0, -1.835809598560445e-05, 0.0, -0.0036411285400390625, -0.00017547607421875, -0.00018356749205850065, -4.076874756719917e-05, -0.045665740966796875, -0.00023651123046875, -0.0001049041748046875, -7.43865966796875e-05, -0.0001850128173828125, -1.1444091796875e-05, 0.0, -0.0014764175284653902, -0.00012993812561035156, -0.00038406188832595944, -1.0728830375228426e-06, -3.778920290642418e-05, 0.0, -0.0004479839699342847, -5.960462772236497e-07, -0.005303382873535156, -2.47955322265625e-05, -5.7220458984375e-06, -0.006655693054199219, -6.866455078125e-05, -9.5367431640625e-06, 0.0, -3.584986686706543, -1.9073486328125e-06, -7.82012939453125e-05, -3.814697265625e-06, -0.06418061256408691, -2.3841855067985307e-07, -0.0042765140533447266, -2.300739288330078e-05, -0.021499989554286003, -1.1920928244535389e-07, -0.01796530745923519, -2.0265579223632812e-06, -0.0028896331787109375, -0.000209808349609375, -0.00037943769712001085, -1.1920922133867862e-06], "choice_history": [97, 285, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hand", " ", "of", " ", "Protection", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 42, 143, 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"value": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "divine_shield"}, "_type": "Attribute", "attr": "divine_shield"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole3": "use", "hole0": "HandOfProtection", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -3.8304740412976486, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield.divine_shield = True\n"}, {"score_history": [-0.000247955322265625, -0.008157730102539062, -0.00015805903240107, -0.0018355483189225197, -0.0008493128116242588, -3.421248038648628e-05, -5.841252459504176e-06, -8.90493392944336e-05, -2.2649677703157067e-05, -0.000988006591796875, -8.7738037109375e-05, -0.0008106231689453125, -0.0001068115234375, -8.7738037109375e-05, -0.0007427695672959089, -1.9073486328125e-06, -0.0002887248992919922, 0.0, -0.0011234283447265625, -0.000110626220703125, -0.0013580322265625, -4.410734163684538e-06, -0.00012159346078988165, -0.00022017580340616405, -7.43865966796875e-05, -0.0009691715240478516, -0.0002841949462890625, -0.00020599365234375, -3.0517578125e-05, -0.0001982170360861346, -5.7220458984375e-06, -2.288818359375e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.0002155303955078125, -1.33514404296875e-05, -0.0005112886428833008, -1.9073486328125e-05, -4.1961669921875e-05, -2.288818359375e-05, -0.0002384185791015625, -3.814697265625e-06, -0.00044858455657958984, -9.5367431640625e-06, -0.0010433197021484375, -1.33514404296875e-05, -0.0007915496826171875, -4.57763671875e-05, -5.7220458984375e-06, -0.013360141776502132, -2.0265579223632812e-06, -0.0003795623779296875, -1.33514404296875e-05, -0.000244140625, 0.0, -3.814697265625e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0006486177444458008, -3.814697265625e-06, -0.009699344635009766, -1.1920928244535389e-07, -5.02039909362793, 0.0, -0.0006245374097488821, 0.0, -0.0014247894287109375, -0.0003147125244140625, -5.304710066411644e-05, -1.2159273865108844e-05, -0.021585464477539062, -0.0018329620361328125, -7.2479248046875e-05, -6.29425048828125e-05, -0.0002593994140625, -1.52587890625e-05, 0.0, -0.0013859618920832872, -0.00013566017150878906, -0.0002417478390270844, -7.152555099310121e-07, -3.85044768336229e-05, 0.0, -0.0004280771245248616, -5.960462772236497e-07, -0.004329681396484375, -2.47955322265625e-05, -3.814697265625e-06, -0.0062427520751953125, -5.91278076171875e-05, -1.1444091796875e-05, 0.0, -0.028365135192871094, -1.9073486328125e-06, -0.0009480714797973633, -4.768370445162873e-07, -0.0015462636947631836, -6.079673767089844e-06, -0.018159018829464912, 0.0, -0.0007534027099609375, -0.000240325927734375, -0.00030410251929424703, -4.768370445162873e-07], "choice_history": [97, 285, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hand", " ", "of", " ", "Protection", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "divine_shield"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole3": "create_weapon", "hole0": "HandOfProtection", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.1570799031367685, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def create_weapon(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n"}, {"score_history": [-0.000247955322265625, -0.008157730102539062, -0.00015805903240107, -0.0018355483189225197, -0.0008493128116242588, -3.421248038648628e-05, -5.841252459504176e-06, -8.90493392944336e-05, -2.2649677703157067e-05, -0.000988006591796875, -8.7738037109375e-05, -0.0008106231689453125, -0.0001068115234375, -8.7738037109375e-05, -0.0007427695672959089, -1.9073486328125e-06, -0.0002887248992919922, 0.0, -0.0011234283447265625, -0.000110626220703125, -0.0013580322265625, -4.410734163684538e-06, -0.00012159346078988165, -0.00022017580340616405, -7.43865966796875e-05, -0.0009691715240478516, -0.0002841949462890625, -0.00020599365234375, -3.0517578125e-05, -0.0001982170360861346, -5.7220458984375e-06, -2.288818359375e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.0002155303955078125, -1.33514404296875e-05, -0.0005112886428833008, -1.9073486328125e-05, -4.1961669921875e-05, -2.288818359375e-05, -0.0002384185791015625, -3.814697265625e-06, -0.00044858455657958984, -9.5367431640625e-06, -0.0010433197021484375, -1.33514404296875e-05, -0.0007915496826171875, -4.57763671875e-05, -5.7220458984375e-06, -0.013360141776502132, -2.0265579223632812e-06, -0.0003795623779296875, -1.33514404296875e-05, -0.000244140625, 0.0, -3.814697265625e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0006486177444458008, -3.814697265625e-06, -0.009699344635009766, -1.1920928244535389e-07, -5.1354289054870605, 0.0, -0.0004045907990075648, 0.0, -0.001285552978515625, -9.34600830078125e-05, -7.688831829000264e-05, -1.9550132492440753e-05, -0.04307270050048828, -0.0003662109375, -0.000125885009765625, -0.0001049041748046875, -0.0001964569091796875, -1.71661376953125e-05, 0.0, -0.0013309527421370149, -0.00014698505401611328, -0.00029407819965854287, -7.152555099310121e-07, -3.5047432902501896e-05, 0.0, -0.00041281816083937883, -5.960462772236497e-07, -0.0051326751708984375, -2.47955322265625e-05, -5.7220458984375e-06, -0.0063266754150390625, -6.866455078125e-05, -9.5367431640625e-06, 0.0, -0.025739669799804688, -1.9073486328125e-06, -0.0009328126907348633, -4.768370445162873e-07, -0.0016627311706542969, -6.079673767089844e-06, -0.017912017181515694, 0.0, -0.000751495361328125, -0.0002346038818359375, -0.00030052626971155405, -4.768370445162873e-07], "choice_history": [97, 285, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hand", " ", "of", " ", "Protection", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "4", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "divine_shield"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole3": "4", "hole0": "HandOfProtection", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.2897192487142135, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def 4(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n"}, {"score_history": [-0.000247955322265625, -0.008157730102539062, -0.00015805903240107, -0.0018355483189225197, -0.0008493128116242588, -3.421248038648628e-05, -5.841252459504176e-06, -8.90493392944336e-05, -2.2649677703157067e-05, -0.000988006591796875, -8.7738037109375e-05, -0.0008106231689453125, -0.0001068115234375, -8.7738037109375e-05, -0.0007427695672959089, -1.9073486328125e-06, -0.0002887248992919922, 0.0, -0.0011234283447265625, -0.000110626220703125, -0.0013580322265625, -4.410734163684538e-06, -0.00012159346078988165, -0.00022017580340616405, -7.43865966796875e-05, -0.0009691715240478516, -0.0002841949462890625, -0.00020599365234375, -3.0517578125e-05, -0.0001982170360861346, -5.7220458984375e-06, -2.288818359375e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.0002155303955078125, -1.33514404296875e-05, -0.0005112886428833008, -1.9073486328125e-05, -4.1961669921875e-05, -2.288818359375e-05, -0.0002384185791015625, -3.814697265625e-06, -0.00044858455657958984, -9.5367431640625e-06, -0.0010433197021484375, -1.33514404296875e-05, -0.0007915496826171875, -4.57763671875e-05, -5.7220458984375e-06, -5.181862831115723, -4.76837158203125e-05, -0.18068885803222656, -7.62939453125e-06, -0.001705169677734375, 0.0, -5.340576171875e-05, -3.814697265625e-06, -0.00011086463928222656, 0.0, -0.0004750490188598633, -3.814697265625e-06, -0.017447233200073242, -2.3841855067985307e-07, -0.019047141075134277, 0.0, -1.633156898606103e-05, 0.0, -0.003993988037109375, -0.0001964569091796875, -0.0001578223891556263, -4.017272294731811e-05, -0.048287391662597656, -0.00037384033203125, -9.72747802734375e-05, -7.62939453125e-05, -0.0001888275146484375, -1.1444091796875e-05, 0.0, -0.0014159481506794691, -0.00012993812561035156, -0.00036022390122525394, -1.0728830375228426e-06, -3.886210106429644e-05, 0.0, -0.00043546693632379174, -5.960462772236497e-07, -0.005080223083496094, -2.47955322265625e-05, -5.7220458984375e-06, -0.00661468505859375, -6.67572021484375e-05, -9.5367431640625e-06, 0.0, -0.029770851135253906, -1.9073486328125e-06, -0.000954747200012207, -5.960462772236497e-07, -0.0016274452209472656, -6.079673767089844e-06, -0.017841564491391182, 0.0, -0.00075531005859375, -0.000244140625, -0.0003080364258494228, -4.768370445162873e-07], "choice_history": [97, 285, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hand", " ", "of", " ", "Protection", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "combo", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "divine_shield"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole3": "use", "hole0": "HandOfProtection", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "combo"}], "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.543289188695184, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, combo=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n"}, {"score_history": [-0.000247955322265625, -0.008157730102539062, -0.00015805903240107, -0.0018355483189225197, -0.0008493128116242588, -3.421248038648628e-05, -5.841252459504176e-06, -8.90493392944336e-05, -2.2649677703157067e-05, -0.000988006591796875, -8.7738037109375e-05, -0.0008106231689453125, -0.0001068115234375, -8.7738037109375e-05, -0.0007427695672959089, -1.9073486328125e-06, -0.0002887248992919922, 0.0, -0.0011234283447265625, -0.000110626220703125, -0.0013580322265625, -4.410734163684538e-06, -0.00012159346078988165, -0.00022017580340616405, -7.43865966796875e-05, -0.0009691715240478516, -0.0002841949462890625, -0.00020599365234375, -3.0517578125e-05, -0.0001982170360861346, -5.7220458984375e-06, -2.288818359375e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.0002155303955078125, -1.33514404296875e-05, -0.0005112886428833008, -1.9073486328125e-05, -4.1961669921875e-05, -2.288818359375e-05, -0.0002384185791015625, -3.814697265625e-06, -0.00044858455657958984, -9.5367431640625e-06, -0.0010433197021484375, -1.33514404296875e-05, -0.0007915496826171875, -4.57763671875e-05, -5.7220458984375e-06, -0.013360141776502132, -2.0265579223632812e-06, -0.0003795623779296875, -1.33514404296875e-05, -0.000244140625, 0.0, -3.814697265625e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0006486177444458008, -3.814697265625e-06, -5.436901569366455, -2.1457672119140625e-06, -0.026206254959106445, 0.0, -1.1682479453156702e-05, 0.0, -0.002716064453125, -0.00022125244140625, -0.0003395740350242704, -4.637133679352701e-05, -0.06529712677001953, -0.000629425048828125, -6.866455078125e-05, -7.2479248046875e-05, -0.0001983642578125, -1.1444091796875e-05, 0.0, -0.0014611808583140373, -0.00013184547424316406, -0.00037226302083581686, -9.536738616588991e-07, -3.886210106429644e-05, 0.0, -0.00042736128671094775, -5.960462772236497e-07, -0.0048427581787109375, -2.288818359375e-05, -5.7220458984375e-06, -0.006522178649902344, -7.05718994140625e-05, -9.5367431640625e-06, 0.0, -0.028838157653808594, -1.9073486328125e-06, -0.000950932502746582, -5.960462772236497e-07, -0.0016100406646728516, -6.079673767089844e-06, -0.017921077087521553, 0.0, -0.0007610321044921875, -0.000247955322265625, -0.000310420582536608, -4.768370445162873e-07], "choice_history": [97, 285, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hand", " ", "of", " ", "Protection", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "divine_shield"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole3": "use", "hole0": "HandOfProtection", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.634773266792308, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n"}, {"score_history": [-0.000247955322265625, -0.008157730102539062, -0.00015805903240107, -0.0018355483189225197, -0.0008493128116242588, -3.421248038648628e-05, -5.841252459504176e-06, -8.90493392944336e-05, -2.2649677703157067e-05, -0.000988006591796875, -8.7738037109375e-05, -0.0008106231689453125, -0.0001068115234375, -8.7738037109375e-05, -0.0007427695672959089, -1.9073486328125e-06, -0.0002887248992919922, 0.0, -0.0011234283447265625, -0.000110626220703125, -0.0013580322265625, -4.410734163684538e-06, -0.00012159346078988165, -0.00022017580340616405, -7.43865966796875e-05, -0.0009691715240478516, -0.0002841949462890625, -0.00020599365234375, -3.0517578125e-05, -0.0001982170360861346, -5.7220458984375e-06, -2.288818359375e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.0002155303955078125, -1.33514404296875e-05, -0.0005112886428833008, -1.9073486328125e-05, -4.1961669921875e-05, -2.288818359375e-05, -0.0002384185791015625, -3.814697265625e-06, -0.00044858455657958984, -9.5367431640625e-06, -0.0010433197021484375, -1.33514404296875e-05, -0.0007915496826171875, -4.57763671875e-05, -5.7220458984375e-06, -0.013360141776502132, -2.0265579223632812e-06, -0.0003795623779296875, -1.33514404296875e-05, -0.000244140625, 0.0, -3.814697265625e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0006486177444458008, -3.814697265625e-06, -0.009699344635009766, -1.1920928244535389e-07, -0.02189767360687256, 0.0, -1.835809598560445e-05, 0.0, -0.0036411285400390625, -0.00017547607421875, -0.00018356749205850065, -4.076874756719917e-05, -0.045665740966796875, -0.00023651123046875, -0.0001049041748046875, -7.43865966796875e-05, -0.0001850128173828125, -1.1444091796875e-05, 0.0, -0.0014764175284653902, -0.00012993812561035156, -0.00038406188832595944, -1.0728830375228426e-06, -3.778920290642418e-05, 0.0, -0.0004479839699342847, -5.960462772236497e-07, -0.005303382873535156, -2.47955322265625e-05, -5.7220458984375e-06, -0.006655693054199219, -6.866455078125e-05, -9.5367431640625e-06, 0.0, -0.03086376190185547, -1.9073486328125e-06, -0.0009347200393676758, -5.960462772236497e-07, -0.0016428232192993164, -6.079673767089844e-06, -5.766671180725098, 0.0, -0.0033349990844726562, -0.0001316070556640625, -0.0005332198343239725, -1.1920922133867862e-06], "choice_history": [97, 285, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hand", " ", "of", " ", "Protection", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "character", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "character"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole3": "use", "hole0": "HandOfProtection", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.938097631744988, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.character = True\n"}, {"score_history": [-0.000247955322265625, -0.008157730102539062, -0.00015805903240107, -0.0018355483189225197, -0.0008493128116242588, -3.421248038648628e-05, -5.841252459504176e-06, -8.90493392944336e-05, -2.2649677703157067e-05, -0.000988006591796875, -8.7738037109375e-05, -0.0008106231689453125, -0.0001068115234375, -8.7738037109375e-05, -0.0007427695672959089, -1.9073486328125e-06, -0.0002887248992919922, 0.0, -0.0011234283447265625, -0.000110626220703125, -0.0013580322265625, -4.410734163684538e-06, -0.00012159346078988165, -0.00022017580340616405, -7.43865966796875e-05, -0.0009691715240478516, -0.0002841949462890625, -0.00020599365234375, -3.0517578125e-05, -0.0001982170360861346, -5.7220458984375e-06, -2.288818359375e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.0002155303955078125, -1.33514404296875e-05, -0.0005112886428833008, -1.9073486328125e-05, -4.1961669921875e-05, -2.288818359375e-05, -0.0002384185791015625, -3.814697265625e-06, -0.00044858455657958984, -9.5367431640625e-06, -0.0010433197021484375, -1.33514404296875e-05, -0.0007915496826171875, -4.57763671875e-05, -5.7220458984375e-06, -0.013360141776502132, -2.0265579223632812e-06, -0.0003795623779296875, -1.33514404296875e-05, -0.000244140625, 0.0, -3.814697265625e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0006486177444458008, -3.814697265625e-06, -0.009699344635009766, -1.1920928244535389e-07, -0.02189767360687256, 0.0, -1.835809598560445e-05, 0.0, -0.0036411285400390625, -0.00017547607421875, -0.00018356749205850065, -4.076874756719917e-05, -0.045665740966796875, -0.00023651123046875, -0.0001049041748046875, -7.43865966796875e-05, -0.0001850128173828125, -1.1444091796875e-05, 0.0, -0.0014764175284653902, -0.00012993812561035156, -0.00038406188832595944, -1.0728830375228426e-06, -3.778920290642418e-05, 0.0, -0.0004479839699342847, -5.960462772236497e-07, -0.005303382873535156, -2.47955322265625e-05, -5.7220458984375e-06, -0.006655693054199219, -6.866455078125e-05, -9.5367431640625e-06, 0.0, -0.03086376190185547, -1.9073486328125e-06, -0.0009347200393676758, -5.960462772236497e-07, -0.0016428232192993164, -6.079673767089844e-06, -5.976672172546387, 0.0, -0.00045013427734375, -0.000274658203125, -0.0004558557993732393, -4.768370445162873e-07], "choice_history": [97, 285, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hand", " ", "of", " ", "Protection", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "taunt"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole3": "use", "hole0": "HandOfProtection", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.145278730616489, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.taunt = True\n"}, {"score_history": [-0.000247955322265625, -0.008157730102539062, -0.00015805903240107, -0.0018355483189225197, -0.0008493128116242588, -3.421248038648628e-05, -5.841252459504176e-06, -8.90493392944336e-05, -2.2649677703157067e-05, -0.000988006591796875, -8.7738037109375e-05, -0.0008106231689453125, -0.0001068115234375, -8.7738037109375e-05, -0.0007427695672959089, -1.9073486328125e-06, -0.0002887248992919922, 0.0, -0.0011234283447265625, -0.000110626220703125, -0.0013580322265625, -4.410734163684538e-06, -0.00012159346078988165, -0.00022017580340616405, -7.43865966796875e-05, -0.0009691715240478516, -0.0002841949462890625, -0.00020599365234375, -3.0517578125e-05, -0.0001982170360861346, -5.7220458984375e-06, -2.288818359375e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.0002155303955078125, -1.33514404296875e-05, -0.0005112886428833008, -1.9073486328125e-05, -4.1961669921875e-05, -2.288818359375e-05, -0.0002384185791015625, -3.814697265625e-06, -0.00044858455657958984, -9.5367431640625e-06, -0.0010433197021484375, -1.33514404296875e-05, -0.0007915496826171875, -4.57763671875e-05, -5.7220458984375e-06, -0.013360141776502132, -2.0265579223632812e-06, -0.0003795623779296875, -1.33514404296875e-05, -0.000244140625, 0.0, -3.814697265625e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0006486177444458008, -3.814697265625e-06, -6.087208271026611, 0.0, -0.003006458282470703, 0.0, -6.437280717364047e-06, 0.0, -0.0021495819091796875, -0.0001373291015625, -0.00014614152314607054, -3.1470757676288486e-05, -0.04012298583984375, -0.0001506805419921875, -0.0001087188720703125, -9.34600830078125e-05, -0.000194549560546875, -1.1444091796875e-05, 0.0, -0.0016549582360312343, -0.00014710426330566406, -0.0004100477963220328, -1.0728830375228426e-06, -3.778920290642418e-05, 0.0, -0.00045060651609674096, -5.960462772236497e-07, -0.005401611328125, -2.288818359375e-05, -5.7220458984375e-06, -0.006466865539550781, -7.2479248046875e-05, -9.5367431640625e-06, 0.0, -0.030900001525878906, -1.9073486328125e-06, -0.000943303108215332, -5.960462772236497e-07, -0.0016428232192993164, -6.079673767089844e-06, -0.01779983937740326, 0.0, -0.0007495880126953125, -0.0002498626708984375, -0.0003099437744822353, -4.768370445162873e-07], "choice_history": [97, 285, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hand", " ", "of", " ", "Protection", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "divine_shield"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole3": "use", "hole0": "HandOfProtection", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.238148682498263, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n"}, {"score_history": [-0.000247955322265625, -0.008157730102539062, -0.00015805903240107, -0.0018355483189225197, -0.0008493128116242588, -3.421248038648628e-05, -5.841252459504176e-06, -8.90493392944336e-05, -2.2649677703157067e-05, -0.000988006591796875, -8.7738037109375e-05, -0.0008106231689453125, -0.0001068115234375, -8.7738037109375e-05, -0.0007427695672959089, -1.9073486328125e-06, -0.0002887248992919922, 0.0, -0.0011234283447265625, -0.000110626220703125, -0.0013580322265625, -4.410734163684538e-06, -0.00012159346078988165, -0.00022017580340616405, -7.43865966796875e-05, -0.0009691715240478516, -0.0002841949462890625, -0.00020599365234375, -3.0517578125e-05, -0.0001982170360861346, -5.7220458984375e-06, -2.288818359375e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.0002155303955078125, -1.33514404296875e-05, -0.0005112886428833008, -1.9073486328125e-05, -4.1961669921875e-05, -2.288818359375e-05, -0.0002384185791015625, -3.814697265625e-06, -0.00044858455657958984, -9.5367431640625e-06, -0.0010433197021484375, -1.33514404296875e-05, -0.0007915496826171875, -4.57763671875e-05, -5.7220458984375e-06, -0.013360141776502132, -2.0265579223632812e-06, -0.0003795623779296875, -1.33514404296875e-05, -0.000244140625, 0.0, -3.814697265625e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0006486177444458008, -3.814697265625e-06, -0.009699344635009766, -1.1920928244535389e-07, -6.18545389175415, 0.0, -0.00011515191727085039, 0.0, -0.00325775146484375, -0.0001430511474609375, -0.0001463806547690183, -2.992108420585282e-05, -0.024442672729492188, -0.00029754638671875, -8.7738037109375e-05, -8.0108642578125e-05, -0.0001850128173828125, -1.1444091796875e-05, 0.0, -0.0015555759891867638, -0.00012040138244628906, -0.0003752416232600808, -9.536738616588991e-07, -3.8623686123173684e-05, 0.0, -0.000442737975390628, -5.960462772236497e-07, -0.0048503875732421875, -2.6702880859375e-05, -5.7220458984375e-06, -0.006171226501464844, -5.7220458984375e-05, -1.1444091796875e-05, 0.0, -0.02616119384765625, -1.9073486328125e-06, -0.000981450080871582, -5.960462772236497e-07, -0.0015894174575805664, -6.079673767089844e-06, -0.017987119033932686, 0.0, -0.0007572174072265625, -0.000244140625, -0.0003061290772166103, -4.768370445162873e-07], "choice_history": [97, 285, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hand", " ", "of", " ", "Protection", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "find_minion_spell_target", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "divine_shield"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole3": "find_minion_spell_target", "hole0": "HandOfProtection", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.32313814993676, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def find_minion_spell_target(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n"}, {"score_history": [-0.000247955322265625, -4.848879814147949, -0.0011870964663103223, -0.03281758725643158, -0.0006270395824685693, -0.00010060795466415584, -7.98702058091294e-06, -0.0007810585666447878, -0.00022326734324451536, -0.0002593994140625, -0.6690034866333008, -0.003971099853515625, -0.00025177001953125, -7.2479248046875e-05, -0.005800336133688688, -7.259845733642578e-05, -0.0003330707550048828, 0.0, -0.0003814697265625, -0.0001583099365234375, -0.002132415771484375, -3.6954811548639555e-06, -0.00011146067117806524, -0.0002411530731478706, -6.866455078125e-05, -0.0008249282836914062, -0.0002193450927734375, -0.0002651214599609375, -2.86102294921875e-05, -0.0005748322000727057, -5.7220458984375e-06, -1.33514404296875e-05, -2.09808349609375e-05, -3.814697265625e-06, -1.52587890625e-05, -0.00028228759765625, -1.33514404296875e-05, -0.00042366981506347656, -2.09808349609375e-05, -5.53131103515625e-05, -7.62939453125e-06, -0.000316619873046875, -1.9073486328125e-06, -0.0004696846008300781, -9.5367431640625e-06, -0.0007781982421875, -1.33514404296875e-05, -0.0011081695556640625, -4.00543212890625e-05, -5.7220458984375e-06, -0.01064157485961914, -3.933906555175781e-06, -0.0004520416259765625, -1.33514404296875e-05, -0.000232696533203125, 0.0, -3.814697265625e-05, -7.62939453125e-06, -9.357929229736328e-05, 0.0, -0.0006181001663208008, -3.814697265625e-06, -0.007183074951171875, -1.1920928244535389e-07, -0.02958834171295166, 0.0, -0.00034737586975097656, 0.0, -0.000255584716796875, -0.0002155303955078125, -0.00020538060925900936, -5.435795901576057e-05, -0.013112068176269531, -6.866455078125e-05, -4.1961669921875e-05, -0.0001583099365234375, -0.0002307891845703125, -2.47955322265625e-05, -1.9073486328125e-06, -0.001213563489727676, -4.589557647705078e-05, -0.00014674488920718431, -2.384185791015625e-06, -3.0875155061949044e-05, 0.0, -0.00028717287932522595, -5.960462772236497e-07, -0.0008039474487304688, -6.103515625e-05, -3.814697265625e-06, -0.006465911865234375, -3.0517578125e-05, -1.33514404296875e-05, 0.0, -0.017574310302734375, -1.9073486328125e-06, -0.00214231014251709, -4.768370445162873e-07, -0.0012335777282714844, -5.9604644775390625e-06, -0.01915978454053402, 0.0, -0.0007839202880859375, -0.0001926422119140625, -0.0002660748141352087, -5.960462772236497e-07, -0.9381818771362305, -0.008900642395019531, -0.0001659393310546875, -0.6377118825912476, -5.841247457283316e-06, -0.003475189208984375, -0.0005950927734375, -0.0025272369384765625, -0.000194549560546875, -0.0001265995088033378, -0.00024434918304905295, -1.9073486328125e-05, -0.033635202795267105, -0.00020895205670967698, -9.5367431640625e-06, -0.003566586645320058, -0.0011774541344493628, -0.4481678009033203, -0.0033397674560546875, -0.000888824462890625, -0.0002346038818359375, -1.71661376953125e-05, -6.103515625e-05, -1.9073486328125e-06, -0.004443813115358353, -0.00014913082122802734, -0.00035007423139177263, -6.675708846159978e-06, -0.0003135196748189628, -1.1920928244535389e-07, -0.0006910538650117815, -3.576272320060525e-06], "choice_history": [97, 286, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hand", " ", "of", " ", "Protection", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>", 358, 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "divine_shield"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole3": "use", "hole0": "HandOfProtection", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole7": [{"body": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -7.7767278406481495, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n\n    def use(self, player, game):\n        super().use(player, game)\n"}, {"score_history": [-0.000247955322265625, -0.008157730102539062, -0.00015805903240107, -0.0018355483189225197, -0.0008493128116242588, -3.421248038648628e-05, -5.841252459504176e-06, -8.90493392944336e-05, -2.2649677703157067e-05, -0.000988006591796875, -8.7738037109375e-05, -0.0008106231689453125, -0.0001068115234375, -8.7738037109375e-05, -0.0007427695672959089, -1.9073486328125e-06, -0.0002887248992919922, 0.0, -0.0011234283447265625, -0.000110626220703125, -0.0013580322265625, -4.410734163684538e-06, -0.00012159346078988165, -0.00022017580340616405, -7.43865966796875e-05, -0.0009691715240478516, -0.0002841949462890625, -0.00020599365234375, -3.0517578125e-05, -0.0001982170360861346, -5.7220458984375e-06, -2.288818359375e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.0002155303955078125, -1.33514404296875e-05, -0.0005112886428833008, -1.9073486328125e-05, -4.1961669921875e-05, -2.288818359375e-05, -0.0002384185791015625, -3.814697265625e-06, -0.00044858455657958984, -9.5367431640625e-06, -0.0010433197021484375, -1.33514404296875e-05, -0.0007915496826171875, -4.57763671875e-05, -5.7220458984375e-06, -0.013360141776502132, -2.0265579223632812e-06, -0.0003795623779296875, -1.33514404296875e-05, -0.000244140625, 0.0, -3.814697265625e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0006486177444458008, -3.814697265625e-06, -0.009699344635009766, -1.1920928244535389e-07, -0.02189767360687256, 0.0, -1.835809598560445e-05, 0.0, -0.0036411285400390625, -0.00017547607421875, -0.00018356749205850065, -4.076874756719917e-05, -3.586787223815918, -4.76837158203125e-05, -0.0008449554443359375, -7.43865966796875e-05, -0.00035858154296875, -2.288818359375e-05, 0.0, -0.0011060350807383657, -4.601478576660156e-05, -0.00022874554269947112, -7.152555099310121e-07, -3.0159908419591375e-05, 0.0, -0.001032471307553351, -1.7881377516459906e-06, -0.061771392822265625, -0.000751495361328125, -5.7220458984375e-06, -1.0556259155273438, -6.29425048828125e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.0037555694580078125, -1.9073486328125e-06, -0.01806187629699707, -4.768370445162873e-07, -0.0013976097106933594, -4.0531158447265625e-06, -0.01613222248852253, 0.0, -0.00110626220703125, -0.000339508056640625, -0.0003802768187597394, -7.152555099310121e-07, -0.08142280578613281, -0.000244140625, -0.40089893341064453, -3.814697265625e-06, -0.1342945098876953, -2.288818359375e-05, -0.000774383544921875, -1.9073486328125e-06, -0.014894723892211914, -4.768370445162873e-07, -0.0002428293228149414, -1.1920928244535389e-07, -0.7201007008552551, 0.0, -0.6326427459716797, -3.0517578125e-05, -1.9073486328125e-05, -0.3051872253417969, 0.0, -0.7636446952819824, -0.00014435203047469258, -0.013577461242675781, -1.9073486328125e-06, -0.5687789916992188, 0.0, -8.7738037109375e-05, -1.9073486328125e-06, -0.00027525422046892345, -2.2649765014648438e-06, -0.0005413293838500977, -4.0531158447265625e-06, -0.040949951857328415, -3.6954811548639555e-06, -0.19278621673583984, -0.0021200180053710938, -0.08785533905029297, -0.0022830963134765625, -0.13774490356445312, -1.9073486328125e-06, -0.00022458648891188204, -8.225440979003906e-06, -5.125999450683594e-05, -3.576278118089249e-07, -0.000214457482798025, 0.0, -0.019934415817260742, -2.264974000354414e-06], "choice_history": [97, 285, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hand", " ", "of", " ", "Protection", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 362, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>", 106, 155, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 102, 142, 346, 50, 174, "target", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "divine_shield"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}, {"value": {"_type": "Template76", "hole1": "divine_shield", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "target"}], "value": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "divine_shield"}, "_type": "Assign"}, {"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}], "hole3": "use", "hole0": "HandOfProtection", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -8.945192079394175, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n        self.target.divine_shield()\n        target = self.target.divine_shield\n        super().use(player, game)\n"}, {"score_history": [-0.000247955322265625, -0.008157730102539062, -0.00015805903240107, -0.0018355483189225197, -0.0008493128116242588, -3.421248038648628e-05, -5.841252459504176e-06, -8.90493392944336e-05, -2.2649677703157067e-05, -0.000988006591796875, -8.7738037109375e-05, -0.0008106231689453125, -0.0001068115234375, -8.7738037109375e-05, -0.0007427695672959089, -1.9073486328125e-06, -0.0002887248992919922, 0.0, -0.0011234283447265625, -0.000110626220703125, -0.0013580322265625, -4.410734163684538e-06, -0.00012159346078988165, -0.00022017580340616405, -7.43865966796875e-05, -0.0009691715240478516, -0.0002841949462890625, -0.00020599365234375, -3.0517578125e-05, -0.0001982170360861346, -5.7220458984375e-06, -2.288818359375e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.0002155303955078125, -1.33514404296875e-05, -0.0005112886428833008, -1.9073486328125e-05, -4.1961669921875e-05, -2.288818359375e-05, -0.0002384185791015625, -3.814697265625e-06, -0.00044858455657958984, -9.5367431640625e-06, -0.0010433197021484375, -1.33514404296875e-05, -0.0007915496826171875, -4.57763671875e-05, -5.7220458984375e-06, -0.013360141776502132, -2.0265579223632812e-06, -0.0003795623779296875, -1.33514404296875e-05, -0.000244140625, 0.0, -3.814697265625e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0006486177444458008, -3.814697265625e-06, -0.009699344635009766, -1.1920928244535389e-07, -0.02189767360687256, 0.0, -1.835809598560445e-05, 0.0, -0.0036411285400390625, -0.00017547607421875, -0.00018356749205850065, -4.076874756719917e-05, -3.586787223815918, -4.76837158203125e-05, -0.0008449554443359375, -7.43865966796875e-05, -0.00035858154296875, -2.288818359375e-05, 0.0, -0.0011060350807383657, -4.601478576660156e-05, -0.00022874554269947112, -7.152555099310121e-07, -3.0159908419591375e-05, 0.0, -0.001032471307553351, -1.7881377516459906e-06, -0.061771392822265625, -0.000751495361328125, -5.7220458984375e-06, -1.0556259155273438, -6.29425048828125e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.0037555694580078125, -1.9073486328125e-06, -0.01806187629699707, -4.768370445162873e-07, -0.0013976097106933594, -4.0531158447265625e-06, -0.01613222248852253, 0.0, -0.00110626220703125, -0.000339508056640625, -0.0003802768187597394, -7.152555099310121e-07, -0.08142280578613281, -0.000244140625, -1.1928138732910156, -0.0002727508544921875, -0.017263412475585938, 0.0, -0.0006261916714720428, -0.00018036361143458635, -5.173676254344173e-05, -2.3841855067985307e-07, -0.00014042841212358326, 0.0, -0.007048367988318205, -1.4305104514278355e-06, -0.00492095947265625, -0.0037593841552734375, -1.71661376953125e-05, -1.9667034149169922, -9.918212890625e-05, -1.33514404296875e-05, 0.0, -0.00243377685546875, -1.9073486328125e-06, -0.019944429397583008, -4.768370445162873e-07, -0.0012886524200439453, -4.0531158447265625e-06, -0.01564847119152546, 0.0, -0.0008754730224609375, -0.00028228759765625, -0.0002788301499094814, -8.344646857949556e-07, -0.07721233367919922, -0.00026702880859375, -1.0105085372924805, -0.0002765655517578125, -0.011098861694335938, 0.0, -0.000659905665088445, -0.0001668929762672633, -5.102151772007346e-05, -2.3841855067985307e-07, -0.00012981879990547895, 0.0, -0.0067962403409183025, -1.311301275563892e-06], "choice_history": [97, 285, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hand", " ", "of", " ", "Protection", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 362, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>", 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>", 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "divine_shield"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}, {"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "divine_shield"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}, {"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}], "hole3": "use", "hole0": "HandOfProtection", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -9.246676779653562, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n        super().use(player, game)\n        self.target.divine_shield = True\n        super().use(player, game)\n"}, {"score_history": [-0.000247955322265625, -0.008157730102539062, -0.00015805903240107, -0.0018355483189225197, -0.0008493128116242588, -3.421248038648628e-05, -5.841252459504176e-06, -8.90493392944336e-05, -2.2649677703157067e-05, -0.000988006591796875, -8.7738037109375e-05, -0.0008106231689453125, -0.0001068115234375, -8.7738037109375e-05, -0.0007427695672959089, -1.9073486328125e-06, -0.0002887248992919922, 0.0, -0.0011234283447265625, -0.000110626220703125, -0.0013580322265625, -4.410734163684538e-06, -0.00012159346078988165, -0.00022017580340616405, -7.43865966796875e-05, -0.0009691715240478516, -0.0002841949462890625, -0.00020599365234375, -3.0517578125e-05, -0.0001982170360861346, -5.7220458984375e-06, -2.288818359375e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.0002155303955078125, -1.33514404296875e-05, -0.0005112886428833008, -1.9073486328125e-05, -4.1961669921875e-05, -2.288818359375e-05, -0.0002384185791015625, -3.814697265625e-06, -0.00044858455657958984, -9.5367431640625e-06, -0.0010433197021484375, -1.33514404296875e-05, -0.0007915496826171875, -4.57763671875e-05, -5.7220458984375e-06, -0.013360141776502132, -2.0265579223632812e-06, -0.0003795623779296875, -1.33514404296875e-05, -0.000244140625, 0.0, -3.814697265625e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0006486177444458008, -3.814697265625e-06, -0.009699344635009766, -1.1920928244535389e-07, -0.02189767360687256, 0.0, -1.835809598560445e-05, 0.0, -0.0036411285400390625, -0.00017547607421875, -0.00018356749205850065, -4.076874756719917e-05, -3.586787223815918, -4.76837158203125e-05, -0.0008449554443359375, -7.43865966796875e-05, -0.00035858154296875, -2.288818359375e-05, 0.0, -0.0011060350807383657, -4.601478576660156e-05, -0.00022874554269947112, -7.152555099310121e-07, -3.0159908419591375e-05, 0.0, -0.001032471307553351, -1.7881377516459906e-06, -0.061771392822265625, -0.000751495361328125, -5.7220458984375e-06, -1.0556259155273438, -6.29425048828125e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.0037555694580078125, -1.9073486328125e-06, -0.01806187629699707, -4.768370445162873e-07, -0.0013976097106933594, -4.0531158447265625e-06, -0.01613222248852253, 0.0, -0.00110626220703125, -0.000339508056640625, -0.0003802768187597394, -7.152555099310121e-07, -0.08142280578613281, -0.000244140625, -1.1928138732910156, -0.0002727508544921875, -0.017263412475585938, 0.0, -0.0006261916714720428, -0.00018036361143458635, -5.173676254344173e-05, -2.3841855067985307e-07, -0.00014042841212358326, 0.0, -0.007048367988318205, -1.4305104514278355e-06, -0.00492095947265625, -0.0037593841552734375, -1.71661376953125e-05, -0.1520671844482422, -5.7220458984375e-06, -0.9687077403068542, -3.349725011503324e-05, -0.4277496337890625, -0.0023288726806640625, -1.33514404296875e-05, -2.47955322265625e-05, -0.009044647216796875, 0.0, -0.0038604736328125, -1.9073486328125e-06, -0.011745212599635124, -5.483625955093885e-06, -0.0005570650100708008, 0.0, -0.2820018529891968, -2.3841855067985307e-07, -0.0013332366943359375, -0.02581787109375, -3.814697265625e-06, -0.014430099166929722, -3.755022044060752e-05, -0.04591178894042969, -3.4332275390625e-05, -0.17882418632507324, -0.0028269216418266296, -0.019882185384631157, -0.735203742980957, -0.0006923675537109375, -0.6542425155639648, -0.000377655029296875, -0.006378173828125, 0.0, -0.002118349075317383, -1.1920928244535389e-07, -0.12839531898498535, 0.0], "choice_history": [97, 285, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hand", " ", "of", " ", "Protection", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 362, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>", 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 347, 50, 174, "game", "<EOS>", 88, 325, "Divine", "Shield", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "divine_shield"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}, {"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "args": [{"_type": "Name", "id": "game"}, {"_type": "Template79", "hole0": "DivineShield"}]}, "_type": "Assign"}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "HandOfProtection", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -9.806590789721142, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n        super().use(player, game)\n        targets = hearthbreaker.targeting.find_minion_spell_target(game,\n            DivineShield())\n        player.draw()\n"}, {"score_history": [-0.000247955322265625, -0.008157730102539062, -0.00015805903240107, -0.0018355483189225197, -0.0008493128116242588, -3.421248038648628e-05, -5.841252459504176e-06, -8.90493392944336e-05, -2.2649677703157067e-05, -0.000988006591796875, -8.7738037109375e-05, -0.0008106231689453125, -0.0001068115234375, -8.7738037109375e-05, -0.0007427695672959089, -1.9073486328125e-06, -0.0002887248992919922, 0.0, -0.0011234283447265625, -0.000110626220703125, -0.0013580322265625, -4.410734163684538e-06, -0.00012159346078988165, -0.00022017580340616405, -7.43865966796875e-05, -0.0009691715240478516, -0.0002841949462890625, -0.00020599365234375, -3.0517578125e-05, -0.0001982170360861346, -5.7220458984375e-06, -2.288818359375e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.0002155303955078125, -1.33514404296875e-05, -0.0005112886428833008, -1.9073486328125e-05, -4.1961669921875e-05, -2.288818359375e-05, -0.0002384185791015625, -3.814697265625e-06, -0.00044858455657958984, -9.5367431640625e-06, -0.0010433197021484375, -1.33514404296875e-05, -0.0007915496826171875, -4.57763671875e-05, -5.7220458984375e-06, -0.013360141776502132, -2.0265579223632812e-06, -0.0003795623779296875, -1.33514404296875e-05, -0.000244140625, 0.0, -3.814697265625e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0006486177444458008, -3.814697265625e-06, -0.009699344635009766, -1.1920928244535389e-07, -0.02189767360687256, 0.0, -1.835809598560445e-05, 0.0, -0.0036411285400390625, -0.00017547607421875, -0.00018356749205850065, -4.076874756719917e-05, -3.586787223815918, -4.76837158203125e-05, -0.0008449554443359375, -7.43865966796875e-05, -0.00035858154296875, -2.288818359375e-05, 0.0, -0.0011060350807383657, -4.601478576660156e-05, -0.00022874554269947112, -7.152555099310121e-07, -3.0159908419591375e-05, 0.0, -0.001032471307553351, -1.7881377516459906e-06, -0.061771392822265625, -0.000751495361328125, -5.7220458984375e-06, -1.0556259155273438, -6.29425048828125e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.0037555694580078125, -1.9073486328125e-06, -0.01806187629699707, -4.768370445162873e-07, -0.0013976097106933594, -4.0531158447265625e-06, -0.01613222248852253, 0.0, -0.00110626220703125, -0.000339508056640625, -0.0003802768187597394, -7.152555099310121e-07, -0.08142280578613281, -0.000244140625, -1.1928138732910156, -0.0002727508544921875, -0.017263412475585938, 0.0, -0.0006261916714720428, -0.00018036361143458635, -5.173676254344173e-05, -2.3841855067985307e-07, -0.00014042841212358326, 0.0, -0.007048367988318205, -1.4305104514278355e-06, -0.00492095947265625, -0.0037593841552734375, -1.71661376953125e-05, -0.1520671844482422, -5.7220458984375e-06, -0.9687077403068542, -3.349725011503324e-05, -0.4277496337890625, -0.0023288726806640625, -1.33514404296875e-05, -2.47955322265625e-05, -0.009044647216796875, 0.0, -0.0038604736328125, -1.9073486328125e-06, -0.011745212599635124, -5.483625955093885e-06, -0.0005570650100708008, 0.0, -0.2820018529891968, -2.3841855067985307e-07, -0.0013332366943359375, -0.02581787109375, -3.814697265625e-06, -0.014430099166929722, -3.755022044060752e-05, -0.04591178894042969, -3.4332275390625e-05, -0.17882418632507324, -0.0028269216418266296, -0.019882185384631157, -1.026759147644043, -0.000640869140625, -0.000141143798828125, -0.5624923706054688, 0.0, -0.2889285087585449, -2.503394853192731e-06, -0.2886524200439453, -1.9073486328125e-06, -0.19620513916015625, 0.0, -0.000202178955078125, -1.9073486328125e-06, -0.0055876970291137695, -3.576278118089249e-07, -0.0012881755828857422, -3.814697265625e-06, -0.16674110293388367, -3.6954811548639555e-06], "choice_history": [97, 285, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hand", " ", "of", " ", "Protection", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 362, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>", 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 347, 50, 174, "game", "<EOS>", 88, 325, "Divine", "Shield", "<EOS>", 102, 142, 346, 50, 174, "minion", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "divine_shield"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}, {"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "args": [{"_type": "Name", "id": "game"}, {"_type": "Template79", "hole0": "DivineShield"}]}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "minion"}], "value": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "divine_shield"}, "_type": "Assign"}], "hole3": "use", "hole0": "HandOfProtection", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hand of Protection"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -10.816835487046426, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n        super().use(player, game)\n        targets = hearthbreaker.targeting.find_minion_spell_target(game,\n            DivineShield())\n        minion = self.target.divine_shield\n"}]}
{"index": 46, "beams": [{"score_history": [-0.0011501312255859375, -5.7220458984375e-06, -2.09808349609375e-05, -0.0001220703125, -9.918212890625e-05, -2.861018856492592e-06, -2.1457672119140625e-06, -8.272798004327342e-05, -3.814697265625e-05, -3.814697265625e-05, -3.814697265625e-06, -0.00834289938211441, -2.0384788513183594e-05, -0.0002460479736328125, -0.0003871917724609375, -0.0174560546875, -0.32895565032958984, -4.0172799344873056e-05, -5.936622619628906e-05, -4.88758041683468e-06, -0.0001926422119140625, -0.00012873999367002398, -9.5367431640625e-06, -0.008020401000976562, -3.814697265625e-06, -0.0007915496826171875, -7.62939453125e-06, -0.0009002685546875, -0.000133514404296875, -0.00019073486328125, -0.0007668733596801758, -7.62939453125e-06, -0.0006771087646484375, -3.814697265625e-05, -0.000469207763671875, 0.0, -0.001407623291015625, -3.814697265625e-06, -0.0043048858642578125, -1.9073486328125e-06, -0.00030517578125, -0.056591033935546875, -0.002007854636758566, -1.2636171959456988e-05, -7.283539162017405e-05, -1.9550323486328125e-05, -0.0020732879638671875, -0.0012416839599609375, -3.814697265625e-06, -0.002144932746887207, -0.00027310848236083984, -3.62396240234375e-05, -1.33514404296875e-05, -5.7220458984375e-06, -2.815969673974905e-05, -3.659724825411104e-05, -0.0008220672607421875, -5.340576171875e-05, -5.7220458984375e-06, -2.47955322265625e-05, -0.000339508056640625, 0.0, -0.0016145706176757812, -0.0018330812454223633, -0.0012807846069335938, -0.00107574462890625, -0.001130223274230957, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "Healing", "Totem", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 199, "Healing", " ", "Totem", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", 347, 51, 175, "False", "<EOS>", 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 112, 190, "0", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "1", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 22, 176, "Null", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": [{"value": true, "_type": "NameConstant"}, {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "TOTEM"}], "hole3": "FREE", "hole0": "Healing Totem", "_type": "Template14", "hole2": "SHAMAN", "hole1": 1}, {"hole4": [{"n": 1, "_type": "Num"}], "hole3": "Heal", "hole0": 0, "_type": "Template0", "hole2": "TurnEnded", "hole7": [{"value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword", "arg": "condition"}], "hole5": "MinionSelector", "hole1": 2}], "_type": "ClassDef", "name": "HealingTotem"}], "_type": "Module"}, "score": -0.44818240902441175, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n"}, {"score_history": [-0.0011501312255859375, -5.7220458984375e-06, -2.09808349609375e-05, -0.0001220703125, -9.918212890625e-05, -2.861018856492592e-06, -2.1457672119140625e-06, -8.272798004327342e-05, -3.814697265625e-05, -3.814697265625e-05, -3.814697265625e-06, -0.00834289938211441, -2.0384788513183594e-05, -0.0002460479736328125, -0.0003871917724609375, -0.0174560546875, -1.3261394500732422, -5.960462772236497e-07, -6.4849853515625e-05, -9.059892363438848e-06, -1.71661376953125e-05, -0.00010704235319280997, -7.05718994140625e-05, -0.0006237030029296875, 0.0, -0.01084136962890625, 0.0, -7.62939453125e-05, -0.0025730133056640625, -4.9591064453125e-05, -0.14655494689941406, 0.0, -0.0011425018310546875, -1.9147682189941406, -0.0008497672970406711, -5.72192293475382e-05, -0.00011646491475403309, -2.6106828954652883e-05, -0.0008716583251953125, -0.0025159120559692383, -1.9073486328125e-06, -0.011093854904174805, -0.0003591775894165039, -1.1444091796875e-05, -3.814697265625e-05, -1.9073486328125e-06, -1.868281287897844e-05, -0.00017523759743198752, -0.000392913818359375, -5.7220458984375e-05, -3.814697265625e-06, -2.09808349609375e-05, -0.0001201629638671875, 0.0, -0.0015888214111328125, -0.001482248306274414, -0.0012683868408203125, -0.001171112060546875, -0.0013017654418945312, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "Healing", "Totem", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Healing", " ", "Totem", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", 353, 94, 316, "TOTEM", "<EOS>", 112, 190, "0", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "1", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 22, 176, "Null", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole3": "FREE", "hole0": "Healing Totem", "_type": "Template14", "hole2": "SHAMAN", "hole5": [{"_type": "Template75", "hole0": "TOTEM"}], "hole1": 1}, {"hole4": [{"n": 1, "_type": "Num"}], "hole3": "Heal", "hole0": 0, "_type": "Template0", "hole2": "TurnEnded", "hole7": [{"value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword", "arg": "condition"}], "hole5": "MinionSelector", "hole1": 2}], "_type": "ClassDef", "name": "HealingTotem"}], "_type": "Module"}, "score": -3.45460370498796, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n"}, {"score_history": [-0.0011501312255859375, -5.7220458984375e-06, -2.09808349609375e-05, -0.0001220703125, -9.918212890625e-05, -2.861018856492592e-06, -2.1457672119140625e-06, -8.272798004327342e-05, -3.814697265625e-05, -3.814697265625e-05, -3.814697265625e-06, -0.00834289938211441, -2.0384788513183594e-05, -0.0002460479736328125, -0.0003871917724609375, -0.0174560546875, -1.3261394500732422, -5.960462772236497e-07, -6.4849853515625e-05, -9.059892363438848e-06, -1.71661376953125e-05, -0.00010704235319280997, -7.05718994140625e-05, -0.0006237030029296875, 0.0, -0.01084136962890625, 0.0, -7.62939453125e-05, -0.0025730133056640625, -4.9591064453125e-05, -0.14655494689941406, 0.0, -0.0011425018310546875, -2.074955940246582, -0.0001880952768260613, -2.861022494471399e-06, -2.5868310331134126e-05, -6.556507287314162e-06, -0.0013850927352905273, -0.011440396308898926, -1.9073486328125e-06, -0.002801179885864258, -0.00023472309112548828, -3.24249267578125e-05, -5.91278076171875e-05, -5.7220458984375e-05, -0.00032156019005924463, -4.780292510986328e-05, -0.10131454467773438, -1.33514404296875e-05, -3.62396240234375e-05], "choice_history": [96, 173, 358, 105, 152, "Healing", "Totem", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Healing", " ", "Totem", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", 353, 94, 316, "TOTEM", "<EOS>", 112, 189, "0", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "1", "<EOS>", "Minion", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole3": "FREE", "hole0": "Healing Totem", "_type": "Template14", "hole2": "SHAMAN", "hole5": [{"_type": "Template75", "hole0": "TOTEM"}], "hole1": 1}, {"hole4": [{"n": 1, "_type": "Num"}], "hole3": "Heal", "hole0": 0, "_type": "Template0", "hole2": "TurnEnded", "hole5": "MinionSelector", "hole1": 2}], "_type": "ClassDef", "name": "HealingTotem"}], "_type": "Module"}, "score": -3.7092135572782468, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector()))])\n"}, {"score_history": [-0.0011501312255859375, -5.7220458984375e-06, -2.09808349609375e-05, -0.0001220703125, -9.918212890625e-05, -2.861018856492592e-06, -2.1457672119140625e-06, -8.272798004327342e-05, -3.814697265625e-05, -3.814697265625e-05, -3.814697265625e-06, -0.00834289938211441, -2.0384788513183594e-05, -0.0002460479736328125, -0.0003871917724609375, -0.0174560546875, -1.3261394500732422, -5.960462772236497e-07, -6.4849853515625e-05, -9.059892363438848e-06, -1.71661376953125e-05, -0.00010704235319280997, -7.05718994140625e-05, -0.0006237030029296875, 0.0, -0.01084136962890625, 0.0, -7.62939453125e-05, -0.0025730133056640625, -4.9591064453125e-05, -0.14655494689941406, 0.0, -0.0011425018310546875, -1.7000560760498047, -0.0027404683642089367, -2.1457621187437326e-05, -0.0003161290951538831, -2.741813204920618e-06, -0.0033535955008119345, -0.5387849807739258, -0.00012969970703125, -0.005337833892554045, -0.0016465187072753906, -0.0015712026506662369, -0.01929771900177002, 0.0, -0.7648830413818359, -0.0027990341186523438, -5.7220458984375e-06, -0.026574134826660156, -0.00010120868682861328, -0.00689697265625, -0.0037240982055664062, -0.0001227855682373047, -7.62939453125e-06], "choice_history": [96, 173, 358, 105, 152, "Healing", "Totem", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Healing", " ", "Totem", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", 353, 94, 316, "TOTEM", "<EOS>", 112, 187, "0", "<EOS>", "2", "<EOS>", "Turn", "Started", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 22, 176, "Null", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole3": "FREE", "hole0": "Healing Totem", "_type": "Template14", "hole2": "SHAMAN", "hole5": [{"_type": "Template75", "hole0": "TOTEM"}], "hole1": 1}, {"hole3": "Kill", "hole0": 0, "_type": "Template0", "hole2": "TurnStarted", "hole7": [{"value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword", "arg": "condition"}], "hole5": "MinionSelector", "hole1": 2}], "_type": "ClassDef", "name": "HealingTotem"}], "_type": "Module"}, "score": -4.594661714556253, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnStarted(), ActionTag(Kill(),\n            MinionSelector(condition=Null)))])\n"}, {"score_history": [-0.0011501312255859375, -5.7220458984375e-06, -2.09808349609375e-05, -0.0001220703125, -9.918212890625e-05, -2.861018856492592e-06, -2.1457672119140625e-06, -8.272798004327342e-05, -3.814697265625e-05, -3.814697265625e-05, -3.814697265625e-06, -0.00834289938211441, -2.0384788513183594e-05, -0.0002460479736328125, -0.0003871917724609375, -0.0174560546875, -1.3261394500732422, -5.960462772236497e-07, -6.4849853515625e-05, -9.059892363438848e-06, -1.71661376953125e-05, -0.00010704235319280997, -7.05718994140625e-05, -0.0006237030029296875, 0.0, -0.01084136962890625, 0.0, -7.62939453125e-05, -0.0025730133056640625, -4.9591064453125e-05, -0.14655494689941406, 0.0, -0.0011425018310546875, -1.7000560760498047, -0.0027404683642089367, -2.1457621187437326e-05, -0.0003161290951538831, -2.741813204920618e-06, -0.0033535955008119345, -0.5387849807739258, -0.00012969970703125, -0.005337833892554045, -0.0016465187072753906, -0.0015712026506662369, -0.01929771900177002, 0.0, -0.6752338409423828, -0.0005903244018554688, -3.814697265625e-06, -0.14863204956054688, -4.9591064453125e-05, -0.002918243408203125, -0.0016117095947265625, -0.0001169443130493164, -9.5367431640625e-06, -0.010613441467285156, -2.288818359375e-05, -0.023103713989257812, -9.5367431640625e-06, -0.0005702972412109375, -3.814697265625e-06, -0.0029431581497192383, -0.0001583099365234375, 0.0], "choice_history": [96, 173, 358, 105, 152, "Healing", "Totem", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Healing", " ", "Totem", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", 353, 94, 316, "TOTEM", "<EOS>", 112, 187, "0", "<EOS>", "2", "<EOS>", "Turn", "Started", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 354, 95, 336, "condition", "<EOS>", 22, 176, "Null", "<EOS>", 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole3": "FREE", "hole0": "Healing Totem", "_type": "Template14", "hole2": "SHAMAN", "hole5": [{"_type": "Template75", "hole0": "TOTEM"}], "hole1": 1}, {"hole3": "Kill", "hole0": 0, "_type": "Template0", "hole2": "TurnStarted", "hole7": [{"value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword", "arg": "condition"}, {"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}], "hole5": "MinionSelector", "hole1": 2}], "_type": "ClassDef", "name": "HealingTotem"}], "_type": "Module"}, "score": -4.656138302805459, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnStarted(), ActionTag(Kill(),\n            MinionSelector(condition=Null, players=BothPlayer())))])\n"}, {"score_history": [-0.0011501312255859375, -5.7220458984375e-06, -2.09808349609375e-05, -0.0001220703125, -9.918212890625e-05, -2.861018856492592e-06, -2.1457672119140625e-06, -8.272798004327342e-05, -3.814697265625e-05, -3.814697265625e-05, -3.814697265625e-06, -0.00834289938211441, -2.0384788513183594e-05, -0.0002460479736328125, -0.0003871917724609375, -0.0174560546875, -1.3261394500732422, -5.960462772236497e-07, -6.4849853515625e-05, -9.059892363438848e-06, -1.71661376953125e-05, -0.00010704235319280997, -7.05718994140625e-05, -0.0006237030029296875, 0.0, -0.01084136962890625, 0.0, -7.62939453125e-05, -0.0025730133056640625, -4.9591064453125e-05, -2.2428083419799805, -9.1552734375e-05, -0.00183868408203125, -1.440694808959961, -0.0006274943007156253, -5.9484369558049366e-05, -0.00016044967924244702, -2.706050690903794e-05, -0.0009135007858276367, -0.0024623870849609375, 0.0, -0.010660886764526367, -0.00028324127197265625, -9.5367431640625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -1.6616204447927885e-05, -0.0001556872739456594, -0.0003662109375, -4.1961669921875e-05, -1.9073486328125e-06, -2.09808349609375e-05, -0.000133514404296875, 0.0, -0.0017223358154296875, -0.001295328140258789, -0.0012454986572265625, -0.00113677978515625, -0.0013113021850585938, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "Healing", "Totem", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Healing", " ", "Totem", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 190, "0", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "1", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 22, 176, "Null", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole3": "FREE", "hole0": "Healing Totem", "_type": "Template14", "hole2": "SHAMAN", "hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole1": 1}, {"hole4": [{"n": 1, "_type": "Num"}], "hole3": "Heal", "hole0": 0, "_type": "Template0", "hole2": "TurnEnded", "hole7": [{"value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword", "arg": "condition"}], "hole5": "MinionSelector", "hole1": 2}], "_type": "ClassDef", "name": "HealingTotem"}], "_type": "Module"}, "score": -5.076713007907813, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n"}, {"score_history": [-0.0011501312255859375, -5.7220458984375e-06, -2.09808349609375e-05, -0.0001220703125, -9.918212890625e-05, -2.861018856492592e-06, -2.1457672119140625e-06, -8.272798004327342e-05, -3.814697265625e-05, -3.814697265625e-05, -3.814697265625e-06, -0.00834289938211441, -2.0384788513183594e-05, -0.0002460479736328125, -0.0003871917724609375, -0.0174560546875, -0.32895565032958984, -4.0172799344873056e-05, -5.936622619628906e-05, -4.88758041683468e-06, -0.0001926422119140625, -0.00012873999367002398, -9.5367431640625e-06, -0.008020401000976562, -3.814697265625e-06, -0.0007915496826171875, -7.62939453125e-06, -0.0009002685546875, -0.000133514404296875, -0.00019073486328125, -0.0007668733596801758, -7.62939453125e-06, -0.0006771087646484375, -3.814697265625e-05, -0.000469207763671875, 0.0, -0.001407623291015625, -3.814697265625e-06, -0.0043048858642578125, -1.9073486328125e-06, -0.00030517578125, -3.9179415702819824, -0.001125281909480691, -2.1457672119140625e-06, -7.6888500188943e-05, 0.0, -0.01660764031112194, -0.36972713470458984, -0.0001983642578125, -0.31781959533691406, -0.0015773773193359375, -0.0008794418536126614, -0.03244352340698242, 0.0, -0.30469799041748047, -0.00064849853515625, -9.5367431640625e-06, -0.0041648149490356445, -0.00015854835510253906, -0.0047855377197265625, -0.0016927719116210938, -0.00010180473327636719, -3.814697265625e-06], "choice_history": [96, 173, 358, 105, 152, "Healing", "Totem", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 199, "Healing", " ", "Totem", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", 347, 51, 175, "False", "<EOS>", 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 112, 187, "0", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 22, 176, "Null", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": [{"value": true, "_type": "NameConstant"}, {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "TOTEM"}], "hole3": "FREE", "hole0": "Healing Totem", "_type": "Template14", "hole2": "SHAMAN", "hole1": 1}, {"hole3": "Kill", "hole0": 0, "_type": "Template0", "hole2": "TurnEnded", "hole7": [{"value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword", "arg": "condition"}], "hole5": "MinionSelector", "hole1": 2}], "_type": "ClassDef", "name": "HealingTotem"}], "_type": "Module"}, "score": -5.350102071991387, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Kill(),\n            MinionSelector(condition=Null)))])\n"}, {"score_history": [-0.0011501312255859375, -5.7220458984375e-06, -2.09808349609375e-05, -0.0001220703125, -9.918212890625e-05, -2.861018856492592e-06, -2.1457672119140625e-06, -8.272798004327342e-05, -3.814697265625e-05, -3.814697265625e-05, -3.814697265625e-06, -0.00834289938211441, -2.0384788513183594e-05, -0.0002460479736328125, -0.0003871917724609375, -0.0174560546875, -1.3261394500732422, -5.960462772236497e-07, -6.4849853515625e-05, -9.059892363438848e-06, -1.71661376953125e-05, -0.00010704235319280997, -7.05718994140625e-05, -0.0006237030029296875, 0.0, -0.01084136962890625, 0.0, -7.62939453125e-05, -0.0025730133056640625, -4.9591064453125e-05, -0.14655494689941406, 0.0, -0.0011425018310546875, -2.926873207092285, -6.389555346686393e-05, -4.374908530735411e-05, -5.900852193008177e-05, -4.3868138163816184e-05, -0.11988693475723267, -0.001461029052734375, -9.5367431640625e-06, -0.8762521743774414, -0.00013947486877441406, -0.02255738154053688, -0.054856300354003906, 0.0], "choice_history": [96, 173, 358, 105, 152, "Healing", "Totem", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Healing", " ", "Totem", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", 353, 94, 316, "TOTEM", "<EOS>", 112, 186, "0", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", "Minion", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole3": "FREE", "hole0": "Healing Totem", "_type": "Template14", "hole2": "SHAMAN", "hole5": [{"_type": "Template75", "hole0": "TOTEM"}], "hole1": 1}, {"hole3": "Heal", "hole0": 0, "_type": "Template0", "hole2": "TurnEnded", "hole5": "MinionSelector", "hole1": 2}], "_type": "ClassDef", "name": "HealingTotem"}], "_type": "Module"}, "score": -5.518535224579239, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(),\n            MinionSelector()))])\n"}, {"score_history": [-0.0011501312255859375, -5.7220458984375e-06, -2.09808349609375e-05, -0.0001220703125, -9.918212890625e-05, -2.861018856492592e-06, -2.1457672119140625e-06, -8.272798004327342e-05, -3.814697265625e-05, -3.814697265625e-05, -3.814697265625e-06, -0.00834289938211441, -2.0384788513183594e-05, -0.0002460479736328125, -0.0003871917724609375, -0.0174560546875, -0.32895565032958984, -4.0172799344873056e-05, -5.936622619628906e-05, -4.88758041683468e-06, -0.0001926422119140625, -0.00012873999367002398, -9.5367431640625e-06, -0.008020401000976562, -3.814697265625e-06, -0.0007915496826171875, -7.62939453125e-06, -0.0009002685546875, -0.000133514404296875, -0.00019073486328125, -0.0007668733596801758, -7.62939453125e-06, -0.0006771087646484375, -3.814697265625e-05, -0.000469207763671875, 0.0, -0.001407623291015625, -3.814697265625e-06, -0.0043048858642578125, -1.9073486328125e-06, -0.00030517578125, -4.538863182067871, -8.070158219197765e-05, 0.0, -2.0027120626764372e-05, 0.0, -0.026830434799194336, -0.012517929077148438, -9.5367431640625e-06, -0.0071707963943481445, -0.0010118484497070312, -1.33514404296875e-05, -1.1444091796875e-05, -0.0001506805419921875, -0.0018161023035645485, -9.5367431640625e-06, -0.5822849273681641, -1.9073486328125e-06, 0.0], "choice_history": [96, 173, 358, 105, 152, "Healing", "Totem", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 199, "Healing", " ", "Totem", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", 347, 51, 175, "False", "<EOS>", 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 112, 189, "0", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "1", "<EOS>", "Hero", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": [{"value": true, "_type": "NameConstant"}, {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "TOTEM"}], "hole3": "FREE", "hole0": "Healing Totem", "_type": "Template14", "hole2": "SHAMAN", "hole1": 1}, {"hole4": [{"n": 1, "_type": "Num"}], "hole3": "Heal", "hole0": 0, "_type": "Template0", "hole2": "TurnEnded", "hole5": "HeroSelector", "hole1": 2}], "_type": "ClassDef", "name": "HealingTotem"}], "_type": "Module"}, "score": -5.546232196352321, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            HeroSelector()))])\n"}, {"score_history": [-0.0011501312255859375, -5.7220458984375e-06, -2.09808349609375e-05, -0.0001220703125, -9.918212890625e-05, -2.861018856492592e-06, -2.1457672119140625e-06, -8.272798004327342e-05, -3.814697265625e-05, -3.814697265625e-05, -3.814697265625e-06, -0.00834289938211441, -2.0384788513183594e-05, -0.0002460479736328125, -0.0003871917724609375, -0.0174560546875, -0.32895565032958984, -4.0172799344873056e-05, -5.936622619628906e-05, -4.88758041683468e-06, -0.0001926422119140625, -0.00012873999367002398, -9.5367431640625e-06, -0.008020401000976562, -3.814697265625e-06, -0.0007915496826171875, -7.62939453125e-06, -0.0009002685546875, -0.000133514404296875, -0.00019073486328125, -0.0007668733596801758, -7.62939453125e-06, -0.0006771087646484375, -3.814697265625e-05, -0.000469207763671875, 0.0, -0.001407623291015625, -3.814697265625e-06, -0.0043048858642578125, -1.9073486328125e-06, -0.00030517578125, -4.538863182067871, -8.070158219197765e-05, 0.0, -2.0027120626764372e-05, 0.0, -0.026830434799194336, -0.012517929077148438, -9.5367431640625e-06, -0.0071707963943481445, -0.0010118484497070312, -1.33514404296875e-05, -1.1444091796875e-05, -0.0001506805419921875, -0.0018161023035645485, -9.5367431640625e-06, -0.8361606597900391, -2.288818359375e-05, -7.62939453125e-06], "choice_history": [96, 173, 358, 105, 152, "Healing", "Totem", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 199, "Healing", " ", "Totem", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", 347, 51, 175, "False", "<EOS>", 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 112, 189, "0", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "1", "<EOS>", "Minion", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": [{"value": true, "_type": "NameConstant"}, {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "TOTEM"}], "hole3": "FREE", "hole0": "Healing Totem", "_type": "Template14", "hole2": "SHAMAN", "hole1": 1}, {"hole4": [{"n": 1, "_type": "Num"}], "hole3": "Heal", "hole0": 0, "_type": "Template0", "hole2": "TurnEnded", "hole5": "MinionSelector", "hole1": 2}], "_type": "ClassDef", "name": "HealingTotem"}], "_type": "Module"}, "score": -5.800136539003688, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector()))])\n"}, {"score_history": [-0.0011501312255859375, -5.7220458984375e-06, -2.09808349609375e-05, -0.0001220703125, -9.918212890625e-05, -2.861018856492592e-06, -2.1457672119140625e-06, -8.272798004327342e-05, -3.814697265625e-05, -3.814697265625e-05, -3.814697265625e-06, -0.00834289938211441, -2.0384788513183594e-05, -0.0002460479736328125, -0.0003871917724609375, -0.0174560546875, -1.3261394500732422, -5.960462772236497e-07, -6.4849853515625e-05, -9.059892363438848e-06, -1.71661376953125e-05, -0.00010704235319280997, -7.05718994140625e-05, -0.0006237030029296875, 0.0, -0.01084136962890625, 0.0, -7.62939453125e-05, -0.0025730133056640625, -4.9591064453125e-05, -0.14655494689941406, 0.0, -0.0011425018310546875, -1.1590728759765625, -0.004422214347869158, -7.915338210295886e-05, -7.128523429855704e-05, -6.079673767089844e-06, -0.05099928379058838, -0.0037899017333984375, 0.0, -0.29845142364501953, -0.00016963481903076172, -1.52587890625e-05, -0.0001468658447265625, -3.814697265625e-06, -0.0006602499634027481, -2.050399598374497e-05, -0.000263214111328125, -0.0003108978271484375, 0.0, -0.14976787567138672, -0.045128822326660156, -0.028702735900878906, -0.0048503875732421875, -6.580194167327136e-05, -0.00016021728515625, -2.09808349609375e-05, -0.39475202560424805, -0.12616586685180664, 0.0, -0.000308990478515625, -8.96453857421875e-05, -5.7220458984375e-06, -0.00049591064453125, -1.9073486328125e-06, -0.0013866424560546875, -1.9073486328125e-06, -0.6771001815795898, 0.0, -0.2142190933227539, -0.0001201629638671875, -0.3267974853515625, -1.9073486328125e-06, -0.005181312561035156, -1.9073486328125e-06, -0.0040589491836726665, -0.0011237859725952148, -3.814697265625e-06, -1.4341840744018555, -0.0011196136474609375, -0.07497227191925049, -0.00092315673828125, -9.655952453613281e-06, -0.14980529248714447, 0.0], "choice_history": [96, 173, 358, 105, 152, "Healing", "Totem", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Healing", " ", "Totem", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", 353, 94, 316, "TOTEM", "<EOS>", 112, 191, "0", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Minion", "Selector", "<EOS>", 348, 77, 302, "Not", "<EOS>", 21, 174, "Is", "Type", "<EOS>", 347, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 51, 175, "True", "<EOS>", 88, 325, "Both", "Player", "<EOS>", 84, 315, "Random", "Picker", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole3": "FREE", "hole0": "Healing Totem", "_type": "Template14", "hole2": "SHAMAN", "hole5": [{"_type": "Template75", "hole0": "TOTEM"}], "hole1": 1}, {"hole4": [{"n": 1, "_type": "Num"}], "hole6": [{"hole2": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "TOTEM"}, {"value": true, "_type": "NameConstant"}], "_type": "Template64", "hole1": {"_type": "Name", "id": "IsType"}, "hole0": "Not"}, {"_type": "Template79", "hole0": "BothPlayer"}, {"_type": "Template74", "hole1": 1, "hole0": "RandomPicker"}], "hole3": "Damage", "hole0": 0, "_type": "Template0", "hole2": "TurnEnded", "hole5": "MinionSelector", "hole1": 2}], "_type": "ClassDef", "name": "HealingTotem"}], "_type": "Module"}, "score": -6.676299427499828, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Damage(1\n            ), MinionSelector(Not(IsType(MINION_TYPE.TOTEM, True)),\n            BothPlayer(), RandomPicker(1))))])\n"}, {"score_history": [-0.0011501312255859375, -5.7220458984375e-06, -2.09808349609375e-05, -0.0001220703125, -9.918212890625e-05, -2.861018856492592e-06, -2.1457672119140625e-06, -8.272798004327342e-05, -3.814697265625e-05, -3.814697265625e-05, -3.814697265625e-06, -0.00834289938211441, -2.0384788513183594e-05, -0.0002460479736328125, -0.0003871917724609375, -0.0174560546875, -1.3261394500732422, -5.960462772236497e-07, -6.4849853515625e-05, -9.059892363438848e-06, -1.71661376953125e-05, -0.00010704235319280997, -7.05718994140625e-05, -0.0006237030029296875, 0.0, -0.01084136962890625, 0.0, -7.62939453125e-05, -0.0025730133056640625, -4.9591064453125e-05, -0.14655494689941406, 0.0, -0.0011425018310546875, -1.1590728759765625, -0.004422214347869158, -7.915338210295886e-05, -7.128523429855704e-05, -6.079673767089844e-06, -0.05099928379058838, -0.0037899017333984375, 0.0, -0.29845142364501953, -0.00016963481903076172, -1.52587890625e-05, -0.0001468658447265625, -3.814697265625e-06, -0.0006602499634027481, -2.050399598374497e-05, -0.000263214111328125, -0.0003108978271484375, 0.0, -0.14976787567138672, -0.045128822326660156, -0.028702735900878906, -0.0048503875732421875, -6.580194167327136e-05, -0.00016021728515625, -2.09808349609375e-05, -0.39475202560424805, -0.12616586685180664, 0.0, -0.000308990478515625, -8.96453857421875e-05, -5.7220458984375e-06, -0.00049591064453125, -1.9073486328125e-06, -0.0013866424560546875, -1.9073486328125e-06, -0.8466510772705078, 0.0, -0.015180587768554688, -1.71661376953125e-05, -1.5008220672607422, 0.0, -0.3126354217529297, -9.5367431640625e-06, -0.049149513244628906, -5.7220458984375e-06, -0.00275421142578125, -1.9073486328125e-06, -0.027467727661132812, 0.0, -0.07832622528076172, -0.0002574920654296875, -0.12874412536621094, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "Healing", "Totem", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Healing", " ", "Totem", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", 353, 94, 316, "TOTEM", "<EOS>", 112, 191, "0", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Minion", "Selector", "<EOS>", 348, 77, 302, "Not", "<EOS>", 21, 174, "Is", "Type", "<EOS>", 347, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 51, 175, "False", "<EOS>", 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 51, 175, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole3": "FREE", "hole0": "Healing Totem", "_type": "Template14", "hole2": "SHAMAN", "hole5": [{"_type": "Template75", "hole0": "TOTEM"}], "hole1": 1}, {"hole4": [{"n": 1, "_type": "Num"}], "hole6": [{"hole2": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, {"value": true, "_type": "NameConstant"}], "_type": "Template64", "hole1": {"_type": "Name", "id": "IsType"}, "hole0": "Not"}, {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "TOTEM"}, {"value": true, "_type": "NameConstant"}], "hole3": "Damage", "hole0": 0, "_type": "Template0", "hole2": "TurnEnded", "hole5": "MinionSelector", "hole1": 2}], "_type": "ClassDef", "name": "HealingTotem"}], "_type": "Module"}, "score": -6.748701450744477, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Damage(1\n            ), MinionSelector(Not(IsType(MINION_TYPE.MECH, True)),\n            MINION_TYPE.TOTEM, True)))])\n"}, {"score_history": [-0.0011501312255859375, -5.7220458984375e-06, -2.09808349609375e-05, -0.0001220703125, -9.918212890625e-05, -2.861018856492592e-06, -2.1457672119140625e-06, -8.272798004327342e-05, -3.814697265625e-05, -3.814697265625e-05, -3.814697265625e-06, -0.00834289938211441, -2.0384788513183594e-05, -0.0002460479736328125, -0.0003871917724609375, -0.0174560546875, -1.3261394500732422, -5.960462772236497e-07, -6.4849853515625e-05, -9.059892363438848e-06, -1.71661376953125e-05, -0.00010704235319280997, -7.05718994140625e-05, -0.0006237030029296875, 0.0, -0.01084136962890625, 0.0, -7.62939453125e-05, -0.0025730133056640625, -4.9591064453125e-05, -0.14655494689941406, 0.0, -0.0011425018310546875, -1.1590728759765625, -0.004422214347869158, -7.915338210295886e-05, -7.128523429855704e-05, -6.079673767089844e-06, -0.05099928379058838, -0.0037899017333984375, 0.0, -0.29845142364501953, -0.00016963481903076172, -1.52587890625e-05, -0.0001468658447265625, -3.814697265625e-06, -0.0006602499634027481, -2.050399598374497e-05, -0.000263214111328125, -0.0003108978271484375, 0.0, -0.14976787567138672, -0.045128822326660156, -0.028702735900878906, -0.0048503875732421875, -6.580194167327136e-05, -0.00016021728515625, -2.09808349609375e-05, -0.39475202560424805, -0.12616586685180664, 0.0, -0.000308990478515625, -8.96453857421875e-05, -5.7220458984375e-06, -0.00049591064453125, -1.9073486328125e-06, -0.0013866424560546875, -1.9073486328125e-06, -0.6771001815795898, 0.0, -0.2142190933227539, -0.0001201629638671875, -1.2879753112792969, 0.0, -0.5833444595336914, -5.7220458984375e-06, -0.05170631408691406, -7.62939453125e-06, -0.003387451171875, -1.9073486328125e-06, -0.028606414794921875, 0.0, -0.05215930938720703, -0.00017547607421875, -0.14212989807128906, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "Healing", "Totem", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Healing", " ", "Totem", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", 353, 94, 316, "TOTEM", "<EOS>", 112, 191, "0", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Minion", "Selector", "<EOS>", 348, 77, 302, "Not", "<EOS>", 21, 174, "Is", "Type", "<EOS>", 347, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 51, 175, "False", "<EOS>", 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 51, 175, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole3": "FREE", "hole0": "Healing Totem", "_type": "Template14", "hole2": "SHAMAN", "hole5": [{"_type": "Template75", "hole0": "TOTEM"}], "hole1": 1}, {"hole4": [{"n": 1, "_type": "Num"}], "hole6": [{"hole2": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "TOTEM"}, {"value": true, "_type": "NameConstant"}], "_type": "Template64", "hole1": {"_type": "Name", "id": "IsType"}, "hole0": "Not"}, {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "TOTEM"}, {"value": true, "_type": "NameConstant"}], "hole3": "Damage", "hole0": 0, "_type": "Template0", "hole2": "TurnEnded", "hole5": "MinionSelector", "hole1": 2}], "_type": "ClassDef", "name": "HealingTotem"}], "_type": "Module"}, "score": -6.827618000427094, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Damage(1\n            ), MinionSelector(Not(IsType(MINION_TYPE.TOTEM, True)),\n            MINION_TYPE.TOTEM, True)))])\n"}, {"score_history": [-0.0011501312255859375, -5.7220458984375e-06, -2.09808349609375e-05, -0.0001220703125, -9.918212890625e-05, -2.861018856492592e-06, -2.1457672119140625e-06, -8.272798004327342e-05, -3.814697265625e-05, -3.814697265625e-05, -3.814697265625e-06, -0.00834289938211441, -2.0384788513183594e-05, -0.0002460479736328125, -0.0003871917724609375, -0.0174560546875, -1.3261394500732422, -5.960462772236497e-07, -6.4849853515625e-05, -9.059892363438848e-06, -1.71661376953125e-05, -0.00010704235319280997, -7.05718994140625e-05, -0.0006237030029296875, 0.0, -0.01084136962890625, 0.0, -7.62939453125e-05, -0.0025730133056640625, -4.9591064453125e-05, -0.14655494689941406, 0.0, -0.0011425018310546875, -1.1590728759765625, -0.004422214347869158, -7.915338210295886e-05, -7.128523429855704e-05, -6.079673767089844e-06, -0.05099928379058838, -0.0037899017333984375, 0.0, -0.29845142364501953, -0.00016963481903076172, -1.52587890625e-05, -0.0001468658447265625, -3.814697265625e-06, -0.0006602499634027481, -2.050399598374497e-05, -0.000263214111328125, -0.0003108978271484375, 0.0, -0.14976787567138672, -0.045128822326660156, -0.028702735900878906, -0.0048503875732421875, -6.580194167327136e-05, -0.00016021728515625, -2.09808349609375e-05, -0.39475202560424805, -0.12616586685180664, 0.0, -0.000308990478515625, -8.96453857421875e-05, -5.7220458984375e-06, -0.00049591064453125, -1.9073486328125e-06, -0.0013866424560546875, -1.9073486328125e-06, -0.8466510772705078, 0.0, -0.015180587768554688, -1.71661376953125e-05, -0.25668811798095703, -1.9073486328125e-06, -0.008566856384277344, -5.7220458984375e-06, -0.005381694994866848, -0.0013126134872436523, -5.7220458984375e-06, -1.8945655822753906, -0.0011997222900390625, -0.0896674394607544, -0.0010166168212890625, -9.5367431640625e-06, -0.1583423614501953, 0.0], "choice_history": [96, 173, 358, 105, 152, "Healing", "Totem", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Healing", " ", "Totem", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", 353, 94, 316, "TOTEM", "<EOS>", 112, 191, "0", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Minion", "Selector", "<EOS>", 348, 77, 302, "Not", "<EOS>", 21, 174, "Is", "Type", "<EOS>", 347, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 51, 175, "True", "<EOS>", 88, 325, "Both", "Player", "<EOS>", 84, 315, "Random", "Picker", "<EOS>", "1", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole3": "FREE", "hole0": "Healing Totem", "_type": "Template14", "hole2": "SHAMAN", "hole5": [{"_type": "Template75", "hole0": "TOTEM"}], "hole1": 1}, {"hole4": [{"n": 1, "_type": "Num"}], "hole6": [{"hole2": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, {"value": true, "_type": "NameConstant"}], "_type": "Template64", "hole1": {"_type": "Name", "id": "IsType"}, "hole0": "Not"}, {"_type": "Template79", "hole0": "BothPlayer"}, {"_type": "Template74", "hole1": 1, "hole0": "RandomPicker"}], "hole3": "Damage", "hole0": 0, "_type": "Template0", "hole2": "TurnEnded", "hole5": "MinionSelector", "hole1": 2}], "_type": "ClassDef", "name": "HealingTotem"}], "_type": "Module"}, "score": -7.065289486529139, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Damage(1\n            ), MinionSelector(Not(IsType(MINION_TYPE.MECH, True)),\n            BothPlayer(), RandomPicker(1))))])\n"}, {"score_history": [-0.0011501312255859375, -5.7220458984375e-06, -20.674884796142578], "choice_history": [96, 173, 357], "model_output": {"body": [], "_type": "Module"}, "score": -20.676040649414062, "inferred_code": ""}]}
{"index": 47, "beams": [{"score_history": [-0.001720428466796875, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001506805419921875, -0.00016021728515625, -8.583032467868179e-06, -5.960462772236497e-07, -4.410734163684538e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.593647852540016e-05, -0.0003434419631958008, -2.1696090698242188e-05, -6.67572021484375e-05, -0.0012264251708984375, -0.00020599365234375, -8.344646857949556e-07, -5.91278076171875e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -1.43051022405416e-06, -1.1444091796875e-05, -0.0015659332275390625, 0.0, -0.00043487548828125, -1.9073486328125e-06, -7.05718994140625e-05, -3.814697265625e-05, -5.7220458984375e-06, -0.00043511390686035156, -1.9073486328125e-06, -0.00028228759765625, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.43865966796875e-05, -7.62939453125e-06, -0.0002614259719848633, -1.52587890625e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.002739548683166504, -1.9073486328125e-06, -0.00205230712890625, -0.00269317626953125, -0.00014495849609375, -1.9073486328125e-05, -5.53131103515625e-05, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.0002307891845703125, 0.0, -0.006607382092624903, -3.933906555175781e-06, -0.0001087188720703125, -0.00716400146484375, -0.0004901885986328125, -9.1552734375e-05, 0.0, -5.602834789897315e-06, -1.1920928244535389e-07, -0.0011726615484803915, -1.52587890625e-05, -1.6331649021594785e-05, -2.2530381102114916e-05, -0.03185081481933594, -3.4332275390625e-05, -0.0006438493728637695, -6.127357482910156e-05], "choice_history": [96, 173, 358, 105, 152, "Healing", "Touch", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Healing", " ", "Touch", "<EOS>", "3", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "8", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Healing Touch", "_type": "Template14", "hole2": "DRUID", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 3}, {"hole2": [{"hole2": 8, "_type": "Template69", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HealingTouch"}], "_type": "Module"}, "score": -0.06365456477171705, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n"}, {"score_history": [-0.001720428466796875, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001506805419921875, -0.00016021728515625, -8.583032467868179e-06, -5.960462772236497e-07, -4.410734163684538e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.593647852540016e-05, -0.0003434419631958008, -2.1696090698242188e-05, -6.67572021484375e-05, -0.0012264251708984375, -0.00020599365234375, -8.344646857949556e-07, -5.91278076171875e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -1.43051022405416e-06, -1.1444091796875e-05, -0.0015659332275390625, 0.0, -0.00043487548828125, -1.9073486328125e-06, -7.05718994140625e-05, -3.814697265625e-05, -5.7220458984375e-06, -0.00043511390686035156, -1.9073486328125e-06, -0.00028228759765625, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.43865966796875e-05, -7.62939453125e-06, -0.0002614259719848633, -1.52587890625e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.002739548683166504, -1.9073486328125e-06, -0.00205230712890625, -0.00269317626953125, -0.00014495849609375, -1.9073486328125e-05, -5.53131103515625e-05, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.0002307891845703125, 0.0, -0.006607382092624903, -3.933906555175781e-06, -0.0001087188720703125, -0.00716400146484375, -0.0004901885986328125, -9.1552734375e-05, 0.0, -5.602834789897315e-06, -1.1920928244535389e-07, -0.0011726615484803915, -1.52587890625e-05, -1.6331649021594785e-05, -2.2530381102114916e-05, -5.363790512084961, -3.814697265625e-06, -6.67572021484375e-05, 0.0, -0.042072415351867676, -3.814697265625e-05, -0.7518835067749023, 0.0], "choice_history": [96, 173, 358, 105, 152, "Healing", "Touch", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Healing", " ", "Touch", "<EOS>", "3", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "8", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "player", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Healing Touch", "_type": "Template14", "hole2": "DRUID", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 3}, {"hole2": [{"hole2": 8, "_type": "Template69", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}], "_type": "Template3", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HealingTouch"}], "_type": "Module"}, "score": -6.188919447813099, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self.player)\n"}, {"score_history": [-0.001720428466796875, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001506805419921875, -0.00016021728515625, -8.583032467868179e-06, -5.960462772236497e-07, -4.410734163684538e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.593647852540016e-05, -0.0003434419631958008, -2.1696090698242188e-05, -6.67572021484375e-05, -0.0012264251708984375, -0.00020599365234375, -8.344646857949556e-07, -5.91278076171875e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -1.43051022405416e-06, -1.1444091796875e-05, -0.0015659332275390625, 0.0, -0.00043487548828125, -1.9073486328125e-06, -7.05718994140625e-05, -3.814697265625e-05, -5.7220458984375e-06, -0.00043511390686035156, -1.9073486328125e-06, -0.00028228759765625, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.43865966796875e-05, -7.62939453125e-06, -0.0002614259719848633, -1.52587890625e-05, -2.288818359375e-05, -1.9073486328125e-06, -6.514692783355713, -4.00543212890625e-05, -0.006514549255371094, -0.001495361328125, -0.000133514404296875, -7.62939453125e-06, -8.58306884765625e-05, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.0001888275146484375, 0.0, -0.005633618216961622, -5.841255187988281e-06, -9.918212890625e-05, -0.006682395935058594, -0.000522613525390625, -9.1552734375e-05, 0.0, -4.1723224057932384e-06, -1.1920928244535389e-07, -0.0012142655905336142, -1.537799835205078e-05, -1.573560803080909e-05, -2.5272138373111375e-05, -0.030216217041015625, -3.4332275390625e-05, -0.0005990266799926758, -6.508827209472656e-05], "choice_history": [96, 173, 358, 105, 152, "Healing", "Touch", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Healing", " ", "Touch", "<EOS>", "3", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "targeting", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "8", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Healing Touch", "_type": "Template14", "hole2": "DRUID", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "targeting"}, "_type": "keyword", "arg": "target_func"}], "hole1": 3}, {"hole2": [{"hole2": 8, "_type": "Template69", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HealingTouch"}], "_type": "Module"}, "score": -6.5758161148319445, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.targeting)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n"}, {"score_history": [-0.001720428466796875, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001506805419921875, -0.00016021728515625, -8.583032467868179e-06, -5.960462772236497e-07, -4.410734163684538e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.593647852540016e-05, -0.0003434419631958008, -2.1696090698242188e-05, -6.67572021484375e-05, -0.0012264251708984375, -0.00020599365234375, -8.344646857949556e-07, -5.91278076171875e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -1.43051022405416e-06, -1.1444091796875e-05, -0.0015659332275390625, 0.0, -0.00043487548828125, -1.9073486328125e-06, -7.05718994140625e-05, -3.814697265625e-05, -5.7220458984375e-06, -0.00043511390686035156, -1.9073486328125e-06, -0.00028228759765625, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.43865966796875e-05, -7.62939453125e-06, -0.0002614259719848633, -1.52587890625e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.002739548683166504, -1.9073486328125e-06, -0.00205230712890625, -6.14927864074707, -0.06018638610839844, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -0.0006847381591796875, -1.9073486328125e-06, -0.0001373291015625, 0.0, -0.37036800384521484, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "Healing", "Touch", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Healing", " ", "Touch", "<EOS>", "3", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 224, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Healing Touch", "_type": "Template14", "hole2": "DRUID", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 3}, {"_type": "Template3", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HealingTouch"}], "_type": "Module"}, "score": -6.592866355971211, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal()\n"}, {"score_history": [-0.001720428466796875, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001506805419921875, -0.00016021728515625, -8.583032467868179e-06, -5.960462772236497e-07, -4.410734163684538e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.593647852540016e-05, -0.0003434419631958008, -2.1696090698242188e-05, -6.67572021484375e-05, -0.0012264251708984375, -0.00020599365234375, -8.344646857949556e-07, -5.91278076171875e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -1.43051022405416e-06, -1.1444091796875e-05, -0.0015659332275390625, 0.0, -0.00043487548828125, -1.9073486328125e-06, -7.05718994140625e-05, -3.814697265625e-05, -5.7220458984375e-06, -0.00043511390686035156, -1.9073486328125e-06, -0.00028228759765625, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.43865966796875e-05, -7.62939453125e-06, -0.0002614259719848633, -1.52587890625e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.002739548683166504, -1.9073486328125e-06, -0.00205230712890625, -0.00269317626953125, -0.00014495849609375, -1.9073486328125e-05, -5.53131103515625e-05, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.0002307891845703125, 0.0, -0.006607382092624903, -3.933906555175781e-06, -0.0001087188720703125, -0.00716400146484375, -0.0004901885986328125, -9.1552734375e-05, 0.0, -5.602834789897315e-06, -1.1920928244535389e-07, -0.0011726615484803915, -1.52587890625e-05, -1.6331649021594785e-05, -2.2530381102114916e-05, -5.363790512084961, -3.814697265625e-06, -6.67572021484375e-05, 0.0, -0.042072415351867676, -3.814697265625e-05, -1.5704174041748047, -3.814697265625e-06], "choice_history": [96, 173, 358, 105, 152, "Healing", "Touch", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Healing", " ", "Touch", "<EOS>", "3", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "8", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Healing Touch", "_type": "Template14", "hole2": "DRUID", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 3}, {"hole2": [{"hole2": 8, "_type": "Template69", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Template3", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HealingTouch"}], "_type": "Module"}, "score": -7.007457159910267, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self._reveal)\n"}, {"score_history": [-0.001720428466796875, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001506805419921875, -0.00016021728515625, -8.583032467868179e-06, -5.960462772236497e-07, -4.410734163684538e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.593647852540016e-05, -0.0003434419631958008, -2.1696090698242188e-05, -6.67572021484375e-05, -0.0012264251708984375, -0.00020599365234375, -8.344646857949556e-07, -5.91278076171875e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -1.43051022405416e-06, -1.1444091796875e-05, -6.97504997253418, 0.0, -8.7738037109375e-05, -1.9073486328125e-06, -9.72747802734375e-05, -7.82012939453125e-05, -5.7220458984375e-06, -0.0005170106887817383, -1.9073486328125e-06, -0.0003757476806640625, -4.9591064453125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -8.7738037109375e-05, -9.5367431640625e-06, -0.0002804994583129883, -1.33514404296875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0025254487991333008, -1.9073486328125e-06, -0.002063751220703125, -0.0025234222412109375, -0.0001373291015625, -1.71661376953125e-05, -5.53131103515625e-05, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.0002460479736328125, 0.0, -0.0066133043728768826, -3.933906555175781e-06, -0.0001087188720703125, -0.0071849822998046875, -0.000492095947265625, -9.1552734375e-05, 0.0, -5.602834789897315e-06, -1.1920928244535389e-07, -0.001173496013507247, -1.52587890625e-05, -1.6331649021594785e-05, -2.2530381102114916e-05, -0.03189277648925781, -3.4332275390625e-05, -0.0006467103958129883, -6.127357482910156e-05], "choice_history": [96, 173, 358, 105, 152, "Healing", "Touch", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Healing", " ", "Touch", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "8", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Healing Touch", "_type": "Template14", "hole2": "SHAMAN", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 3}, {"hole2": [{"hole2": 8, "_type": "Template69", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HealingTouch"}], "_type": "Module"}, "score": -7.036773785468107, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n"}, {"score_history": [-0.001720428466796875, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001506805419921875, -0.00016021728515625, -8.583032467868179e-06, -5.960462772236497e-07, -4.410734163684538e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.593647852540016e-05, -0.0003434419631958008, -2.1696090698242188e-05, -6.67572021484375e-05, -0.0012264251708984375, -0.00020599365234375, -8.344646857949556e-07, -5.91278076171875e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -1.43051022405416e-06, -1.1444091796875e-05, -0.0015659332275390625, 0.0, -0.00043487548828125, -1.9073486328125e-06, -7.05718994140625e-05, -3.814697265625e-05, -5.7220458984375e-06, -0.00043511390686035156, -1.9073486328125e-06, -0.00028228759765625, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.43865966796875e-05, -7.62939453125e-06, -0.0002614259719848633, -1.52587890625e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.002739548683166504, -1.9073486328125e-06, -0.00205230712890625, -0.00269317626953125, -0.00014495849609375, -1.9073486328125e-05, -5.53131103515625e-05, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.0002307891845703125, 0.0, -0.006607382092624903, -3.933906555175781e-06, -0.0001087188720703125, -7.1493377685546875, -0.09444713592529297, -0.000156402587890625, -1.9073486328125e-06, -2.4199485778808594e-05, -1.1920928244535389e-07, -0.015813827514648438, -1.9073486328125e-06, -0.037232398986816406, -1.33514404296875e-05, -0.008864521980285645, -2.503394853192731e-06], "choice_history": [96, 173, 358, 105, 152, "Healing", "Touch", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Healing", " ", "Touch", "<EOS>", "3", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 78, 305, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Healing Touch", "_type": "Template14", "hole2": "DRUID", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 3}, {"hole2": [{"_type": "Template67", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HealingTouch"}], "_type": "Module"}, "score": -7.3279820912969384, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(2), self)\n"}, {"score_history": [-0.001720428466796875, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001506805419921875, -0.00016021728515625, -8.583032467868179e-06, -5.960462772236497e-07, -4.410734163684538e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.593647852540016e-05, -0.0003434419631958008, -2.1696090698242188e-05, -6.67572021484375e-05, -0.0012264251708984375, -0.00020599365234375, -8.344646857949556e-07, -5.91278076171875e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -1.43051022405416e-06, -1.1444091796875e-05, -0.0015659332275390625, 0.0, -0.00043487548828125, -1.9073486328125e-06, -7.05718994140625e-05, -3.814697265625e-05, -5.7220458984375e-06, -0.00043511390686035156, -1.9073486328125e-06, -0.00028228759765625, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.43865966796875e-05, -7.62939453125e-06, -0.0002614259719848633, -1.52587890625e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.002739548683166504, -1.9073486328125e-06, -0.00205230712890625, -0.00269317626953125, -0.00014495849609375, -1.9073486328125e-05, -5.53131103515625e-05, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.0002307891845703125, 0.0, -7.263501167297363, -1.1682510375976562e-05, -3.814697265625e-06, -0.051856040954589844, 0.0, -0.0008221864700317383, -1.1324866136419587e-05], "choice_history": [96, 173, 358, 105, 152, "Healing", "Touch", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Healing", " ", "Touch", "<EOS>", "3", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Healing Touch", "_type": "Template14", "hole2": "DRUID", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 3}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HealingTouch"}], "_type": "Module"}, "score": -7.33157222944422, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score_history": [-0.001720428466796875, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001506805419921875, -0.00016021728515625, -8.583032467868179e-06, -5.960462772236497e-07, -4.410734163684538e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.593647852540016e-05, -0.0003434419631958008, -2.1696090698242188e-05, -6.67572021484375e-05, -0.0012264251708984375, -0.00020599365234375, -8.344646857949556e-07, -5.91278076171875e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -1.43051022405416e-06, -1.1444091796875e-05, -0.0015659332275390625, 0.0, -0.00043487548828125, -1.9073486328125e-06, -7.05718994140625e-05, -3.814697265625e-05, -5.7220458984375e-06, -0.00043511390686035156, -1.9073486328125e-06, -0.00028228759765625, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.43865966796875e-05, -7.62939453125e-06, -0.0002614259719848633, -1.52587890625e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.002739548683166504, -1.9073486328125e-06, -0.00205230712890625, -0.00269317626953125, -0.00014495849609375, -1.9073486328125e-05, -5.53131103515625e-05, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.0002307891845703125, 0.0, -0.006607382092624903, -3.933906555175781e-06, -0.0001087188720703125, -5.660494804382324, -0.03601551055908203, -0.0002269744873046875, -5.7220458984375e-06, -1.3828277587890625e-05, 0.0, -0.03389239311218262, 0.0, -0.005634307861328125, -4.00543212890625e-05, -0.7324590682983398, -1.9073486328125e-06, -0.11094856262207031, -1.9073468138230965e-06, -0.1704387664794922, 0.0, -0.6131343841552734, -9.5367431640625e-06, -0.0027837753295898438, -1.1920928244535389e-07], "choice_history": [96, 173, 358, 105, 152, "Healing", "Touch", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Healing", " ", "Touch", "<EOS>", "3", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 72, 294, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 13, 143, 21, 174, "target", "<EOS>", "taunt", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Healing Touch", "_type": "Template14", "hole2": "DRUID", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 3}, {"hole2": [{"hole2": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "taunt"}, "_type": "Template57", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HealingTouch"}], "_type": "Module"}, "score": -7.388187670099363, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(target.taunt()), self)\n"}, {"score_history": [-0.001720428466796875, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001506805419921875, -0.00016021728515625, -8.583032467868179e-06, -5.960462772236497e-07, -4.410734163684538e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.593647852540016e-05, -0.0003434419631958008, -2.1696090698242188e-05, -6.67572021484375e-05, -0.0012264251708984375, -0.00020599365234375, -8.344646857949556e-07, -5.91278076171875e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -1.43051022405416e-06, -1.1444091796875e-05, -0.0015659332275390625, 0.0, -0.00043487548828125, -1.9073486328125e-06, -7.05718994140625e-05, -3.814697265625e-05, -5.7220458984375e-06, -0.00043511390686035156, -1.9073486328125e-06, -0.00028228759765625, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.43865966796875e-05, -7.62939453125e-06, -0.0002614259719848633, -1.52587890625e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.002739548683166504, -1.9073486328125e-06, -6.675693511962891, -0.007864952087402344, -0.0001316070556640625, 0.0, -0.0060242414474487305, -3.0517578125e-05, -0.007755398750305176, -5.9604644775390625e-06, -0.10556793212890625, -0.029695510864257812, -0.0006961822509765625, -0.0002635715063661337, -5.960462772236497e-07, -0.0126953125, -3.814697265625e-06, -0.00139617919921875, 0.0, -0.000263214111328125, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -0.06810760498046875, -5.7220458984375e-06, -0.0019598007202148438, 0.0, -0.4627953767776489, 0.0, -0.017679214477539062, -0.0025768280029296875, -0.000244140625, -0.000152587890625, 0.0, -2.741813204920618e-06, 0.0, -0.0013855694560334086, -2.288818359375e-05, -2.777568624878768e-05, -1.5973972040228546e-05, -0.04720878601074219, -4.57763671875e-05, -0.001287698745727539, -5.5789947509765625e-05, -3.0517578125e-05, -5.7220458984375e-06, -7.82012939453125e-05, 0.0, -0.5286712646484375, 0.0, -0.02021503448486328, 0.0, -0.02052474021911621, 0.0, -0.0002918243408203125, -0.0033283233642578125, -0.0002536773681640625, -0.0001010894775390625, 0.0, -4.649161837733118e-06, 0.0, -0.0016541479853913188, -2.288818359375e-05, -2.6106754376087338e-05, -1.8954162442241795e-05, -0.04212379455566406, -3.62396240234375e-05, -0.0012829303741455078, -4.8041343688964844e-05], "choice_history": [96, 173, 358, 105, 152, "Healing", "Touch", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Healing", " ", "Touch", "<EOS>", "3", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "8", "<EOS>", 50, 174, "self", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "8", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Healing Touch", "_type": "Template14", "hole2": "DRUID", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 3}, {"hole4": "heal", "hole6": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}, "hole3": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole0": {"_type": "Template79", "hole0": "super"}, "_type": "Template7", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole7": "heal", "hole8": [{"hole2": 8, "_type": "Template69", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "hole5": [{"hole2": 8, "_type": "Template69", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "hole1": "use"}], "_type": "ClassDef", "name": "HealingTouch"}], "_type": "Module"}, "score": -8.080581837870653, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n        player.hero.heal(player.effective_heal_power(8), self)\n"}, {"score_history": [-0.001720428466796875, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001506805419921875, -0.00016021728515625, -8.583032467868179e-06, -5.960462772236497e-07, -4.410734163684538e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.593647852540016e-05, -0.0003434419631958008, -2.1696090698242188e-05, -6.67572021484375e-05, -0.0012264251708984375, -0.00020599365234375, -8.344646857949556e-07, -5.91278076171875e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -1.43051022405416e-06, -1.1444091796875e-05, -0.0015659332275390625, 0.0, -0.00043487548828125, -1.9073486328125e-06, -7.05718994140625e-05, -3.814697265625e-05, -5.7220458984375e-06, -0.00043511390686035156, -1.9073486328125e-06, -0.00028228759765625, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.43865966796875e-05, -7.62939453125e-06, -0.0002614259719848633, -1.52587890625e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.002739548683166504, -1.9073486328125e-06, -0.00205230712890625, -0.00269317626953125, -0.00014495849609375, -1.9073486328125e-05, -5.53131103515625e-05, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.0002307891845703125, 0.0, -0.006607382092624903, -3.933906555175781e-06, -0.0001087188720703125, -6.762840270996094, -0.000827789306640625, -1.0424095392227173, -3.814697265625e-06, -0.30498600006103516, -1.52587890625e-05, -0.027271389961242676, -2.3841855067985307e-07], "choice_history": [96, 173, 358, 105, 152, "Healing", "Touch", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Healing", " ", "Touch", "<EOS>", "3", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Healing Touch", "_type": "Template14", "hole2": "DRUID", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 3}, {"hole2": [{"_type": "Str", "s": "character_attack"}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HealingTouch"}], "_type": "Module"}, "score": -8.160440348972315, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal('character_attack', self)\n"}, {"score_history": [-0.001720428466796875, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001506805419921875, -0.00016021728515625, -8.583032467868179e-06, -5.960462772236497e-07, -4.410734163684538e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.593647852540016e-05, -0.0003434419631958008, -2.1696090698242188e-05, -6.67572021484375e-05, -0.0012264251708984375, -0.00020599365234375, -8.344646857949556e-07, -5.91278076171875e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -1.43051022405416e-06, -1.1444091796875e-05, -0.0015659332275390625, 0.0, -0.00043487548828125, -1.9073486328125e-06, -7.05718994140625e-05, -3.814697265625e-05, -5.7220458984375e-06, -0.00043511390686035156, -1.9073486328125e-06, -0.00028228759765625, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.43865966796875e-05, -7.62939453125e-06, -0.0002614259719848633, -1.52587890625e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.002739548683166504, -1.9073486328125e-06, -0.00205230712890625, -0.00269317626953125, -0.00014495849609375, -1.9073486328125e-05, -5.53131103515625e-05, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.0002307891845703125, 0.0, -0.006607382092624903, -3.933906555175781e-06, -0.0001087188720703125, -5.660494804382324, -0.03601551055908203, -0.0002269744873046875, -5.7220458984375e-06, -1.3828277587890625e-05, 0.0, -0.03389239311218262, 0.0, -0.005634307861328125, -4.00543212890625e-05, -0.6560945510864258, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.7925941944122314, 0.0, -0.015016555786132812, 0.0, -0.31769859790802, -5.7220458984375e-06, -0.44054508209228516, -0.0017566680908203125, -0.000919342041015625, -0.0005168914794921875, -0.5283769965171814, -5.972218423266895e-05, -0.06377696990966797, -2.09808349609375e-05, -0.00029349327087402344, -2.0742272681673057e-05], "choice_history": [96, 173, 358, 105, 152, "Healing", "Touch", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Healing", " ", "Touch", "<EOS>", "3", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 72, 294, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 13, 143, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 47, 167, 0, 282, "x", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Healing Touch", "_type": "Template14", "hole2": "DRUID", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 3}, {"hole2": [{"hole2": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "heal"}, "_type": "Template57", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"body": {"value": true, "_type": "NameConstant"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "x"}}], "_type": "Template3", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HealingTouch"}], "_type": "Module"}, "score": -8.576130948030851, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(player.hero.heal()), \n            lambda x: True)\n"}, {"score_history": [-0.001720428466796875, -4.00543212890625e-05, -1.9073486328125e-06, -10.322360038757324, -2.51668643951416, -0.18791580200195312, -0.005134856794029474, -0.00017629499780014157, -0.0015016793040558696, 0.0, -0.4873533248901367, 0.0], "choice_history": [96, 173, 358, 127, 230, "Healing", "Touch", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>"], "model_output": {"body": [{"hole2": "ROGUE", "_type": "Template31", "hole1": 3, "hole0": "HealingTouch"}], "_type": "Module"}, "score": -13.522890826396178, "inferred_code": "super().__init__('HealingTouch', 3, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON)\n"}, {"score_history": [-0.001720428466796875, -4.00543212890625e-05, -1.9073486328125e-06, -10.322360038757324, -2.51668643951416, -0.18791580200195312, -0.005134856794029474, -0.00017629499780014157, -0.0015016793040558696, 0.0, -1.4722986221313477, -1.9073486328125e-06], "choice_history": [96, 173, 358, 127, 230, "Healing", "Touch", "<EOS>", "3", "<EOS>", "Hero", "<EOS>"], "model_output": {"body": [{"hole2": "Hero", "_type": "Template31", "hole1": 3, "hole0": "HealingTouch"}], "_type": "Module"}, "score": -14.507838030986022, "inferred_code": "super().__init__('HealingTouch', 3, CHARACTER_CLASS.Hero, CARD_RARITY.COMMON)\n"}, {"score_history": [-0.001720428466796875, -4.00543212890625e-05, -22.82842254638672], "choice_history": [96, 173, 357], "model_output": {"body": [], "_type": "Module"}, "score": -22.830183029174805, "inferred_code": ""}]}
{"index": 48, "beams": [{"score_history": [-2.6702880859375e-05, -0.030279159545898438, -0.010879598557949066, -1.3589857189799659e-05, -4.291522600397002e-06, -2.205371856689453e-05, -2.1457672119140625e-06, -8.392333984375e-05, -0.00052642822265625, -0.0073947906494140625, -3.24249267578125e-05, -1.9073486328125e-06, -0.004127688240259886, -2.98022641800344e-05, -9.775154467206448e-05, -5.7220458984375e-06, -0.000194549560546875, -1.1444091796875e-05, -0.000171661376953125, -6.198803021106869e-05, -1.71661376953125e-05, -0.0001125335693359375, -4.9591064453125e-05, -2.300739288330078e-05, -1.9073486328125e-06, -2.09808349609375e-05, -2.6702880859375e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0001163482666015625, -1.9073486328125e-06, -0.0031871795654296875, 0.0, -2.86102294921875e-05, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -4.6133995056152344e-05, -5.53131103515625e-05, -7.82012939453125e-05, -3.814697265625e-06, -0.0002422332763671875, -3.24249267578125e-05, -1.9073486328125e-06, -0.15481436252593994, -2.0265579223632812e-06, -0.0016832351684570312, -2.09808349609375e-05, -3.62396240234375e-05, 0.0, -1.33514404296875e-05, 0.0, -0.00022852420806884766, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0052149295806884766, 0.0, -0.005436897277832031, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -3.4570680327306036e-06, -4.649161837733118e-06, -0.028081893920898438, -0.00164794921875, -2.47955322265625e-05, -3.24249267578125e-05, -5.340576171875e-05, -5.7220458984375e-06, 0.0, -6.270408630371094e-05, -1.1444091796875e-05, -0.00022971630096435547, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.647804260253906e-05, -4.768370445162873e-07, -0.0019273757934570312, -8.0108642578125e-05, -7.62939453125e-06, -4.76837158203125e-05, -6.103515625e-05, -0.16188481450080872, -0.00015699861978646368, -0.008260726928710938, -0.0002536773681640625, -0.0008106231689453125, -3.24249267578125e-05, -0.0001201629638671875, 0.0, -0.0004138946533203125, 0.0, -0.03459739685058594, -6.866455078125e-05, -0.0019877662416547537, -3.266334533691406e-05, -0.0012264251708984375, -1.1920928244535389e-07, -0.011273376643657684, -2.384185791015625e-06, -0.008715559728443623, -1.1920928244535389e-07, -0.004731889348477125, -0.0053282976150512695, -0.00130462646484375, -0.0001773834228515625, -1.9073486328125e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.009701728820800781, 0.0, -0.032149314880371094, -0.0011053085327148438, -0.0001888275146484375, -1.9073486328125e-06, -0.014665603637695312, -1.52587890625e-05, -0.23065637052059174, -6.56840784358792e-05, -0.0008640289306640625, 0.0, -0.00029754638671875, -0.024747848510742188, -0.0009326934814453125, -0.0004972218885086477, -3.564357393770479e-05, -0.005982398986816406, -0.00069427490234375, -0.0004673004150390625, -0.0009899139404296875, -0.0003662109375, -0.06432723999023438, -1.9073486328125e-06, -0.011065234430134296, -7.62939453125e-06, -0.01678466796875, 0.0, -0.002033233642578125, 0.0, -0.14601561427116394, -0.002553110709413886, -0.004433631896972656, -0.000202178955078125, -0.0019626617431640625, 0.0, -0.002094268798828125, -1.9073486328125e-06, -0.0005773305892944336, 0.0, -0.030117154121398926, 0.0, -0.005731760524213314, 0.0, -0.00089263916015625, -0.000659942626953125, 0.0, -0.047186970710754395, 0.0], "choice_history": [97, 285, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hex", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 362, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "frog", "<EOS>", 36, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "frog", "<EOS>", "create_minion", "<EOS>", 346, 51, 176, "Null", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "minion", "<EOS>", "card", "<EOS>", 21, 174, "frog", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "minion", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "frog"}], "value": {"_type": "Template76", "hole1": "Frog", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "frog"}, "_type": "Attribute", "attr": "create_minion"}, "args": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "Assign"}, {"targets": [{"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "card"}], "value": {"_type": "Name", "id": "frog"}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "minion"}], "_type": "Template77", "hole1": "<UNK>", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "hole3": "use", "hole0": "Hex", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hex"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -1.1604116523106853, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"score_history": [-2.6702880859375e-05, -0.030279159545898438, -0.010879598557949066, -1.3589857189799659e-05, -4.291522600397002e-06, -2.205371856689453e-05, -2.1457672119140625e-06, -8.392333984375e-05, -0.00052642822265625, -0.0073947906494140625, -3.24249267578125e-05, -1.9073486328125e-06, -0.004127688240259886, -2.98022641800344e-05, -9.775154467206448e-05, -5.7220458984375e-06, -0.000194549560546875, -1.1444091796875e-05, -0.000171661376953125, -6.198803021106869e-05, -1.71661376953125e-05, -0.0001125335693359375, -4.9591064453125e-05, -2.300739288330078e-05, -1.9073486328125e-06, -2.09808349609375e-05, -2.6702880859375e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0001163482666015625, -1.9073486328125e-06, -0.0031871795654296875, 0.0, -2.86102294921875e-05, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -4.6133995056152344e-05, -5.53131103515625e-05, -7.82012939453125e-05, -3.814697265625e-06, -0.0002422332763671875, -3.24249267578125e-05, -1.9073486328125e-06, -0.15481436252593994, -2.0265579223632812e-06, -0.0016832351684570312, -2.09808349609375e-05, -3.62396240234375e-05, 0.0, -1.33514404296875e-05, 0.0, -0.00022852420806884766, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0052149295806884766, 0.0, -0.005436897277832031, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -3.4570680327306036e-06, -4.649161837733118e-06, -0.028081893920898438, -0.00164794921875, -2.47955322265625e-05, -3.24249267578125e-05, -5.340576171875e-05, -5.7220458984375e-06, 0.0, -6.270408630371094e-05, -1.1444091796875e-05, -0.00022971630096435547, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.647804260253906e-05, -4.768370445162873e-07, -0.0019273757934570312, -8.0108642578125e-05, -7.62939453125e-06, -4.76837158203125e-05, -6.103515625e-05, -0.16188481450080872, -0.00015699861978646368, -0.008260726928710938, -0.0002536773681640625, -0.0008106231689453125, -3.24249267578125e-05, -0.0001201629638671875, 0.0, -0.0004138946533203125, 0.0, -0.03459739685058594, -6.866455078125e-05, -0.0019877662416547537, -3.266334533691406e-05, -0.0012264251708984375, -1.1920928244535389e-07, -0.011273376643657684, -2.384185791015625e-06, -0.008715559728443623, -1.1920928244535389e-07, -0.004731889348477125, -0.0053282976150512695, -0.00130462646484375, -0.0001773834228515625, -1.9073486328125e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.009701728820800781, 0.0, -0.032149314880371094, -0.0011053085327148438, -0.0001888275146484375, -1.9073486328125e-06, -0.014665603637695312, -1.52587890625e-05, -2.6127848625183105, -0.00035392859717831016, -0.016158103942871094, 0.0, -0.0005397796630859375, -0.017183303833007812, -0.0006237030029296875, -0.00041365617653355, -2.0861609300482087e-05, -0.005367279052734375, -0.000579833984375, -0.000431060791015625, -0.001308441162109375, -0.0003376007080078125, -0.0747671127319336, -1.9073486328125e-06, -0.008815635927021503, -5.7220458984375e-06, -0.017519593238830566, 0.0, -0.0022449493408203125, 0.0, -0.14593441784381866, -0.0025958025362342596, -0.004500389099121094, -0.0001983642578125, -0.001953125, 0.0, -0.0020618438720703125, -1.9073486328125e-06, -0.0005658864974975586, 0.0, -0.029221653938293457, 0.0, -0.005794944707304239, 0.0, -0.0009021759033203125, -0.0006618499755859375, 0.0, -0.04735279083251953, 0.0], "choice_history": [97, 285, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hex", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 362, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "frog", "<EOS>", 36, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "justice", "<EOS>", "create_minion", "<EOS>", 346, 51, 176, "Null", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "minion", "<EOS>", "card", "<EOS>", 21, 174, "frog", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "minion", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "frog"}], "value": {"_type": "Template76", "hole1": "Frog", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "justice"}, "_type": "Attribute", "attr": "create_minion"}, "args": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "Assign"}, {"targets": [{"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "card"}], "value": {"_type": "Name", "id": "frog"}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "minion"}], "_type": "Template77", "hole1": "<UNK>", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "hole3": "use", "hole0": "Hex", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hex"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -3.5583679190134347, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = justice.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"score_history": [-2.6702880859375e-05, -0.030279159545898438, -0.010879598557949066, -1.3589857189799659e-05, -4.291522600397002e-06, -2.205371856689453e-05, -2.1457672119140625e-06, -8.392333984375e-05, -0.00052642822265625, -0.0073947906494140625, -3.24249267578125e-05, -1.9073486328125e-06, -0.004127688240259886, -2.98022641800344e-05, -9.775154467206448e-05, -5.7220458984375e-06, -0.000194549560546875, -1.1444091796875e-05, -0.000171661376953125, -6.198803021106869e-05, -1.71661376953125e-05, -0.0001125335693359375, -4.9591064453125e-05, -2.300739288330078e-05, -1.9073486328125e-06, -2.09808349609375e-05, -2.6702880859375e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0001163482666015625, -1.9073486328125e-06, -0.0031871795654296875, 0.0, -2.86102294921875e-05, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -4.6133995056152344e-05, -5.53131103515625e-05, -7.82012939453125e-05, -3.814697265625e-06, -0.0002422332763671875, -3.24249267578125e-05, -1.9073486328125e-06, -0.15481436252593994, -2.0265579223632812e-06, -0.0016832351684570312, -2.09808349609375e-05, -3.62396240234375e-05, 0.0, -1.33514404296875e-05, 0.0, -0.00022852420806884766, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0052149295806884766, 0.0, -0.005436897277832031, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -3.4570680327306036e-06, -4.649161837733118e-06, -0.028081893920898438, -0.00164794921875, -2.47955322265625e-05, -3.24249267578125e-05, -5.340576171875e-05, -5.7220458984375e-06, 0.0, -6.270408630371094e-05, -1.1444091796875e-05, -0.00022971630096435547, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.647804260253906e-05, -4.768370445162873e-07, -0.0019273757934570312, -8.0108642578125e-05, -7.62939453125e-06, -4.76837158203125e-05, -6.103515625e-05, -0.16188481450080872, -0.00015699861978646368, -0.008260726928710938, -0.0002536773681640625, -0.0008106231689453125, -3.24249267578125e-05, -0.0001201629638671875, 0.0, -0.0004138946533203125, 0.0, -0.03459739685058594, -6.866455078125e-05, -0.0019877662416547537, -3.266334533691406e-05, -0.0012264251708984375, -1.1920928244535389e-07, -0.011273376643657684, -2.384185791015625e-06, -0.008715559728443623, -1.1920928244535389e-07, -0.004731889348477125, -0.0053282976150512695, -0.00130462646484375, -0.0001773834228515625, -1.9073486328125e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.009701728820800781, 0.0, -0.032149314880371094, -0.0011053085327148438, -0.0001888275146484375, -1.9073486328125e-06, -0.014665603637695312, -1.52587890625e-05, -0.23065637052059174, -6.56840784358792e-05, -0.0008640289306640625, 0.0, -0.00029754638671875, -0.024747848510742188, -0.0009326934814453125, -0.0004972218885086477, -3.564357393770479e-05, -0.005982398986816406, -0.00069427490234375, -0.0004673004150390625, -0.0009899139404296875, -0.0003662109375, -0.06432723999023438, -1.9073486328125e-06, -0.011065234430134296, -7.62939453125e-06, -0.01678466796875, 0.0, -0.002033233642578125, 0.0, -0.14601561427116394, -0.002553110709413886, -0.004433631896972656, -0.000202178955078125, -0.0019626617431640625, 0.0, -0.002094268798828125, -1.9073486328125e-06, -0.0005773305892944336, 0.0, -0.030117154121398926, 0.0, -0.005731760524213314, 0.0, -0.00089263916015625, -0.000659942626953125, 0.0, -3.1687674522399902, 0.0], "choice_history": [97, 285, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hex", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 362, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "frog", "<EOS>", 36, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "frog", "<EOS>", "create_minion", "<EOS>", 346, 51, 176, "Null", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "minion", "<EOS>", "card", "<EOS>", 21, 174, "frog", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "player", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "frog"}], "value": {"_type": "Template76", "hole1": "Frog", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "frog"}, "_type": "Attribute", "attr": "create_minion"}, "args": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "Assign"}, {"targets": [{"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "card"}], "value": {"_type": "Name", "id": "frog"}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "player"}], "_type": "Template77", "hole1": "<UNK>", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "hole3": "use", "hole0": "Hex", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hex"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.281992133839921, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(player)\n"}, {"score_history": [-2.6702880859375e-05, -0.030279159545898438, -0.010879598557949066, -1.3589857189799659e-05, -4.291522600397002e-06, -2.205371856689453e-05, -2.1457672119140625e-06, -8.392333984375e-05, -0.00052642822265625, -0.0073947906494140625, -3.24249267578125e-05, -1.9073486328125e-06, -0.004127688240259886, -2.98022641800344e-05, -9.775154467206448e-05, -5.7220458984375e-06, -0.000194549560546875, -1.1444091796875e-05, -0.000171661376953125, -6.198803021106869e-05, -1.71661376953125e-05, -0.0001125335693359375, -4.9591064453125e-05, -2.300739288330078e-05, -1.9073486328125e-06, -2.09808349609375e-05, -2.6702880859375e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0001163482666015625, -1.9073486328125e-06, -0.0031871795654296875, 0.0, -2.86102294921875e-05, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -4.6133995056152344e-05, -5.53131103515625e-05, -7.82012939453125e-05, -3.814697265625e-06, -0.0002422332763671875, -3.24249267578125e-05, -1.9073486328125e-06, -0.15481436252593994, -2.0265579223632812e-06, -0.0016832351684570312, -2.09808349609375e-05, -3.62396240234375e-05, 0.0, -1.33514404296875e-05, 0.0, -0.00022852420806884766, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0052149295806884766, 0.0, -0.005436897277832031, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -3.4570680327306036e-06, -4.649161837733118e-06, -0.028081893920898438, -0.00164794921875, -2.47955322265625e-05, -3.24249267578125e-05, -5.340576171875e-05, -5.7220458984375e-06, 0.0, -6.270408630371094e-05, -1.1444091796875e-05, -0.00022971630096435547, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.647804260253906e-05, -4.768370445162873e-07, -0.0019273757934570312, -8.0108642578125e-05, -7.62939453125e-06, -4.76837158203125e-05, -6.103515625e-05, -0.16188481450080872, -0.00015699861978646368, -0.008260726928710938, -0.0002536773681640625, -0.0008106231689453125, -3.24249267578125e-05, -0.0001201629638671875, 0.0, -0.0004138946533203125, 0.0, -0.03459739685058594, -6.866455078125e-05, -0.0019877662416547537, -3.266334533691406e-05, -0.0012264251708984375, -1.1920928244535389e-07, -0.011273376643657684, -2.384185791015625e-06, -0.008715559728443623, -1.1920928244535389e-07, -0.004731889348477125, -0.0053282976150512695, -0.00130462646484375, -0.0001773834228515625, -1.9073486328125e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.009701728820800781, 0.0, -0.032149314880371094, -0.0011053085327148438, -0.0001888275146484375, -1.9073486328125e-06, -0.014665603637695312, -1.52587890625e-05, -0.23065637052059174, -6.56840784358792e-05, -0.0008640289306640625, 0.0, -0.00029754638671875, -0.024747848510742188, -0.0009326934814453125, -0.0004972218885086477, -3.564357393770479e-05, -0.005982398986816406, -0.00069427490234375, -0.0004673004150390625, -0.0009899139404296875, -0.0003662109375, -0.06432723999023438, -1.9073486328125e-06, -0.011065234430134296, -7.62939453125e-06, -0.01678466796875, 0.0, -0.002033233642578125, 0.0, -3.298701524734497, -0.0009998389286920428, -0.004868507385253906, -0.0002880096435546875, -0.0043277740478515625, 0.0, -0.0009860992431640625, 0.0, -0.00022351741790771484, 0.0, -0.027164578437805176, -1.1920928244535389e-07, -0.006592182908207178, 0.0, -0.00080108642578125, -0.0006256103515625, 0.0, -0.03957009315490723, 0.0], "choice_history": [97, 285, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hex", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 362, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "frog", "<EOS>", 36, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "frog", "<EOS>", "create_minion", "<EOS>", 346, 51, 176, "Null", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "minion", "<EOS>", "card", "<EOS>", 21, 174, "justice", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "minion", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "frog"}], "value": {"_type": "Template76", "hole1": "Frog", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "frog"}, "_type": "Attribute", "attr": "create_minion"}, "args": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "Assign"}, {"targets": [{"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "card"}], "value": {"_type": "Name", "id": "justice"}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "minion"}], "_type": "Template77", "hole1": "<UNK>", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "hole3": "use", "hole0": "Hex", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hex"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.303131422743128, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = justice\n        self.target.<UNK>(minion)\n"}, {"score_history": [-2.6702880859375e-05, -0.030279159545898438, -0.010879598557949066, -1.3589857189799659e-05, -4.291522600397002e-06, -2.205371856689453e-05, -2.1457672119140625e-06, -8.392333984375e-05, -0.00052642822265625, -0.0073947906494140625, -3.24249267578125e-05, -1.9073486328125e-06, -0.004127688240259886, -2.98022641800344e-05, -9.775154467206448e-05, -5.7220458984375e-06, -0.000194549560546875, -1.1444091796875e-05, -0.000171661376953125, -6.198803021106869e-05, -1.71661376953125e-05, -0.0001125335693359375, -4.9591064453125e-05, -2.300739288330078e-05, -1.9073486328125e-06, -2.09808349609375e-05, -2.6702880859375e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0001163482666015625, -1.9073486328125e-06, -0.0031871795654296875, 0.0, -2.86102294921875e-05, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -4.6133995056152344e-05, -5.53131103515625e-05, -7.82012939453125e-05, -3.814697265625e-06, -0.0002422332763671875, -3.24249267578125e-05, -1.9073486328125e-06, -0.15481436252593994, -2.0265579223632812e-06, -0.0016832351684570312, -2.09808349609375e-05, -3.62396240234375e-05, 0.0, -1.33514404296875e-05, 0.0, -0.00022852420806884766, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0052149295806884766, 0.0, -0.005436897277832031, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -3.4570680327306036e-06, -4.649161837733118e-06, -0.028081893920898438, -0.00164794921875, -2.47955322265625e-05, -3.24249267578125e-05, -5.340576171875e-05, -5.7220458984375e-06, 0.0, -6.270408630371094e-05, -1.1444091796875e-05, -0.00022971630096435547, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.647804260253906e-05, -4.768370445162873e-07, -0.0019273757934570312, -8.0108642578125e-05, -7.62939453125e-06, -4.76837158203125e-05, -6.103515625e-05, -3.761793613433838, -4.5180280721979216e-05, -0.049683570861816406, -0.0006170272827148438, -0.0022230148315429688, -1.33514404296875e-05, -0.000110626220703125, 0.0, -0.0005931854248046875, 0.0, -0.012166976928710938, -5.53131103515625e-05, -0.003586352802813053, -3.826618194580078e-05, -0.00086212158203125, -1.1920928244535389e-07, -0.021408790722489357, -2.384185791015625e-06, -0.009420350193977356, -1.1920928244535389e-07, -0.005473001394420862, -0.007977724075317383, -0.0010852813720703125, -0.0002117156982421875, -2.6702880859375e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.01060640811920166, 0.0, -0.034592628479003906, -0.001071929931640625, -0.000209808349609375, -1.9073486328125e-06, -0.015420913696289062, -1.52587890625e-05, -0.23002058267593384, -6.735301576554775e-05, -0.0008678436279296875, 0.0, -0.0002956390380859375, -0.025043487548828125, -0.00093841552734375, -0.0005124806775711477, -3.576277958927676e-05, -0.005889892578125, -0.0007171630859375, -0.000469207763671875, -0.0009613037109375, -0.0003833770751953125, -0.0657501220703125, -1.9073486328125e-06, -0.01127253845334053, -7.62939453125e-06, -0.01675701141357422, 0.0, -0.00205230712890625, 0.0, -0.14609703421592712, -0.002559650456532836, -0.004431724548339844, -0.000202178955078125, -0.001964569091796875, 0.0, -0.0020904541015625, -1.9073486328125e-06, -0.0005773305892944336, 0.0, -0.03000938892364502, 0.0, -0.005734859965741634, 0.0, -0.0008907318115234375, -0.000659942626953125, 0.0, -0.047171711921691895, 0.0], "choice_history": [97, 285, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hex", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 362, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "justice", "<EOS>", 36, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "frog", "<EOS>", "create_minion", "<EOS>", 346, 51, 176, "Null", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "minion", "<EOS>", "card", "<EOS>", 21, 174, "frog", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "minion", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "justice"}], "value": {"_type": "Template76", "hole1": "Frog", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "frog"}, "_type": "Attribute", "attr": "create_minion"}, "args": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "Assign"}, {"targets": [{"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "card"}], "value": {"_type": "Name", "id": "frog"}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "minion"}], "_type": "Template77", "hole1": "<UNK>", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "hole3": "use", "hole0": "Hex", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hex"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.801689474256236, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        justice = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"score_history": [-2.6702880859375e-05, -0.030279159545898438, -0.010879598557949066, -1.3589857189799659e-05, -4.291522600397002e-06, -2.205371856689453e-05, -2.1457672119140625e-06, -8.392333984375e-05, -0.00052642822265625, -0.0073947906494140625, -3.24249267578125e-05, -1.9073486328125e-06, -0.004127688240259886, -2.98022641800344e-05, -9.775154467206448e-05, -5.7220458984375e-06, -0.000194549560546875, -1.1444091796875e-05, -0.000171661376953125, -6.198803021106869e-05, -1.71661376953125e-05, -0.0001125335693359375, -4.9591064453125e-05, -2.300739288330078e-05, -1.9073486328125e-06, -2.09808349609375e-05, -2.6702880859375e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0001163482666015625, -1.9073486328125e-06, -0.0031871795654296875, 0.0, -2.86102294921875e-05, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -4.6133995056152344e-05, -5.53131103515625e-05, -7.82012939453125e-05, -3.814697265625e-06, -0.0002422332763671875, -3.24249267578125e-05, -1.9073486328125e-06, -0.15481436252593994, -2.0265579223632812e-06, -0.0016832351684570312, -2.09808349609375e-05, -3.62396240234375e-05, 0.0, -1.33514404296875e-05, 0.0, -0.00022852420806884766, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0052149295806884766, 0.0, -0.005436897277832031, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -3.4570680327306036e-06, -4.649161837733118e-06, -0.028081893920898438, -0.00164794921875, -2.47955322265625e-05, -3.24249267578125e-05, -5.340576171875e-05, -5.7220458984375e-06, 0.0, -6.270408630371094e-05, -1.1444091796875e-05, -0.00022971630096435547, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.647804260253906e-05, -4.768370445162873e-07, -0.0019273757934570312, -8.0108642578125e-05, -7.62939453125e-06, -4.76837158203125e-05, -6.103515625e-05, -3.793333053588867, -0.00010943412780761719, -0.08593463897705078, -0.00018310546875, -0.006627082824707031, -5.7220458984375e-06, -0.0002040863037109375, 0.0, -0.00904083251953125, 0.0, -0.001300811767578125, -2.6702880859375e-05, -0.0008422805112786591, -1.728534698486328e-05, -0.0011539459228515625, 0.0, -0.027270672842860222, -2.1457672119140625e-06, -0.014711813069880009, -1.1920928244535389e-07, -0.010595839470624924, -0.003034234046936035, -0.0005588531494140625, -0.000270843505859375, -2.09808349609375e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.009007453918457031, 0.0, -0.03785133361816406, -0.0007905960083007812, -0.00019073486328125, -3.814697265625e-06, -0.017564773559570312, -1.52587890625e-05, -0.2272758036851883, -6.628015398746356e-05, -0.0008296966552734375, 0.0, -0.0002918243408203125, -0.024727821350097656, -0.0009899139404296875, -0.0005128383054398, -3.564357393770479e-05, -0.005827903747558594, -0.00070953369140625, -0.000469207763671875, -0.0008716583251953125, -0.00034332275390625, -0.0671682357788086, -1.9073486328125e-06, -0.01130293682217598, -7.62939453125e-06, -0.016821861267089844, 0.0, -0.00203704833984375, 0.0, -0.14631780982017517, -0.0025428845547139645, -0.0044155120849609375, -0.000202178955078125, -0.001979827880859375, 0.0, -0.0020542144775390625, -1.9073486328125e-06, -0.0005639791488647461, 0.0, -0.029799580574035645, 0.0, -0.005762995220720768, 0.0, -0.00089263916015625, -0.00066375732421875, 0.0, -0.04702866077423096, 0.0], "choice_history": [97, 285, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hex", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 362, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "characters", "<EOS>", 36, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "frog", "<EOS>", "create_minion", "<EOS>", 346, 51, 176, "Null", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "minion", "<EOS>", "card", "<EOS>", 21, 174, "frog", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "minion", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "characters"}], "value": {"_type": "Template76", "hole1": "Frog", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "frog"}, "_type": "Attribute", "attr": "create_minion"}, "args": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "Assign"}, {"targets": [{"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "card"}], "value": {"_type": "Name", "id": "frog"}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "minion"}], "_type": "Template77", "hole1": "<UNK>", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "hole3": "use", "hole0": "Hex", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hex"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.8811391363873256, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        characters = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"score_history": [-2.6702880859375e-05, -0.030279159545898438, -0.010879598557949066, -1.3589857189799659e-05, -4.291522600397002e-06, -2.205371856689453e-05, -2.1457672119140625e-06, -8.392333984375e-05, -0.00052642822265625, -0.0073947906494140625, -3.24249267578125e-05, -1.9073486328125e-06, -0.004127688240259886, -2.98022641800344e-05, -9.775154467206448e-05, -5.7220458984375e-06, -0.000194549560546875, -1.1444091796875e-05, -0.000171661376953125, -6.198803021106869e-05, -1.71661376953125e-05, -0.0001125335693359375, -4.9591064453125e-05, -2.300739288330078e-05, -1.9073486328125e-06, -2.09808349609375e-05, -2.6702880859375e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0001163482666015625, -1.9073486328125e-06, -0.0031871795654296875, 0.0, -2.86102294921875e-05, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -4.6133995056152344e-05, -5.53131103515625e-05, -7.82012939453125e-05, -3.814697265625e-06, -0.0002422332763671875, -3.24249267578125e-05, -1.9073486328125e-06, -0.15481436252593994, -2.0265579223632812e-06, -0.0016832351684570312, -2.09808349609375e-05, -3.62396240234375e-05, 0.0, -1.33514404296875e-05, 0.0, -0.00022852420806884766, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0052149295806884766, 0.0, -0.005436897277832031, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -3.4570680327306036e-06, -4.649161837733118e-06, -0.028081893920898438, -0.00164794921875, -2.47955322265625e-05, -3.24249267578125e-05, -5.340576171875e-05, -5.7220458984375e-06, 0.0, -6.270408630371094e-05, -1.1444091796875e-05, -0.00022971630096435547, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.647804260253906e-05, -4.768370445162873e-07, -0.0019273757934570312, -8.0108642578125e-05, -7.62939453125e-06, -4.76837158203125e-05, -6.103515625e-05, -0.16188481450080872, -0.00015699861978646368, -0.008260726928710938, -0.0002536773681640625, -0.0008106231689453125, -3.24249267578125e-05, -0.0001201629638671875, 0.0, -0.0004138946533203125, 0.0, -0.03459739685058594, -6.866455078125e-05, -0.0019877662416547537, -3.266334533691406e-05, -0.0012264251708984375, -1.1920928244535389e-07, -0.011273376643657684, -2.384185791015625e-06, -0.008715559728443623, -1.1920928244535389e-07, -0.004731889348477125, -0.0053282976150512695, -0.00130462646484375, -0.0001773834228515625, -1.9073486328125e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.009701728820800781, 0.0, -0.032149314880371094, -0.0011053085327148438, -0.0001888275146484375, -1.9073486328125e-06, -0.014665603637695312, -1.52587890625e-05, -0.23065637052059174, -6.56840784358792e-05, -0.0008640289306640625, 0.0, -0.00029754638671875, -0.024747848510742188, -0.0009326934814453125, -0.0004972218885086477, -3.564357393770479e-05, -0.005982398986816406, -0.00069427490234375, -0.0004673004150390625, -0.0009899139404296875, -0.0003662109375, -3.071108818054199, -0.024880409240722656, -0.006270408630371094, -1.9073486328125e-06, -0.023366928100585938, -9.5367431640625e-06, -0.0038721561431884766, 0.0, -0.07310748100280762, 0.0, -0.04671192169189453, -0.0015773773193359375, -0.051674842834472656, -0.0014400482177734375, -0.0014476776123046875, -0.0006351470947265625, -2.47955322265625e-05, -0.00127609190531075, -7.62939453125e-06, -0.0005435943603515625, 0.0, -0.04336261749267578, 0.0, -0.0011574029922485352, -1.1920928244535389e-07, -0.039127349853515625, -1.52587890625e-05, -0.6616907119750977, -7.62939453125e-06, -0.09301567077636719, 0.0, -0.003369423560798168, -0.00020289230451453477, -0.00048089027404785156, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -5.292891728458926e-05, -3.6954811548639555e-06], "choice_history": [97, 285, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hex", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 362, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "frog", "<EOS>", 36, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "frog", "<EOS>", "create_minion", "<EOS>", 346, 51, 176, "Null", "<EOS>", 102, 142, 346, 42, 143, 24, 185, 13, 143, 21, 174, "player", "<EOS>", "hand", "<EOS>", 100, 164, 41, 331, 139, 23, 179, "1", "<EOS>", "player", "<EOS>", 21, 174, "player", "<EOS>", 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "frog"}], "value": {"_type": "Template76", "hole1": "Frog", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "frog"}, "_type": "Attribute", "attr": "create_minion"}, "args": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "Assign"}, {"targets": [{"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hand"}, "slice": {"value": {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}, "_type": "Index"}, "_type": "Subscript"}, "_type": "Attribute", "attr": "player"}], "value": {"_type": "Name", "id": "player"}, "_type": "Assign"}, {"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}], "hole3": "use", "hole0": "Hex", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hex"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.974211771582169, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        player.hand[-1].player = player\n        super().use(player, game)\n"}, {"score_history": [-2.6702880859375e-05, -0.030279159545898438, -0.010879598557949066, -1.3589857189799659e-05, -4.291522600397002e-06, -2.205371856689453e-05, -2.1457672119140625e-06, -8.392333984375e-05, -0.00052642822265625, -0.0073947906494140625, -3.24249267578125e-05, -1.9073486328125e-06, -0.004127688240259886, -2.98022641800344e-05, -9.775154467206448e-05, -5.7220458984375e-06, -0.000194549560546875, -1.1444091796875e-05, -0.000171661376953125, -6.198803021106869e-05, -1.71661376953125e-05, -0.0001125335693359375, -4.9591064453125e-05, -2.300739288330078e-05, -1.9073486328125e-06, -2.09808349609375e-05, -2.6702880859375e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0001163482666015625, -1.9073486328125e-06, -0.0031871795654296875, 0.0, -2.86102294921875e-05, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -4.6133995056152344e-05, -5.53131103515625e-05, -7.82012939453125e-05, -3.814697265625e-06, -0.0002422332763671875, -3.24249267578125e-05, -1.9073486328125e-06, -2.51878023147583, -8.058547973632812e-05, -0.02300548553466797, -0.00026702880859375, -0.06923866271972656, -0.0008220672607421875, -0.0041010379791259766, -0.0004291534423828125, -4.0531158447265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.00011444091796875, -7.390960945485858e-06, -4.7087669372558594e-05, -1.346339225769043, -0.0028247833251953125, -0.000133514404296875, -6.67572021484375e-05, -0.0001201629638671875, -9.5367431640625e-06, 0.0, -2.3245689590112306e-05, -3.814697265625e-06, -9.155271982308477e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.3020973205566406e-05, -3.576278118089249e-07, -0.00270843505859375, -3.814697265625e-05, -1.52587890625e-05, -2.288818359375e-05, -7.43865966796875e-05, -0.2605125606060028, -0.00017964838480111212, -0.025396347045898438, -0.0003223419189453125, -0.001003265380859375, -1.71661376953125e-05, -0.000110626220703125, 0.0, -0.00092315673828125, 0.0, -0.018184661865234375, -7.62939453125e-05, -0.002025232184678316, -2.6702880859375e-05, -0.00150299072265625, 0.0, -0.00814640149474144, -2.2649765014648438e-06, -0.0075904917903244495, -1.1920928244535389e-07, -0.005036419723182917, -0.0034224987030029297, -0.0014209747314453125, -0.0002918243408203125, -2.6702880859375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.008863209746778011, 0.0, -0.03551006317138672, -0.00098419189453125, -0.0001811981201171875, -1.9073486328125e-06, -0.014263153076171875, -1.52587890625e-05, -0.23003233969211578, -6.198862683959305e-05, -0.0008678436279296875, 0.0, -0.0003032684326171875, -0.023965835571289062, -0.0009517669677734375, -0.0004951953305862844, -3.564357393770479e-05, -0.0428466796875, -0.000431060791015625, -0.0005645751953125, -0.001377105712890625, -0.0004482269287109375, -0.07113075256347656, -1.9073486328125e-06, -0.012187945656478405, -7.62939453125e-06, -0.016835451126098633, 0.0, -0.0018558502197265625, 0.0, -0.1496855765581131, -0.0027825760189443827, -0.004886627197265625, -0.00023651123046875, -0.0052928924560546875, 0.0, -0.0017852783203125, -1.9073486328125e-06, -0.0007538795471191406, 0.0, -0.030440449714660645, 0.0, -0.005843589548021555, 0.0, -0.0009479522705078125, -0.0006237030029296875, 0.0, -0.04858291149139404, 0.0], "choice_history": [97, 285, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hex", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "overload", "<EOS>", 23, 179, "Taunt", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 362, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "frog", "<EOS>", 36, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "frog", "<EOS>", "create_minion", "<EOS>", 346, 51, 176, "Null", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "minion", "<EOS>", "card", "<EOS>", 21, 174, "frog", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "minion", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "frog"}], "value": {"_type": "Template76", "hole1": "Frog", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "frog"}, "_type": "Attribute", "attr": "create_minion"}, "args": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "Assign"}, {"targets": [{"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "card"}], "value": {"_type": "Name", "id": "frog"}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "minion"}], "_type": "Template77", "hole1": "<UNK>", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "hole3": "use", "hole0": "Hex", "_type": "Template5", "hole2": [{"hole3": [{"value": {"n": 0, "_type": "Num"}, "_type": "keyword", "arg": "overload"}], "hole2": [{"_type": "Str", "s": "Hex"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.07981195512405, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            overload=0)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"score_history": [-2.6702880859375e-05, -0.030279159545898438, -0.010879598557949066, -1.3589857189799659e-05, -4.291522600397002e-06, -2.205371856689453e-05, -2.1457672119140625e-06, -8.392333984375e-05, -0.00052642822265625, -0.0073947906494140625, -3.24249267578125e-05, -1.9073486328125e-06, -0.004127688240259886, -2.98022641800344e-05, -9.775154467206448e-05, -5.7220458984375e-06, -0.000194549560546875, -1.1444091796875e-05, -0.000171661376953125, -6.198803021106869e-05, -1.71661376953125e-05, -0.0001125335693359375, -4.9591064453125e-05, -2.300739288330078e-05, -1.9073486328125e-06, -2.09808349609375e-05, -2.6702880859375e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0001163482666015625, -1.9073486328125e-06, -0.0031871795654296875, 0.0, -2.86102294921875e-05, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -4.6133995056152344e-05, -5.53131103515625e-05, -7.82012939453125e-05, -3.814697265625e-06, -0.0002422332763671875, -3.24249267578125e-05, -1.9073486328125e-06, -0.15481436252593994, -2.0265579223632812e-06, -0.0016832351684570312, -2.09808349609375e-05, -3.62396240234375e-05, 0.0, -1.33514404296875e-05, 0.0, -0.00022852420806884766, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0052149295806884766, 0.0, -0.005436897277832031, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -3.4570680327306036e-06, -4.649161837733118e-06, -0.028081893920898438, -0.00164794921875, -2.47955322265625e-05, -3.24249267578125e-05, -5.340576171875e-05, -5.7220458984375e-06, 0.0, -6.270408630371094e-05, -1.1444091796875e-05, -0.00022971630096435547, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.647804260253906e-05, -4.768370445162873e-07, -0.0019273757934570312, -8.0108642578125e-05, -7.62939453125e-06, -4.76837158203125e-05, -6.103515625e-05, -0.16188481450080872, -0.00015699861978646368, -0.008260726928710938, -0.0002536773681640625, -0.0008106231689453125, -3.24249267578125e-05, -0.0001201629638671875, 0.0, -0.0004138946533203125, 0.0, -3.3929624557495117, 0.0, -0.0004711151123046875, -7.05718994140625e-05, -0.001835090690292418, -6.878376007080078e-05, -0.0018358230590820312, -7.62939453125e-06, -0.00414276123046875, -4.0531158447265625e-06, -0.2877337634563446, -1.1920928244535389e-07, -0.595355749130249, 0.0, -0.005098354071378708, -0.004479646682739258, -0.0015087127685546875, -0.0003376007080078125, -5.7220458984375e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.008256196044385433, 0.0, -0.027022361755371094, -0.0008077621459960938, -0.000171661376953125, -3.814697265625e-06, -0.017858505249023438, -1.52587890625e-05, -0.23018448054790497, -6.47304259473458e-05, -0.0008106231689453125, 0.0, -0.00026702880859375, -0.02575397491455078, -0.0009765625, -0.0005152224912308156, -3.564357393770479e-05, -0.005833625793457031, -0.000720977783203125, -0.0004711151123046875, -0.0009288787841796875, -0.00032806396484375, -0.06651496887207031, -1.9073486328125e-06, -0.011081923730671406, -7.62939453125e-06, -0.01672828197479248, 0.0, -0.0019931793212890625, 0.0, -0.14631685614585876, -0.002555731451138854, -0.004426002502441406, -0.000202178955078125, -0.0019664764404296875, 0.0, -0.00208282470703125, -1.9073486328125e-06, -0.0005668401718139648, 0.0, -0.029970288276672363, 0.0, -0.005742371082305908, 0.0, -0.00089263916015625, -0.0006618499755859375, 0.0, -0.04716598987579346, 0.0], "choice_history": [97, 285, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hex", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 362, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "frog", "<EOS>", 36, 317, 13, 143, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "frog", "<EOS>", "create_minion", "<EOS>", 346, 51, 176, "Null", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "minion", "<EOS>", "card", "<EOS>", 21, 174, "frog", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "minion", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "frog"}], "value": {"_type": "Template76", "hole1": "Frog", "hole0": {"value": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "frog"}, "_type": "Attribute", "attr": "create_minion"}, "args": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "Assign"}, {"targets": [{"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "card"}], "value": {"_type": "Name", "id": "frog"}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "minion"}], "_type": "Template77", "hole1": "<UNK>", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "hole3": "use", "hole0": "Hex", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hex"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.3857513363858445, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"score_history": [-2.6702880859375e-05, -0.030279159545898438, -0.010879598557949066, -1.3589857189799659e-05, -4.291522600397002e-06, -2.205371856689453e-05, -2.1457672119140625e-06, -8.392333984375e-05, -0.00052642822265625, -0.0073947906494140625, -3.24249267578125e-05, -1.9073486328125e-06, -0.004127688240259886, -2.98022641800344e-05, -9.775154467206448e-05, -5.7220458984375e-06, -0.000194549560546875, -1.1444091796875e-05, -0.000171661376953125, -6.198803021106869e-05, -1.71661376953125e-05, -0.0001125335693359375, -4.9591064453125e-05, -2.300739288330078e-05, -1.9073486328125e-06, -2.09808349609375e-05, -2.6702880859375e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0001163482666015625, -1.9073486328125e-06, -0.0031871795654296875, 0.0, -2.86102294921875e-05, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -4.6133995056152344e-05, -5.53131103515625e-05, -7.82012939453125e-05, -3.814697265625e-06, -0.0002422332763671875, -3.24249267578125e-05, -1.9073486328125e-06, -0.15481436252593994, -2.0265579223632812e-06, -0.0016832351684570312, -2.09808349609375e-05, -3.62396240234375e-05, 0.0, -1.33514404296875e-05, 0.0, -0.00022852420806884766, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0052149295806884766, 0.0, -0.005436897277832031, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -3.4570680327306036e-06, -4.649161837733118e-06, -0.028081893920898438, -0.00164794921875, -2.47955322265625e-05, -3.24249267578125e-05, -5.340576171875e-05, -5.7220458984375e-06, 0.0, -6.270408630371094e-05, -1.1444091796875e-05, -0.00022971630096435547, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.647804260253906e-05, -4.768370445162873e-07, -0.0019273757934570312, -8.0108642578125e-05, -7.62939453125e-06, -4.76837158203125e-05, -6.103515625e-05, -0.16188481450080872, -0.00015699861978646368, -0.008260726928710938, -0.0002536773681640625, -0.0008106231689453125, -3.24249267578125e-05, -0.0001201629638671875, 0.0, -0.0004138946533203125, 0.0, -0.03459739685058594, -6.866455078125e-05, -0.0019877662416547537, -3.266334533691406e-05, -0.0012264251708984375, -1.1920928244535389e-07, -0.011273376643657684, -2.384185791015625e-06, -0.008715559728443623, -1.1920928244535389e-07, -0.004731889348477125, -0.0053282976150512695, -0.00130462646484375, -0.0001773834228515625, -1.9073486328125e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.009701728820800781, 0.0, -0.032149314880371094, -0.0011053085327148438, -0.0001888275146484375, -1.9073486328125e-06, -0.014665603637695312, -1.52587890625e-05, -0.23065637052059174, -6.56840784358792e-05, -0.0008640289306640625, 0.0, -0.00029754638671875, -0.024747848510742188, -0.0009326934814453125, -0.0004972218885086477, -3.564357393770479e-05, -0.005982398986816406, -0.00069427490234375, -0.0004673004150390625, -0.0009899139404296875, -0.0003662109375, -3.071108818054199, -0.024880409240722656, -0.006270408630371094, -1.9073486328125e-06, -0.023366928100585938, -9.5367431640625e-06, -0.0038721561431884766, 0.0, -0.07310748100280762, 0.0, -0.04671192169189453, -0.0015773773193359375, -0.051674842834472656, -0.0014400482177734375, -0.0014476776123046875, -0.0006351470947265625, -2.47955322265625e-05, -0.00127609190531075, -7.62939453125e-06, -0.0005435943603515625, 0.0, -0.04336261749267578, 0.0, -0.0011574029922485352, -1.1920928244535389e-07, -0.039127349853515625, -1.52587890625e-05, -0.7305574417114258, -1.71661376953125e-05, -0.47498416900634766, -5.7220458984375e-06, -0.034966349601745605, -1.1920928244535389e-07, -0.017513632774353027, -7.62939453125e-06], "choice_history": [97, 285, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hex", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 362, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "frog", "<EOS>", 36, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "frog", "<EOS>", "create_minion", "<EOS>", 346, 51, 176, "Null", "<EOS>", 102, 142, 346, 42, 143, 24, 185, 13, 143, 21, 174, "player", "<EOS>", "hand", "<EOS>", 100, 164, 41, 331, 139, 23, 179, "1", "<EOS>", "player", "<EOS>", 21, 174, "player", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "frog"}], "value": {"_type": "Template76", "hole1": "Frog", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "frog"}, "_type": "Attribute", "attr": "create_minion"}, "args": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "Assign"}, {"targets": [{"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hand"}, "slice": {"value": {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}, "_type": "Index"}, "_type": "Subscript"}, "_type": "Attribute", "attr": "player"}], "value": {"_type": "Name", "id": "player"}, "_type": "Assign"}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "Hex", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hex"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.473434317524465, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        player.hand[-1].player = player\n        player.draw()\n"}, {"score_history": [-2.6702880859375e-05, -3.5202531814575195, -0.0017417455092072487, -0.00037222690298222005, -9.178878826787695e-06, -0.00017273426055908203, -5.245203283266164e-06, -9.34600830078125e-05, -0.0077266693115234375, -8.58306884765625e-05, -1.811981201171875e-05, -1.9073486328125e-06, -3.576278118089249e-07, 0.0, -0.0011138916015625, 0.0, -0.0011577606201171875, 0.0, -0.01995861530303955, -7.62939453125e-06, -3.4332275390625e-05, 0.0, -2.288818359375e-05, -3.0517578125e-05, -3.3378591979271732e-06, -2.4199485778808594e-05, -0.20743083953857422, -0.0001850128173828125, -1.52587890625e-05, -1.33514404296875e-05, -2.47955322265625e-05, -9.5367431640625e-06, 0.0, -9.011942165670916e-05, -1.71661376953125e-05, -0.00011992447980446741, -3.814697265625e-06, -2.384185791015625e-06, 0.0, -2.360343569307588e-05, -7.152555099310121e-07, -0.08508872985839844, -0.0005702972412109375, -0.0004444122314453125, -6.29425048828125e-05, -0.004581622313708067, -3.933906555175781e-06, -0.1536273956298828, -8.0108642578125e-05, -0.03869438171386719, -1.9073486328125e-06, -0.009958415292203426, 0.0, -0.000164031982421875, -3.0517578125e-05, 0.0, -0.0012841250281780958, -0.0001239776611328125, -0.0001678466796875, -2.288818359375e-05, -0.1452743411064148, -8.344650268554688e-06, -0.021114349365234375, -0.011278152465820312, -0.0003452301025390625, -0.0002765655517578125, -2.288818359375e-05, -0.040509987622499466, -0.2528306841850281, -0.4477612376213074, -0.22692668437957764, -2.09808349609375e-05, -0.000244140625, -0.00307464599609375, -1.9073486328125e-06, -0.0010318744461983442, -2.3841855067985307e-07, -0.0025463104248046875, 0.0, -0.00010013580322265625, 0.0, -0.0004596710205078125, -1.9073486328125e-05, -6.67572021484375e-05, -1.9073486328125e-06, -0.0036757849156856537, -2.4795515855657868e-05, -0.0001220703125, -0.0005092620849609375, -1.1444091796875e-05, -4.57763671875e-05, 0.0, -0.0001139637824962847, 0.0, -0.005921483039855957, -4.57763671875e-05, -0.000133514404296875, -0.0002727508544921875, -2.86102294921875e-05, -0.0005120038986206055, 0.0, -0.01669788360595703, -0.000545501708984375, -6.29425048828125e-05, -0.0003376007080078125, -0.0002002716064453125, -5.8887766499537975e-05, -7.62939453125e-06, -0.00011431850725784898, -1.8358061424805783e-05, -3.814697265625e-06, -0.00012993562268093228, -7.748596544843167e-06, -9.5367431640625e-05, -0.07931995391845703, -5.91278076171875e-05, -0.11121940612792969, -0.0008907318115234375, -0.004078865051269531, -0.015625, -0.0006628036499023438, -0.000396728515625, -0.0001277923583984375, -1.9073486328125e-06, -0.0015125864883884788, -0.00018346295109950006, -0.006003975868225098, -1.1920928244535389e-07, -1.442432312614983e-05, 0.0, -2.3603439331054688e-05, -1.1920928244535389e-07, -0.030267715454101562, -0.0004520416259765625, -0.0001926422119140625, -6.866455078125e-05, -0.0006389617919921875, 0.0, -0.0005480311228893697, -0.0001842839119490236, -7.62939453125e-06, -7.05718994140625e-05, -3.814697265625e-06, -0.0071468353271484375, 0.0, -0.00012946120114065707, 0.0, -0.00022518634796142578, -5.7220458984375e-06, -4.9591064453125e-05, -0.000148773193359375, -8.96453857421875e-05, -6.4849853515625e-05, -2.47955322265625e-05, -0.0006110668182373047, -1.1444091796875e-05], "choice_history": [97, 286, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Hex", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "3", "<EOS>", 358, 136, 318, 38, 325, "0/1", "Frog", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "i"}, "body": [{"hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}], "_type": "Template77", "hole1": "summon", "hole0": {"_type": "Template79", "hole0": "0/1Frog"}}], "_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"n": 0, "_type": "Num"}, {"n": 3, "_type": "Num"}]}}], "hole3": "use", "hole0": "Hex", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "SHAMAN", "_type": "Template34", "hole1": 3, "hole0": "Hex"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 7, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.500380528402857, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 3):\n            0/1Frog().summon(player, game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score_history": [-2.6702880859375e-05, -0.030279159545898438, -0.010879598557949066, -1.3589857189799659e-05, -4.291522600397002e-06, -2.205371856689453e-05, -2.1457672119140625e-06, -8.392333984375e-05, -0.00052642822265625, -0.0073947906494140625, -3.24249267578125e-05, -1.9073486328125e-06, -0.004127688240259886, -2.98022641800344e-05, -9.775154467206448e-05, -5.7220458984375e-06, -0.000194549560546875, -1.1444091796875e-05, -0.000171661376953125, -6.198803021106869e-05, -1.71661376953125e-05, -0.0001125335693359375, -4.9591064453125e-05, -2.300739288330078e-05, -1.9073486328125e-06, -2.09808349609375e-05, -2.6702880859375e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0001163482666015625, -1.9073486328125e-06, -0.0031871795654296875, 0.0, -2.86102294921875e-05, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -4.6133995056152344e-05, -5.53131103515625e-05, -7.82012939453125e-05, -3.814697265625e-06, -0.0002422332763671875, -3.24249267578125e-05, -1.9073486328125e-06, -0.15481436252593994, -2.0265579223632812e-06, -0.0016832351684570312, -2.09808349609375e-05, -3.62396240234375e-05, 0.0, -1.33514404296875e-05, 0.0, -0.00022852420806884766, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0052149295806884766, 0.0, -0.005436897277832031, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -3.4570680327306036e-06, -4.649161837733118e-06, -0.028081893920898438, -0.00164794921875, -2.47955322265625e-05, -3.24249267578125e-05, -5.340576171875e-05, -5.7220458984375e-06, 0.0, -6.270408630371094e-05, -1.1444091796875e-05, -0.00022971630096435547, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.647804260253906e-05, -4.768370445162873e-07, -0.0019273757934570312, -8.0108642578125e-05, -7.62939453125e-06, -4.76837158203125e-05, -6.103515625e-05, -0.16188481450080872, -0.00015699861978646368, -0.008260726928710938, -0.0002536773681640625, -0.0008106231689453125, -3.24249267578125e-05, -0.0001201629638671875, 0.0, -0.0004138946533203125, 0.0, -0.03459739685058594, -6.866455078125e-05, -0.0019877662416547537, -3.266334533691406e-05, -0.0012264251708984375, -1.1920928244535389e-07, -0.011273376643657684, -2.384185791015625e-06, -0.008715559728443623, -1.1920928244535389e-07, -0.004731889348477125, -0.0053282976150512695, -0.00130462646484375, -0.0001773834228515625, -1.9073486328125e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.009701728820800781, 0.0, -0.032149314880371094, -0.0011053085327148438, -0.0001888275146484375, -1.9073486328125e-06, -0.014665603637695312, -1.52587890625e-05, -0.23065637052059174, -6.56840784358792e-05, -0.0008640289306640625, 0.0, -0.00029754638671875, -0.024747848510742188, -0.0009326934814453125, -0.0004972218885086477, -3.564357393770479e-05, -0.005982398986816406, -0.00069427490234375, -0.0004673004150390625, -0.0009899139404296875, -0.0003662109375, -0.06432723999023438, -1.9073486328125e-06, -0.011065234430134296, -7.62939453125e-06, -0.01678466796875, 0.0, -0.002033233642578125, 0.0, -4.659643650054932, -6.6756979322235566e-06, -0.006129264831542969, -0.0006999969482421875, -0.0003871917724609375, 0.0, -0.00164794921875, -1.9073486328125e-06, -0.00021386146545410156, 0.0, -0.10585510730743408, 0.0, -0.010166797786951065, 0.0, -0.000553131103515625, -0.000728607177734375, 0.0, -0.03765058517456055, 0.0], "choice_history": [97, 285, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hex", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 362, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "frog", "<EOS>", 36, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "frog", "<EOS>", "create_minion", "<EOS>", 346, 51, 176, "Null", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "minion", "<EOS>", "card", "<EOS>", 21, 174, "<UNK>", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "minion", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "frog"}], "value": {"_type": "Template76", "hole1": "Frog", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "frog"}, "_type": "Attribute", "attr": "create_minion"}, "args": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "Assign"}, {"targets": [{"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "card"}], "value": {"_type": "Name", "id": "<UNK>"}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "minion"}], "_type": "Template77", "hole1": "<UNK>", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "hole3": "use", "hole0": "Hex", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hex"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.741667206742804, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = <UNK>\n        self.target.<UNK>(minion)\n"}, {"score_history": [-2.6702880859375e-05, -0.030279159545898438, -0.010879598557949066, -1.3589857189799659e-05, -4.291522600397002e-06, -2.205371856689453e-05, -2.1457672119140625e-06, -8.392333984375e-05, -0.00052642822265625, -0.0073947906494140625, -3.24249267578125e-05, -1.9073486328125e-06, -0.004127688240259886, -2.98022641800344e-05, -9.775154467206448e-05, -5.7220458984375e-06, -0.000194549560546875, -1.1444091796875e-05, -0.000171661376953125, -6.198803021106869e-05, -1.71661376953125e-05, -0.0001125335693359375, -4.9591064453125e-05, -2.300739288330078e-05, -1.9073486328125e-06, -2.09808349609375e-05, -2.6702880859375e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0001163482666015625, -1.9073486328125e-06, -0.0031871795654296875, 0.0, -2.86102294921875e-05, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -4.6133995056152344e-05, -5.53131103515625e-05, -7.82012939453125e-05, -3.814697265625e-06, -0.0002422332763671875, -3.24249267578125e-05, -1.9073486328125e-06, -0.15481436252593994, -2.0265579223632812e-06, -0.0016832351684570312, -2.09808349609375e-05, -3.62396240234375e-05, 0.0, -1.33514404296875e-05, 0.0, -0.00022852420806884766, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0052149295806884766, 0.0, -0.005436897277832031, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -3.4570680327306036e-06, -4.649161837733118e-06, -0.028081893920898438, -0.00164794921875, -2.47955322265625e-05, -3.24249267578125e-05, -5.340576171875e-05, -5.7220458984375e-06, 0.0, -6.270408630371094e-05, -1.1444091796875e-05, -0.00022971630096435547, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.647804260253906e-05, -4.768370445162873e-07, -0.0019273757934570312, -8.0108642578125e-05, -7.62939453125e-06, -4.76837158203125e-05, -6.103515625e-05, -0.16188481450080872, -0.00015699861978646368, -0.008260726928710938, -0.0002536773681640625, -0.0008106231689453125, -3.24249267578125e-05, -0.0001201629638671875, 0.0, -0.0004138946533203125, 0.0, -0.03459739685058594, -6.866455078125e-05, -0.0019877662416547537, -3.266334533691406e-05, -0.0012264251708984375, -1.1920928244535389e-07, -0.011273376643657684, -2.384185791015625e-06, -0.008715559728443623, -1.1920928244535389e-07, -0.004731889348477125, -0.0053282976150512695, -0.00130462646484375, -0.0001773834228515625, -1.9073486328125e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.009701728820800781, 0.0, -0.032149314880371094, -0.0011053085327148438, -0.0001888275146484375, -1.9073486328125e-06, -0.014665603637695312, -1.52587890625e-05, -0.23065637052059174, -6.56840784358792e-05, -0.0008640289306640625, 0.0, -0.00029754638671875, -0.024747848510742188, -0.0009326934814453125, -0.0004972218885086477, -3.564357393770479e-05, -0.005982398986816406, -0.00069427490234375, -0.0004673004150390625, -0.0009899139404296875, -0.0003662109375, -0.06432723999023438, -1.9073486328125e-06, -0.011065234430134296, -7.62939453125e-06, -0.01678466796875, 0.0, -0.002033233642578125, 0.0, -4.370279312133789, -0.0003852527297567576, -0.35266685485839844, -8.58306884765625e-05, -0.06331443786621094, 0.0, -0.000957489013671875, -1.9073486328125e-06, -0.00010538101196289062, 0.0, -0.014039158821105957, 0.0, -0.012920132838189602, 0.0, -0.001056671142578125, -0.0008392333984375, 0.0, -0.034343719482421875, 0.0], "choice_history": [97, 285, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hex", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 362, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "frog", "<EOS>", 36, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "frog", "<EOS>", "create_minion", "<EOS>", 346, 51, 176, "Null", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "minion", "<EOS>", "card", "<EOS>", 21, 174, "characters", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "minion", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "frog"}], "value": {"_type": "Template76", "hole1": "Frog", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "frog"}, "_type": "Attribute", "attr": "create_minion"}, "args": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "Assign"}, {"targets": [{"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "card"}], "value": {"_type": "Name", "id": "characters"}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "minion"}], "_type": "Template77", "hole1": "<UNK>", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "hole3": "use", "hole0": "Hex", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hex"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.768977862188294, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = characters\n        self.target.<UNK>(minion)\n"}, {"score_history": [-2.6702880859375e-05, -0.030279159545898438, -4.634120941162109, -1.3589857189799659e-05, -4.291522600397002e-06, -2.205371856689453e-05, -2.1457672119140625e-06, -8.392333984375e-05, -0.00052642822265625, -0.0073947906494140625, -3.24249267578125e-05, -1.9073486328125e-06, -0.004127688240259886, -2.98022641800344e-05, -9.775154467206448e-05, -5.7220458984375e-06, -0.000194549560546875, -1.1444091796875e-05, -0.000171661376953125, -6.198803021106869e-05, -1.71661376953125e-05, -0.0001125335693359375, -4.9591064453125e-05, -2.300739288330078e-05, -1.9073486328125e-06, -2.09808349609375e-05, -2.6702880859375e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0001163482666015625, -1.9073486328125e-06, -0.0031871795654296875, 0.0, -2.86102294921875e-05, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -4.6133995056152344e-05, -5.53131103515625e-05, -7.82012939453125e-05, -3.814697265625e-06, -0.0002422332763671875, -3.24249267578125e-05, -1.9073486328125e-06, -0.15481436252593994, -2.0265579223632812e-06, -0.0016832351684570312, -2.09808349609375e-05, -3.62396240234375e-05, 0.0, -1.33514404296875e-05, 0.0, -0.00022852420806884766, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0052149295806884766, 0.0, -0.005436897277832031, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -3.4570680327306036e-06, -4.649161837733118e-06, -0.028081893920898438, -0.00164794921875, -2.47955322265625e-05, -3.24249267578125e-05, -5.340576171875e-05, -5.7220458984375e-06, 0.0, -6.270408630371094e-05, -1.1444091796875e-05, -0.00022971630096435547, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.647804260253906e-05, -4.768370445162873e-07, -0.0019273757934570312, -8.0108642578125e-05, -7.62939453125e-06, -4.76837158203125e-05, -6.103515625e-05, -0.16188481450080872, -0.00015699861978646368, -0.008260726928710938, -0.0002536773681640625, -0.0008106231689453125, -3.24249267578125e-05, -0.0001201629638671875, 0.0, -0.0004138946533203125, 0.0, -0.03459739685058594, -6.866455078125e-05, -0.0019877662416547537, -3.266334533691406e-05, -0.0012264251708984375, -1.1920928244535389e-07, -0.011273376643657684, -2.384185791015625e-06, -0.008715559728443623, -1.1920928244535389e-07, -0.004731889348477125, -0.0053282976150512695, -0.00130462646484375, -0.0001773834228515625, -1.9073486328125e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.009701728820800781, 0.0, -0.032149314880371094, -0.0011053085327148438, -0.0001888275146484375, -1.9073486328125e-06, -0.014665603637695312, -1.52587890625e-05, -0.23065637052059174, -6.56840784358792e-05, -0.0008640289306640625, 0.0, -0.00029754638671875, -0.024747848510742188, -0.0009326934814453125, -0.0004972218885086477, -3.564357393770479e-05, -0.005982398986816406, -0.00069427490234375, -0.0004673004150390625, -0.0009899139404296875, -0.0003662109375, -0.06432723999023438, -1.9073486328125e-06, -0.011065234430134296, -7.62939453125e-06, -0.01678466796875, 0.0, -0.002033233642578125, 0.0, -0.14601561427116394, -0.002553110709413886, -0.004433631896972656, -0.000202178955078125, -0.0019626617431640625, 0.0, -0.002094268798828125, -1.9073486328125e-06, -0.0005773305892944336, 0.0, -0.030117154121398926, 0.0, -0.005731760524213314, 0.0, -0.00089263916015625, -0.000659942626953125, 0.0, -0.047186970710754395, 0.0], "choice_history": [97, 285, "<UNK>", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hex", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 362, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "frog", "<EOS>", 36, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "frog", "<EOS>", "create_minion", "<EOS>", 346, 51, 176, "Null", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "minion", "<EOS>", "card", "<EOS>", 21, 174, "frog", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "minion", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "frog"}], "value": {"_type": "Template76", "hole1": "Frog", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "frog"}, "_type": "Attribute", "attr": "create_minion"}, "args": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "Assign"}, {"targets": [{"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "card"}], "value": {"_type": "Name", "id": "frog"}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "minion"}], "_type": "Template77", "hole1": "<UNK>", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "hole3": "use", "hole0": "<UNK>", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hex"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.783652994914846, "inferred_code": "class <UNK>(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"score_history": [-2.6702880859375e-05, -0.030279159545898438, -0.010879598557949066, -1.3589857189799659e-05, -4.291522600397002e-06, -2.205371856689453e-05, -2.1457672119140625e-06, -8.392333984375e-05, -0.00052642822265625, -0.0073947906494140625, -3.24249267578125e-05, -1.9073486328125e-06, -0.004127688240259886, -2.98022641800344e-05, -9.775154467206448e-05, -5.7220458984375e-06, -0.000194549560546875, -1.1444091796875e-05, -0.000171661376953125, -6.198803021106869e-05, -1.71661376953125e-05, -0.0001125335693359375, -4.9591064453125e-05, -2.300739288330078e-05, -1.9073486328125e-06, -2.09808349609375e-05, -2.6702880859375e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0001163482666015625, -1.9073486328125e-06, -0.0031871795654296875, 0.0, -2.86102294921875e-05, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -4.6133995056152344e-05, -5.53131103515625e-05, -7.82012939453125e-05, -3.814697265625e-06, -0.0002422332763671875, -3.24249267578125e-05, -1.9073486328125e-06, -0.15481436252593994, -2.0265579223632812e-06, -0.0016832351684570312, -2.09808349609375e-05, -3.62396240234375e-05, 0.0, -1.33514404296875e-05, 0.0, -0.00022852420806884766, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0052149295806884766, 0.0, -0.005436897277832031, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -3.4570680327306036e-06, -4.649161837733118e-06, -0.028081893920898438, -0.00164794921875, -2.47955322265625e-05, -3.24249267578125e-05, -5.340576171875e-05, -5.7220458984375e-06, 0.0, -6.270408630371094e-05, -1.1444091796875e-05, -0.00022971630096435547, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.647804260253906e-05, -4.768370445162873e-07, -0.0019273757934570312, -8.0108642578125e-05, -7.62939453125e-06, -4.76837158203125e-05, -6.103515625e-05, -4.525337219238281, -0.0001385211944580078, -0.30178260803222656, -0.0001049041748046875, -0.0037288665771484375, -5.7220458984375e-06, -0.0005168914794921875, 0.0, -0.010221481323242188, 0.0, -0.0031261444091796875, -5.14984130859375e-05, -0.00127164158038795, -1.7404556274414062e-05, -0.002094268798828125, -1.1920928244535389e-07, -0.015491481870412827, -2.384185791015625e-06, -0.012757562100887299, -2.3841855067985307e-07, -0.003901644377037883, -0.0017514228820800781, -0.0006542205810546875, -0.000202178955078125, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.010966776870191097, 0.0, -0.04034233093261719, -0.001087188720703125, -0.000194549560546875, -1.9073486328125e-06, -0.016530990600585938, -1.33514404296875e-05, -0.23068837821483612, -6.377677345881239e-05, -0.00086212158203125, 0.0, -0.000293731689453125, -0.024570465087890625, -0.000957489013671875, -0.0004990100278519094, -3.564357393770479e-05, -0.005934715270996094, -0.0007610321044921875, -0.0004730224609375, -0.001018524169921875, -0.000331878662109375, -0.06436443328857422, -1.9073486328125e-06, -0.010727633722126484, -7.62939453125e-06, -0.016859054565429688, 0.0, -0.0020084381103515625, 0.0, -0.14623434841632843, -0.00255668256431818, -0.0044403076171875, -0.000202178955078125, -0.0019512176513671875, 0.0, -0.002094268798828125, -1.9073486328125e-06, -0.0005716085433959961, 0.0, -0.029984593391418457, 0.0, -0.005724489688873291, 0.0, -0.0008945465087890625, -0.0006618499755859375, 0.0, -0.04714405536651611, 0.0], "choice_history": [97, 285, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hex", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 362, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "lightwarden", "<EOS>", 36, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "frog", "<EOS>", "create_minion", "<EOS>", 346, 51, 176, "Null", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "minion", "<EOS>", "card", "<EOS>", 21, 174, "frog", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "minion", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "lightwarden"}], "value": {"_type": "Template76", "hole1": "Frog", "hole0": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Assign"}, {"targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "frog"}, "_type": "Attribute", "attr": "create_minion"}, "args": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "Assign"}, {"targets": [{"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "card"}], "value": {"_type": "Name", "id": "frog"}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "minion"}], "_type": "Template77", "hole1": "<UNK>", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "hole3": "use", "hole0": "Hex", "_type": "Template5", "hole2": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Hex"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.813185390741943, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        lightwarden = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}]}
{"index": 49, "beams": [{"score_history": [-0.0005550384521484375, -6.866455078125e-05, -3.814697265625e-06, -0.000152587890625, -0.000102996826171875, -7.271740287251305e-06, -1.1920922133867862e-06, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -6.087403744459152e-05, -0.00011074542999267578, -1.5974044799804688e-05, -1.52587890625e-05, -0.0011234283447265625, -0.0001621246337890625, -8.344646857949556e-07, -8.964535663835704e-05, -4.172325134277344e-06, -3.814697265625e-06, -1.0013530300057027e-05, 0.0, -0.0011866092681884766, -1.9073486328125e-06, -6.580352783203125e-05, 0.0, -0.0001544952392578125, -4.1961669921875e-05, -1.9073486328125e-05, -0.0005025863647460938, -1.9073486328125e-06, -0.0003414154052734375, -2.6702880859375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -9.34600830078125e-05, -5.7220458984375e-06, -0.0004901885986328125, -9.5367431640625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.0018242597579956055, 0.0, -0.0015811920166015625, -0.0055370330810546875, -3.4332275390625e-05, -7.62939453125e-06, -0.0001659393310546875, 0.0, -9.5367431640625e-05, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.0035667354241013527, -3.814697265625e-06, -0.0005340576171875, -0.008104324340820312, -0.000202178955078125, -7.82012939453125e-05, 0.0, -2.1457672119140625e-06, 0.0, -0.0007779590087011456, -4.1961669921875e-05, -0.000983238103799522, 0.0, -0.0064907073974609375, -7.62939453125e-06, -0.0005130767822265625, -0.00010335445404052734], "choice_history": [96, 173, 358, 105, 152, "Holy", "Light", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Holy", " ", "Light", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "6", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Holy Light", "_type": "Template14", "hole2": "PALADIN", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 2}, {"hole2": [{"hole2": 6, "_type": "Template69", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HolyLight"}], "_type": "Module"}, "score": -0.03618223488854255, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"score_history": [-0.0005550384521484375, -6.866455078125e-05, -3.814697265625e-06, -0.000152587890625, -0.000102996826171875, -7.271740287251305e-06, -1.1920922133867862e-06, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -6.087403744459152e-05, -0.00011074542999267578, -1.5974044799804688e-05, -1.52587890625e-05, -0.0011234283447265625, -0.0001621246337890625, -8.344646857949556e-07, -8.964535663835704e-05, -4.172325134277344e-06, -3.814697265625e-06, -1.0013530300057027e-05, 0.0, -0.0011866092681884766, -1.9073486328125e-06, -6.580352783203125e-05, 0.0, -0.0001544952392578125, -4.1961669921875e-05, -1.9073486328125e-05, -0.0005025863647460938, -1.9073486328125e-06, -0.0003414154052734375, -2.6702880859375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -9.34600830078125e-05, -5.7220458984375e-06, -0.0004901885986328125, -9.5367431640625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.0018242597579956055, 0.0, -0.0015811920166015625, -0.0055370330810546875, -3.4332275390625e-05, -7.62939453125e-06, -0.0001659393310546875, 0.0, -9.5367431640625e-05, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.0035667354241013527, -3.814697265625e-06, -0.0005340576171875, -6.632794380187988, -0.022933006286621094, -0.000118255615234375, 0.0, -1.1682510375976562e-05, 0.0, -0.010443449020385742, -1.9073486328125e-06, -0.001346588134765625, -1.9073486328125e-06, -0.0012950897216796875, -5.9604644775390625e-06], "choice_history": [96, 173, 358, 105, 152, "Holy", "Light", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Holy", " ", "Light", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 78, 305, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Holy Light", "_type": "Template14", "hole2": "PALADIN", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 2}, {"hole2": [{"_type": "Template67", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HolyLight"}], "_type": "Module"}, "score": -6.687829684359599, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(2), self)\n"}, {"score_history": [-0.0005550384521484375, -6.866455078125e-05, -3.814697265625e-06, -0.000152587890625, -0.000102996826171875, -7.271740287251305e-06, -1.1920922133867862e-06, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -6.087403744459152e-05, -0.00011074542999267578, -1.5974044799804688e-05, -1.52587890625e-05, -0.0011234283447265625, -0.0001621246337890625, -8.344646857949556e-07, -8.964535663835704e-05, -4.172325134277344e-06, -3.814697265625e-06, -1.0013530300057027e-05, 0.0, -0.0011866092681884766, -1.9073486328125e-06, -6.580352783203125e-05, 0.0, -0.0001544952392578125, -4.1961669921875e-05, -1.9073486328125e-05, -0.0005025863647460938, -1.9073486328125e-06, -0.0003414154052734375, -2.6702880859375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -9.34600830078125e-05, -5.7220458984375e-06, -0.0004901885986328125, -9.5367431640625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.0018242597579956055, 0.0, -0.0015811920166015625, -0.0055370330810546875, -3.4332275390625e-05, -7.62939453125e-06, -0.0001659393310546875, 0.0, -9.5367431640625e-05, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.0035667354241013527, -3.814697265625e-06, -0.0005340576171875, -5.297602653503418, -0.009652137756347656, -0.0003662109375, -1.1444091796875e-05, -9.775161743164062e-06, 0.0, -0.005868792533874512, -1.9073486328125e-06, -0.0016765594482421875, -2.09808349609375e-05, -0.19680213928222656, -2.86102294921875e-05, -2.09808349609375e-05, 0.0, -1.2613602876663208, 0.0, -6.67572021484375e-05, -1.1920928244535389e-07, -0.18135416507720947, 0.0, -0.0042247772216796875, -3.814697265625e-06, -0.010768890380859375, 0.0], "choice_history": [96, 173, 358, 105, 152, "Holy", "Light", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Holy", " ", "Light", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 72, 294, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Holy Light", "_type": "Template14", "hole2": "PALADIN", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 2}, {"hole2": [{"hole2": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}, "_type": "Template57", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HolyLight"}], "_type": "Module"}, "score": -6.988718461138767, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n"}, {"score_history": [-0.0005550384521484375, -6.866455078125e-05, -3.814697265625e-06, -0.000152587890625, -0.000102996826171875, -7.271740287251305e-06, -1.1920922133867862e-06, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -6.087403744459152e-05, -0.00011074542999267578, -1.5974044799804688e-05, -1.52587890625e-05, -0.0011234283447265625, -0.0001621246337890625, -8.344646857949556e-07, -8.964535663835704e-05, -4.172325134277344e-06, -3.814697265625e-06, -1.0013530300057027e-05, 0.0, -0.0011866092681884766, -1.9073486328125e-06, -6.580352783203125e-05, 0.0, -0.0001544952392578125, -4.1961669921875e-05, -1.9073486328125e-05, -0.0005025863647460938, -1.9073486328125e-06, -0.0003414154052734375, -2.6702880859375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -9.34600830078125e-05, -5.7220458984375e-06, -0.0004901885986328125, -9.5367431640625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -6.9602203369140625, 0.0, -0.001224517822265625, -0.0021038055419921875, -2.09808349609375e-05, -7.62939453125e-06, -0.00066375732421875, 0.0, -0.000335693359375, -3.814697265625e-06, -5.7220458984375e-05, 0.0, -0.003832845715805888, -5.841255187988281e-06, -0.0004024505615234375, -0.007595062255859375, -0.000217437744140625, -7.05718994140625e-05, 0.0, -2.2649765014648438e-06, 0.0, -0.0008082380518317223, -4.1961669921875e-05, -0.0010308026103302836, 0.0, -0.00519561767578125, -7.62939453125e-06, -0.000522613525390625, -0.00010716915130615234], "choice_history": [96, 173, 358, 105, 152, "Holy", "Light", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Holy", " ", "Light", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "6", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Holy Light", "_type": "Template14", "hole2": "PALADIN", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 2}, {"hole2": [{"hole2": 6, "_type": "Template69", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HolyLight"}], "_type": "Module"}, "score": -6.989959583161976, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"score_history": [-0.0005550384521484375, -6.866455078125e-05, -3.814697265625e-06, -0.000152587890625, -0.000102996826171875, -7.271740287251305e-06, -1.1920922133867862e-06, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -6.087403744459152e-05, -0.00011074542999267578, -1.5974044799804688e-05, -1.52587890625e-05, -0.0011234283447265625, -0.0001621246337890625, -8.344646857949556e-07, -8.964535663835704e-05, -4.172325134277344e-06, -3.814697265625e-06, -1.0013530300057027e-05, 0.0, -0.0011866092681884766, -1.9073486328125e-06, -6.580352783203125e-05, 0.0, -0.0001544952392578125, -4.1961669921875e-05, -1.9073486328125e-05, -0.0005025863647460938, -1.9073486328125e-06, -0.0003414154052734375, -2.6702880859375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -9.34600830078125e-05, -5.7220458984375e-06, -0.0004901885986328125, -9.5367431640625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.0018242597579956055, 0.0, -0.0015811920166015625, -0.0055370330810546875, -3.4332275390625e-05, -7.62939453125e-06, -0.0001659393310546875, 0.0, -9.5367431640625e-05, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.0035667354241013527, -3.814697265625e-06, -0.0005340576171875, -0.008104324340820312, -0.000202178955078125, -7.82012939453125e-05, 0.0, -2.1457672119140625e-06, 0.0, -0.0007779590087011456, -4.1961669921875e-05, -6.975020885467529, -8.344646857949556e-07, -0.000431060791015625, -1.1444091796875e-05, -0.0008393526077270508, -0.00020062923431396484], "choice_history": [96, 173, 358, 105, 152, "Holy", "Light", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Holy", " ", "Light", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Holy Light", "_type": "Template14", "hole2": "PALADIN", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 2}, {"hole2": [{"hole2": 2, "_type": "Template69", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HolyLight"}], "_type": "Module"}, "score": -7.004588435413552, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(2), self)\n"}, {"score_history": [-0.0005550384521484375, -6.866455078125e-05, -3.814697265625e-06, -0.000152587890625, -0.000102996826171875, -7.271740287251305e-06, -1.1920922133867862e-06, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -6.087403744459152e-05, -0.00011074542999267578, -1.5974044799804688e-05, -1.52587890625e-05, -0.0011234283447265625, -0.0001621246337890625, -8.344646857949556e-07, -8.964535663835704e-05, -4.172325134277344e-06, -3.814697265625e-06, -1.0013530300057027e-05, 0.0, -0.0011866092681884766, -1.9073486328125e-06, -6.580352783203125e-05, 0.0, -0.0001544952392578125, -4.1961669921875e-05, -1.9073486328125e-05, -0.0005025863647460938, -1.9073486328125e-06, -0.0003414154052734375, -2.6702880859375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -9.34600830078125e-05, -5.7220458984375e-06, -0.0004901885986328125, -9.5367431640625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.0018242597579956055, 0.0, -0.0015811920166015625, -5.3446044921875, -0.00035858154296875, 0.0, -4.57763671875e-05, 0.0, -0.0005779266357421875, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -1.6502310037612915, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "Holy", "Light", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Holy", " ", "Light", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 224, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Holy Light", "_type": "Template14", "hole2": "PALADIN", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 2}, {"_type": "Template3", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HolyLight"}], "_type": "Module"}, "score": -7.004736977522839, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal()\n"}, {"score_history": [-0.0005550384521484375, -6.866455078125e-05, -3.814697265625e-06, -0.000152587890625, -0.000102996826171875, -7.271740287251305e-06, -1.1920922133867862e-06, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -6.087403744459152e-05, -0.00011074542999267578, -1.5974044799804688e-05, -1.52587890625e-05, -0.0011234283447265625, -0.0001621246337890625, -8.344646857949556e-07, -8.964535663835704e-05, -4.172325134277344e-06, -3.814697265625e-06, -1.0013530300057027e-05, 0.0, -0.0011866092681884766, -1.9073486328125e-06, -6.580352783203125e-05, 0.0, -0.0001544952392578125, -4.1961669921875e-05, -1.9073486328125e-05, -0.0005025863647460938, -1.9073486328125e-06, -0.0003414154052734375, -2.6702880859375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -9.34600830078125e-05, -5.7220458984375e-06, -0.0004901885986328125, -9.5367431640625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.0018242597579956055, 0.0, -0.0015811920166015625, -0.0055370330810546875, -3.4332275390625e-05, -7.62939453125e-06, -0.0001659393310546875, 0.0, -9.5367431640625e-05, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -7.203735828399658, -1.728534698486328e-05, -3.814697265625e-06, -0.01609325408935547, 0.0, -0.0044356584548950195, -1.0609622222546022e-05], "choice_history": [96, 173, 358, 105, 152, "Holy", "Light", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Holy", " ", "Light", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Holy Light", "_type": "Template14", "hole2": "PALADIN", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 2}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HolyLight"}], "_type": "Module"}, "score": -7.239069300592632, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score_history": [-0.0005550384521484375, -6.866455078125e-05, -3.814697265625e-06, -0.000152587890625, -0.000102996826171875, -7.271740287251305e-06, -1.1920922133867862e-06, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -6.087403744459152e-05, -0.00011074542999267578, -1.5974044799804688e-05, -1.52587890625e-05, -0.0011234283447265625, -0.0001621246337890625, -8.344646857949556e-07, -8.964535663835704e-05, -4.172325134277344e-06, -3.814697265625e-06, -1.0013530300057027e-05, 0.0, -0.0011866092681884766, -1.9073486328125e-06, -6.580352783203125e-05, 0.0, -0.0001544952392578125, -4.1961669921875e-05, -1.9073486328125e-05, -0.0005025863647460938, -1.9073486328125e-06, -0.0003414154052734375, -2.6702880859375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -9.34600830078125e-05, -5.7220458984375e-06, -0.0004901885986328125, -9.5367431640625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.0018242597579956055, 0.0, -0.0015811920166015625, -5.3446044921875, -0.00035858154296875, 0.0, -4.57763671875e-05, 0.0, -0.0005779266357421875, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -2.3121800422668457, 0.0], "choice_history": [96, 173, 358, 105, 152, "Holy", "Light", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Holy", " ", "Light", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 224, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "bounce", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Holy Light", "_type": "Template14", "hole2": "PALADIN", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 2}, {"_type": "Template3", "hole1": "bounce", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HolyLight"}], "_type": "Module"}, "score": -7.66668410867976, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.bounce()\n"}, {"score_history": [-0.0005550384521484375, -6.866455078125e-05, -3.814697265625e-06, -0.000152587890625, -0.000102996826171875, -7.271740287251305e-06, -1.1920922133867862e-06, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -6.087403744459152e-05, -0.00011074542999267578, -1.5974044799804688e-05, -1.52587890625e-05, -0.0011234283447265625, -0.0001621246337890625, -8.344646857949556e-07, -8.964535663835704e-05, -4.172325134277344e-06, -3.814697265625e-06, -1.0013530300057027e-05, 0.0, -0.0011866092681884766, -1.9073486328125e-06, -6.580352783203125e-05, 0.0, -0.0001544952392578125, -4.1961669921875e-05, -1.9073486328125e-05, -0.0005025863647460938, -1.9073486328125e-06, -0.0003414154052734375, -2.6702880859375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -9.34600830078125e-05, -5.7220458984375e-06, -0.0004901885986328125, -9.5367431640625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.0018242597579956055, 0.0, -0.0015811920166015625, -5.3446044921875, -0.00035858154296875, 0.0, -4.57763671875e-05, 0.0, -0.0005779266357421875, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -2.3744940757751465, 0.0], "choice_history": [96, 173, 358, 105, 152, "Holy", "Light", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Holy", " ", "Light", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 224, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "find_minion_spell_target", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Holy Light", "_type": "Template14", "hole2": "PALADIN", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 2}, {"_type": "Template3", "hole1": "find_minion_spell_target", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HolyLight"}], "_type": "Module"}, "score": -7.728998142188061, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.find_minion_spell_target()\n"}, {"score_history": [-0.0005550384521484375, -6.866455078125e-05, -3.814697265625e-06, -0.000152587890625, -0.000102996826171875, -7.271740287251305e-06, -1.1920922133867862e-06, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -6.087403744459152e-05, -0.00011074542999267578, -1.5974044799804688e-05, -1.52587890625e-05, -0.0011234283447265625, -0.0001621246337890625, -8.344646857949556e-07, -8.964535663835704e-05, -4.172325134277344e-06, -3.814697265625e-06, -1.0013530300057027e-05, 0.0, -0.0011866092681884766, -1.9073486328125e-06, -6.580352783203125e-05, 0.0, -0.0001544952392578125, -4.1961669921875e-05, -1.9073486328125e-05, -0.0005025863647460938, -1.9073486328125e-06, -0.0003414154052734375, -2.6702880859375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -9.34600830078125e-05, -5.7220458984375e-06, -0.0004901885986328125, -9.5367431640625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.0018242597579956055, 0.0, -0.0015811920166015625, -5.3446044921875, -0.00035858154296875, 0.0, -4.57763671875e-05, 0.0, -0.0005779266357421875, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -2.449103355407715, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "Holy", "Light", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Holy", " ", "Light", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 224, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Holy Light", "_type": "Template14", "hole2": "PALADIN", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 2}, {"_type": "Template3", "hole1": "calculate_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HolyLight"}], "_type": "Module"}, "score": -7.803609329169262, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.calculate_attack()\n"}, {"score_history": [-0.0005550384521484375, -6.866455078125e-05, -3.814697265625e-06, -0.000152587890625, -0.000102996826171875, -7.271740287251305e-06, -1.1920922133867862e-06, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -6.087403744459152e-05, -0.00011074542999267578, -1.5974044799804688e-05, -1.52587890625e-05, -0.0011234283447265625, -0.0001621246337890625, -8.344646857949556e-07, -8.964535663835704e-05, -4.172325134277344e-06, -3.814697265625e-06, -1.0013530300057027e-05, 0.0, -0.0011866092681884766, -1.9073486328125e-06, -6.580352783203125e-05, 0.0, -0.0001544952392578125, -4.1961669921875e-05, -1.9073486328125e-05, -0.0005025863647460938, -1.9073486328125e-06, -0.0003414154052734375, -2.6702880859375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -9.34600830078125e-05, -5.7220458984375e-06, -0.0004901885986328125, -9.5367431640625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.0018242597579956055, 0.0, -0.0015811920166015625, -0.0055370330810546875, -3.4332275390625e-05, -7.62939453125e-06, -0.0001659393310546875, 0.0, -9.5367431640625e-05, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.0035667354241013527, -3.814697265625e-06, -0.0005340576171875, -5.297602653503418, -0.009652137756347656, -0.0003662109375, -1.1444091796875e-05, -9.775161743164062e-06, 0.0, -0.005868792533874512, -1.9073486328125e-06, -0.0016765594482421875, -2.09808349609375e-05, -0.19680213928222656, -2.86102294921875e-05, -2.09808349609375e-05, 0.0, -1.0724478960037231, 0.0, -0.0060225725173950195, 0.0, -0.278591513633728, -7.62939453125e-06, -0.09102630615234375, -0.002010345458984375, -0.00041961669921875, -0.000576019287109375, -1.0220271348953247, -1.4066597032069694e-05, -0.05376625061035156, -7.62939453125e-06, -0.0005123615264892578, -3.933904736186378e-06], "choice_history": [96, 173, 358, 105, 152, "Holy", "Light", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Holy", " ", "Light", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 72, 294, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 13, 143, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 47, 167, 0, 282, "x", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Holy Light", "_type": "Template14", "hole2": "PALADIN", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 2}, {"hole2": [{"hole2": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "heal"}, "_type": "Template57", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"body": {"value": true, "_type": "NameConstant"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "x"}}], "_type": "Template3", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HolyLight"}], "_type": "Module"}, "score": -8.0583729257595, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(player.hero.heal()), \n            lambda x: True)\n"}, {"score_history": [-0.0005550384521484375, -6.866455078125e-05, -3.814697265625e-06, -0.000152587890625, -0.000102996826171875, -7.271740287251305e-06, -1.1920922133867862e-06, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -6.087403744459152e-05, -0.00011074542999267578, -1.5974044799804688e-05, -1.52587890625e-05, -0.0011234283447265625, -0.0001621246337890625, -8.344646857949556e-07, -8.964535663835704e-05, -4.172325134277344e-06, -3.814697265625e-06, -1.0013530300057027e-05, 0.0, -0.0011866092681884766, -1.9073486328125e-06, -6.580352783203125e-05, 0.0, -0.0001544952392578125, -4.1961669921875e-05, -1.9073486328125e-05, -0.0005025863647460938, -1.9073486328125e-06, -0.0003414154052734375, -2.6702880859375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -9.34600830078125e-05, -5.7220458984375e-06, -0.0004901885986328125, -9.5367431640625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.0018242597579956055, 0.0, -0.0015811920166015625, -0.0055370330810546875, -3.4332275390625e-05, -7.62939453125e-06, -0.0001659393310546875, 0.0, -9.5367431640625e-05, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.0035667354241013527, -3.814697265625e-06, -0.0005340576171875, -7.567599773406982, -0.0002269744873046875, -0.9336279630661011, -9.5367431640625e-06, -0.04331398010253906, -9.5367431640625e-06, -0.025984764099121094, 0.0], "choice_history": [96, 173, 358, 105, 152, "Holy", "Light", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Holy", " ", "Light", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Holy Light", "_type": "Template14", "hole2": "PALADIN", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 2}, {"hole2": [{"_type": "Str", "s": "character_attack"}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HolyLight"}], "_type": "Module"}, "score": -8.589649986369182, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal('character_attack', self)\n"}, {"score_history": [-0.0005550384521484375, -6.866455078125e-05, -3.814697265625e-06, -0.000152587890625, -0.000102996826171875, -7.271740287251305e-06, -1.1920922133867862e-06, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -6.087403744459152e-05, -0.00011074542999267578, -1.5974044799804688e-05, -1.52587890625e-05, -8.295144081115723, -0.24327373504638672, -0.00010776018461911008, -9.965896606445312e-05, -6.5565000113565475e-06, 0.0, -1.9669336325023323e-05, 0.0, -0.06759560108184814, 0.0, -0.1436300277709961, -0.00225067138671875, -2.09808349609375e-05, 0.0, -0.00176239013671875, 0.0, -0.0853424072265625, 0.0, -2.86102294921875e-05, 0.0, -0.006652171723544598, -5.7220458984375e-06, -0.00045013427734375, -0.006595611572265625, -0.0002117156982421875, -7.43865966796875e-05, 0.0, -2.503394853192731e-06, 0.0, -0.0009130230755545199, -4.57763671875e-05, -0.0010459421901032329, 0.0, -0.00977325439453125, -7.62939453125e-06, -0.0004731416702270508, -0.00010144710540771484], "choice_history": [96, 173, 358, 105, 152, "Holy", "Light", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 116, 196, "Holy", " ", "Light", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "6", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PALADIN", "_type": "Template12", "hole1": 2, "hole0": "Holy Light"}, {"hole2": [{"hole2": 6, "_type": "Template69", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HolyLight"}], "_type": "Module"}, "score": -8.86675000870855, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"score_history": [-0.0005550384521484375, -6.866455078125e-05, -3.814697265625e-06, -10.286080360412598, -1.9461174011230469, -0.13176941871643066, -0.003877993207424879, -2.2768930648453534e-05, -0.0008317232131958008, -4.768370445162873e-07, -0.16164278984069824, 0.0], "choice_history": [96, 173, 358, 127, 230, "Holy", "Light", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>"], "model_output": {"body": [{"hole2": "ROGUE", "_type": "Template31", "hole1": 2, "hole0": "HolyLight"}], "_type": "Module"}, "score": -12.530970449981282, "inferred_code": "super().__init__('HolyLight', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON)\n"}, {"score_history": [-0.0005550384521484375, -6.866455078125e-05, -22.784456253051758], "choice_history": [96, 173, 357], "model_output": {"body": [], "_type": "Module"}, "score": -22.785079956054688, "inferred_code": ""}]}
{"index": 50, "beams": [{"score_history": [-0.00014495849609375, -0.000240325927734375, -1.1920928244535389e-07, -1.2516897186287679e-05, -1.4305104514278355e-06, -5.721730849472806e-05, -1.3589850823336747e-05, -2.741813204920618e-06, -7.62939453125e-06, -0.001750946044921875, -0.0007781982421875, -1.311301275563892e-06, -0.00022029876708984375, -2.3841855067985307e-07, -1.9073486328125e-06, -3.4927710657939315e-05, 0.0, -0.0025997161865234375, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.6702880859375e-05, -2.622604142743512e-06, -2.0265579223632812e-06, -0.0031871795654296875, -4.76837158203125e-05, -1.52587890625e-05, -3.814697265625e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.7881393432617188e-05, -1.33514404296875e-05, -2.1457672119140625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000110626220703125, -0.0002193450927734375, -0.0015687942504882812, -7.62939453125e-06, -0.011283278465270996, 0.0, -0.0049724578857421875, -4.57763671875e-05, -0.0002880096435546875, -0.000377655029296875, -2.86102294921875e-05, 0.0, -0.0019457340240478516, -7.62939453125e-06, -0.0001506805419921875, -5.7220458984375e-06, -2.09808349609375e-05, -0.00830078125, -2.6702880859375e-05, -3.814697265625e-05, -1.1444091796875e-05, -0.000278472900390625, -3.814697265625e-06, -0.00017583370208740234, 0.0, -0.0031642913818359375, 0.0, -0.0008497238159179688, -7.62939453125e-06, -2.86102294921875e-05, -0.0001926422119140625, -0.00017547607421875, -0.00135040283203125, -0.00017547607421875, -0.00040827927296049893, -2.7418097943154862e-06, -0.5932491421699524, -1.0728830375228426e-06, -0.0005168914794921875, -0.14786624908447266, -0.010369300842285156, -0.00022125244140625, 0.0, -8.58306884765625e-06, 0.0, -0.002590656280517578, -1.9073486328125e-06, -9.918212890625e-05, -0.0001659393310546875, -0.001160740852355957, -2.300739288330078e-05, -0.009556770324707031, -0.01251220703125, -0.00943756103515625, -1.9073486328125e-06, -0.006131887435913086, -1.1920928244535389e-07, -0.0013179779052734375, -1.9073486328125e-05, -0.011875152587890625, 0.0, -0.0008299350738525391, 0.0, -0.013344526290893555, 0.0, -1.71661376953125e-05, -0.00037384033203125, -4.1961669921875e-05, -0.0009822845458984375, -0.001384735107421875, -0.015816211700439453, -1.1920928244535389e-07, -0.014466245658695698, -1.1920928244535389e-07, -0.0005168914794921875, -0.11472511291503906, -0.008545875549316406, -0.000507354736328125, -1.9073486328125e-06, -1.5974044799804688e-05, 0.0, -0.003077387809753418, -1.9073486328125e-06, -6.4849853515625e-05, -0.0001926422119140625, -0.0005227327346801758, -1.3470649719238281e-05], "choice_history": [97, 285, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "heal", "<EOS>", 347, 78, 305, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 50, 174, "self", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "heal", "<EOS>", 347, 78, 305, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template67", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template67", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "HolyNova", "_type": "Template5", "hole2": [{"hole2": "PRIEST", "_type": "Template31", "hole1": 5, "hole0": "Holy Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -1.0281195672152421, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.heal(player.effective_heal_power(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"score_history": [-0.00014495849609375, -0.000240325927734375, -1.1920928244535389e-07, -1.2516897186287679e-05, -1.4305104514278355e-06, -5.721730849472806e-05, -1.3589850823336747e-05, -2.741813204920618e-06, -7.62939453125e-06, -0.001750946044921875, -0.0007781982421875, -1.311301275563892e-06, -0.00022029876708984375, -2.3841855067985307e-07, -1.9073486328125e-06, -3.4927710657939315e-05, 0.0, -0.0025997161865234375, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.6702880859375e-05, -2.622604142743512e-06, -2.0265579223632812e-06, -0.0031871795654296875, -4.76837158203125e-05, -1.52587890625e-05, -3.814697265625e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.7881393432617188e-05, -1.33514404296875e-05, -2.1457672119140625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000110626220703125, -0.0002193450927734375, -0.0015687942504882812, -7.62939453125e-06, -0.011283278465270996, 0.0, -0.0049724578857421875, -4.57763671875e-05, -0.0002880096435546875, -0.000377655029296875, -2.86102294921875e-05, 0.0, -0.0019457340240478516, -7.62939453125e-06, -0.0001506805419921875, -5.7220458984375e-06, -2.09808349609375e-05, -0.00830078125, -2.6702880859375e-05, -3.814697265625e-05, -1.1444091796875e-05, -0.000278472900390625, -3.814697265625e-06, -0.00017583370208740234, 0.0, -0.0031642913818359375, 0.0, -0.0008497238159179688, -7.62939453125e-06, -2.86102294921875e-05, -0.0001926422119140625, -0.00017547607421875, -0.00135040283203125, -0.00017547607421875, -0.00040827927296049893, -2.7418097943154862e-06, -1.0029481649398804, 0.0, -0.0001163482666015625, -0.0008487701416015625, -0.0001220703125, -0.010714718140661716, -1.9550132492440753e-05, -3.814697265625e-06, -0.00035858154296875, -0.0005812644958496094, -0.000476837158203125, -0.006285667419433594, -0.0032901763916015625, -0.04272937774658203, -3.814697265625e-06, -0.026123404502868652, 0.0, -0.0006656646728515625, -5.14984130859375e-05, -0.03093719482421875, 0.0, -0.0013259649276733398, 0.0, -0.008534669876098633, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002460479736328125, -4.00543212890625e-05, -0.000659942626953125, -0.003162384033203125, -0.003897428512573242, -1.1920928244535389e-07, -0.01374754961580038, -1.1920928244535389e-07, -0.000507354736328125, -0.11324787139892578, -0.008494377136230469, -0.0005207061767578125, -1.9073486328125e-06, -1.7881393432617188e-05, 0.0, -0.0030134916305541992, -1.9073486328125e-06, -6.4849853515625e-05, -0.000179290771484375, -0.0005170106887817383, -1.3470649719238281e-05], "choice_history": [97, 285, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "heal", "<EOS>", 347, 78, 305, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template67", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "HolyNova", "_type": "Template5", "hole2": [{"hole2": "PRIEST", "_type": "Template31", "hole1": 5, "hole0": "Holy Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -1.3300363106535045, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"score_history": [-0.00014495849609375, -0.000240325927734375, -1.1920928244535389e-07, -1.2516897186287679e-05, -1.4305104514278355e-06, -5.721730849472806e-05, -1.3589850823336747e-05, -2.741813204920618e-06, -7.62939453125e-06, -0.001750946044921875, -0.0007781982421875, -1.311301275563892e-06, -0.00022029876708984375, -2.3841855067985307e-07, -1.9073486328125e-06, -3.4927710657939315e-05, 0.0, -0.0025997161865234375, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.6702880859375e-05, -2.622604142743512e-06, -2.0265579223632812e-06, -0.0031871795654296875, -4.76837158203125e-05, -1.52587890625e-05, -3.814697265625e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.7881393432617188e-05, -1.33514404296875e-05, -2.1457672119140625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000110626220703125, -0.0002193450927734375, -0.0015687942504882812, -7.62939453125e-06, -0.011283278465270996, 0.0, -0.0049724578857421875, -4.57763671875e-05, -0.0002880096435546875, -0.000377655029296875, -2.86102294921875e-05, 0.0, -0.0019457340240478516, -7.62939453125e-06, -0.0001506805419921875, -5.7220458984375e-06, -2.09808349609375e-05, -0.00830078125, -2.6702880859375e-05, -3.814697265625e-05, -1.1444091796875e-05, -0.000278472900390625, -3.814697265625e-06, -0.00017583370208740234, 0.0, -0.0031642913818359375, 0.0, -0.0008497238159179688, -7.62939453125e-06, -2.86102294921875e-05, -0.0001926422119140625, -0.00017547607421875, -0.00135040283203125, -0.00017547607421875, -0.00040827927296049893, -2.7418097943154862e-06, -0.5932491421699524, -1.0728830375228426e-06, -0.0005168914794921875, -2.9461288452148438, -0.00152587890625, -0.0003261566162109375, -5.7220458984375e-06, -7.271752110682428e-06, -1.1920928244535389e-07, -0.0003939851012546569, -1.9073486328125e-06, -0.19641318917274475, -7.152555099310121e-07, -7.62939453125e-06, -0.0001125335693359375, -0.00013399124145507812, -0.00013947486877441406, -0.005084037780761719, -0.0042133331298828125, -0.008847236633300781, -1.9073486328125e-06, -0.006764769554138184, -1.1920928244535389e-07, -0.0009746551513671875, -3.4332275390625e-05, -0.0056514739990234375, 0.0, -0.0010093450546264648, 0.0, -0.010703206062316895, 0.0, -1.33514404296875e-05, -0.0002422332763671875, -4.1961669921875e-05, -0.0010051727294921875, -0.0016384124755859375, -0.010594367980957031, -1.1920928244535389e-07, -0.014532411471009254, -1.1920928244535389e-07, -0.00052642822265625, -0.1153268814086914, -0.008581161499023438, -0.0005016326904296875, -1.9073486328125e-06, -1.5974044799804688e-05, 0.0, -0.003058314323425293, -1.9073486328125e-06, -6.4849853515625e-05, -0.0001850128173828125, -0.0005255937576293945, -1.3470649719238281e-05], "choice_history": [97, 285, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 50, 174, "self", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "heal", "<EOS>", 347, 78, 305, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"hole2": 2, "_type": "Template69", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template67", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "HolyNova", "_type": "Template5", "hole2": [{"hole2": "PRIEST", "_type": "Template31", "hole1": 5, "hole0": "Holy Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -3.9846699597846325, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.heal(player.effective_heal_power(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"score_history": [-0.00014495849609375, -0.000240325927734375, -1.1920928244535389e-07, -1.2516897186287679e-05, -1.4305104514278355e-06, -5.721730849472806e-05, -1.3589850823336747e-05, -2.741813204920618e-06, -7.62939453125e-06, -0.001750946044921875, -0.0007781982421875, -1.311301275563892e-06, -0.00022029876708984375, -2.3841855067985307e-07, -1.9073486328125e-06, -3.4927710657939315e-05, 0.0, -0.0025997161865234375, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.6702880859375e-05, -2.622604142743512e-06, -2.0265579223632812e-06, -0.0031871795654296875, -4.76837158203125e-05, -1.52587890625e-05, -3.814697265625e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.7881393432617188e-05, -1.33514404296875e-05, -2.1457672119140625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000110626220703125, -0.0002193450927734375, -0.0015687942504882812, -7.62939453125e-06, -0.011283278465270996, 0.0, -0.0049724578857421875, -4.57763671875e-05, -0.0002880096435546875, -0.000377655029296875, -2.86102294921875e-05, 0.0, -0.0019457340240478516, -7.62939453125e-06, -0.0001506805419921875, -5.7220458984375e-06, -2.09808349609375e-05, -0.00830078125, -2.6702880859375e-05, -3.814697265625e-05, -1.1444091796875e-05, -0.000278472900390625, -3.814697265625e-06, -0.00017583370208740234, 0.0, -0.0031642913818359375, 0.0, -0.0008497238159179688, -7.62939453125e-06, -2.86102294921875e-05, -0.0001926422119140625, -0.00017547607421875, -0.00135040283203125, -0.00017547607421875, -0.00040827927296049893, -2.7418097943154862e-06, -2.7311179637908936, -1.1920922133867862e-06, -2.288818359375e-05, -0.006184577941894531, -0.00382232666015625, -0.18606016039848328, -0.0059871673583984375, -0.04705238342285156, -0.000431060791015625, -1.1444091796875e-05, -1.9073486328125e-06, -0.0006500482559204102, 0.0, -0.19673824310302734, -3.62396240234375e-05, -0.001384735107421875, 0.0, -0.8365539312362671, 0.0, -0.009596943855285645, -1.9073486328125e-06, -1.1444091796875e-05, -0.0005168914794921875, -4.57763671875e-05, -0.0007534027099609375, -0.0013866424560546875, -0.00022995441395323724, -1.1920928244535389e-07, -0.005477914121001959, -1.1920928244535389e-07, -0.00029754638671875, -0.11512184143066406, -0.009100914001464844, -0.0004863739013671875, -1.9073486328125e-06, -1.823902130126953e-05, 0.0, -0.0025511980056762695, -1.9073486328125e-06, -4.76837158203125e-05, -0.00019073486328125, -0.000504612922668457, -1.537799835205078e-05], "choice_history": [97, 285, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "add_buff", "<EOS>", 346, 69, 290, "Frozen", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "heal", "<EOS>", 347, 78, 305, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template54", "hole0": "Frozen"}], "_type": "Template77", "hole1": "add_buff", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template67", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "HolyNova", "_type": "Template5", "hole2": [{"hole2": "PRIEST", "_type": "Template31", "hole1": 5, "hole0": "Holy Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.207965455542826, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.add_buff(Buff(Frozen()))\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"score_history": [-0.00014495849609375, -0.000240325927734375, -1.1920928244535389e-07, -1.2516897186287679e-05, -1.4305104514278355e-06, -5.721730849472806e-05, -1.3589850823336747e-05, -2.741813204920618e-06, -7.62939453125e-06, -0.001750946044921875, -0.0007781982421875, -1.311301275563892e-06, -0.00022029876708984375, -2.3841855067985307e-07, -1.9073486328125e-06, -3.4927710657939315e-05, 0.0, -0.0025997161865234375, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.6702880859375e-05, -2.622604142743512e-06, -2.0265579223632812e-06, -0.0031871795654296875, -4.76837158203125e-05, -1.52587890625e-05, -3.814697265625e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.7881393432617188e-05, -1.33514404296875e-05, -2.1457672119140625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000110626220703125, -0.0002193450927734375, -0.0015687942504882812, -7.62939453125e-06, -0.011283278465270996, 0.0, -0.0049724578857421875, -4.57763671875e-05, -0.0002880096435546875, -0.000377655029296875, -2.86102294921875e-05, 0.0, -0.0019457340240478516, -7.62939453125e-06, -0.0001506805419921875, -5.7220458984375e-06, -2.09808349609375e-05, -0.00830078125, -2.6702880859375e-05, -3.814697265625e-05, -1.1444091796875e-05, -0.000278472900390625, -3.814697265625e-06, -0.00017583370208740234, 0.0, -0.0031642913818359375, 0.0, -0.0008497238159179688, -7.62939453125e-06, -2.86102294921875e-05, -0.0001926422119140625, -0.00017547607421875, -0.00135040283203125, -0.00017547607421875, -0.00040827927296049893, -2.7418097943154862e-06, -0.5932491421699524, -1.0728830375228426e-06, -0.0005168914794921875, -0.14786624908447266, -0.010369300842285156, -0.00022125244140625, 0.0, -8.58306884765625e-06, 0.0, -0.002590656280517578, -1.9073486328125e-06, -9.918212890625e-05, -0.0001659393310546875, -0.001160740852355957, -2.300739288330078e-05, -0.009556770324707031, -0.01251220703125, -0.00943756103515625, -1.9073486328125e-06, -0.006131887435913086, -1.1920928244535389e-07, -0.0013179779052734375, -1.9073486328125e-05, -0.011875152587890625, 0.0, -0.0008299350738525391, 0.0, -0.013344526290893555, 0.0, -1.71661376953125e-05, -0.00037384033203125, -4.1961669921875e-05, -0.0009822845458984375, -0.001384735107421875, -0.015816211700439453, -1.1920928244535389e-07, -0.014466245658695698, -1.1920928244535389e-07, -0.0005168914794921875, -3.1938533782958984, -0.001495361328125, -0.0007038116455078125, -3.814697265625e-06, -8.344639354618266e-06, 0.0, -0.0002645252097863704, -1.9073486328125e-06, -0.18881477415561676, -9.536738616588991e-07, -5.7220458984375e-06, -7.05718994140625e-05, -0.00013399124145507812, -0.00012218952178955078], "choice_history": [97, 285, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "heal", "<EOS>", 347, 78, 305, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 50, 174, "self", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template67", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"hole2": 2, "_type": "Template69", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "HolyNova", "_type": "Template5", "hole2": [{"hole2": "PRIEST", "_type": "Template31", "hole1": 5, "hole0": "Holy Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.285929697715517, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.heal(player.effective_heal_power(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"score_history": [-0.00014495849609375, -0.000240325927734375, -1.1920928244535389e-07, -1.2516897186287679e-05, -1.4305104514278355e-06, -5.721730849472806e-05, -1.3589850823336747e-05, -2.741813204920618e-06, -7.62939453125e-06, -0.001750946044921875, -0.0007781982421875, -1.311301275563892e-06, -0.00022029876708984375, -2.3841855067985307e-07, -1.9073486328125e-06, -3.4927710657939315e-05, 0.0, -0.0025997161865234375, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.6702880859375e-05, -2.622604142743512e-06, -2.0265579223632812e-06, -0.0031871795654296875, -4.76837158203125e-05, -1.52587890625e-05, -3.814697265625e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.7881393432617188e-05, -1.33514404296875e-05, -2.1457672119140625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000110626220703125, -0.0002193450927734375, -0.0015687942504882812, -7.62939453125e-06, -0.011283278465270996, 0.0, -0.0049724578857421875, -4.57763671875e-05, -0.0002880096435546875, -0.000377655029296875, -2.86102294921875e-05, 0.0, -0.0019457340240478516, -7.62939453125e-06, -0.0001506805419921875, -5.7220458984375e-06, -2.09808349609375e-05, -0.00830078125, -2.6702880859375e-05, -3.814697265625e-05, -1.1444091796875e-05, -0.000278472900390625, -3.814697265625e-06, -0.00017583370208740234, 0.0, -0.0031642913818359375, 0.0, -0.0008497238159179688, -7.62939453125e-06, -2.86102294921875e-05, -0.0001926422119140625, -0.00017547607421875, -0.00135040283203125, -0.00017547607421875, -0.00040827927296049893, -2.7418097943154862e-06, -1.0029481649398804, 0.0, -0.0001163482666015625, -0.0008487701416015625, -0.0001220703125, -0.010714718140661716, -1.9550132492440753e-05, -3.814697265625e-06, -0.00035858154296875, -0.0005812644958496094, -0.000476837158203125, -0.006285667419433594, -0.0032901763916015625, -0.04272937774658203, -3.814697265625e-06, -0.026123404502868652, 0.0, -0.0006656646728515625, -5.14984130859375e-05, -0.03093719482421875, 0.0, -0.0013259649276733398, 0.0, -0.008534669876098633, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002460479736328125, -4.00543212890625e-05, -0.000659942626953125, -0.003162384033203125, -0.003897428512573242, -1.1920928244535389e-07, -0.01374754961580038, -1.1920928244535389e-07, -0.000507354736328125, -3.1971206665039062, -0.0015430450439453125, -0.000720977783203125, -3.814697265625e-06, -8.702266313775908e-06, 0.0, -0.00026524043641984463, -1.9073486328125e-06, -0.18393148481845856, -9.536738616588991e-07, -5.7220458984375e-06, -7.05718994140625e-05, -0.0001379251480102539, -0.00012409687042236328], "choice_history": [97, 285, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"hole2": 2, "_type": "Template69", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "HolyNova", "_type": "Template5", "hole2": [{"hole2": "PRIEST", "_type": "Template31", "hole1": 5, "hole0": "Holy Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.587898654792589, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"score_history": [-0.00014495849609375, -0.000240325927734375, -1.1920928244535389e-07, -1.2516897186287679e-05, -1.4305104514278355e-06, -5.721730849472806e-05, -1.3589850823336747e-05, -2.741813204920618e-06, -7.62939453125e-06, -0.001750946044921875, -0.0007781982421875, -1.311301275563892e-06, -0.00022029876708984375, -2.3841855067985307e-07, -1.9073486328125e-06, -3.4927710657939315e-05, 0.0, -0.0025997161865234375, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.6702880859375e-05, -2.622604142743512e-06, -2.0265579223632812e-06, -0.0031871795654296875, -4.76837158203125e-05, -1.52587890625e-05, -3.814697265625e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.7881393432617188e-05, -1.33514404296875e-05, -2.1457672119140625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000110626220703125, -0.0002193450927734375, -0.0015687942504882812, -7.62939453125e-06, -0.011283278465270996, 0.0, -0.0049724578857421875, -4.57763671875e-05, -0.0002880096435546875, -0.000377655029296875, -2.86102294921875e-05, 0.0, -0.0019457340240478516, -7.62939453125e-06, -0.0001506805419921875, -5.7220458984375e-06, -2.09808349609375e-05, -0.00830078125, -2.6702880859375e-05, -3.814697265625e-05, -1.1444091796875e-05, -0.000278472900390625, -3.814697265625e-06, -0.00017583370208740234, 0.0, -0.0031642913818359375, 0.0, -0.0008497238159179688, -7.62939453125e-06, -2.86102294921875e-05, -0.0001926422119140625, -0.00017547607421875, -0.00135040283203125, -0.00017547607421875, -0.00040827927296049893, -2.7418097943154862e-06, -1.0029481649398804, 0.0, -0.0001163482666015625, -0.0008487701416015625, -0.0001220703125, -0.010714718140661716, -1.9550132492440753e-05, -3.814697265625e-06, -0.00035858154296875, -0.0005812644958496094, -0.000476837158203125, -0.006285667419433594, -0.0032901763916015625, -0.04272937774658203, -3.814697265625e-06, -0.026123404502868652, 0.0, -0.0006656646728515625, -5.14984130859375e-05, -3.4953718185424805, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.004514932632446289, 0.0, -0.000978708267211914, 0.0, -0.08741390705108643, -1.1563301086425781e-05, -6.67572021484375e-05, -0.000301361083984375, -5.53131103515625e-05, -0.0014400482177734375, -0.000335693359375, -0.00017869466682896018, -2.741813204920618e-06, -0.10484416782855988, -7.152555099310121e-07, -0.001251220703125, -0.15900325775146484, -0.008616447448730469, -0.000335693359375, -1.9073486328125e-06, -1.251697449333733e-05, 0.0, -0.002659320831298828, -1.9073486328125e-06, -5.14984130859375e-05, -0.0001811981201171875, -0.0007039308547973633, -1.919269561767578e-05], "choice_history": [97, 285, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "heal", "<EOS>", 347, 78, 305, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template67", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "HolyNova", "_type": "Template5", "hole2": [{"hole2": "PRIEST", "_type": "Template31", "hole1": 5, "hole0": "Holy Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.009270674663718, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in game.other_player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"score_history": [-0.00014495849609375, -0.000240325927734375, -1.1920928244535389e-07, -1.2516897186287679e-05, -1.4305104514278355e-06, -5.721730849472806e-05, -1.3589850823336747e-05, -2.741813204920618e-06, -7.62939453125e-06, -0.001750946044921875, -0.0007781982421875, -1.311301275563892e-06, -0.00022029876708984375, -2.3841855067985307e-07, -1.9073486328125e-06, -3.4927710657939315e-05, 0.0, -0.0025997161865234375, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.6702880859375e-05, -2.622604142743512e-06, -2.0265579223632812e-06, -0.0031871795654296875, -4.76837158203125e-05, -1.52587890625e-05, -3.814697265625e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.7881393432617188e-05, -1.33514404296875e-05, -2.1457672119140625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000110626220703125, -0.0002193450927734375, -0.0015687942504882812, -7.62939453125e-06, -0.011283278465270996, 0.0, -0.0049724578857421875, -4.57763671875e-05, -0.0002880096435546875, -0.000377655029296875, -2.86102294921875e-05, 0.0, -0.0019457340240478516, -7.62939453125e-06, -0.0001506805419921875, -5.7220458984375e-06, -2.09808349609375e-05, -0.00830078125, -2.6702880859375e-05, -3.814697265625e-05, -1.1444091796875e-05, -0.000278472900390625, -3.814697265625e-06, -0.00017583370208740234, 0.0, -0.0031642913818359375, 0.0, -0.0008497238159179688, -7.62939453125e-06, -2.86102294921875e-05, -0.0001926422119140625, -0.00017547607421875, -0.00135040283203125, -0.00017547607421875, -0.00040827927296049893, -2.7418097943154862e-06, -2.7311179637908936, -1.1920922133867862e-06, -2.288818359375e-05, -0.006184577941894531, -0.00382232666015625, -0.18606016039848328, -0.0059871673583984375, -0.04705238342285156, -0.000431060791015625, -1.1444091796875e-05, -1.9073486328125e-06, -0.0006500482559204102, 0.0, -0.19673824310302734, -3.62396240234375e-05, -0.001384735107421875, 0.0, -0.8283580541610718, 0.0, -0.8273369073867798, 0.0, -5.7220458984375e-06, -0.0005550384521484375, -4.00543212890625e-05, -0.0004138946533203125, -0.0001163482666015625, -0.0002918190439231694, -2.3841855067985307e-07, -0.019873809069395065, -1.1920928244535389e-07, -0.0002994537353515625, -0.1759347915649414, -0.009111404418945312, -0.00051116943359375, -1.9073486328125e-06, -1.4662741705251392e-05, 0.0, -0.0027348995208740234, -1.9073486328125e-06, -6.29425048828125e-05, -0.0001392364501953125, -0.0005799531936645508, -1.537799835205078e-05], "choice_history": [97, 285, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "add_buff", "<EOS>", 346, 69, 290, "Frozen", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "minion", "<EOS>", "card", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "heal", "<EOS>", 347, 78, 305, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template54", "hole0": "Frozen"}], "_type": "Template77", "hole1": "add_buff", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template67", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "card"}}], "hole3": "use", "hole0": "HolyNova", "_type": "Template5", "hole2": [{"hole2": "PRIEST", "_type": "Template31", "hole1": 5, "hole0": "Holy Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.091451783388081, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.add_buff(Buff(Frozen()))\n        for minion in minion.card:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"score_history": [-0.00014495849609375, -0.000240325927734375, -1.1920928244535389e-07, -1.2516897186287679e-05, -1.4305104514278355e-06, -5.721730849472806e-05, -1.3589850823336747e-05, -2.741813204920618e-06, -7.62939453125e-06, -0.001750946044921875, -0.0007781982421875, -1.311301275563892e-06, -0.00022029876708984375, -2.3841855067985307e-07, -1.9073486328125e-06, -3.4927710657939315e-05, 0.0, -0.0025997161865234375, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.6702880859375e-05, -2.622604142743512e-06, -2.0265579223632812e-06, -0.0031871795654296875, -4.76837158203125e-05, -1.52587890625e-05, -3.814697265625e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.7881393432617188e-05, -1.33514404296875e-05, -2.1457672119140625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000110626220703125, -0.0002193450927734375, -0.0015687942504882812, -7.62939453125e-06, -0.011283278465270996, 0.0, -0.0049724578857421875, -4.57763671875e-05, -0.0002880096435546875, -0.000377655029296875, -2.86102294921875e-05, 0.0, -0.0019457340240478516, -7.62939453125e-06, -0.0001506805419921875, -5.7220458984375e-06, -2.09808349609375e-05, -0.00830078125, -2.6702880859375e-05, -3.814697265625e-05, -1.1444091796875e-05, -0.000278472900390625, -3.814697265625e-06, -0.00017583370208740234, 0.0, -0.0031642913818359375, 0.0, -0.0008497238159179688, -7.62939453125e-06, -2.86102294921875e-05, -0.0001926422119140625, -0.00017547607421875, -0.00135040283203125, -0.00017547607421875, -0.00040827927296049893, -2.7418097943154862e-06, -0.5932491421699524, -1.0728830375228426e-06, -0.0005168914794921875, -3.1068763732910156, -0.12781429290771484, -0.005072593688964844, -3.4332275390625e-05, -6.556510470545618e-06, 0.0, -0.0011405943660065532, -1.9073486328125e-06, -0.0001354217529296875, -9.34600830078125e-05, -0.3215522766113281, 0.0, -0.2711946964263916, 0.0, -0.08485841751098633, 0.0, -0.0024509429931640625, -0.0001583099365234375, -0.00027942657470703125, -2.110004425048828e-05, -0.01786518096923828, -0.0017070770263671875, -0.005719184875488281, -1.9073486328125e-06, -0.0007078647613525391, 0.0, -0.0027027130126953125, -2.6702880859375e-05, -0.34064292907714844, 0.0, -0.009027242660522461, 0.0, -0.007200837135314941, -1.9073486328125e-06, -1.71661376953125e-05, -0.000286102294921875, -5.340576171875e-05, -0.0013065338134765625, -0.0005931854248046875, -0.016182303428649902, -1.1920928244535389e-07, -0.008261732757091522, -1.1920928244535389e-07, -0.0004329681396484375, -0.10844802856445312, -0.009062767028808594, -0.00051116943359375, -1.9073486328125e-06, -1.9788742065429688e-05, 0.0, -0.003176569938659668, -1.9073486328125e-06, -5.7220458984375e-05, -0.0002079010009765625, -0.000519871711730957, -1.3470649719238281e-05], "choice_history": [97, 285, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "heal", "<EOS>", 347, 72, 294, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", 50, 174, "self", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "heal", "<EOS>", 347, 78, 305, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"hole2": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Template57", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template67", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "HolyNova", "_type": "Template5", "hole2": [{"hole2": "PRIEST", "_type": "Template31", "hole1": 5, "hole0": "Holy Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.0957653282827735, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.heal(player.effective_heal_power(player.hero()), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"score_history": [-0.00014495849609375, -0.000240325927734375, -1.1920928244535389e-07, -1.2516897186287679e-05, -1.4305104514278355e-06, -5.721730849472806e-05, -1.3589850823336747e-05, -2.741813204920618e-06, -7.62939453125e-06, -0.001750946044921875, -0.0007781982421875, -1.311301275563892e-06, -0.00022029876708984375, -2.3841855067985307e-07, -1.9073486328125e-06, -3.4927710657939315e-05, 0.0, -0.0025997161865234375, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.6702880859375e-05, -2.622604142743512e-06, -2.0265579223632812e-06, -0.0031871795654296875, -4.76837158203125e-05, -1.52587890625e-05, -3.814697265625e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.7881393432617188e-05, -1.33514404296875e-05, -2.1457672119140625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000110626220703125, -0.0002193450927734375, -0.0015687942504882812, -7.62939453125e-06, -0.011283278465270996, 0.0, -0.0049724578857421875, -4.57763671875e-05, -0.0002880096435546875, -0.000377655029296875, -2.86102294921875e-05, 0.0, -0.0019457340240478516, -7.62939453125e-06, -0.0001506805419921875, -5.7220458984375e-06, -2.09808349609375e-05, -0.00830078125, -2.6702880859375e-05, -3.814697265625e-05, -1.1444091796875e-05, -0.000278472900390625, -3.814697265625e-06, -0.00017583370208740234, 0.0, -0.0031642913818359375, 0.0, -0.0008497238159179688, -7.62939453125e-06, -2.86102294921875e-05, -0.0001926422119140625, -0.00017547607421875, -0.00135040283203125, -0.00017547607421875, -0.00040827927296049893, -2.7418097943154862e-06, -0.5932491421699524, -1.0728830375228426e-06, -0.0005168914794921875, -4.265115261077881, -0.0004024505615234375, -0.018330343067646027, -8.34461570775602e-06, -3.814697265625e-06, -0.0001239776611328125, -0.00013113021850585938, -0.0003147125244140625, -0.009997367858886719, -0.00371551513671875, -0.0067138671875, -1.9073486328125e-06, -0.00802159309387207, 0.0, -0.0007476806640625, -2.09808349609375e-05, -0.010410308837890625, 0.0, -0.0008947849273681641, 0.0, -0.005941510200500488, -1.9073486328125e-06, -1.1444091796875e-05, -0.000232696533203125, -4.00543212890625e-05, -0.00078582763671875, -0.0021762847900390625, -0.007161498069763184, -1.1920928244535389e-07, -0.013962005265057087, -1.1920928244535389e-07, -0.0004978179931640625, -0.1137990951538086, -0.008591651916503906, -0.0005321502685546875, -1.9073486328125e-06, -1.5974044799804688e-05, 0.0, -0.0030268430709838867, -1.9073486328125e-06, -6.4849853515625e-05, -0.000186920166015625, -0.0005131959915161133, -1.3470649719238281e-05], "choice_history": [97, 285, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "heal", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "heal", "<EOS>", 347, 78, 305, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template67", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "HolyNova", "_type": "Template5", "hole2": [{"hole2": "PRIEST", "_type": "Template31", "hole1": 5, "hole0": "Holy Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.121830131257589, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.heal(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"score_history": [-0.00014495849609375, -0.000240325927734375, -1.1920928244535389e-07, -1.2516897186287679e-05, -1.4305104514278355e-06, -5.721730849472806e-05, -1.3589850823336747e-05, -2.741813204920618e-06, -7.62939453125e-06, -0.001750946044921875, -0.0007781982421875, -1.311301275563892e-06, -0.00022029876708984375, -2.3841855067985307e-07, -1.9073486328125e-06, -3.4927710657939315e-05, 0.0, -0.0025997161865234375, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.6702880859375e-05, -2.622604142743512e-06, -2.0265579223632812e-06, -0.0031871795654296875, -4.76837158203125e-05, -1.52587890625e-05, -3.814697265625e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.7881393432617188e-05, -1.33514404296875e-05, -2.1457672119140625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000110626220703125, -0.0002193450927734375, -0.0015687942504882812, -7.62939453125e-06, -0.011283278465270996, 0.0, -0.0049724578857421875, -4.57763671875e-05, -0.0002880096435546875, -0.000377655029296875, -2.86102294921875e-05, 0.0, -0.0019457340240478516, -7.62939453125e-06, -0.0001506805419921875, -5.7220458984375e-06, -2.09808349609375e-05, -0.00830078125, -2.6702880859375e-05, -3.814697265625e-05, -1.1444091796875e-05, -0.000278472900390625, -3.814697265625e-06, -0.00017583370208740234, 0.0, -0.0031642913818359375, 0.0, -0.0008497238159179688, -7.62939453125e-06, -2.86102294921875e-05, -0.0001926422119140625, -0.00017547607421875, -0.00135040283203125, -0.00017547607421875, -0.00040827927296049893, -2.7418097943154862e-06, -0.5932491421699524, -1.0728830375228426e-06, -0.0005168914794921875, -0.14786624908447266, -0.010369300842285156, -0.00022125244140625, 0.0, -8.58306884765625e-06, 0.0, -0.002590656280517578, -1.9073486328125e-06, -9.918212890625e-05, -0.0001659393310546875, -0.001160740852355957, -2.300739288330078e-05, -0.009556770324707031, -0.01251220703125, -0.00943756103515625, -1.9073486328125e-06, -0.006131887435913086, -1.1920928244535389e-07, -0.0013179779052734375, -1.9073486328125e-05, -0.011875152587890625, 0.0, -0.0008299350738525391, 0.0, -0.013344526290893555, 0.0, -1.71661376953125e-05, -0.00037384033203125, -4.1961669921875e-05, -0.0009822845458984375, -0.001384735107421875, -0.015816211700439453, -1.1920928244535389e-07, -0.014466245658695698, -1.1920928244535389e-07, -0.0005168914794921875, -4.2060651779174805, -0.00116729736328125, -0.02968403324484825, -1.4305104514278355e-06, -4.57763671875e-05, -4.00543212890625e-05, -0.00031697750091552734, -0.0001354217529296875], "choice_history": [97, 285, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "heal", "<EOS>", 347, 78, 305, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 50, 174, "self", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "heal", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template67", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "HolyNova", "_type": "Template5", "hole2": [{"hole2": "PRIEST", "_type": "Template31", "hole1": 5, "hole0": "Holy Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.137906520991294, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.heal(player.effective_heal_power(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.00014495849609375, -0.000240325927734375, -1.1920928244535389e-07, -1.2516897186287679e-05, -1.4305104514278355e-06, -5.721730849472806e-05, -1.3589850823336747e-05, -2.741813204920618e-06, -7.62939453125e-06, -0.001750946044921875, -0.0007781982421875, -1.311301275563892e-06, -0.00022029876708984375, -2.3841855067985307e-07, -1.9073486328125e-06, -3.4927710657939315e-05, 0.0, -0.0025997161865234375, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.6702880859375e-05, -2.622604142743512e-06, -2.0265579223632812e-06, -0.0031871795654296875, -4.76837158203125e-05, -1.52587890625e-05, -3.814697265625e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.7881393432617188e-05, -1.33514404296875e-05, -2.1457672119140625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000110626220703125, -0.0002193450927734375, -0.0015687942504882812, -7.62939453125e-06, -0.011283278465270996, 0.0, -0.0049724578857421875, -4.57763671875e-05, -0.0002880096435546875, -0.000377655029296875, -2.86102294921875e-05, 0.0, -0.0019457340240478516, -7.62939453125e-06, -0.0001506805419921875, -5.7220458984375e-06, -2.09808349609375e-05, -0.00830078125, -2.6702880859375e-05, -3.814697265625e-05, -1.1444091796875e-05, -0.000278472900390625, -3.814697265625e-06, -0.00017583370208740234, 0.0, -0.0031642913818359375, 0.0, -0.0008497238159179688, -7.62939453125e-06, -2.86102294921875e-05, -0.0001926422119140625, -0.00017547607421875, -0.00135040283203125, -0.00017547607421875, -0.00040827927296049893, -2.7418097943154862e-06, -0.5932491421699524, -1.0728830375228426e-06, -0.0005168914794921875, -0.14786624908447266, -0.010369300842285156, -0.00022125244140625, 0.0, -8.58306884765625e-06, 0.0, -0.002590656280517578, -1.9073486328125e-06, -9.918212890625e-05, -0.0001659393310546875, -0.001160740852355957, -2.300739288330078e-05, -0.009556770324707031, -0.01251220703125, -0.00943756103515625, -1.9073486328125e-06, -0.006131887435913086, -1.1920928244535389e-07, -0.0013179779052734375, -1.9073486328125e-05, -0.011875152587890625, 0.0, -0.0008299350738525391, 0.0, -0.013344526290893555, 0.0, -1.71661376953125e-05, -0.00037384033203125, -4.1961669921875e-05, -0.0009822845458984375, -0.001384735107421875, -0.015816211700439453, -1.1920928244535389e-07, -0.014466245658695698, -1.1920928244535389e-07, -0.0005168914794921875, -3.7473011016845703, -0.16309356689453125, -0.013667106628417969, -2.6702880859375e-05, -8.70227722771233e-06, 0.0, -0.0013339519500732422, -1.9073486328125e-06, -0.0001220703125, -7.2479248046875e-05, -0.1299734115600586, 0.0, -0.1294804811477661, 0.0, -0.09404683113098145, 0.0, -0.001262664794921875, -0.000335693359375, -0.0003871917724609375, -2.491474151611328e-05], "choice_history": [97, 285, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "heal", "<EOS>", 347, 78, 305, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 50, 174, "self", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "heal", "<EOS>", 347, 72, 294, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template67", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"hole2": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Template57", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "HolyNova", "_type": "Template5", "hole2": [{"hole2": "PRIEST", "_type": "Template31", "hole1": 5, "hole0": "Holy Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.18158912974485, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.heal(player.effective_heal_power(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(player.hero()), self)\n"}, {"score_history": [-0.00014495849609375, -0.000240325927734375, -1.1920928244535389e-07, -1.2516897186287679e-05, -1.4305104514278355e-06, -5.721730849472806e-05, -1.3589850823336747e-05, -2.741813204920618e-06, -7.62939453125e-06, -0.001750946044921875, -0.0007781982421875, -1.311301275563892e-06, -0.00022029876708984375, -2.3841855067985307e-07, -1.9073486328125e-06, -3.4927710657939315e-05, 0.0, -0.0025997161865234375, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.6702880859375e-05, -2.622604142743512e-06, -2.0265579223632812e-06, -0.0031871795654296875, -4.76837158203125e-05, -1.52587890625e-05, -3.814697265625e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.7881393432617188e-05, -1.33514404296875e-05, -2.1457672119140625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000110626220703125, -0.0002193450927734375, -0.0015687942504882812, -7.62939453125e-06, -0.011283278465270996, 0.0, -0.0049724578857421875, -4.57763671875e-05, -0.0002880096435546875, -0.000377655029296875, -2.86102294921875e-05, 0.0, -0.0019457340240478516, -7.62939453125e-06, -0.0001506805419921875, -5.7220458984375e-06, -2.09808349609375e-05, -0.00830078125, -2.6702880859375e-05, -3.814697265625e-05, -1.1444091796875e-05, -0.000278472900390625, -3.814697265625e-06, -0.00017583370208740234, 0.0, -0.0031642913818359375, 0.0, -0.0008497238159179688, -7.62939453125e-06, -2.86102294921875e-05, -0.0001926422119140625, -0.00017547607421875, -0.00135040283203125, -0.00017547607421875, -0.00040827927296049893, -2.7418097943154862e-06, -2.7311179637908936, -1.1920922133867862e-06, -2.288818359375e-05, -0.006184577941894531, -0.00382232666015625, -0.18606016039848328, -0.0059871673583984375, -0.04705238342285156, -0.000431060791015625, -1.1444091796875e-05, -1.9073486328125e-06, -0.0006500482559204102, 0.0, -1.765768051147461, -0.000102996826171875, -0.0040503740310668945, -9.5367431640625e-06, -0.0002765655517578125, -0.0023899078369140625, -5.91278076171875e-05, -0.0002689361572265625, -0.0001125335693359375, -0.006443500053137541, -2.3841855067985307e-07, -0.029774373397231102, -1.1920928244535389e-07, -7.2479248046875e-05, -0.4499025344848633, -0.013882637023925781, -0.0001220703125, -1.9073486328125e-06, -4.625318615580909e-05, 0.0, -0.001726984977722168, 0.0, -6.67572021484375e-05, -0.000591278076171875, -0.00032258033752441406, -7.748603820800781e-06], "choice_history": [97, 285, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "add_buff", "<EOS>", 346, 69, 290, "Frozen", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 21, 174, "targets", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "heal", "<EOS>", 347, 78, 305, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template54", "hole0": "Frozen"}], "_type": "Template77", "hole1": "add_buff", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template67", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Name", "id": "targets"}}], "hole3": "use", "hole0": "HolyNova", "_type": "Template5", "hole2": [{"hole2": "PRIEST", "_type": "Template31", "hole1": 5, "hole0": "Holy Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.302892345816005, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.add_buff(Buff(Frozen()))\n        for minion in targets:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"score_history": [-0.00014495849609375, -0.000240325927734375, -1.1920928244535389e-07, -1.2516897186287679e-05, -1.4305104514278355e-06, -5.721730849472806e-05, -1.3589850823336747e-05, -2.741813204920618e-06, -7.62939453125e-06, -0.001750946044921875, -0.0007781982421875, -1.311301275563892e-06, -0.00022029876708984375, -2.3841855067985307e-07, -1.9073486328125e-06, -3.4927710657939315e-05, 0.0, -0.0025997161865234375, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.6702880859375e-05, -2.622604142743512e-06, -2.0265579223632812e-06, -0.0031871795654296875, -4.76837158203125e-05, -1.52587890625e-05, -3.814697265625e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.7881393432617188e-05, -1.33514404296875e-05, -2.1457672119140625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000110626220703125, -0.0002193450927734375, -0.0015687942504882812, -7.62939453125e-06, -0.011283278465270996, 0.0, -0.0049724578857421875, -4.57763671875e-05, -0.0002880096435546875, -0.000377655029296875, -2.86102294921875e-05, 0.0, -0.0019457340240478516, -7.62939453125e-06, -0.0001506805419921875, -5.7220458984375e-06, -2.09808349609375e-05, -0.00830078125, -2.6702880859375e-05, -3.814697265625e-05, -1.1444091796875e-05, -0.000278472900390625, -3.814697265625e-06, -0.00017583370208740234, 0.0, -0.0031642913818359375, 0.0, -0.0008497238159179688, -7.62939453125e-06, -2.86102294921875e-05, -0.0001926422119140625, -0.00017547607421875, -0.00135040283203125, -0.00017547607421875, -0.00040827927296049893, -2.7418097943154862e-06, -1.0029481649398804, 0.0, -0.0001163482666015625, -0.0008487701416015625, -0.0001220703125, -0.010714718140661716, -1.9550132492440753e-05, -3.814697265625e-06, -0.00035858154296875, -0.0005812644958496094, -0.000476837158203125, -0.006285667419433594, -0.0032901763916015625, -0.04272937774658203, -3.814697265625e-06, -0.026123404502868652, 0.0, -0.0006656646728515625, -5.14984130859375e-05, -0.03093719482421875, 0.0, -0.0013259649276733398, 0.0, -0.008534669876098633, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002460479736328125, -4.00543212890625e-05, -0.000659942626953125, -0.003162384033203125, -0.003897428512573242, -1.1920928244535389e-07, -0.01374754961580038, -1.1920928244535389e-07, -0.000507354736328125, -3.791301727294922, -0.15814876556396484, -0.012179374694824219, -2.86102294921875e-05, -1.060962586052483e-05, 0.0, -0.0013419389724731445, -1.9073486328125e-06, -0.0001201629638671875, -7.05718994140625e-05, -0.13788414001464844, 0.0, -0.12885868549346924, 0.0, -0.0943138599395752, 0.0, -0.0012607574462890625, -0.000339508056640625, -0.00038909912109375, -2.491474151611328e-05], "choice_history": [97, 285, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "heal", "<EOS>", 347, 72, 294, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"hole2": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Template57", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "HolyNova", "_type": "Template5", "hole2": [{"hole2": "PRIEST", "_type": "Template31", "hole1": 5, "hole0": "Holy Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.53023817966352, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(player.hero()), self)\n"}, {"score_history": [-0.00014495849609375, -0.000240325927734375, -1.1920928244535389e-07, -1.2516897186287679e-05, -1.4305104514278355e-06, -5.721730849472806e-05, -1.3589850823336747e-05, -2.741813204920618e-06, -7.62939453125e-06, -0.001750946044921875, -0.0007781982421875, -1.311301275563892e-06, -0.00022029876708984375, -2.3841855067985307e-07, -1.9073486328125e-06, -3.4927710657939315e-05, 0.0, -0.0025997161865234375, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.6702880859375e-05, -2.622604142743512e-06, -2.0265579223632812e-06, -0.0031871795654296875, -4.76837158203125e-05, -1.52587890625e-05, -3.814697265625e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.7881393432617188e-05, -1.33514404296875e-05, -2.1457672119140625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000110626220703125, -0.0002193450927734375, -0.0015687942504882812, -7.62939453125e-06, -0.011283278465270996, 0.0, -0.0049724578857421875, -4.57763671875e-05, -0.0002880096435546875, -0.000377655029296875, -2.86102294921875e-05, 0.0, -0.0019457340240478516, -7.62939453125e-06, -0.0001506805419921875, -5.7220458984375e-06, -2.09808349609375e-05, -0.00830078125, -2.6702880859375e-05, -3.814697265625e-05, -1.1444091796875e-05, -0.000278472900390625, -3.814697265625e-06, -0.00017583370208740234, 0.0, -0.0031642913818359375, 0.0, -0.0008497238159179688, -7.62939453125e-06, -2.86102294921875e-05, -0.0001926422119140625, -0.00017547607421875, -0.00135040283203125, -0.00017547607421875, -0.00040827927296049893, -2.7418097943154862e-06, -0.5932491421699524, -1.0728830375228426e-06, -0.0005168914794921875, -0.14786624908447266, -0.010369300842285156, -0.00022125244140625, 0.0, -8.58306884765625e-06, 0.0, -0.002590656280517578, -1.9073486328125e-06, -9.918212890625e-05, -0.0001659393310546875, -0.001160740852355957, -2.300739288330078e-05, -0.009556770324707031, -0.01251220703125, -0.00943756103515625, -1.9073486328125e-06, -0.006131887435913086, -1.1920928244535389e-07, -0.0013179779052734375, -1.9073486328125e-05, -0.011875152587890625, 0.0, -0.0008299350738525391, 0.0, -0.013344526290893555, 0.0, -1.71661376953125e-05, -0.00037384033203125, -4.1961669921875e-05, -0.0009822845458984375, -0.001384735107421875, -0.015816211700439453, -1.1920928244535389e-07, -0.014466245658695698, -1.1920928244535389e-07, -0.0005168914794921875, -4.253057479858398, -0.0002803802490234375, -0.5247264504432678, -5.984306335449219e-05, -0.02708911895751953, -0.00116729736328125, -0.0023736953735351562, -3.814697265625e-06], "choice_history": [97, 285, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "heal", "<EOS>", 347, 78, 305, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 50, 174, "self", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "heal", "<EOS>", 347, 53, 183, "card_drawn", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Template67", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, {"target": {"_type": "Name", "id": "minion"}, "body": [{"hole2": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "heal", "hole0": {"_type": "Name", "id": "minion"}}], "_type": "For", "iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}}], "hole3": "use", "hole0": "HolyNova", "_type": "Template5", "hole2": [{"hole2": "PRIEST", "_type": "Template31", "hole1": 5, "hole0": "Holy Nova"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.709208432018556, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.heal(player.effective_heal_power(2), self)\n        for minion in player.minions:\n            minion.heal('card_drawn', self)\n"}]}
{"index": 51, "beams": [{"score_history": [-0.000606536865234375, -5.91278076171875e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.000179290771484375, -1.1205610462639015e-05, -9.536738616588991e-07, -1.9430925021879375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.82436691224575e-05, -5.543231964111328e-05, -2.431869324936997e-05, -0.000347137451171875, -0.012582778930664062, -0.000179290771484375, -8.4638240878121e-06, -6.771086918888614e-05, -4.41074053014745e-06, -7.62939453125e-06, -9.536737479720614e-07, 0.0, -0.0023860931396484375, 0.0, -0.0001857280731201172, 0.0, -0.0003337860107421875, -0.000202178955078125, -4.38690185546875e-05, -0.00027489662170410156, -7.62939453125e-06, -0.0005168914794921875, -2.09808349609375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -0.00044524669647216797, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -0.0008907051524147391, -1.7881377516459906e-06, -0.0002727508544921875, -3.24249267578125e-05, -2.6702880859375e-05, 0.0, -0.0001068115234375, 0.0, -0.0003126859664916992, -2.0265579223632812e-06, -3.123283022432588e-05, -5.245195097813848e-06, -0.00027736922493204474, -5.960462772236497e-07, -0.000270843505859375, -0.000492095947265625, -3.814697265625e-05, -0.008649230003356934, -8.344646857949556e-07, -3.814697265625e-05, -2.86102294921875e-05, -0.0013551379088312387, -0.0002874133933801204], "choice_history": [96, 173, 358, 105, 152, "Holy", "Smite", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Holy", " ", "Smite", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Holy Smite", "_type": "Template14", "hole2": "PRIEST", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HolySmite"}], "_type": "Module"}, "score": -0.032064746599701266, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.000606536865234375, -5.91278076171875e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.000179290771484375, -1.1205610462639015e-05, -9.536738616588991e-07, -1.9430925021879375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.82436691224575e-05, -5.543231964111328e-05, -2.431869324936997e-05, -0.000347137451171875, -0.012582778930664062, -0.000179290771484375, -8.4638240878121e-06, -6.771086918888614e-05, -4.41074053014745e-06, -7.62939453125e-06, -9.536737479720614e-07, 0.0, -0.0023860931396484375, 0.0, -0.0001857280731201172, 0.0, -0.0003337860107421875, -0.000202178955078125, -4.38690185546875e-05, -0.00027489662170410156, -7.62939453125e-06, -0.0005168914794921875, -2.09808349609375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -0.00044524669647216797, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -0.0008907051524147391, -1.7881377516459906e-06, -0.0002727508544921875, -3.24249267578125e-05, -2.6702880859375e-05, 0.0, -0.0001068115234375, 0.0, -0.0003126859664916992, -2.0265579223632812e-06, -3.123283022432588e-05, -5.245195097813848e-06, -0.00027736922493204474, -5.960462772236497e-07, -0.000270843505859375, -0.000492095947265625, -3.814697265625e-05, -4.755491256713867, -1.9073468138230965e-06, -5.7220458984375e-06, -5.91278076171875e-05, -0.0009279188816435635, -0.00033676624298095703], "choice_history": [96, 173, 358, 105, 152, "Holy", "Smite", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Holy", " ", "Smite", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Holy Smite", "_type": "Template14", "hole2": "PRIEST", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"_type": "Template61", "hole0": 1}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HolySmite"}], "_type": "Module"}, "score": -4.77852807266612, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"score_history": [-0.000606536865234375, -5.91278076171875e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.000179290771484375, -1.1205610462639015e-05, -9.536738616588991e-07, -1.9430925021879375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.82436691224575e-05, -5.543231964111328e-05, -2.431869324936997e-05, -0.000347137451171875, -0.012582778930664062, -0.000179290771484375, -8.4638240878121e-06, -6.771086918888614e-05, -4.41074053014745e-06, -7.62939453125e-06, -9.536737479720614e-07, 0.0, -6.420267105102539, 0.0, -8.046627044677734e-05, -1.9073486328125e-06, -0.0003147125244140625, -0.000186920166015625, -4.9591064453125e-05, -0.00022161006927490234, -3.814697265625e-06, -0.0005359649658203125, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -4.57763671875e-05, -3.814697265625e-06, -0.00048100948333740234, -2.288818359375e-05, -1.52587890625e-05, 0.0, -0.0008702019695192575, -1.7881377516459906e-06, -0.000270843505859375, -3.24249267578125e-05, -2.6702880859375e-05, 0.0, -0.000118255615234375, 0.0, -0.0003949403762817383, -2.0265579223632812e-06, -4.863738649873994e-05, -5.364403477869928e-06, -0.0002470968756824732, -5.960462772236497e-07, -0.0002727508544921875, -0.0005207061767578125, -3.62396240234375e-05, -0.008664369583129883, -8.344646857949556e-07, -3.62396240234375e-05, -2.6702880859375e-05, -0.0013759946450591087, -0.0003007648338098079], "choice_history": [96, 173, 358, 105, 152, "Holy", "Smite", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Holy", " ", "Smite", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Holy Smite", "_type": "Template14", "hole2": "ROGUE", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HolySmite"}], "_type": "Module"}, "score": -6.449934674833514, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.000606536865234375, -5.91278076171875e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.000179290771484375, -1.1205610462639015e-05, -9.536738616588991e-07, -1.9430925021879375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.82436691224575e-05, -5.543231964111328e-05, -2.431869324936997e-05, -0.000347137451171875, -4.979066848754883, -0.0002765655517578125, -2.9801984055666253e-05, -6.687641143798828e-05, -4.8636207793606445e-05, -1.9073486328125e-06, -1.4901032955094706e-05, -2.2649765014648438e-06, -0.008302688598632812, 0.0, -0.0002498626708984375, -1.33514404296875e-05, -0.017963409423828125, -2.288818359375e-05, -0.00025177001953125, -5.14984130859375e-05, -0.00040435791015625, 0.0, -0.0014632940292358398, -9.5367431640625e-06, -0.00034332275390625, -1.9073486328125e-06, -0.0018182992935180664, -1.9073486328125e-06, -0.7833023071289062, -6.67572021484375e-05, -0.16161632537841797, -0.000896453857421875, -0.5122432708740234, 0.0, -0.028919219970703125, -0.0002269744873046875, -0.0001277923583984375, 0.0, -0.0001735687255859375, 0.0, -0.0016690492630004883, 0.0, -1.0013580322265625e-05, -1.7881377516459906e-06, -0.00020181172294542193, -3.576278118089249e-07, -0.0002002716064453125, -0.000171661376953125, -1.33514404296875e-05, -0.008279204368591309, -7.152555099310121e-07, -5.53131103515625e-05, -1.71661376953125e-05, -0.003073957748711109, -0.0002481936535332352], "choice_history": [96, 173, 358, 105, 152, "Holy", "Smite", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Holy", " ", "Smite", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "overload", "<EOS>", 23, 179, "1", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_spell_target", "hole3": "FREE", "hole0": "Holy Smite", "_type": "Template4", "hole2": "PRIEST", "hole7": "overload", "hole8": {"n": 1, "_type": "Num"}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 1}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HolySmite"}], "_type": "Module"}, "score": -6.513474760622046, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.000606536865234375, -5.91278076171875e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.000179290771484375, -1.1205610462639015e-05, -9.536738616588991e-07, -1.9430925021879375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.82436691224575e-05, -5.543231964111328e-05, -2.431869324936997e-05, -0.000347137451171875, -6.4688286781311035, -0.08199214935302734, -2.0861407392658293e-05, -5.0663944421103224e-05, -5.125986263010418e-06, -1.9073486328125e-06, -7.152555099310121e-07, 0.0, -0.0030117034912109375, 0.0, -0.014094352722167969, -8.392333984375e-05, -8.96453857421875e-05, 0.0, -0.000682830810546875, 0.0, -0.02526378631591797, 0.0, -5.030632019042969e-05, -4.529942543740617e-06, -0.00024805066641420126, -5.960462772236497e-07, -0.0004405975341796875, -0.000324249267578125, -1.1444091796875e-05, -0.008622884750366211, -1.4305104514278355e-06, -3.4332275390625e-05, -1.9073486328125e-05, -0.0024210254196077585, -0.00020086758013349026], "choice_history": [96, 173, 358, 105, 152, "Holy", "Smite", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 116, 196, "Holy", " ", "Smite", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PRIEST", "_type": "Template12", "hole1": 1, "hole0": "Holy Smite"}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HolySmite"}], "_type": "Module"}, "score": -6.608059070546858, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.000606536865234375, -5.91278076171875e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.000179290771484375, -1.1205610462639015e-05, -9.536738616588991e-07, -1.9430925021879375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.82436691224575e-05, -5.543231964111328e-05, -2.431869324936997e-05, -0.000347137451171875, -4.979066848754883, -0.0002765655517578125, -2.9801984055666253e-05, -6.687641143798828e-05, -4.8636207793606445e-05, -1.9073486328125e-06, -1.4901032955094706e-05, -2.2649765014648438e-06, -0.008302688598632812, 0.0, -0.0002498626708984375, -1.33514404296875e-05, -0.017963409423828125, -2.288818359375e-05, -0.00025177001953125, -5.14984130859375e-05, -0.00040435791015625, 0.0, -0.0014632940292358398, -9.5367431640625e-06, -0.00034332275390625, -1.9073486328125e-06, -0.0018182992935180664, -1.9073486328125e-06, -0.7833023071289062, -6.67572021484375e-05, -0.16161632537841797, -0.000896453857421875, -0.9167504906654358, 0.0, -0.009731292724609375, -0.0001354217529296875, -0.000148773193359375, 0.0, -0.00014495849609375, 0.0, -0.018083691596984863, 0.0, -1.0013580322265625e-05, -3.2186455882765586e-06, -0.0001962077949428931, -2.3841855067985307e-07, -0.000133514404296875, -0.0002079010009765625, -1.71661376953125e-05, -0.008427858352661133, -5.960462772236497e-07, -4.9591064453125e-05, -1.71661376953125e-05, -0.0021950663067400455, -0.000844716967549175], "choice_history": [96, 173, 358, 105, 152, "Holy", "Smite", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Holy", " ", "Smite", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "overload", "<EOS>", 23, 179, "2", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_spell_target", "hole3": "FREE", "hole0": "Holy Smite", "_type": "Template4", "hole2": "PRIEST", "hole7": "overload", "hole8": {"n": 2, "_type": "Num"}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 1}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HolySmite"}], "_type": "Module"}, "score": -6.91493896246314, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.000606536865234375, -5.91278076171875e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.000179290771484375, -1.1205610462639015e-05, -9.536738616588991e-07, -1.9430925021879375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.82436691224575e-05, -5.543231964111328e-05, -2.431869324936997e-05, -0.000347137451171875, -0.012582778930664062, -0.000179290771484375, -8.4638240878121e-06, -6.771086918888614e-05, -4.41074053014745e-06, -7.62939453125e-06, -9.536737479720614e-07, 0.0, -0.0023860931396484375, 0.0, -0.0001857280731201172, 0.0, -0.0003337860107421875, -0.000202178955078125, -4.38690185546875e-05, -0.00027489662170410156, -7.62939453125e-06, -0.0005168914794921875, -2.09808349609375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -0.00044524669647216797, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -0.0008907051524147391, -1.7881377516459906e-06, -0.0002727508544921875, -3.24249267578125e-05, -2.6702880859375e-05, 0.0, -0.0001068115234375, 0.0, -0.0003126859664916992, -2.0265579223632812e-06, -3.123283022432588e-05, -5.245195097813848e-06, -0.00027736922493204474, -5.960462772236497e-07, -0.000270843505859375, -0.000492095947265625, -3.814697265625e-05, -0.008649230003356934, -8.344646857949556e-07, -3.814697265625e-05, -2.86102294921875e-05, -7.048392295837402, -0.00011956691014347598], "choice_history": [96, 173, 358, 105, 152, "Holy", "Smite", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Holy", " ", "Smite", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "damage", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Holy Smite", "_type": "Template14", "hole2": "PRIEST", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "damage"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HolySmite"}], "_type": "Module"}, "score": -7.078934058045036, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), damage)\n"}, {"score_history": [-0.000606536865234375, -5.91278076171875e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.000179290771484375, -1.1205610462639015e-05, -9.536738616588991e-07, -1.9430925021879375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.82436691224575e-05, -5.543231964111328e-05, -2.431869324936997e-05, -0.000347137451171875, -7.815543174743652, -0.0063495635986328125, -1.955016705323942e-05, -5.698204040527344e-05, -4.0531076592742465e-06, -5.7220458984375e-06, -5.483608674694551e-06, 0.0, -0.0144195556640625, -5.7220458984375e-06, -0.117279052734375, -1.9073486328125e-06, -0.003998756408691406, -3.814697265625e-06, -0.0110015869140625, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.0030672550201416016, -5.7220458984375e-06, -8.58306884765625e-05, -3.814697265625e-06, -0.0013609149027615786, -3.3378591979271732e-06, -0.0001926422119140625, -3.0517578125e-05, -4.1961669921875e-05, 0.0, -0.0001316070556640625, 0.0, -0.000853419303894043, -1.9073486328125e-06, -0.00015807151794433594, -5.483612312673358e-06, -0.0002961978316307068, -5.960462772236497e-07, -0.0003108978271484375, -0.0004024505615234375, -2.288818359375e-05, -0.01043856143951416, -8.344646857949556e-07, -2.288818359375e-05, -2.47955322265625e-05, -0.0017857637722045183, -0.0001358984736725688], "choice_history": [96, 173, 358, 105, 152, "Holy", "Smite", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 137, 326, "Holy", " ", "Smite", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "FREE", "hole0": "Holy Smite", "_type": "Template8", "hole2": "PRIEST", "hole1": 1}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HolySmite"}], "_type": "Module"}, "score": -7.989645873557436, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, FREE=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.000606536865234375, -5.91278076171875e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.000179290771484375, -1.1205610462639015e-05, -9.536738616588991e-07, -1.9430925021879375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.82436691224575e-05, -5.543231964111328e-05, -2.431869324936997e-05, -0.000347137451171875, -7.421417713165283, -0.0009365081787109375, -0.2652549743652344, -0.000812530517578125, -4.00543212890625e-05, 0.0, -0.0014555449597537518, -1.9073486328125e-06, -1.6808504369691946e-05, -1.1920928244535389e-07, -3.8742997276131064e-05, -2.3841855067985307e-07, -0.0007699679117649794, -3.576278118089249e-07, -0.44635581970214844, -5.53131103515625e-05, -0.00034332275390625, -1.9073486328125e-06, -0.005001068115234375, 0.0, -0.008132696151733398, -2.384185791015625e-06, -2.2292111680144444e-05, -4.0531076592742465e-06, -5.0782367907231674e-05, -2.145764938177308e-06, -0.0005016326904296875, -0.0006122589111328125, -1.71661376953125e-05, -0.0073844194412231445, -1.311301275563892e-06, -3.24249267578125e-05, -1.71661376953125e-05, -0.0030408231541514397, -0.00025641906540840864], "choice_history": [96, 173, 358, 105, 152, "Holy", "Smite", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HolySmite"}], "_type": "Module"}, "score": -8.16413421317511, "inferred_code": "class HolySmite(SpellCard):\n    super().use(player, game)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.000606536865234375, -5.91278076171875e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.000179290771484375, -1.1205610462639015e-05, -9.536738616588991e-07, -1.9430925021879375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.82436691224575e-05, -5.543231964111328e-05, -2.431869324936997e-05, -0.000347137451171875, -0.012582778930664062, -0.000179290771484375, -8.4638240878121e-06, -6.771086918888614e-05, -4.41074053014745e-06, -7.62939453125e-06, -9.536737479720614e-07, 0.0, -8.221641540527344, 0.0, -0.00016140934894792736, 0.0, -0.0003376007080078125, -0.0002384185791015625, -3.4332275390625e-05, -0.00030934810638427734, -5.7220458984375e-06, -0.0005340576171875, -2.09808349609375e-05, -2.86102294921875e-05, 0.0, -4.9591064453125e-05, -5.7220458984375e-06, -0.0004451274871826172, -2.288818359375e-05, -1.52587890625e-05, 0.0, -0.0009280138183385134, -1.7881377516459906e-06, -0.00028228759765625, -3.24249267578125e-05, -2.6702880859375e-05, 0.0, -0.000110626220703125, 0.0, -0.00036275386810302734, -1.9073486328125e-06, -3.314017885713838e-05, -5.245195097813848e-06, -0.0002760582137852907, -5.960462772236497e-07, -0.0002727508544921875, -0.00049591064453125, -3.814697265625e-05, -0.008614778518676758, -8.344646857949556e-07, -3.814697265625e-05, -2.6702880859375e-05, -0.0013628830201923847, -0.00029087046277709305], "choice_history": [96, 173, 358, 105, 152, "Holy", "Smite", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Holy", " ", "Smite", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": "FREE", "hole0": "Holy Smite", "_type": "Template14", "hole2": "WARRIOR", "hole5": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole1": 1}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HolySmite"}], "_type": "Module"}, "score": -8.251457754435307, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.000606536865234375, -5.91278076171875e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.000179290771484375, -1.1205610462639015e-05, -9.536738616588991e-07, -1.9430925021879375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.82436691224575e-05, -5.543231964111328e-05, -2.431869324936997e-05, -0.000347137451171875, -4.979066848754883, -0.0002765655517578125, -2.9801984055666253e-05, -6.687641143798828e-05, -4.8636207793606445e-05, -1.9073486328125e-06, -1.4901032955094706e-05, -2.2649765014648438e-06, -0.008302688598632812, 0.0, -0.0002498626708984375, -1.33514404296875e-05, -0.017963409423828125, -2.288818359375e-05, -0.00025177001953125, -5.14984130859375e-05, -0.00040435791015625, 0.0, -0.0014632940292358398, -9.5367431640625e-06, -0.00034332275390625, -1.9073486328125e-06, -0.0018182992935180664, -1.9073486328125e-06, -1.254380226135254, -1.9073486328125e-06, -0.06057167053222656, -0.0026073455810546875, -0.011183738708496094, -5.14984130859375e-05, -0.0363217368721962, -0.0008484165882691741, -0.028875350952148438, -0.000614166259765625, -0.0007457733154296875, -0.000240325927734375, -0.002117156982421875, -9.5367431640625e-06, -0.036581993103027344, -0.0001010894775390625, -0.010570526123046875, -3.814697265625e-06, -0.0007011884008534253, -2.0265373677830212e-05, -0.010132047347724438, -6.675708846159978e-06, -1.9073486328125e-06, -0.3458375930786133, -1.9073486328125e-06, -0.5485019683837891, -0.0005512237548828125, -0.0042629241943359375, -1.1444091796875e-05, -0.004606586880981922, -0.0005098473629914224, -0.13671153783798218, -2.2649765014648438e-06, -0.7953157424926758, -0.004116058349609375, -0.00012969970703125, -4.38690185546875e-05, -0.03879060223698616, -0.0006622279761359096, -0.039834655821323395, -5.960462772236497e-07, -0.06452560424804688, -0.0001888275146484375, -0.0001583099365234375, -3.814697265625e-06, -0.0001277923583984375, 0.0, -0.002947568893432617, 0.0, -1.2040138244628906e-05, -1.5497195136049413e-06, -4.6490677050314844e-05, -1.1920928244535389e-07, -0.0002498626708984375, -0.0006008148193359375, -1.52587890625e-05, -0.013296127319335938, -7.152555099310121e-07, -2.09808349609375e-05, -1.71661376953125e-05, -0.002459506969898939, -0.00020706643408630043], "choice_history": [96, 173, 358, 105, 152, "Holy", "Smite", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Holy", " ", "Smite", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 167, 0, 282, "target", "<EOS>", 15, 146, 2, 347, 46, 153, 13, 143, 21, 174, "target", "<EOS>", "health", "<EOS>", 343, 12, 346, 85, 317, 21, 174, "target", "<EOS>", "calculate_max_health", "<EOS>", 85, 317, 21, 174, "target", "<EOS>", "spell_targetable", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_spell_target", "hole3": "FREE", "hole0": "Holy Smite", "_type": "Template4", "hole2": "PRIEST", "hole7": "filter_func", "hole8": {"body": {"values": [{"comparators": [{"_type": "Template76", "hole1": "calculate_max_health", "hole0": {"_type": "Name", "id": "target"}}], "_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}}, {"_type": "Template76", "hole1": "spell_targetable", "hole0": {"_type": "Name", "id": "target"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "target"}}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 1}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HolySmite"}], "_type": "Module"}, "score": -8.473417959731869, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, filter_func=lambda target: target.health !=\n            target.calculate_max_health() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.000606536865234375, -5.91278076171875e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.000179290771484375, -1.1205610462639015e-05, -9.536738616588991e-07, -1.9430925021879375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.82436691224575e-05, -5.543231964111328e-05, -2.431869324936997e-05, -0.000347137451171875, -4.979066848754883, -0.0002765655517578125, -2.9801984055666253e-05, -6.687641143798828e-05, -4.8636207793606445e-05, -1.9073486328125e-06, -1.4901032955094706e-05, -2.2649765014648438e-06, -0.008302688598632812, 0.0, -0.0002498626708984375, -1.33514404296875e-05, -0.017963409423828125, -2.288818359375e-05, -0.00025177001953125, -5.14984130859375e-05, -0.00040435791015625, 0.0, -0.0014632940292358398, -9.5367431640625e-06, -0.00034332275390625, -1.9073486328125e-06, -0.0018182992935180664, -1.9073486328125e-06, -1.254380226135254, -1.9073486328125e-06, -0.06057167053222656, -0.0026073455810546875, -0.011183738708496094, -5.14984130859375e-05, -0.0363217368721962, -0.0008484165882691741, -0.028875350952148438, -0.000614166259765625, -0.0007457733154296875, -0.000240325927734375, -0.002117156982421875, -9.5367431640625e-06, -0.036581993103027344, -0.0001010894775390625, -0.010570526123046875, -3.814697265625e-06, -0.0007011884008534253, -2.0265373677830212e-05, -0.010132047347724438, -6.675708846159978e-06, -1.9073486328125e-06, -0.3458375930786133, -1.9073486328125e-06, -1.1233892440795898, -9.5367431640625e-06, -0.06955365091562271, -2.145764938177308e-06, -0.048020362854003906, -0.0003490447998046875, -0.052742958068847656, -0.0003795623779296875, -0.0004596710205078125, -1.33514404296875e-05, -0.21584902703762054, -1.9430925021879375e-05, -0.05539345741271973, -1.6689286894688848e-06, -1.9073486328125e-06, -0.5028495788574219, 0.0, -0.3013496398925781, -0.001415252685546875, -0.022676467895507812, -1.1444091796875e-05, -0.05673752352595329, -0.000271521887043491, -0.056858040392398834, -2.1457672119140625e-06, -0.018866539001464844, -7.82012939453125e-05, -0.0002765655517578125, -3.814697265625e-06, -0.0002288818359375, 0.0, -0.0007977485656738281, 0.0, -1.1801719665527344e-05, -8.344646857949556e-07, -9.226457041222602e-05, -1.1920928244535389e-07, -0.0002880096435546875, -0.000659942626953125, -1.1444091796875e-05, -0.012856483459472656, -8.344646857949556e-07, -2.47955322265625e-05, -1.71661376953125e-05, -0.0026178413536399603, -0.00015676017210353166], "choice_history": [96, 173, 358, 105, 152, "Holy", "Smite", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Holy", " ", "Smite", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 167, 0, 282, "target", "<EOS>", 15, 146, 2, 347, 46, 153, 13, 143, 21, 174, "target", "<EOS>", "health", "<EOS>", 343, 12, 346, 50, 174, "targets", "<EOS>", 46, 153, 13, 143, 21, 174, "target", "<EOS>", "health", "<EOS>", 343, 12, 346, 85, 317, 21, 174, "target", "<EOS>", "calculate_max_health", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_spell_target", "hole3": "FREE", "hole0": "Holy Smite", "_type": "Template4", "hole2": "PRIEST", "hole7": "filter_func", "hole8": {"body": {"values": [{"comparators": [{"_type": "Name", "id": "targets"}], "_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}}, {"comparators": [{"_type": "Template76", "hole1": "calculate_max_health", "hole0": {"_type": "Name", "id": "target"}}], "_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "target"}}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 1}, {"hole2": [{"_type": "Template61", "hole0": 2}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "HolySmite"}], "_type": "Module"}, "score": -9.359833777082024, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, filter_func=lambda target: target.health !=\n            targets and target.health != target.calculate_max_health())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score_history": [-0.000606536865234375, -5.91278076171875e-05, -9.5367431640625e-06, -10.251578330993652, -2.2186594009399414, -0.027054661884903908, -0.00977648701518774, -0.003075157990679145, -1.6927711840253323e-05, -6.079655122448457e-06, -0.06044483184814453, 0.0], "choice_history": [96, 173, 358, 127, 230, "Holy", "Smite", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>"], "model_output": {"body": [{"hole2": "ROGUE", "_type": "Template31", "hole1": 1, "hole0": "HolySmite"}], "_type": "Module"}, "score": -12.571287079455487, "inferred_code": "super().__init__('HolySmite', 1, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON)\n"}, {"score_history": [-0.000606536865234375, -5.91278076171875e-05, -9.5367431640625e-06, -16.839345932006836], "choice_history": [96, 173, 358, 104], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score": -16.84002113342285, "inferred_code": "break\n"}, {"score_history": [-0.000606536865234375, -5.91278076171875e-05, -21.883169174194336], "choice_history": [96, 173, 357], "model_output": {"body": [], "_type": "Module"}, "score": -21.883834838867188, "inferred_code": ""}]}
{"index": 52, "beams": [{"score_history": [-0.03239154815673828, -4.1961669921875e-05, -2.86102294921875e-05, -0.00017547607421875, -1.9073486328125e-05, -0.00391217740252614, -0.00099333212710917, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.5018234737217426e-06, -2.4318444047821686e-05, -5.841255187988281e-06, -0.0001430511474609375, -0.001415252685546875, -3.814697265625e-05, -7.152555099310121e-07, -7.748603820800781e-06, -0.00025975704193115234, 0.0, -0.002609729766845703, -5.7220458984375e-06, -0.0019227266311645508, -1.9073486328125e-06, -0.0015010833740234375, -3.576278118089249e-07, -0.0003337860107421875, 0.0, -5.650520324707031e-05, -2.1457672119140625e-06, -0.0865793228149414, -3.814697265625e-06, -0.014119386672973633, -5.7220458984375e-06, -0.42388343811035156, -0.018413543701171875, -0.006604424677789211, -0.021991968154907227, -0.0006070137023925781, -0.0012341737747192383, -1.4066597032069694e-05, -0.000133514404296875, -0.0019159317016601562, -5.7220458984375e-06, -0.008627671748399734, -1.9073486328125e-06, -0.005172252655029297, -0.01694774627685547, -1.33514404296875e-05, -0.0011203765170648694, -3.814697265625e-06, -0.0058345794677734375, -0.001605987548828125, -0.00115966796875, -7.677030225750059e-05, -0.00027251243591308594, -0.00010323524475097656, -0.010598182678222656, -2.110004425048828e-05, -8.392333984375e-05, -0.0047740936279296875, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.00021946430206298828, -0.0006866455078125, -0.0003376007080078125, 0.0, -0.000362396240234375, -0.0016908645629882812, 0.0, -0.023004531860351562, 0.0, -0.0013513565063476562, 0.0, -0.00019848346710205078, -0.00011456012725830078, 0.0, -0.001880645751953125, -4.38690185546875e-05, -6.6756979322235566e-06, -2.7179487005923875e-05, -0.0016498249024152756, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "Houndmaster", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 39, 328, "Battlecry", "<EOS>", "Change", "Health", "<EOS>", 346, 52, 179, "2", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 346, 69, 290, "Taunt", "<EOS>", "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", 122, 213, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "<UNK>", "hole3": "FREE", "hole0": "Houndmaster", "_type": "Template4", "hole2": "HUNTER", "hole7": "battlecry", "hole8": {"hole4": 2, "hole6": "IsType", "hole3": "ChangeAttack", "hole0": "Battlecry", "_type": "Template9", "hole2": [{"n": 2, "_type": "Num"}], "hole7": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "hole8": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": [{"_type": "Template54", "hole0": "Taunt"}], "hole1": "ChangeHealth"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 4}, {"_type": "Template19", "hole1": 3, "hole0": 4}], "_type": "ClassDef", "name": "Houndmaster"}], "_type": "Module"}, "score": -0.7094425671022577, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score_history": [-0.03239154815673828, -4.1961669921875e-05, -2.86102294921875e-05, -0.00017547607421875, -1.9073486328125e-05, -0.00391217740252614, -0.00099333212710917, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.5018234737217426e-06, -2.4318444047821686e-05, -5.841255187988281e-06, -0.0001430511474609375, -0.001415252685546875, -3.814697265625e-05, -7.152555099310121e-07, -7.748603820800781e-06, -0.00025975704193115234, 0.0, -0.002609729766845703, -5.7220458984375e-06, -0.0019227266311645508, -1.9073486328125e-06, -0.0015010833740234375, -3.576278118089249e-07, -0.0003337860107421875, 0.0, -5.650520324707031e-05, -2.1457672119140625e-06, -3.0747814178466797, 0.0, -0.003887176513671875, -8.7738037109375e-05, -0.3527793884277344, -0.024057388305664062, -0.008015609346330166, -0.012100458145141602, -0.0005763769149780273, -0.0009461641311645508, -7.867782187531702e-06, -0.0001220703125, -0.0023698806762695312, -7.62939453125e-06, -0.010783646255731583, -1.9073486328125e-06, -0.0051403045654296875, -0.01869487762451172, -1.52587890625e-05, -0.0010647583985701203, -3.814697265625e-06, -0.008106231689453125, -0.0015430450439453125, -0.00093841552734375, -7.665109296794981e-05, -0.0002359151840209961, -0.00010883808135986328, -0.01016378402709961, -1.919269561767578e-05, -0.0001354217529296875, -0.007725715637207031, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0002824068069458008, -0.0006866455078125, -0.000335693359375, 0.0, -0.0003261566162109375, -0.001697540283203125, 0.0, -0.02618873119354248, 0.0, -0.0016193389892578125, 0.0, -0.0002002716064453125, -0.00011837482452392578, 0.0, -0.0018405914306640625, -4.38690185546875e-05, -6.794906312279636e-06, -2.634504016896244e-05, -0.0016125107649713755, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "Houndmaster", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "battlecry", "<EOS>", 39, 328, "Battlecry", "<EOS>", "Change", "Health", "<EOS>", 346, 52, 179, "2", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 346, 69, 290, "Taunt", "<EOS>", "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", 122, 213, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "MURLOC", "hole3": "FREE", "hole0": "Houndmaster", "_type": "Template4", "hole2": "HUNTER", "hole7": "battlecry", "hole8": {"hole4": 2, "hole6": "IsType", "hole3": "ChangeAttack", "hole0": "Battlecry", "_type": "Template9", "hole2": [{"n": 2, "_type": "Num"}], "hole7": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "hole8": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": [{"_type": "Template54", "hole0": "Taunt"}], "hole1": "ChangeHealth"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 4}, {"_type": "Template19", "hole1": 3, "hole0": 4}], "_type": "ClassDef", "name": "Houndmaster"}], "_type": "Module"}, "score": -3.6254233744604676, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.MURLOC, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score_history": [-0.03239154815673828, -4.1961669921875e-05, -2.86102294921875e-05, -0.00017547607421875, -1.9073486328125e-05, -0.00391217740252614, -0.00099333212710917, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.5018234737217426e-06, -2.4318444047821686e-05, -5.841255187988281e-06, -0.0001430511474609375, -0.001415252685546875, -3.814697265625e-05, -7.152555099310121e-07, -7.748603820800781e-06, -0.00025975704193115234, 0.0, -0.002609729766845703, -5.7220458984375e-06, -0.0019227266311645508, -1.9073486328125e-06, -0.0015010833740234375, -3.576278118089249e-07, -0.0003337860107421875, 0.0, -5.650520324707031e-05, -2.1457672119140625e-06, -3.9038772583007812, 0.0, -0.007209897041320801, -3.814697265625e-05, -0.4016084671020508, -0.02435779571533203, -0.008993010967969894, -0.010398268699645996, -0.0005067586898803711, -0.0008927583694458008, -1.2516897186287679e-05, -0.000209808349609375, -0.0022077560424804688, -9.5367431640625e-06, -0.011809423565864563, -1.9073486328125e-06, -0.004111647605895996, -0.0186920166015625, -1.71661376953125e-05, -0.001189537812024355, -3.814697265625e-06, -0.00600433349609375, -0.0015344619750976562, -0.0009059906005859375, -7.665109296794981e-05, -0.0002512931823730469, -0.00010502338409423828, -0.011040806770324707, -2.8848648071289062e-05, -0.0001010894775390625, -0.006474494934082031, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0002518892288208008, -0.0006961822509765625, -0.0003414154052734375, 0.0, -0.0003509521484375, -0.0017137527465820312, 0.0, -0.02726924419403076, 0.0, -0.00160980224609375, 0.0, -0.000202178955078125, -0.00011646747589111328, 0.0, -0.0018939971923828125, -4.38690185546875e-05, -7.033323527139146e-06, -2.4795350327622145e-05, -0.001582461642101407, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "Houndmaster", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "battlecry", "<EOS>", 39, 328, "Battlecry", "<EOS>", "Change", "Health", "<EOS>", 346, 52, 179, "2", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 346, 69, 290, "Taunt", "<EOS>", "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", 122, 213, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "BEAST", "hole3": "FREE", "hole0": "Houndmaster", "_type": "Template4", "hole2": "HUNTER", "hole7": "battlecry", "hole8": {"hole4": 2, "hole6": "IsType", "hole3": "ChangeAttack", "hole0": "Battlecry", "_type": "Template9", "hole2": [{"n": 2, "_type": "Num"}], "hole7": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "hole8": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": [{"_type": "Template54", "hole0": "Taunt"}], "hole1": "ChangeHealth"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 4}, {"_type": "Template19", "hole1": 3, "hole0": 4}], "_type": "ClassDef", "name": "Houndmaster"}], "_type": "Module"}, "score": -4.50471568826714, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score_history": [-0.03239154815673828, -4.1961669921875e-05, -2.86102294921875e-05, -0.00017547607421875, -1.9073486328125e-05, -0.00391217740252614, -0.00099333212710917, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.5018234737217426e-06, -2.4318444047821686e-05, -5.841255187988281e-06, -0.0001430511474609375, -0.001415252685546875, -3.814697265625e-05, -7.152555099310121e-07, -7.748603820800781e-06, -0.00025975704193115234, 0.0, -0.002609729766845703, -5.7220458984375e-06, -0.0019227266311645508, -1.9073486328125e-06, -0.0015010833740234375, -3.576278118089249e-07, -0.0003337860107421875, 0.0, -5.650520324707031e-05, -2.1457672119140625e-06, -0.0865793228149414, -3.814697265625e-06, -0.014119386672973633, -5.7220458984375e-06, -0.42388343811035156, -0.018413543701171875, -0.006604424677789211, -0.021991968154907227, -0.0006070137023925781, -0.0012341737747192383, -1.4066597032069694e-05, -0.000133514404296875, -0.0019159317016601562, -5.7220458984375e-06, -0.008627671748399734, -1.9073486328125e-06, -0.005172252655029297, -4.198451042175293, -4.231920320307836e-05, -0.0034327306784689426, -1.1444091796875e-05, -0.0032787322998046875, -0.0027551651000976562, -0.0008106231689453125, -9.179078915622085e-05, -0.0001552104949951172, -0.00012063980102539062, -0.00828564167022705, -1.919269561767578e-05, -7.82012939453125e-05, -0.003939628601074219, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.00020229816436767578, -0.0007266998291015625, -0.000354766845703125, 0.0, -0.0003528594970703125, -0.0015478134155273438, 0.0, -0.020209431648254395, 0.0, -0.0012121200561523438, 0.0, -0.00019466876983642578, -0.00011265277862548828, 0.0, -0.0018215179443359375, -4.38690185546875e-05, -6.556489552167477e-06, -2.6225832698401064e-05, -0.0016280092531815171, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "Houndmaster", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 39, 328, "Battlecry", "<EOS>", "Change", "Health", "<EOS>", 346, 52, 179, "2", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 346, 69, 290, "Taunt", "<EOS>", "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", 122, 213, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "<UNK>", "hole3": "FREE", "hole0": "Houndmaster", "_type": "Template4", "hole2": "HUNTER", "hole7": "battlecry", "hole8": {"hole4": 2, "hole6": "IsType", "hole3": "ChangeHealth", "hole0": "Battlecry", "_type": "Template9", "hole2": [{"n": 2, "_type": "Num"}], "hole7": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "hole8": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": [{"_type": "Template54", "hole0": "Taunt"}], "hole1": "ChangeHealth"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 4}, {"_type": "Template19", "hole1": 3, "hole0": 4}], "_type": "ClassDef", "name": "Houndmaster"}], "_type": "Module"}, "score": -4.885163071630075, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeHealth(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score_history": [-0.03239154815673828, -4.1961669921875e-05, -2.86102294921875e-05, -0.00017547607421875, -1.9073486328125e-05, -0.00391217740252614, -0.00099333212710917, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.5018234737217426e-06, -2.4318444047821686e-05, -5.841255187988281e-06, -0.0001430511474609375, -0.001415252685546875, -3.814697265625e-05, -7.152555099310121e-07, -7.748603820800781e-06, -0.00025975704193115234, 0.0, -0.002609729766845703, -5.7220458984375e-06, -0.0019227266311645508, -1.9073486328125e-06, -0.0015010833740234375, -3.576278118089249e-07, -0.0003337860107421875, 0.0, -5.650520324707031e-05, -2.1457672119140625e-06, -0.0865793228149414, -3.814697265625e-06, -0.014119386672973633, -5.7220458984375e-06, -1.3079185485839844, -0.007327079772949219, -0.3763589859008789, -0.0024232864379882812, -1.296468734741211, -0.09457309544086456, -0.0007263309089466929, -6.711482274113223e-05, -0.0006561279296875, 0.0, -0.0014362335205078125, -0.023614883422851562, -0.0001354217529296875, -0.017327308654785156, -1.9073486328125e-06, -0.0041599273681640625, -9.5367431640625e-06, -0.010875701904296875, -6.067752110539004e-05, -1.9073486328125e-06, -1.4492692947387695, -1.52587890625e-05, -3.62396240234375e-05, -3.814697265625e-06, -0.005541197024285793, -0.00021398067474365234, -1.71661376953125e-05, -0.016364097595214844, -0.000415802001953125, -8.344650268554688e-06, -0.0024851560592651367, -5.7220458984375e-06, -0.05718347430229187, -3.814697265625e-06, -0.007169365882873535, -0.00074005126953125, -8.22540732769994e-06, -0.08569091558456421, -3.814697265625e-06, -0.000286102294921875, -4.76837158203125e-05, -0.003807544708251953, -1.752367097651586e-05, 0.0, -0.000164031982421875, -0.000362396240234375, -6.1033286328893155e-05, -4.053113570989808e-06, -0.0006377324461936951, 0.0], "choice_history": [96, 173, 358, 105, 152, "Houndmaster", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 40, 329, 347, 63, 264, "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 347, 74, 297, "MURLOC", "<EOS>", 88, 325, "Both", "Player", "<EOS>", 45, 150, 21, 174, "Battlecry", "<EOS>", 347, 55, 215, "Change", "Attack", "<EOS>", "2", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", 122, 213, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "<UNK>", "hole3": "FREE", "hole0": "Houndmaster", "_type": "Template4", "hole2": "HUNTER", "hole7": "battlecry", "hole8": {"elts": [{"hole3": [{"_type": "Template60", "hole0": "MURLOC"}, {"_type": "Template79", "hole0": "BothPlayer"}], "hole2": "MinionSelector", "_type": "Template43", "hole0": "Kill"}, {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"hole3": 2, "hole2": "ChangeHealth", "_type": "Template21", "hole1": 2, "hole0": "ChangeAttack"}, {"_type": "Template79", "hole0": "SelfSelector"}]}], "_type": "Tuple"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 4}, {"_type": "Template19", "hole1": 3, "hole0": 4}], "_type": "ClassDef", "name": "Houndmaster"}], "_type": "Module"}, "score": -4.92132553598293, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=(\n            Battlecry(Kill(), MinionSelector(IsType(MINION_TYPE.MURLOC),\n            BothPlayer())), Battlecry(Give([Buff(ChangeAttack(2)), Buff(\n            ChangeHealth(2))]), SelfSelector())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score_history": [-3.5453920364379883, -1.9073486328125e-05, -0.0007566926069557667, -0.000998377799987793, -1.1874362826347351e-07, -9.775161743164062e-06, -2.503394853192731e-06, -0.0009403228759765625, -1.1084375381469727, -9.72747802734375e-05, -6.556507287314162e-06, -0.0001697540283203125, -5.865099228685722e-05, 0.0, -0.06225013732910156, -1.33514404296875e-05, -0.0019383430480957031, -5.7220458984375e-06, -0.1003103256225586, -0.22250747680664062, -0.04807522892951965, -0.0003277056384831667, -1.9073486328125e-06, -0.043608665466308594, -0.0009202957153320312, -0.004768668673932552, -0.000148773193359375, -9.253621101379395e-05, -3.814697265625e-06, 0.0, -0.0014858245849609375, -0.000843048095703125, 0.0, -0.04533278942108154, -2.1457672119140625e-06, -0.0001049041748046875, -1.9073486328125e-06, -0.000469207763671875, -3.814697265625e-05, 0.0, -2.4676321118022315e-05, 0.0, -0.00013768672943115234, 0.0, -0.0011844635009765625, -0.000110626220703125, -0.000156402587890625, 0.0, -1.1920928244535389e-07, -0.023016752675175667, 0.0], "choice_history": [97, 283, "Houndmaster", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "battlecry", "<EOS>", 29, 266, "Give", "<EOS>", 346, 81, 311, "3", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "3", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 3, "hole0": 4}], "hole3": "create_minion", "hole0": "Houndmaster", "_type": "Template5", "hole2": [{"hole4": {"hole4": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole2": "MinionSelector", "_type": "Template43", "hole1": [{"_type": "Template71", "hole0": 3}], "hole0": "Give"}, "hole3": "battlecry", "hole0": "Houndmaster", "_type": "Template27", "hole2": "HUNTER", "hole1": 4}], "hole1": "MinionCard"}, "score": -5.214770328502475, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give(ChangeHealth(3)),\n            MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score_history": [-0.03239154815673828, -4.1961669921875e-05, -2.86102294921875e-05, -0.00017547607421875, -1.9073486328125e-05, -0.00391217740252614, -0.00099333212710917, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.5018234737217426e-06, -2.4318444047821686e-05, -5.841255187988281e-06, -0.0001430511474609375, -0.001415252685546875, -3.814697265625e-05, -7.152555099310121e-07, -7.748603820800781e-06, -0.00025975704193115234, 0.0, -0.002609729766845703, -5.7220458984375e-06, -0.0019227266311645508, -1.9073486328125e-06, -0.0015010833740234375, -3.576278118089249e-07, -0.0003337860107421875, 0.0, -5.650520324707031e-05, -2.1457672119140625e-06, -0.0865793228149414, -3.814697265625e-06, -0.014119386672973633, -5.7220458984375e-06, -1.3079185485839844, -0.007327079772949219, -0.3763589859008789, -0.0024232864379882812, -1.296468734741211, -0.09457309544086456, -0.0007263309089466929, -6.711482274113223e-05, -0.0006561279296875, 0.0, -0.0014362335205078125, -0.023614883422851562, -0.0001354217529296875, -0.017327308654785156, -1.9073486328125e-06, -0.0041599273681640625, -9.5367431640625e-06, -0.010875701904296875, -6.067752110539004e-05, -1.9073486328125e-06, -0.5231962203979492, -0.14893245697021484, -0.009247303009033203, -7.271765298355604e-06, -0.01890595629811287, -0.010466407984495163, -0.7658290266990662, -0.014019431546330452, -4.875540980719961e-05, -0.0005321502685546875, -0.07173442840576172, -7.62939453125e-06, -0.2306334227323532, -0.3005926012992859, -0.000537872314453125, -0.000995635986328125, -2.861022494471399e-06, 0.0, -0.011754035949707031, -5.7220458984375e-05, -1.966933996300213e-05, -5.364416665543104e-06, -0.0020959931425750256, 0.0], "choice_history": [96, 173, 358, 105, 152, "Houndmaster", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 40, 329, 347, 63, 264, "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 347, 74, 297, "MURLOC", "<EOS>", 88, 325, "Both", "Player", "<EOS>", 61, 242, "Choice", "<EOS>", "Taunt", "<EOS>", "Bear", "Form", "<EOS>", 346, 88, 325, "Bear", "Taunt", "<EOS>", "Self", "Selector", "<EOS>", 122, 213, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "<UNK>", "hole3": "FREE", "hole0": "Houndmaster", "_type": "Template4", "hole2": "HUNTER", "hole7": "battlecry", "hole8": {"elts": [{"hole3": [{"_type": "Template60", "hole0": "MURLOC"}, {"_type": "Template79", "hole0": "BothPlayer"}], "hole2": "MinionSelector", "_type": "Template43", "hole0": "Kill"}, {"hole4": [{"_type": "Template79", "hole0": "BearTaunt"}], "hole6": "SelfSelector", "hole3": "BearForm", "hole0": "Choice", "_type": "Template39", "hole1": "Taunt"}], "_type": "Tuple"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 4}, {"_type": "Template19", "hole1": 3, "hole0": 4}], "_type": "ClassDef", "name": "Houndmaster"}], "_type": "Module"}, "score": -5.400383413456609, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=(\n            Battlecry(Kill(), MinionSelector(IsType(MINION_TYPE.MURLOC),\n            BothPlayer())), Choice(Taunt(), BearForm(BearTaunt()),\n            SelfSelector())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score_history": [-3.5453920364379883, -1.9073486328125e-05, -0.0007566926069557667, -0.000998377799987793, -1.1874362826347351e-07, -9.775161743164062e-06, -2.503394853192731e-06, -0.0009403228759765625, -0.4460124969482422, -0.000194549560546875, -3.814697265625e-05, 0.0, -2.622604142743512e-06, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -0.0003643035888671875, -0.00026702880859375, -1.1444091796875e-05, -3.4570634852570947e-06, -0.00022351741790771484, -2.09808349609375e-05, -3.814697265625e-06, -0.0003533362760208547, -1.52587890625e-05, -2.09808349609375e-05, -0.0001087188720703125, -5.7220458984375e-06, -1.52587890625e-05, -0.000118255615234375, -1.9073486328125e-06, -0.002658247947692871, -0.00016021728515625, -0.000156402587890625, -3.62396240234375e-05, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -0.10788726806640625, 0.0, -0.7122783660888672, -0.013121604919433594, -0.10102558135986328, -0.001691459328867495, -0.00015294454351533204, -3.814697265625e-06, -0.14294719696044922, -6.103515625e-05, -0.0002593994140625, -0.061860084533691406, -0.01045989990234375, -0.007312985602766275, -0.00030907036853022873, -0.000278472900390625, -0.0013751983642578125, -2.1576783183263615e-05, -0.0001385172363370657, -0.028232455253601074, -0.0001935955078806728, -5.9604562920867465e-06, -9.72747802734375e-05, -9.5367431640625e-05, -3.814697265625e-06, -0.0037246933206915855, -4.768370445162873e-07, -3.24249267578125e-05, 0.0, -0.3285869359970093, -2.5272369384765625e-05, 0.0, -5.6028355174930766e-05, 0.0, -0.00027120113372802734, 0.0, -0.00193023681640625, -0.0003528594970703125, -0.0001239776611328125, 0.0, -1.1920928244535389e-07, -0.02159264124929905, 0.0], "choice_history": [97, 283, "Houndmaster", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Houndmaster", "<EOS>", 52, 179, "4", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 91, 252, "Give", "<EOS>", 346, 48, 169, 347, 69, 290, "Taunt", "<EOS>", 69, 290, "Taunt", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "3", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 3, "hole0": 4}], "hole3": "create_minion", "hole0": "Houndmaster", "_type": "Template5", "hole2": [{"hole3": [{"hole4": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole2": "MinionSelector", "_type": "Template40", "hole1": [{"elts": [{"_type": "Template54", "hole0": "Taunt"}, {"_type": "Template54", "hole0": "Taunt"}], "_type": "List"}], "hole0": "Give"}], "hole2": [{"_type": "Str", "s": "Houndmaster"}, {"n": 4, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "LEGENDARY"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -5.5454845633429315, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Give([Buff(Taunt()),\n            Buff(Taunt())]), MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score_history": [-0.03239154815673828, -4.1961669921875e-05, -2.86102294921875e-05, -0.00017547607421875, -1.9073486328125e-05, -0.00391217740252614, -0.00099333212710917, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.5018234737217426e-06, -2.4318444047821686e-05, -5.841255187988281e-06, -0.0001430511474609375, -0.001415252685546875, -3.814697265625e-05, -7.152555099310121e-07, -7.748603820800781e-06, -0.00025975704193115234, 0.0, -0.002609729766845703, -5.7220458984375e-06, -0.0019227266311645508, -1.9073486328125e-06, -0.0015010833740234375, -3.576278118089249e-07, -0.0003337860107421875, 0.0, -5.650520324707031e-05, -2.1457672119140625e-06, -0.0865793228149414, -3.814697265625e-06, -0.014119386672973633, -5.7220458984375e-06, -0.42388343811035156, -0.018413543701171875, -0.006604424677789211, -0.021991968154907227, -0.0006070137023925781, -0.0012341737747192383, -1.4066597032069694e-05, -0.000133514404296875, -0.0019159317016601562, -5.7220458984375e-06, -5.1763691902160645, -5.14984130859375e-05, -0.009038925170898438, -0.022359848022460938, -7.62939453125e-06, -0.0007700861315242946, -1.9073486328125e-06, -0.00518035888671875, -0.0014066696166992188, -0.0012302398681640625, -7.65317672630772e-05, -0.00028383731842041016, -9.930133819580078e-05, -0.010947823524475098, -1.919269561767578e-05, -8.20159912109375e-05, -0.0051250457763671875, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.00023281574249267578, -0.0006465911865234375, -0.0003261566162109375, 0.0, -0.0003643035888671875, -0.0017576217651367188, 0.0, -0.024271011352539062, 0.0, -0.0014142990112304688, 0.0, -0.00019657611846923828, -0.00011646747589111328, 0.0, -0.001895904541015625, -4.38690185546875e-05, -6.6756979322235566e-06, -2.7775520720751956e-05, -0.001660674111917615, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "Houndmaster", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 39, 328, "Battlecry", "<EOS>", "Change", "Health", "<EOS>", 346, 52, 179, "Taunt", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 346, 69, 290, "Taunt", "<EOS>", "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", 122, 213, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "<UNK>", "hole3": "FREE", "hole0": "Houndmaster", "_type": "Template4", "hole2": "HUNTER", "hole7": "battlecry", "hole8": {"hole4": 2, "hole6": "IsType", "hole3": "ChangeAttack", "hole0": "Battlecry", "_type": "Template9", "hole2": [{"n": 0, "_type": "Num"}], "hole7": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "hole8": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": [{"_type": "Template54", "hole0": "Taunt"}], "hole1": "ChangeHealth"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 4}, {"_type": "Template19", "hole1": 3, "hole0": 4}], "_type": "ClassDef", "name": "Houndmaster"}], "_type": "Module"}, "score": -5.887462138847866, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(0)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score_history": [-0.03239154815673828, -4.1961669921875e-05, -2.86102294921875e-05, -0.00017547607421875, -1.9073486328125e-05, -0.00391217740252614, -0.00099333212710917, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.5018234737217426e-06, -2.4318444047821686e-05, -5.841255187988281e-06, -0.0001430511474609375, -0.001415252685546875, -3.814697265625e-05, -7.152555099310121e-07, -7.748603820800781e-06, -0.00025975704193115234, 0.0, -0.002609729766845703, -5.7220458984375e-06, -0.0019227266311645508, -1.9073486328125e-06, -0.0015010833740234375, -3.576278118089249e-07, -0.0003337860107421875, 0.0, -5.650520324707031e-05, -2.1457672119140625e-06, -0.0865793228149414, -3.814697265625e-06, -0.014119386672973633, -5.7220458984375e-06, -1.3079185485839844, -0.007327079772949219, -1.1795310974121094, -0.0026884078979492188, -0.8214998245239258, -0.08494317531585693, -0.30499178171157837, -0.03958773612976074, -2.515273808967322e-05, -0.0002460479736328125, -0.0001506805419921875, -0.22542095184326172, 0.0, -0.135243758559227, -0.39444801211357117, -0.260209321975708, -0.4779726266860962, -0.0004445314407348633, 0.0, -0.12816429138183594, -0.029268264770507812, -0.03331182897090912, -0.0002313589066034183, -0.36955344676971436, -3.218649908376392e-06, 0.0, -0.09550857543945312, -0.011424064636230469, -0.03546026721596718, -0.0006437301635742188, -9.72747802734375e-05, -0.000164031982421875, -1.9073486328125e-06, -0.15869636833667755, -0.12642289698123932, -5.2213646995369345e-05, -0.00080108642578125, -0.0001239776611328125, -0.005987437907606363, -8.940695806813892e-06, -0.02291572093963623, 0.0], "choice_history": [96, 173, 358, 105, 152, "Houndmaster", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 40, 329, 348, 63, 265, "Replace", "Hero", "With", "Minion", "<EOS>", 346, 88, 325, "Taunt", "Minion", "<EOS>", "Hero", "Selector", "<EOS>", 63, 262, "Remove", "<EOS>", "Self", "Selector", "<EOS>", 62, 261, "Equip", "<EOS>", 346, 88, 325, "Blood", "Fury", "<EOS>", 122, 213, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "<UNK>", "hole3": "FREE", "hole0": "Houndmaster", "_type": "Template4", "hole2": "HUNTER", "hole7": "battlecry", "hole8": {"elts": [{"hole2": "HeroSelector", "_type": "Template43", "hole1": [{"_type": "Template79", "hole0": "TauntMinion"}], "hole0": "ReplaceHeroWithMinion"}, {"hole2": "SelfSelector", "_type": "Template43", "hole0": "Remove"}, {"_type": "Template42", "hole1": [{"_type": "Template79", "hole0": "BloodFury"}], "hole0": "Equip"}], "_type": "Tuple"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 4}, {"_type": "Template19", "hole1": 3, "hole0": 4}], "_type": "ClassDef", "name": "Houndmaster"}], "_type": "Module"}, "score": -6.408108527351658, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=(\n            Battlecry(ReplaceHeroWithMinion(TauntMinion()), HeroSelector()),\n            Battlecry(Remove(), SelfSelector()), Battlecry(Equip(BloodFury(\n            )), PlayerSelector())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score_history": [-3.5453920364379883, -1.9073486328125e-05, -0.0007566926069557667, -0.000998377799987793, -1.1874362826347351e-07, -9.775161743164062e-06, -2.503394853192731e-06, -0.0009403228759765625, -0.4460124969482422, -0.000194549560546875, -3.814697265625e-05, 0.0, -2.622604142743512e-06, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -0.0003643035888671875, -0.00026702880859375, -1.1444091796875e-05, -3.4570634852570947e-06, -0.00022351741790771484, -2.09808349609375e-05, -3.814697265625e-06, -0.0003533362760208547, -1.52587890625e-05, -2.09808349609375e-05, -0.0001087188720703125, -5.7220458984375e-06, -1.52587890625e-05, -0.000118255615234375, -1.9073486328125e-06, -0.002658247947692871, -0.00016021728515625, -0.000156402587890625, -3.62396240234375e-05, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -0.10788726806640625, 0.0, -0.7122783660888672, -0.013121604919433594, -0.10102558135986328, -0.001691459328867495, -0.00015294454351533204, -3.814697265625e-06, -0.14294719696044922, -6.103515625e-05, -0.0002593994140625, -0.061860084533691406, -0.01045989990234375, -0.007312985602766275, -0.00030907036853022873, -0.000278472900390625, -0.0013751983642578125, -2.1576783183263615e-05, -0.0001385172363370657, -0.028232455253601074, -0.0001935955078806728, -5.9604562920867465e-06, -9.72747802734375e-05, -9.5367431640625e-05, -3.814697265625e-06, -0.0037246933206915855, -4.768370445162873e-07, -3.24249267578125e-05, 0.0, -1.2802480459213257, -2.002716064453125e-05, 0.0, -0.0006803149590268731, 0.0, -0.0002453327178955078, 0.0, -0.001682281494140625, -0.000362396240234375, -0.0001373291015625, 0.0, -2.3841855067985307e-07, -0.02740628644824028, 0.0], "choice_history": [97, 283, "Houndmaster", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Houndmaster", "<EOS>", 52, 179, "4", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 91, 252, "Give", "<EOS>", 346, 48, 169, 347, 69, 290, "Taunt", "<EOS>", 69, 290, "Taunt", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "3", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 3, "hole0": 4}], "hole3": "create_minion", "hole0": "Houndmaster", "_type": "Template5", "hole2": [{"hole3": [{"hole4": [{"value": {"_type": "Template79", "hole0": "RandomPicker"}, "_type": "keyword", "arg": "picker"}], "hole2": "MinionSelector", "_type": "Template40", "hole1": [{"elts": [{"_type": "Template54", "hole0": "Taunt"}, {"_type": "Template54", "hole0": "Taunt"}], "_type": "List"}], "hole0": "Give"}], "hole2": [{"_type": "Str", "s": "Houndmaster"}, {"n": 4, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "LEGENDARY"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -6.503327543516065, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Give([Buff(Taunt()),\n            Buff(Taunt())]), MinionSelector(picker=RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score_history": [-0.03239154815673828, -4.1961669921875e-05, -2.86102294921875e-05, -0.00017547607421875, -1.9073486328125e-05, -0.00391217740252614, -0.00099333212710917, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.5018234737217426e-06, -2.4318444047821686e-05, -5.841255187988281e-06, -0.0001430511474609375, -0.001415252685546875, -3.814697265625e-05, -7.152555099310121e-07, -7.748603820800781e-06, -0.00025975704193115234, 0.0, -0.002609729766845703, -5.7220458984375e-06, -0.0019227266311645508, -1.9073486328125e-06, -0.0015010833740234375, -3.576278118089249e-07, -0.0003337860107421875, 0.0, -5.650520324707031e-05, -2.1457672119140625e-06, -0.0865793228149414, -3.814697265625e-06, -0.014119386672973633, -5.7220458984375e-06, -1.3079185485839844, -0.007327079772949219, -0.3763589859008789, -0.0024232864379882812, -1.296468734741211, -0.09457309544086456, -0.0007263309089466929, -6.711482274113223e-05, -0.0006561279296875, 0.0, -0.0014362335205078125, -0.023614883422851562, -0.0001354217529296875, -0.017327308654785156, -1.9073486328125e-06, -0.0041599273681640625, -9.5367431640625e-06, -0.010875701904296875, -6.067752110539004e-05, -1.9073486328125e-06, -0.5231962203979492, -0.14893245697021484, -0.009247303009033203, -7.271765298355604e-06, -0.01890595629811287, -0.010466407984495163, -1.271905779838562, -0.0578610859811306, -1.9073486328125e-06, -0.07753849029541016, -0.0004253387451171875, -0.011350631713867188, -0.7939815521240234, -0.045154571533203125, -0.164765864610672, -0.0004024505033157766, -0.11338424682617188, -0.0004138946533203125, -0.00011777463078033179, -0.0003625149838626385, -0.42251014709472656, -3.313969500595704e-05, -1.1920928244535389e-07, -0.010510444641113281, -0.000579833984375, -2.253030106658116e-05, -8.106212590064388e-06, -0.01778767816722393, 0.0], "choice_history": [96, 173, 358, 105, 152, "Houndmaster", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 40, 329, 347, 63, 264, "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 347, 74, 297, "MURLOC", "<EOS>", 88, 325, "Both", "Player", "<EOS>", 61, 242, "Choice", "<EOS>", "Taunt", "<EOS>", "Give", "<EOS>", 346, 48, 169, 347, 65, 278, "4", "<EOS>", 69, 290, "Taunt", "<EOS>", "Self", "Selector", "<EOS>", 122, 213, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "<UNK>", "hole3": "FREE", "hole0": "Houndmaster", "_type": "Template4", "hole2": "HUNTER", "hole7": "battlecry", "hole8": {"elts": [{"hole3": [{"_type": "Template60", "hole0": "MURLOC"}, {"_type": "Template79", "hole0": "BothPlayer"}], "hole2": "MinionSelector", "_type": "Template43", "hole0": "Kill"}, {"hole4": [{"elts": [{"_type": "Template46", "hole0": 4}, {"_type": "Template54", "hole0": "Taunt"}], "_type": "List"}], "hole6": "SelfSelector", "hole3": "Give", "hole0": "Choice", "_type": "Template39", "hole1": "Taunt"}], "_type": "Tuple"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 4}, {"_type": "Template19", "hole1": 3, "hole0": 4}], "_type": "ClassDef", "name": "Houndmaster"}], "_type": "Module"}, "score": -6.990635418163201, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=(\n            Battlecry(Kill(), MinionSelector(IsType(MINION_TYPE.MURLOC),\n            BothPlayer())), Choice(Taunt(), Give([Buff(ChangeHealth(4)),\n            Buff(Taunt())]), SelfSelector())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score_history": [-0.03239154815673828, -4.1961669921875e-05, -2.86102294921875e-05, -0.00017547607421875, -1.9073486328125e-05, -0.00391217740252614, -0.00099333212710917, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.5018234737217426e-06, -2.4318444047821686e-05, -5.841255187988281e-06, -0.0001430511474609375, -0.001415252685546875, -3.814697265625e-05, -7.152555099310121e-07, -7.748603820800781e-06, -0.00025975704193115234, 0.0, -0.002609729766845703, -5.7220458984375e-06, -0.0019227266311645508, -1.9073486328125e-06, -0.0015010833740234375, -3.576278118089249e-07, -0.0003337860107421875, 0.0, -5.650520324707031e-05, -2.1457672119140625e-06, -0.0865793228149414, -3.814697265625e-06, -0.014119386672973633, -5.7220458984375e-06, -0.42388343811035156, -0.018413543701171875, -0.006604424677789211, -0.021991968154907227, -0.0006070137023925781, -0.0012341737747192383, -1.4066597032069694e-05, -0.000133514404296875, -0.0019159317016601562, -5.7220458984375e-06, -0.008627671748399734, -1.9073486328125e-06, -0.005172252655029297, -0.01694774627685547, -1.33514404296875e-05, -0.0011203765170648694, -3.814697265625e-06, -0.0058345794677734375, -0.001605987548828125, -0.00115966796875, -7.677030225750059e-05, -0.00027251243591308594, -0.00010323524475097656, -0.010598182678222656, -2.110004425048828e-05, -8.392333984375e-05, -0.0047740936279296875, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.00021946430206298828, -0.0006866455078125, -0.0003376007080078125, 0.0, -0.000362396240234375, -0.0016908645629882812, 0.0, -0.023004531860351562, 0.0, -0.0013513565063476562, 0.0, -0.00019848346710205078, -0.00011456012725830078, 0.0, -0.001880645751953125, -4.38690185546875e-05, -6.6756979322235566e-06, -2.7179487005923875e-05, -6.438666820526123, 0.0], "choice_history": [96, 173, 358, 105, 152, "Houndmaster", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 39, 328, "Battlecry", "<EOS>", "Change", "Health", "<EOS>", 346, 52, 179, "2", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 346, 69, 290, "Taunt", "<EOS>", "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", 122, 213, "4", "<EOS>", "4", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "<UNK>", "hole3": "FREE", "hole0": "Houndmaster", "_type": "Template4", "hole2": "HUNTER", "hole7": "battlecry", "hole8": {"hole4": 2, "hole6": "IsType", "hole3": "ChangeAttack", "hole0": "Battlecry", "_type": "Template9", "hole2": [{"n": 2, "_type": "Num"}], "hole7": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "hole8": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": [{"_type": "Template54", "hole0": "Taunt"}], "hole1": "ChangeHealth"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 4}, {"_type": "Template19", "hole1": 4, "hole0": 4}], "_type": "ClassDef", "name": "Houndmaster"}], "_type": "Module"}, "score": -7.146457655377333, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 4)\n"}, {"score_history": [-0.03239154815673828, -4.1961669921875e-05, -2.86102294921875e-05, -0.00017547607421875, -1.9073486328125e-05, -0.00391217740252614, -0.00099333212710917, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.5018234737217426e-06, -2.4318444047821686e-05, -5.841255187988281e-06, -0.0001430511474609375, -0.001415252685546875, -3.814697265625e-05, -7.152555099310121e-07, -7.748603820800781e-06, -0.00025975704193115234, 0.0, -0.002609729766845703, -5.7220458984375e-06, -0.0019227266311645508, -1.9073486328125e-06, -0.0015010833740234375, -3.576278118089249e-07, -0.0003337860107421875, 0.0, -5.650520324707031e-05, -2.1457672119140625e-06, -0.0865793228149414, -3.814697265625e-06, -0.014119386672973633, -5.7220458984375e-06, -0.42388343811035156, -0.018413543701171875, -0.006604424677789211, -0.021991968154907227, -0.0006070137023925781, -0.0012341737747192383, -1.4066597032069694e-05, -0.000133514404296875, -0.0019159317016601562, -5.7220458984375e-06, -0.008627671748399734, -1.9073486328125e-06, -0.005172252655029297, -0.01694774627685547, -1.33514404296875e-05, -0.0011203765170648694, -3.814697265625e-06, -0.0058345794677734375, -0.001605987548828125, -0.00115966796875, -7.677030225750059e-05, -0.00027251243591308594, -0.00010323524475097656, -0.010598182678222656, -2.110004425048828e-05, -8.392333984375e-05, -0.0047740936279296875, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.00021946430206298828, -0.0006866455078125, -0.0003376007080078125, 0.0, -0.000362396240234375, -0.0016908645629882812, 0.0, -5.736618518829346, -4.3272972106933594e-05, -0.011713027954101562, -0.000156402587890625, -0.015723032876849174, -3.62396240234375e-05, -0.9361248016357422, -0.0012102127075195312, -0.0005397796630859375, 0.0, -2.47955322265625e-05, 0.0, -0.022478103637695312, -4.00543212890625e-05, -0.003948211669921875, 0.0, -0.2618195712566376, 0.0, -2.09808349609375e-05, -0.010462760925292969, -0.3523550033569336, -0.04266488552093506, -2.622604142743512e-06], "choice_history": [96, 173, 358, 105, 152, "Houndmaster", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 39, 328, "Battlecry", "<EOS>", "Change", "Health", "<EOS>", 346, 52, 179, "2", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 346, 69, 290, "Taunt", "<EOS>", "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 353, 95, 336, "value", "<EOS>", 23, 179, "0", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 346, 69, 290, "Taunt", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "<UNK>", "hole3": "FREE", "hole0": "Houndmaster", "_type": "Template4", "hole2": "HUNTER", "hole7": "battlecry", "hole8": {"hole4": 2, "hole6": "IsType", "hole3": "ChangeAttack", "hole0": "Battlecry", "_type": "Template9", "hole2": [{"n": 2, "_type": "Num"}], "hole7": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "hole8": [{"value": {"n": 0, "_type": "Num"}, "_type": "keyword", "arg": "value"}], "hole5": [{"_type": "Template54", "hole0": "Taunt"}], "hole1": "ChangeHealth"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 4}, {"hole2": [{"_type": "Template54", "hole0": "Taunt"}], "_type": "Template3", "hole1": "add_buff", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Houndmaster"}], "_type": "Module"}, "score": -8.077145811445405, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            value=0)))\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Taunt()))\n"}, {"score_history": [-0.03239154815673828, -4.1961669921875e-05, -2.86102294921875e-05, -0.00017547607421875, -1.9073486328125e-05, -0.00391217740252614, -0.00099333212710917, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.5018234737217426e-06, -2.4318444047821686e-05, -5.841255187988281e-06, -0.0001430511474609375, -0.001415252685546875, -3.814697265625e-05, -7.152555099310121e-07, -7.748603820800781e-06, -0.00025975704193115234, 0.0, -0.002609729766845703, -5.7220458984375e-06, -0.0019227266311645508, -1.9073486328125e-06, -0.0015010833740234375, -3.576278118089249e-07, -0.0003337860107421875, 0.0, -5.650520324707031e-05, -2.1457672119140625e-06, -0.0865793228149414, -3.814697265625e-06, -0.014119386672973633, -5.7220458984375e-06, -0.42388343811035156, -0.018413543701171875, -0.006604424677789211, -0.021991968154907227, -0.0006070137023925781, -0.0012341737747192383, -1.4066597032069694e-05, -0.000133514404296875, -0.0019159317016601562, -5.7220458984375e-06, -0.008627671748399734, -1.9073486328125e-06, -0.005172252655029297, -0.01694774627685547, -1.33514404296875e-05, -0.0011203765170648694, -3.814697265625e-06, -0.0058345794677734375, -0.001605987548828125, -0.00115966796875, -7.677030225750059e-05, -0.00027251243591308594, -0.00010323524475097656, -0.010598182678222656, -2.110004425048828e-05, -8.392333984375e-05, -0.0047740936279296875, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.00021946430206298828, -0.0006866455078125, -0.0003376007080078125, 0.0, -0.000362396240234375, -0.0016908645629882812, 0.0, -5.736618518829346, -4.3272972106933594e-05, -0.011713027954101562, -0.000156402587890625, -0.015723032876849174, -3.62396240234375e-05, -0.9361248016357422, -0.0012102127075195312, -0.0005397796630859375, 0.0, -2.47955322265625e-05, 0.0, -0.022478103637695312, -4.00543212890625e-05, -0.003948211669921875, 0.0, -0.2618195712566376, 0.0, -2.09808349609375e-05, -0.010462760925292969, -1.2176103591918945, -0.33320534229278564, -6.556510470545618e-06, -3.0517578125e-05, -0.07477474212646484, -0.25449371337890625, -0.26557445526123047, -0.005619189701974392, -0.00016998105274979025, -0.000518798828125, 0.0, -0.3064678907394409, -0.253707617521286, -0.0018073320388793945, -2.3841855067985307e-07, -0.0003814697265625, -7.05718994140625e-05, -1.9073486328125e-06, -0.21060127019882202, -2.1457672119140625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.022681355476379395, -5.650520324707031e-05, 0.0, -0.19330310821533203, -0.0001544952392578125, -0.0031652450561523438, -0.0008172988891601562, -2.47955322265625e-05, -0.4475075304508209, 0.0], "choice_history": [96, 173, 358, 105, 152, "Houndmaster", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 39, 328, "Battlecry", "<EOS>", "Change", "Health", "<EOS>", 346, 52, 179, "2", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 346, 69, 290, "Taunt", "<EOS>", "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 353, 95, 336, "value", "<EOS>", 23, 179, "0", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 346, 69, 291, "Mana", "Change", "<EOS>", 347, 77, 301, "Count", "<EOS>", 21, 174, "Dead", "Minion", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 89, 331, 139, 23, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "<UNK>", "hole3": "FREE", "hole0": "Houndmaster", "_type": "Template4", "hole2": "HUNTER", "hole7": "battlecry", "hole8": {"hole4": 2, "hole6": "IsType", "hole3": "ChangeAttack", "hole0": "Battlecry", "_type": "Template9", "hole2": [{"n": 2, "_type": "Num"}], "hole7": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "hole8": [{"value": {"n": 0, "_type": "Num"}, "_type": "keyword", "arg": "value"}], "hole5": [{"_type": "Template54", "hole0": "Taunt"}], "hole1": "ChangeHealth"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 4}, {"hole2": [{"_type": "Template54", "hole1": [{"hole3": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}], "_type": "Template64", "hole1": {"_type": "Name", "id": "DeadMinionSelector"}, "hole0": "Count"}, {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "hole0": "ManaChange"}], "_type": "Template3", "hole1": "add_buff", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Houndmaster"}], "_type": "Module"}, "score": -11.274892992396559, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            value=0)))\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(ManaChange(Count(DeadMinionSelector(\n            players=BothPlayer())), -1)))\n"}]}
{"index": 53, "beams": [{"score_history": [-0.0001735687255859375, -3.24249267578125e-05, -0.00432793190702796, -2.8013790142722428e-05, -3.50363552570343e-06, -3.695487976074219e-05, 0.0, -8.20159912109375e-05, -0.018522262573242188, -0.005401611328125, -3.0517578125e-05, 0.0, -3.099440846199286e-06, -1.9073486328125e-06, -6.115436553955078e-05, 0.0, -0.0045261383056640625, -0.0001430511474609375, -0.0001239776611328125, -1.239776611328125e-05, -6.175041198730469e-05, -3.814697265625e-06, -3.814697265625e-06, -2.5868290322250687e-05, 0.0, -2.288818359375e-05, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0007418394088745117, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -1.1444091796875e-05, -0.1257305145263672, 0.0, -0.00016021728515625, -5.14984130859375e-05, -0.0008418560028076172, -1.33514404296875e-05, -0.0003204345703125, -0.0004711151123046875, -0.0002269744873046875, -0.0012614727020263672, 0.0, -0.0001544952392578125, 0.0, -0.00019490718841552734, 0.0, -9.5367431640625e-06, -0.002933502197265625, -6.103515625e-05, -4.172325134277344e-06, -3.4927710657939315e-05, -3.099440846199286e-06, 0.0, -0.005289316177368164, 0.0, -0.000431060791015625, -3.24249267578125e-05, -0.0005718469619750977, -1.9073486328125e-06], "choice_history": [97, 283, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Huffer", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 2, "hole0": 4}], "hole3": "create_minion", "hole0": "Huffer", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Huffer"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -0.17337426011044954, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"score_history": [-0.0001735687255859375, -3.24249267578125e-05, -0.00432793190702796, -2.8013790142722428e-05, -3.50363552570343e-06, -3.695487976074219e-05, 0.0, -8.20159912109375e-05, -0.018522262573242188, -0.005401611328125, -3.0517578125e-05, 0.0, -3.099440846199286e-06, -1.9073486328125e-06, -6.115436553955078e-05, 0.0, -0.0045261383056640625, -0.0001430511474609375, -0.0001239776611328125, -1.239776611328125e-05, -6.175041198730469e-05, -3.814697265625e-06, -3.814697265625e-06, -2.5868290322250687e-05, 0.0, -2.288818359375e-05, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0007418394088745117, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -1.1444091796875e-05, -2.662229537963867, -3.4332275390625e-05, -0.00218963623046875, -0.00020599365234375, -0.001190781593322754, -1.1444091796875e-05, -0.0002689361572265625, -0.0006694793701171875, -0.0002422332763671875, -0.0020034313201904297, 0.0, -0.0002231597900390625, 0.0, -0.00017595291137695312, 0.0, -9.5367431640625e-06, -0.0030517578125, -6.103515625e-05, -2.2649765014648438e-06, -3.7788631743751466e-05, -2.9802317840221804e-06, 0.0, -0.005319952964782715, 0.0, -0.0004520416259765625, -3.24249267578125e-05, -0.0005756616592407227, -1.9073486328125e-06], "choice_history": [97, 283, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Huffer", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 2, "hole0": 4}], "hole3": "create_minion", "hole0": "Huffer", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Huffer"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -2.713566864073755, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            FREE, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"score_history": [-0.0001735687255859375, -3.24249267578125e-05, -0.00432793190702796, -2.8013790142722428e-05, -3.50363552570343e-06, -3.695487976074219e-05, 0.0, -8.20159912109375e-05, -0.018522262573242188, -0.005401611328125, -3.0517578125e-05, 0.0, -3.099440846199286e-06, -1.9073486328125e-06, -6.115436553955078e-05, 0.0, -0.0045261383056640625, -0.0001430511474609375, -0.0001239776611328125, -1.239776611328125e-05, -6.175041198730469e-05, -3.814697265625e-06, -3.814697265625e-06, -2.5868290322250687e-05, 0.0, -2.288818359375e-05, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0007418394088745117, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -1.1444091796875e-05, -3.462376594543457, -3.814697265625e-06, -0.0008087158203125, -4.00543212890625e-05, -0.0005481243133544922, -1.33514404296875e-05, -0.0002574920654296875, -0.00106048583984375, -0.000274658203125, -0.0045326948165893555, 0.0, -0.0001964569091796875, 0.0, -0.0002199411392211914, 0.0, -9.5367431640625e-06, -0.0026149749755859375, -6.866455078125e-05, -2.2649765014648438e-06, -3.707340147229843e-05, -3.099440846199286e-06, 0.0, -0.004895448684692383, 0.0, -0.000423431396484375, -3.24249267578125e-05, -0.0005813837051391602, -1.9073486328125e-06], "choice_history": [97, 283, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Huffer", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 2, "hole0": 4}], "hole3": "create_minion", "hole0": "Huffer", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Huffer"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -3.5135771876234685, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            RARE, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"score_history": [-0.0001735687255859375, -3.24249267578125e-05, -0.00432793190702796, -2.8013790142722428e-05, -3.50363552570343e-06, -3.695487976074219e-05, 0.0, -8.20159912109375e-05, -4.08548641204834, -0.0016078948974609375, -2.0265579223632812e-06, -0.0015221827197819948, -4.6372413635253906e-05, -1.1920928244535389e-07, -0.0005900835967622697, -5.7220458984375e-06, -0.0005873439367860556, 0.0, -0.010201454162597656, -2.47955322265625e-05, -0.000774383544921875, -3.814697265625e-06, -8.20159912109375e-05, 0.0, -0.0017070770263671875, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0003814697265625, 0.0, -1.71661376953125e-05, -0.49590110778808594, -0.00017547607421875, -3.933904281439027e-06, -3.3378546504536644e-06, -2.8729118639603257e-05, 0.0, -0.0030744075775146484, 0.0, -0.00035858154296875, -4.00543212890625e-05, -0.0001283884048461914, -1.9073486328125e-06], "choice_history": [97, 283, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Huffer", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 2, "hole0": 4}], "hole3": "create_minion", "hole0": "Huffer", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Huffer", "_type": "Template27", "hole2": "HUNTER", "hole1": 3}], "hole1": "MinionCard"}, "score": -4.607457838173552, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"score_history": [-0.0001735687255859375, -3.24249267578125e-05, -0.00432793190702796, -2.8013790142722428e-05, -3.50363552570343e-06, -3.695487976074219e-05, 0.0, -8.20159912109375e-05, -0.018522262573242188, -0.005401611328125, -3.0517578125e-05, 0.0, -3.099440846199286e-06, -1.9073486328125e-06, -6.115436553955078e-05, 0.0, -0.0045261383056640625, -0.0001430511474609375, -0.0001239776611328125, -1.239776611328125e-05, -6.175041198730469e-05, -3.814697265625e-06, -3.814697265625e-06, -2.5868290322250687e-05, 0.0, -2.288818359375e-05, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0007418394088745117, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -1.1444091796875e-05, -4.594819068908691, -1.33514404296875e-05, -0.26062583923339844, -5.53131103515625e-05, -0.0007381439208984375, -1.9073486328125e-05, -0.000308990478515625, -0.00078582763671875, -0.000186920166015625, -0.003693222999572754, 0.0, -0.000274658203125, 0.0, -0.00019872188568115234, 0.0, -1.1444091796875e-05, -0.003383636474609375, -5.53131103515625e-05, -2.2649765014648438e-06, -3.373566141817719e-05, -3.099440846199286e-06, 0.0, -0.0053424835205078125, 0.0, -0.00043487548828125, -3.4332275390625e-05, -0.0005794763565063477, -1.9073486328125e-06], "choice_history": [97, 283, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Huffer", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "BEAST", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 2, "hole0": 4}], "hole3": "create_minion", "hole0": "Huffer", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Huffer"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "BEAST"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -4.906176293578483, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            BEAST, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"score_history": [-0.0001735687255859375, -3.24249267578125e-05, -0.00432793190702796, -2.8013790142722428e-05, -3.50363552570343e-06, -3.695487976074219e-05, 0.0, -8.20159912109375e-05, -4.08548641204834, -0.0016078948974609375, -2.0265579223632812e-06, -0.0015221827197819948, -4.6372413635253906e-05, -1.1920928244535389e-07, -0.0005900835967622697, -5.7220458984375e-06, -0.0005873439367860556, 0.0, -0.010201454162597656, -2.47955322265625e-05, -0.000774383544921875, -3.814697265625e-06, -8.20159912109375e-05, 0.0, -0.0017070770263671875, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0003814697265625, 0.0, -1.71661376953125e-05, -0.9435043334960938, -3.62396240234375e-05, -4.999805241823196e-06, -2.861022494471399e-06, -3.635883331298828e-05, -5.960462772236497e-07, -0.000837518775369972, -1.1920928244535389e-07, -0.0002918243408203125, -0.0005588531494140625, -3.24249267578125e-05, -0.011770248413085938, -5.7220458984375e-06, -9.34600830078125e-05, -8.20159912109375e-05, -0.0018938779830932617, -1.9073486328125e-06, -0.085174560546875, -0.000225067138671875, -0.09983682632446289, -3.814697265625e-06, -0.013981819152832031, -0.01578044891357422, -0.00118349795229733, -2.288818359375e-05, -2.09808349609375e-05, -0.0019788742065429688, -2.09808349609375e-05, -0.1359475553035736, -0.1078951358795166, -0.033219337463378906, -0.001575469970703125, -0.0005860328674316406, -0.0019054412841796875, -3.24249267578125e-05, -4.9591064453125e-05, -0.003055572509765625, 0.0, -1.52587890625e-05, 0.0, -3.4332275390625e-05, -2.47955322265625e-05, -0.000476837158203125, -1.9073486328125e-06], "choice_history": [97, 283, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Huffer", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 354, 95, 336, "charge", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 88, 325, "Charge", "<EOS>", 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": [{"value": {"value": true, "_type": "NameConstant"}, "_type": "keyword", "arg": "charge"}, {"value": {"_type": "Template78", "hole1": [{"_type": "Template79", "hole0": "Charge"}, {"_type": "Template59", "hole1": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "hole0": "IsType"}], "hole0": "Aura"}, "_type": "keyword", "arg": "auras"}], "hole2": 2, "_type": "Template68", "hole1": 4, "hole0": "Minion"}], "hole3": "create_minion", "hole0": "Huffer", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Huffer", "_type": "Template27", "hole2": "HUNTER", "hole1": 3}], "hole1": "MinionCard"}, "score": -5.569944726491755, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True, auras=[Aura(Charge(),\n            MinionSelector(IsType(MINION_TYPE.BEAST)))])\n"}, {"score_history": [-0.0001735687255859375, -3.24249267578125e-05, -0.00432793190702796, -2.8013790142722428e-05, -3.50363552570343e-06, -3.695487976074219e-05, 0.0, -8.20159912109375e-05, -0.018522262573242188, -0.005401611328125, -3.0517578125e-05, 0.0, -3.099440846199286e-06, -1.9073486328125e-06, -6.115436553955078e-05, 0.0, -5.568073272705078, -0.0002593994140625, -0.0007381439208984375, -5.9604644775390625e-06, -9.739398956298828e-05, -5.7220458984375e-06, -3.814697265625e-06, -9.417486580787227e-06, 0.0, -8.20159912109375e-05, 0.0, -2.47955322265625e-05, -9.5367431640625e-06, -1.728534698486328e-05, -3.814697265625e-06, -0.0004261731228325516, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.2516937255859375, 0.0, -0.06615638732910156, -0.0033969879150390625, -0.00022125244140625, -0.0031474828720092773, 0.0, -0.0005931854248046875, 0.0, -0.00035893917083740234, 0.0, -3.4332275390625e-05, -0.0036869049072265625, -8.0108642578125e-05, -2.2649765014648438e-06, -4.9470632802695036e-05, -3.218649908376392e-06, 0.0, -0.003980278968811035, 0.0, -0.0004978179931640625, -3.24249267578125e-05, -0.0004918575286865234, -1.9073486328125e-06], "choice_history": [97, 283, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Huffer", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 2, "hole0": 4}], "hole3": "create_minion", "hole0": "Huffer", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Huffer"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -5.932985627669268, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"score_history": [-0.0001735687255859375, -3.24249267578125e-05, -0.00432793190702796, -2.8013790142722428e-05, -3.50363552570343e-06, -3.695487976074219e-05, 0.0, -8.20159912109375e-05, -0.018522262573242188, -0.005401611328125, -3.0517578125e-05, 0.0, -3.099440846199286e-06, -1.9073486328125e-06, -6.115436553955078e-05, 0.0, -0.0045261383056640625, -0.0001430511474609375, -0.0001239776611328125, -1.239776611328125e-05, -6.175041198730469e-05, -3.814697265625e-06, -3.814697265625e-06, -2.5868290322250687e-05, 0.0, -2.288818359375e-05, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0007418394088745117, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -1.1444091796875e-05, -0.1257305145263672, 0.0, -0.00016021728515625, -5.14984130859375e-05, -0.0008418560028076172, -1.33514404296875e-05, -0.0003204345703125, -0.0004711151123046875, -0.0002269744873046875, -0.0012614727020263672, 0.0, -0.0001544952392578125, 0.0, -0.00019490718841552734, 0.0, -9.5367431640625e-06, -0.002933502197265625, -6.103515625e-05, -4.172325134277344e-06, -3.4927710657939315e-05, -3.099440846199286e-06, 0.0, -5.799212455749512, -1.9073486328125e-06, -0.00174713134765625, -9.34600830078125e-05, -0.0014678239822387695, 0.0], "choice_history": [97, 283, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Huffer", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "divine_shield", "_type": "Template50", "hole1": 2, "hole0": 4}], "hole3": "create_minion", "hole0": "Huffer", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Huffer"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -5.969570482415747, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, divine_shield=True)\n"}, {"score_history": [-0.0001735687255859375, -3.24249267578125e-05, -0.00432793190702796, -2.8013790142722428e-05, -3.50363552570343e-06, -3.695487976074219e-05, 0.0, -8.20159912109375e-05, -0.018522262573242188, -5.269222259521484, -3.4332275390625e-05, 0.0, -6.318092346191406e-06, 0.0, -3.4689903259277344e-05, -1.9073486328125e-06, -0.061013221740722656, -6.866455078125e-05, -7.2479248046875e-05, -7.033342626527883e-06, -1.5497207641601562e-05, -7.05718994140625e-05, -7.62939453125e-06, -0.0011420067166909575, 0.0, -0.0001430511474609375, -1.9073486328125e-06, -2.86102294921875e-05, -1.33514404296875e-05, -4.76837158203125e-05, -1.9073486328125e-06, -0.0008733264403417706, -3.814697265625e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -9.72747802734375e-05, -9.5367431640625e-06, -0.15266990661621094, -1.9073486328125e-06, -7.05718994140625e-05, -1.71661376953125e-05, -0.001040339469909668, -1.33514404296875e-05, -0.0006256103515625, -3.814697265625e-06, -0.000308990478515625, -7.05718994140625e-05, -6.866455078125e-05, 0.0, -0.002809762954711914, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.5194216966629028, 0.0, -2.09808349609375e-05, -0.03365516662597656, -0.0011091232299804688, -3.0397925002034754e-05, -3.576278118089249e-07, -0.00036781656672246754, 0.0, -0.0027877092361450195, -1.1920928244535389e-07, -0.0007038116455078125, -2.86102294921875e-05, -0.0005109310150146484, -1.9073486328125e-06], "choice_history": [97, 283, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 351, 53, 183, "Huffer", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "p", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 2, "hole0": 4}], "hole3": "create_minion", "hole0": "Huffer", "_type": "Template5", "hole2": [{"hole2": [{"_type": "Str", "s": "Huffer"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}, {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -6.0725965519686085, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(4, 2, charge=True)\n"}, {"score_history": [-0.0001735687255859375, -3.24249267578125e-05, -0.00432793190702796, -2.8013790142722428e-05, -3.50363552570343e-06, -3.695487976074219e-05, 0.0, -8.20159912109375e-05, -0.018522262573242188, -0.005401611328125, -3.0517578125e-05, 0.0, -3.099440846199286e-06, -1.9073486328125e-06, -6.115436553955078e-05, 0.0, -0.0045261383056640625, -0.0001430511474609375, -0.0001239776611328125, -1.239776611328125e-05, -6.175041198730469e-05, -3.814697265625e-06, -3.814697265625e-06, -2.5868290322250687e-05, 0.0, -2.288818359375e-05, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0007418394088745117, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -1.1444091796875e-05, -5.423079490661621, -1.33514404296875e-05, -0.6199779510498047, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -0.0033321380615234375, -8.106231689453125e-06, -0.009357452392578125, -1.9073486328125e-06, -0.12987136840820312, -0.0013408660888671875, -0.0003070831298828125, -0.0038264989852905273, 0.0, -0.0004138946533203125, 0.0, -0.00036263465881347656, 0.0, -2.09808349609375e-05, -0.0045757293701171875, -6.4849853515625e-05, -2.2649765014648438e-06, -4.672895011026412e-05, -3.099440846199286e-06, 0.0, -0.004078865051269531, 0.0, -0.00055694580078125, -3.4332275390625e-05, -0.0005128383636474609, -1.9073486328125e-06], "choice_history": [97, 283, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Huffer", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 2, "hole0": 4}], "hole3": "create_minion", "hole0": "Huffer", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Huffer"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -6.236386859575305, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            HUNTER, CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"score_history": [-0.0001735687255859375, -3.24249267578125e-05, -0.00432793190702796, -2.8013790142722428e-05, -3.50363552570343e-06, -3.695487976074219e-05, 0.0, -8.20159912109375e-05, -0.018522262573242188, -0.005401611328125, -3.0517578125e-05, 0.0, -3.099440846199286e-06, -1.9073486328125e-06, -6.115436553955078e-05, 0.0, -0.0045261383056640625, -0.0001430511474609375, -0.0001239776611328125, -1.239776611328125e-05, -6.175041198730469e-05, -3.814697265625e-06, -3.814697265625e-06, -2.5868290322250687e-05, 0.0, -2.288818359375e-05, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0007418394088745117, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -1.1444091796875e-05, -5.423079490661621, -1.33514404296875e-05, -0.7738418579101562, -3.24249267578125e-05, -0.00044655799865722656, -3.24249267578125e-05, -0.000164031982421875, -0.0005435943603515625, -0.0001926422119140625, -0.002525925636291504, 0.0, -0.000232696533203125, 0.0, -0.00019693374633789062, 0.0, -9.5367431640625e-06, -0.0029239654541015625, -6.4849853515625e-05, -2.2649765014648438e-06, -3.659658250398934e-05, -2.9802317840221804e-06, 0.0, -0.005078911781311035, 0.0, -0.0004291534423828125, -3.24249267578125e-05, -0.0005794763565063477, -1.9073486328125e-06], "choice_history": [97, 283, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Huffer", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "HUNTER", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 2, "hole0": 4}], "hole3": "create_minion", "hole0": "Huffer", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Huffer"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -6.245038593395975, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            HUNTER, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"score_history": [-0.0001735687255859375, -3.24249267578125e-05, -0.00432793190702796, -2.8013790142722428e-05, -3.50363552570343e-06, -3.695487976074219e-05, 0.0, -8.20159912109375e-05, -0.018522262573242188, -0.005401611328125, -3.0517578125e-05, 0.0, -3.099440846199286e-06, -1.9073486328125e-06, -6.115436553955078e-05, 0.0, -0.0045261383056640625, -0.0001430511474609375, -0.0001239776611328125, -1.239776611328125e-05, -6.175041198730469e-05, -3.814697265625e-06, -3.814697265625e-06, -2.5868290322250687e-05, 0.0, -2.288818359375e-05, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0007418394088745117, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -1.1444091796875e-05, -4.594819068908691, -1.33514404296875e-05, -1.4776735305786133, -3.814697265625e-06, -0.000743865966796875, 0.0, -0.0260162353515625, -4.410743713378906e-06, -0.004100799560546875, -1.9073486328125e-06, -0.13727951049804688, -0.0020160675048828125, -0.0003490447998046875, -0.00513005256652832, 0.0, -0.0003108978271484375, 0.0, -0.00037217140197753906, 0.0, -1.9073486328125e-05, -0.0051288604736328125, -5.53131103515625e-05, -2.1457672119140625e-06, -4.60137271147687e-05, -2.9802317840221804e-06, 0.0, -0.0039942264556884766, 0.0, -0.0005855560302734375, -3.4332275390625e-05, -0.0005433559417724609, -1.9073486328125e-06], "choice_history": [97, 283, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Huffer", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "BEAST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 2, "hole0": 4}], "hole3": "create_minion", "hole0": "Huffer", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Huffer"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "BEAST"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -6.293823087406736, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            BEAST, CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"score_history": [-0.0001735687255859375, -3.24249267578125e-05, -5.445214748382568, -4.768370445162873e-07, -1.4066696166992188e-05, -3.254413604736328e-05, 0.0, -3.4332275390625e-05, -0.5482139587402344, -0.0021953582763671875, -3.933906555175781e-06, -0.0013548923889175057, -3.8623809814453125e-05, -1.1920928244535389e-07, -0.0007071455474942923, -1.1444091796875e-05, -0.0005104539450258017, 0.0, -0.008724212646484375, -1.1444091796875e-05, -0.0007171630859375, -3.814697265625e-06, -7.82012939453125e-05, 0.0, -0.0016422271728515625, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0004405975341796875, 0.0, -1.71661376953125e-05, -0.42497825622558594, -0.00016021728515625, -3.8146954466355965e-06, -3.4570634852570947e-06, -2.765626231848728e-05, 0.0, -0.0030859708786010742, 0.0, -0.0003681182861328125, -4.00543212890625e-05, -0.0001283884048461914, -1.9073486328125e-06], "choice_history": [97, 283, "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Huffer", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 2, "hole0": 4}], "hole3": "create_minion", "hole0": "<UNK>", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Huffer", "_type": "Template27", "hole2": "HUNTER", "hole1": 3}], "hole1": "MinionCard"}, "score": -6.438986018115763, "inferred_code": "class <UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"score_history": [-0.0001735687255859375, -3.24249267578125e-05, -0.00432793190702796, -2.8013790142722428e-05, -3.50363552570343e-06, -3.695487976074219e-05, 0.0, -8.20159912109375e-05, -0.018522262573242188, -0.005401611328125, -3.0517578125e-05, 0.0, -3.099440846199286e-06, -1.9073486328125e-06, -6.115436553955078e-05, 0.0, -0.0045261383056640625, -0.0001430511474609375, -0.0001239776611328125, -1.239776611328125e-05, -6.175041198730469e-05, -3.814697265625e-06, -3.814697265625e-06, -2.5868290322250687e-05, 0.0, -2.288818359375e-05, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0007418394088745117, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -1.1444091796875e-05, -0.1257305145263672, 0.0, -0.00016021728515625, -5.14984130859375e-05, -0.0008418560028076172, -1.33514404296875e-05, -0.0003204345703125, -0.0004711151123046875, -0.0002269744873046875, -0.0012614727020263672, 0.0, -0.0001544952392578125, 0.0, -0.00019490718841552734, 0.0, -9.5367431640625e-06, -6.193428039550781, -4.38690185546875e-05, -8.342321962118149e-07, -2.3841855067985307e-07, -0.000152587890625, -5.960462772236497e-07, -0.00036032049683853984, 0.0, -0.000308990478515625, -0.000823974609375, -5.340576171875e-05, -0.015560269355773926, -5.7220458984375e-06, -8.0108642578125e-05, -8.7738037109375e-05, -0.001949310302734375, -1.9073486328125e-06, -0.0973520278930664, -0.0001888275146484375, -0.12076151371002197, -3.814697265625e-06, -0.013561248779296875, -0.01685047149658203, -0.0012413301737979054, -2.288818359375e-05, -2.09808349609375e-05, -0.00202178955078125, -2.09808349609375e-05, -0.1420571357011795, -0.09995472431182861, -0.03361320495605469, -0.001644134521484375, -0.0006051063537597656, -0.0017642974853515625, -3.24249267578125e-05, -5.14984130859375e-05, -0.0030193328857421875, 0.0, -1.52587890625e-05, 0.0, -3.24249267578125e-05, -2.6702880859375e-05, -0.000476837158203125, -1.9073486328125e-06], "choice_history": [97, 283, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Huffer", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 354, 95, 336, "charge", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 88, 325, "Charge", "<EOS>", 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": [{"value": {"value": true, "_type": "NameConstant"}, "_type": "keyword", "arg": "charge"}, {"value": {"_type": "Template78", "hole1": [{"_type": "Template79", "hole0": "Charge"}, {"_type": "Template59", "hole1": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "hole0": "IsType"}], "hole0": "Aura"}, "_type": "keyword", "arg": "auras"}], "hole2": 2, "_type": "Template68", "hole1": 4, "hole0": "Minion"}], "hole3": "create_minion", "hole0": "Huffer", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Huffer"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -6.912209743638442, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True, auras=[Aura(Charge(),\n            MinionSelector(IsType(MINION_TYPE.BEAST)))])\n"}, {"score_history": [-0.0001735687255859375, -3.24249267578125e-05, -0.00432793190702796, -2.8013790142722428e-05, -3.50363552570343e-06, -3.695487976074219e-05, 0.0, -8.20159912109375e-05, -7.891132354736328, -0.7506570816040039, -0.015670299530029297, -0.005420804023742676, -0.017215728759765625, 0.0, -0.05256553366780281, 0.0, -0.01615607738494873, 0.0, -0.0026340484619140625, 0.0, -1.1444091796875e-05, -0.0026264190673828125, -0.0009746551513671875, -8.7022617663024e-06, -5.364403477869928e-06, -1.2636125575227197e-05, 0.0, -0.004586219787597656, 0.0, -0.0003204345703125, -4.00543212890625e-05, -0.0001302957534790039, -3.814697265625e-06], "choice_history": [97, 283, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 358, 134, 306, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 2, "hole0": 4}], "hole3": "create_minion", "hole0": "Huffer", "_type": "Template5", "hole2": [{"hole2": 2, "_type": "Template68", "hole1": 4, "hole0": "Minion"}], "hole1": "MinionCard"}, "score": -8.764856382255857, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        return Minion(4, 2)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}]}
{"index": 54, "beams": [{"score_history": [-0.0013980865478515625, -6.67572021484375e-05, -3.814697265625e-06, -0.0003910064697265625, -0.0001506805419921875, -3.933898824470816e-06, -0.0010631411569193006, -3.814697265625e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.00018560374155640602, -1.9669512766995467e-05, -2.3841830625315197e-06, -4.1961669921875e-05, -0.009622573852539062, -0.000213623046875, -2.50339189733495e-06, -1.9073486328125e-06, -1.692756632110104e-05, 0.0, -0.002832651138305664, 0.0, -0.005707740783691406, -0.00014495849609375, -7.43865966796875e-05, 0.0, -0.0004177093505859375, 0.0, -6.29425048828125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.013842887245118618, 0.0, -2.288818359375e-05, -0.022887229919433594, -0.011110305786132812, -0.0025157928466796875, -0.0001544952392578125, -5.4957810789346695e-05, -9.5367431640625e-06, -0.009769439697265625, -0.0040187835693359375, -0.000152587890625, -0.0001010894775390625, 0.0, -8.0108642578125e-05, 0.0, -0.0015058517456054688, 0.0, -5.7220458984375e-06, 0.0, -0.00026023387908935547, -9.5367431640625e-06], "choice_history": [96, 173, 358, 105, 152, "Humility", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 43, 145, 23, 179, "1", "<EOS>", 99, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PALADIN", "_type": "Template2", "hole1": 1, "hole0": "Humility"}, {"hole2": [{"right": {"_type": "Template76", "hole1": "calculate_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, "op": {"_type": "Sub"}, "_type": "BinOp", "left": {"n": 1, "_type": "Num"}}], "_type": "Template3", "hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Humility"}], "_type": "Module"}, "score": -0.08898744632006128, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n"}, {"score_history": [-0.0013980865478515625, -6.67572021484375e-05, -3.814697265625e-06, -0.0003910064697265625, -0.0001506805419921875, -3.933898824470816e-06, -0.0010631411569193006, -3.814697265625e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.00018560374155640602, -1.9669512766995467e-05, -2.3841830625315197e-06, -4.1961669921875e-05, -0.009622573852539062, -0.000213623046875, -2.50339189733495e-06, -1.9073486328125e-06, -1.692756632110104e-05, 0.0, -0.002832651138305664, 0.0, -0.005707740783691406, -0.00014495849609375, -7.43865966796875e-05, 0.0, -0.0004177093505859375, 0.0, -6.29425048828125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.013842887245118618, 0.0, -2.288818359375e-05, -4.994748115539551, -0.0035190582275390625, -0.029976380988955498, -5.7220458984375e-06], "choice_history": [96, 173, 358, 105, 152, "Humility", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 52, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PALADIN", "_type": "Template2", "hole1": 1, "hole0": "Humility"}, {"hole2": [{"n": 1, "_type": "Num"}], "_type": "Template3", "hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Humility"}], "_type": "Module"}, "score": -5.064601051085447, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n"}, {"score_history": [-0.0013980865478515625, -6.67572021484375e-05, -3.814697265625e-06, -0.0003910064697265625, -0.0001506805419921875, -3.933898824470816e-06, -0.0010631411569193006, -3.814697265625e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.00018560374155640602, -1.9669512766995467e-05, -2.3841830625315197e-06, -4.1961669921875e-05, -0.009622573852539062, -0.000213623046875, -2.50339189733495e-06, -1.9073486328125e-06, -1.692756632110104e-05, 0.0, -0.002832651138305664, 0.0, -0.005707740783691406, -0.00014495849609375, -7.43865966796875e-05, 0.0, -0.0004177093505859375, 0.0, -6.29425048828125e-05, 0.0, -5.7220458984375e-06, 0.0, -5.253896713256836, -1.9073486328125e-06, -0.000148773193359375, -0.40013599395751953, -8.7738037109375e-05, -0.003005376784130931, -5.7220458984375e-06], "choice_history": [96, 173, 358, 105, 152, "Humility", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 346, 52, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PALADIN", "_type": "Template2", "hole1": 1, "hole0": "Humility"}, {"hole2": [{"n": 1, "_type": "Num"}], "_type": "Template3", "hole1": "set_health_to", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Humility"}], "_type": "Module"}, "score": -5.679768223478277, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n"}, {"score_history": [-0.0013980865478515625, -6.67572021484375e-05, -3.814697265625e-06, -0.0003910064697265625, -0.0001506805419921875, -3.933898824470816e-06, -0.0010631411569193006, -3.814697265625e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.00018560374155640602, -1.9669512766995467e-05, -2.3841830625315197e-06, -4.1961669921875e-05, -4.999032974243164, -0.0010128021240234375, -4.172325134277344e-06, -2.1457672119140625e-06, -4.768370445162873e-07, 0.0, -0.17207932472229004, -5.841255187988281e-06, -0.008971333503723145, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.0036182403564453125, 0.0, -1.33514404296875e-05, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -9.5367431640625e-06, -3.62396240234375e-05, -0.6351916790008545, -1.1920928244535389e-07, -7.62939453125e-05, -0.000362396240234375, -3.4332275390625e-05, 0.0, -0.0004119873046875, 0.0, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -0.008951861411333084, 0.0, -9.5367431640625e-06, -0.04445075988769531, -0.02283954620361328, -0.0004177093505859375, -0.0001964569091796875, -6.830878555774689e-05, -5.7220458984375e-06, -0.010545730590820312, -0.004290580749511719, -0.0001201629638671875, -0.000118255615234375, 0.0, -7.2479248046875e-05, 0.0, -0.001678466796875, 0.0, -7.62939453125e-06, 0.0, -0.00025856494903564453, -9.5367431640625e-06], "choice_history": [96, 173, 358, 105, 152, "Humility", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 137, 326, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 43, 145, 23, 179, "1", "<EOS>", 99, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole3": "target_func", "hole0": "Humility", "_type": "Template8", "hole2": "PALADIN", "hole1": 1}, {"hole2": [{"right": {"_type": "Template76", "hole1": "calculate_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, "op": {"_type": "Sub"}, "_type": "BinOp", "left": {"n": 1, "_type": "Num"}}], "_type": "Template3", "hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Humility"}], "_type": "Module"}, "score": -5.918578851588208, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n"}, {"score_history": [-0.0013980865478515625, -6.67572021484375e-05, -3.814697265625e-06, -0.0003910064697265625, -0.0001506805419921875, -3.933898824470816e-06, -0.0010631411569193006, -3.814697265625e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.00018560374155640602, -1.9669512766995467e-05, -2.3841830625315197e-06, -4.1961669921875e-05, -0.009622573852539062, -0.000213623046875, -2.50339189733495e-06, -1.9073486328125e-06, -1.692756632110104e-05, 0.0, -0.002832651138305664, 0.0, -0.005707740783691406, -0.00014495849609375, -7.43865966796875e-05, 0.0, -0.0004177093505859375, 0.0, -6.29425048828125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.013842887245118618, 0.0, -2.288818359375e-05, -0.022887229919433594, -0.011110305786132812, -0.0025157928466796875, -0.0001544952392578125, -5.4957810789346695e-05, -9.5367431640625e-06, -5.228760719299316, -0.7985153198242188, -1.9073486328125e-06, -0.00022685527801513672, -1.52587890625e-05], "choice_history": [96, 173, 358, 105, 152, "Humility", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 43, 145, 23, 179, "1", "<EOS>", 98, 23, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PALADIN", "_type": "Template2", "hole1": 1, "hole0": "Humility"}, {"hole2": [{"right": {"n": 1, "_type": "Num"}, "op": {"_type": "Add"}, "_type": "BinOp", "left": {"n": 1, "_type": "Num"}}], "_type": "Template3", "hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Humility"}], "_type": "Module"}, "score": -6.100604153168206, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 + 1)\n"}, {"score_history": [-0.0013980865478515625, -6.67572021484375e-05, -3.814697265625e-06, -0.0003910064697265625, -0.0001506805419921875, -3.933898824470816e-06, -0.0010631411569193006, -3.814697265625e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.00018560374155640602, -1.9669512766995467e-05, -2.3841830625315197e-06, -4.1961669921875e-05, -0.009622573852539062, -0.000213623046875, -2.50339189733495e-06, -1.9073486328125e-06, -1.692756632110104e-05, 0.0, -0.002832651138305664, 0.0, -0.005707740783691406, -0.00014495849609375, -7.43865966796875e-05, 0.0, -0.0004177093505859375, 0.0, -6.29425048828125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.013842887245118618, 0.0, -2.288818359375e-05, -5.733977317810059, 0.0, -0.5204735994338989, -4.41074053014745e-06], "choice_history": [96, 173, 358, 105, 152, "Humility", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PALADIN", "_type": "Template2", "hole1": 1, "hole0": "Humility"}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Humility"}], "_type": "Module"}, "score": -6.290807102267991, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self)\n"}, {"score_history": [-0.0013980865478515625, -6.67572021484375e-05, -3.814697265625e-06, -0.0003910064697265625, -0.0001506805419921875, -3.933898824470816e-06, -0.0010631411569193006, -3.814697265625e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.00018560374155640602, -1.9669512766995467e-05, -2.3841830625315197e-06, -4.1961669921875e-05, -0.009622573852539062, -0.000213623046875, -2.50339189733495e-06, -1.9073486328125e-06, -1.692756632110104e-05, 0.0, -0.002832651138305664, 0.0, -0.005707740783691406, -0.00014495849609375, -7.43865966796875e-05, 0.0, -0.0004177093505859375, 0.0, -6.29425048828125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.013842887245118618, 0.0, -2.288818359375e-05, -0.022887229919433594, -0.011110305786132812, -0.0025157928466796875, -0.0001544952392578125, -5.4957810789346695e-05, -9.5367431640625e-06, -5.228760719299316, -1.0342788696289062, -0.000141143798828125, -0.0003032684326171875, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.00321197509765625, 0.0, -7.62939453125e-06, 0.0, -0.0004011392593383789, -5.7220458984375e-06], "choice_history": [96, 173, 358, 105, 152, "Humility", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 43, 145, 23, 179, "1", "<EOS>", 98, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PALADIN", "_type": "Template2", "hole1": 1, "hole0": "Humility"}, {"hole2": [{"right": {"_type": "Template76", "hole1": "calculate_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, "op": {"_type": "Add"}, "_type": "BinOp", "left": {"n": 1, "_type": "Num"}}], "_type": "Template3", "hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Humility"}], "_type": "Module"}, "score": -6.340251780045037, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 + self.target.calculate_attack())\n"}, {"score_history": [-0.0013980865478515625, -6.67572021484375e-05, -3.814697265625e-06, -0.0003910064697265625, -0.0001506805419921875, -3.933898824470816e-06, -0.0010631411569193006, -3.814697265625e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.00018560374155640602, -1.9669512766995467e-05, -2.3841830625315197e-06, -4.1961669921875e-05, -4.999032974243164, -0.0010128021240234375, -4.172325134277344e-06, -2.1457672119140625e-06, -4.768370445162873e-07, 0.0, -0.17207932472229004, -5.841255187988281e-06, -0.008971333503723145, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.0036182403564453125, 0.0, -1.33514404296875e-05, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -9.5367431640625e-06, -3.62396240234375e-05, -1.1389567852020264, -1.9073486328125e-06, -0.0001125335693359375, -0.001590728759765625, -4.1961669921875e-05, 0.0, -0.0001621246337890625, 0.0, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -0.009704099968075752, 0.0, -1.33514404296875e-05, -0.048534393310546875, -0.02571868896484375, -0.0004425048828125, -0.000171661376953125, -6.830878555774689e-05, -5.7220458984375e-06, -0.01058197021484375, -0.004429817199707031, -0.000118255615234375, -0.0001277923583984375, 0.0, -7.43865966796875e-05, 0.0, -0.0016584396362304688, 0.0, -7.62939453125e-06, 0.0, -0.00025856494903564453, -9.5367431640625e-06], "choice_history": [96, 173, 358, 105, 152, "Humility", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 137, 326, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 43, 145, 23, 179, "1", "<EOS>", 99, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "hole3": "target_func", "hole0": "Humility", "_type": "Template8", "hole2": "PALADIN", "hole1": 1}, {"hole2": [{"right": {"_type": "Template76", "hole1": "calculate_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, "op": {"_type": "Sub"}, "_type": "BinOp", "left": {"n": 1, "_type": "Num"}}], "_type": "Template3", "hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Humility"}], "_type": "Module"}, "score": -6.431244270496215, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n"}, {"score_history": [-0.0013980865478515625, -6.67572021484375e-05, -3.814697265625e-06, -0.0003910064697265625, -0.0001506805419921875, -3.933898824470816e-06, -0.0010631411569193006, -3.814697265625e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.00018560374155640602, -1.9669512766995467e-05, -2.3841830625315197e-06, -4.1961669921875e-05, -0.009622573852539062, -0.000213623046875, -2.50339189733495e-06, -1.9073486328125e-06, -1.692756632110104e-05, 0.0, -0.002832651138305664, 0.0, -5.90858268737793, -0.000579833984375, -0.01729893684387207, 0.0, -0.000560760498046875, -9.72747802734375e-05, -0.0052032470703125, -3.4332275390625e-05, -6.103515625e-05, -7.152555099310121e-07, -1.9073486328125e-06, -0.0010703799780458212, -8.344646857949556e-07, -1.9073486328125e-06, -0.00010526180267333984, -2.0265558760002023e-06, -0.030979156494140625, -3.814697265625e-06, -0.00080108642578125, -2.47955322265625e-05, -1.52587890625e-05, -3.0517578125e-05, 0.0, -2.3245811462402344e-05, -5.7220458984375e-06, -1.3589859008789062e-05, 0.0, -1.1682510375976562e-05, -1.1920928244535389e-07, -2.1696090698242188e-05, -4.768370445162873e-07, -0.0015459060668945312, -1.33514404296875e-05, -7.43865966796875e-05, -1.1444091796875e-05, -3.814697265625e-06, -0.008370193652808666, -5.960462772236497e-07, -0.0948495864868164, -0.0013780593872070312, -0.024349212646484375, -0.00012969970703125, -0.0008487701416015625, -3.814697265625e-06, -0.0001850128173828125, 0.0, -0.15544044971466064, 0.0, -7.62939453125e-06, 0.0, -0.23165591061115265, -4.768370445162873e-07, -0.01769256591796875, -0.048206329345703125, -0.0001506805419921875, -0.00127410888671875, 0.0, -0.000164031982421875, 0.0, -0.0016317367553710938, 0.0, -7.62939453125e-06, 0.0, -0.0003763437271118164, -7.62939453125e-06, -0.00235748291015625, -0.009362220764160156, -0.000499725341796875, -9.5367431640625e-06, -0.06987380981445312, 0.0, -0.0012683868408203125, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -0.02049579843878746, 0.0, -0.0014514923095703125, -0.0067119598388671875, 0.0, -0.051311101764440536, -3.218649908376392e-06], "choice_history": [96, 173, 358, 105, 152, "Humility", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 14, 145, 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 99, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PALADIN", "_type": "Template2", "hole1": 1, "hole0": "Humility"}, {"body": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"right": {"_type": "Template76", "hole1": "calculate_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, "op": {"_type": "Sub"}, "_type": "BinOp", "left": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "health"}}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "<UNK>"}], "_type": "Template77", "hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "use"}], "_type": "ClassDef", "name": "Humility"}], "_type": "Module"}, "score": -6.733336694697456, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - self.target.calculate_attack()\n        self.target.change_attack(<UNK>)\n"}, {"score_history": [-0.0013980865478515625, -6.67572021484375e-05, -3.814697265625e-06, -0.0003910064697265625, -0.0001506805419921875, -3.933898824470816e-06, -0.0010631411569193006, -3.814697265625e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.00018560374155640602, -1.9669512766995467e-05, -2.3841830625315197e-06, -4.1961669921875e-05, -0.009622573852539062, -0.000213623046875, -2.50339189733495e-06, -1.9073486328125e-06, -1.692756632110104e-05, 0.0, -0.002832651138305664, 0.0, -0.005707740783691406, -0.00014495849609375, -7.43865966796875e-05, 0.0, -0.0004177093505859375, 0.0, -6.29425048828125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.013842887245118618, 0.0, -2.288818359375e-05, -0.022887229919433594, -0.011110305786132812, -0.0025157928466796875, -0.0001544952392578125, -5.4957810789346695e-05, -9.5367431640625e-06, -0.009769439697265625, -6.8126325607299805, -5.7220458984375e-06, -0.00014495849609375, -1.1444091796875e-05], "choice_history": [96, 173, 358, 105, 152, "Humility", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 43, 145, 23, 179, "1", "<EOS>", 99, 23, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PALADIN", "_type": "Template2", "hole1": 1, "hole0": "Humility"}, {"hole2": [{"right": {"n": 1, "_type": "Num"}, "op": {"_type": "Sub"}, "_type": "BinOp", "left": {"n": 1, "_type": "Num"}}], "_type": "Template3", "hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "Humility"}], "_type": "Module"}, "score": -6.895648217689995, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - 1)\n"}, {"score_history": [-0.0013980865478515625, -6.67572021484375e-05, -3.814697265625e-06, -0.0003910064697265625, -0.0001506805419921875, -3.933898824470816e-06, -0.0010631411569193006, -3.814697265625e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.00018560374155640602, -1.9669512766995467e-05, -2.3841830625315197e-06, -4.1961669921875e-05, -0.009622573852539062, -0.000213623046875, -2.50339189733495e-06, -1.9073486328125e-06, -1.692756632110104e-05, 0.0, -6.2132673263549805, 0.0, -0.14069080352783203, -0.0001010894775390625, -0.004406094551086426, 0.0, -0.00079345703125, -9.918212890625e-05, -0.0030498504638671875, -4.9591064453125e-05, -6.103515625e-05, -2.3841855067985307e-07, 0.0, -0.000511884514708072, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00011265277862548828, -1.1920922133867862e-06, -0.039788246154785156, -7.62939453125e-06, -0.00104522705078125, -2.6702880859375e-05, -1.1444091796875e-05, -2.86102294921875e-05, 0.0, -2.7060508728027344e-05, -5.7220458984375e-06, -1.3589859008789062e-05, 0.0, -1.3470649719238281e-05, -1.1920928244535389e-07, -1.9788742065429688e-05, -4.768370445162873e-07, -0.0010347366333007812, -1.52587890625e-05, -4.76837158203125e-05, -1.1444091796875e-05, -3.814697265625e-06, -0.007655833847820759, -4.768370445162873e-07, -0.08845233917236328, -0.0015382766723632812, -0.021490097045898438, -0.0001201629638671875, -0.000812530517578125, -1.9073486328125e-06, -0.0001888275146484375, 0.0, -0.15976440906524658, 0.0, -7.62939453125e-06, 0.0, -0.23444905877113342, -4.768370445162873e-07, -0.01774883270263672, -0.04825401306152344, -0.0001506805419921875, -0.001293182373046875, 0.0, -0.0001621246337890625, 0.0, -0.0016326904296875, 0.0, -7.62939453125e-06, 0.0, -0.0003763437271118164, -7.62939453125e-06, -0.0032567977905273438, -0.011716842651367188, -0.0005550384521484375, -9.5367431640625e-06, -0.07319450378417969, 0.0, -0.001308441162109375, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -0.02063566818833351, 0.0, -0.00146484375, -0.0068225860595703125, 0.0, -0.04651614651083946, -3.218649908376392e-06], "choice_history": [96, 173, 358, 105, 152, "Humility", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Humility", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 14, 145, 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 99, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "ROGUE", "_type": "Template2", "hole1": 1, "hole0": "Humility"}, {"body": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"right": {"_type": "Template76", "hole1": "calculate_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, "op": {"_type": "Sub"}, "_type": "BinOp", "left": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "health"}}, "_type": "Assign"}, {"hole2": [{"_type": "Name", "id": "<UNK>"}], "_type": "Template77", "hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "use"}], "_type": "ClassDef", "name": "Humility"}], "_type": "Module"}, "score": -7.168093981440322, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - self.target.calculate_attack()\n        self.target.change_attack(<UNK>)\n"}, {"score_history": [-0.0013980865478515625, -6.67572021484375e-05, -3.814697265625e-06, -0.0003910064697265625, -0.0001506805419921875, -3.933898824470816e-06, -0.0010631411569193006, -3.814697265625e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.00018560374155640602, -1.9669512766995467e-05, -2.3841830625315197e-06, -4.1961669921875e-05, -0.009622573852539062, -0.000213623046875, -2.50339189733495e-06, -1.9073486328125e-06, -1.692756632110104e-05, 0.0, -0.002832651138305664, 0.0, -6.340928077697754, -0.0011644363403320312, -0.0017185211181640625, -1.9073486328125e-06, -0.00011003015242749825, -3.814697265625e-06, -0.001265406608581543, 0.0, -0.0013561248779296875, -0.0016336441040039062, -1.52587890625e-05, -0.0029849230777472258, -1.9073468138230965e-06, -0.000156402587890625, 0.0, -0.008836865425109863, -1.1920928244535389e-07, -0.011046409606933594, 0.0, -4.38690185546875e-05, 0.0, -0.0002002716064453125, 0.0, -6.318092346191406e-06, -5.960462772236497e-07, -0.009581058286130428, 0.0, -1.1444091796875e-05, -0.003208160400390625, -4.38690185546875e-05, -0.4975254237651825, -5.7220458984375e-06, -0.003643035888671875, 0.0, -8.7738037109375e-05, 0.0, -0.04689598083496094, 0.0, -2.1457672119140625e-06, -1.1920928244535389e-07, -0.022804515436291695, 0.0, -4.1961669921875e-05, -0.0008068084716796875, -1.9073486328125e-05, -0.40800029039382935, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "Humility", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 52, 179, "1", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 52, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PALADIN", "_type": "Template2", "hole1": 1, "hole0": "Humility"}, {"hole4": "change_attack", "hole6": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole3": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole0": {"_type": "Template79", "hole0": "super"}, "_type": "Template7", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole7": "change_attack", "hole8": [{"n": 1, "_type": "Num"}], "hole5": [{"n": 1, "_type": "Num"}], "hole1": "use"}], "_type": "ClassDef", "name": "Humility"}], "_type": "Module"}, "score": -7.380226696980387, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n        self.target.change_attack(1)\n"}, {"score_history": [-0.0013980865478515625, -6.67572021484375e-05, -3.814697265625e-06, -8.554646492004395, -2.1317453384399414, -0.057404775172472, -1.6689286894688848e-06, -0.0008926320588216186, -1.1920928244535389e-07, -0.0046443939208984375, -1.1920928244535389e-07], "choice_history": [96, 173, 358, 127, 230, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>"], "model_output": {"body": [{"hole2": "PALADIN", "_type": "Template31", "hole1": 1, "hole0": "Humility"}], "_type": "Module"}, "score": -10.750804197391048, "inferred_code": "super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN, CARD_RARITY.COMMON)\n"}, {"score_history": [-0.0013980865478515625, -6.67572021484375e-05, -3.814697265625e-06, -14.59614086151123], "choice_history": [96, 173, 358, 104], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score": -14.597609519958496, "inferred_code": "break\n"}, {"score_history": [-0.0013980865478515625, -6.67572021484375e-05, -22.857248306274414], "choice_history": [96, 173, 357], "model_output": {"body": [], "_type": "Module"}, "score": -22.858713150024414, "inferred_code": ""}]}
{"index": 55, "beams": [{"score_history": [-0.01355743408203125, -0.0001373291015625, -2.09808349609375e-05, -0.000499725341796875, -0.0025653839111328125, -0.00012397475074976683, -0.0011519708205014467, -0.00037746530142612755, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0001893381995614618, -4.720686411019415e-05, -2.622600959512056e-06, -1.9073486328125e-05, -0.004695892333984375, -8.58306884765625e-05, -0.001029161037877202, -0.00018310546875, -0.0003414769598748535, -0.0019702911376953125, -0.00011360082862665877, 0.0, -0.0008335113525390625, 0.0, -0.0059528350830078125, -0.000720977783203125, -3.4332275390625e-05, -1.9073486328125e-06, -0.013885498046875, 0.0, -0.0006084442138671875, 0.0, -5.7220458984375e-06, 0.0, -0.11266064643859863, -1.33514404296875e-05, -7.62939453125e-06, -0.002971649169921875, -2.86102294921875e-05, -0.0007364566554315388, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "<UNK>", "Mark", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 346, 52, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "HUNTER", "_type": "Template2", "hole1": 0, "hole0": "<UNK> Mark"}, {"hole2": [{"n": 1, "_type": "Num"}], "_type": "Template3", "hole1": "set_health_to", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "<UNK>Mark"}], "_type": "Module"}, "score": -0.16559441606318615, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n"}, {"score_history": [-0.01355743408203125, -0.0001373291015625, -2.09808349609375e-05, -0.000499725341796875, -0.0025653839111328125, -0.00012397475074976683, -0.0011519708205014467, -0.00037746530142612755, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0001893381995614618, -4.720686411019415e-05, -2.622600959512056e-06, -1.9073486328125e-05, -0.004695892333984375, -8.58306884765625e-05, -0.001029161037877202, -0.00018310546875, -0.0003414769598748535, -0.0019702911376953125, -0.00011360082862665877, 0.0, -0.0008335113525390625, 0.0, -0.0059528350830078125, -0.000720977783203125, -3.4332275390625e-05, -1.9073486328125e-06, -0.013885498046875, 0.0, -0.0006084442138671875, 0.0, -5.7220458984375e-06, 0.0, -3.6046478748321533, -1.9073486328125e-06, -9.5367431640625e-06, -0.5315666198730469, -0.017989158630371094, -0.0005645751953125, -5.7220458984375e-06, -0.0005094558000564575, -1.9073486328125e-06, -0.0081939697265625, -0.010213851928710938, -6.29425048828125e-05, -0.001224517822265625, -3.814697265625e-06, -0.0001583099365234375, 0.0, -0.007447242736816406, 0.0, -7.62939453125e-06, 0.0, -0.002751469612121582, 0.0], "choice_history": [96, 173, 358, 105, 152, "<UNK>", "Mark", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 43, 145, 23, 179, "1", "<EOS>", 99, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "HUNTER", "_type": "Template2", "hole1": 0, "hole0": "<UNK> Mark"}, {"hole2": [{"right": {"_type": "Template76", "hole1": "calculate_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, "op": {"_type": "Sub"}, "_type": "BinOp", "left": {"n": 1, "_type": "Num"}}], "_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "<UNK>Mark"}], "_type": "Module"}, "score": -4.234534671563097, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(1 - self.target.calculate_attack())\n"}, {"score_history": [-0.01355743408203125, -0.0001373291015625, -2.09808349609375e-05, -0.000499725341796875, -0.0025653839111328125, -0.00012397475074976683, -0.0011519708205014467, -0.00037746530142612755, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0001893381995614618, -4.720686411019415e-05, -2.622600959512056e-06, -1.9073486328125e-05, -0.004695892333984375, -8.58306884765625e-05, -0.001029161037877202, -0.00018310546875, -0.0003414769598748535, -0.0019702911376953125, -0.00011360082862665877, 0.0, -0.0008335113525390625, 0.0, -0.0059528350830078125, -0.000720977783203125, -3.4332275390625e-05, -1.9073486328125e-06, -0.013885498046875, 0.0, -0.0006084442138671875, 0.0, -5.7220458984375e-06, 0.0, -3.9066874980926514, -1.1920928244535389e-07, -0.2892475128173828, -0.3876056671142578, -0.0012722015380859375, -0.00281524658203125, 0.0, -0.0005207061767578125, -2.3841855067985307e-07, -0.015573740005493164, 0.0, -0.0033085413742810488, 0.0, -0.0002117156982421875, -7.62939453125e-06, -0.0001506805419921875, -1.3470649719238281e-05], "choice_history": [96, 173, 358, 105, 152, "<UNK>", "Mark", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "HUNTER", "_type": "Template2", "hole1": 0, "hole0": "<UNK> Mark"}, {"hole2": [{"hole2": 1, "_type": "Template69", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "<UNK>Mark"}], "_type": "Module"}, "score": -4.656589132999407, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(1), self)\n"}, {"score_history": [-0.01355743408203125, -0.0001373291015625, -2.09808349609375e-05, -0.000499725341796875, -0.0025653839111328125, -0.00012397475074976683, -0.0011519708205014467, -0.00037746530142612755, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0001893381995614618, -4.720686411019415e-05, -2.622600959512056e-06, -1.9073486328125e-05, -0.004695892333984375, -8.58306884765625e-05, -0.001029161037877202, -0.00018310546875, -0.0003414769598748535, -0.0019702911376953125, -0.00011360082862665877, 0.0, -0.0008335113525390625, 0.0, -0.0059528350830078125, -0.000720977783203125, -3.4332275390625e-05, -1.9073486328125e-06, -0.013885498046875, 0.0, -0.0006084442138671875, 0.0, -5.7220458984375e-06, 0.0, -3.6046478748321533, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444692611694336, 0.0, -0.03377068042755127, -2.0265579223632812e-06], "choice_history": [96, 173, 358, 105, 152, "<UNK>", "Mark", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "HUNTER", "_type": "Template2", "hole1": 0, "hole0": "<UNK> Mark"}, {"hole2": [{"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "<UNK>Mark"}], "_type": "Module"}, "score": -4.832075452465006, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score_history": [-0.01355743408203125, -0.0001373291015625, -2.09808349609375e-05, -0.000499725341796875, -0.0025653839111328125, -0.00012397475074976683, -0.0011519708205014467, -0.00037746530142612755, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0001893381995614618, -4.720686411019415e-05, -2.622600959512056e-06, -1.9073486328125e-05, -0.004695892333984375, -8.58306884765625e-05, -0.001029161037877202, -0.00018310546875, -0.0003414769598748535, -0.0019702911376953125, -0.00011360082862665877, 0.0, -0.0008335113525390625, 0.0, -0.0059528350830078125, -0.000720977783203125, -3.4332275390625e-05, -1.9073486328125e-06, -4.287288665771484, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -0.1494131088256836, 0.0, -0.19315052032470703, 0.0, -0.005424022674560547, 0.0, -0.27467793226242065, -2.0265579223632812e-06, -0.0036678314208984375, -0.09349250793457031, -0.0021514892578125, -0.0012722015380859375, 0.0, -0.0003739595413208008, -1.0728830375228426e-06, -0.006829500198364258, 0.0, -0.00120336445979774, 0.0, -0.0001430511474609375, -7.62939453125e-06, -0.0001220703125, -7.748603820800781e-06], "choice_history": [96, 173, 358, 105, 152, "<UNK>", "Mark", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", 126, 225, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "HUNTER", "_type": "Template2", "hole1": 0, "hole0": "<UNK> Mark"}, {"hole2": [{"hole2": 1, "_type": "Template69", "hole1": "effective_heal_power", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "heal", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}], "_type": "ClassDef", "name": "<UNK>Mark"}], "_type": "Module"}, "score": -5.053920370326182, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.heal(player.effective_heal_power(1), self)\n"}, {"score_history": [-0.01355743408203125, -0.0001373291015625, -2.09808349609375e-05, -0.000499725341796875, -0.0025653839111328125, -0.00012397475074976683, -0.0011519708205014467, -0.00037746530142612755, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0001893381995614618, -4.720686411019415e-05, -2.622600959512056e-06, -1.9073486328125e-05, -0.004695892333984375, -8.58306884765625e-05, -0.001029161037877202, -0.00018310546875, -0.0003414769598748535, -0.0019702911376953125, -0.00011360082862665877, 0.0, -0.0008335113525390625, 0.0, -0.0059528350830078125, -0.000720977783203125, -3.4332275390625e-05, -1.9073486328125e-06, -0.013885498046875, 0.0, -0.0006084442138671875, 0.0, -5.7220458984375e-06, 0.0, -3.924584150314331, 0.0, -1.9073486328125e-06, -0.2116832733154297, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-05, 0.0, -0.05872154235839844, 0.0, -7.62939453125e-06, 0.0, -0.9833072423934937, 0.0], "choice_history": [96, 173, 358, 105, 152, "<UNK>", "Mark", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "HUNTER", "_type": "Template2", "hole1": 0, "hole0": "<UNK> Mark"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "health"}], "_type": "Template3", "hole1": "increase_health", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "<UNK>Mark"}], "_type": "Module"}, "score": -5.2275466677131135, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n"}, {"score_history": [-0.01355743408203125, -0.0001373291015625, -2.09808349609375e-05, -0.000499725341796875, -0.0025653839111328125, -0.00012397475074976683, -0.0011519708205014467, -0.00037746530142612755, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0001893381995614618, -4.720686411019415e-05, -2.622600959512056e-06, -1.9073486328125e-05, -0.004695892333984375, -8.58306884765625e-05, -0.001029161037877202, -0.00018310546875, -0.0003414769598748535, -0.0019702911376953125, -0.00011360082862665877, 0.0, -0.0008335113525390625, 0.0, -0.0059528350830078125, -0.000720977783203125, -3.4332275390625e-05, -1.9073486328125e-06, -0.013885498046875, 0.0, -0.0006084442138671875, 0.0, -5.7220458984375e-06, 0.0, -5.286922931671143, 0.0, -1.9073486328125e-06, -0.029987335205078125, -0.014842987060546875, -0.0009613037109375, -9.5367431640625e-06, -0.0001550242304801941, -3.814697265625e-06, -0.007488250732421875, -0.010983467102050781, -6.866455078125e-05, -0.0006198883056640625, -5.7220458984375e-06, -0.000179290771484375, 0.0, -0.003920555114746094, 0.0, -7.62939453125e-06, 0.0, -0.0026084184646606445, 0.0], "choice_history": [96, 173, 358, 105, 152, "<UNK>", "Mark", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 346, 43, 145, 23, 179, "1", "<EOS>", 99, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "HUNTER", "_type": "Template2", "hole1": 0, "hole0": "<UNK> Mark"}, {"hole2": [{"right": {"_type": "Template76", "hole1": "calculate_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, "op": {"_type": "Sub"}, "_type": "BinOp", "left": {"n": 1, "_type": "Num"}}], "_type": "Template3", "hole1": "calculate_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "<UNK>Mark"}], "_type": "Module"}, "score": -5.407940892535635, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.calculate_attack(1 - self.target.calculate_attack())\n"}, {"score_history": [-0.01355743408203125, -0.0001373291015625, -2.09808349609375e-05, -0.000499725341796875, -0.0025653839111328125, -0.00012397475074976683, -0.0011519708205014467, -0.00037746530142612755, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0001893381995614618, -4.720686411019415e-05, -2.622600959512056e-06, -1.9073486328125e-05, -0.004695892333984375, -8.58306884765625e-05, -0.001029161037877202, -0.00018310546875, -0.0003414769598748535, -0.0019702911376953125, -0.00011360082862665877, 0.0, -0.0008335113525390625, 0.0, -0.0059528350830078125, -0.000720977783203125, -3.4332275390625e-05, -1.9073486328125e-06, -0.013885498046875, 0.0, -0.0006084442138671875, 0.0, -5.7220458984375e-06, 0.0, -4.968666076660156, 0.0, -2.86102294921875e-05, -0.3951997756958008, -0.014766693115234375, -0.0033922195434570312, -1.71661376953125e-05, -0.00025197863578796387, 0.0, -0.006976127624511719, -0.009280204772949219, -0.0001049041748046875, -0.0005512237548828125, -3.814697265625e-06, -0.0001583099365234375, 0.0, -0.004908561706542969, 0.0, -7.62939453125e-06, 0.0, -0.002785801887512207, 0.0], "choice_history": [96, 173, 358, 105, 152, "<UNK>", "Mark", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "bounce", "<EOS>", 346, 43, 145, 23, 179, "1", "<EOS>", 99, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "HUNTER", "_type": "Template2", "hole1": 0, "hole0": "<UNK> Mark"}, {"hole2": [{"right": {"_type": "Template76", "hole1": "calculate_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, "op": {"_type": "Sub"}, "_type": "BinOp", "left": {"n": 1, "_type": "Num"}}], "_type": "Template3", "hole1": "bounce", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "<UNK>Mark"}], "_type": "Module"}, "score": -5.456273263353296, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.bounce(1 - self.target.calculate_attack())\n"}, {"score_history": [-0.01355743408203125, -0.0001373291015625, -2.09808349609375e-05, -0.000499725341796875, -0.0025653839111328125, -0.00012397475074976683, -0.0011519708205014467, -0.00037746530142612755, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0001893381995614618, -4.720686411019415e-05, -2.622600959512056e-06, -1.9073486328125e-05, -0.004695892333984375, -8.58306884765625e-05, -0.001029161037877202, -0.00018310546875, -0.0003414769598748535, -0.0019702911376953125, -0.00011360082862665877, 0.0, -0.0008335113525390625, 0.0, -0.0059528350830078125, -0.000720977783203125, -3.4332275390625e-05, -1.9073486328125e-06, -0.013885498046875, 0.0, -0.0006084442138671875, 0.0, -5.7220458984375e-06, 0.0, -3.9066874980926514, -1.1920928244535389e-07, -1.3837900161743164, -0.12541580200195312, -0.017434120178222656, -0.0023059844970703125, -9.34600830078125e-05, -0.00023739412426948547, -3.814697265625e-06, -0.0076885223388671875, -0.011851310729980469, -0.00012969970703125, -0.000270843505859375, -3.814697265625e-06, -0.0001277923583984375, 0.0, -0.0029306411743164062, 0.0, -7.62939453125e-06, 0.0, -0.0028449296951293945, 0.0], "choice_history": [96, 173, 358, 105, 152, "<UNK>", "Mark", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 346, 43, 145, 23, 179, "1", "<EOS>", 99, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "HUNTER", "_type": "Template2", "hole1": 0, "hole0": "<UNK> Mark"}, {"hole2": [{"right": {"_type": "Template76", "hole1": "calculate_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, "op": {"_type": "Sub"}, "_type": "BinOp", "left": {"n": 1, "_type": "Num"}}], "_type": "Template3", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "<UNK>Mark"}], "_type": "Module"}, "score": -5.510997558045567, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(1 - self.target.calculate_attack())\n"}, {"score_history": [-0.01355743408203125, -0.0001373291015625, -2.09808349609375e-05, -0.000499725341796875, -0.0025653839111328125, -0.00012397475074976683, -0.0011519708205014467, -0.00037746530142612755, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0001893381995614618, -4.720686411019415e-05, -2.622600959512056e-06, -1.9073486328125e-05, -0.004695892333984375, -8.58306884765625e-05, -0.001029161037877202, -0.00018310546875, -0.0003414769598748535, -0.0019702911376953125, -0.00011360082862665877, 0.0, -0.0008335113525390625, 0.0, -0.0059528350830078125, -0.000720977783203125, -3.4332275390625e-05, -1.9073486328125e-06, -0.013885498046875, 0.0, -0.0006084442138671875, 0.0, -5.7220458984375e-06, 0.0, -3.924584150314331, 0.0, -1.9073486328125e-06, -0.2116832733154297, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-05, 0.0, -0.05872154235839844, 0.0, -7.62939453125e-06, 0.0, -1.8634694814682007, 0.0], "choice_history": [96, 173, 358, 105, 152, "<UNK>", "Mark", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "HUNTER", "_type": "Template2", "hole1": 0, "hole0": "<UNK> Mark"}, {"hole2": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_attack"}], "_type": "Template3", "hole1": "increase_health", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "<UNK>Mark"}], "_type": "Module"}, "score": -6.1077089067878205, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.calculate_attack)\n"}, {"score_history": [-0.01355743408203125, -0.0001373291015625, -2.09808349609375e-05, -0.000499725341796875, -0.0025653839111328125, -0.00012397475074976683, -0.0011519708205014467, -0.00037746530142612755, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0001893381995614618, -4.720686411019415e-05, -2.622600959512056e-06, -1.9073486328125e-05, -0.004695892333984375, -8.58306884765625e-05, -0.001029161037877202, -0.00018310546875, -0.0003414769598748535, -0.0019702911376953125, -0.00011360082862665877, 0.0, -0.0008335113525390625, 0.0, -0.0059528350830078125, -0.000720977783203125, -3.4332275390625e-05, -1.9073486328125e-06, -0.013885498046875, 0.0, -0.0006084442138671875, 0.0, -5.7220458984375e-06, 0.0, -6.099177360534668, 0.0, -5.7220458984375e-05, -0.02043437957763672, -8.7738037109375e-05, -0.0007738707354292274, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "<UNK>", "Mark", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "HUNTER", "_type": "Template2", "hole1": 0, "hole0": "<UNK> Mark"}, {"hole2": [{"n": 1, "_type": "Num"}], "_type": "Template3", "hole1": "Heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "<UNK>Mark"}], "_type": "Module"}, "score": -6.169706642078609, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.Heal(1)\n"}, {"score_history": [-0.01355743408203125, -0.0001373291015625, -2.09808349609375e-05, -0.000499725341796875, -0.0025653839111328125, -0.00012397475074976683, -0.0011519708205014467, -0.00037746530142612755, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0001893381995614618, -4.720686411019415e-05, -2.622600959512056e-06, -1.9073486328125e-05, -0.004695892333984375, -8.58306884765625e-05, -0.001029161037877202, -0.00018310546875, -0.0003414769598748535, -0.0019702911376953125, -0.00011360082862665877, 0.0, -0.0008335113525390625, 0.0, -0.0059528350830078125, -0.000720977783203125, -3.4332275390625e-05, -1.9073486328125e-06, -0.013885498046875, 0.0, -0.0006084442138671875, 0.0, -5.7220458984375e-06, 0.0, -3.924584150314331, 0.0, -1.9073486328125e-06, -2.1786623001098633, -0.0052013397216796875, -0.001468658447265625, -5.7220458984375e-05, -0.0004185140132904053, -1.9073486328125e-06, -0.009411811828613281, -0.012773513793945312, -0.0001220703125, -0.000270843505859375, -3.814697265625e-06, -0.0001354217529296875, 0.0, -0.003933906555175781, 0.0, -9.5367431640625e-06, 0.0, -0.003232121467590332, 0.0], "choice_history": [96, 173, 358, 105, 152, "<UNK>", "Mark", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 43, 145, 23, 179, "1", "<EOS>", 99, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "HUNTER", "_type": "Template2", "hole1": 0, "hole0": "<UNK> Mark"}, {"hole2": [{"right": {"_type": "Template76", "hole1": "calculate_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, "op": {"_type": "Sub"}, "_type": "BinOp", "left": {"n": 1, "_type": "Num"}}], "_type": "Template3", "hole1": "increase_health", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "<UNK>Mark"}], "_type": "Module"}, "score": -6.189463203805872, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(1 - self.target.calculate_attack())\n"}, {"score_history": [-0.01355743408203125, -0.0001373291015625, -2.09808349609375e-05, -0.000499725341796875, -0.0025653839111328125, -0.00012397475074976683, -0.0011519708205014467, -0.00037746530142612755, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0001893381995614618, -4.720686411019415e-05, -2.622600959512056e-06, -1.9073486328125e-05, -0.004695892333984375, -8.58306884765625e-05, -0.001029161037877202, -0.00018310546875, -0.0003414769598748535, -0.0019702911376953125, -0.00011360082862665877, 0.0, -0.0008335113525390625, 0.0, -0.0059528350830078125, -0.000720977783203125, -3.4332275390625e-05, -1.9073486328125e-06, -0.013885498046875, 0.0, -0.0006084442138671875, 0.0, -5.7220458984375e-06, 0.0, -3.9066874980926514, -1.1920928244535389e-07, -0.2892475128173828, -1.24835205078125, -0.0040073394775390625, -0.0031986236572265625, 0.0, -1.728534698486328e-05, -1.1920928244535389e-07, -0.47638511657714844, -9.5367431640625e-06, -0.000537872314453125, -1.9073486328125e-06, -0.049767494201660156, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.041726112365722656, 0.0, -7.62939453125e-06, 0.0, -0.16851556301116943, 0.0, -0.011564254760742188, -5.7220458984375e-06, -0.0004367828369140625, -2.3841855067985307e-07], "choice_history": [96, 173, 358, 105, 152, "<UNK>", "Mark", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 72, 294, 21, 174, "player", "<EOS>", "effective_spell_damage", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "HUNTER", "_type": "Template2", "hole1": 0, "hole0": "<UNK> Mark"}, {"hole2": [{"hole2": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}, "_type": "Template57", "hole1": "effective_spell_damage", "hole0": {"_type": "Name", "id": "player"}}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "heal", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "<UNK>Mark"}], "_type": "Module"}, "score": -6.249665832179929, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_spell_damage(self.target.\n            calculate_max_health()), self)\n"}, {"score_history": [-0.01355743408203125, -0.0001373291015625, -2.09808349609375e-05, -0.000499725341796875, -0.0025653839111328125, -0.00012397475074976683, -0.0011519708205014467, -0.00037746530142612755, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0001893381995614618, -4.720686411019415e-05, -2.622600959512056e-06, -1.9073486328125e-05, -0.004695892333984375, -8.58306884765625e-05, -0.001029161037877202, -0.00018310546875, -0.0003414769598748535, -0.0019702911376953125, -0.00011360082862665877, 0.0, -0.0008335113525390625, 0.0, -5.647477149963379, -0.0015630722045898438, -8.58306884765625e-05, -3.814697265625e-06, -1.9788742065429688e-05, -3.814697265625e-06, -0.00021374225616455078, -1.9073486328125e-06, -0.0005359649658203125, -0.0005340576171875, -2.47955322265625e-05, -0.00035130977630615234, 0.0, -0.000713348388671875, 0.0, -0.0001926422119140625, 0.0, -0.002590179443359375, -5.7220458984375e-06, -5.91278076171875e-05, 0.0, -0.000202178955078125, 0.0, -9.5367431640625e-06, 0.0, -0.3410465717315674, 0.0, -2.6702880859375e-05, -0.0332183837890625, -4.38690185546875e-05, -0.16519995033740997, -1.9073486328125e-06, -0.0030765533447265625, 0.0, -0.0001201629638671875, 0.0, -0.012383460998535156, 0.0, -3.814697265625e-06, 0.0, -0.21967363357543945, 0.0, -0.0011138916015625, -0.0027637481689453125, -1.9073486328125e-06, -0.003953136969357729, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "<UNK>", "Mark", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 52, 179, "1", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 52, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "HUNTER", "_type": "Template2", "hole1": 0, "hole0": "<UNK> Mark"}, {"hole4": "change_attack", "hole6": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole3": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "hole0": {"_type": "Template79", "hole0": "super"}, "_type": "Template7", "hole2": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "hole7": "increase_health", "hole8": [{"n": 1, "_type": "Num"}], "hole5": [{"n": 1, "_type": "Num"}], "hole1": "use"}], "_type": "ClassDef", "name": "<UNK>Mark"}], "_type": "Module"}, "score": -6.465182034797408, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n        self.target.increase_health(1)\n"}, {"score_history": [-4.398637771606445, -0.16164779663085938, -0.0006813958170823753, -0.00032729512895457447, -0.0024202773347496986, -0.007161978632211685, -0.00022268295288085938, -1.1920922133867862e-06, -4.1961669921875e-05, -0.0035648345947265625, -0.0001850128173828125, -0.00016605816199444234, -0.0002079010009765625, -0.0012412873329594731, -0.0006656646728515625, -0.00022647369769401848, 0.0, -0.0006772279739379883, 0.0, -0.004032135009765625, 0.0, -7.748603820800781e-06, 0.0, -0.00016021728515625, -2.09808349609375e-05, -4.1961669921875e-05, -1.1920928244535389e-07, -0.055301666259765625, -0.0004711151123046875, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001430511474609375, -3.0517578125e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -5.352497100830078e-05, 0.0, -0.0018224716186523438, -3.814697265625e-06, -2.47955322265625e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.20958447456359863, -3.933906555175781e-06, -0.2073192596435547, -0.0002269744873046875, -9.5367431640625e-06, -3.814697265625e-06, -0.000659942626953125, 0.0, -0.025583267211914062, -9.5367431640625e-06, -0.29079246520996094, 0.0, -0.8045415878295898, 0.0, -0.7791231870651245, -7.62939453125e-06, -0.22799015045166016, -0.022266387939453125, 0.0, -0.559838056564331, 0.0, -0.00173187255859375, -7.05718994140625e-05, -0.000583648681640625, -5.7220458984375e-06, -0.0005857944488525391, -5.006777428206988e-06, -0.0658373162150383, 0.0, -4.9591064453125e-05, -0.00139617919921875, -8.58306884765625e-05, -0.0001131296157836914, -2.3841855067985307e-07, -0.01021575927734375, -8.392333984375e-05, -0.0031070709228515625, -1.9073486328125e-06, -0.0002727508544921875, -1.9073486328125e-06, -0.022777557373046875, 0.0, -0.014578104019165039, 0.0, -0.0019683837890625, -0.028270721435546875, -1.1444091796875e-05, -0.00051116943359375, 0.0, -9.5367431640625e-06, -3.0517578125e-05, -0.0003299713134765625, -5.7220458984375e-06, -4.00543212890625e-05, 0.0, 0.0, -7.271766662597656e-05, 0.0, -5.7220458984375e-06, -2.288818359375e-05, -1.1920928244535389e-07, -0.019487380981445312, -0.001132965087890625, -0.0001125335693359375, -0.001483917236328125, -4.1961669921875e-05, -0.000156402587890625, -0.002101898193359375, -0.0002193450927734375, -0.000118255615234375, -4.00543212890625e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -0.0011152029037475586, 0.0, -9.1552734375e-05, 0.0, -3.635883331298828e-05, -2.3841855067985307e-07, -0.4742469787597656, 0.0, -0.07198715209960938, -0.0002956390380859375, -0.026002883911132812, 0.0, -0.0011636018753051758, -2.9802317840221804e-06, -5.7220458984375e-06, -0.0003795623779296875, 0.0, -0.0014095306396484375, -1.9073486328125e-06, -0.00018310546875, -3.814697265625e-06, -0.002407073974609375, 0.0, -0.020320892333984375, 0.0, -0.001065373420715332, -5.7220458984375e-06, -4.1961669921875e-05, -0.1451416015625, -4.76837158203125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.01609482429921627, 0.0], "choice_history": [97, 286, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "agent", "<EOS>", 346, 50, 174, "targets", "<EOS>", 136, 318, 21, 174, "target", "<EOS>", "die", "<EOS>", 346, 51, 176, "Null", "<EOS>", 106, 155, 36, 317, 21, 174, "game", "<EOS>", "check_delayed", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 5, 346, 52, 179, "0", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "agent"}, "args": [{"_type": "Name", "id": "targets"}]}, "_type": "Assign"}, {"hole2": [{"value": "Null", "_type": "NameConstant"}], "_type": "Template77", "hole1": "die", "hole0": {"_type": "Name", "id": "target"}}, {"value": {"_type": "Template76", "hole1": "check_delayed", "hole0": {"_type": "Name", "id": "game"}}, "_type": "Expr"}], "hole3": "use", "hole0": "<UNK>Mark", "_type": "Template5", "hole2": [{"hole2": "HUNTER", "_type": "Template31", "hole1": 0, "hole0": "<UNK> Mark"}], "hole7": [{"body": [{"value": {"values": [{"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "can_use", "hole0": {"_type": "Template79", "hole0": "super"}}, {"comparators": [{"n": 0, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "_type": "FunctionDef", "name": "can_use"}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -8.70797936678052, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = game.other_player.agent(targets)\n        target.die(Null)\n        game.check_delayed()\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) > 0\n"}]}
{"index": 56, "beams": [{"score_history": [-0.06573772430419922, -5.7220458984375e-06, -0.011796029284596443, -8.225420970120467e-06, -4.6132929128361866e-05, -2.3562461137771606e-07, -1.931190308823716e-05, 0.0, -0.00014495849609375, -0.0016040802001953125, -0.02220439910888672, -3.4570680327306036e-06, -2.133839370799251e-05, -3.576272320060525e-06, -0.0002671480178833008, -2.205362579843495e-05, -0.0010852813720703125, -0.001064300537109375, -9.5367431640625e-06, -0.002645652275532484, -0.0010233611101284623, -1.9073486328125e-06, -9.918212890625e-05, -4.57763671875e-05, -0.016762662678956985, -3.814697265625e-06, -0.000632762850727886, -5.3882598876953125e-05, -1.9073486328125e-06, -0.0001430511474609375, -0.0001220703125, -2.288818359375e-05, -0.000125885009765625, -1.9073486328125e-06, -0.0001773834228515625, 0.0, -0.0013049840927124023, -4.410743713378906e-05, -1.9073486328125e-06, -6.103515625e-05, -0.000263214111328125, -0.0004012584686279297, 0.0, -0.0035343170166015625, 0.0, -0.0002460479736328125, -3.635883331298828e-05, -1.1920928244535389e-07, -0.00017726421356201172, 0.0, -0.001497507095336914, 0.0, -6.29425048828125e-05, -0.0006694793701171875, -6.4849853515625e-05, -1.33514404296875e-05, -9.536738616588991e-07, -0.0015026332112029195, -2.3841855067985307e-07], "choice_history": [97, 283, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "2", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "IronforgeRifleman", "_type": "Template5", "hole2": [{"hole4": [{"n": 2, "_type": "Num"}], "hole3": "Damage", "hole0": "Ironforge Rifleman", "_type": "Template15", "hole2": "COMMON", "hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": "CharacterSelector", "hole1": 3}], "hole1": "MinionCard"}, "score": -0.13579017560638107, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(2),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score_history": [-2.826568603515625, -0.000255584716796875, -2.6702880859375e-05, -0.0001201629638671875, -1.52587890625e-05, -0.00011419598013162613, -1.2636104656849056e-05, -8.535020606359467e-05, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -4.290428478270769e-06, -9.76311566773802e-05, -3.015960282937158e-05, -0.0014476776123046875, -0.0066089630126953125, -2.6702880859375e-05, -4.768370445162873e-07, -2.193450927734375e-05, -3.099436753473128e-06, -1.9073486328125e-06, -4.863656067755073e-05, -1.9073486328125e-06, -4.1246410546591505e-05, -1.9073486328125e-06, -0.0016307830810546875, 0.0, -0.0008032321929931641, -1.9073486328125e-06, -0.0001583099365234375, 0.0, -4.1961669921875e-05, -4.0531158447265625e-06, -0.138458251953125, 0.0, -0.00041413307189941406, -1.9073486328125e-06, -0.008597373962402344, -0.037154197692871094, -0.04371117427945137, -2.8848460715380497e-05, 0.0, -2.47955322265625e-05, 0.0, -0.0005709956167265773, -2.300739288330078e-05, -0.00241851806640625, -1.239776611328125e-05, 0.0, -0.011816024780273438, -0.00020599365234375, -3.814697265625e-06, -0.00038909912109375, 0.0, -6.67572021484375e-05, -1.9073486328125e-06, -0.00045037269592285156, -7.665157318115234e-05, 0.0, -8.58306884765625e-05, -0.0001220703125, -0.0005120038986206055, -1.1920928244535389e-07, -0.001708984375, 0.0, -0.0001316070556640625, -0.00010883808135986328, 0.0, -0.0013408660888671875, -6.866455078125e-05, -9.179073458653875e-06, 0.0, -0.0007053613662719727, 0.0], "choice_history": [96, 173, 358, 105, 152, "Ironforge", "Rifleman", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 29, 266, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", 122, 213, "2", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "<UNK>", "hole3": "COMMON", "hole0": "Ironforge Rifleman", "_type": "Template4", "hole2": "ALL", "hole7": "battlecry", "hole8": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole2": "CharacterSelector", "_type": "Template43", "hole1": [{"n": 1, "_type": "Num"}], "hole0": "Damage"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 3}, {"_type": "Template19", "hole1": 2, "hole0": 2}], "_type": "ClassDef", "name": "IronforgeRifleman"}], "_type": "Module"}, "score": -3.087435084231963, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score_history": [-0.06573772430419922, -5.7220458984375e-06, -0.011796029284596443, -8.225420970120467e-06, -4.6132929128361866e-05, -2.3562461137771606e-07, -1.931190308823716e-05, 0.0, -0.00014495849609375, -0.0016040802001953125, -0.02220439910888672, -3.4570680327306036e-06, -2.133839370799251e-05, -3.576272320060525e-06, -0.0002671480178833008, -2.205362579843495e-05, -0.0010852813720703125, -0.001064300537109375, -9.5367431640625e-06, -0.002645652275532484, -0.0010233611101284623, -1.9073486328125e-06, -9.918212890625e-05, -4.57763671875e-05, -4.164943695068359, -2.09808349609375e-05, -0.00334930419921875, -1.9073486328125e-05, 0.0, -0.0001316070556640625, -0.0001125335693359375, -1.9073486328125e-05, -0.000164031982421875, 0.0, -0.0001983642578125, 0.0, -0.0011143684387207031, -4.982948303222656e-05, 0.0, -5.53131103515625e-05, -0.0001811981201171875, -0.00038754940032958984, -1.1920928244535389e-07, -0.0036525726318359375, 0.0, -0.000244140625, -4.017353057861328e-05, -1.1920928244535389e-07, -0.00018298625946044922, 0.0, -0.001508951187133789, 0.0, -6.29425048828125e-05, -0.00069427490234375, -6.4849853515625e-05, -1.33514404296875e-05, -8.344646857949556e-07, -0.0014929772587493062, -2.3841855067985307e-07], "choice_history": [97, 283, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "IronforgeRifleman", "_type": "Template5", "hole2": [{"hole4": [{"n": 1, "_type": "Num"}], "hole3": "Damage", "hole0": "Ironforge Rifleman", "_type": "Template15", "hole2": "COMMON", "hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": "CharacterSelector", "hole1": 3}], "hole1": "MinionCard"}, "score": -4.286564844566854, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score_history": [-0.06573772430419922, -5.7220458984375e-06, -4.823609352111816, -8.225420970120467e-06, -4.6132929128361866e-05, -2.3562461137771606e-07, -1.931190308823716e-05, 0.0, -0.00014495849609375, -0.0016040802001953125, -0.02220439910888672, -3.4570680327306036e-06, -2.133839370799251e-05, -3.576272320060525e-06, -0.0002671480178833008, -2.205362579843495e-05, -0.0010852813720703125, -0.001064300537109375, -9.5367431640625e-06, -0.002645652275532484, -0.0010233611101284623, -1.9073486328125e-06, -9.918212890625e-05, -4.57763671875e-05, -0.016762662678956985, -3.814697265625e-06, -0.000632762850727886, -5.3882598876953125e-05, -1.9073486328125e-06, -0.0001430511474609375, -0.0001220703125, -2.288818359375e-05, -0.000125885009765625, -1.9073486328125e-06, -0.0001773834228515625, 0.0, -0.0013049840927124023, -4.410743713378906e-05, -1.9073486328125e-06, -6.103515625e-05, -0.000263214111328125, -0.0004012584686279297, 0.0, -0.0035343170166015625, 0.0, -0.0002460479736328125, -3.635883331298828e-05, -1.1920928244535389e-07, -0.00017726421356201172, 0.0, -0.001497507095336914, 0.0, -6.29425048828125e-05, -0.0006694793701171875, -6.4849853515625e-05, -1.33514404296875e-05, -9.536738616588991e-07, -0.0015026332112029195, -2.3841855067985307e-07], "choice_history": [97, 283, "<UNK>", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "2", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "<UNK>Rifleman", "_type": "Template5", "hole2": [{"hole4": [{"n": 2, "_type": "Num"}], "hole3": "Damage", "hole0": "Ironforge Rifleman", "_type": "Template15", "hole2": "COMMON", "hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": "CharacterSelector", "hole1": 3}], "hole1": "MinionCard"}, "score": -4.947603498433601, "inferred_code": "class <UNK>Rifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(2),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score_history": [-0.06573772430419922, -5.7220458984375e-06, -5.69083309173584, -0.02346009761095047, -0.00016544880054425448, -4.7031790018081665e-07, -2.014636993408203e-05, 0.0, -0.0002956390380859375, -0.003124237060546875, -0.019464492797851562, -3.8146954466355965e-06, -2.1696037947549485e-05, -4.291525328881107e-06, -7.081031799316406e-05, -1.90734353964217e-05, -0.000980377197265625, -0.001110076904296875, -9.5367431640625e-06, -0.00272754835896194, -0.0009971291292458773, -1.9073486328125e-06, -9.5367431640625e-05, -4.1961669921875e-05, -0.0172952301800251, -3.814697265625e-06, -0.000653982104267925, -5.1975250244140625e-05, -1.9073486328125e-06, -0.000156402587890625, -0.000152587890625, -2.09808349609375e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.000186920166015625, 0.0, -0.0012840032577514648, -4.220008850097656e-05, -1.9073486328125e-06, -6.29425048828125e-05, -0.0002727508544921875, -0.0003993511199951172, 0.0, -0.003566741943359375, 0.0, -0.0002460479736328125, -3.635883331298828e-05, -1.1920928244535389e-07, -0.00017321109771728516, 0.0, -0.001547098159790039, 0.0, -6.103515625e-05, -0.0006313323974609375, -6.4849853515625e-05, -1.33514404296875e-05, -9.536738616588991e-07, -0.0014646053314208984, -2.3841855067985307e-07], "choice_history": [97, 283, "Force", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "2", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "ForceRifleman", "_type": "Template5", "hole2": [{"hole4": [{"n": 2, "_type": "Num"}], "hole3": "Damage", "hole0": "Ironforge Rifleman", "_type": "Template15", "hole2": "COMMON", "hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": "CharacterSelector", "hole1": 3}], "hole1": "MinionCard"}, "score": -5.837713260306792, "inferred_code": "class ForceRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(2),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score_history": [-2.826568603515625, -0.000255584716796875, -2.6702880859375e-05, -0.0001201629638671875, -1.52587890625e-05, -0.00011419598013162613, -1.2636104656849056e-05, -8.535020606359467e-05, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -4.290428478270769e-06, -9.76311566773802e-05, -3.015960282937158e-05, -0.0014476776123046875, -0.0066089630126953125, -2.6702880859375e-05, -4.768370445162873e-07, -2.193450927734375e-05, -3.099436753473128e-06, -1.9073486328125e-06, -4.863656067755073e-05, -1.9073486328125e-06, -4.1246410546591505e-05, -1.9073486328125e-06, -0.0016307830810546875, 0.0, -0.0008032321929931641, -1.9073486328125e-06, -0.0001583099365234375, 0.0, -4.1961669921875e-05, -4.0531158447265625e-06, -2.924915313720703, 0.0, -0.003704547882080078, -3.814697265625e-06, -0.016475677490234375, -0.048567771911621094, -0.08881264179944992, -7.27157894289121e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002986817271448672, -2.09808349609375e-05, -0.0015869140625, -1.7762184143066406e-05, 0.0, -0.011821746826171875, -0.0001544952392578125, -3.814697265625e-06, -0.00029754638671875, 0.0, -6.67572021484375e-05, 0.0, -0.00039315223693847656, -7.665157318115234e-05, 0.0, -8.0108642578125e-05, -0.0001201629638671875, -0.0005056858062744141, -1.1920928244535389e-07, -0.0018291473388671875, 0.0, -0.00012969970703125, -0.00010883808135986328, 0.0, -0.00140380859375, -6.866455078125e-05, -9.059865078597795e-06, 0.0, -0.0007030963897705078, 0.0], "choice_history": [96, 173, 358, 105, 152, "Ironforge", "Rifleman", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", "battlecry", "<EOS>", 29, 266, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", 122, 213, "2", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "PIRATE", "hole3": "COMMON", "hole0": "Ironforge Rifleman", "_type": "Template4", "hole2": "ALL", "hole7": "battlecry", "hole8": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole2": "CharacterSelector", "_type": "Template43", "hole1": [{"n": 1, "_type": "Num"}], "hole0": "Damage"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 3}, {"_type": "Template19", "hole1": 2, "hole0": 2}], "_type": "ClassDef", "name": "IronforgeRifleman"}], "_type": "Module"}, "score": -5.940489510259447, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score_history": [-2.826568603515625, -0.000255584716796875, -2.6702880859375e-05, -0.0001201629638671875, -1.52587890625e-05, -0.00011419598013162613, -1.2636104656849056e-05, -8.535020606359467e-05, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -4.290428478270769e-06, -9.76311566773802e-05, -3.015960282937158e-05, -0.0014476776123046875, -0.0066089630126953125, -2.6702880859375e-05, -4.768370445162873e-07, -2.193450927734375e-05, -3.099436753473128e-06, -1.9073486328125e-06, -4.863656067755073e-05, -1.9073486328125e-06, -4.1246410546591505e-05, -1.9073486328125e-06, -0.0016307830810546875, 0.0, -0.0008032321929931641, -1.9073486328125e-06, -0.0001583099365234375, 0.0, -4.1961669921875e-05, -4.0531158447265625e-06, -3.1886720657348633, 0.0, -0.0006372928619384766, -1.9073486328125e-06, -0.016201019287109375, -0.06424617767333984, -0.11534050107002258, -2.2649621314485557e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.00029431201983243227, -1.52587890625e-05, -0.0012969970703125, -1.4066696166992188e-05, 0.0, -0.016193389892578125, -0.000164031982421875, -3.814697265625e-06, -0.00032806396484375, 0.0, -6.866455078125e-05, 0.0, -0.00037217140197753906, -7.474422454833984e-05, 0.0, -7.62939453125e-05, -0.0001201629638671875, -0.0005056858062744141, -1.1920928244535389e-07, -0.00180816650390625, 0.0, -0.00012969970703125, -0.00010883808135986328, 0.0, -0.0013866424560546875, -6.866455078125e-05, -8.702239938429557e-06, 0.0, -0.000714421272277832, 0.0], "choice_history": [96, 173, 358, 105, 152, "Ironforge", "Rifleman", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "battlecry", "<EOS>", 29, 266, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", 122, 213, "2", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "BEAST", "hole3": "COMMON", "hole0": "Ironforge Rifleman", "_type": "Template4", "hole2": "ALL", "hole7": "battlecry", "hole8": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole2": "CharacterSelector", "_type": "Template43", "hole1": [{"n": 1, "_type": "Num"}], "hole0": "Damage"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 3}, {"_type": "Template19", "hole1": 2, "hole0": 2}], "_type": "ClassDef", "name": "IronforgeRifleman"}], "_type": "Module"}, "score": -6.247108936426791, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score_history": [-0.06573772430419922, -5.7220458984375e-06, -0.011796029284596443, -8.225420970120467e-06, -4.6132929128361866e-05, -2.3562461137771606e-07, -1.931190308823716e-05, 0.0, -0.00014495849609375, -0.0016040802001953125, -0.02220439910888672, -3.4570680327306036e-06, -2.133839370799251e-05, -3.576272320060525e-06, -0.0002671480178833008, -2.205362579843495e-05, -0.0010852813720703125, -0.001064300537109375, -9.5367431640625e-06, -0.002645652275532484, -0.0010233611101284623, -1.9073486328125e-06, -9.918212890625e-05, -4.57763671875e-05, -0.016762662678956985, -3.814697265625e-06, -0.000632762850727886, -5.3882598876953125e-05, -1.9073486328125e-06, -0.0001430511474609375, -0.0001220703125, -2.288818359375e-05, -0.000125885009765625, -1.9073486328125e-06, -0.0001773834228515625, 0.0, -0.0013049840927124023, -4.410743713378906e-05, -1.9073486328125e-06, -6.103515625e-05, -0.000263214111328125, -0.0004012584686279297, 0.0, -5.839608192443848, -0.002147674560546875, -0.0061511993408203125, -0.001439213752746582, -4.053113570989808e-06, -0.3055620789527893, 0.0, -0.0009709596633911133, 0.0, -0.0033227205276489258, 0.0, -2.09808349609375e-05, -0.00066375732421875, -0.000102996826171875, -5.7220458984375e-06, -1.9073468138230965e-06, -0.0012171268463134766, -3.576278118089249e-07], "choice_history": [97, 283, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "2", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 35, 315, "Random", "Picker", "<EOS>", "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "IronforgeRifleman", "_type": "Template5", "hole2": [{"hole4": [{"n": 2, "_type": "Num"}], "hole3": "Damage", "hole0": "Ironforge Rifleman", "_type": "Template15", "hole2": "COMMON", "hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template74", "hole1": 2, "hole0": "RandomPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": "CharacterSelector", "hole1": 3}], "hole1": "MinionCard"}, "score": -6.289203053999643, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(2),\n            CharacterSelector(players=BothPlayer(), picker=RandomPicker(2))))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score_history": [-2.826568603515625, -0.000255584716796875, -2.6702880859375e-05, -0.0001201629638671875, -1.52587890625e-05, -0.00011419598013162613, -1.2636104656849056e-05, -8.535020606359467e-05, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -4.290428478270769e-06, -9.76311566773802e-05, -3.015960282937158e-05, -0.0014476776123046875, -0.0066089630126953125, -2.6702880859375e-05, -4.768370445162873e-07, -2.193450927734375e-05, -3.099436753473128e-06, -1.9073486328125e-06, -4.863656067755073e-05, -1.9073486328125e-06, -4.1246410546591505e-05, -1.9073486328125e-06, -0.0016307830810546875, 0.0, -0.0008032321929931641, -1.9073486328125e-06, -0.0001583099365234375, 0.0, -4.1961669921875e-05, -4.0531158447265625e-06, -0.138458251953125, 0.0, -0.00041413307189941406, -1.9073486328125e-06, -0.008597373962402344, -0.037154197692871094, -3.535001277923584, -3.814697265625e-06, -1.71661376953125e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0050880275666713715, -1.9073486328125e-06, -0.17837154865264893, -1.5377996533061378e-05, 0.0, -0.009149551391601562, -0.0001983642578125, -3.814697265625e-06, -0.0003299713134765625, 0.0, -6.103515625e-05, -1.9073486328125e-06, -0.0003644227981567383, -8.046627044677734e-05, 0.0, -8.7738037109375e-05, -0.0001201629638671875, -0.0005234479904174805, -1.1920928244535389e-07, -0.0017070770263671875, 0.0, -0.00012969970703125, -0.00010883808135986328, 0.0, -0.0012912750244140625, -6.866455078125e-05, -9.417489309271332e-06, 0.0, -0.0006960630416870117, 0.0], "choice_history": [96, 173, 358, 105, 152, "Ironforge", "Rifleman", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 29, 266, "Draw", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", 122, 213, "2", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "<UNK>", "hole3": "COMMON", "hole0": "Ironforge Rifleman", "_type": "Template4", "hole2": "ALL", "hole7": "battlecry", "hole8": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole2": "CharacterSelector", "_type": "Template43", "hole1": [{"n": 1, "_type": "Num"}], "hole0": "Draw"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 3}, {"_type": "Template19", "hole1": 2, "hole0": 2}], "_type": "ClassDef", "name": "IronforgeRifleman"}], "_type": "Module"}, "score": -6.756289524162291, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Draw(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score_history": [-2.826568603515625, -0.000255584716796875, -2.6702880859375e-05, -0.0001201629638671875, -1.52587890625e-05, -0.00011419598013162613, -1.2636104656849056e-05, -8.535020606359467e-05, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -4.290428478270769e-06, -9.76311566773802e-05, -3.015960282937158e-05, -0.0014476776123046875, -0.0066089630126953125, -2.6702880859375e-05, -4.768370445162873e-07, -2.193450927734375e-05, -3.099436753473128e-06, -1.9073486328125e-06, -4.863656067755073e-05, -1.9073486328125e-06, -4.1246410546591505e-05, -1.9073486328125e-06, -0.0016307830810546875, 0.0, -0.0008032321929931641, -1.9073486328125e-06, -0.0001583099365234375, 0.0, -4.1961669921875e-05, -4.0531158447265625e-06, -3.9751176834106445, 0.0, -0.0023479461669921875, -5.7220458984375e-06, -0.006388664245605469, -0.04073524475097656, -0.02948509156703949, -3.254391413065605e-05, 0.0, -2.09808349609375e-05, 0.0, -0.000520954723469913, -2.491474151611328e-05, -0.0024776458740234375, -1.442432312614983e-05, 0.0, -0.016117095947265625, -0.0001850128173828125, -3.814697265625e-06, -0.0003566741943359375, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -0.00042557716369628906, -8.237361907958984e-05, 0.0, -8.392333984375e-05, -0.0001201629638671875, -0.0005116462707519531, -1.1920928244535389e-07, -0.001735687255859375, 0.0, -0.0001316070556640625, -0.00010693073272705078, 0.0, -0.001354217529296875, -6.866455078125e-05, -8.702239938429557e-06, 0.0, -0.0007126331329345703, 0.0], "choice_history": [96, 173, 358, 105, 152, "Ironforge", "Rifleman", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "battlecry", "<EOS>", 29, 266, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", 122, 213, "2", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"hole4": "minion_type", "hole6": "MURLOC", "hole3": "COMMON", "hole0": "Ironforge Rifleman", "_type": "Template4", "hole2": "ALL", "hole7": "battlecry", "hole8": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole2": "CharacterSelector", "_type": "Template43", "hole1": [{"n": 1, "_type": "Num"}], "hole0": "Damage"}, "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole1": 3}, {"_type": "Template19", "hole1": 2, "hole0": 2}], "_type": "ClassDef", "name": "IronforgeRifleman"}], "_type": "Module"}, "score": -6.91745875383787, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score_history": [-0.06573772430419922, -5.7220458984375e-06, -0.011796029284596443, -8.225420970120467e-06, -4.6132929128361866e-05, -2.3562461137771606e-07, -1.931190308823716e-05, 0.0, -0.00014495849609375, -0.0016040802001953125, -0.02220439910888672, -3.4570680327306036e-06, -2.133839370799251e-05, -3.576272320060525e-06, -0.0002671480178833008, -2.205362579843495e-05, -0.0010852813720703125, -0.001064300537109375, -9.5367431640625e-06, -0.002645652275532484, -0.0010233611101284623, -1.9073486328125e-06, -9.918212890625e-05, -4.57763671875e-05, -6.825148105621338, -0.00016021728515625, -0.0019273757934570312, -0.00012993812561035156, -1.9073486328125e-06, -0.0001621246337890625, -0.0001125335693359375, -2.6702880859375e-05, -0.00014495849609375, -1.9073486328125e-06, -0.0001926422119140625, 0.0, -0.0013375282287597656, -4.982948303222656e-05, -1.9073486328125e-06, -5.91278076171875e-05, -0.0001697540283203125, -0.00039136409759521484, -1.1920928244535389e-07, -0.003749847412109375, 0.0, -0.000244140625, -4.017353057861328e-05, 0.0, -0.00017714500427246094, 0.0, -0.0014955997467041016, 0.0, -6.29425048828125e-05, -0.0006694793701171875, -6.67572021484375e-05, -1.33514404296875e-05, -8.344646857949556e-07, -0.0015025140019133687, -2.3841855067985307e-07], "choice_history": [97, 283, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "3", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "IronforgeRifleman", "_type": "Template5", "hole2": [{"hole4": [{"n": 3, "_type": "Num"}], "hole3": "Damage", "hole0": "Ironforge Rifleman", "_type": "Template15", "hole2": "COMMON", "hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": "CharacterSelector", "hole1": 3}], "hole1": "MinionCard"}, "score": -6.945900457817594, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score_history": [-0.06573772430419922, -5.7220458984375e-06, -0.011796029284596443, -8.225420970120467e-06, -4.6132929128361866e-05, -2.3562461137771606e-07, -1.931190308823716e-05, 0.0, -0.00014495849609375, -0.0016040802001953125, -0.02220439910888672, -3.4570680327306036e-06, -2.133839370799251e-05, -3.576272320060525e-06, -0.0002671480178833008, -2.205362579843495e-05, -0.0010852813720703125, -0.001064300537109375, -9.5367431640625e-06, -0.002645652275532484, -0.0010233611101284623, -1.9073486328125e-06, -9.918212890625e-05, -4.57763671875e-05, -0.016762662678956985, -3.814697265625e-06, -0.000632762850727886, -5.3882598876953125e-05, -1.9073486328125e-06, -0.0001430511474609375, -0.0001220703125, -2.288818359375e-05, -0.000125885009765625, -1.9073486328125e-06, -0.0001773834228515625, 0.0, -0.0013049840927124023, -4.410743713378906e-05, -1.9073486328125e-06, -6.103515625e-05, -0.000263214111328125, -0.0004012584686279297, 0.0, -0.0035343170166015625, 0.0, -0.0002460479736328125, -3.635883331298828e-05, -1.1920928244535389e-07, -0.00017726421356201172, 0.0, -0.001497507095336914, 0.0, -6.29425048828125e-05, -0.0006694793701171875, -6.4849853515625e-05, -1.33514404296875e-05, -9.536738616588991e-07, -6.838902473449707, -5.364418029785156e-05], "choice_history": [97, 283, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "2", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "Minion", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 0, "hole0": 2}], "hole3": "create_minion", "hole0": "IronforgeRifleman", "_type": "Template5", "hole2": [{"hole4": [{"n": 2, "_type": "Num"}], "hole3": "Damage", "hole0": "Ironforge Rifleman", "_type": "Template15", "hole2": "COMMON", "hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": "CharacterSelector", "hole1": 3}], "hole1": "MinionCard"}, "score": -6.973243421606632, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(2),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 0)\n"}, {"score_history": [-0.06573772430419922, -5.7220458984375e-06, -0.011796029284596443, -8.225420970120467e-06, -4.6132929128361866e-05, -2.3562461137771606e-07, -1.931190308823716e-05, 0.0, -0.00014495849609375, -0.0016040802001953125, -0.02220439910888672, -3.4570680327306036e-06, -2.133839370799251e-05, -3.576272320060525e-06, -0.0002671480178833008, -2.205362579843495e-05, -6.979375839233398, -0.0046263933181762695, -0.00102996826171875, -9.5367431640625e-06, -0.0043471381068229675, -0.0008200173615477979, -1.9073486328125e-06, -6.103515625e-05, -3.0517578125e-05, -0.03382091224193573, -3.814697265625e-06, -0.00057220458984375, -4.2438507080078125e-05, -1.9073486328125e-06, -0.0001430511474609375, -0.0001239776611328125, -1.9073486328125e-05, -0.000125885009765625, -1.9073486328125e-06, -0.00017547607421875, 0.0, -0.0012935400009155273, -4.220008850097656e-05, -1.9073486328125e-06, -6.103515625e-05, -0.0002803802490234375, -0.0004031658172607422, 0.0, -0.0036449432373046875, 0.0, -0.000247955322265625, -3.635883331298828e-05, -1.1920928244535389e-07, -0.00016582012176513672, 0.0, -0.001482248306274414, 0.0, -6.29425048828125e-05, -0.000667572021484375, -6.4849853515625e-05, -1.33514404296875e-05, -9.536738616588991e-07, -0.001496911165304482, -2.3841855067985307e-07], "choice_history": [97, 283, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Ironforge", " ", "Rifleman", "<EOS>", "3", "1", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "2", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "IronforgeRifleman", "_type": "Template5", "hole2": [{"hole4": [{"n": 2, "_type": "Num"}], "hole3": "Damage", "hole0": "Ironforge Rifleman", "_type": "Template15", "hole2": "COMMON", "hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "_type": "keyword", "arg": "picker"}], "hole5": "CharacterSelector", "hole1": 31}], "hole1": "MinionCard"}, "score": -7.137183886684362, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 31, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(2),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score_history": [-0.06573772430419922, -5.7220458984375e-06, -0.011796029284596443, -8.225420970120467e-06, -4.6132929128361866e-05, -2.3562461137771606e-07, -1.931190308823716e-05, 0.0, -0.00014495849609375, -0.0016040802001953125, -4.773114204406738, -2.95634672511369e-05, -1.6212459740927443e-05, -2.3841855067985307e-07, -0.11636173725128174, -8.785723912296817e-05, -0.00011837482452392578, -0.0026096105575561523, -4.768367489305092e-06, -0.4061752259731293, -0.013873815536499023, -2.3841855067985307e-07, -0.6700232625007629, -3.3378546504536644e-06, -0.41257381439208984, -0.34075260162353516, -1.9073486328125e-06, -0.032274335622787476, 0.0, -0.00229489803314209, -5.53131103515625e-05, -0.00032460689544677734, 0.0, -4.57763671875e-05, -0.30716800689697266, -0.000148773193359375, -1.9073486328125e-06, -2.3841855067985307e-07, -0.0051882266998291016, -1.1920928244535389e-07], "choice_history": [97, 283, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 204, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "Minion", "Selector", "<EOS>", "damage", "<EOS>", 346, 52, 179, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "IronforgeRifleman", "_type": "Template5", "hole2": [{"hole6": [{"n": 2, "_type": "Num"}], "hole3": "MinionSelector", "hole0": "Ironforge Rifleman", "_type": "Template15", "hole2": "COMMON", "hole5": "damage", "hole1": 3}], "hole1": "MinionCard"}, "score": -7.162611392644429, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MinionSelector(),\n            damage(2)))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score_history": [-0.06573772430419922, -5.7220458984375e-06, -0.011796029284596443, -8.225420970120467e-06, -4.6132929128361866e-05, -2.3562461137771606e-07, -1.931190308823716e-05, 0.0, -0.00014495849609375, -0.0016040802001953125, -4.773114204406738, -2.95634672511369e-05, -1.6212459740927443e-05, -2.3841855067985307e-07, -0.11636173725128174, -8.785723912296817e-05, -0.00011837482452392578, -0.0026096105575561523, -4.768367489305092e-06, -0.4061752259731293, -0.013873815536499023, -2.3841855067985307e-07, -1.843966007232666, -0.001889944076538086, -2.3841855067985307e-07, -0.06476593017578125, -0.0004558563232421875, -1.9073486328125e-06, -0.04603498801589012, -0.004986286163330078, -1.1920928244535389e-07, -0.009635989554226398, -3.814697265625e-06, -0.0005152225494384766, 0.0, -4.9591064453125e-05, -0.000194549560546875, -0.0003490447998046875, -3.814697265625e-06, -1.9073468138230965e-06, -0.0012246370315551758, -3.576278118089249e-07], "choice_history": [97, 283, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 204, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "Minion", "Selector", "<EOS>", "Weapon", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "IronforgeRifleman", "_type": "Template5", "hole2": [{"hole6": [{"_type": "Template79", "hole0": "EnemyPlayer"}], "hole3": "MinionSelector", "hole0": "Ironforge Rifleman", "_type": "Template15", "hole2": "COMMON", "hole5": "WeaponSelector", "hole1": 3}], "hole1": "MinionCard"}, "score": -7.365834473022311, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MinionSelector(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}]}
{"index": 57, "beams": [{"score_history": [-0.000110626220703125, -0.0001049041748046875, -0.0006657097255811095, -7.414570427499712e-05, -1.5497195136049413e-06, -1.3902783393859863e-05, -2.872943878173828e-05, -1.1086449376307428e-05, -2.86102294921875e-05, -0.0017795562744140625, -0.0008869171142578125, -2.3841855067985307e-07, -3.254413604736328e-05, -4.291534423828125e-06, -4.76837158203125e-05, -3.695463419717271e-06, -1.9073486328125e-06, -0.000698089599609375, -5.7220458984375e-06, -0.0010148286819458008, -1.9073468138230965e-06, -6.866455078125e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -6.29425048828125e-05, -2.1457672119140625e-06, -0.0006122589111328125, 0.0, -7.62939453125e-06, 0.0, -0.003978729248046875, 0.0, -4.00543212890625e-05, -0.00080108642578125, -9.5367431640625e-06, -7.152531907195225e-06, -5.090107151772827e-05, -8.702285413164645e-06, -1.1920928244535389e-07, -0.002088785171508789, 0.0, -3.62396240234375e-05, -1.71661376953125e-05, -0.00015652179718017578, 0.0], "choice_history": [97, 283, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 3, "hole0": 3}], "hole3": "create_minion", "hole0": "IronfurGrizzly", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Ironfur Grizzly", "_type": "Template26", "hole2": "COMMON", "hole1": 3}], "hole1": "MinionCard"}, "score": -0.013482447958800492, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"score_history": [-0.000110626220703125, -0.0001049041748046875, -0.0006657097255811095, -7.414570427499712e-05, -1.5497195136049413e-06, -1.3902783393859863e-05, -2.872943878173828e-05, -1.1086449376307428e-05, -2.86102294921875e-05, -0.0017795562744140625, -0.0008869171142578125, -2.3841855067985307e-07, -3.254413604736328e-05, -4.291534423828125e-06, -4.76837158203125e-05, -3.695463419717271e-06, -1.9073486328125e-06, -0.000698089599609375, -5.7220458984375e-06, -0.0010148286819458008, -1.9073468138230965e-06, -6.866455078125e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -6.29425048828125e-05, -2.1457672119140625e-06, -0.0006122589111328125, 0.0, -7.62939453125e-06, 0.0, -5.5910234451293945, 0.0, -4.00543212890625e-05, -0.0016460418701171875, -7.62939453125e-06, -1.1920858014491387e-05, -5.221230458118953e-05, -1.633158535696566e-05, -1.1920928244535389e-07, -0.0021401643753051758, 0.0, -3.814697265625e-05, -1.52587890625e-05, -9.739398956298828e-05, 0.0], "choice_history": [97, 283, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 130, 287, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "p", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 3, "hole0": 3}], "hole3": "create_minion", "hole0": "IronfurGrizzly", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Ironfur Grizzly", "_type": "Template26", "hole2": "COMMON", "hole1": 3}], "hole1": "MinionCard"}, "score": -5.601376172191145, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(3, 3, taunt=True)\n"}, {"score_history": [-0.000110626220703125, -0.0001049041748046875, -0.0006657097255811095, -7.414570427499712e-05, -1.5497195136049413e-06, -1.3902783393859863e-05, -2.872943878173828e-05, -1.1086449376307428e-05, -2.86102294921875e-05, -6.597042083740234, -0.004048347473144531, -3.4332275390625e-05, -0.0006694793701171875, -1.0251998901367188e-05, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -0.001895904541015625, -0.000591278076171875, -0.000152587890625, -3.099436753473128e-06, -2.8967857360839844e-05, -2.6821824576472864e-05, -3.826618194580078e-05, -2.09808349609375e-05, -4.76837158203125e-05, -3.159042535116896e-05, 0.0, -0.0001583099365234375, -1.9073486328125e-06, -1.52587890625e-05, -1.33514404296875e-05, -4.291534423828125e-06, 0.0, -1.919269561767578e-05, -1.9073486328125e-06, -0.000110626220703125, -5.7220458984375e-06, -3.814697265625e-05, 0.0, -2.682209014892578e-05, -4.661083221435547e-05, -0.02425384521484375, -1.9073486328125e-06, -0.000362396240234375, -1.9073486328125e-06, -5.364418029785156e-05, -6.103515625e-05, -0.00045013427734375, -0.04334259033203125, -0.0014934539794921875, -0.10706424713134766, -0.000118255615234375, -5.7220458984375e-06, 0.0, -0.10854911804199219, 0.0, -7.82012939453125e-05, -0.00048828125, -1.33514404296875e-05, -2.7418097943154862e-06, -3.707340147229843e-05, -5.722093192161992e-06, -1.1920928244535389e-07, -0.0014363527297973633, 0.0, -4.00543212890625e-05, -1.71661376953125e-05, -0.0002557039260864258, 0.0], "choice_history": [97, 283, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Ironfur", " ", "Grizzly", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 3, "hole0": 3}], "hole3": "create_minion", "hole0": "IronfurGrizzly", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "MECH"}], "hole2": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -6.89429616618974, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"score_history": [-0.000110626220703125, -0.0001049041748046875, -0.0006657097255811095, -7.414570427499712e-05, -1.5497195136049413e-06, -1.3902783393859863e-05, -2.872943878173828e-05, -1.1086449376307428e-05, -2.86102294921875e-05, -0.0017795562744140625, -0.0008869171142578125, -2.3841855067985307e-07, -3.254413604736328e-05, -4.291534423828125e-06, -4.76837158203125e-05, -3.695463419717271e-06, -1.9073486328125e-06, -0.000698089599609375, -5.7220458984375e-06, -7.00175666809082, -1.9073486328125e-06, -0.2840309143066406, -4.57763671875e-05, -0.0001468658447265625, 0.0, -9.381771087646484e-05, -3.576278118089249e-07, -0.0009307861328125, 0.0, -7.62939453125e-06, 0.0, -0.0038852691650390625, 0.0, -4.76837158203125e-05, -0.0007877349853515625, -9.5367431640625e-06, -7.271740287251305e-06, -5.006664650863968e-05, -8.940702173276804e-06, -1.1920928244535389e-07, -0.001890420913696289, 0.0, -4.00543212890625e-05, -1.71661376953125e-05, -0.00016033649444580078, 0.0], "choice_history": [97, 283, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "COMMON", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 3, "hole0": 3}], "hole3": "create_minion", "hole0": "IronfurGrizzly", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "COMMON", "hole0": "Ironfur Grizzly", "_type": "Template26", "hole2": "COMMON", "hole1": 3}], "hole1": "MinionCard"}, "score": -7.298419233695789, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, COMMON=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"score_history": [-0.000110626220703125, -0.0001049041748046875, -0.0006657097255811095, -7.414570427499712e-05, -1.5497195136049413e-06, -1.3902783393859863e-05, -2.872943878173828e-05, -1.1086449376307428e-05, -2.86102294921875e-05, -0.0017795562744140625, -0.0008869171142578125, -2.3841855067985307e-07, -3.254413604736328e-05, -4.291534423828125e-06, -4.76837158203125e-05, -3.695463419717271e-06, -1.9073486328125e-06, -7.4997148513793945, -0.0001163482666015625, -0.0003676414489746094, -1.6689160474925302e-05, -5.91278076171875e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -6.890296936035156e-05, -3.576278118089249e-07, -0.0006409883499145508, 0.0, -7.62939453125e-06, 0.0, -0.0039844512939453125, 0.0, -4.1961669921875e-05, -0.0008392333984375, -9.5367431640625e-06, -7.629365427419543e-06, -4.8040190449682996e-05, -8.940701263782103e-06, -1.1920928244535389e-07, -0.002065896987915039, 0.0, -3.4332275390625e-05, -1.71661376953125e-05, -0.00015652179718017578, 0.0], "choice_history": [97, 283, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 3, "hole0": 3}], "hole3": "create_minion", "hole0": "IronfurGrizzly", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Ironfur Grizzly", "_type": "Template26", "hole2": "FREE", "hole1": 3}], "hole1": "MinionCard"}, "score": -7.512015816066672, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"score_history": [-0.000110626220703125, -0.0001049041748046875, -0.0006657097255811095, -7.414570427499712e-05, -1.5497195136049413e-06, -1.3902783393859863e-05, -2.872943878173828e-05, -1.1086449376307428e-05, -2.86102294921875e-05, -0.0017795562744140625, -0.0008869171142578125, -2.3841855067985307e-07, -3.254413604736328e-05, -4.291534423828125e-06, -4.76837158203125e-05, -3.695463419717271e-06, -1.9073486328125e-06, -0.000698089599609375, -5.7220458984375e-06, -0.0010148286819458008, -1.9073468138230965e-06, -6.866455078125e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -6.29425048828125e-05, -2.1457672119140625e-06, -0.0006122589111328125, 0.0, -7.62939453125e-06, 0.0, -0.003978729248046875, 0.0, -4.00543212890625e-05, -0.00080108642578125, -9.5367431640625e-06, -7.152531907195225e-06, -5.090107151772827e-05, -8.702285413164645e-06, -1.1920928244535389e-07, -7.531577110290527, -1.71661376953125e-05, -0.000186920166015625, -0.0001373291015625, -0.0013562440872192383, 0.0], "choice_history": [97, 283, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "3", "<EOS>", "3", "<EOS>", "windfury", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "windfury", "_type": "Template50", "hole1": 3, "hole0": 3}], "hole3": "create_minion", "hole0": "IronfurGrizzly", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Ironfur Grizzly", "_type": "Template26", "hole2": "COMMON", "hole1": 3}], "hole1": "MinionCard"}, "score": -7.544458505011413, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, windfury=True)\n"}, {"score_history": [-0.000110626220703125, -0.0001049041748046875, -7.546624183654785, -0.17039573192596436, -1.3708974620385561e-05, -6.4820051193237305e-06, -3.445148468017578e-05, -2.384184699621983e-05, -0.0001621246337890625, -0.0030117034912109375, -0.000576019287109375, -4.768370445162873e-07, -3.635883331298828e-05, -8.344646857949556e-07, -1.33514404296875e-05, -3.337839643791085e-06, -1.9073486328125e-06, -0.000720977783203125, -5.7220458984375e-06, -0.0010319948196411133, -1.6689286894688848e-06, -7.82012939453125e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -6.103515625e-05, -2.1457672119140625e-06, -0.000606536865234375, 0.0, -7.62939453125e-06, 0.0, -0.0039768218994140625, 0.0, -4.00543212890625e-05, -0.0007991790771484375, -9.5367431640625e-06, -7.152531907195225e-06, -5.149708886165172e-05, -8.583077942603268e-06, -1.1920928244535389e-07, -0.0020945072174072266, 0.0, -3.62396240234375e-05, -1.71661376953125e-05, -0.00016033649444580078, 0.0], "choice_history": [97, 283, "Force", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 3, "hole0": 3}], "hole3": "create_minion", "hole0": "ForceGrizzly", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Ironfur Grizzly", "_type": "Template26", "hole2": "COMMON", "hole1": 3}], "hole1": "MinionCard"}, "score": -7.730852408729781, "inferred_code": "class ForceGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"score_history": [-0.000110626220703125, -0.0001049041748046875, -0.0006657097255811095, -7.414570427499712e-05, -1.5497195136049413e-06, -1.3902783393859863e-05, -2.872943878173828e-05, -1.1086449376307428e-05, -2.86102294921875e-05, -0.0017795562744140625, -0.0008869171142578125, -2.3841855067985307e-07, -3.254413604736328e-05, -4.291534423828125e-06, -4.76837158203125e-05, -3.695463419717271e-06, -1.9073486328125e-06, -0.000698089599609375, -5.7220458984375e-06, -0.0010148286819458008, -1.9073468138230965e-06, -6.866455078125e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -6.29425048828125e-05, -2.1457672119140625e-06, -0.0006122589111328125, 0.0, -7.62939453125e-06, 0.0, -0.003978729248046875, 0.0, -4.00543212890625e-05, -0.00080108642578125, -9.5367431640625e-06, -7.152531907195225e-06, -5.090107151772827e-05, -8.702285413164645e-06, -1.1920928244535389e-07, -7.983851432800293, 0.0, -0.0007495880126953125, -0.0001354217529296875, -0.04982006549835205, -1.71661376953125e-05], "choice_history": [97, 283, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "3", "<EOS>", "3", "<EOS>", "spell_targetable", "<EOS>", 22, 175, "False", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "spell_targetable", "_type": "Template50", "hole1": 3, "hole0": 3}], "hole3": "create_minion", "hole0": "IronfurGrizzly", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Ironfur Grizzly", "_type": "Template26", "hole2": "COMMON", "hole1": 3}], "hole1": "MinionCard"}, "score": -8.045757409430358, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, spell_targetable=True)\n"}, {"score_history": [-0.000110626220703125, -0.0001049041748046875, -0.0006657097255811095, -7.414570427499712e-05, -1.5497195136049413e-06, -1.3902783393859863e-05, -2.872943878173828e-05, -1.1086449376307428e-05, -2.86102294921875e-05, -0.0017795562744140625, -0.0008869171142578125, -2.3841855067985307e-07, -3.254413604736328e-05, -4.291534423828125e-06, -4.76837158203125e-05, -3.695463419717271e-06, -1.9073486328125e-06, -0.000698089599609375, -5.7220458984375e-06, -0.0010148286819458008, -1.9073468138230965e-06, -6.866455078125e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -6.29425048828125e-05, -2.1457672119140625e-06, -0.0006122589111328125, 0.0, -7.62939453125e-06, 0.0, -0.003978729248046875, 0.0, -4.00543212890625e-05, -8.129596710205078, -0.000141143798828125, -0.0009198718471452594, -3.576278118089249e-07, -6.198689516168088e-05, 0.0], "choice_history": [97, 283, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "3", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 3, "hole0": 3}], "hole3": "create_minion", "hole0": "IronfurGrizzly", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Ironfur Grizzly", "_type": "Template26", "hole2": "COMMON", "hole1": 3}], "hole1": "MinionCard"}, "score": -8.141026307335352, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n"}, {"score_history": [-0.000110626220703125, -0.0001049041748046875, -0.0006657097255811095, -7.414570427499712e-05, -1.5497195136049413e-06, -1.3902783393859863e-05, -2.872943878173828e-05, -1.1086449376307428e-05, -2.86102294921875e-05, -0.0017795562744140625, -0.0008869171142578125, -2.3841855067985307e-07, -3.254413604736328e-05, -4.291534423828125e-06, -4.76837158203125e-05, -3.695463419717271e-06, -1.9073486328125e-06, -0.000698089599609375, -5.7220458984375e-06, -0.0010148286819458008, -1.9073468138230965e-06, -6.866455078125e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -6.29425048828125e-05, -2.1457672119140625e-06, -8.336027145385742, -1.1920928244535389e-07, -5.7220458984375e-06, 0.0, -0.0038013458251953125, 0.0, -5.53131103515625e-05, -0.00080108642578125, -9.5367431640625e-06, -6.9141146923357155e-06, -5.709961988031864e-05, -9.41753478400642e-06, -1.1920928244535389e-07, -0.002950906753540039, 0.0, -3.24249267578125e-05, -1.9073486328125e-05, -0.00016415119171142578, 0.0], "choice_history": [97, 283, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 3, "hole0": 3}], "hole3": "create_minion", "hole0": "IronfurGrizzly", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "PIRATE"}, "hole3": "minion_type", "hole0": "Ironfur Grizzly", "_type": "Template26", "hole2": "COMMON", "hole1": 3}], "hole1": "MinionCard"}, "score": -8.349607940668719, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"score_history": [-0.000110626220703125, -0.0001049041748046875, -0.0006657097255811095, -7.414570427499712e-05, -1.5497195136049413e-06, -1.3902783393859863e-05, -2.872943878173828e-05, -1.1086449376307428e-05, -2.86102294921875e-05, -0.0017795562744140625, -0.0008869171142578125, -2.3841855067985307e-07, -3.254413604736328e-05, -4.291534423828125e-06, -4.76837158203125e-05, -3.695463419717271e-06, -1.9073486328125e-06, -0.000698089599609375, -5.7220458984375e-06, -0.0010148286819458008, -1.9073468138230965e-06, -6.866455078125e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -6.29425048828125e-05, -2.1457672119140625e-06, -0.0006122589111328125, 0.0, -7.62939453125e-06, 0.0, -0.003978729248046875, 0.0, -4.00543212890625e-05, -0.00080108642578125, -9.5367431640625e-06, -7.152531907195225e-06, -5.090107151772827e-05, -8.702285413164645e-06, -1.1920928244535389e-07, -8.344417572021484, -7.62939453125e-06, -0.000152587890625, -0.0001544952392578125, -0.0008755922317504883, 0.0], "choice_history": [97, 283, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "3", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 3, "hole0": 3}], "hole3": "create_minion", "hole0": "IronfurGrizzly", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Ironfur Grizzly", "_type": "Template26", "hole2": "COMMON", "hole1": 3}], "hole1": "MinionCard"}, "score": -8.356791612006042, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, charge=True)\n"}, {"score_history": [-0.000110626220703125, -0.0001049041748046875, -0.0006657097255811095, -7.414570427499712e-05, -1.5497195136049413e-06, -1.3902783393859863e-05, -2.872943878173828e-05, -1.1086449376307428e-05, -2.86102294921875e-05, -0.0017795562744140625, -0.0008869171142578125, -2.3841855067985307e-07, -3.254413604736328e-05, -4.291534423828125e-06, -4.76837158203125e-05, -3.695463419717271e-06, -1.9073486328125e-06, -0.000698089599609375, -5.7220458984375e-06, -0.0010148286819458008, -1.9073468138230965e-06, -6.866455078125e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -6.29425048828125e-05, -2.1457672119140625e-06, -0.0006122589111328125, 0.0, -7.62939453125e-06, 0.0, -0.003978729248046875, 0.0, -4.00543212890625e-05, -0.00080108642578125, -9.5367431640625e-06, -7.152531907195225e-06, -5.090107151772827e-05, -8.702285413164645e-06, -1.1920928244535389e-07, -8.634575843811035, -1.9073486328125e-06, -0.0001220703125, -8.58306884765625e-05, -0.0012646913528442383, 0.0], "choice_history": [97, 283, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "3", "<EOS>", "3", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "divine_shield", "_type": "Template50", "hole1": 3, "hole0": 3}], "hole3": "create_minion", "hole0": "IronfurGrizzly", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Ironfur Grizzly", "_type": "Template26", "hole2": "COMMON", "hole1": 3}], "hole1": "MinionCard"}, "score": -8.647234078741882, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, divine_shield=True)\n"}, {"score_history": [-0.000110626220703125, -0.0001049041748046875, -0.0006657097255811095, -7.414570427499712e-05, -1.5497195136049413e-06, -1.3902783393859863e-05, -2.872943878173828e-05, -1.1086449376307428e-05, -2.86102294921875e-05, -0.0017795562744140625, -0.0008869171142578125, -2.3841855067985307e-07, -3.254413604736328e-05, -4.291534423828125e-06, -4.76837158203125e-05, -3.695463419717271e-06, -1.9073486328125e-06, -0.000698089599609375, -5.7220458984375e-06, -0.0010148286819458008, -1.9073468138230965e-06, -6.866455078125e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -6.29425048828125e-05, -2.1457672119140625e-06, -0.0006122589111328125, 0.0, -7.62939453125e-06, 0.0, -0.003978729248046875, 0.0, -4.00543212890625e-05, -0.00080108642578125, -9.5367431640625e-06, -7.152531907195225e-06, -5.090107151772827e-05, -8.702285413164645e-06, -1.1920928244535389e-07, -8.787229537963867, -0.00075531005859375, -0.0004863739013671875, -0.0001316070556640625, -0.005630612373352051, -1.9073486328125e-06], "choice_history": [97, 283, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "3", "<EOS>", "3", "<EOS>", "Used", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "Used", "_type": "Template50", "hole1": 3, "hole0": 3}], "hole3": "create_minion", "hole0": "IronfurGrizzly", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Ironfur Grizzly", "_type": "Template26", "hole2": "COMMON", "hole1": 3}], "hole1": "MinionCard"}, "score": -8.80541908392987, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, Used=True)\n"}, {"score_history": [-0.000110626220703125, -0.0001049041748046875, -0.0006657097255811095, -7.414570427499712e-05, -1.5497195136049413e-06, -1.3902783393859863e-05, -2.872943878173828e-05, -1.1086449376307428e-05, -2.86102294921875e-05, -0.0017795562744140625, -0.0008869171142578125, -2.3841855067985307e-07, -3.254413604736328e-05, -4.291534423828125e-06, -4.76837158203125e-05, -3.695463419717271e-06, -1.9073486328125e-06, -0.000698089599609375, -5.7220458984375e-06, -0.0010148286819458008, -1.9073468138230965e-06, -6.866455078125e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -6.29425048828125e-05, -2.1457672119140625e-06, -8.80222225189209, 0.0, -5.7220458984375e-06, 0.0, -0.0015163421630859375, 0.0, -0.00017547607421875, -0.001674652099609375, -1.33514404296875e-05, -1.4185804502631072e-05, -6.568216485902667e-05, -1.0848017154785339e-05, -1.1920928244535389e-07, -0.003519415855407715, 0.0, -2.86102294921875e-05, -1.9073486328125e-05, -0.00016987323760986328, 0.0], "choice_history": [97, 283, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 3, "hole0": 3}], "hole3": "create_minion", "hole0": "IronfurGrizzly", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "<UNK>"}, "hole3": "minion_type", "hole0": "Ironfur Grizzly", "_type": "Template26", "hole2": "COMMON", "hole1": 3}], "hole1": "MinionCard"}, "score": -8.815103168806296, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"score_history": [-0.000110626220703125, -0.0001049041748046875, -0.0006657097255811095, -7.414570427499712e-05, -1.5497195136049413e-06, -1.3902783393859863e-05, -2.872943878173828e-05, -1.1086449376307428e-05, -2.86102294921875e-05, -6.597042083740234, -0.004048347473144531, -3.4332275390625e-05, -0.0006694793701171875, -1.0251998901367188e-05, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -0.001895904541015625, -0.000591278076171875, -0.000152587890625, -3.099436753473128e-06, -2.8967857360839844e-05, -2.6821824576472864e-05, -3.826618194580078e-05, -2.09808349609375e-05, -4.76837158203125e-05, -3.159042535116896e-05, 0.0, -0.0001583099365234375, -1.9073486328125e-06, -1.52587890625e-05, -1.33514404296875e-05, -4.291534423828125e-06, 0.0, -1.919269561767578e-05, -1.9073486328125e-06, -0.000110626220703125, -5.7220458984375e-06, -3.814697265625e-05, 0.0, -2.682209014892578e-05, -4.661083221435547e-05, -0.02425384521484375, -1.9073486328125e-06, -0.000362396240234375, -1.9073486328125e-06, -5.364418029785156e-05, -6.103515625e-05, -0.00045013427734375, -0.04334259033203125, -0.0014934539794921875, -0.10706424713134766, -0.000118255615234375, -5.7220458984375e-06, 0.0, -2.330328941345215, 0.0, -5.14984130859375e-05, -0.0006084442138671875, -9.5367431640625e-06, -7.152531907195225e-06, -6.389413465512916e-05, -7.987033313838765e-06, -1.1920928244535389e-07, -0.0016518831253051758, 0.0, -4.9591064453125e-05, -1.71661376953125e-05, -0.00014126300811767578, 0.0], "choice_history": [97, 283, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Ironfur", " ", "Grizzly", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 130, 287, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "p", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 3, "hole0": 3}], "hole3": "create_minion", "hole0": "IronfurGrizzly", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "MECH"}], "hole2": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -9.116309757494825, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, p):\n        return Minion(3, 3, taunt=True)\n"}]}
{"index": 58, "beams": [{"score_history": [-0.0008907318115234375, -0.000766754150390625, -4.768370445162873e-07, -7.5101784204889555e-06, -9.536738616588991e-07, -1.633159445191268e-05, -0.00014507770538330078, -3.6954863844584906e-06, -0.0001659393310546875, -0.0003566741943359375, -5.91278076171875e-05, 0.0, -0.00024485576432198286, -1.1920928244535389e-07, -5.7220458984375e-06, -2.3841852225814364e-07, 0.0, -0.0007021427154541016, -7.62939453125e-06, -0.012505412101745605, -2.0265579223632812e-06, -0.0010852813720703125, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00015866756439208984, -3.635883331298828e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.003229659516364336, -1.5497195136049413e-06, -0.0002922932035289705, 0.0, -4.4345855712890625e-05, 0.0, -0.000186920166015625, -0.000118255615234375, -1.6570091247558594e-05, -2.0265558760002023e-06, -0.013527870178222656, -1.9073486328125e-05, -0.00012969970703125, -0.0002155303955078125, -7.62939453125e-05, -4.1961669921875e-05, 0.0, -5.543231964111328e-05, 0.0, -2.872943878173828e-05, 0.0, -8.463859558105469e-06, -1.1920928244535389e-07, -9.024133760249242e-05, -3.576278118089249e-07, -0.008131027221679688, -4.1961669921875e-05, -0.00011444091796875, -0.000240325927734375, -1.9073486328125e-06, -0.008885413408279419, -1.3589859008789062e-05, -0.009466171264648438, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.0221099853515625, 0.0, -0.000331878662109375, -1.9073486328125e-06, -0.006445407867431641, -2.384185791015625e-06, -0.0003299713134765625, 0.0, -0.0005978345288895071, -2.1457672119140625e-06, -0.000202178955078125, -0.0011749267578125, 0.0, -0.0001888275146484375, -1.9073486328125e-06, -0.0006951093673706055, -2.3841855067985307e-07, -0.00011277183511992916, -1.311301275563892e-06, -0.00012969970703125, -0.0001983642578125, -5.53131103515625e-05, -0.00296783447265625, -0.0023610303178429604, -0.0008681835606694221, -0.03238105773925781, -9.5367431640625e-05, -0.06221771240234375, -1.71661376953125e-05, -0.000217437744140625, -0.000186920166015625, -0.0010852813720703125, -1.9073486328125e-06, -0.2838200330734253, 0.0, -0.004841327667236328, -7.152555099310121e-07, -0.0032347054220736027, -1.6689286894688848e-06, -0.000335693359375, -0.010730743408203125, -3.814697265625e-06, -0.001621246337890625, 0.0, -0.00012969970703125, 0.0, -0.00010001659393310547, 0.0, -0.017665863037109375, 0.0, -0.0724191665649414, -0.0027713775634765625, -0.0006923675537109375, -4.57763671875e-05, -0.0002193450927734375, -2.47955322265625e-05, -0.011140004731714725, -5.483620952873025e-06, -0.0002269744873046875, -0.06583690643310547, -4.1961669921875e-05, -0.0013875961303710938, -0.0003509521484375, -6.020058935973793e-05, -7.986990567587782e-06, -0.000347137451171875, -0.0001430511474609375, -5.91278076171875e-05, -0.003749847412109375, 0.0, -0.0015583038330078125, 0.0, -0.0001920461654663086, 0.0, -5.841255187988281e-06, -1.1920922133867862e-06, -0.0007750988006591797, 0.0, -0.0003910064697265625, -0.000339508056640625, -4.76837158203125e-05, -0.1531914323568344, -1.1920928244535389e-07, -1.52587890625e-05, -1.9073486328125e-05, -0.0004510772996582091, -0.0014045226853340864, -0.0001125335693359375, -0.00060272216796875, -6.866455078125e-05, -0.000499725341796875, -1.9073486328125e-06, -0.000255584716796875, 0.0, -0.001507401466369629, -1.9073486328125e-06, -1.33514404296875e-05, -5.960462772236497e-07, -3.31399824062828e-05, 0.0, -0.000148773193359375, -0.000331878662109375, -8.96453857421875e-05, -0.198142409324646, -1.1920928244535389e-07, -1.33514404296875e-05, -3.24249267578125e-05, -0.0005624086479656398, -0.001979587133973837], "choice_history": [97, 285, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 347, 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 47, 167, 0, 282, "x", "<EOS>", 17, 153, 13, 143, 13, 143, 21, 174, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 343, 8, 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 161, 17, 153, 21, 174, "<UNK>", "<EOS>", 343, 8, 346, 51, 176, "Null", "<EOS>", 358, 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 358, 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"body": {"comparators": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Compare", "ops": [{"_type": "Is"}], "left": {"value": {"value": {"_type": "Name", "id": "x"}, "_type": "Attribute", "attr": "card"}, "_type": "Attribute", "attr": "minion_type"}}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "x"}}]}, "_type": "Assign"}, {"body": [{"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "orelse": [{"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "If", "test": {"comparators": [{"value": "Null", "_type": "NameConstant"}], "_type": "Compare", "ops": [{"_type": "Is"}], "left": {"_type": "Name", "id": "<UNK>"}}}], "hole3": "use", "hole0": "KillCommand", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Kill Command", "_type": "Template27", "hole2": "HUNTER", "hole1": 3}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -1.0421873955225465, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n"}, {"score_history": [-0.0008907318115234375, -0.000766754150390625, -4.768370445162873e-07, -7.5101784204889555e-06, -9.536738616588991e-07, -1.633159445191268e-05, -0.00014507770538330078, -3.6954863844584906e-06, -0.0001659393310546875, -0.0003566741943359375, -5.91278076171875e-05, 0.0, -0.00024485576432198286, -1.1920928244535389e-07, -5.7220458984375e-06, -2.3841852225814364e-07, 0.0, -0.0007021427154541016, -7.62939453125e-06, -0.012505412101745605, -2.0265579223632812e-06, -0.0010852813720703125, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00015866756439208984, -3.635883331298828e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.003229659516364336, -1.5497195136049413e-06, -0.0002922932035289705, 0.0, -4.4345855712890625e-05, 0.0, -0.000186920166015625, -0.000118255615234375, -1.6570091247558594e-05, -2.0265558760002023e-06, -0.013527870178222656, -1.9073486328125e-05, -0.00012969970703125, -0.0002155303955078125, -7.62939453125e-05, -4.1961669921875e-05, 0.0, -5.543231964111328e-05, 0.0, -2.872943878173828e-05, 0.0, -8.463859558105469e-06, -1.1920928244535389e-07, -9.024133760249242e-05, -3.576278118089249e-07, -0.008131027221679688, -4.1961669921875e-05, -0.00011444091796875, -0.000240325927734375, -1.9073486328125e-06, -0.008885413408279419, -1.3589859008789062e-05, -0.009466171264648438, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.0221099853515625, 0.0, -0.000331878662109375, -1.9073486328125e-06, -0.006445407867431641, -2.384185791015625e-06, -0.0003299713134765625, 0.0, -0.0005978345288895071, -2.1457672119140625e-06, -0.000202178955078125, -0.0011749267578125, 0.0, -0.0001888275146484375, -1.9073486328125e-06, -0.0006951093673706055, -2.3841855067985307e-07, -0.00011277183511992916, -1.311301275563892e-06, -0.00012969970703125, -0.0001983642578125, -5.53131103515625e-05, -0.00296783447265625, -0.0023610303178429604, -0.0008681835606694221, -0.03238105773925781, -9.5367431640625e-05, -0.06221771240234375, -1.71661376953125e-05, -0.000217437744140625, -0.000186920166015625, -0.0010852813720703125, -1.9073486328125e-06, -0.2838200330734253, 0.0, -0.004841327667236328, -7.152555099310121e-07, -0.0032347054220736027, -1.6689286894688848e-06, -0.000335693359375, -0.010730743408203125, -3.814697265625e-06, -0.001621246337890625, 0.0, -0.00012969970703125, 0.0, -0.00010001659393310547, 0.0, -0.017665863037109375, 0.0, -0.0724191665649414, -0.0027713775634765625, -0.0006923675537109375, -4.57763671875e-05, -0.0002193450927734375, -2.47955322265625e-05, -0.011140004731714725, -5.483620952873025e-06, -0.0002269744873046875, -0.06583690643310547, -4.1961669921875e-05, -0.0013875961303710938, -0.0003509521484375, -6.020058935973793e-05, -7.986990567587782e-06, -0.000347137451171875, -0.0001430511474609375, -5.91278076171875e-05, -0.003749847412109375, 0.0, -0.0015583038330078125, 0.0, -0.0001920461654663086, 0.0, -5.841255187988281e-06, -1.1920922133867862e-06, -0.0007750988006591797, 0.0, -0.0003910064697265625, -0.000339508056640625, -4.76837158203125e-05, -0.1531914323568344, -1.1920928244535389e-07, -1.52587890625e-05, -1.9073486328125e-05, -0.0004510772996582091, -0.0014045226853340864, -0.0001125335693359375, -0.00060272216796875, -6.866455078125e-05, -0.000499725341796875, -1.9073486328125e-06, -0.000255584716796875, 0.0, -0.001507401466369629, -1.9073486328125e-06, -1.33514404296875e-05, -5.960462772236497e-07, -3.31399824062828e-05, 0.0, -0.000148773193359375, -0.000331878662109375, -8.96453857421875e-05, -1.7177250385284424, -1.7881377516459906e-06, -4.76837158203125e-05, -3.814697265625e-05, -0.0008482779958285391, -0.0011929270112887025], "choice_history": [97, 285, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 347, 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 47, 167, 0, 282, "x", "<EOS>", 17, 153, 13, 143, 13, 143, 21, 174, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 343, 8, 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 161, 17, 153, 21, 174, "<UNK>", "<EOS>", 343, 8, 346, 51, 176, "Null", "<EOS>", 358, 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 358, 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "5", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"body": {"comparators": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Compare", "ops": [{"_type": "Is"}], "left": {"value": {"value": {"_type": "Name", "id": "x"}, "_type": "Attribute", "attr": "card"}, "_type": "Attribute", "attr": "minion_type"}}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "x"}}]}, "_type": "Assign"}, {"body": [{"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "orelse": [{"hole2": [{"_type": "Template61", "hole0": 5}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "If", "test": {"comparators": [{"value": "Null", "_type": "NameConstant"}], "_type": "Compare", "ops": [{"_type": "Is"}], "left": {"_type": "Name", "id": "<UNK>"}}}], "hole3": "use", "hole0": "KillCommand", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Kill Command", "_type": "Template27", "hole2": "HUNTER", "hole1": 3}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -2.561310957201279, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n"}, {"score_history": [-0.0008907318115234375, -0.000766754150390625, -4.768370445162873e-07, -7.5101784204889555e-06, -9.536738616588991e-07, -1.633159445191268e-05, -0.00014507770538330078, -3.6954863844584906e-06, -0.0001659393310546875, -0.0003566741943359375, -5.91278076171875e-05, 0.0, -0.00024485576432198286, -1.1920928244535389e-07, -5.7220458984375e-06, -2.3841852225814364e-07, 0.0, -0.0007021427154541016, -7.62939453125e-06, -0.012505412101745605, -2.0265579223632812e-06, -0.0010852813720703125, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00015866756439208984, -3.635883331298828e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.003229659516364336, -1.5497195136049413e-06, -0.0002922932035289705, 0.0, -4.4345855712890625e-05, 0.0, -0.000186920166015625, -0.000118255615234375, -1.6570091247558594e-05, -2.0265558760002023e-06, -0.013527870178222656, -1.9073486328125e-05, -0.00012969970703125, -0.0002155303955078125, -7.62939453125e-05, -4.1961669921875e-05, 0.0, -5.543231964111328e-05, 0.0, -2.872943878173828e-05, 0.0, -8.463859558105469e-06, -1.1920928244535389e-07, -9.024133760249242e-05, -3.576278118089249e-07, -0.008131027221679688, -4.1961669921875e-05, -0.00011444091796875, -0.000240325927734375, -1.9073486328125e-06, -0.008885413408279419, -1.3589859008789062e-05, -0.009466171264648438, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.0221099853515625, 0.0, -0.000331878662109375, -1.9073486328125e-06, -0.006445407867431641, -2.384185791015625e-06, -0.0003299713134765625, 0.0, -0.0005978345288895071, -2.1457672119140625e-06, -0.000202178955078125, -0.0011749267578125, 0.0, -0.0001888275146484375, -1.9073486328125e-06, -0.0006951093673706055, -2.3841855067985307e-07, -0.00011277183511992916, -1.311301275563892e-06, -0.00012969970703125, -0.0001983642578125, -5.53131103515625e-05, -0.00296783447265625, -0.0023610303178429604, -0.0008681835606694221, -0.03238105773925781, -9.5367431640625e-05, -0.06221771240234375, -1.71661376953125e-05, -0.000217437744140625, -0.000186920166015625, -0.0010852813720703125, -1.9073486328125e-06, -0.2838200330734253, 0.0, -0.004841327667236328, -7.152555099310121e-07, -0.0032347054220736027, -1.6689286894688848e-06, -0.000335693359375, -0.010730743408203125, -3.814697265625e-06, -0.001621246337890625, 0.0, -0.00012969970703125, 0.0, -0.00010001659393310547, 0.0, -0.017665863037109375, 0.0, -0.0724191665649414, -0.0027713775634765625, -0.0006923675537109375, -4.57763671875e-05, -0.0002193450927734375, -2.47955322265625e-05, -0.011140004731714725, -5.483620952873025e-06, -0.0002269744873046875, -0.06583690643310547, -4.1961669921875e-05, -0.0013875961303710938, -0.0003509521484375, -6.020058935973793e-05, -7.986990567587782e-06, -0.000347137451171875, -0.0001430511474609375, -5.91278076171875e-05, -0.003749847412109375, 0.0, -0.0015583038330078125, 0.0, -0.0001920461654663086, 0.0, -5.841255187988281e-06, -1.1920922133867862e-06, -0.0007750988006591797, 0.0, -0.0003910064697265625, -0.000339508056640625, -4.76837158203125e-05, -1.954581379890442, -3.6954863844584906e-06, -4.76837158203125e-05, -2.6702880859375e-05, -0.0005868477746844292, -0.0008851286838762462, -0.0001049041748046875, -0.00066375732421875, -5.91278076171875e-05, -0.000705718994140625, -1.9073486328125e-06, -0.000301361083984375, 0.0, -0.0019385814666748047, -3.814697265625e-06, -1.33514404296875e-05, -4.768370445162873e-07, -3.5762324841925874e-05, 0.0, -0.0001544952392578125, -0.0003108978271484375, -9.5367431640625e-05, -0.20142054557800293, -1.1920928244535389e-07, -1.33514404296875e-05, -3.62396240234375e-05, -0.0005770775605924428, -0.001911996165290475], "choice_history": [97, 285, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 347, 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 47, 167, 0, 282, "x", "<EOS>", 17, 153, 13, 143, 13, 143, 21, 174, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 343, 8, 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 161, 17, 153, 21, 174, "<UNK>", "<EOS>", 343, 8, 346, 51, 176, "Null", "<EOS>", 358, 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "5", "<EOS>", 50, 174, "self", "<EOS>", 358, 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"body": {"comparators": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Compare", "ops": [{"_type": "Is"}], "left": {"value": {"value": {"_type": "Name", "id": "x"}, "_type": "Attribute", "attr": "card"}, "_type": "Attribute", "attr": "minion_type"}}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "x"}}]}, "_type": "Assign"}, {"body": [{"hole2": [{"_type": "Template61", "hole0": 5}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "orelse": [{"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "If", "test": {"comparators": [{"value": "Null", "_type": "NameConstant"}], "_type": "Compare", "ops": [{"_type": "Is"}], "left": {"_type": "Name", "id": "<UNK>"}}}], "hole3": "use", "hole0": "KillCommand", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Kill Command", "_type": "Template27", "hole2": "HUNTER", "hole1": 3}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -2.847188071799742, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(5), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n"}, {"score_history": [-0.0008907318115234375, -0.000766754150390625, -4.768370445162873e-07, -7.5101784204889555e-06, -9.536738616588991e-07, -1.633159445191268e-05, -0.00014507770538330078, -3.6954863844584906e-06, -0.0001659393310546875, -0.0003566741943359375, -5.91278076171875e-05, 0.0, -0.00024485576432198286, -1.1920928244535389e-07, -5.7220458984375e-06, -2.3841852225814364e-07, 0.0, -0.0007021427154541016, -7.62939453125e-06, -0.012505412101745605, -2.0265579223632812e-06, -0.0010852813720703125, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00015866756439208984, -3.635883331298828e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.003229659516364336, -1.5497195136049413e-06, -0.0002922932035289705, 0.0, -4.4345855712890625e-05, 0.0, -0.000186920166015625, -0.000118255615234375, -1.6570091247558594e-05, -2.0265558760002023e-06, -0.013527870178222656, -1.9073486328125e-05, -0.00012969970703125, -0.0002155303955078125, -7.62939453125e-05, -4.1961669921875e-05, 0.0, -5.543231964111328e-05, 0.0, -2.872943878173828e-05, 0.0, -8.463859558105469e-06, -1.1920928244535389e-07, -9.024133760249242e-05, -3.576278118089249e-07, -0.008131027221679688, -4.1961669921875e-05, -0.00011444091796875, -0.000240325927734375, -1.9073486328125e-06, -0.008885413408279419, -1.3589859008789062e-05, -0.009466171264648438, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.0221099853515625, 0.0, -0.000331878662109375, -1.9073486328125e-06, -0.006445407867431641, -2.384185791015625e-06, -0.0003299713134765625, 0.0, -0.0005978345288895071, -2.1457672119140625e-06, -0.000202178955078125, -0.0011749267578125, 0.0, -0.0001888275146484375, -1.9073486328125e-06, -0.0006951093673706055, -2.3841855067985307e-07, -0.00011277183511992916, -1.311301275563892e-06, -0.00012969970703125, -0.0001983642578125, -5.53131103515625e-05, -0.00296783447265625, -0.0023610303178429604, -0.0008681835606694221, -0.03238105773925781, -9.5367431640625e-05, -0.06221771240234375, -1.71661376953125e-05, -0.000217437744140625, -0.000186920166015625, -0.0010852813720703125, -1.9073486328125e-06, -2.132941961288452, -1.1920928244535389e-07, -0.05111782252788544, 0.0, -0.020800691097974777, -2.503394853192731e-06, -0.0027952194213867188, -0.11501312255859375, 0.0, -0.0004062652587890625, -7.62939453125e-06, -0.1723126620054245, 0.0, -0.45997047424316406, -0.000720977783203125, -0.000484466552734375, 0.0, -0.0006656646728515625, 0.0, -0.2177104949951172, 0.0, -9.5367431640625e-06, -8.344646857949556e-07, -0.00042286512325517833, 0.0, -0.000308990478515625, -0.0007476806640625, -8.0108642578125e-05, -0.39922380447387695, -5.125993993715383e-06, -3.814697265625e-05, -3.814697265625e-06, -0.002394634997472167, -0.0010780083248391747], "choice_history": [97, 285, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 347, 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 47, 167, 0, 282, "x", "<EOS>", 17, 153, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "health", "<EOS>", 343, 11, 346, 52, 179, "5", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "5", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"body": {"comparators": [{"n": 5, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "LtE"}], "left": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "health"}}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "x"}}]}, "_type": "Assign"}, {"hole2": [{"_type": "Template61", "hole0": 5}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "hole3": "use", "hole0": "KillCommand", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Kill Command", "_type": "Template27", "hole2": "HUNTER", "hole1": 3}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -3.7766451386020847, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: player\n            .hero.health <= 5)\n        self.target.damage(player.effective_spell_damage(5), self)\n"}, {"score_history": [-0.0008907318115234375, -0.000766754150390625, -4.768370445162873e-07, -7.5101784204889555e-06, -9.536738616588991e-07, -1.633159445191268e-05, -0.00014507770538330078, -3.6954863844584906e-06, -0.0001659393310546875, -0.0003566741943359375, -5.91278076171875e-05, 0.0, -0.00024485576432198286, -1.1920928244535389e-07, -5.7220458984375e-06, -2.3841852225814364e-07, 0.0, -0.0007021427154541016, -7.62939453125e-06, -0.012505412101745605, -2.0265579223632812e-06, -0.0010852813720703125, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00015866756439208984, -3.635883331298828e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.003229659516364336, -1.5497195136049413e-06, -0.0002922932035289705, 0.0, -4.4345855712890625e-05, 0.0, -0.000186920166015625, -0.000118255615234375, -1.6570091247558594e-05, -2.0265558760002023e-06, -0.013527870178222656, -1.9073486328125e-05, -0.00012969970703125, -0.0002155303955078125, -7.62939453125e-05, -4.1961669921875e-05, 0.0, -5.543231964111328e-05, 0.0, -2.872943878173828e-05, 0.0, -8.463859558105469e-06, -1.1920928244535389e-07, -9.024133760249242e-05, -3.576278118089249e-07, -0.008131027221679688, -4.1961669921875e-05, -0.00011444091796875, -0.000240325927734375, -1.9073486328125e-06, -0.008885413408279419, -1.3589859008789062e-05, -0.009466171264648438, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.0221099853515625, 0.0, -0.000331878662109375, -1.9073486328125e-06, -0.006445407867431641, -2.384185791015625e-06, -0.0003299713134765625, 0.0, -0.0005978345288895071, -2.1457672119140625e-06, -0.000202178955078125, -0.0011749267578125, 0.0, -0.0001888275146484375, -1.9073486328125e-06, -0.0006951093673706055, -2.3841855067985307e-07, -0.00011277183511992916, -1.311301275563892e-06, -0.00012969970703125, -0.0001983642578125, -5.53131103515625e-05, -0.00296783447265625, -0.0023610303178429604, -0.0008681835606694221, -0.03238105773925781, -9.5367431640625e-05, -0.06221771240234375, -1.71661376953125e-05, -0.000217437744140625, -0.000186920166015625, -0.0010852813720703125, -1.9073486328125e-06, -2.132941961288452, -1.1920928244535389e-07, -0.05111782252788544, 0.0, -0.020800691097974777, -2.503394853192731e-06, -0.0027952194213867188, -0.11501312255859375, 0.0, -0.0004062652587890625, -7.62939453125e-06, -0.1723126620054245, 0.0, -1.1321296691894531, -0.000324249267578125, -0.059314727783203125, -1.9073486328125e-06, -0.0002956390380859375, 0.0, -0.014643669128417969, -1.1920928244535389e-07, -0.01121894083917141, 0.0], "choice_history": [97, 285, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 347, 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 47, 167, 0, 282, "x", "<EOS>", 17, 153, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "health", "<EOS>", 343, 11, 346, 52, 179, "5", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"body": {"comparators": [{"n": 5, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "LtE"}], "left": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "health"}}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "x"}}]}, "_type": "Assign"}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "KillCommand", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Kill Command", "_type": "Template27", "hole2": "HUNTER", "hole1": 3}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -3.910708430582474, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: player\n            .hero.health <= 5)\n        player.draw()\n"}, {"score_history": [-0.0008907318115234375, -0.000766754150390625, -4.768370445162873e-07, -7.5101784204889555e-06, -9.536738616588991e-07, -1.633159445191268e-05, -0.00014507770538330078, -3.6954863844584906e-06, -0.0001659393310546875, -0.0003566741943359375, -5.91278076171875e-05, 0.0, -0.00024485576432198286, -1.1920928244535389e-07, -5.7220458984375e-06, -2.3841852225814364e-07, 0.0, -0.0007021427154541016, -7.62939453125e-06, -0.012505412101745605, -2.0265579223632812e-06, -0.0010852813720703125, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00015866756439208984, -3.635883331298828e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.003229659516364336, -1.5497195136049413e-06, -0.0002922932035289705, 0.0, -4.4345855712890625e-05, 0.0, -0.000186920166015625, -0.000118255615234375, -1.6570091247558594e-05, -2.0265558760002023e-06, -0.013527870178222656, -1.9073486328125e-05, -0.00012969970703125, -0.0002155303955078125, -7.62939453125e-05, -4.1961669921875e-05, 0.0, -5.543231964111328e-05, 0.0, -2.872943878173828e-05, 0.0, -8.463859558105469e-06, -1.1920928244535389e-07, -9.024133760249242e-05, -3.576278118089249e-07, -0.008131027221679688, -4.1961669921875e-05, -0.00011444091796875, -0.000240325927734375, -1.9073486328125e-06, -0.008885413408279419, -1.3589859008789062e-05, -0.009466171264648438, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.0221099853515625, 0.0, -0.000331878662109375, -1.9073486328125e-06, -0.006445407867431641, -2.384185791015625e-06, -0.0003299713134765625, 0.0, -0.0005978345288895071, -2.1457672119140625e-06, -0.000202178955078125, -0.0011749267578125, 0.0, -0.0001888275146484375, -1.9073486328125e-06, -0.0006951093673706055, -2.3841855067985307e-07, -0.00011277183511992916, -1.311301275563892e-06, -0.00012969970703125, -0.0001983642578125, -5.53131103515625e-05, -0.00296783447265625, -0.0023610303178429604, -0.0008681835606694221, -0.03238105773925781, -9.5367431640625e-05, -0.06221771240234375, -1.71661376953125e-05, -0.000217437744140625, -0.000186920166015625, -0.0010852813720703125, -1.9073486328125e-06, -3.183115243911743, 0.0, -0.029900670051574707, -9.536738616588991e-07, -0.002666560932993889, -2.7418097943154862e-06, -0.0004291534423828125, -0.009716987609863281, -3.814697265625e-06, -0.0024089813232421875, 0.0, -0.000274658203125, 0.0, -0.00010955333709716797, 0.0, -0.014086723327636719, 0.0, -0.07344341278076172, -0.0027103424072265625, -0.000713348388671875, -4.76837158203125e-05, -0.000225067138671875, -2.47955322265625e-05, -0.01104021817445755, -5.6028297876764555e-06, -0.000225067138671875, -0.06598854064941406, -4.1961669921875e-05, -0.0013780593872070312, -0.0003719329833984375, -5.817403143737465e-05, -8.22540732769994e-06, -0.000347137451171875, -0.0001430511474609375, -5.91278076171875e-05, -0.00379180908203125, 0.0, -0.0015583038330078125, 0.0, -0.0001920461654663086, 0.0, -5.841255187988281e-06, -1.0728830375228426e-06, -0.0007714033126831055, 0.0, -0.000392913818359375, -0.000339508056640625, -4.76837158203125e-05, -0.1532280296087265, -1.1920928244535389e-07, -1.52587890625e-05, -1.9073486328125e-05, -0.00045262707863003016, -0.0014023769181221724, -0.0001125335693359375, -0.00060272216796875, -6.866455078125e-05, -0.000499725341796875, -1.9073486328125e-06, -0.000255584716796875, 0.0, -0.001495957374572754, -1.9073486328125e-06, -1.33514404296875e-05, -5.960462772236497e-07, -3.31399824062828e-05, 0.0, -0.0001506805419921875, -0.000331878662109375, -8.96453857421875e-05, -0.1981978416442871, -1.1920928244535389e-07, -1.33514404296875e-05, -3.24249267578125e-05, -0.0005624086479656398, -0.001979587133973837], "choice_history": [97, 285, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 347, 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 47, 167, 0, 282, "x", "<EOS>", 17, 153, 13, 143, 13, 143, 21, 174, "character", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 343, 8, 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 161, 17, 153, 21, 174, "<UNK>", "<EOS>", 343, 8, 346, 51, 176, "Null", "<EOS>", 358, 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 358, 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"body": {"comparators": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Compare", "ops": [{"_type": "Is"}], "left": {"value": {"value": {"_type": "Name", "id": "character"}, "_type": "Attribute", "attr": "card"}, "_type": "Attribute", "attr": "minion_type"}}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "x"}}]}, "_type": "Assign"}, {"body": [{"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "orelse": [{"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "If", "test": {"comparators": [{"value": "Null", "_type": "NameConstant"}], "_type": "Compare", "ops": [{"_type": "Is"}], "left": {"_type": "Name", "id": "<UNK>"}}}], "hole3": "use", "hole0": "KillCommand", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Kill Command", "_type": "Template27", "hole2": "HUNTER", "hole1": 3}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -3.9635913982758666, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: \n            character.card.minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n"}, {"score_history": [-0.0008907318115234375, -0.000766754150390625, -4.768370445162873e-07, -7.5101784204889555e-06, -9.536738616588991e-07, -1.633159445191268e-05, -0.00014507770538330078, -3.6954863844584906e-06, -0.0001659393310546875, -0.0003566741943359375, -5.91278076171875e-05, 0.0, -0.00024485576432198286, -1.1920928244535389e-07, -5.7220458984375e-06, -2.3841852225814364e-07, 0.0, -0.0007021427154541016, -7.62939453125e-06, -0.012505412101745605, -2.0265579223632812e-06, -0.0010852813720703125, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00015866756439208984, -3.635883331298828e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.003229659516364336, -1.5497195136049413e-06, -0.0002922932035289705, 0.0, -4.4345855712890625e-05, 0.0, -0.000186920166015625, -0.000118255615234375, -1.6570091247558594e-05, -2.0265558760002023e-06, -0.013527870178222656, -1.9073486328125e-05, -0.00012969970703125, -0.0002155303955078125, -7.62939453125e-05, -4.1961669921875e-05, 0.0, -5.543231964111328e-05, 0.0, -2.872943878173828e-05, 0.0, -8.463859558105469e-06, -1.1920928244535389e-07, -9.024133760249242e-05, -3.576278118089249e-07, -0.008131027221679688, -4.1961669921875e-05, -0.00011444091796875, -0.000240325927734375, -1.9073486328125e-06, -0.008885413408279419, -1.3589859008789062e-05, -0.009466171264648438, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.0221099853515625, 0.0, -0.000331878662109375, -1.9073486328125e-06, -0.006445407867431641, -2.384185791015625e-06, -0.0003299713134765625, 0.0, -0.0005978345288895071, -2.1457672119140625e-06, -0.000202178955078125, -0.0011749267578125, 0.0, -0.0001888275146484375, -1.9073486328125e-06, -0.0006951093673706055, -2.3841855067985307e-07, -0.00011277183511992916, -1.311301275563892e-06, -0.00012969970703125, -0.0001983642578125, -5.53131103515625e-05, -0.00296783447265625, -0.0023610303178429604, -0.0008681835606694221, -0.03238105773925781, -9.5367431640625e-05, -2.9839296340942383, -0.000255584716796875, -0.0001544952392578125, -5.7220458984375e-06, -0.002198099624365568, -5.841247457283316e-06, -1.9073486328125e-05, -0.0005550384521484375, -3.814697265625e-06, -0.0001621246337890625, -1.9073486328125e-06, -0.000732421875, 0.0, -0.008916854858398438, 0.0, -0.025406837463378906, 0.0, -0.1033935546875, 0.0, -4.76837158203125e-05, -0.10017204284667969, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -0.2180810421705246, 0.0, -0.26808929443359375, -0.000370025634765625, -0.0005207061767578125, 0.0, -0.000652313232421875, 0.0, -0.032123565673828125, 0.0, -7.62939453125e-06, -8.344646857949556e-07, -0.00034445489291101694, 0.0, -0.000324249267578125, -0.0005741119384765625, -7.43865966796875e-05, -0.42977988719940186, -5.006785613659304e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.0024224119260907173, -0.0011204469483345747], "choice_history": [97, 285, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 347, 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 47, 167, 0, 282, "x", "<EOS>", 17, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "5", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "5", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"body": {"comparators": [{"n": 5, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "x"}}]}, "_type": "Assign"}, {"hole2": [{"_type": "Template61", "hole0": 5}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "hole3": "use", "hole0": "KillCommand", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Kill Command", "_type": "Template27", "hole2": "HUNTER", "hole1": 3}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.314157683632814, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: len(\n            game.other_player.minions) >= 5)\n        self.target.damage(player.effective_spell_damage(5), self)\n"}, {"score_history": [-0.0008907318115234375, -0.000766754150390625, -4.768370445162873e-07, -7.5101784204889555e-06, -9.536738616588991e-07, -1.633159445191268e-05, -0.00014507770538330078, -3.6954863844584906e-06, -0.0001659393310546875, -0.0003566741943359375, -5.91278076171875e-05, 0.0, -0.00024485576432198286, -1.1920928244535389e-07, -5.7220458984375e-06, -2.3841852225814364e-07, 0.0, -0.0007021427154541016, -7.62939453125e-06, -0.012505412101745605, -2.0265579223632812e-06, -0.0010852813720703125, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00015866756439208984, -3.635883331298828e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.003229659516364336, -1.5497195136049413e-06, -0.0002922932035289705, 0.0, -4.4345855712890625e-05, 0.0, -0.000186920166015625, -0.000118255615234375, -1.6570091247558594e-05, -2.0265558760002023e-06, -0.013527870178222656, -1.9073486328125e-05, -0.00012969970703125, -0.0002155303955078125, -7.62939453125e-05, -4.1961669921875e-05, 0.0, -5.543231964111328e-05, 0.0, -2.872943878173828e-05, 0.0, -8.463859558105469e-06, -1.1920928244535389e-07, -9.024133760249242e-05, -3.576278118089249e-07, -0.008131027221679688, -4.1961669921875e-05, -0.00011444091796875, -0.000240325927734375, -1.9073486328125e-06, -0.008885413408279419, -1.3589859008789062e-05, -0.009466171264648438, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.0221099853515625, 0.0, -0.000331878662109375, -1.9073486328125e-06, -0.006445407867431641, -2.384185791015625e-06, -0.0003299713134765625, 0.0, -0.0005978345288895071, -2.1457672119140625e-06, -0.000202178955078125, -0.0011749267578125, 0.0, -0.0001888275146484375, -1.9073486328125e-06, -0.0006951093673706055, -2.3841855067985307e-07, -0.00011277183511992916, -1.311301275563892e-06, -0.00012969970703125, -0.0001983642578125, -5.53131103515625e-05, -0.00296783447265625, -0.0023610303178429604, -0.0008681835606694221, -0.03238105773925781, -9.5367431640625e-05, -0.06221771240234375, -1.71661376953125e-05, -0.000217437744140625, -0.000186920166015625, -0.0010852813720703125, -1.9073486328125e-06, -0.2838200330734253, 0.0, -0.004841327667236328, -7.152555099310121e-07, -0.0032347054220736027, -1.6689286894688848e-06, -0.000335693359375, -0.010730743408203125, -3.814697265625e-06, -0.001621246337890625, 0.0, -0.00012969970703125, 0.0, -0.00010001659393310547, 0.0, -0.017665863037109375, 0.0, -0.0724191665649414, -0.0027713775634765625, -0.0006923675537109375, -4.57763671875e-05, -0.0002193450927734375, -2.47955322265625e-05, -0.011140004731714725, -5.483620952873025e-06, -0.0002269744873046875, -0.06583690643310547, -4.1961669921875e-05, -0.0013875961303710938, -0.0003509521484375, -6.020058935973793e-05, -7.986990567587782e-06, -0.000347137451171875, -0.0001430511474609375, -5.91278076171875e-05, -0.003749847412109375, 0.0, -0.0015583038330078125, 0.0, -0.0001920461654663086, 0.0, -5.841255187988281e-06, -1.1920922133867862e-06, -0.0007750988006591797, 0.0, -0.0003910064697265625, -0.000339508056640625, -4.76837158203125e-05, -1.954581379890442, -3.6954863844584906e-06, -4.76837158203125e-05, -2.6702880859375e-05, -0.0005868477746844292, -0.0008851286838762462, -0.0001049041748046875, -0.00066375732421875, -5.91278076171875e-05, -0.000705718994140625, -1.9073486328125e-06, -0.000301361083984375, 0.0, -0.0019385814666748047, -3.814697265625e-06, -1.33514404296875e-05, -4.768370445162873e-07, -3.5762324841925874e-05, 0.0, -0.0001544952392578125, -0.0003108978271484375, -9.5367431640625e-05, -1.7028589248657227, -1.7881377516459906e-06, -4.9591064453125e-05, -4.00543212890625e-05, -0.0008201448363251984, -0.0011802908265963197], "choice_history": [97, 285, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 347, 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 47, 167, 0, 282, "x", "<EOS>", 17, 153, 13, 143, 13, 143, 21, 174, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 343, 8, 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 161, 17, 153, 21, 174, "<UNK>", "<EOS>", 343, 8, 346, 51, 176, "Null", "<EOS>", 358, 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "5", "<EOS>", 50, 174, "self", "<EOS>", 358, 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "5", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"body": {"comparators": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Compare", "ops": [{"_type": "Is"}], "left": {"value": {"value": {"_type": "Name", "id": "x"}, "_type": "Attribute", "attr": "card"}, "_type": "Attribute", "attr": "minion_type"}}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "x"}}]}, "_type": "Assign"}, {"body": [{"hole2": [{"_type": "Template61", "hole0": 5}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "orelse": [{"hole2": [{"_type": "Template61", "hole0": 5}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "If", "test": {"comparators": [{"value": "Null", "_type": "NameConstant"}], "_type": "Compare", "ops": [{"_type": "Is"}], "left": {"_type": "Name", "id": "<UNK>"}}}], "hole3": "use", "hole0": "KillCommand", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Kill Command", "_type": "Template27", "hole2": "HUNTER", "hole1": 3}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.348179536274259, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(5), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n"}, {"score_history": [-0.0008907318115234375, -0.000766754150390625, -4.768370445162873e-07, -7.5101784204889555e-06, -9.536738616588991e-07, -1.633159445191268e-05, -0.00014507770538330078, -3.6954863844584906e-06, -0.0001659393310546875, -0.0003566741943359375, -5.91278076171875e-05, 0.0, -0.00024485576432198286, -1.1920928244535389e-07, -5.7220458984375e-06, -2.3841852225814364e-07, 0.0, -0.0007021427154541016, -7.62939453125e-06, -0.012505412101745605, -2.0265579223632812e-06, -0.0010852813720703125, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00015866756439208984, -3.635883331298828e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.003229659516364336, -1.5497195136049413e-06, -0.0002922932035289705, 0.0, -4.4345855712890625e-05, 0.0, -0.000186920166015625, -0.000118255615234375, -1.6570091247558594e-05, -2.0265558760002023e-06, -0.013527870178222656, -1.9073486328125e-05, -0.00012969970703125, -0.0002155303955078125, -7.62939453125e-05, -4.1961669921875e-05, 0.0, -5.543231964111328e-05, 0.0, -2.872943878173828e-05, 0.0, -8.463859558105469e-06, -1.1920928244535389e-07, -9.024133760249242e-05, -3.576278118089249e-07, -0.008131027221679688, -4.1961669921875e-05, -0.00011444091796875, -0.000240325927734375, -1.9073486328125e-06, -0.008885413408279419, -1.3589859008789062e-05, -0.009466171264648438, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.0221099853515625, 0.0, -0.000331878662109375, -1.9073486328125e-06, -0.006445407867431641, -2.384185791015625e-06, -0.0003299713134765625, 0.0, -0.0005978345288895071, -2.1457672119140625e-06, -0.000202178955078125, -0.0011749267578125, 0.0, -0.0001888275146484375, -1.9073486328125e-06, -0.0006951093673706055, -2.3841855067985307e-07, -0.00011277183511992916, -1.311301275563892e-06, -0.00012969970703125, -0.0001983642578125, -5.53131103515625e-05, -0.00296783447265625, -0.0023610303178429604, -0.0008681835606694221, -0.03238105773925781, -9.5367431640625e-05, -0.06221771240234375, -1.71661376953125e-05, -0.000217437744140625, -0.000186920166015625, -0.0010852813720703125, -1.9073486328125e-06, -2.132941961288452, -1.1920928244535389e-07, -0.05111782252788544, 0.0, -0.020800691097974777, -2.503394853192731e-06, -0.0027952194213867188, -0.11501312255859375, 0.0, -0.0004062652587890625, -7.62939453125e-06, -0.1723126620054245, 0.0, -0.45997047424316406, -0.000720977783203125, -0.000484466552734375, 0.0, -0.0006656646728515625, 0.0, -0.2177104949951172, 0.0, -9.5367431640625e-06, -8.344646857949556e-07, -0.00042286512325517833, 0.0, -0.000308990478515625, -0.0007476806640625, -8.0108642578125e-05, -1.1117218732833862, -1.1920928244535389e-07, -1.71661376953125e-05, -3.814697265625e-06, -0.0016919237095862627, -0.0012626615352928638], "choice_history": [97, 285, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 347, 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 47, 167, 0, 282, "x", "<EOS>", 17, 153, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "health", "<EOS>", 343, 11, 346, 52, 179, "5", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"body": {"comparators": [{"n": 5, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "LtE"}], "left": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "health"}}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "x"}}]}, "_type": "Assign"}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "hole3": "use", "hole0": "KillCommand", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Kill Command", "_type": "Template27", "hole2": "HUNTER", "hole1": 3}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.48859916171449, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: player\n            .hero.health <= 5)\n        self.target.damage(player.effective_spell_damage(3), self)\n"}, {"score_history": [-0.0008907318115234375, -0.000766754150390625, -4.768370445162873e-07, -7.5101784204889555e-06, -9.536738616588991e-07, -1.633159445191268e-05, -0.00014507770538330078, -3.6954863844584906e-06, -0.0001659393310546875, -0.0003566741943359375, -5.91278076171875e-05, 0.0, -0.00024485576432198286, -1.1920928244535389e-07, -5.7220458984375e-06, -2.3841852225814364e-07, 0.0, -0.0007021427154541016, -7.62939453125e-06, -0.012505412101745605, -2.0265579223632812e-06, -0.0010852813720703125, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00015866756439208984, -3.635883331298828e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.003229659516364336, -1.5497195136049413e-06, -0.0002922932035289705, 0.0, -4.4345855712890625e-05, 0.0, -0.000186920166015625, -0.000118255615234375, -1.6570091247558594e-05, -2.0265558760002023e-06, -0.013527870178222656, -1.9073486328125e-05, -0.00012969970703125, -0.0002155303955078125, -7.62939453125e-05, -4.1961669921875e-05, 0.0, -5.543231964111328e-05, 0.0, -2.872943878173828e-05, 0.0, -8.463859558105469e-06, -1.1920928244535389e-07, -9.024133760249242e-05, -3.576278118089249e-07, -0.008131027221679688, -4.1961669921875e-05, -0.00011444091796875, -0.000240325927734375, -1.9073486328125e-06, -0.008885413408279419, -1.3589859008789062e-05, -0.009466171264648438, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.0221099853515625, 0.0, -0.000331878662109375, -1.9073486328125e-06, -0.006445407867431641, -2.384185791015625e-06, -0.0003299713134765625, 0.0, -0.0005978345288895071, -2.1457672119140625e-06, -0.000202178955078125, -0.0011749267578125, 0.0, -0.0001888275146484375, -1.9073486328125e-06, -0.0006951093673706055, -2.3841855067985307e-07, -0.00011277183511992916, -1.311301275563892e-06, -0.00012969970703125, -0.0001983642578125, -5.53131103515625e-05, -0.00296783447265625, -0.0023610303178429604, -0.0008681835606694221, -3.575972557067871, -8.96453857421875e-05, -0.0016852373955771327, -5.7577108236728236e-05, -0.8054609298706055, -0.0001621246337890625, -0.19285964965820312, -7.62939453125e-06, -0.0046710968017578125, 0.0, -0.015944242477416992, -1.1920928244535389e-07, -0.0089517617598176, 0.0], "choice_history": [97, 285, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 347, 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 47, 167, 0, 282, "x", "<EOS>", 22, 175, "True", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"body": {"value": true, "_type": "NameConstant"}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "x"}}]}, "_type": "Assign"}, {"value": {"_type": "Template76", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}, "_type": "Expr"}], "hole3": "use", "hole0": "KillCommand", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Kill Command", "_type": "Template27", "hole2": "HUNTER", "hole1": 3}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.70704123304251, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: True)\n        player.draw()\n"}, {"score_history": [-0.0008907318115234375, -0.000766754150390625, -4.768370445162873e-07, -7.5101784204889555e-06, -9.536738616588991e-07, -1.633159445191268e-05, -0.00014507770538330078, -3.6954863844584906e-06, -0.0001659393310546875, -0.0003566741943359375, -5.91278076171875e-05, 0.0, -0.00024485576432198286, -1.1920928244535389e-07, -5.7220458984375e-06, -2.3841852225814364e-07, 0.0, -0.0007021427154541016, -7.62939453125e-06, -0.012505412101745605, -2.0265579223632812e-06, -0.0010852813720703125, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00015866756439208984, -3.635883331298828e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.003229659516364336, -1.5497195136049413e-06, -0.0002922932035289705, 0.0, -4.4345855712890625e-05, 0.0, -0.000186920166015625, -0.000118255615234375, -1.6570091247558594e-05, -2.0265558760002023e-06, -0.013527870178222656, -1.9073486328125e-05, -0.00012969970703125, -0.0002155303955078125, -7.62939453125e-05, -4.1961669921875e-05, 0.0, -5.543231964111328e-05, 0.0, -2.872943878173828e-05, 0.0, -8.463859558105469e-06, -1.1920928244535389e-07, -9.024133760249242e-05, -3.576278118089249e-07, -0.008131027221679688, -4.1961669921875e-05, -0.00011444091796875, -0.000240325927734375, -1.9073486328125e-06, -0.008885413408279419, -1.3589859008789062e-05, -0.009466171264648438, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.0221099853515625, 0.0, -0.000331878662109375, -1.9073486328125e-06, -0.006445407867431641, -2.384185791015625e-06, -0.0003299713134765625, 0.0, -0.0005978345288895071, -2.1457672119140625e-06, -0.000202178955078125, -0.0011749267578125, 0.0, -0.0001888275146484375, -1.9073486328125e-06, -0.0006951093673706055, -2.3841855067985307e-07, -0.00011277183511992916, -1.311301275563892e-06, -0.00012969970703125, -0.0001983642578125, -5.53131103515625e-05, -0.00296783447265625, -0.0023610303178429604, -0.0008681835606694221, -0.03238105773925781, -9.5367431640625e-05, -2.9839296340942383, -0.000255584716796875, -0.0001544952392578125, -5.7220458984375e-06, -0.002198099624365568, -5.841247457283316e-06, -1.9073486328125e-05, -0.0005550384521484375, -3.814697265625e-06, -0.0001621246337890625, -1.9073486328125e-06, -0.000732421875, 0.0, -0.008916854858398438, 0.0, -0.025406837463378906, 0.0, -0.1033935546875, 0.0, -4.76837158203125e-05, -0.10017204284667969, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -0.2180810421705246, 0.0, -0.26808929443359375, -0.000370025634765625, -0.0005207061767578125, 0.0, -0.000652313232421875, 0.0, -0.032123565673828125, 0.0, -7.62939453125e-06, -8.344646857949556e-07, -0.00034445489291101694, 0.0, -0.000324249267578125, -0.0005741119384765625, -7.43865966796875e-05, -1.0521929264068604, -1.1920928244535389e-07, -1.52587890625e-05, -3.814697265625e-06, -0.0017546294257044792, -0.00131892878562212], "choice_history": [97, 285, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 347, 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 47, 167, 0, 282, "x", "<EOS>", 17, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "5", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, {"body": {"comparators": [{"n": 5, "_type": "Num"}], "_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}}, "_type": "Lambda", "args": {"_type": "Template49", "hole0": "x"}}]}, "_type": "Assign"}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "hole3": "use", "hole0": "KillCommand", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Kill Command", "_type": "Template27", "hole2": "HUNTER", "hole1": 3}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -4.936083183160413, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: len(\n            game.other_player.minions) >= 5)\n        self.target.damage(player.effective_spell_damage(3), self)\n"}, {"score_history": [-0.0008907318115234375, -0.000766754150390625, -4.768370445162873e-07, -7.5101784204889555e-06, -9.536738616588991e-07, -1.633159445191268e-05, -0.00014507770538330078, -3.6954863844584906e-06, -0.0001659393310546875, -0.0003566741943359375, -5.91278076171875e-05, 0.0, -0.00024485576432198286, -1.1920928244535389e-07, -5.7220458984375e-06, -2.3841852225814364e-07, 0.0, -0.0007021427154541016, -7.62939453125e-06, -0.012505412101745605, -2.0265579223632812e-06, -0.0010852813720703125, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00015866756439208984, -3.635883331298828e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.003229659516364336, -1.5497195136049413e-06, -0.0002922932035289705, 0.0, -4.4345855712890625e-05, 0.0, -0.000186920166015625, -0.000118255615234375, -1.6570091247558594e-05, -2.0265558760002023e-06, -0.013527870178222656, -1.9073486328125e-05, -0.00012969970703125, -0.0002155303955078125, -7.62939453125e-05, -4.1961669921875e-05, 0.0, -5.543231964111328e-05, 0.0, -2.872943878173828e-05, 0.0, -8.463859558105469e-06, -1.1920928244535389e-07, -9.024133760249242e-05, -3.576278118089249e-07, -0.008131027221679688, -4.1961669921875e-05, -0.00011444091796875, -0.000240325927734375, -1.9073486328125e-06, -0.008885413408279419, -1.3589859008789062e-05, -0.009466171264648438, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.8407411575317383, 0.0, -0.06549906730651855, -2.0265579223632812e-06, -0.0026111602783203125, 0.0, -3.814697265625e-06, -0.0017070770263671875, -9.5367431640625e-06, -2.09808349609375e-05, 0.0, -0.03469085693359375, -1.1444091796875e-05, -0.0006353855133056641, 0.0, -0.018334507942199707, 0.0, -0.0035456325858831406, 0.0, -0.050998687744140625, -0.0001678466796875, -0.14230728149414062, 0.0, -0.47509193420410156, 0.0, -0.0038062334060668945, -1.1920928244535389e-07, -1.1444091796875e-05, -1.0728830375228426e-06, -0.00026463076937943697, -1.1920928244535389e-07, -0.001003265380859375, -0.0010013580322265625, -5.340576171875e-05, -0.39745259284973145, -6.914126061019488e-06, -5.53131103515625e-05, -1.52587890625e-05, -0.0009815979283303022, -0.0009747727308422327], "choice_history": [97, 285, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "5", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Template61", "hole0": 5}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "hole3": "use", "hole0": "KillCommand", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Kill Command", "_type": "Template27", "hole2": "HUNTER", "hole1": 3}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.104405946772857, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = copy.copy(game.other_player.minions)\n        self.target.damage(player.effective_spell_damage(5), self)\n"}, {"score_history": [-0.0008907318115234375, -0.000766754150390625, -4.768370445162873e-07, -7.5101784204889555e-06, -9.536738616588991e-07, -1.633159445191268e-05, -0.00014507770538330078, -3.6954863844584906e-06, -0.0001659393310546875, -0.0003566741943359375, -5.91278076171875e-05, 0.0, -0.00024485576432198286, -1.1920928244535389e-07, -5.7220458984375e-06, -2.3841852225814364e-07, 0.0, -0.0007021427154541016, -7.62939453125e-06, -0.012505412101745605, -2.0265579223632812e-06, -0.0010852813720703125, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00015866756439208984, -3.635883331298828e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.003229659516364336, -1.5497195136049413e-06, -0.0002922932035289705, 0.0, -4.4345855712890625e-05, 0.0, -0.000186920166015625, -0.000118255615234375, -1.6570091247558594e-05, -2.0265558760002023e-06, -0.013527870178222656, -1.9073486328125e-05, -0.00012969970703125, -0.0002155303955078125, -7.62939453125e-05, -4.1961669921875e-05, 0.0, -5.543231964111328e-05, 0.0, -2.872943878173828e-05, 0.0, -8.463859558105469e-06, -1.1920928244535389e-07, -9.024133760249242e-05, -3.576278118089249e-07, -4.888515472412109, -0.0002574920654296875, -0.0002269744873046875, 0.0, -0.0008106231689453125, 0.0, -0.0001888275146484375, -1.1920928244535389e-07, -4.0531158447265625e-06, -5.364403477869928e-06, -4.959002762916498e-05, 0.0, -0.0002346038818359375, -0.001834869384765625, -0.0001316070556640625, -0.4402865171432495, -4.41074053014745e-06, -7.05718994140625e-05, -1.33514404296875e-05, -0.0010886925738304853, -0.0024726379197090864, -0.009973526000976562, -0.00102996826171875, -0.0889434814453125, -0.0021219253540039062, -0.0036970232613384724, -0.00010144701082026586], "choice_history": [97, 285, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "5", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 5}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "KillCommand", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Kill Command", "_type": "Template27", "hole2": "HUNTER", "hole1": 3}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.477539152260626, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(5), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score_history": [-0.0008907318115234375, -0.000766754150390625, -4.768370445162873e-07, -7.5101784204889555e-06, -9.536738616588991e-07, -1.633159445191268e-05, -0.00014507770538330078, -3.6954863844584906e-06, -0.0001659393310546875, -0.0003566741943359375, -5.91278076171875e-05, 0.0, -0.00024485576432198286, -1.1920928244535389e-07, -5.7220458984375e-06, -2.3841852225814364e-07, 0.0, -0.0007021427154541016, -7.62939453125e-06, -0.012505412101745605, -2.0265579223632812e-06, -0.0010852813720703125, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00015866756439208984, -3.635883331298828e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.003229659516364336, -1.5497195136049413e-06, -0.0002922932035289705, 0.0, -4.4345855712890625e-05, 0.0, -0.000186920166015625, -0.000118255615234375, -1.6570091247558594e-05, -2.0265558760002023e-06, -0.013527870178222656, -1.9073486328125e-05, -0.00012969970703125, -0.0002155303955078125, -7.62939453125e-05, -4.1961669921875e-05, 0.0, -5.543231964111328e-05, 0.0, -2.872943878173828e-05, 0.0, -8.463859558105469e-06, -1.1920928244535389e-07, -9.024133760249242e-05, -3.576278118089249e-07, -0.008131027221679688, -4.1961669921875e-05, -0.00011444091796875, -0.000240325927734375, -1.9073486328125e-06, -0.008885413408279419, -1.3589859008789062e-05, -0.009466171264648438, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -3.8407411575317383, 0.0, -0.06549906730651855, -2.0265579223632812e-06, -0.0026111602783203125, 0.0, -3.814697265625e-06, -0.0017070770263671875, -9.5367431640625e-06, -2.09808349609375e-05, 0.0, -0.03469085693359375, -1.1444091796875e-05, -0.0006353855133056641, 0.0, -0.018334507942199707, 0.0, -0.0035456325858831406, 0.0, -0.050998687744140625, -0.0001678466796875, -0.14230728149414062, 0.0, -0.9731912612915039, -3.814697265625e-06, -0.0001888275146484375, -3.814697265625e-06, -0.028664708137512207, 0.0, -0.11856818199157715, 0.0, -0.0016988719580695033, -2.3841855067985307e-07, -0.004222302231937647, -1.1920928244535389e-07, -0.0002002716064453125, -0.0011463165283203125, -8.0108642578125e-05, -0.2625468969345093, -5.602820692729438e-06, -3.814697265625e-05, -3.814697265625e-06, -0.00039457890670746565, -0.0007886600214987993], "choice_history": [97, 285, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "5", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}]}, "_type": "Assign"}, {"hole2": [{"_type": "Template61", "hole0": 5}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}], "hole3": "use", "hole0": "KillCommand", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Kill Command", "_type": "Template27", "hole2": "HUNTER", "hole1": 3}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -5.6154324515690135, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = copy.copy(game.other_player.minions)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"score_history": [-0.0008907318115234375, -0.000766754150390625, -4.768370445162873e-07, -7.5101784204889555e-06, -9.536738616588991e-07, -1.633159445191268e-05, -0.00014507770538330078, -3.6954863844584906e-06, -0.0001659393310546875, -0.0003566741943359375, -5.91278076171875e-05, 0.0, -0.00024485576432198286, -1.1920928244535389e-07, -5.7220458984375e-06, -2.3841852225814364e-07, 0.0, -0.0007021427154541016, -7.62939453125e-06, -0.012505412101745605, -2.0265579223632812e-06, -0.0010852813720703125, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00015866756439208984, -3.635883331298828e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.003229659516364336, -1.5497195136049413e-06, -0.0002922932035289705, 0.0, -4.4345855712890625e-05, 0.0, -0.000186920166015625, -0.000118255615234375, -1.6570091247558594e-05, -2.0265558760002023e-06, -0.013527870178222656, -1.9073486328125e-05, -0.00012969970703125, -0.0002155303955078125, -7.62939453125e-05, -4.1961669921875e-05, 0.0, -5.543231964111328e-05, 0.0, -2.872943878173828e-05, 0.0, -8.463859558105469e-06, -1.1920928244535389e-07, -9.024133760249242e-05, -3.576278118089249e-07, -4.888515472412109, -0.0002574920654296875, -0.0002269744873046875, 0.0, -0.0008106231689453125, 0.0, -0.0001888275146484375, -1.1920928244535389e-07, -4.0531158447265625e-06, -5.364403477869928e-06, -4.959002762916498e-05, 0.0, -0.0002346038818359375, -0.001834869384765625, -0.0001316070556640625, -1.033150315284729, -3.576278118089249e-07, -1.9073486328125e-05, -1.52587890625e-05, -0.0009043148602358997, -0.004463421646505594, -0.01601886749267578, -0.0009632110595703125, -0.06502914428710938, -0.001300811767578125, -0.0030491205397993326, -0.0001320835726801306], "choice_history": [97, 285, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole2": "player", "_type": "Template63", "hole1": "use", "hole0": {"_type": "Template79", "hole0": "super"}}, "_type": "Expr"}, {"hole2": [{"_type": "Template61", "hole0": 3}, {"_type": "Name", "id": "self"}], "_type": "Template77", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "hole3": "use", "hole0": "KillCommand", "_type": "Template5", "hole2": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Kill Command", "_type": "Template27", "hole2": "HUNTER", "hole1": 3}], "hole5": [{"_type": "arg", "arg": "game"}], "hole1": "SpellCard"}, "score": -6.052781579623378, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n"}]}
{"index": 59, "beams": [{"score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.474196900147945e-05, -1.025196434056852e-05, -2.0146166207268834e-05, -4.966557025909424e-05, -4.38690185546875e-05, -3.576278118089249e-07, 0.0, -0.0007381439208984375, -2.86102294921875e-05, -2.1457672119140625e-06, -2.574920654296875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -5.090115519124083e-05, 0.0, -1.919269561767578e-05, 0.0, -1.33514404296875e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -0.000335693359375, -9.5367431640625e-06, -2.861022494471399e-06, -1.1920928244535389e-07, -0.0002042913984041661, 0.0, -0.002529263263568282, -1.1920928244535389e-07, -0.00048828125, -8.96453857421875e-05, -0.00023936983780004084, -1.9073486328125e-06], "choice_history": [97, 283, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 23, 179, "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"n": 1, "_type": "Num"}, "hole2": "spell_damage", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "KoboldGeomancer", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 2, "hole0": "Kobold Geomancer"}], "hole1": "MinionCard"}, "score": -0.005041276473477296, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.474196900147945e-05, -1.025196434056852e-05, -2.0146166207268834e-05, -4.966557025909424e-05, -4.38690185546875e-05, -3.576278118089249e-07, 0.0, -0.0007381439208984375, -2.86102294921875e-05, -2.1457672119140625e-06, -2.574920654296875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -5.090115519124083e-05, 0.0, -1.919269561767578e-05, 0.0, -1.33514404296875e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -0.000335693359375, -9.5367431640625e-06, -2.861022494471399e-06, -1.1920928244535389e-07, -0.0002042913984041661, 0.0, -7.0098981857299805, 0.0, -0.07406330108642578, -0.004933357238769531, -0.5125565528869629, -2.288818359375e-05, -1.1444091796875e-05, -0.07845592498779297, -9.72747802734375e-05, -0.020277319476008415, -2.288818359375e-05, -0.007641792297363281, -0.0006961822509765625, -0.17061656713485718, -0.0005989072378724813, 0.0], "choice_history": [97, 283, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 37, 321, "Buff", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Minion", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "MinionSelector"}], "hole0": "Buff"}, "hole2": "auras", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "KoboldGeomancer", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 2, "hole0": "Kobold Geomancer"}], "hole1": "MinionCard"}, "score": -7.881585275744719, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, auras=[Buff(ChangeAttack(1), MinionSelector())])\n"}, {"score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.474196900147945e-05, -1.025196434056852e-05, -2.0146166207268834e-05, -4.966557025909424e-05, -4.38690185546875e-05, -3.576278118089249e-07, 0.0, -0.0007381439208984375, -2.86102294921875e-05, -2.1457672119140625e-06, -2.574920654296875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -5.090115519124083e-05, 0.0, -1.919269561767578e-05, 0.0, -1.33514404296875e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -0.000335693359375, -9.5367431640625e-06, -2.861022494471399e-06, -1.1920928244535389e-07, -0.0002042913984041661, 0.0, -7.9420576095581055, 0.0, -0.008240699768066406, -2.09808349609375e-05, -0.0001739263243507594, -2.2649765014648438e-06], "choice_history": [97, 283, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "divine_shield", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "KoboldGeomancer", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 2, "hole0": "Kobold Geomancer"}], "hole1": "MinionCard"}, "score": -7.952188171640437, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, divine_shield=True)\n"}, {"score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.474196900147945e-05, -1.025196434056852e-05, -2.0146166207268834e-05, -4.966557025909424e-05, -4.38690185546875e-05, -3.576278118089249e-07, 0.0, -0.0007381439208984375, -2.86102294921875e-05, -2.1457672119140625e-06, -2.574920654296875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -5.090115519124083e-05, 0.0, -1.919269561767578e-05, 0.0, -1.33514404296875e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -0.000335693359375, -9.5367431640625e-06, -2.861022494471399e-06, -1.1920928244535389e-07, -0.0002042913984041661, 0.0, -8.104290962219238, 0.0, -0.01668071746826172, -2.288818359375e-05, -0.0003274679183959961, -4.0531158447265625e-06], "choice_history": [97, 283, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "2", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "2", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "KoboldGeomancer", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 2, "hole0": "Kobold Geomancer"}], "hole1": "MinionCard"}, "score": -8.123018779083786, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, 2=True)\n"}, {"score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.474196900147945e-05, -1.025196434056852e-05, -2.0146166207268834e-05, -4.966557025909424e-05, -4.38690185546875e-05, -3.576278118089249e-07, 0.0, -0.0007381439208984375, -2.86102294921875e-05, -2.1457672119140625e-06, -2.574920654296875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -5.090115519124083e-05, 0.0, -1.919269561767578e-05, 0.0, -1.33514404296875e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -0.000335693359375, -9.5367431640625e-06, -2.861022494471399e-06, -1.1920928244535389e-07, -0.0002042913984041661, 0.0, -7.0098981857299805, 0.0, -0.07406330108642578, -0.004933357238769531, -0.9894471168518066, 0.0, -3.814697265625e-06, -0.01867198944091797, -4.57763671875e-05, -0.005725000984966755, -3.62396240234375e-05, -0.09184741973876953, -0.0013942718505859375, -0.2612922191619873, -0.0005538460100069642, 0.0], "choice_history": [97, 283, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Minion", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "KoboldGeomancer", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 2, "hole0": "Kobold Geomancer"}], "hole1": "MinionCard"}, "score": -8.459605228961145, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, auras=[Aura(ChangeAttack(1), MinionSelector())])\n"}, {"score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.474196900147945e-05, -1.025196434056852e-05, -2.0146166207268834e-05, -4.966557025909424e-05, -4.38690185546875e-05, -3.576278118089249e-07, 0.0, -0.0007381439208984375, -2.86102294921875e-05, -2.1457672119140625e-06, -2.574920654296875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -5.090115519124083e-05, 0.0, -1.919269561767578e-05, 0.0, -1.33514404296875e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -0.000335693359375, -9.5367431640625e-06, -2.861022494471399e-06, -1.1920928244535389e-07, -8.596699714660645, 0.0, -0.001423478126525879, -2.0265579223632812e-06, -0.0003910064697265625, -0.0001125335693359375, -0.0010420042090117931, -1.9073486328125e-06], "choice_history": [97, 283, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 23, 179, "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"n": 1, "_type": "Num"}, "hole2": "spell_damage", "_type": "Template50", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "KoboldGeomancer", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 2, "hole0": "Kobold Geomancer"}], "hole1": "MinionCard"}, "score": -8.601161069721847, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 4, spell_damage=1)\n"}, {"score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.474196900147945e-05, -1.025196434056852e-05, -2.0146166207268834e-05, -4.966557025909424e-05, -4.38690185546875e-05, -3.576278118089249e-07, 0.0, -0.0007381439208984375, -2.86102294921875e-05, -2.1457672119140625e-06, -2.574920654296875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -5.090115519124083e-05, 0.0, -1.919269561767578e-05, 0.0, -1.33514404296875e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -0.000335693359375, -9.5367431640625e-06, -2.861022494471399e-06, -1.1920928244535389e-07, -0.0002042913984041661, 0.0, -0.002529263263568282, -1.1920928244535389e-07, -0.00048828125, -8.96453857421875e-05, -8.90086555480957], "choice_history": [97, 283, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 23, 179, "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"n": 0, "_type": "Num"}, "hole2": "spell_damage", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "KoboldGeomancer", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 2, "hole0": "Kobold Geomancer"}], "hole1": "MinionCard"}, "score": -8.905665554096615, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=0)\n"}, {"score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.474196900147945e-05, -1.025196434056852e-05, -2.0146166207268834e-05, -4.966557025909424e-05, -4.38690185546875e-05, -3.576278118089249e-07, 0.0, -0.0007381439208984375, -2.86102294921875e-05, -2.1457672119140625e-06, -2.574920654296875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -5.090115519124083e-05, 0.0, -1.919269561767578e-05, 0.0, -1.33514404296875e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -0.000335693359375, -9.5367431640625e-06, -2.861022494471399e-06, -1.1920928244535389e-07, -0.0002042913984041661, 0.0, -8.511552810668945, 0.0, -0.48079872131347656, -8.7738037109375e-05, -0.000304457382299006, -1.9073486328125e-06], "choice_history": [97, 283, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "MECH", "<EOS>", 23, 179, "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"n": 1, "_type": "Num"}, "hole2": "MECH", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "KoboldGeomancer", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 2, "hole0": "Kobold Geomancer"}], "hole1": "MinionCard"}, "score": -8.994438324928915, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, MECH=1)\n"}, {"score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.474196900147945e-05, -1.025196434056852e-05, -2.0146166207268834e-05, -4.966557025909424e-05, -4.38690185546875e-05, -3.576278118089249e-07, 0.0, -8.447280883789062, -0.01262664794921875, -1.1444091796875e-05, -5.14984130859375e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -0.0001621246337890625, 0.0, -0.0002574920654296875, -0.00054168701171875, -5.7220458984375e-05, -2.9802317840221804e-06, -5.5789947509765625e-05, -4.4344953494146466e-05, -4.76837158203125e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.7166135876323096e-05, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -9.655952453613281e-06, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -3.0517578125e-05, 0.0, -9.5367431640625e-06, -9.930133819580078e-05, -0.5113353729248047, 0.0, -0.000110626220703125, -0.0001544952392578125, -1.33514404296875e-05, -1.1444091796875e-05, -5.14984130859375e-05, -0.002536773681640625, -0.00017547607421875, -0.018004536628723145, 0.0, -0.000148773193359375, 0.0, -0.0001010894775390625, 0.0, -3.814697265625e-06, -0.000286102294921875, -9.5367431640625e-06, -3.576278118089249e-07, -2.3841855067985307e-07, -0.0003345256845932454, 0.0, -0.00237429141998291, -1.1920928244535389e-07, -0.0003185272216796875, -7.2479248046875e-05, -0.0013121272204443812, -1.9073486328125e-06], "choice_history": [97, 283, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Kobold", " ", "Geomancer", "<EOS>", 52, 179, "2", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 23, 179, "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"n": 1, "_type": "Num"}, "hole2": "spell_damage", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "KoboldGeomancer", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "MECH"}], "hole2": [{"_type": "Str", "s": "Kobold Geomancer"}, {"n": 2, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -8.999062862661354, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.474196900147945e-05, -1.025196434056852e-05, -2.0146166207268834e-05, -4.966557025909424e-05, -4.38690185546875e-05, -3.576278118089249e-07, 0.0, -0.0007381439208984375, -2.86102294921875e-05, -2.1457672119140625e-06, -2.574920654296875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -5.090115519124083e-05, 0.0, -1.919269561767578e-05, 0.0, -1.33514404296875e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -0.000335693359375, -9.5367431640625e-06, -2.861022494471399e-06, -1.1920928244535389e-07, -0.0002042913984041661, 0.0, -0.002529263263568282, -1.1920928244535389e-07, -9.035039901733398, -0.0003376007080078125, -0.0005049705505371094, -2.1457672119140625e-06], "choice_history": [97, 283, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "spell_damage", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "KoboldGeomancer", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 2, "hole0": "Kobold Geomancer"}], "hole1": "MinionCard"}, "score": -9.040106691410458, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=True)\n"}, {"score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.474196900147945e-05, -1.025196434056852e-05, -2.0146166207268834e-05, -4.966557025909424e-05, -4.38690185546875e-05, -3.576278118089249e-07, 0.0, -8.837875366210938, -0.0001678466796875, -1.1920928244535389e-07, -2.9325485229492188e-05, -2.0265579223632812e-06, -5.7220458984375e-06, 1.072882469088654e-06, 0.0, -0.0050820112228393555, 0.0, -0.016701817512512207, 0.0, -0.03406715393066406, -3.814697265625e-06, -0.00060272216796875, -1.9073486328125e-06, -0.0002461671829223633, 0.0, -0.4200267791748047, 0.0, -1.33514404296875e-05, 0.0, -0.0014820098876953125, 0.0, -3.814697265625e-06, -0.00061798095703125, -1.33514404296875e-05, -2.0265579223632812e-06, -3.576278118089249e-07, -0.00011133575753774494, 0.0, -0.0037993192672729492, -1.1920928244535389e-07, -0.0001983642578125, -0.00011444091796875, -0.00044691446237266064, -1.9073486328125e-06], "choice_history": [97, 283, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 23, 179, "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"n": 1, "_type": "Num"}, "hole2": "spell_damage", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "KoboldGeomancer", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Kobold Geomancer", "_type": "Template27", "hole2": "ALL", "hole1": 2}], "hole1": "MinionCard"}, "score": -9.3218370135247, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.474196900147945e-05, -1.025196434056852e-05, -2.0146166207268834e-05, -4.966557025909424e-05, -4.38690185546875e-05, -3.576278118089249e-07, 0.0, -0.0007381439208984375, -2.86102294921875e-05, -2.1457672119140625e-06, -2.574920654296875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -5.090115519124083e-05, 0.0, -1.919269561767578e-05, 0.0, -1.33514404296875e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -0.000335693359375, -9.5367431640625e-06, -2.861022494471399e-06, -1.1920928244535389e-07, -0.0002042913984041661, 0.0, -9.347084999084473, 0.0, -0.0011081695556640625, -3.0517578125e-05, -0.00017523765563964844, -2.1457672119140625e-06], "choice_history": [97, 283, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "windfury", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "windfury", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "KoboldGeomancer", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 2, "hole0": "Kobold Geomancer"}], "hole1": "MinionCard"}, "score": -9.350093759819565, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, windfury=True)\n"}, {"score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.474196900147945e-05, -1.025196434056852e-05, -2.0146166207268834e-05, -4.966557025909424e-05, -4.38690185546875e-05, -3.576278118089249e-07, 0.0, -8.447280883789062, -0.01262664794921875, -1.1444091796875e-05, -5.14984130859375e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -0.0001621246337890625, 0.0, -0.0002574920654296875, -0.00054168701171875, -5.7220458984375e-05, -2.9802317840221804e-06, -5.5789947509765625e-05, -4.4344953494146466e-05, -4.76837158203125e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.7166135876323096e-05, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -9.655952453613281e-06, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -3.0517578125e-05, 0.0, -9.5367431640625e-06, -9.930133819580078e-05, -0.963531494140625, 0.0, -0.000614166259765625, -4.57763671875e-05, -2.86102294921875e-05, -1.9073486328125e-05, -8.58306884765625e-05, -0.0045261383056640625, -0.0001964569091796875, -0.0054961442947387695, 0.0, -0.0001277923583984375, 0.0, -0.0001468658447265625, 0.0, -3.814697265625e-06, -0.0003032684326171875, -9.5367431640625e-06, -2.2649765014648438e-06, -3.576278118089249e-07, -0.00031546346144750714, 0.0, -0.00226593017578125, -1.1920928244535389e-07, -0.000278472900390625, -6.103515625e-05, -0.0014605403412133455, -1.9073486328125e-06], "choice_history": [97, 283, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Kobold", " ", "Geomancer", "<EOS>", 52, 179, "2", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 23, 179, "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"n": 1, "_type": "Num"}, "hole2": "spell_damage", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "KoboldGeomancer", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "MECH"}], "hole2": [{"_type": "Str", "s": "Kobold Geomancer"}, {"n": 2, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -9.44122645809636, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.474196900147945e-05, -1.025196434056852e-05, -2.0146166207268834e-05, -4.966557025909424e-05, -4.38690185546875e-05, -3.576278118089249e-07, 0.0, -0.0007381439208984375, -2.86102294921875e-05, -2.1457672119140625e-06, -2.574920654296875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -5.090115519124083e-05, 0.0, -1.919269561767578e-05, 0.0, -1.33514404296875e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -10.057622909545898, -0.001926422119140625, -6.711268360959366e-05, 0.0, -5.6149932788684964e-05, 0.0], "choice_history": [97, 283, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "KoboldGeomancer", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 2, "hole0": "Kobold Geomancer"}], "hole1": "MinionCard"}, "score": -10.060812782727169, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.474196900147945e-05, -1.025196434056852e-05, -2.0146166207268834e-05, -4.966557025909424e-05, -4.38690185546875e-05, -3.576278118089249e-07, 0.0, -0.0007381439208984375, -2.86102294921875e-05, -2.1457672119140625e-06, -2.574920654296875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -5.090115519124083e-05, 0.0, -1.919269561767578e-05, 0.0, -1.33514404296875e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -0.000335693359375, -9.5367431640625e-06, -2.861022494471399e-06, -1.1920928244535389e-07, -0.0002042913984041661, 0.0, -7.0098981857299805, 0.0, -0.07406330108642578, -0.004933357238769531, -0.9894471168518066, 0.0, -3.814697265625e-06, -0.01867198944091797, -4.57763671875e-05, -0.005725000984966755, -3.62396240234375e-05, -0.09184741973876953, -0.0013942718505859375, -1.9444804191589355, -6.890085205668584e-05, 0.0], "choice_history": [97, 283, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "SelfSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 2, "hole0": 2}], "hole3": "create_minion", "hole0": "KoboldGeomancer", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 2, "hole0": "Kobold Geomancer"}], "hole1": "MinionCard"}, "score": -10.142308483800143, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, auras=[Aura(ChangeAttack(1), SelfSelector())])\n"}]}
{"index": 60, "beams": [{"score_history": [-0.0001678466796875, -4.38690185546875e-05, -0.003423934103921056, -0.0011651900131255388, -3.4450891689630225e-05, -1.4500692486763e-05, -4.220008850097656e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0036602020263671875, -5.340576171875e-05, -2.50339189733495e-06, -2.574920654296875e-05, -2.2649765014648438e-06, -3.814697265625e-06, -8.237365545937791e-05, 0.0, -0.0003739595413208008, 0.0, -0.0002574920654296875, 0.0, -0.00011861324310302734, 0.0, -1.9073486328125e-06, -0.0064544677734375, -0.0002155303955078125, -1.0728830375228426e-06, -2.5629668016335927e-05, -0.00012969970703125, 0.0, -0.005820512305945158, 0.0, -0.000469207763671875, -5.14984130859375e-05, -0.0001684427261352539, -1.9073486328125e-06], "choice_history": [97, 283, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 3, "hole0": 4}], "hole3": "create_minion", "hole0": "<UNK>Elite", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 4, "hole0": "Kor'kron Elite"}], "hole1": "MinionCard"}, "score": -0.022815226618376983, "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"score_history": [-0.0001678466796875, -4.38690185546875e-05, -0.003423934103921056, -0.0011651900131255388, -3.4450891689630225e-05, -1.4500692486763e-05, -4.220008850097656e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0036602020263671875, -5.340576171875e-05, -2.50339189733495e-06, -2.574920654296875e-05, -2.2649765014648438e-06, -3.814697265625e-06, -8.237365545937791e-05, 0.0, -0.0003739595413208008, 0.0, -0.0002574920654296875, 0.0, -0.00011861324310302734, 0.0, -1.9073486328125e-06, -0.0064544677734375, -0.0002155303955078125, -1.0728830375228426e-06, -2.5629668016335927e-05, -0.00012969970703125, 0.0, -5.795397758483887, -3.814697265625e-06, -0.0007953643798828125, -7.43865966796875e-05, -0.0002579689025878906, -1.9073486328125e-06], "choice_history": [97, 283, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "3", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "divine_shield", "_type": "Template50", "hole1": 3, "hole0": 4}], "hole3": "create_minion", "hole0": "<UNK>Elite", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 4, "hole0": "Kor'kron Elite"}], "hole1": "MinionCard"}, "score": -5.8128348584698415, "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, divine_shield=True)\n"}, {"score_history": [-0.0001678466796875, -4.38690185546875e-05, -5.863934516906738, -0.0011651900131255388, -3.4450891689630225e-05, -1.4500692486763e-05, -4.220008850097656e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0036602020263671875, -5.340576171875e-05, -2.50339189733495e-06, -2.574920654296875e-05, -2.2649765014648438e-06, -3.814697265625e-06, -8.237365545937791e-05, 0.0, -0.0003739595413208008, 0.0, -0.0002574920654296875, 0.0, -0.00011861324310302734, 0.0, -1.9073486328125e-06, -0.0064544677734375, -0.0002155303955078125, -1.0728830375228426e-06, -2.5629668016335927e-05, -0.00012969970703125, 0.0, -0.005820512305945158, 0.0, -0.000469207763671875, -5.14984130859375e-05, -0.0001684427261352539, -1.9073486328125e-06], "choice_history": [97, 283, "Kor'kron", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 3, "hole0": 4}], "hole3": "create_minion", "hole0": "Kor'kronElite", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 4, "hole0": "Kor'kron Elite"}], "hole1": "MinionCard"}, "score": -5.883325809421194, "inferred_code": "class Kor'kronElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"score_history": [-0.0001678466796875, -4.38690185546875e-05, -0.003423934103921056, -0.0011651900131255388, -3.4450891689630225e-05, -1.4500692486763e-05, -4.220008850097656e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0036602020263671875, -5.340576171875e-05, -2.50339189733495e-06, -2.574920654296875e-05, -2.2649765014648438e-06, -3.814697265625e-06, -8.237365545937791e-05, 0.0, -0.0003739595413208008, 0.0, -0.0002574920654296875, 0.0, -0.00011861324310302734, 0.0, -1.9073486328125e-06, -5.096428871154785, -0.0001430511474609375, -2.383749233558774e-07, -1.1920928244535389e-07, -3.814697265625e-06, -1.1920928244535389e-07, -0.000913962721824646, 0.0, -0.000598907470703125, -0.0008525848388671875, -0.00014495849609375, -0.025015950202941895, -9.5367431640625e-06, -0.00038909912109375, -0.0001201629638671875, -0.0017954108770936728, -1.9073486328125e-06, -0.023306846618652344, -0.0002536773681640625, -0.9192428588867188, -6.67572021484375e-05, -0.0002269744873046875, -3.24249267578125e-05, -0.0004404782666824758, -1.9073486328125e-06], "choice_history": [97, 283, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>", 354, 95, 336, "charge", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": [{"value": {"value": true, "_type": "NameConstant"}, "_type": "keyword", "arg": "charge"}, {"value": {"value": true, "_type": "NameConstant"}, "_type": "keyword", "arg": "divine_shield"}], "hole2": 3, "_type": "Template68", "hole1": 4, "hole0": "Minion"}], "hole3": "create_minion", "hole0": "<UNK>Elite", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 4, "hole0": "Kor'kron Elite"}], "hole1": "MinionCard"}, "score": -6.079467877316219, "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True, divine_shield=True)\n"}, {"score_history": [-0.0001678466796875, -4.38690185546875e-05, -0.003423934103921056, -0.0011651900131255388, -3.4450891689630225e-05, -1.4500692486763e-05, -4.220008850097656e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0036602020263671875, -5.340576171875e-05, -2.50339189733495e-06, -2.574920654296875e-05, -2.2649765014648438e-06, -3.814697265625e-06, -8.237365545937791e-05, 0.0, -0.0003739595413208008, 0.0, -0.0002574920654296875, 0.0, -0.00011861324310302734, 0.0, -1.9073486328125e-06, -5.096428871154785, -0.0001430511474609375, -2.383749233558774e-07, -1.1920928244535389e-07, -3.814697265625e-06, -1.1920928244535389e-07, -0.000913962721824646, 0.0, -0.000598907470703125, -0.0008525848388671875, -0.00014495849609375, -0.025015950202941895, -9.5367431640625e-06, -0.00038909912109375, -0.0001201629638671875, -0.0017954108770936728, -1.9073486328125e-06, -0.023306846618652344, -0.0002536773681640625, -0.8301076889038086, 0.0, -0.012890815734863281, -0.04662036895751953, -0.0013543913373723626, -4.00543212890625e-05, -2.6702880859375e-05, -0.00463104248046875, -3.4332275390625e-05, -0.2926463484764099, -0.2013850212097168, -0.17887115478515625, -0.0014219284057617188, -0.0003497600555419922, -0.002414703369140625, -5.7220458984375e-05, -1.33514404296875e-05, -0.0031108856201171875, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -7.43865966796875e-05, -1.71661376953125e-05, -0.03505420684814453, 0.0], "choice_history": [97, 283, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>", 354, 95, 336, "charge", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 88, 325, "Charge", "<EOS>", 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": [{"value": {"value": true, "_type": "NameConstant"}, "_type": "keyword", "arg": "charge"}, {"value": {"_type": "Template78", "hole1": [{"_type": "Template79", "hole0": "Charge"}, {"_type": "Template59", "hole1": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "hole0": "IsType"}], "hole0": "Aura"}, "_type": "keyword", "arg": "auras"}], "hole2": 3, "_type": "Template68", "hole1": 4, "hole0": "Minion"}], "hole3": "create_minion", "hole0": "<UNK>Elite", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 4, "hole0": "Kor'kron Elite"}], "hole1": "MinionCard"}, "score": -6.770621875511878, "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True, auras=[Aura(Charge(),\n            MinionSelector(IsType(MINION_TYPE.BEAST)))])\n"}, {"score_history": [-0.0001678466796875, -4.38690185546875e-05, -0.003423934103921056, -6.757843017578125, -3.4450891689630225e-05, -1.4500692486763e-05, -4.220008850097656e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0036602020263671875, -5.340576171875e-05, -2.50339189733495e-06, -2.574920654296875e-05, -2.2649765014648438e-06, -3.814697265625e-06, -8.237365545937791e-05, 0.0, -0.0003739595413208008, 0.0, -0.0002574920654296875, 0.0, -0.00011861324310302734, 0.0, -1.9073486328125e-06, -0.0064544677734375, -0.0002155303955078125, -1.0728830375228426e-06, -2.5629668016335927e-05, -0.00012969970703125, 0.0, -0.005820512305945158, 0.0, -0.000469207763671875, -5.14984130859375e-05, -0.0001684427261352539, -1.9073486328125e-06], "choice_history": [97, 283, "<UNK>", "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 3, "hole0": 4}], "hole3": "create_minion", "hole0": "<UNK><UNK>", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 4, "hole0": "Kor'kron Elite"}], "hole1": "MinionCard"}, "score": -6.779493054183376, "inferred_code": "class <UNK><UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"score_history": [-0.0001678466796875, -4.38690185546875e-05, -0.003423934103921056, -0.0011651900131255388, -3.4450891689630225e-05, -1.4500692486763e-05, -4.220008850097656e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0036602020263671875, -5.340576171875e-05, -2.50339189733495e-06, -2.574920654296875e-05, -2.2649765014648438e-06, -3.814697265625e-06, -8.237365545937791e-05, 0.0, -0.0003739595413208008, 0.0, -0.0002574920654296875, 0.0, -0.00011861324310302734, 0.0, -1.9073486328125e-06, -5.096428871154785, -0.0001430511474609375, -2.383749233558774e-07, -1.1920928244535389e-07, -3.814697265625e-06, -1.1920928244535389e-07, -0.000913962721824646, 0.0, -0.000598907470703125, -0.0008525848388671875, -0.00014495849609375, -0.025015950202941895, -9.5367431640625e-06, -0.00038909912109375, -0.0001201629638671875, -0.0017954108770936728, -1.9073486328125e-06, -0.023306846618652344, -0.0002536773681640625, -2.8180007934570312, 0.0, -0.0045948028564453125, -5.14984130859375e-05, -0.00041532510658726096, -5.841255187988281e-06], "choice_history": [97, 283, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>", 354, 95, 336, "charge", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": [{"value": {"value": true, "_type": "NameConstant"}, "_type": "keyword", "arg": "charge"}, {"value": {"value": true, "_type": "NameConstant"}, "_type": "keyword", "arg": "charge"}], "hole2": 3, "_type": "Template68", "hole1": 4, "hole0": "Minion"}], "hole3": "create_minion", "hole0": "<UNK>Elite", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 4, "hole0": "Kor'kron Elite"}], "hole1": "MinionCard"}, "score": -7.982524737286312, "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True, charge=True)\n"}, {"score_history": [-0.0001678466796875, -4.38690185546875e-05, -0.003423934103921056, -0.0011651900131255388, -3.4450891689630225e-05, -1.4500692486763e-05, -4.220008850097656e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -5.708001136779785, -0.0008640289306640625, -5.960462772236497e-07, -2.2292137145996094e-05, -3.933906555175781e-06, -1.9073486328125e-06, -1.2007250916212797e-05, 0.0, -0.0007611513137817383, -3.814697265625e-06, -0.19007039070129395, 0.0, -0.7394027709960938, -0.13600730895996094, -0.0019427845254540443, -0.006793022155761719, -0.00026702880859375, -0.0001926422119140625, -9.5367431640625e-06, -0.865522027015686, -0.41962340474128723, -1.1563301086425781e-05, -0.00019073486328125, 0.0, -0.0008851289749145508, 0.0, -1.1444091796875e-05, -0.020111083984375, -0.000675201416015625, 1.1920928955078125e-07, 0.0, -0.007908334955573082, 0.0], "choice_history": [97, 283, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "battlecry", "<EOS>", 28, 261, "Charge", "<EOS>", 346, 88, 325, "Battle", "Axe", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "3", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 3, "hole0": 4}], "hole3": "create_minion", "hole0": "<UNK>Elite", "_type": "Template5", "hole2": [{"hole4": {"_type": "Template42", "hole1": [{"_type": "Template79", "hole0": "BattleAxe"}], "hole0": "Charge"}, "hole3": "battlecry", "hole0": "Kor'kron Elite", "_type": "Template27", "hole2": "WARRIOR", "hole1": 4}], "hole1": "MinionCard"}, "score": -8.104190129367623, "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Charge(BattleAxe()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score_history": [-0.0001678466796875, -4.38690185546875e-05, -0.003423934103921056, -0.0011651900131255388, -3.4450891689630225e-05, -1.4500692486763e-05, -4.220008850097656e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0036602020263671875, -5.340576171875e-05, -2.50339189733495e-06, -2.574920654296875e-05, -2.2649765014648438e-06, -3.814697265625e-06, -8.237365545937791e-05, 0.0, -0.0003739595413208008, 0.0, -0.0002574920654296875, 0.0, -0.00011861324310302734, 0.0, -1.9073486328125e-06, -0.0064544677734375, -0.0002155303955078125, -1.0728830375228426e-06, -2.5629668016335927e-05, -0.00012969970703125, 0.0, -7.482333183288574, -0.36223506927490234, -0.2444601058959961, -0.0001068115234375, -0.0002938508987426758, -3.814697265625e-06], "choice_history": [97, 283, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "3", "<EOS>", "Did", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "Did", "_type": "Template50", "hole1": 3, "hole0": 4}], "hole3": "create_minion", "hole0": "<UNK>Elite", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 4, "hole0": "Kor'kron Elite"}], "hole1": "MinionCard"}, "score": -8.105736493639824, "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, Did=True)\n"}, {"score_history": [-0.0001678466796875, -4.38690185546875e-05, -0.003423934103921056, -0.0011651900131255388, -3.4450891689630225e-05, -1.4500692486763e-05, -4.220008850097656e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0036602020263671875, -5.340576171875e-05, -2.50339189733495e-06, -2.574920654296875e-05, -2.2649765014648438e-06, -3.814697265625e-06, -8.237365545937791e-05, 0.0, -8.189474105834961, 0.0, -0.000301361083984375, 0.0, -9.179115295410156e-05, 0.0, -1.9073486328125e-06, -0.017843246459960938, -7.62939453125e-05, -5.960462772236497e-07, -2.52720492426306e-05, -0.00024366377328988165, 0.0, -0.005348563194274902, 0.0, -0.000640869140625, -4.57763671875e-05, -0.0001780986785888672, -2.0265579223632812e-06], "choice_history": [97, 283, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "ROGUE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 3, "hole0": 4}], "hole3": "create_minion", "hole0": "<UNK>Elite", "_type": "Template5", "hole2": [{"hole2": "ROGUE", "_type": "Template31", "hole1": 4, "hole0": "Kor'kron Elite"}], "hole1": "MinionCard"}, "score": -8.222998857068603, "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"score_history": [-0.0001678466796875, -4.38690185546875e-05, -0.003423934103921056, -0.0011651900131255388, -3.4450891689630225e-05, -1.4500692486763e-05, -4.220008850097656e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0036602020263671875, -5.340576171875e-05, -2.50339189733495e-06, -2.574920654296875e-05, -2.2649765014648438e-06, -3.814697265625e-06, -8.237365545937791e-05, 0.0, -0.0003739595413208008, 0.0, -0.0002574920654296875, 0.0, -0.00011861324310302734, 0.0, -1.9073486328125e-06, -0.0064544677734375, -0.0002155303955078125, -1.0728830375228426e-06, -2.5629668016335927e-05, -0.00012969970703125, 0.0, -8.089882850646973, -0.0020935535430908203, -0.17086124420166016, -0.000732421875, -0.0003027915954589844, -1.9073486328125e-06], "choice_history": [97, 283, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "3", "<EOS>", "deathrattle", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "deathrattle", "_type": "Template50", "hole1": 3, "hole0": 4}], "hole3": "create_minion", "hole0": "<UNK>Elite", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 4, "hole0": "Kor'kron Elite"}], "hole1": "MinionCard"}, "score": -8.280178427271721, "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, deathrattle=True)\n"}, {"score_history": [-0.0001678466796875, -4.38690185546875e-05, -0.003423934103921056, -0.0011651900131255388, -3.4450891689630225e-05, -1.4500692486763e-05, -4.220008850097656e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -5.708001136779785, -0.0008640289306640625, -5.960462772236497e-07, -2.2292137145996094e-05, -3.933906555175781e-06, -1.9073486328125e-06, -1.2007250916212797e-05, 0.0, -0.0007611513137817383, -3.814697265625e-06, -2.1340219974517822, 0.0, -0.007170677185058594, -1.9073486328125e-06, -0.012384414672851562, -1.9073486328125e-05, -0.0010242462158203125, 0.0, -0.14963817596435547, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -0.00421905517578125, 0.0, -7.62939453125e-06, -0.2797527313232422, -4.9591064453125e-05, -1.9073468138230965e-06, -7.629365427419543e-06, -0.0009065843769349158, 0.0, -0.003890752559527755, 0.0, -0.000888824462890625, -4.76837158203125e-05, -0.00022220611572265625, -2.0265579223632812e-06], "choice_history": [97, 283, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 3, "hole0": 4}], "hole3": "create_minion", "hole0": "<UNK>Elite", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Kor'kron Elite", "_type": "Template27", "hole2": "WARRIOR", "hole1": 4}], "hole1": "MinionCard"}, "score": -8.308901155208503, "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"score_history": [-0.0001678466796875, -4.38690185546875e-05, -7.802145004272461, -0.5695770978927612, -0.024890698492527008, -0.00013685598969459534, -0.00010788440704345703, -1.311301275563892e-06, -1.9073486328125e-06, -0.0024051666259765625, -4.1961669921875e-05, -3.2186455882765586e-06, -2.5391578674316406e-05, -2.384185791015625e-06, -3.814697265625e-06, -8.48770432639867e-05, 0.0, -0.0003567934036254883, 0.0, -0.0002269744873046875, 0.0, -0.00013387203216552734, 0.0, -1.9073486328125e-06, -0.0068149566650390625, -0.000209808349609375, -1.0728830375228426e-06, -2.5748875486897305e-05, -0.00012969970703125, 0.0, -0.00575220538303256, 0.0, -0.0004673004150390625, -5.340576171875e-05, -0.0001703500747680664, -2.0265579223632812e-06], "choice_history": [97, 283, "Force", "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "charge", "_type": "Template50", "hole1": 3, "hole0": 4}], "hole3": "create_minion", "hole0": "Force<UNK>", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 4, "hole0": "Kor'kron Elite"}], "hole1": "MinionCard"}, "score": -8.413985411793533, "inferred_code": "class Force<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"score_history": [-0.0001678466796875, -4.38690185546875e-05, -0.003423934103921056, -0.0011651900131255388, -3.4450891689630225e-05, -1.4500692486763e-05, -4.220008850097656e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0036602020263671875, -5.340576171875e-05, -2.50339189733495e-06, -2.574920654296875e-05, -2.2649765014648438e-06, -3.814697265625e-06, -8.237365545937791e-05, 0.0, -0.0003739595413208008, 0.0, -0.0002574920654296875, 0.0, -0.00011861324310302734, 0.0, -1.9073486328125e-06, -0.0064544677734375, -0.0002155303955078125, -1.0728830375228426e-06, -2.5629668016335927e-05, -0.00012969970703125, 0.0, -0.005820512305945158, 0.0, -8.448408126831055, -0.001224517822265625, -0.0347408689558506, -1.9073486328125e-06], "choice_history": [97, 283, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 23, 179, "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"n": 1, "_type": "Num"}, "hole2": "charge", "_type": "Template50", "hole1": 3, "hole0": 4}], "hole3": "create_minion", "hole0": "<UNK>Elite", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 4, "hole0": "Kor'kron Elite"}], "hole1": "MinionCard"}, "score": -8.506499591324655, "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=1)\n"}, {"score_history": [-0.0001678466796875, -4.38690185546875e-05, -0.003423934103921056, -0.0011651900131255388, -3.4450891689630225e-05, -1.4500692486763e-05, -4.220008850097656e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0036602020263671875, -5.340576171875e-05, -2.50339189733495e-06, -2.574920654296875e-05, -2.2649765014648438e-06, -3.814697265625e-06, -8.237365545937791e-05, 0.0, -0.0003739595413208008, 0.0, -0.0002574920654296875, 0.0, -0.00011861324310302734, 0.0, -1.9073486328125e-06, -0.0064544677734375, -0.0002155303955078125, -1.0728830375228426e-06, -2.5629668016335927e-05, -0.00012969970703125, 0.0, -8.521208763122559, -1.1920928244535389e-07, -0.0008563995361328125, -4.9591064453125e-05, -0.00024449825286865234, -5.841255187988281e-06], "choice_history": [97, 283, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 3, "hole0": 4}], "hole3": "create_minion", "hole0": "<UNK>Elite", "_type": "Template5", "hole2": [{"hole2": "WARRIOR", "_type": "Template31", "hole1": 4, "hole0": "Kor'kron Elite"}], "hole1": "MinionCard"}, "score": -8.53866887050139, "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, taunt=True)\n"}]}
{"index": 61, "beams": [{"score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -2.5033637939486653e-05, -3.933898824470816e-06, -1.301988959312439e-06, -0.00014472007751464844, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0015268325805664062, -0.0056934356689453125, -4.1961669921875e-05, 0.0, -5.9604644775390625e-06, -4.172325134277344e-06, -8.213520050048828e-05, 0.0, -0.0007343292236328125, -0.0004291534423828125, -4.00543212890625e-05, -5.841255187988281e-06, -0.0001468658447265625, -5.7220458984375e-06, -1.33514404296875e-05, -0.0006635189056396484, 0.0, -3.0517578125e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -0.000967860221862793, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -4.792213439941406e-05, 0.0, -0.16085529327392578, 0.0, -0.0001964569091796875, -6.4849853515625e-05, -4.5776359911542386e-05, -2.6702880859375e-05, -8.7738037109375e-05, -0.000286102294921875, -5.53131103515625e-05, -0.00146484375, 0.0, -0.0002231597900390625, 0.0, -9.02414321899414e-05, 0.0, -1.9073486328125e-05, -0.0005817413330078125, -2.6702880859375e-05, -7.867813110351562e-06, -3.3378546504536644e-06, -4.768335202243179e-07, 0.0, -0.001088734483346343, 0.0, -0.000286102294921875, -0.014162063598632812, -5.91278076171875e-05, -5.7220458984375e-06, -0.0001735687255859375, -0.0015048980712890625, -8.58306884765625e-05, -0.0001517515047453344, -2.300739288330078e-05, -0.008899688720703125, -0.0003814697265625, -1.965835690498352e-05, -0.00032757080043666065, 0.0], "choice_history": [97, 283, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Leokk", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Minion", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "Leokk", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Leokk"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -0.20196087825524245, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n"}, {"score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -2.5033637939486653e-05, -3.933898824470816e-06, -1.301988959312439e-06, -0.00014472007751464844, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0015268325805664062, -0.0056934356689453125, -4.1961669921875e-05, 0.0, -5.9604644775390625e-06, -4.172325134277344e-06, -8.213520050048828e-05, 0.0, -0.0007343292236328125, -0.0004291534423828125, -4.00543212890625e-05, -5.841255187988281e-06, -0.0001468658447265625, -5.7220458984375e-06, -1.33514404296875e-05, -0.0006635189056396484, 0.0, -3.0517578125e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -0.000967860221862793, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -4.792213439941406e-05, 0.0, -2.1279449462890625, -7.62939453125e-06, -0.0045032501220703125, -9.918212890625e-05, -7.474422454833984e-05, -2.86102294921875e-05, -9.1552734375e-05, -0.0002536773681640625, -4.9591064453125e-05, -0.0019570589065551758, 0.0, -0.000171661376953125, 0.0, -0.00011682510375976562, 0.0, -1.71661376953125e-05, -0.000583648681640625, -2.6702880859375e-05, -7.867813110351562e-06, -3.3378546504536644e-06, -4.768335202243179e-07, 0.0, -0.001085634925402701, 0.0, -0.0002841949462890625, -0.014824867248535156, -5.91278076171875e-05, -5.7220458984375e-06, -0.00017547607421875, -0.0015020370483398438, -8.58306884765625e-05, -0.00015151308616623282, -2.300739288330078e-05, -0.008815765380859375, -0.000385284423828125, -1.9892118871212006e-05, -0.00032685569021850824, 0.0], "choice_history": [97, 283, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Leokk", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Minion", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "Leokk", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Leokk"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -2.17443914416571, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            FREE, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n"}, {"score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -2.5033637939486653e-05, -3.933898824470816e-06, -1.301988959312439e-06, -0.00014472007751464844, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0015268325805664062, -0.0056934356689453125, -4.1961669921875e-05, 0.0, -5.9604644775390625e-06, -4.172325134277344e-06, -8.213520050048828e-05, 0.0, -0.0007343292236328125, -0.0004291534423828125, -4.00543212890625e-05, -5.841255187988281e-06, -0.0001468658447265625, -5.7220458984375e-06, -1.33514404296875e-05, -0.0006635189056396484, 0.0, -3.0517578125e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -0.000967860221862793, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -4.792213439941406e-05, 0.0, -4.291033744812012, -7.62939453125e-06, -0.08449268341064453, -1.9073486328125e-05, -9.489058720646426e-05, -2.47955322265625e-05, -0.00017547607421875, -0.00026702880859375, -4.1961669921875e-05, -0.0027191638946533203, 0.0, -0.0002079010009765625, 0.0, -0.00018978118896484375, 0.0, -1.1444091796875e-05, -0.00060272216796875, -2.288818359375e-05, -7.867813110351562e-06, -3.2186455882765586e-06, -4.768335202243179e-07, 0.0, -0.0010760988807305694, 0.0, -0.000286102294921875, -0.014075279235839844, -5.9247013268759474e-05, -5.7220458984375e-06, -0.0001773834228515625, -0.0015077590942382812, -8.58306884765625e-05, -0.00015306283603422344, -2.300739288330078e-05, -0.008879661560058594, -0.0003871917724609375, -1.9774772226810455e-05, -0.00032876303885132074, 0.0], "choice_history": [97, 283, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Leokk", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "BEAST", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Minion", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "Leokk", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Leokk"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "BEAST"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -4.417743637788355, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            BEAST, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n"}, {"score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -2.5033637939486653e-05, -3.933898824470816e-06, -1.301988959312439e-06, -0.00014472007751464844, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0015268325805664062, -0.0056934356689453125, -4.1961669921875e-05, 0.0, -5.9604644775390625e-06, -4.172325134277344e-06, -8.213520050048828e-05, 0.0, -0.0007343292236328125, -0.0004291534423828125, -4.00543212890625e-05, -5.841255187988281e-06, -0.0001468658447265625, -5.7220458984375e-06, -1.33514404296875e-05, -0.0006635189056396484, 0.0, -3.0517578125e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -0.000967860221862793, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -4.792213439941406e-05, 0.0, -0.16085529327392578, 0.0, -0.0001964569091796875, -6.4849853515625e-05, -4.5776359911542386e-05, -2.6702880859375e-05, -8.7738037109375e-05, -0.000286102294921875, -5.53131103515625e-05, -0.00146484375, 0.0, -0.0002231597900390625, 0.0, -9.02414321899414e-05, 0.0, -1.9073486328125e-05, -0.0005817413330078125, -2.6702880859375e-05, -7.867813110351562e-06, -3.3378546504536644e-06, -4.768335202243179e-07, 0.0, -0.001088734483346343, 0.0, -0.000286102294921875, -4.329136848449707, -0.002497076988220215, -1.9073486328125e-06, -0.0008678436279296875, -0.0010509490966796875, -0.0002002716064453125, -0.00015115630230866373, -4.792213439941406e-05, -0.0025968551635742188, -0.0004215240478515625, -0.000180073082447052, -0.00027167334337718785, 0.0, -3.24249267578125e-05, -0.00609588623046875, -0.0033216476440429688, -0.012516559101641178, -4.5299530029296875e-06, -0.001369476318359375, -0.04873180389404297, -0.004227638244628906, -0.0003182717482559383, -1.9073486328125e-06, -0.0004596710205078125, -0.0005664825439453125, -2.84537672996521e-05, -0.00014591088984161615, 0.0], "choice_history": [97, 283, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Leokk", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 37, 322, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Minion", "Selector", "<EOS>", 346, 87, 324, "Aura", "<EOS>", 347, 81, 311, "1", "<EOS>", 88, 325, "Minion", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"hole2": [{"_type": "Template78_expr_seq", "hole1": [{"_type": "Template71", "hole0": 1}, {"_type": "Template79", "hole0": "MinionSelector"}], "hole0": "Aura"}], "_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "Leokk", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Leokk"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -4.591411285638507, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector()),\n            Aura(ChangeHealth(1), MinionSelector())])\n"}, {"score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -2.5033637939486653e-05, -3.933898824470816e-06, -1.301988959312439e-06, -0.00014472007751464844, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0015268325805664062, -0.0056934356689453125, -4.1961669921875e-05, 0.0, -5.9604644775390625e-06, -4.172325134277344e-06, -8.213520050048828e-05, 0.0, -0.0007343292236328125, -0.0004291534423828125, -4.00543212890625e-05, -5.841255187988281e-06, -0.0001468658447265625, -5.7220458984375e-06, -1.33514404296875e-05, -0.0006635189056396484, 0.0, -3.0517578125e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -0.000967860221862793, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -4.792213439941406e-05, 0.0, -4.5989274978637695, 0.0, -0.0002193450927734375, -1.71661376953125e-05, -3.5762786865234375e-05, -1.9073486328125e-05, -0.000110626220703125, -0.0002155303955078125, -4.1961669921875e-05, -0.0016881227493286133, 0.0, -0.0001506805419921875, 0.0, -0.0002027750015258789, 0.0, -1.33514404296875e-05, -0.000576019287109375, -2.47955322265625e-05, -7.867813110351562e-06, -3.3378546504536644e-06, -4.1723224057932384e-06, 0.0, -0.0010715683456510305, 0.0, -0.0002841949462890625, -0.013947486877441406, -5.91278076171875e-05, -5.7220458984375e-06, -0.0001773834228515625, -0.0015249252319335938, -8.58306884765625e-05, -0.00015187069948296994, -2.300739288330078e-05, -0.008806228637695312, -0.00038909912109375, -2.012588083744049e-05, -0.00032637891126796603, 0.0], "choice_history": [97, 283, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Leokk", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Minion", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "Leokk", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Leokk"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -4.639887042349521, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            RARE, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n"}, {"score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -2.5033637939486653e-05, -3.933898824470816e-06, -1.301988959312439e-06, -0.00014472007751464844, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0015268325805664062, -0.0056934356689453125, -4.1961669921875e-05, 0.0, -5.9604644775390625e-06, -4.172325134277344e-06, -8.213520050048828e-05, 0.0, -0.0007343292236328125, -0.0004291534423828125, -4.00543212890625e-05, -5.841255187988281e-06, -0.0001468658447265625, -5.7220458984375e-06, -1.33514404296875e-05, -0.0006635189056396484, 0.0, -3.0517578125e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -0.000967860221862793, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -4.792213439941406e-05, 0.0, -0.16085529327392578, 0.0, -0.0001964569091796875, -6.4849853515625e-05, -4.5776359911542386e-05, -2.6702880859375e-05, -8.7738037109375e-05, -0.000286102294921875, -5.53131103515625e-05, -0.00146484375, 0.0, -0.0002231597900390625, 0.0, -9.02414321899414e-05, 0.0, -1.9073486328125e-05, -0.0005817413330078125, -2.6702880859375e-05, -7.867813110351562e-06, -3.3378546504536644e-06, -4.768335202243179e-07, 0.0, -0.001088734483346343, 0.0, -0.000286102294921875, -0.014162063598632812, -5.91278076171875e-05, -5.7220458984375e-06, -0.0001735687255859375, -0.0015048980712890625, -8.58306884765625e-05, -0.0001517515047453344, -2.300739288330078e-05, -5.01036262512207, -0.000240325927734375, -0.005563877522945404, -6.97362411301583e-05, -0.00010477947944309562, -0.20217837393283844, -0.0046694460324943066], "choice_history": [97, 283, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Leokk", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "have", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template55", "hole1": "have", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "Leokk", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Leokk"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -5.415521654909291, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector(\n            have()))])\n"}, {"score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -2.5033637939486653e-05, -3.933898824470816e-06, -1.301988959312439e-06, -0.00014472007751464844, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0015268325805664062, -5.232691764831543, -2.47955322265625e-05, 0.0, -2.741813204920618e-06, -1.9073486328125e-06, -6.449222564697266e-05, -1.1920928244535389e-07, -0.07102394104003906, -8.96453857421875e-05, -2.47955322265625e-05, -2.3245811462402344e-05, -1.561641511216294e-05, -1.1444091796875e-05, -3.814697265625e-06, -0.0002959943376481533, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -4.589557647705078e-05, -1.9073486328125e-06, -0.002287149429321289, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -6.54458999633789e-05, -1.1920928244535389e-07, -0.20705807209014893, 0.0, -0.0007572174072265625, -5.7220458984375e-05, -4.303454261389561e-05, -2.288818359375e-05, -0.00013566017150878906, 0.0, -0.0006415843963623047, 0.0, -4.57763671875e-05, -0.027690887451171875, -4.38690185546875e-05, -1.4066696166992188e-05, -1.1920922133867862e-06, -5.960400812909938e-07, 0.0, -0.0010937436018139124, 0.0, -0.000335693359375, -0.02914905548095703, -7.605552673339844e-05, -7.62939453125e-06, -0.00022125244140625, -0.0013742446899414062, -8.7738037109375e-05, -0.000150321502587758, -2.300739288330078e-05, -0.014654159545898438, -0.0003814697265625, -1.6611069440841675e-05, -0.00040696532232686877, 0.0], "choice_history": [97, 283, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Leokk", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Minion", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "Leokk", "_type": "Template5", "hole2": [{"hole2": [{"_type": "Str", "s": "Leokk"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -5.593027006421131, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n"}, {"score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -2.5033637939486653e-05, -3.933898824470816e-06, -1.301988959312439e-06, -0.00014472007751464844, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0015268325805664062, -0.0056934356689453125, -4.1961669921875e-05, 0.0, -5.9604644775390625e-06, -4.172325134277344e-06, -8.213520050048828e-05, 0.0, -0.0007343292236328125, -0.0004291534423828125, -4.00543212890625e-05, -5.841255187988281e-06, -0.0001468658447265625, -5.7220458984375e-06, -1.33514404296875e-05, -0.0006635189056396484, 0.0, -3.0517578125e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -0.000967860221862793, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -4.792213439941406e-05, 0.0, -2.1279449462890625, -7.62939453125e-06, -0.0045032501220703125, -9.918212890625e-05, -7.474422454833984e-05, -2.86102294921875e-05, -9.1552734375e-05, -0.0002536773681640625, -4.9591064453125e-05, -0.0019570589065551758, 0.0, -0.000171661376953125, 0.0, -0.00011682510375976562, 0.0, -1.71661376953125e-05, -0.000583648681640625, -2.6702880859375e-05, -7.867813110351562e-06, -3.3378546504536644e-06, -4.768335202243179e-07, 0.0, -0.001085634925402701, 0.0, -0.0002841949462890625, -4.283119201660156, -0.0024875402450561523, -1.9073486328125e-06, -0.00086212158203125, -0.0010538101196289062, -0.0001983642578125, -0.00015079870354384184, -4.792213439941406e-05, -0.0025768280029296875, -0.00042724609375, -0.00018231570720672607, -0.00026940839597955346, 0.0, -3.24249267578125e-05, -0.006091117858886719, -0.0033235549926757812, -0.01251066941767931, -4.5299530029296875e-06, -0.001369476318359375, -0.04886150360107422, -0.0042285919189453125, -0.0003181525389663875, -1.9073486328125e-06, -0.0004596710205078125, -0.000568389892578125, -2.8342008590698242e-05, -0.00014603009913116693, 0.0], "choice_history": [97, 283, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Leokk", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 37, 322, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Minion", "Selector", "<EOS>", 346, 87, 324, "Aura", "<EOS>", 347, 81, 311, "1", "<EOS>", 88, 325, "Minion", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"hole2": [{"_type": "Template78_expr_seq", "hole1": [{"_type": "Template71", "hole0": 1}, {"_type": "Template79", "hole0": "MinionSelector"}], "hole0": "Aura"}], "_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "Leokk", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Leokk"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -6.517385591306713, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            FREE, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector()),\n            Aura(ChangeHealth(1), MinionSelector())])\n"}, {"score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -2.5033637939486653e-05, -3.933898824470816e-06, -1.301988959312439e-06, -0.00014472007751464844, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0015268325805664062, -0.0056934356689453125, -4.1961669921875e-05, 0.0, -5.9604644775390625e-06, -4.172325134277344e-06, -8.213520050048828e-05, 0.0, -0.0007343292236328125, -0.0004291534423828125, -4.00543212890625e-05, -5.841255187988281e-06, -0.0001468658447265625, -5.7220458984375e-06, -1.33514404296875e-05, -0.0006635189056396484, 0.0, -3.0517578125e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -0.000967860221862793, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -4.792213439941406e-05, 0.0, -6.493646621704102, -1.9073486328125e-06, -0.2824831008911133, -2.47955322265625e-05, -0.0002636909484863281, -0.0001049041748046875, -0.00018310546875, -0.00025177001953125, -3.814697265625e-05, -0.003480076789855957, 0.0, -0.0003396272659301758, 0.0, -0.00020241737365722656, 0.0, -1.33514404296875e-05, -0.0006313323974609375, -2.09808349609375e-05, -7.987022399902344e-06, -3.2186455882765586e-06, -4.768335202243179e-07, 0.0, -0.001082059578038752, 0.0, -0.0002899169921875, -0.012763023376464844, -6.103515625e-05, -5.7220458984375e-06, -0.0001773834228515625, -0.0015277862548828125, -8.58306884765625e-05, -0.00014960585394874215, -2.491474151611328e-05, -0.009390830993652344, -0.000385284423828125, -1.9424594938755035e-05, -0.00032971653854474425, 0.0], "choice_history": [97, 283, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Leokk", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "HUNTER", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Minion", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "Leokk", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Leokk"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -6.8187460524693435, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            HUNTER, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n"}, {"score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -2.5033637939486653e-05, -3.933898824470816e-06, -1.301988959312439e-06, -0.00014472007751464844, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0015268325805664062, -0.0056934356689453125, -4.1961669921875e-05, 0.0, -5.9604644775390625e-06, -4.172325134277344e-06, -8.213520050048828e-05, 0.0, -0.0007343292236328125, -0.0004291534423828125, -4.00543212890625e-05, -5.841255187988281e-06, -0.0001468658447265625, -5.7220458984375e-06, -1.33514404296875e-05, -0.0006635189056396484, 0.0, -3.0517578125e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -0.000967860221862793, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -4.792213439941406e-05, 0.0, -0.16085529327392578, 0.0, -0.0001964569091796875, -6.4849853515625e-05, -4.5776359911542386e-05, -2.6702880859375e-05, -8.7738037109375e-05, -0.000286102294921875, -5.53131103515625e-05, -0.00146484375, 0.0, -0.0002231597900390625, 0.0, -9.02414321899414e-05, 0.0, -1.9073486328125e-05, -0.0005817413330078125, -2.6702880859375e-05, -7.867813110351562e-06, -3.3378546504536644e-06, -4.768335202243179e-07, 0.0, -0.001088734483346343, 0.0, -0.000286102294921875, -0.014162063598632812, -5.91278076171875e-05, -5.7220458984375e-06, -0.0001735687255859375, -0.0015048980712890625, -8.58306884765625e-05, -0.0001517515047453344, -2.300739288330078e-05, -6.611620903015137, -0.0032663345336914062, -0.014103123918175697, -0.014836071990430355, -2.6702880859375e-05, -7.62939453125e-06, -0.2036886215209961, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.0012116432189941406, -5.7220458984375e-06, -0.0001506805419921875, 0.0], "choice_history": [97, 283, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Leokk", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template59", "hole1": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "hole0": "IsType"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "Leokk", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Leokk"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -7.041305236821692, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.BEAST)))])\n"}, {"score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -2.5033637939486653e-05, -3.933898824470816e-06, -1.301988959312439e-06, -0.00014472007751464844, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0015268325805664062, -5.232691764831543, -2.47955322265625e-05, 0.0, -2.741813204920618e-06, -1.9073486328125e-06, -6.449222564697266e-05, -1.1920928244535389e-07, -0.07102394104003906, -8.96453857421875e-05, -2.47955322265625e-05, -2.3245811462402344e-05, -1.561641511216294e-05, -1.1444091796875e-05, -3.814697265625e-06, -0.0002959943376481533, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -4.589557647705078e-05, -1.9073486328125e-06, -0.002287149429321289, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -6.54458999633789e-05, -1.1920928244535389e-07, -1.7669745683670044, -7.62939453125e-06, -0.15128707885742188, -8.0108642578125e-05, -8.821486699162051e-05, -1.52587890625e-05, -0.00018012523651123047, 0.0, -0.005251407623291016, 0.0, -2.47955322265625e-05, -0.09026145935058594, -7.43865966796875e-05, -4.1365608922205865e-05, -9.536738616588991e-07, -1.4304841897683218e-06, 0.0, -0.0014246659120544791, 0.0, -0.0003795623779296875, -0.01700592041015625, -8.14199447631836e-05, -9.5367431640625e-06, -0.0001926422119140625, -0.001621246337890625, -8.58306884765625e-05, -0.0001522289530839771, -2.491474151611328e-05, -0.016027450561523438, -0.000362396240234375, -1.520942896604538e-05, -0.0004128055297769606, 0.0], "choice_history": [97, 283, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Leokk", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 51, 175, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Minion", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "Leokk", "_type": "Template5", "hole2": [{"hole2": [{"_type": "Str", "s": "Leokk"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -7.360621607519057, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            FREE, True)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n"}, {"score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -2.5033637939486653e-05, -3.933898824470816e-06, -1.301988959312439e-06, -0.00014472007751464844, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0015268325805664062, -0.0056934356689453125, -4.1961669921875e-05, 0.0, -5.9604644775390625e-06, -4.172325134277344e-06, -8.213520050048828e-05, 0.0, -0.0007343292236328125, -0.0004291534423828125, -4.00543212890625e-05, -5.841255187988281e-06, -0.0001468658447265625, -5.7220458984375e-06, -1.33514404296875e-05, -0.0006635189056396484, 0.0, -3.0517578125e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -0.000967860221862793, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -4.792213439941406e-05, 0.0, -2.1279449462890625, -7.62939453125e-06, -0.0045032501220703125, -9.918212890625e-05, -7.474422454833984e-05, -2.86102294921875e-05, -9.1552734375e-05, -0.0002536773681640625, -4.9591064453125e-05, -0.0019570589065551758, 0.0, -0.000171661376953125, 0.0, -0.00011682510375976562, 0.0, -1.71661376953125e-05, -0.000583648681640625, -2.6702880859375e-05, -7.867813110351562e-06, -3.3378546504536644e-06, -4.768335202243179e-07, 0.0, -0.001085634925402701, 0.0, -0.0002841949462890625, -0.014824867248535156, -5.91278076171875e-05, -5.7220458984375e-06, -0.00017547607421875, -0.0015020370483398438, -8.58306884765625e-05, -0.00015151308616623282, -2.300739288330078e-05, -5.0216169357299805, -0.000240325927734375, -0.005721621215343475, -6.97362411301583e-05, -0.000105375460407231, -0.20223967730998993, -0.0046877190470695496], "choice_history": [97, 283, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Leokk", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "have", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template55", "hole1": "have", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "Leokk", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Leokk"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -7.399572737483588, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            FREE, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector(\n            have()))])\n"}, {"score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -2.5033637939486653e-05, -3.933898824470816e-06, -1.301988959312439e-06, -0.00014472007751464844, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0015268325805664062, -0.0056934356689453125, -4.1961669921875e-05, 0.0, -5.9604644775390625e-06, -4.172325134277344e-06, -8.213520050048828e-05, 0.0, -0.0007343292236328125, -0.0004291534423828125, -4.00543212890625e-05, -5.841255187988281e-06, -0.0001468658447265625, -5.7220458984375e-06, -1.33514404296875e-05, -0.0006635189056396484, 0.0, -3.0517578125e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -0.000967860221862793, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -4.792213439941406e-05, 0.0, -7.483489990234375, 0.0, -0.000225067138671875, -3.62396240234375e-05, -7.379054295597598e-05, -1.52587890625e-05, -8.7738037109375e-05, -0.0002765655517578125, -5.340576171875e-05, -0.0016061067581176758, 0.0, -0.00016021728515625, 0.0, -0.00013005733489990234, 0.0, -1.71661376953125e-05, -0.00058746337890625, -2.86102294921875e-05, -7.867813110351562e-06, -3.3378546504536644e-06, -3.5762514016823843e-07, 0.0, -0.0010802705073729157, 0.0, -0.0002841949462890625, -0.014863967895507812, -5.9247013268759474e-05, -5.7220458984375e-06, -0.00017547607421875, -0.0015211105346679688, -8.58306884765625e-05, -0.00015139389142859727, -2.300739288330078e-05, -0.008696556091308594, -0.000385284423828125, -1.989118754863739e-05, -0.0003251867019571364, 0.0], "choice_history": [97, 283, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Leokk", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Minion", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "Leokk", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Leokk"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "LEGENDARY"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -7.525232385635256, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n"}, {"score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -2.5033637939486653e-05, -3.933898824470816e-06, -1.301988959312439e-06, -0.00014472007751464844, -1.1920928244535389e-07, -4.76837158203125e-05, -7.652854919433594, -0.00341796875, -1.9073486328125e-06, -0.0006676194025203586, -0.00020909300656057894, 0.0, -0.00027823238633573055, -3.814697265625e-06, -0.008411388844251633, -2.9802317840221804e-06, -0.0006618499755859375, -5.7220458984375e-06, -0.003421783447265625, -2.09808349609375e-05, -0.00014960765838623047, 0.0, -0.019700050354003906, 0.0, -0.0002155303955078125, 0.0, -0.00022923946380615234, 0.0, -7.62939453125e-06, -0.0014400482177734375, -1.1444091796875e-05, -1.2159347534179688e-05, -1.5497195136049413e-06, -4.768335202243179e-07, 0.0, -0.0010091053554788232, 0.0, -0.00030517578125, -0.014499664306640625, -6.282329559326172e-05, -3.814697265625e-06, -0.0001659393310546875, -0.0013589859008789062, -8.58306884765625e-05, -0.00013220174878370017, -2.300739288330078e-05, -0.010974884033203125, -0.000438690185546875, -1.6109086573123932e-05, -0.00034116196911782026, 0.0], "choice_history": [97, 283, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Leokk", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Minion", "Selector", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"_type": "Template78", "hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "MinionSelector"}], "hole0": "Aura"}, "hole2": "auras", "_type": "Template50", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "Leokk", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type", "hole0": "Leokk", "_type": "Template27", "hole2": "HUNTER", "hole1": 3}], "hole1": "MinionCard"}, "score": -7.721385255668444, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n"}, {"score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -2.5033637939486653e-05, -3.933898824470816e-06, -1.301988959312439e-06, -0.00014472007751464844, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0015268325805664062, -0.0056934356689453125, -4.1961669921875e-05, 0.0, -5.9604644775390625e-06, -4.172325134277344e-06, -8.213520050048828e-05, 0.0, -0.0007343292236328125, -0.0004291534423828125, -4.00543212890625e-05, -5.841255187988281e-06, -0.0001468658447265625, -5.7220458984375e-06, -1.33514404296875e-05, -0.0006635189056396484, 0.0, -3.0517578125e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -0.000967860221862793, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -4.792213439941406e-05, 0.0, -0.16085529327392578, 0.0, -0.0001964569091796875, -6.4849853515625e-05, -4.5776359911542386e-05, -2.6702880859375e-05, -8.7738037109375e-05, -0.000286102294921875, -5.53131103515625e-05, -0.00146484375, 0.0, -0.0002231597900390625, 0.0, -9.02414321899414e-05, 0.0, -1.9073486328125e-05, -8.354208946228027, -0.0003795623779296875, -0.0001367270015180111, -5.960462772236497e-07, -1.52587890625e-05, 0.0], "choice_history": [97, 283, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Leokk", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 4, "hole0": 2}], "hole3": "create_minion", "hole0": "Leokk", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "BEAST"}], "hole2": [{"_type": "Str", "s": "Leokk"}, {"n": 3, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -8.528912647764905, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}]}
{"index": 62, "beams": [{"score_history": [-0.0010128021240234375, -0.0005550384521484375, -6.687594577670097e-05, -0.00018416276725474745, -0.010693143121898174, -0.00562733830884099, -0.0003933906555175781, -1.311301275563892e-06, -1.71661376953125e-05, -0.00250244140625, -5.14984130859375e-05, -0.003031659172847867, -0.0001850128173828125, -1.6570051229791716e-05, -0.00020599365234375, -0.0002232456172350794, -1.9073486328125e-06, -0.0008544921875, -0.000125885009765625, -0.00248563289642334, -3.814697265625e-06, -0.08676958084106445, -1.9073486328125e-06, -0.00010514008317841217, 0.0, -7.62939453125e-06, -0.0007343292236328125, -0.00136566162109375, -0.4116511046886444, -2.1457672119140625e-06, -1.1920928244535389e-07, -3.576278118089249e-07, -0.00010443339124321938, 0.0], "choice_history": [97, 283, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole2": 4, "_type": "Template68", "hole1": 1, "hole0": "Weapon"}], "hole3": "create_weapon", "hole0": "<UNK>Justice", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "PALADIN", "_type": "Template34", "hole1": 1, "hole0": "<UNK> Justice"}], "hole1": "WeaponCard"}, "score": -0.5289817912807209, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"score_history": [-0.0010128021240234375, -0.0005550384521484375, -6.687594577670097e-05, -0.00018416276725474745, -0.010693143121898174, -0.00562733830884099, -0.0003933906555175781, -1.311301275563892e-06, -1.71661376953125e-05, -0.00250244140625, -5.14984130859375e-05, -0.003031659172847867, -0.0001850128173828125, -1.6570051229791716e-05, -0.00020599365234375, -0.0002232456172350794, -1.9073486328125e-06, -0.0008544921875, -0.000125885009765625, -0.00248563289642334, -3.814697265625e-06, -0.08676958084106445, -1.9073486328125e-06, -0.00010514008317841217, 0.0, -7.62939453125e-06, -0.0007343292236328125, -0.00136566162109375, -2.2553625106811523, -0.000324249267578125, 0.0, -1.1920928244535389e-07, -9.676278568804264e-05, 0.0], "choice_history": [97, 283, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole2": 4, "_type": "Template68", "hole1": 1, "hole0": "Minion"}], "hole3": "create_weapon", "hole0": "<UNK>Justice", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "PALADIN", "_type": "Template34", "hole1": 1, "hole0": "<UNK> Justice"}], "hole1": "WeaponCard"}, "score": -2.373007272540228, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Minion(1, 4)\n"}, {"score_history": [-0.0010128021240234375, -0.0005550384521484375, -6.687594577670097e-05, -0.00018416276725474745, -0.010693143121898174, -0.00562733830884099, -0.0003933906555175781, -1.311301275563892e-06, -1.71661376953125e-05, -0.00250244140625, -5.14984130859375e-05, -0.003031659172847867, -0.0001850128173828125, -1.6570051229791716e-05, -0.00020599365234375, -0.0002232456172350794, -1.9073486328125e-06, -0.0008544921875, -0.000125885009765625, -0.00248563289642334, -3.814697265625e-06, -2.5411667823791504, 0.0, -0.00017178055713884532, 0.0, -3.814697265625e-06, -0.00244140625, -0.00370025634765625, -0.2342296838760376, -2.384185791015625e-06, -1.1920928244535389e-07, -3.576278118089249e-07, -8.283345960080624e-05, 0.0], "choice_history": [97, 283, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole2": 4, "_type": "Template68", "hole1": 1, "hole0": "Weapon"}], "hole3": "create_minion", "hole0": "<UNK>Justice", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "PALADIN", "_type": "Template34", "hole1": 1, "hole0": "<UNK> Justice"}], "hole1": "WeaponCard"}, "score": -2.8100388006741284, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Weapon(1, 4)\n"}, {"score_history": [-0.0010128021240234375, -0.0005550384521484375, -6.687594577670097e-05, -0.00018416276725474745, -0.010693143121898174, -0.00562733830884099, -0.0003933906555175781, -1.311301275563892e-06, -1.71661376953125e-05, -0.00250244140625, -5.14984130859375e-05, -0.003031659172847867, -0.0001850128173828125, -1.6570051229791716e-05, -0.00020599365234375, -0.0002232456172350794, -1.9073486328125e-06, -0.0008544921875, -0.000125885009765625, -0.00248563289642334, -3.814697265625e-06, -0.08676958084106445, -1.9073486328125e-06, -0.00010514008317841217, 0.0, -7.62939453125e-06, -0.0007343292236328125, -0.00136566162109375, -2.671908378601074, -0.49762916564941406, -2.586841583251953e-05, 0.0, -0.0005407482385635376, 0.0], "choice_history": [97, 283, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Spell", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole2": 4, "_type": "Template68", "hole1": 1, "hole0": "Spell"}], "hole3": "create_weapon", "hole0": "<UNK>Justice", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "PALADIN", "_type": "Template34", "hole1": 1, "hole0": "<UNK> Justice"}], "hole1": "WeaponCard"}, "score": -3.2873277915014114, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Spell(1, 4)\n"}, {"score_history": [-0.0010128021240234375, -0.0005550384521484375, -6.687594577670097e-05, -0.00018416276725474745, -0.010693143121898174, -0.00562733830884099, -0.0003933906555175781, -1.311301275563892e-06, -1.71661376953125e-05, -0.00250244140625, -5.14984130859375e-05, -0.003031659172847867, -0.0001850128173828125, -1.6570051229791716e-05, -0.00020599365234375, -0.0002232456172350794, -1.9073486328125e-06, -0.0008544921875, -0.000125885009765625, -0.00248563289642334, -3.814697265625e-06, -0.08676958084106445, -1.9073486328125e-06, -0.00010514008317841217, 0.0, -7.62939453125e-06, -0.0007343292236328125, -0.00136566162109375, -3.5185699462890625, -0.001788496971130371, -3.5762786865234375e-06, -1.1920928244535389e-07, -0.00012837001122534275, 0.0], "choice_history": [97, 283, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "create_weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole2": 4, "_type": "Template68", "hole1": 1, "hole0": "create_weapon"}], "hole3": "create_weapon", "hole0": "<UNK>Justice", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "PALADIN", "_type": "Template34", "hole1": 1, "hole0": "<UNK> Justice"}], "hole1": "WeaponCard"}, "score": -3.6377141393559143, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return create_weapon(1, 4)\n"}, {"score_history": [-0.0010128021240234375, -0.0005550384521484375, -6.687594577670097e-05, -0.00018416276725474745, -0.010693143121898174, -0.00562733830884099, -0.0003933906555175781, -1.311301275563892e-06, -1.71661376953125e-05, -0.00250244140625, -5.14984130859375e-05, -0.003031659172847867, -0.0001850128173828125, -1.6570051229791716e-05, -0.00020599365234375, -0.0002232456172350794, -1.9073486328125e-06, -0.0008544921875, -0.000125885009765625, -0.00248563289642334, -3.814697265625e-06, -0.08676958084106445, -1.9073486328125e-06, -0.00010514008317841217, 0.0, -7.62939453125e-06, -0.0007343292236328125, -0.00136566162109375, -3.618598461151123, -1.072883515007561e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.00011001527309417725, 0.0], "choice_history": [97, 283, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "PRIEST", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole2": 4, "_type": "Template68", "hole1": 1, "hole0": "PRIEST"}], "hole3": "create_weapon", "hole0": "<UNK>Justice", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "PALADIN", "_type": "Template34", "hole1": 1, "hole0": "<UNK> Justice"}], "hole1": "WeaponCard"}, "score": -3.7359430742744593, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return PRIEST(1, 4)\n"}, {"score_history": [-0.0010128021240234375, -0.0005550384521484375, -6.687594577670097e-05, -0.00018416276725474745, -0.010693143121898174, -0.00562733830884099, -0.0003933906555175781, -1.311301275563892e-06, -1.71661376953125e-05, -0.00250244140625, -5.14984130859375e-05, -0.003031659172847867, -0.0001850128173828125, -1.6570051229791716e-05, -0.00020599365234375, -0.0002232456172350794, -1.9073486328125e-06, -0.0008544921875, -0.000125885009765625, -0.00248563289642334, -3.814697265625e-06, -0.08676958084106445, -1.9073486328125e-06, -0.00010514008317841217, 0.0, -7.62939453125e-06, -0.0007343292236328125, -0.00136566162109375, -2.671908378601074, -0.9492397308349609, -7.355085108429193e-05, 0.0, -0.0002011060423683375, 0.0, -0.0075732022523880005, 0.0], "choice_history": [97, 283, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Spell", " ", "Justice", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole2": 4, "_type": "Template68", "hole1": 1, "hole0": "Spell Justice"}], "hole3": "create_weapon", "hole0": "<UNK>Justice", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "PALADIN", "_type": "Template34", "hole1": 1, "hole0": "<UNK> Justice"}], "hole1": "WeaponCard"}, "score": -3.746219599178403, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Spell Justice(1, 4)\n"}, {"score_history": [-0.0010128021240234375, -0.0005550384521484375, -6.687594577670097e-05, -0.00018416276725474745, -0.010693143121898174, -0.00562733830884099, -0.0003933906555175781, -1.311301275563892e-06, -1.71661376953125e-05, -0.00250244140625, -5.14984130859375e-05, -0.003031659172847867, -0.0001850128173828125, -1.6570051229791716e-05, -0.00020599365234375, -0.0002232456172350794, -1.9073486328125e-06, -0.0008544921875, -0.000125885009765625, -0.00248563289642334, -3.814697265625e-06, -0.08676958084106445, -1.9073486328125e-06, -0.00010514008317841217, 0.0, -7.62939453125e-06, -0.0007343292236328125, -0.00136566162109375, -3.7385811805725098, -0.0036464929580688477, -3.123283386230469e-05, -4.768370445162873e-07, -0.00012214528396725655, 0.0], "choice_history": [97, 283, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "combo", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole2": 4, "_type": "Template68", "hole1": 1, "hole0": "combo"}], "hole3": "create_weapon", "hole0": "<UNK>Justice", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "PALADIN", "_type": "Template34", "hole1": 1, "hole0": "<UNK> Justice"}], "hole1": "WeaponCard"}, "score": -3.8596051590819798, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return combo(1, 4)\n"}, {"score_history": [-0.0010128021240234375, -0.0005550384521484375, -6.687594577670097e-05, -0.00018416276725474745, -0.010693143121898174, -0.00562733830884099, -0.0003933906555175781, -1.311301275563892e-06, -1.71661376953125e-05, -0.00250244140625, -5.14984130859375e-05, -0.003031659172847867, -0.0001850128173828125, -1.6570051229791716e-05, -0.00020599365234375, -0.0002232456172350794, -1.9073486328125e-06, -0.0008544921875, -0.000125885009765625, -0.00248563289642334, -3.814697265625e-06, -0.08676958084106445, -1.9073486328125e-06, -0.00010514008317841217, 0.0, -7.62939453125e-06, -0.0007343292236328125, -0.00136566162109375, -3.8477883338928223, -9.1552734375e-05, -1.4543528777721804e-05, -1.1920928244535389e-07, -0.0002719918265938759, 0.0], "choice_history": [97, 283, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "_", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole2": 4, "_type": "Template68", "hole1": 1, "hole0": "_"}], "hole3": "create_weapon", "hole0": "<UNK>Justice", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "PALADIN", "_type": "Template34", "hole1": 1, "hole0": "<UNK> Justice"}], "hole1": "WeaponCard"}, "score": -3.9653901717883784, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return _(1, 4)\n"}, {"score_history": [-0.0010128021240234375, -0.0005550384521484375, -6.687594577670097e-05, -0.00018416276725474745, -0.010693143121898174, -0.00562733830884099, -0.0003933906555175781, -1.311301275563892e-06, -1.71661376953125e-05, -0.00250244140625, -5.14984130859375e-05, -0.003031659172847867, -0.0001850128173828125, -1.6570051229791716e-05, -0.00020599365234375, -0.0002232456172350794, -1.9073486328125e-06, -0.0008544921875, -0.000125885009765625, -0.00248563289642334, -3.814697265625e-06, -0.08676958084106445, -1.9073486328125e-06, -0.00010514008317841217, 0.0, -7.62939453125e-06, -0.0007343292236328125, -0.00136566162109375, -4.32763147354126, 0.0, -0.0016940832138061523, -2.3841855067985307e-07, -0.0002925021108239889, 0.0], "choice_history": [97, 283, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "player", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole2": 4, "_type": "Template68", "hole1": 1, "hole0": "player"}], "hole3": "create_weapon", "hole0": "<UNK>Justice", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "PALADIN", "_type": "Template34", "hole1": 1, "hole0": "<UNK> Justice"}], "hole1": "WeaponCard"}, "score": -4.446841927880968, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return player(1, 4)\n"}, {"score_history": [-0.0010128021240234375, -0.0005550384521484375, -6.687594577670097e-05, -0.00018416276725474745, -0.010693143121898174, -0.00562733830884099, -0.0003933906555175781, -1.311301275563892e-06, -1.71661376953125e-05, -0.00250244140625, -5.14984130859375e-05, -0.003031659172847867, -0.0001850128173828125, -1.6570051229791716e-05, -0.00020599365234375, -0.0002232456172350794, -1.9073486328125e-06, -0.0008544921875, -0.000125885009765625, -0.00248563289642334, -3.814697265625e-06, -0.08676958084106445, -1.9073486328125e-06, -0.00010514008317841217, 0.0, -7.62939453125e-06, -0.0007343292236328125, -0.00136566162109375, -4.92919921875, -1.3589859008789062e-05, -1.1324882507324219e-05, -3.576278118089249e-07, -0.00032121315598487854, 0.0], "choice_history": [97, 283, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Give", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole2": 4, "_type": "Template68", "hole1": 1, "hole0": "Give"}], "hole3": "create_weapon", "hole0": "<UNK>Justice", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "PALADIN", "_type": "Template34", "hole1": 1, "hole0": "<UNK> Justice"}], "hole1": "WeaponCard"}, "score": -5.04676933487184, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Give(1, 4)\n"}, {"score_history": [-0.0010128021240234375, -0.0005550384521484375, -6.687594577670097e-05, -0.00018416276725474745, -0.010693143121898174, -0.00562733830884099, -0.0003933906555175781, -1.311301275563892e-06, -1.71661376953125e-05, -0.00250244140625, -5.14984130859375e-05, -0.003031659172847867, -0.0001850128173828125, -1.6570051229791716e-05, -0.00020599365234375, -0.0002232456172350794, -1.9073486328125e-06, -0.0008544921875, -0.000125885009765625, -0.00248563289642334, -3.814697265625e-06, -0.08676958084106445, -1.9073486328125e-06, -0.00010514008317841217, 0.0, -7.62939453125e-06, -0.0007343292236328125, -0.00136566162109375, -5.208156585693359, 0.0, -0.0008127689361572266, -1.1920928244535389e-07, -0.0002423478290438652, 0.0], "choice_history": [97, 283, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "4", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole2": 4, "_type": "Template68", "hole1": 1, "hole0": "4"}], "hole3": "create_weapon", "hole0": "<UNK>Justice", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "PALADIN", "_type": "Template34", "hole1": 1, "hole0": "<UNK> Justice"}], "hole1": "WeaponCard"}, "score": -5.32643545226437, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return 4(1, 4)\n"}, {"score_history": [-0.0010128021240234375, -0.0005550384521484375, -6.687594577670097e-05, -0.00018416276725474745, -0.010693143121898174, -0.00562733830884099, -0.0003933906555175781, -1.311301275563892e-06, -1.71661376953125e-05, -0.00250244140625, -5.14984130859375e-05, -0.003031659172847867, -0.0001850128173828125, -1.6570051229791716e-05, -0.00020599365234375, -0.0002232456172350794, -1.9073486328125e-06, -0.0008544921875, -0.000125885009765625, -0.00248563289642334, -3.814697265625e-06, -2.5411667823791504, 0.0, -0.00017178055713884532, 0.0, -3.814697265625e-06, -0.00244140625, -0.00370025634765625, -2.909134864807129, -0.0002040863037109375, 0.0, -1.1920928244535389e-07, -7.597228977829218e-05, 0.0], "choice_history": [97, 283, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 306, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole2": 4, "_type": "Template68", "hole1": 1, "hole0": "Minion"}], "hole3": "create_minion", "hole0": "<UNK>Justice", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "PALADIN", "_type": "Template34", "hole1": 1, "hole0": "<UNK> Justice"}], "hole1": "WeaponCard"}, "score": -5.485138464925505, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(1, 4)\n"}, {"score_history": [-0.0010128021240234375, -0.0005550384521484375, -6.687594577670097e-05, -0.00018416276725474745, -0.010693143121898174, -0.00562733830884099, -0.0003933906555175781, -1.311301275563892e-06, -1.71661376953125e-05, -0.00250244140625, -5.14984130859375e-05, -0.003031659172847867, -0.0001850128173828125, -1.6570051229791716e-05, -0.00020599365234375, -0.0002232456172350794, -1.9073486328125e-06, -0.0008544921875, -0.000125885009765625, -0.00248563289642334, -3.814697265625e-06, -0.08676958084106445, -1.9073486328125e-06, -0.00010514008317841217, 0.0, -7.62939453125e-06, -0.0007343292236328125, -0.00136566162109375, -5.375372409820557, -5.233238698565401e-05, -3.933906555175781e-06, -1.1920928244535389e-07, -0.00031780917197465897, 0.0], "choice_history": [97, 283, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "PALADIN", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole2": 4, "_type": "Template68", "hole1": 1, "hole0": "PALADIN"}], "hole3": "create_weapon", "hole0": "<UNK>Justice", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "PALADIN", "_type": "Template34", "hole1": 1, "hole0": "<UNK> Justice"}], "hole1": "WeaponCard"}, "score": -5.492970235091882, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return PALADIN(1, 4)\n"}, {"score_history": [-0.0010128021240234375, -0.0005550384521484375, -6.687594577670097e-05, -0.00018416276725474745, -4.58746862411499, -0.00029988560709170997, -0.0011138670379295945, -0.00011301040649414062, -1.0728830375228426e-06, -2.288818359375e-05, -0.0020160675048828125, -4.1961669921875e-05, -0.003470675554126501, -9.5367431640625e-05, -0.00045120707363821566, -0.7069778442382812, -0.007401702459901571, 0.0, -0.00021286614355631173, -1.9073486328125e-06, -0.0005016326904296875, -0.0001659393310546875, -0.003130316734313965, -3.814697265625e-06, -0.0404888391494751, -1.9073486328125e-06, -9.178950131172314e-05, 0.0, -9.5367431640625e-06, -0.00060272216796875, -0.001422882080078125, -0.343264102935791, -2.0265579223632812e-06, -1.1920928244535389e-07, -2.3841855067985307e-07, -9.187543764710426e-05, 0.0], "choice_history": [97, 283, "<UNK>", "Justice", "<UNK>", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "<UNK>", " ", "Justice", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole2": 4, "_type": "Template68", "hole1": 1, "hole0": "Weapon"}], "hole3": "create_weapon", "hole0": "<UNK>Justice<UNK>", "_type": "Template5", "hole2": [{"hole3": "FREE", "hole2": "PALADIN", "_type": "Template34", "hole1": 1, "hole0": "<UNK> Justice Justice"}], "hole1": "WeaponCard"}, "score": -5.70128556994981, "inferred_code": "class <UNK>Justice<UNK>(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice Justice', 1, CHARACTER_CLASS.\n            PALADIN, CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}]}
{"index": 63, "beams": [{"score_history": [-0.00011444091796875, -4.38690185546875e-05, -0.0008150608628056943, -0.0001878737093647942, -0.0014983155997470021, -5.054470238974318e-05, -4.6491513785440475e-06, -3.129243850708008e-05, -5.14984130859375e-05, -2.0265558760002023e-06, 0.0, -0.0077667236328125, -3.24249267578125e-05, -0.00015305601118598133, -0.00018537044525146484, -0.00020944235438946635, -6.67572021484375e-05, -0.0013467073440551758, -0.0001964569091796875, -0.008280754089355469, -0.0001468658447265625, -4.649278707802296e-06, 0.0, -0.00011718273162841797, 0.0, -5.340576171875e-05, 0.0, -0.0005340576171875, 0.0, -1.1444091796875e-05, -0.0038051605224609375, -1.1444091796875e-05, -0.0002803409588523209, -9.894321920000948e-06, -4.982941391062923e-05, -2.0265558760002023e-06, -0.0077925920486450195, 0.0, -6.4849853515625e-05, -2.86102294921875e-05, -0.00014126300811767578, 0.0], "choice_history": [97, 283, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 5, "hole0": 6}], "hole3": "create_minion", "hole0": "LordOfTheArena", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 6, "hole0": "Lord of the Arena"}], "hole1": "MinionCard"}, "score": -0.03409088061516741, "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"score_history": [-0.00011444091796875, -4.38690185546875e-05, -0.0008150608628056943, -0.0001878737093647942, -0.0014983155997470021, -5.054470238974318e-05, -4.6491513785440475e-06, -3.129243850708008e-05, -5.14984130859375e-05, -2.0265558760002023e-06, 0.0, -0.0077667236328125, -3.24249267578125e-05, -0.00015305601118598133, -0.00018537044525146484, -0.00020944235438946635, -6.67572021484375e-05, -0.0013467073440551758, -0.0001964569091796875, -4.85781192779541, -0.015354156494140625, -0.001612067106179893, -1.9073486328125e-06, -3.457094862824306e-06, 0.0, -9.584426879882812e-05, 0.0, -4.9591064453125e-05, 0.0, -0.00054931640625, 0.0, -1.33514404296875e-05, -0.004749298095703125, -1.1444091796875e-05, -0.00030989613151177764, -8.821448318485636e-06, -5.05446623719763e-05, -1.9073468138230965e-06, -0.0076944828033447266, 0.0, -7.2479248046875e-05, -2.86102294921875e-05, -0.00014317035675048828, 0.0], "choice_history": [97, 283, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Lord", " ", "of", " ", "the", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 5, "hole0": 6}], "hole3": "create_minion", "hole0": "LordOfTheArena", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 6, "hole0": "Lord of the the Arena"}], "hole1": "MinionCard"}, "score": -4.901318783628767, "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"score_history": [-0.00011444091796875, -4.38690185546875e-05, -0.0008150608628056943, -0.0001878737093647942, -0.0014983155997470021, -5.054470238974318e-05, -4.6491513785440475e-06, -3.129243850708008e-05, -5.14984130859375e-05, -2.0265558760002023e-06, 0.0, -0.0077667236328125, -3.24249267578125e-05, -0.00015305601118598133, -0.00018537044525146484, -0.00020944235438946635, -6.67572021484375e-05, -0.0013467073440551758, -0.0001964569091796875, -0.008280754089355469, -0.0001468658447265625, -4.649278707802296e-06, 0.0, -0.00011718273162841797, 0.0, -5.340576171875e-05, 0.0, -0.0005340576171875, 0.0, -1.1444091796875e-05, -0.0038051605224609375, -1.1444091796875e-05, -0.0002803409588523209, -9.894321920000948e-06, -4.982941391062923e-05, -2.0265558760002023e-06, -5.339541435241699, 0.0, -0.000431060791015625, -7.05718994140625e-05, -0.4113885164260864, -5.7220458984375e-06], "choice_history": [97, 283, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "6", "<EOS>", "5", "<EOS>", "spell_targetable", "<EOS>", 22, 175, "False", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "spell_targetable", "_type": "Template50", "hole1": 5, "hole0": 6}], "hole3": "create_minion", "hole0": "LordOfTheArena", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 6, "hole0": "Lord of the Arena"}], "hole1": "MinionCard"}, "score": -5.777500871879511, "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, spell_targetable=True)\n"}, {"score_history": [-0.00011444091796875, -4.38690185546875e-05, -0.0008150608628056943, -0.0001878737093647942, -0.0014983155997470021, -5.054470238974318e-05, -4.6491513785440475e-06, -3.129243850708008e-05, -5.14984130859375e-05, -2.0265558760002023e-06, 0.0, -5.7996416091918945, -0.03221416473388672, -0.000324249267578125, -2.47955322265625e-05, -0.0001621237606741488, -1.9073486328125e-06, -0.0007363557815551758, -1.9073486328125e-06, -0.031106948852539062, -0.0007152557373046875, -9.5367431640625e-05, -0.00016890889673959464, -8.0108642578125e-05, -0.00012552450061775744, -9.918212890625e-05, -0.000870466057676822, -0.001277923583984375, -0.03694732114672661, -0.0031604766845703125, -1.33514404296875e-05, -3.814697265625e-06, -0.00011241207539569587, -1.9073486328125e-06, -0.0001678466796875, 0.0, -2.288818359375e-05, -1.71661376953125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.000308990478515625, -1.9073486328125e-06, -0.0002899169921875, 0.0, -1.33514404296875e-05, 0.0, -0.0002079010009765625, -5.14984130859375e-05, -0.2144012451171875, -5.7220458984375e-06, -7.62939453125e-05, -4.1961669921875e-05, -5.53131103515625e-05, -0.0001354217529296875, -0.00070953369140625, 0.0, -0.014287948608398438, 0.0, -0.0001392364501953125, -0.015394210815429688, -9.5367431640625e-05, -0.0005190217634662986, -5.960462772236497e-07, -0.00026045163394883275, 0.0, -0.0023766756057739258, 0.0, -7.2479248046875e-05, -1.9073486328125e-05, -6.496906280517578e-05, 0.0], "choice_history": [97, 283, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 52, 179, "6", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 130, 287, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "p", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 5, "hole0": 6}], "hole3": "create_minion", "hole0": "LordOfTheArena", "_type": "Template5", "hole2": [{"hole2": [{"_type": "Str", "s": "Lord of the Arena"}, {"n": 6, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -6.160443622554851, "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, True)\n\n    def create_minion(self, p):\n        return Minion(6, 5, taunt=True)\n"}, {"score_history": [-0.00011444091796875, -4.38690185546875e-05, -0.0008150608628056943, -0.0001878737093647942, -0.0014983155997470021, -5.054470238974318e-05, -4.6491513785440475e-06, -3.129243850708008e-05, -5.14984130859375e-05, -2.0265558760002023e-06, 0.0, -0.0077667236328125, -3.24249267578125e-05, -0.00015305601118598133, -0.00018537044525146484, -0.00020944235438946635, -6.67572021484375e-05, -0.0013467073440551758, -0.0001964569091796875, -0.008280754089355469, -0.0001468658447265625, -4.649278707802296e-06, 0.0, -0.00011718273162841797, 0.0, -5.340576171875e-05, 0.0, -0.0005340576171875, 0.0, -1.1444091796875e-05, -0.0038051605224609375, -1.1444091796875e-05, -0.0002803409588523209, -9.894321920000948e-06, -4.982941391062923e-05, -2.0265558760002023e-06, -6.2996625900268555, 0.0, -0.000522613525390625, -5.7220458984375e-05, -0.0008393526077270508, -1.9073486328125e-06], "choice_history": [97, 283, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "6", "<EOS>", "5", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "divine_shield", "_type": "Template50", "hole1": 5, "hole0": 6}], "hole3": "create_minion", "hole0": "LordOfTheArena", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 6, "hole0": "Lord of the Arena"}], "hole1": "MinionCard"}, "score": -6.327147249442987, "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, divine_shield=True)\n"}, {"score_history": [-0.00011444091796875, -4.38690185546875e-05, -0.0008150608628056943, -0.0001878737093647942, -0.0014983155997470021, -5.054470238974318e-05, -4.6491513785440475e-06, -3.129243850708008e-05, -5.14984130859375e-05, -2.0265558760002023e-06, 0.0, -0.0077667236328125, -3.24249267578125e-05, -0.00015305601118598133, -0.00018537044525146484, -0.00020944235438946635, -6.67572021484375e-05, -0.0013467073440551758, -0.0001964569091796875, -0.008280754089355469, -0.0001468658447265625, -4.649278707802296e-06, 0.0, -0.00011718273162841797, 0.0, -5.340576171875e-05, 0.0, -0.0005340576171875, 0.0, -1.1444091796875e-05, -0.0038051605224609375, -1.1444091796875e-05, -0.0002803409588523209, -9.894321920000948e-06, -4.982941391062923e-05, -2.0265558760002023e-06, -5.339541435241699, 0.0, -0.000431060791015625, -7.05718994140625e-05, -1.0952483415603638, -1.9073486328125e-06], "choice_history": [97, 283, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "6", "<EOS>", "5", "<EOS>", "spell_targetable", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "spell_targetable", "_type": "Template50", "hole1": 5, "hole0": 6}], "hole3": "create_minion", "hole0": "LordOfTheArena", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 6, "hole0": "Lord of the Arena"}], "hole1": "MinionCard"}, "score": -6.461356882316522, "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, spell_targetable=True)\n"}, {"score_history": [-0.00011444091796875, -4.38690185546875e-05, -0.0008150608628056943, -0.0001878737093647942, -0.0014983155997470021, -5.054470238974318e-05, -4.6491513785440475e-06, -3.129243850708008e-05, -5.14984130859375e-05, -2.0265558760002023e-06, 0.0, -0.0077667236328125, -3.24249267578125e-05, -0.00015305601118598133, -0.00018537044525146484, -0.00020944235438946635, -6.67572021484375e-05, -0.0013467073440551758, -0.0001964569091796875, -0.008280754089355469, -0.0001468658447265625, -4.649278707802296e-06, 0.0, -0.00011718273162841797, 0.0, -5.340576171875e-05, 0.0, -0.0005340576171875, 0.0, -1.1444091796875e-05, -5.973608016967773, -0.0004901885986328125, -0.0002199411392211914, -7.62939453125e-05, -5.364403477869928e-06, 0.0, -0.000224707429879345, -2.50339189733495e-06, -0.013562202453613281, -0.003040313720703125, -5.340576171875e-05, -0.21765518188476562, -5.7220458984375e-06, -9.5367431640625e-05, -1.52587890625e-05, -0.0007939338684082031, 0.0, -0.08679008483886719, -0.0002899169921875, -0.04470348358154297, -0.0002269744873046875, -0.0011510848999023438, -4.1961669921875e-05, -0.4702720642089844, -7.62939453125e-06], "choice_history": [97, 283, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "6", "<EOS>", "5", "<EOS>", 354, 95, 336, "taunt", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "spell_targetable", "<EOS>", 22, 175, "False", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": [{"value": {"value": true, "_type": "NameConstant"}, "_type": "keyword", "arg": "taunt"}, {"value": {"value": true, "_type": "NameConstant"}, "_type": "keyword", "arg": "spell_targetable"}], "hole2": 5, "_type": "Template68", "hole1": 6, "hole0": "Minion"}], "hole3": "create_minion", "hole0": "LordOfTheArena", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 6, "hole0": "Lord of the Arena"}], "hole1": "MinionCard"}, "score": -6.835236471515827, "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True, spell_targetable=True)\n"}, {"score_history": [-0.00011444091796875, -4.38690185546875e-05, -0.0008150608628056943, -0.0001878737093647942, -0.0014983155997470021, -5.054470238974318e-05, -4.6491513785440475e-06, -3.129243850708008e-05, -5.14984130859375e-05, -2.0265558760002023e-06, 0.0, -0.0077667236328125, -3.24249267578125e-05, -0.00015305601118598133, -0.00018537044525146484, -0.00020944235438946635, -6.67572021484375e-05, -6.613689422607422, -0.000125885009765625, -0.5791721343994141, -0.00054168701171875, -0.0018951892852783203, -7.62939453125e-06, -4.053142220072914e-06, 0.0, -0.0001666545867919922, 0.0, -4.38690185546875e-05, 0.0, -0.00057220458984375, 0.0, -1.33514404296875e-05, -0.0047855377197265625, -1.1444091796875e-05, -0.00029380773776210845, -9.179073458653875e-06, -5.0187038141302764e-05, -1.9073468138230965e-06, -0.007793545722961426, 0.0, -7.05718994140625e-05, -2.86102294921875e-05, -0.00014126300811767578, 0.0], "choice_history": [97, 283, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Lord", " ", "of", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 5, "hole0": 6}], "hole3": "create_minion", "hole0": "LordOfTheArena", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 6, "hole0": "Lord of of the Arena"}], "hole1": "MinionCard"}, "score": -7.220631480295879, "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"score_history": [-0.00011444091796875, -4.38690185546875e-05, -7.230200290679932, -0.000683426798786968, -0.002456598449498415, -5.733930811402388e-05, -2.50339189733495e-06, -3.7670135498046875e-05, -4.1961669921875e-05, -2.0265558760002023e-06, -1.9073486328125e-06, -0.001552581787109375, -2.6702880859375e-05, -0.0001367256772937253, -0.00024259090423583984, -0.00016509945271536708, -6.866455078125e-05, -0.0015183687210083008, -0.0001926422119140625, -0.00800168514251709, -0.0001354217529296875, -5.245319698587991e-06, 0.0, -0.00010573863983154297, 0.0, -6.103515625e-05, 0.0, -0.000583648681640625, 0.0, -1.1444091796875e-05, -0.0040454864501953125, -1.1444091796875e-05, -0.0002643712505232543, -9.894321920000948e-06, -4.947178967995569e-05, -2.0265558760002023e-06, -0.007855772972106934, 0.0, -6.4849853515625e-05, -2.86102294921875e-05, -0.00014126300811767578, 0.0], "choice_history": [97, 283, "<UNK>", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 5, "hole0": 6}], "hole3": "create_minion", "hole0": "<UNK>OfTheArena", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 6, "hole0": "Lord of the Arena"}], "hole1": "MinionCard"}, "score": -7.258922819768486, "inferred_code": "class <UNK>OfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"score_history": [-0.00011444091796875, -4.38690185546875e-05, -0.0008150608628056943, -0.0001878737093647942, -0.0014983155997470021, -5.054470238974318e-05, -4.6491513785440475e-06, -3.129243850708008e-05, -5.14984130859375e-05, -2.0265558760002023e-06, 0.0, -0.0077667236328125, -3.24249267578125e-05, -0.00015305601118598133, -0.00018537044525146484, -0.00020944235438946635, -6.67572021484375e-05, -0.0013467073440551758, -0.0001964569091796875, -0.008280754089355469, -0.0001468658447265625, -4.649278707802296e-06, 0.0, -0.00011718273162841797, 0.0, -5.340576171875e-05, 0.0, -0.0005340576171875, 0.0, -1.1444091796875e-05, -5.973608016967773, -0.0004901885986328125, -0.0002199411392211914, -7.62939453125e-05, -5.364403477869928e-06, 0.0, -0.000224707429879345, -2.50339189733495e-06, -0.013562202453613281, -0.003040313720703125, -5.340576171875e-05, -0.21765518188476562, -5.7220458984375e-06, -9.5367431640625e-05, -1.52587890625e-05, -0.0007939338684082031, 0.0, -0.08679008483886719, -0.0002899169921875, -0.04470348358154297, -0.0002269744873046875, -0.0011510848999023438, -4.1961669921875e-05, -0.9824562072753906, -1.9073486328125e-06], "choice_history": [97, 283, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "6", "<EOS>", "5", "<EOS>", 354, 95, 336, "taunt", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "spell_targetable", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": [{"value": {"value": true, "_type": "NameConstant"}, "_type": "keyword", "arg": "taunt"}, {"value": {"value": true, "_type": "NameConstant"}, "_type": "keyword", "arg": "spell_targetable"}], "hole2": 5, "_type": "Template68", "hole1": 6, "hole0": "Minion"}], "hole3": "create_minion", "hole0": "LordOfTheArena", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 6, "hole0": "Lord of the Arena"}], "hole1": "MinionCard"}, "score": -7.347414892536335, "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True, spell_targetable=True)\n"}, {"score_history": [-0.00011444091796875, -4.38690185546875e-05, -0.0008150608628056943, -0.0001878737093647942, -0.0014983155997470021, -5.054470238974318e-05, -4.6491513785440475e-06, -3.129243850708008e-05, -5.14984130859375e-05, -2.0265558760002023e-06, 0.0, -0.0077667236328125, -3.24249267578125e-05, -0.00015305601118598133, -0.00018537044525146484, -0.00020944235438946635, -6.67572021484375e-05, -6.613689422607422, -0.000125885009765625, -0.8242874145507812, -0.002826690673828125, -6.0800794017268345e-06, 0.0, -0.0006593465805053711, 0.0, -4.1961669921875e-05, 0.0, -0.0006771087646484375, 0.0, -9.5367431640625e-06, -0.0035572052001953125, -1.33514404296875e-05, -0.00025614796322770417, -9.536697689327411e-06, -5.43593596376013e-05, -2.0265558760002023e-06, -0.007711172103881836, 0.0, -6.103515625e-05, -2.86102294921875e-05, -0.00014126300811767578, 0.0], "choice_history": [97, 283, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Lord", " ", "of", " ", "of", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 5, "hole0": 6}], "hole3": "create_minion", "hole0": "LordOfTheArena", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 6, "hole0": "Lord of of Arena"}], "hole1": "MinionCard"}, "score": -7.46537150033646, "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of of Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"score_history": [-0.00011444091796875, -4.38690185546875e-05, -0.0008150608628056943, -0.0001878737093647942, -7.661142349243164, -0.05664733052253723, -2.2411095415009186e-05, -1.5813857316970825e-05, -5.340576171875e-05, -2.622600959512056e-06, -1.9073486328125e-06, -0.014341354370117188, -3.24249267578125e-05, -0.000148764782352373, -0.00019109249114990234, -0.00020681909518316388, -6.4849853515625e-05, -0.0013352632522583008, -0.000194549560546875, -0.007845520973205566, -0.0001659393310546875, -5.1261085900478065e-06, 0.0, -0.00012862682342529297, 0.0, -5.340576171875e-05, 0.0, -0.000583648681640625, 0.0, -1.1444091796875e-05, -0.0038623809814453125, -1.1444091796875e-05, -0.0002735478919930756, -1.0013530300057027e-05, -4.982941391062923e-05, -2.0265558760002023e-06, -0.0077980756759643555, 0.0, -6.4849853515625e-05, -2.86102294921875e-05, -0.00014126300811767578, 0.0], "choice_history": [97, 283, "Lord", "Of", "Of", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 5, "hole0": 6}], "hole3": "create_minion", "hole0": "LordOfOfArena", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 6, "hole0": "Lord of the Arena"}], "hole1": "MinionCard"}, "score": -7.756597956274163, "inferred_code": "class LordOfOfArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"score_history": [-0.00011444091796875, -4.38690185546875e-05, -0.0008150608628056943, -0.0001878737093647942, -0.0014983155997470021, -5.054470238974318e-05, -4.6491513785440475e-06, -3.129243850708008e-05, -5.14984130859375e-05, -2.0265558760002023e-06, 0.0, -5.7996416091918945, -0.03221416473388672, -0.000324249267578125, -2.47955322265625e-05, -0.0001621237606741488, -1.9073486328125e-06, -0.0007363557815551758, -1.9073486328125e-06, -0.031106948852539062, -0.0007152557373046875, -9.5367431640625e-05, -0.00016890889673959464, -8.0108642578125e-05, -0.00012552450061775744, -9.918212890625e-05, -0.000870466057676822, -0.001277923583984375, -0.03694732114672661, -0.0031604766845703125, -1.33514404296875e-05, -3.814697265625e-06, -0.00011241207539569587, -1.9073486328125e-06, -0.0001678466796875, 0.0, -2.288818359375e-05, -1.71661376953125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.000308990478515625, -1.9073486328125e-06, -0.0002899169921875, 0.0, -1.33514404296875e-05, 0.0, -0.0002079010009765625, -5.14984130859375e-05, -1.7008247375488281, -3.814697265625e-06, -0.0001373291015625, -4.00543212890625e-05, -4.00543212890625e-05, -3.62396240234375e-05, -0.0004177093505859375, 0.0, -0.19631493091583252, 0.0, -6.29425048828125e-05, -0.011137008666992188, -6.4849853515625e-05, -0.0006050424999557436, -7.152555099310121e-07, -0.00019477744353935122, 0.0, -0.0023385286331176758, 0.0, -6.67572021484375e-05, -1.9073486328125e-05, -6.115436553955078e-05, 0.0], "choice_history": [97, 283, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 52, 179, "6", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 130, 287, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "p", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 5, "hole0": 6}], "hole3": "create_minion", "hole0": "LordOfTheArena", "_type": "Template5", "hole2": [{"hole2": [{"_type": "Str", "s": "Lord of the Arena"}, {"n": 6, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -7.8241538208617385, "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True)\n\n    def create_minion(self, p):\n        return Minion(6, 5, taunt=True)\n"}, {"score_history": [-0.00011444091796875, -4.38690185546875e-05, -0.0008150608628056943, -0.0001878737093647942, -0.0014983155997470021, -5.054470238974318e-05, -4.6491513785440475e-06, -3.129243850708008e-05, -5.14984130859375e-05, -2.0265558760002023e-06, 0.0, -0.0077667236328125, -3.24249267578125e-05, -0.00015305601118598133, -0.00018537044525146484, -0.00020944235438946635, -6.67572021484375e-05, -0.0013467073440551758, -0.0001964569091796875, -7.9828972816467285, -1.9073486328125e-06, -3.731189281097613e-05, 0.0, -0.0011663436889648438, 0.0, -5.14984130859375e-05, 0.0, -0.0003567934036254883, 0.0, -1.1444091796875e-05, -0.002605438232421875, -1.33514404296875e-05, -0.00031275625224225223, -8.4638240878121e-06, -5.0187038141302764e-05, -2.0265558760002023e-06, -0.008312702178955078, 0.0, -5.7220458984375e-05, -2.6702880859375e-05, -0.00013172626495361328, 0.0], "choice_history": [97, 283, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Lord", " ", "of", " ", "the", " ", "6", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 5, "hole0": 6}], "hole3": "create_minion", "hole0": "LordOfTheArena", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 6, "hole0": "Lord of the 6"}], "hole1": "MinionCard"}, "score": -8.008799665808056, "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the 6', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"score_history": [-0.00011444091796875, -4.38690185546875e-05, -0.0008150608628056943, -0.0001878737093647942, -0.0014983155997470021, -5.054470238974318e-05, -4.6491513785440475e-06, -3.129243850708008e-05, -5.14984130859375e-05, -2.0265558760002023e-06, 0.0, -0.0077667236328125, -3.24249267578125e-05, -0.00015305601118598133, -0.00018537044525146484, -0.00020944235438946635, -6.67572021484375e-05, -0.0013467073440551758, -0.0001964569091796875, -0.008280754089355469, -0.0001468658447265625, -4.649278707802296e-06, 0.0, -0.00011718273162841797, 0.0, -5.340576171875e-05, 0.0, -8.023116111755371, 0.0, -5.14984130859375e-05, -0.003978729248046875, -1.52587890625e-05, -7.080780778778717e-05, -8.344646857949556e-07, -5.2094299462623894e-05, -8.344646857949556e-07, -0.004014015197753906, 0.0, -5.53131103515625e-05, -2.86102294921875e-05, -0.00012028217315673828, 0.0], "choice_history": [97, 283, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 130, 287, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole4": "p", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole2": "taunt", "_type": "Template50", "hole1": 5, "hole0": 6}], "hole3": "create_minion", "hole0": "LordOfTheArena", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 6, "hole0": "Lord of the Arena"}], "hole1": "MinionCard"}, "score": -8.052863757854539, "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, p):\n        return Minion(6, 5, taunt=True)\n"}]}
{"index": 64, "beams": [{"score_history": [-1.33514404296875e-05, -4.9591064453125e-05, -2.145764938177308e-06, -6.437280717364047e-06, -4.386805812828243e-05, -1.1918018572032452e-07, -4.088878631591797e-05, -4.649161837733118e-06, -2.86102294921875e-05, -0.00112152099609375, -0.012402534484863281, -0.00012969970703125, -4.38690185546875e-05, -1.823902130126953e-05, -1.9073486328125e-06, -0.0001010894775390625, -2.86102294921875e-05, -0.0013751983642578125, -0.0005359649658203125, -2.288818359375e-05, -2.0503914129221812e-05, -0.0001429318217560649, -4.768367489305092e-06, -9.1552734375e-05, 0.0, -1.9073486328125e-06, -3.9815906347939745e-05, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.7404556274414062e-05, 0.0, -1.3470649719238281e-05, -5.7220458984375e-06, -0.0002593994140625, -1.9073486328125e-06, -0.000354766845703125, 0.0, -3.707408905029297e-05, -0.00017940998077392578, -0.005565643310546875, -1.9073486328125e-06, -8.7738037109375e-05, -1.1444091796875e-05, -4.470348358154297e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.002513885498046875, -0.0005321502685546875, -0.011821866035461426, 0.0, -4.76837158203125e-05, 0.0, -0.0008227825164794922, 0.0, -0.0001506805419921875, -4.76837158203125e-05, -2.86102294921875e-05, -9.596345626050606e-05, -2.3841855067985307e-07, -6.484967161668465e-05, -8.106198947643861e-06], "choice_history": [97, 283, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Mechanical", " ", "Dragonling", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "MechanicalDragonling", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "MECH"}], "hole2": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -0.039123176078163624, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score_history": [-1.33514404296875e-05, -4.9591064453125e-05, -2.145764938177308e-06, -6.437280717364047e-06, -4.386805812828243e-05, -1.1918018572032452e-07, -4.088878631591797e-05, -4.649161837733118e-06, -2.86102294921875e-05, -0.00112152099609375, -5.173624038696289, -4.38690185546875e-05, -1.1444091796875e-05, -1.0490406566532329e-05, -7.62939453125e-06, -0.00016987323760986328, -5.7220458984375e-06, -0.0045318603515625, -0.0006923675537109375, -1.52587890625e-05, -2.6821906430996023e-05, -0.00013887880777474493, -4.52994936495088e-06, -3.063678741455078e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.5510787963867188e-05, -1.1920928244535389e-07, -4.38690185546875e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.7404556274414062e-05, -1.9073486328125e-06, -1.537799835205078e-05, -5.7220458984375e-06, -0.00045013427734375, -1.9073486328125e-06, -0.00054168701171875, 0.0, -3.707408905029297e-05, -0.00020802021026611328, -0.0059833526611328125, -1.9073486328125e-06, -6.29425048828125e-05, -1.33514404296875e-05, -4.291534423828125e-05, -1.9073486328125e-06, -3.3140171581180766e-05, 0.0, -0.015249013900756836, 0.0, -0.0001316070556640625, -4.38690185546875e-05, -0.0001621246337890625, -0.00016104419773910195, 0.0, -0.00024090064107440412, -1.4305104514278355e-06], "choice_history": [97, 283, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Mechanical", " ", "Dragonling", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "MechanicalDragonling", "_type": "Template5", "hole2": [{"hole2": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -5.204135268605448, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score_history": [-1.33514404296875e-05, -4.9591064453125e-05, -2.145764938177308e-06, -6.437280717364047e-06, -4.386805812828243e-05, -1.1918018572032452e-07, -4.088878631591797e-05, -4.649161837733118e-06, -2.86102294921875e-05, -0.00112152099609375, -0.012402534484863281, -0.00012969970703125, -4.38690185546875e-05, -1.823902130126953e-05, -1.9073486328125e-06, -0.0001010894775390625, -2.86102294921875e-05, -0.0013751983642578125, -0.0005359649658203125, -2.288818359375e-05, -2.0503914129221812e-05, -0.0001429318217560649, -4.768367489305092e-06, -9.1552734375e-05, 0.0, -1.9073486328125e-06, -3.9815906347939745e-05, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.7404556274414062e-05, 0.0, -1.3470649719238281e-05, -5.7220458984375e-06, -0.0002593994140625, -1.9073486328125e-06, -0.000354766845703125, 0.0, -3.707408905029297e-05, -0.00017940998077392578, -0.005565643310546875, -1.9073486328125e-06, -8.7738037109375e-05, -1.1444091796875e-05, -4.470348358154297e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.002513885498046875, -0.0005321502685546875, -6.036264419555664, 0.0, -0.000522613525390625, 0.0, -0.00021946430206298828, 0.0, -0.0001506805419921875, -4.00543212890625e-05, -3.24249267578125e-05, -9.858606063062325e-05, -3.576278118089249e-07, -5.960441194474697e-05, -7.390948667307384e-06], "choice_history": [97, 283, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Mechanical", " ", "Dragonling", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "MechanicalDragonling", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "MURLOC"}], "hole2": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -6.063430307799933, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score_history": [-1.33514404296875e-05, -4.9591064453125e-05, -2.145764938177308e-06, -6.437280717364047e-06, -4.386805812828243e-05, -1.1918018572032452e-07, -4.088878631591797e-05, -4.649161837733118e-06, -2.86102294921875e-05, -0.00112152099609375, -0.012402534484863281, -0.00012969970703125, -4.38690185546875e-05, -1.823902130126953e-05, -1.9073486328125e-06, -0.0001010894775390625, -2.86102294921875e-05, -0.0013751983642578125, -0.0005359649658203125, -2.288818359375e-05, -2.0503914129221812e-05, -0.0001429318217560649, -4.768367489305092e-06, -9.1552734375e-05, 0.0, -1.9073486328125e-06, -3.9815906347939745e-05, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.7404556274414062e-05, 0.0, -1.3470649719238281e-05, -5.7220458984375e-06, -0.0002593994140625, -1.9073486328125e-06, -0.000354766845703125, 0.0, -3.707408905029297e-05, -0.00017940998077392578, -0.005565643310546875, -1.9073486328125e-06, -8.7738037109375e-05, -1.1444091796875e-05, -4.470348358154297e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.002513885498046875, -0.0005321502685546875, -6.096958160400391, 0.0, -0.00048065185546875, 0.0, -0.00030553340911865234, 0.0, -7.2479248046875e-05, -3.62396240234375e-05, -3.4332275390625e-05, -0.00011181829177075997, -2.3841855067985307e-07, -6.198862683959305e-05, -6.6756979322235566e-06], "choice_history": [97, 283, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Mechanical", " ", "Dragonling", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "MechanicalDragonling", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "TOTEM"}], "hole2": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -6.124102829425254, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score_history": [-1.33514404296875e-05, -4.9591064453125e-05, -2.145764938177308e-06, -6.437280717364047e-06, -4.386805812828243e-05, -1.1918018572032452e-07, -4.088878631591797e-05, -4.649161837733118e-06, -2.86102294921875e-05, -0.00112152099609375, -0.012402534484863281, -0.00012969970703125, -4.38690185546875e-05, -1.823902130126953e-05, -1.9073486328125e-06, -0.0001010894775390625, -2.86102294921875e-05, -0.0013751983642578125, -0.0005359649658203125, -2.288818359375e-05, -2.0503914129221812e-05, -0.0001429318217560649, -4.768367489305092e-06, -9.1552734375e-05, 0.0, -1.9073486328125e-06, -3.9815906347939745e-05, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.7404556274414062e-05, 0.0, -1.3470649719238281e-05, -5.7220458984375e-06, -0.0002593994140625, -1.9073486328125e-06, -0.000354766845703125, 0.0, -3.707408905029297e-05, -0.00017940998077392578, -0.005565643310546875, -1.9073486328125e-06, -8.7738037109375e-05, -1.1444091796875e-05, -4.470348358154297e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.002513885498046875, -0.0005321502685546875, -6.246029853820801, -2.6702880859375e-05, -0.0004329681396484375, 0.0, -0.00025773048400878906, 0.0, -6.866455078125e-05, -3.62396240234375e-05, -2.6702880859375e-05, -0.00010371206008130684, -3.576278118089249e-07, -6.043886241968721e-05, -8.702239938429557e-06], "choice_history": [97, 283, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Mechanical", " ", "Dragonling", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "hearthbreaker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "MechanicalDragonling", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "hearthbreaker"}], "hole2": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -6.273086784748955, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.hearthbreaker)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score_history": [-1.33514404296875e-05, -4.9591064453125e-05, -2.145764938177308e-06, -6.437280717364047e-06, -4.386805812828243e-05, -1.1918018572032452e-07, -4.088878631591797e-05, -4.649161837733118e-06, -2.86102294921875e-05, -0.00112152099609375, -0.012402534484863281, -0.00012969970703125, -4.38690185546875e-05, -1.823902130126953e-05, -1.9073486328125e-06, -0.0001010894775390625, -2.86102294921875e-05, -0.0013751983642578125, -0.0005359649658203125, -2.288818359375e-05, -2.0503914129221812e-05, -0.0001429318217560649, -4.768367489305092e-06, -9.1552734375e-05, 0.0, -1.9073486328125e-06, -3.9815906347939745e-05, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.7404556274414062e-05, 0.0, -1.3470649719238281e-05, -5.7220458984375e-06, -0.0002593994140625, -1.9073486328125e-06, -0.000354766845703125, 0.0, -3.707408905029297e-05, -0.00017940998077392578, -6.271727561950684, -3.814697265625e-06, -8.20159912109375e-05, -7.62939453125e-06, -5.0902366638183594e-05, -1.9073486328125e-06, -6.103515625e-05, -0.001468658447265625, -0.0003299713134765625, -0.017206311225891113, 0.0, -4.00543212890625e-05, 0.0, -0.0009925365447998047, 0.0, -0.000354766845703125, -5.14984130859375e-05, -2.47955322265625e-05, -9.584424697095528e-05, -2.3841855067985307e-07, -6.46112603135407e-05, -8.4638240878121e-06], "choice_history": [97, 283, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Mechanical", " ", "Dragonling", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "MechanicalDragonling", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "MECH"}], "hole2": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -6.309804080471139, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score_history": [-1.33514404296875e-05, -4.9591064453125e-05, -2.145764938177308e-06, -6.437280717364047e-06, -4.386805812828243e-05, -1.1918018572032452e-07, -4.088878631591797e-05, -4.649161837733118e-06, -2.86102294921875e-05, -0.00112152099609375, -0.012402534484863281, -0.00012969970703125, -4.38690185546875e-05, -1.823902130126953e-05, -1.9073486328125e-06, -0.0001010894775390625, -2.86102294921875e-05, -0.0013751983642578125, -0.0005359649658203125, -2.288818359375e-05, -2.0503914129221812e-05, -0.0001429318217560649, -4.768367489305092e-06, -9.1552734375e-05, 0.0, -1.9073486328125e-06, -3.9815906347939745e-05, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.7404556274414062e-05, 0.0, -1.3470649719238281e-05, -5.7220458984375e-06, -0.0002593994140625, -1.9073486328125e-06, -0.000354766845703125, 0.0, -3.707408905029297e-05, -0.00017940998077392578, -6.523009300231934, 0.0, -0.00017547607421875, -9.5367431640625e-06, -6.99758529663086e-05, -1.9073486328125e-06, -0.0001087188720703125, -0.0016956329345703125, -0.0003795623779296875, -0.01772129535675049, 0.0, -5.340576171875e-05, 0.0, -0.0008552074432373047, 0.0, -0.0003414154052734375, -5.14984130859375e-05, -2.47955322265625e-05, -9.417531691724434e-05, -2.3841855067985307e-07, -6.473046232713386e-05, -8.583032467868179e-06], "choice_history": [97, 283, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Mechanical", " ", "Dragonling", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "minion_type", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "MechanicalDragonling", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "MECH"}], "hole2": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "minion_type"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -6.561896918750307, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.minion_type, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score_history": [-1.33514404296875e-05, -4.9591064453125e-05, -2.145764938177308e-06, -6.437280717364047e-06, -4.386805812828243e-05, -1.1918018572032452e-07, -4.088878631591797e-05, -4.649161837733118e-06, -2.86102294921875e-05, -0.00112152099609375, -0.012402534484863281, -0.00012969970703125, -4.38690185546875e-05, -1.823902130126953e-05, -1.9073486328125e-06, -0.0001010894775390625, -2.86102294921875e-05, -0.0013751983642578125, -0.0005359649658203125, -2.288818359375e-05, -2.0503914129221812e-05, -0.0001429318217560649, -4.768367489305092e-06, -9.1552734375e-05, 0.0, -1.9073486328125e-06, -3.9815906347939745e-05, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.7404556274414062e-05, 0.0, -1.3470649719238281e-05, -5.7220458984375e-06, -0.0002593994140625, -1.9073486328125e-06, -0.000354766845703125, 0.0, -3.707408905029297e-05, -0.00017940998077392578, -0.005565643310546875, -1.9073486328125e-06, -8.7738037109375e-05, -1.1444091796875e-05, -4.470348358154297e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.002513885498046875, -0.0005321502685546875, -7.110528945922852, 0.0, -0.001739501953125, 0.0, -0.00042641162872314453, 0.0, -0.00011444091796875, -4.00543212890625e-05, -4.38690185546875e-05, -0.00010299679706804454, -2.3841855067985307e-07, -6.341910921037197e-05, -7.033323527139146e-06], "choice_history": [97, 283, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Mechanical", " ", "Dragonling", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "MechanicalDragonling", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "DEMON"}], "hole2": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -7.139101622988591, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score_history": [-1.33514404296875e-05, -4.9591064453125e-05, -2.145764938177308e-06, -6.437280717364047e-06, -4.386805812828243e-05, -1.1918018572032452e-07, -4.088878631591797e-05, -4.649161837733118e-06, -2.86102294921875e-05, -0.00112152099609375, -0.012402534484863281, -0.00012969970703125, -4.38690185546875e-05, -1.823902130126953e-05, -1.9073486328125e-06, -0.0001010894775390625, -2.86102294921875e-05, -0.0013751983642578125, -0.0005359649658203125, -2.288818359375e-05, -2.0503914129221812e-05, -0.0001429318217560649, -4.768367489305092e-06, -9.1552734375e-05, 0.0, -1.9073486328125e-06, -3.9815906347939745e-05, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.7404556274414062e-05, 0.0, -1.3470649719238281e-05, -5.7220458984375e-06, -0.0002593994140625, -1.9073486328125e-06, -0.000354766845703125, 0.0, -3.707408905029297e-05, -0.00017940998077392578, -0.005565643310546875, -1.9073486328125e-06, -8.7738037109375e-05, -1.1444091796875e-05, -4.470348358154297e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.002513885498046875, -0.0005321502685546875, -0.011821866035461426, 0.0, -4.76837158203125e-05, 0.0, -7.341332912445068, -1.9073486328125e-06, -8.20159912109375e-05, -9.918212890625e-05, -8.20159912109375e-05, -0.00010085094254463911, -4.768370445162873e-07, -5.388252611737698e-05, -1.2159294783486985e-05], "choice_history": [97, 283, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Mechanical", " ", "Dragonling", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "p", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "MechanicalDragonling", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "MECH"}], "hole2": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -7.379669664834523, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, p):\n        return Minion(2, 1)\n"}, {"score_history": [-1.33514404296875e-05, -4.9591064453125e-05, -2.145764938177308e-06, -6.437280717364047e-06, -4.386805812828243e-05, -1.1918018572032452e-07, -4.088878631591797e-05, -4.649161837733118e-06, -2.86102294921875e-05, -0.00112152099609375, -0.012402534484863281, -0.00012969970703125, -4.38690185546875e-05, -1.823902130126953e-05, -1.9073486328125e-06, -0.0001010894775390625, -2.86102294921875e-05, -0.0013751983642578125, -0.0005359649658203125, -2.288818359375e-05, -2.0503914129221812e-05, -0.0001429318217560649, -4.768367489305092e-06, -9.1552734375e-05, 0.0, -1.9073486328125e-06, -3.9815906347939745e-05, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.7404556274414062e-05, 0.0, -1.3470649719238281e-05, -5.7220458984375e-06, -0.0002593994140625, -1.9073486328125e-06, -0.000354766845703125, 0.0, -3.707408905029297e-05, -0.00017940998077392578, -7.367731094360352, -3.814697265625e-06, -9.5367431640625e-05, -1.52587890625e-05, -6.151199340820312e-05, -1.9073486328125e-06, -5.91278076171875e-05, -0.00186920166015625, -0.0004367828369140625, -0.012518882751464844, 0.0, -2.6702880859375e-05, 0.0, -0.0009888410568237305, 0.0, -0.000274658203125, -4.9591064453125e-05, -2.47955322265625e-05, -9.596345626050606e-05, -2.3841855067985307e-07, -6.496888090623543e-05, -8.702239938429557e-06], "choice_history": [97, 283, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Mechanical", " ", "Dragonling", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "MechanicalDragonling", "_type": "Template5", "hole2": [{"hole3": [{"_type": "Template75", "hole0": "MECH"}], "hole2": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -7.401558874581923, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score_history": [-1.33514404296875e-05, -4.9591064453125e-05, -2.145764938177308e-06, -6.437280717364047e-06, -4.386805812828243e-05, -1.1918018572032452e-07, -4.088878631591797e-05, -4.649161837733118e-06, -2.86102294921875e-05, -7.410478591918945, -0.000286102294921875, 0.0, -0.0006694315816275775, -3.576278118089249e-07, -0.0001971721649169922, -4.518021160038188e-05, 0.0, -0.000942230224609375, -1.52587890625e-05, -0.05402684211730957, -2.0265579223632812e-06, -0.0058193206787109375, -1.1444091796875e-05, -0.0001735687255859375, 0.0, -3.2782554626464844e-05, -1.9073486328125e-06, -0.0018901824951171875, 0.0, -4.76837158203125e-05, 0.0, -0.007417917251586914, 0.0, -7.82012939453125e-05, -0.00054931640625, -2.09808349609375e-05, -6.377695535775274e-05, -1.1920928244535389e-07, -5.006782885175198e-05, -7.152531907195225e-06], "choice_history": [97, 283, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Mechanical", " ", "Dragonling", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "MechanicalDragonling", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "hole3": "minion_type", "hole0": "Mechanical Dragonling", "_type": "Template27", "hole2": "ALL", "hole1": 1}], "hole1": "MinionCard"}, "score": -7.483017276377659, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score_history": [-1.33514404296875e-05, -4.9591064453125e-05, -2.145764938177308e-06, -6.437280717364047e-06, -4.386805812828243e-05, -1.1918018572032452e-07, -4.088878631591797e-05, -4.649161837733118e-06, -2.86102294921875e-05, -7.920856475830078, -0.006114006042480469, 0.0, -5.2213435992598534e-05, -1.0728830375228426e-06, -5.7220458984375e-06, -1.0132749594049528e-05, -1.1920928244535389e-07, -0.000171661376953125, -1.9073486328125e-06, -0.03906428813934326, -1.311301275563892e-06, -0.0001773834228515625, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -6.330013275146484e-05, -1.52587890625e-05, -0.0010242462158203125, 0.0, -0.0001220703125, 0.0, -0.0004425048828125, 0.0, -0.0001735687255859375, -0.0001392364501953125, -2.6702880859375e-05, -6.85453342157416e-05, -1.1920928244535389e-07, -4.661075581680052e-05, -5.006777428206988e-06], "choice_history": [97, 283, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Mechanical", " ", "Dragonling", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "MechanicalDragonling", "_type": "Template5", "hole2": [{"hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "hole3": "minion_type", "hole0": "Mechanical Dragonling", "_type": "Template26", "hole2": "COMMON", "hole1": 1}], "hole1": "MinionCard"}, "score": -7.968803642796374, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score_history": [-1.33514404296875e-05, -4.9591064453125e-05, -2.145764938177308e-06, -6.437280717364047e-06, -4.386805812828243e-05, -1.1918018572032452e-07, -4.088878631591797e-05, -4.649161837733118e-06, -2.86102294921875e-05, -0.00112152099609375, -0.012402534484863281, -0.00012969970703125, -4.38690185546875e-05, -1.823902130126953e-05, -1.9073486328125e-06, -0.0001010894775390625, -2.86102294921875e-05, -0.0013751983642578125, -0.0005359649658203125, -2.288818359375e-05, -2.0503914129221812e-05, -0.0001429318217560649, -4.768367489305092e-06, -9.1552734375e-05, 0.0, -1.9073486328125e-06, -3.9815906347939745e-05, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.7404556274414062e-05, 0.0, -1.3470649719238281e-05, -5.7220458984375e-06, -0.0002593994140625, -1.9073486328125e-06, -0.000354766845703125, 0.0, -3.707408905029297e-05, -0.00017940998077392578, -0.005565643310546875, -1.9073486328125e-06, -8.7738037109375e-05, -1.1444091796875e-05, -4.470348358154297e-05, -1.9073486328125e-06, -4.38690185546875e-05, -6.085849761962891, -0.006282806396484375, -0.05356395244598389, 0.0, -0.0186614990234375, -0.0003948211669921875, -0.6105403900146484, -0.0024127960205078125, -0.38082122802734375, -0.0028864145278930664, -2.0265579223632812e-06, -0.12639591097831726, -0.7751108407974243, -8.916457591112703e-05, -0.01979648508131504, -0.00015615284792147577, -0.0015621185302734375, -0.005184173583984375, -2.6702880859375e-05, -0.01881910115480423, -0.003938225097954273, -3.5881996154785156e-05, -0.009044647216796875, -8.344646857949556e-07, 0.0, -0.0008678436279296875, -0.01762866973876953, -0.017676830291748047, -2.241134461655747e-05, -0.1633351445198059, -0.04496029391884804, -0.0002497210807632655, -0.01999611407518387, -0.0005305981612764299, -3.62396240234375e-05, -0.00064849853515625, -7.62939453125e-06, -0.02412727102637291, -0.004899691324681044, -7.939338684082031e-05, -0.0299375057220459, -1.4305104514278355e-06, 0.0, -3.671645754366182e-05, -3.24249267578125e-05, -0.00034356117248535156, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -0.000152587890625, -6.616111204493791e-05, -3.576278118089249e-07, -4.8398949729744345e-05, -9.536697689327411e-06], "choice_history": [97, 283, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Mechanical", " ", "Dragonling", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 95, 336, "choices", "<EOS>", 19, 169, 347, 61, 242, "Choice", "<EOS>", "Dragonling", "Form", "<EOS>", "Transform", "<EOS>", 346, 88, 325, "Mechanical", "Dragonling", "<EOS>", "Self", "Selector", "<EOS>", 61, 242, "Choice", "<EOS>", "Dragonling", "Form", "<EOS>", "Transform", "<EOS>", 346, 88, 325, "Mechanical", "Dragonling", "<EOS>", "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "MechanicalDragonling", "_type": "Template5", "hole2": [{"hole3": [{"value": {"elts": [{"hole4": [{"_type": "Template79", "hole0": "MechanicalDragonling"}], "hole6": "SelfSelector", "hole3": "Transform", "hole0": "Choice", "_type": "Template39", "hole1": "DragonlingForm"}, {"hole4": [{"_type": "Template79", "hole0": "MechanicalDragonling"}], "hole6": "SelfSelector", "hole3": "Transform", "hole0": "Choice", "_type": "Template39", "hole1": "DragonlingForm"}], "_type": "List"}, "_type": "keyword", "arg": "choices"}], "hole2": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -8.470288252508851, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, choices=[Choice(DragonlingForm(),\n            Transform(MechanicalDragonling()), SelfSelector()), Choice(\n            DragonlingForm(), Transform(MechanicalDragonling()),\n            SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score_history": [-1.33514404296875e-05, -4.9591064453125e-05, -2.145764938177308e-06, -6.437280717364047e-06, -4.386805812828243e-05, -1.1918018572032452e-07, -4.088878631591797e-05, -4.649161837733118e-06, -2.86102294921875e-05, -10.012944221496582, -0.00038909912109375, -2.741813204920618e-06, -0.0004793598782271147, -1.0728830375228426e-06, -3.814697265625e-06, -0.00010800119343912229, -1.9073486328125e-06, -4.124641418457031e-05, 0.0, -0.0002765655517578125, 0.0, -0.005268216133117676, 0.0, -8.7738037109375e-05, -0.006984710693359375, -1.1444091796875e-05, -6.81872625136748e-05, -1.1920928244535389e-07, -9.822727588471025e-05, -5.722029527532868e-06], "choice_history": [97, 283, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mechanical", " ", "Dragonling", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "MechanicalDragonling", "_type": "Template5", "hole2": [{"hole2": "ALL", "_type": "Template31", "hole1": 1, "hole0": "Mechanical Dragonling"}], "hole1": "MinionCard"}, "score": -10.026962056096515, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score_history": [-1.33514404296875e-05, -4.9591064453125e-05, -2.145764938177308e-06, -6.437280717364047e-06, -4.386805812828243e-05, -1.1918018572032452e-07, -4.088878631591797e-05, -4.649161837733118e-06, -2.86102294921875e-05, -0.00112152099609375, -0.012402534484863281, -0.00012969970703125, -4.38690185546875e-05, -1.823902130126953e-05, -1.9073486328125e-06, -0.0001010894775390625, -2.86102294921875e-05, -0.0013751983642578125, -0.0005359649658203125, -2.288818359375e-05, -2.0503914129221812e-05, -0.0001429318217560649, -4.768367489305092e-06, -9.1552734375e-05, 0.0, -1.9073486328125e-06, -3.9815906347939745e-05, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.7404556274414062e-05, 0.0, -1.3470649719238281e-05, -5.7220458984375e-06, -0.0002593994140625, -1.9073486328125e-06, -0.000354766845703125, 0.0, -3.707408905029297e-05, -0.00017940998077392578, -0.005565643310546875, -1.9073486328125e-06, -8.7738037109375e-05, -1.1444091796875e-05, -4.470348358154297e-05, -1.9073486328125e-06, -4.38690185546875e-05, -6.085849761962891, -0.006282806396484375, -0.05356395244598389, 0.0, -0.0186614990234375, -0.0003948211669921875, -0.6105403900146484, -0.0024127960205078125, -0.38082122802734375, -0.0028864145278930664, -2.0265579223632812e-06, -0.12639591097831726, -0.7751108407974243, -8.916457591112703e-05, -0.01979648508131504, -0.00015615284792147577, -0.0015621185302734375, -0.005184173583984375, -2.6702880859375e-05, -0.01881910115480423, -0.003938225097954273, -3.5881996154785156e-05, -0.009044647216796875, -8.344646857949556e-07, 0.0, -0.0008678436279296875, -0.01762866973876953, -0.017676830291748047, -2.241134461655747e-05, -1.9057914018630981, -0.05230221152305603, -9.750965546118096e-05, -0.024679193273186684, -0.0002800224465318024, -2.86102294921875e-05, -0.0006656646728515625, -9.5367431640625e-06, -0.03749959170818329, -0.004471987020224333, -6.985664367675781e-05, -0.030487060546875, -1.4305104514278355e-06, 0.0, -3.850459688692354e-05, -3.4332275390625e-05, -0.00034928321838378906, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -0.0001544952392578125, -6.628032133448869e-05, -3.576278118089249e-07, -4.8398949729744345e-05, -9.536697689327411e-06], "choice_history": [97, 283, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Mechanical", " ", "Dragonling", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 95, 336, "choices", "<EOS>", 19, 169, 347, 61, 242, "Choice", "<EOS>", "Dragonling", "Form", "<EOS>", "Transform", "<EOS>", 346, 88, 325, "Mechanical", "Dragonling", "<EOS>", "Self", "Selector", "<EOS>", 61, 242, "Choice", "<EOS>", "Mechanical", "Form", "<EOS>", "Transform", "<EOS>", 346, 88, 325, "Mechanical", "Dragonling", "<EOS>", "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole4": "player", "hole6": [{"_type": "Template62", "hole1": 1, "hole0": 2}], "hole3": "create_minion", "hole0": "MechanicalDragonling", "_type": "Template5", "hole2": [{"hole3": [{"value": {"elts": [{"hole4": [{"_type": "Template79", "hole0": "MechanicalDragonling"}], "hole6": "SelfSelector", "hole3": "Transform", "hole0": "Choice", "_type": "Template39", "hole1": "DragonlingForm"}, {"hole4": [{"_type": "Template79", "hole0": "MechanicalDragonling"}], "hole6": "SelfSelector", "hole3": "Transform", "hole0": "Choice", "_type": "Template39", "hole1": "MechanicalForm"}], "_type": "List"}, "_type": "keyword", "arg": "choices"}], "hole2": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"n": 1, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}], "hole1": "MinionCard"}, "score": -10.23787424215692, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, choices=[Choice(DragonlingForm(),\n            Transform(MechanicalDragonling()), SelfSelector()), Choice(\n            MechanicalForm(), Transform(MechanicalDragonling()),\n            SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}]}
{"index": 65, "beams": [{"score_history": [-0.003814697265625, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002288818359375, -0.000102996826171875, -9.536738616588991e-07, -3.576278118089249e-07, -2.3841855067985307e-07, -0.0001049041748046875, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014997116522863507, -1.8715856640483253e-05, -3.9696693420410156e-05, -0.000278472900390625, -0.8490104675292969, -0.0311279296875, -4.768370445162873e-07, -0.0025347890332341194, -1.156323378381785e-05, 0.0, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.0023488998413085938, 0.0, -0.000453948974609375, -0.0018482208251953125, -0.0002765655517578125, -1.9073486328125e-06, -0.0003299713134765625, -1.71661376953125e-05, -0.001155853271484375, -3.814697265625e-06, -0.0008950233459472656, 0.0, -0.004026055335998535, 0.0, -0.0025730663910508156, -1.1920928244535389e-07, -0.0007069140556268394, -4.768370445162873e-07, -4.9591064453125e-05, -0.000667572021484375, -9.5367431640625e-05, -0.0017594099044799805, -0.00021705696417484432, -4.00543212890625e-05, -2.47955322265625e-05, -0.004500031471252441, -0.00023268836957868189], "choice_history": [96, 173, 358, 105, 152, "Mind", "Blast", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 116, 196, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 126, 225, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "5", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PRIEST", "_type": "Template12", "hole1": 2, "hole0": "Mind Blast"}, {"hole2": [{"_type": "Template61", "hole0": 5}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}], "_type": "ClassDef", "name": "MindBlast"}], "_type": "Module"}, "score": -0.9096958169712792, "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"score_history": [-0.003814697265625, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002288818359375, -0.000102996826171875, -9.536738616588991e-07, -3.576278118089249e-07, -2.3841855067985307e-07, -0.0001049041748046875, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014997116522863507, -1.8715856640483253e-05, -3.9696693420410156e-05, -0.000278472900390625, -2.405223846435547, -0.0011386871337890625, -9.536738616588991e-07, -8.463854464935139e-05, -6.079655122448457e-06, 0.0, -1.1920928244535389e-07, 0.0, -0.022966504096984863, 0.0, -0.0041637420654296875, -0.0008087158203125, -0.0003223419189453125, -1.33514404296875e-05, -0.0012664794921875, -1.71661376953125e-05, -0.0001316070556640625, -5.7220458984375e-06, -0.0017186403274536133, 0.0, -0.003140687942504883, 0.0, -0.001217544311657548, 0.0, -0.0015295138582587242, -2.3841855067985307e-07, -4.76837158203125e-05, -0.0006122589111328125, -0.0001068115234375, -0.001894950750283897, -0.00010847477824427187, -3.62396240234375e-05, -2.47955322265625e-05, -0.004256129264831543, -0.0001686791074462235], "choice_history": [96, 173, 358, 105, 152, "Mind", "Blast", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 126, 225, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "5", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": "PRIEST", "_type": "Template2", "hole1": 2, "hole0": "Mind Blast"}, {"hole2": [{"_type": "Template61", "hole0": 5}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}], "_type": "ClassDef", "name": "MindBlast"}], "_type": "Module"}, "score": -2.455798265597302, "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"score_history": [-0.003814697265625, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002288818359375, -0.000102996826171875, -9.536738616588991e-07, -3.576278118089249e-07, -2.3841855067985307e-07, -0.0001049041748046875, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014997116522863507, -1.8715856640483253e-05, -3.9696693420410156e-05, -0.000278472900390625, -2.2021703720092773, -0.004572868347167969, -7.152555099310121e-07, -0.000282883585896343, -0.00010573305189609528, 0.0, -2.861018856492592e-06, 0.0, -0.017587780952453613, 0.0, -0.00118255615234375, -5.7220458984375e-06, -0.0009533160482533276, -0.0001125335693359375, -0.0003185272216796875, -5.7220458984375e-06, -0.1331310272216797, 0.0, -0.0004864931106567383, -1.9073486328125e-06, -0.0002480745315551758, -5.7220458984375e-06, -0.03503406047821045, 0.0, -0.2698174715042114, -0.00016796588897705078, -0.01978778839111328, -9.34600830078125e-05, -0.7721853256225586, 0.0, -0.0059223175048828125, -0.000568389892578125, -0.000152587890625, -2.288818359375e-05, -0.6531314849853516, -1.52587890625e-05, -3.0517578125e-05, 0.0, -0.0009845495223999023, 0.0, -0.0025960206985473633, 0.0, -0.0009843537118285894, -1.1920928244535389e-07, -0.0007026519160717726, -7.152555099310121e-07, -0.0001068115234375, -0.0009288787841796875, -0.000263214111328125, -0.0053386688232421875, -0.00011479217209853232, -5.7220458984375e-05, -4.76837158203125e-05, -0.007195472717285156, -0.00016808230429887772], "choice_history": [96, 173, 358, 105, 152, "Mind", "Blast", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "overload", "<EOS>", 23, 179, "2", "<EOS>", 126, 225, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "5", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_spell_target", "hole3": "FREE", "hole0": "Mind Blast", "_type": "Template4", "hole2": "PRIEST", "hole7": "overload", "hole8": {"n": 2, "_type": "Num"}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 2}, {"hole2": [{"_type": "Template61", "hole0": 5}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}], "_type": "ClassDef", "name": "MindBlast"}], "_type": "Module"}, "score": -4.142379230085133, "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"score_history": [-0.003814697265625, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002288818359375, -0.000102996826171875, -9.536738616588991e-07, -3.576278118089249e-07, -2.3841855067985307e-07, -0.0001049041748046875, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014997116522863507, -1.8715856640483253e-05, -3.9696693420410156e-05, -0.000278472900390625, -2.2021703720092773, -0.004572868347167969, -7.152555099310121e-07, -0.000282883585896343, -0.00010573305189609528, 0.0, -2.861018856492592e-06, 0.0, -0.017587780952453613, 0.0, -0.00118255615234375, -5.7220458984375e-06, -0.0009533160482533276, -0.0001125335693359375, -0.0003185272216796875, -5.7220458984375e-06, -0.1331310272216797, 0.0, -0.0004864931106567383, -1.9073486328125e-06, -0.0002480745315551758, -5.7220458984375e-06, -0.03503406047821045, 0.0, -0.2698174715042114, -0.00016796588897705078, -0.01978778839111328, -9.34600830078125e-05, -0.7721853256225586, 0.0, -0.0059223175048828125, -0.000568389892578125, -0.000152587890625, -2.288818359375e-05, -0.7350521087646484, 0.0, -0.05652916431427002, -1.1920928244535389e-07, -6.771086918888614e-05, -8.344646857949556e-07, -0.00021063028543721884, -1.1920928244535389e-07, -0.00038909912109375, -0.0003662109375, -3.4332275390625e-05, -0.006575465202331543, -2.9325108698685654e-05, -1.71661376953125e-05, -2.86102294921875e-05, -0.00018405914306640625, -0.00020897375361528248], "choice_history": [96, 173, 358, 105, 152, "Mind", "Blast", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "overload", "<EOS>", 23, 179, "2", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "5", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_spell_target", "hole3": "FREE", "hole0": "Mind Blast", "_type": "Template4", "hole2": "PRIEST", "hole7": "overload", "hole8": {"n": 2, "_type": "Num"}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 2}, {"hole2": [{"_type": "Template61", "hole0": 5}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "MindBlast"}], "_type": "Module"}, "score": -4.269406662833958, "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(5), self)\n"}, {"score_history": [-0.003814697265625, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002288818359375, -0.000102996826171875, -9.536738616588991e-07, -3.576278118089249e-07, -2.3841855067985307e-07, -0.0001049041748046875, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014997116522863507, -1.8715856640483253e-05, -3.9696693420410156e-05, -0.000278472900390625, -2.489266872406006, -0.05503082275390625, -5.960462772236497e-07, -0.00506898807361722, -8.344646857949556e-07, 0.0, -1.1920928244535389e-07, -1.0728830375228426e-06, -0.4682652950286865, -1.9073486328125e-06, -1.0930067300796509, -0.0013966560363769531, -0.15999794006347656, -9.5367431640625e-06, -0.0008525848388671875, -4.00543212890625e-05, -0.014003753662109375, -3.814697265625e-06, -0.00030171871185302734, -2.1457672119140625e-06, -0.00015282630920410156, -3.814697265625e-06, -0.06766295433044434, -3.576278118089249e-07, -0.0006389617919921875, -0.000400543212890625, -0.000125885009765625, -1.1444091796875e-05, -0.0035991668701171875, -5.7220458984375e-06, -0.0003223419189453125, -5.7220458984375e-06, -0.05388474464416504, 0.0, -0.005307197570800781, 0.0, -0.0007147319265641272, -1.1920928244535389e-07, -0.000566536677069962, -4.768370445162873e-07, -3.4332275390625e-05, -0.0004711151123046875, -0.00016021728515625, -0.0017521381378173828, -0.00025829317746683955, -4.1961669921875e-05, -2.86102294921875e-05, -0.002522587776184082, -0.0003804973093792796], "choice_history": [96, 173, 358, 105, 152, "Mind", "Blast", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 125, 223, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "combo", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "5", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "combo", "hole0": "Mind Blast", "_type": "Template27", "hole2": "ROGUE", "hole1": 2}, {"hole2": [{"_type": "Template61", "hole0": 5}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}], "_type": "ClassDef", "name": "MindBlast"}], "_type": "Module"}, "score": -4.431090405731098, "inferred_code": "class MindBlast(SpellCard):\n    super().__init__('Mind Blast', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n        COMMON, combo=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"score_history": [-0.003814697265625, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002288818359375, -0.000102996826171875, -9.536738616588991e-07, -3.576278118089249e-07, -2.3841855067985307e-07, -0.0001049041748046875, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014997116522863507, -1.8715856640483253e-05, -3.9696693420410156e-05, -0.000278472900390625, -3.816586971282959, -0.015178680419921875, -1.1920928244535389e-07, -0.00017367713735438883, -4.768367489305092e-06, -1.9073486328125e-06, -2.3841855067985307e-07, 0.0, -0.030073165893554688, -9.5367431640625e-06, -0.42603397369384766, -3.814697265625e-06, -0.012029647827148438, -1.9073486328125e-06, -0.0005779266357421875, -5.7220458984375e-06, -0.0007495880126953125, -1.9073486328125e-06, -0.0022965669631958008, -5.7220458984375e-06, -0.000354766845703125, -2.09808349609375e-05, -0.1057124137878418, -2.3841855067985307e-07, -0.000766754150390625, -0.0002346038818359375, -0.000240325927734375, -9.5367431640625e-06, -0.003200531005859375, -5.7220458984375e-06, -0.000324249267578125, -3.814697265625e-06, -0.02882087230682373, 0.0, -0.005727887153625488, 0.0, -0.0005848741857334971, -1.1920928244535389e-07, -0.0006499913288280368, -7.152555099310121e-07, -3.0517578125e-05, -0.0005207061767578125, -9.34600830078125e-05, -0.0016673803329467773, -0.0002388668799540028, -4.38690185546875e-05, -2.288818359375e-05, -0.0023456811904907227, -0.0003218501224182546], "choice_history": [96, 173, 358, 105, 152, "Mind", "Blast", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 137, 326, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "5", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "FREE", "hole0": "Mind Blast", "_type": "Template8", "hole2": "PRIEST", "hole1": 2}, {"hole2": [{"_type": "Template61", "hole0": 5}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}], "_type": "ClassDef", "name": "MindBlast"}], "_type": "Module"}, "score": -4.460465120857933, "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, FREE=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"score_history": [-0.003814697265625, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002288818359375, -0.000102996826171875, -9.536738616588991e-07, -3.576278118089249e-07, -2.3841855067985307e-07, -0.0001049041748046875, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014997116522863507, -1.8715856640483253e-05, -3.9696693420410156e-05, -0.000278472900390625, -2.2021703720092773, -0.004572868347167969, -7.152555099310121e-07, -0.000282883585896343, -0.00010573305189609528, 0.0, -2.861018856492592e-06, 0.0, -0.017587780952453613, 0.0, -0.00118255615234375, -5.7220458984375e-06, -0.0009533160482533276, -0.0001125335693359375, -0.0003185272216796875, -5.7220458984375e-06, -0.1331310272216797, 0.0, -0.0004864931106567383, -1.9073486328125e-06, -0.0002480745315551758, -5.7220458984375e-06, -0.03503406047821045, 0.0, -0.2698174715042114, -0.00016796588897705078, -0.01978778839111328, -9.34600830078125e-05, -1.0598100423812866, 0.0, -0.016739845275878906, -0.0004177093505859375, -0.0001201629638671875, -2.6702880859375e-05, -0.6761837005615234, -1.9073486328125e-05, -3.24249267578125e-05, 0.0, -0.0010627508163452148, 0.0, -0.0027283430099487305, 0.0, -0.0010406958172097802, -1.1920928244535389e-07, -0.0007411758415400982, -7.152555099310121e-07, -0.0001087188720703125, -0.0008945465087890625, -0.000247955322265625, -0.005353808403015137, -0.00010513726738281548, -6.103515625e-05, -5.14984130859375e-05, -0.007509469985961914, -0.0001682015135884285], "choice_history": [96, 173, 358, 105, 152, "Mind", "Blast", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "overload", "<EOS>", 23, 179, "5", "<EOS>", 126, 225, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "5", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_spell_target", "hole3": "FREE", "hole0": "Mind Blast", "_type": "Template4", "hole2": "PRIEST", "hole7": "overload", "hole8": {"n": 5, "_type": "Num"}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 2}, {"hole2": [{"_type": "Template61", "hole0": 5}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}], "_type": "ClassDef", "name": "MindBlast"}], "_type": "Module"}, "score": -4.464285057933374, "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, overload=5)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"score_history": [-0.003814697265625, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002288818359375, -0.000102996826171875, -9.536738616588991e-07, -3.576278118089249e-07, -2.3841855067985307e-07, -0.0001049041748046875, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014997116522863507, -1.8715856640483253e-05, -3.9696693420410156e-05, -0.000278472900390625, -2.2021703720092773, -0.004572868347167969, -7.152555099310121e-07, -0.000282883585896343, -0.00010573305189609528, 0.0, -2.861018856492592e-06, 0.0, -0.017587780952453613, 0.0, -0.00118255615234375, -5.7220458984375e-06, -0.0009533160482533276, -0.0001125335693359375, -0.0003185272216796875, -5.7220458984375e-06, -0.1331310272216797, 0.0, -0.0004864931106567383, -1.9073486328125e-06, -0.0002480745315551758, -5.7220458984375e-06, -0.03503406047821045, 0.0, -0.2698174715042114, -0.00016796588897705078, -0.01978778839111328, -9.34600830078125e-05, -1.0598100423812866, 0.0, -0.016739845275878906, -0.0004177093505859375, -0.0001201629638671875, -2.6702880859375e-05, -0.7105693817138672, 0.0, -0.027446866035461426, -1.1920928244535389e-07, -6.377696263371035e-05, -7.152555099310121e-07, -0.00017725570069160312, -1.1920928244535389e-07, -0.000347137451171875, -0.0003662109375, -3.24249267578125e-05, -0.006974220275878906, -3.015955189766828e-05, -1.9073486328125e-05, -3.62396240234375e-05, -0.0001900196075439453, -0.00018656239262782037], "choice_history": [96, 173, 358, 105, 152, "Mind", "Blast", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "overload", "<EOS>", 23, 179, "5", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "5", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": "target_func", "hole6": "find_spell_target", "hole3": "FREE", "hole0": "Mind Blast", "_type": "Template4", "hole2": "PRIEST", "hole7": "overload", "hole8": {"n": 5, "_type": "Num"}, "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole1": 2}, {"hole2": [{"_type": "Template61", "hole0": 5}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}], "_type": "ClassDef", "name": "MindBlast"}], "_type": "Module"}, "score": -4.5144159699069775, "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, overload=5)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(5), self)\n"}, {"score_history": [-0.003814697265625, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002288818359375, -0.000102996826171875, -9.536738616588991e-07, -3.576278118089249e-07, -2.3841855067985307e-07, -0.0001049041748046875, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014997116522863507, -1.8715856640483253e-05, -3.9696693420410156e-05, -0.000278472900390625, -2.489266872406006, -0.05503082275390625, -5.960462772236497e-07, -0.00506898807361722, -8.344646857949556e-07, 0.0, -1.1920928244535389e-07, -1.0728830375228426e-06, -0.4682652950286865, -1.9073486328125e-06, -1.2946573495864868, -1.71661376953125e-05, -0.000141143798828125, -9.1552734375e-05, -1.71661376953125e-05, -0.000110626220703125, -0.039333343505859375, -5.7220458984375e-06, -0.0002485513687133789, -2.2649765014648438e-06, -9.953975677490234e-05, -3.814697265625e-06, -0.10848236083984375, -3.576278118089249e-07, -0.0005512237548828125, -0.0002269744873046875, -0.000125885009765625, -1.1444091796875e-05, -0.00351715087890625, -5.7220458984375e-06, -0.0003757476806640625, -5.7220458984375e-06, -0.05896127223968506, 0.0, -0.005559086799621582, 0.0, -0.0006918598082847893, -1.1920928244535389e-07, -0.0005619002040475607, -5.960462772236497e-07, -3.24249267578125e-05, -0.0004940032958984375, -0.0001544952392578125, -0.0016678571701049805, -0.00026341783814132214, -4.76837158203125e-05, -2.6702880859375e-05, -0.0023804903030395508, -0.0003782338462769985], "choice_history": [96, 173, 358, 105, 152, "Mind", "Blast", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 125, 223, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "5", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Mind Blast", "_type": "Template27", "hole2": "ROGUE", "hole1": 2}, {"hole2": [{"_type": "Template61", "hole0": 5}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}], "_type": "ClassDef", "name": "MindBlast"}], "_type": "Module"}, "score": -4.541673143972687, "inferred_code": "class MindBlast(SpellCard):\n    super().__init__('Mind Blast', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n        COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"score_history": [-0.003814697265625, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002288818359375, -0.000102996826171875, -9.536738616588991e-07, -3.576278118089249e-07, -2.3841855067985307e-07, -0.0001049041748046875, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014997116522863507, -1.8715856640483253e-05, -3.9696693420410156e-05, -0.000278472900390625, -2.489266872406006, -0.05503082275390625, -5.960462772236497e-07, -0.00506898807361722, -8.344646857949556e-07, 0.0, -1.1920928244535389e-07, -1.0728830375228426e-06, -0.9902904033660889, -7.62939453125e-06, -0.8312814235687256, -1.7404556274414062e-05, -0.000438690185546875, -0.00023651123046875, -1.1444091796875e-05, -0.0001621246337890625, -0.0912628173828125, -1.52587890625e-05, -0.002888917922973633, -5.960462772236497e-07, -0.0007308721542358398, -5.7220458984375e-06, -0.28952622413635254, -9.536738616588991e-07, -0.000560760498046875, -0.0003662109375, -0.0001239776611328125, -9.5367431640625e-06, -0.001956939697265625, -3.814697265625e-06, -0.00078582763671875, -7.62939453125e-06, -0.011201739311218262, 0.0, -0.002928018569946289, 0.0, -0.0008299660985358059, -1.1920928244535389e-07, -0.0007328190258704126, -7.152555099310121e-07, -4.57763671875e-05, -0.00048828125, -0.0001468658447265625, -0.0017344951629638672, -0.00024363456759601831, -4.57763671875e-05, -2.86102294921875e-05, -0.003155350685119629, -0.00032280426239594817], "choice_history": [96, 173, 358, 105, 152, "Mind", "Blast", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 125, 223, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "5", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func", "hole0": "Mind Blast", "_type": "Template27", "hole2": "PRIEST", "hole1": 2}, {"hole2": [{"_type": "Template61", "hole0": 5}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}], "_type": "ClassDef", "name": "MindBlast"}], "_type": "Module"}, "score": -4.7867516312937965, "inferred_code": "class MindBlast(SpellCard):\n    super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST, CARD_RARITY.\n        COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"score_history": [-0.003814697265625, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002288818359375, -0.000102996826171875, -9.536738616588991e-07, -3.576278118089249e-07, -2.3841855067985307e-07, -0.0001049041748046875, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014997116522863507, -1.8715856640483253e-05, -3.9696693420410156e-05, -0.000278472900390625, -2.8361310958862305, -1.6702499389648438, -0.00026702880859375, 0.0, -0.0007383213378489017, -8.022785186767578e-05, -0.10389766842126846, 0.0, -0.002079010009765625, -0.000385284423828125, -7.62939453125e-05, -1.2516897186287679e-05, -6.902217137394473e-05, -0.0003380775451660156, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -1.1920928244535389e-07, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -2.47955322265625e-05, 0.0, -0.000118255615234375, 0.0, -0.03193104267120361, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -7.05718994140625e-05, 0.0, -8.20159912109375e-05, -2.47955322265625e-05, -0.0003204345703125, 0.0, -0.003589630126953125, -0.0016021728515625, -6.29425048828125e-05, -0.00032317638397216797, -7.62939453125e-06, -0.004158973693847656, -0.0009937286376953125, -1.52587890625e-05, -4.1961669921875e-05, -0.020784378051757812, -3.814697265625e-06, -8.404254913330078e-05, 0.0, -6.866455078125e-05, -3.814697265625e-06, -0.13004279136657715, -1.1920928244535389e-07, -0.0003414154052734375, -0.000835418701171875, -0.0001621246337890625, -1.1444091796875e-05, -0.002536773681640625, -5.7220458984375e-06, -0.0002231597900390625, -1.9073486328125e-06, -0.02026522159576416, 0.0, -0.0035473108291625977, 0.0, -0.0006018963176757097, -1.1920928244535389e-07, -0.0013889685506001115, -2.3841855067985307e-07, -3.24249267578125e-05, -0.000514984130859375, -0.00012969970703125, -0.0015732049942016602, -0.0002613918040879071, -4.1961669921875e-05, -3.24249267578125e-05, -0.0020095109939575195, -0.0002876401413232088], "choice_history": [96, 173, 358, 105, 152, "Mind", "Blast", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mind", " ", "Blast", "<EOS>", 52, 179, "2", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "5", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole3": [{"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole2": [{"_type": "Str", "s": "Mind Blast"}, {"n": 2, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}, {"hole2": [{"_type": "Template61", "hole0": 5}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}], "_type": "ClassDef", "name": "MindBlast"}], "_type": "Module"}, "score": -4.848390406142563, "inferred_code": "class MindBlast(SpellCard):\n    super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST, CARD_RARITY.\n        FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"score_history": [-0.003814697265625, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002288818359375, -0.000102996826171875, -9.536738616588991e-07, -3.576278118089249e-07, -2.3841855067985307e-07, -0.0001049041748046875, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014997116522863507, -1.8715856640483253e-05, -3.9696693420410156e-05, -0.000278472900390625, -2.8361310958862305, -0.28542041778564453, -0.01079559326171875, 0.0, -0.015739265829324722, -0.00016260147094726562, -0.9459154605865479, 0.0, -0.30281829833984375, -0.05186271667480469, -7.62939453125e-06, -2.1338273654691875e-05, -0.00017249584197998047, -4.327296846895479e-05, 0.0, -9.72747802734375e-05, -3.814697265625e-06, -1.5616275049978867e-05, 0.0, -0.000247955322265625, -2.288818359375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.000385284423828125, -1.9073486328125e-06, -0.018381118774414062, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -0.0003299713134765625, 0.0, -3.0517578125e-05, -4.57763671875e-05, -0.000293731689453125, 0.0, -0.5001497268676758, -0.0005245208740234375, -0.051517367362976074, -1.1920928244535389e-07, -0.13255786895751953, -1.9073486328125e-06, -0.0009765625, 0.0, -0.0004825592041015625, 0.0, -0.017885327339172363, 0.0, -0.00017547607421875, -1.9073486328125e-06, -0.2807968854904175, 0.0, -0.0003147125244140625, -0.000339508056640625, -0.0002288818359375, -3.814697265625e-06, -0.00267791748046875, -7.62939453125e-06, -0.0007610321044921875, -1.9073486328125e-06, -0.017464160919189453, 0.0, -0.0036100149154663086, 0.0, -0.0005930836778134108, -1.1920928244535389e-07, -0.00044421659549698234, -1.1920922133867862e-06, -2.86102294921875e-05, -0.00063323974609375, -9.72747802734375e-05, -0.0017386674880981445, -0.0002806984703056514, -5.340576171875e-05, -2.09808349609375e-05, -0.0035082101821899414, -0.0003778697573579848], "choice_history": [96, 173, 358, 105, 152, "Mind", "Blast", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 351, 53, 183, "Mind", " ", "Blast", "<EOS>", 52, 179, "2", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 51, 175, "False", "<EOS>", 42, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "5", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"hole2": [{"_type": "Str", "s": "Mind Blast"}, {"n": 2, "_type": "Num"}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}, {"value": true, "_type": "NameConstant"}, {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}], "_type": "Template77", "hole1": "__init__", "hole0": {"_type": "Template79", "hole0": "super"}}, {"hole2": [{"_type": "Template61", "hole0": 5}, {"_type": "Name", "id": "self"}], "_type": "Template3", "hole1": "damage", "hole0": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}], "_type": "ClassDef", "name": "MindBlast"}], "_type": "Module"}, "score": -5.492036766267702, "inferred_code": "class MindBlast(SpellCard):\n    super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST, CARD_RARITY.\n        FREE, True, hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"score_history": [-0.003814697265625, -3.24249267578125e-05, -1.9073486328125e-06, -10.466259002685547, -3.6815929412841797, -0.0005815026233904064, -0.0003718834777828306, -8.702239938429557e-06, -0.002037882572039962, -1.1920928244535389e-07, -0.2787935733795166, 0.0], "choice_history": [96, 173, 358, 127, 230, "Mind", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>"], "model_output": {"body": [{"hole2": "PRIEST", "_type": "Template31", "hole1": 2, "hole0": "MindBlast"}], "_type": "Module"}, "score": -14.433494637012693, "inferred_code": "super().__init__('MindBlast', 2, CHARACTER_CLASS.PRIEST, CARD_RARITY.COMMON)\n"}, {"score_history": [-0.003814697265625, -3.24249267578125e-05, -1.9073486328125e-06, -16.59980583190918], "choice_history": [96, 173, 358, 104], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score": -16.603654861450195, "inferred_code": "break\n"}, {"score_history": [-0.003814697265625, -3.24249267578125e-05, -23.80013656616211], "choice_history": [96, 173, 357], "model_output": {"body": [], "_type": "Module"}, "score": -23.803983688354492, "inferred_code": ""}]}
