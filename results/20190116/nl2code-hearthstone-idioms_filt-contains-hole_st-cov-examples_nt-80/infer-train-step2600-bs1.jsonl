{"index": 0, "beams": [{"score": -3.244299889127859, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(WeaponSelector(\n            )), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole6": [{"hole0": 3, "hole1": 2, "_type": "Template62"}], "hole4": "player", "hole1": "MinionCard", "hole2": [{"hole4": [{"hole0": "WeaponSelector", "_type": "Template79"}], "hole1": 2, "hole2": "COMMON", "hole3": "Destroy", "hole5": "PlayerSelector", "hole0": "Acidic Swamp Ooze", "_type": "Template15"}], "hole3": "create_minion", "hole0": "AcidicSwampOoze", "_type": "Template5"}, "score_history": [-2.288818359375e-05, -1.33514404296875e-05, -0.0005559840355999768, -0.0007657030364498496, -0.00024413742357864976, -2.145764938177308e-06, -1.1897645890712738e-07, -2.6822088329936378e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.034308433532714844, -1.541724681854248, -1.0013547580456361e-05, -1.2159347534179688e-05, -0.0024139881134033203, -0.00023889541625976562, -0.0001800060272216797, -2.2768972485209815e-05, -2.6712310500442982e-05, -5.7220458984375e-06, -0.00577545166015625, 0.0, -0.004829070530831814, -0.0005336980102583766, -8.58306884765625e-05, -0.024483680725097656, -3.814697265625e-06, -1.575670599937439, -0.0050966739654541016, 0.0, -0.04669447988271713, -1.1682462172757369e-05, -2.1457672119140625e-06, -3.4570541174616665e-05, -1.9073486328125e-06, -0.00026833900483325124, 0.0, -5.14984130859375e-05, -4.57763671875e-05, -5.91278076171875e-05, 0.0, 0.0, -5.7697296142578125e-05, 0.0], "choice_history": [97, 283, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Destroy", "<EOS>", 346, 88, 325, "Weapon", "Selector", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"]}]}
{"index": 1, "beams": [{"score": -0.300324252689947, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n", "model_output": {"hole6": [{"value": {"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": "player", "hole1": "use", "_type": "Template63", "hole3": "game"}, "_type": "Expr"}, {"hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"hole0": {"id": "player", "_type": "Name"}, "hole2": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}, "hole1": "effective_heal_power", "_type": "Template57"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template77"}, {"targets": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "taunt"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole4": "player", "hole1": "SpellCard", "hole2": [{"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": [{"s": "Ancestral Healing", "_type": "Str"}, {"_type": "Num", "n": 0}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "hole1": "__init__", "_type": "Template77", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}]}], "hole3": "use", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "AncestralHealing", "_type": "Template5"}, "score_history": [-0.0018634796142578125, -0.00049591064453125, -5.125986263010418e-06, -0.0003696010971907526, -4.291534423828125e-06, -3.838422708213329e-05, -9.226799011230469e-05, -1.537799835205078e-05, -0.0001697540283203125, -0.0001220703125, -0.0043239593505859375, -2.288818359375e-05, -1.9073486328125e-06, -3.6954863844584906e-06, 0.0, -5.340576171875e-05, -3.24249267578125e-05, -0.0004291534423828125, -2.09808349609375e-05, -0.004917144775390625, -7.271752110682428e-06, -2.4080276489257812e-05, -8.535385131835938e-05, -0.0028476715087890625, -4.38690185546875e-05, -2.288818359375e-05, -2.0265579223632812e-06, -3.814697265625e-06, -4.00543212890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00012969970703125, -1.9073486328125e-06, -0.001323699951171875, 0.0, -2.288818359375e-05, -8.96453857421875e-05, -6.866455078125e-05, 0.0, -0.000118255615234375, -0.0001811981201171875, -0.0003452301025390625, -5.7220458984375e-06, -0.0001201629638671875, -3.814697265625e-05, -9.5367431640625e-06, -0.00048100948333740234, -1.9073486328125e-05, -0.0021209716796875, -8.7738037109375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -0.00023651123046875, -1.9073486328125e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0056591033935546875, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.1563301086425781e-05, 0.0, -5.14984130859375e-05, -0.00018310546875, -1.1444091796875e-05, -4.0531158447265625e-06, -0.009328842163085938, -0.000110626220703125, -6.4849853515625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.0008336305618286133, 0.0, -0.010908126831054688, -7.43865966796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.006038665771484375, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.0001068115234375, 0.0, -0.027899503707885742, 0.0, -0.0003032684326171875, -0.1095743179321289, -0.004935264587402344, -0.0009403228759765625, -1.9073486328125e-06, -5.841255187988281e-06, -1.1920928244535389e-07, -0.0014307498931884766, -3.62396240234375e-05, -0.0002384185791015625, -2.288818359375e-05, -0.002643585205078125, -3.814697265625e-06, -8.20159912109375e-05, 0.0, -0.0015840530395507812, 0.0, -0.00023663043975830078, 0.0, -0.055609941482543945, -3.0517578125e-05, -0.001495361328125, -1.52587890625e-05, -0.0022974014282226562, -1.9073486328125e-06, -0.0046215057373046875, -5.7220458984375e-06, -5.7220458984375e-06, -6.67572021484375e-05, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -0.0003204345703125, 0.0, -0.0022258758544921875, -1.9073486328125e-06, -0.003292083740234375, -1.9073486328125e-06, -0.023197174072265625, 0.0, -0.0015697479248046875, -3.24249267578125e-05, -0.00018322467803955078, -1.1920928244535389e-07], "choice_history": [97, 285, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Ancestral", " ", "Healing", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 72, 294, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"]}]}
{"index": 2, "beams": [{"score": -2.5917454531045934, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "model_output": {"hole6": [{"value": {"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": "player", "hole1": "use", "_type": "Template63", "hole3": "game"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"_type": "List", "elts": [{"hole0": {"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}, "hole1": "Huffer", "_type": "Template76"}, {"hole0": {"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}, "hole1": "Misha", "_type": "Template76"}, {"hole0": {"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}, "hole1": "Leokk", "_type": "Template76"}]}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call", "func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "random_choice"}}, "_type": "Assign"}, {"hole0": {"id": "card", "_type": "Name"}, "hole2": [{"id": "player", "_type": "Name"}, {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"id": "len", "_type": "Name"}}], "hole1": "summon", "_type": "Template77"}], "hole4": "player", "hole1": "SpellCard", "hole7": [{"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"value": {"_type": "BoolOp", "values": [{"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": "player", "hole1": "can_use", "_type": "Template63", "hole3": "game"}, {"ops": [{"_type": "Lt"}], "comparators": [{"_type": "Num", "n": 7}], "_type": "Compare", "left": {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"id": "len", "_type": "Name"}}}], "op": {"_type": "And"}}, "_type": "Return"}]}], "hole2": [{"hole0": "Animal Companion", "hole2": "HUNTER", "hole1": 3, "_type": "Template31"}], "hole3": "use", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "AnimalCompanion", "_type": "Template5"}, "score_history": [-9.5367431640625e-06, -0.004904747009277344, -3.683518662001006e-05, -3.4570634852570947e-06, -0.00010048838157672435, -8.344568414031528e-07, -0.0001142023247666657, -1.3351374946068972e-05, -6.4849853515625e-05, -0.01552581787109375, -6.103515625e-05, -2.264974000354414e-06, -4.637238089344464e-05, -4.768370445162873e-07, -3.814697265625e-06, -2.50339189733495e-06, 0.0, -0.00024640560150146484, -3.814697265625e-06, -0.0003032684326171875, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.0003490447998046875, -6.318092346191406e-06, -2.9802317840221804e-06, -0.009415626525878906, -0.010354995727539062, -2.6702880859375e-05, -2.288818359375e-05, -1.52587890625e-05, -1.52587890625e-05, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -9.655952453613281e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1920928244535389e-07, -1.3470649719238281e-05, -1.1920922133867862e-06, -0.0092620849609375, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.009545261971652508, -7.6293927122605965e-06, -0.020424842834472656, -0.05449485778808594, -0.007479667663574219, -0.0030775070190429688, -0.0053863525390625, -0.0005950927734375, 0.0, -0.0024509429931640625, 0.0, -0.007651329040527344, 0.0, -0.005741119384765625, -1.1444091796875e-05, -0.000536321836989373, -4.231926504871808e-05, -0.00113677978515625, -1.9073486328125e-05, -0.0011688459198921919, -0.00010883806680794805, -0.00818562414497137, -0.003300905227661133, -0.676457941532135, -0.0016728639602661133, -0.0017299652099609375, -9.72747802734375e-05, -0.00029754638671875, -1.9073486328125e-06, -0.0008487701416015625, 0.0, -0.0035686492919921875, -1.9073486328125e-06, -0.013004302978515625, -3.4332275390625e-05, -0.0019572817254811525, -0.00015818874817341566, -0.0014171600341796875, -2.47955322265625e-05, -0.0016880023758858442, -0.00013434881111606956, -0.007208344992250204, -0.0031205415725708008, -0.7626868486404419, -8.344648813363165e-05, -0.0009107589721679688, -1.1444091796875e-05, -0.0001201629638671875, -3.814697265625e-06, -0.000598907470703125, 0.0, -0.0022602081298828125, -1.9073486328125e-06, -0.008401870727539062, -2.6702880859375e-05, -0.0016691570635885, -0.00010597628715913743, -0.0013322830200195312, -2.6702880859375e-05, -0.0011817195918411016, -9.822838183026761e-05, -0.00719224801287055, -0.0016090869903564453, -0.781501293182373, -0.00017118453979492188, -0.009320259094238281, -9.5367431640625e-06, -3.814697265625e-06, -9.1552734375e-05, -1.9073486328125e-06, -0.007333993446081877, -8.463837730232626e-06, -0.002689361572265625, -0.0005922317504882812, -0.0005054473876953125, -1.9073486328125e-06, -0.005825042724609375, 0.0, -0.014886260032653809, -1.1920928244535389e-07, -0.006784677505493164, -3.933906555175781e-06, -5.7220458984375e-06, -0.0026073455810546875, 0.0, -0.004566712770611048, -0.00023910524032544345, -0.0013065338134765625, -0.0005817413330078125, -0.00099945068359375, -3.814697265625e-06, -0.027737854048609734, -5.722029527532868e-06, -0.007399797439575195, 0.0, -0.002460479736328125, -0.0002155303955078125, -1.33514404296875e-05, -2.9325463401619345e-05, -4.768370445162873e-07, -0.000576019287109375, -3.814697265625e-06, -0.0002880096435546875, 0.0, -0.0002193450927734375, 0.0, -0.005083322525024414, 0.0, -0.000400543212890625, -0.0012798309326171875, -1.9073486328125e-06, -3.4332275390625e-05, -4.220008850097656e-05, -1.3470649719238281e-05, -5.7220458984375e-06, -0.0002231597900390625, -1.9073486328125e-06, -0.0004425048828125, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.00033211708068847656, -1.9073486328125e-06, -0.000164031982421875, -0.0032253265380859375, -5.7220458984375e-06, -0.0004978179931640625, 0.0, -6.866455078125e-05, -0.0005588531494140625, -9.918212890625e-05, -1.9073486328125e-06, -5.340576171875e-05, -4.768370445162873e-07, 0.0, -1.6808508007670753e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -2.300739288330078e-05, -9.536738616588991e-07, -5.14984130859375e-05, -0.00093841552734375, -4.00543212890625e-05, -0.001407623291015625, -0.0001125335693359375, -0.0001277923583984375, -0.000843048095703125, -6.29425048828125e-05, -1.1444091796875e-05, -5.14984130859375e-05, 0.0, -2.0623145246645436e-05, -2.09808349609375e-05, -0.0019036531448364258, 0.0, -4.410743713378906e-06, 0.0, -3.314018249511719e-05, -6.318072337307967e-06, -0.0056304931640625, -2.09808349609375e-05, -0.001148223876953125, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.5881996154785156e-05, -4.374980926513672e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.918212890625e-05, 0.0, -6.4849853515625e-05, 0.0, -0.001361846923828125, 0.0, -1.9073486328125e-05, -0.0003452301025390625, -0.0007495880126953125, -2.86102294921875e-05, -5.53131103515625e-05, -0.000723719596862793, -1.1444091796875e-05], "choice_history": [97, 286, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 19, 169, 348, 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 85, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 102, 142, 346, 50, 174, "card", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>", 136, 318, 21, 174, "card", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>"]}]}
{"index": 3, "beams": [{"score": -0.04667246424854454, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole6": [{"value": {"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": "player", "hole1": "use", "_type": "Template63", "hole3": "game"}, "_type": "Expr"}, {"_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}}, "body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"hole0": 1, "_type": "Template61"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template77"}]}], "hole4": "player", "hole1": "SpellCard", "hole2": [{"hole0": "Arcane Explosion", "hole2": "MAGE", "hole1": 2, "_type": "Template34", "hole3": "FREE"}], "hole3": "use", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "ArcaneExplosion", "_type": "Template5"}, "score_history": [-2.86102294921875e-05, -0.000675201416015625, 0.0, -7.152556463552173e-06, -1.311301275563892e-06, -9.536737479720614e-07, -3.492804535198957e-05, -2.9802276912960224e-06, -6.67572021484375e-05, -0.0002040863037109375, -0.0001506805419921875, 0.0, -3.7670110032195225e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.1920928244535389e-07, 0.0, -0.00142669677734375, -1.33514404296875e-05, -0.0035573244094848633, -1.9073486328125e-06, -0.0007138252258300781, 0.0, -1.3709068298339844e-05, 0.0, -1.71661376953125e-05, -8.20159912109375e-05, -4.291534423828125e-06, -1.072883515007561e-05, -0.0055828094482421875, -0.0003223419189453125, -1.52587890625e-05, -0.0001316070556640625, -0.000217437744140625, -3.814697265625e-06, 0.0, -1.5616416931152344e-05, -2.288818359375e-05, -5.364416210795753e-05, 0.0, -2.360340477025602e-05, -1.1920928244535389e-07, -4.9709804443409666e-05, -4.768370445162873e-07, -0.000675201416015625, -0.0004215240478515625, -0.001262664794921875, -1.1444091796875e-05, -0.0011817216873168945, 0.0, -0.0001697540283203125, -0.0002040863037109375, -0.00023651123046875, -0.0001621246337890625, -5.340576171875e-05, 0.0, -0.0075626373291015625, -6.496906280517578e-05, -0.00013744831085205078, -1.1444091796875e-05, -5.53131103515625e-05, -0.000392913818359375, -0.0004024505615234375, -9.5367431640625e-06, -9.5367431640625e-06, -8.7738037109375e-05, -3.814697265625e-06, -2.777576446533203e-05, -3.814697265625e-06, -0.013510465621948242, 0.0, -0.0007616978837177157, -3.814697265625e-06, -1.1444091796875e-05, -0.000152587890625, -9.1552734375e-05, -0.001010894775390625, -0.0001735687255859375, -0.0003166195238009095, -5.483620952873025e-06, -0.001498881378211081, 0.0, -9.5367431640625e-06, -0.00078582763671875, -5.14984130859375e-05, -0.0006335876532830298, -5.0424259825376794e-05, -0.00023651123046875, -0.000186920166015625, -0.0004198546230327338, -0.00011873245239257812], "choice_history": [97, 285, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>"]}]}
{"index": 4, "beams": [{"score": -0.045213149268271025, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n", "model_output": {"hole6": [{"value": {"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": "player", "hole1": "use", "_type": "Template63", "hole3": "game"}, "_type": "Expr"}, {"_type": "For", "target": {"id": "c", "_type": "Name"}, "iter": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "_type": "Call", "func": {"id": "range", "_type": "Name"}}, "body": [{"value": {"hole0": {"id": "player", "_type": "Name"}, "hole1": "draw", "_type": "Template76"}, "_type": "Expr"}]}], "hole4": "player", "hole1": "SpellCard", "hole2": [{"hole0": "Arcane Intellect", "hole2": "MAGE", "hole1": 3, "_type": "Template34", "hole3": "FREE"}], "hole3": "use", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "ArcaneIntellect", "_type": "Template5"}, "score_history": [-3.24249267578125e-05, -0.000156402587890625, -2.0265579223632812e-06, -1.5973972040228546e-05, -1.311301275563892e-06, -1.2874601452494971e-05, -2.4199480321840383e-05, -5.841247457283316e-06, -5.14984130859375e-05, -0.0005207061767578125, -0.0002918243408203125, -2.384184699621983e-05, -4.8875728680286556e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.3841855067985307e-07, 0.0, -0.00213623046875, -0.00028228759765625, -0.0077381134033203125, -3.814697265625e-06, -0.0013580322265625, -3.814697265625e-06, -7.2479248046875e-05, 0.0, -0.00031280517578125, -0.0014400482177734375, -4.887576324108522e-06, -6.079673767089844e-06, -0.012002944946289062, -4.38690185546875e-05, -9.34600830078125e-05, -9.72747802734375e-05, -8.7738037109375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.849095471901819e-05, -2.682209014892578e-05, -3.886222839355469e-05, -1.7523765563964844e-05, -5.829300789628178e-05, 0.0, -3.898143404512666e-05, -1.0728830375228426e-06, -0.000797271728515625, -0.0003871917724609375, -0.00034332275390625, -3.24249267578125e-05, -0.006730477791279554, -1.1920928244535389e-07, -0.00226593017578125, -1.9073486328125e-05, -0.0001544952392578125, -0.0001277923583984375, -0.00037312493077479303, -9.536738616588991e-07, -0.0004444122314453125, -3.62396240234375e-05, -7.62939453125e-06, -0.0002087354368995875, -7.2479248046875e-05, -0.0015239715576171875, -1.9073486328125e-06, -0.00038803741335868835, -5.960446742392378e-06, -0.000308990478515625, -0.0013980865478515625, -0.00018310546875, -0.0012636184692382812, -5.340576171875e-05, -1.52587890625e-05, -2.86102294921875e-05, -0.00010692579962778836, 0.0, -0.000819087028503418, -5.7220458984375e-06], "choice_history": [97, 285, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "c", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "2", "<EOS>", 358, 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"]}]}
{"index": 5, "beams": [{"score": -0.24799047587903544, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n", "model_output": {"hole6": [{"value": {"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": "player", "hole1": "use", "_type": "Template63", "hole3": "game"}, "_type": "Expr"}, {"_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"_type": "Num", "n": 0}, {"hole0": 3, "_type": "Template61"}], "_type": "Call", "func": {"id": "range", "_type": "Name"}}, "body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "hole1": "append", "_type": "Template77"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "_type": "Call", "func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "random_choice"}}, "_type": "Assign"}, {"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"_type": "Num", "n": 1}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template77"}]}], "hole4": "player", "hole1": "SpellCard", "hole2": [{"hole0": "Arcane Missiles", "hole2": "MAGE", "hole1": 1, "_type": "Template34", "hole3": "FREE"}], "hole3": "use", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "ArcaneMissiles", "_type": "Template5"}, "score_history": [-2.288818359375e-05, -0.00026702880859375, 0.0, -5.483625955093885e-06, -7.152555099310121e-07, -3.933906555175781e-06, -7.045094389468431e-05, -1.4543427823809907e-05, -5.340576171875e-05, -0.0002880096435546875, -0.0004749298095703125, -5.841255187988281e-06, -4.923329470329918e-05, -2.0265579223632812e-06, 0.0, -1.1920926823449918e-07, 0.0, -0.004852294921875, -7.2479248046875e-05, -0.0031663179397583008, -1.9073486328125e-06, -0.00038182735443115234, 0.0, -3.743171691894531e-05, 0.0, -2.288818359375e-05, -6.29425048828125e-05, -2.2649765014648438e-06, -3.933906555175781e-06, -0.010865211486816406, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -6.115436553955078e-05, -4.76837158203125e-05, -1.8954269762616605e-05, 0.0, -1.1324880688334815e-05, 0.0, -2.574910467956215e-05, -7.152555099310121e-07, -0.0063343048095703125, -0.00017547607421875, -0.0051555633544921875, -4.00543212890625e-05, -0.0015213486040011048, -1.1920928244535389e-07, -0.000392913818359375, -1.1444091796875e-05, -0.00212860107421875, -2.47955322265625e-05, -0.004131426103413105, 0.0, -7.43865966796875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.004040956497192383, -3.814697265625e-06, -0.01833057403564453, -0.001277923583984375, -0.0010904055088758469, -0.0003041764139197767, -0.0022754669189453125, -0.016355514526367188, -2.288818359375e-05, -8.392333984375e-05, -2.6702880859375e-05, -0.0006351470947265625, -0.0006830610218457878, -2.0265579223632812e-06, -0.000156402587890625, -7.62939453125e-06, -0.002246856689453125, -0.00016021728515625, -0.0003452301025390625, -3.814697265625e-06, -0.005390286445617676, -3.933906555175781e-06, -0.0010700225830078125, 0.0, -1.1444091796875e-05, -0.001354217529296875, -1.52587890625e-05, -0.000171661376953125, -9.5367431640625e-06, -8.392333984375e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -0.0014882087707519531, 0.0, -0.007571220397949219, 0.0, -0.0001430511474609375, -6.4849853515625e-05, -0.000301361083984375, -1.9073486328125e-06, -0.001212119939737022, -1.1920928244535389e-07, -0.008428334258496761, -5.960462772236497e-07, -0.000152587890625, -0.008716583251953125, -6.866455078125e-05, -0.0001010894775390625, -9.5367431640625e-06, -0.0003566741943359375, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0274658203125, 0.0, -0.0006539727910421789, -9.536738616588991e-07, -0.05126476287841797, 0.0, -4.57763671875e-05, -0.0001125335693359375, -9.5367431640625e-06, -0.0028678178787231445, -5.483612312673358e-06, -0.0061664581298828125, -3.0517578125e-05, -0.0003643035888671875, -1.1444091796875e-05, -0.0007534027099609375, -1.9073486328125e-06, -0.0028498172760009766, -1.1920928244535389e-07, -0.002261160872876644, 0.0, -8.0108642578125e-05, -0.000659942626953125, 0.0, -0.01172792911529541, -3.576278118089249e-07, -0.0011310577392578125, -0.00274658203125, -0.0002574920654296875, -5.7220458984375e-06, -0.0008670062525197864, -3.7431014789035544e-05, -0.004266167525202036, 0.0, -0.00115966796875, -0.00127410888671875, -3.62396240234375e-05, -0.0016342857852578163, 0.0, -0.0004711151123046875, -5.7220458984375e-06, -0.0009012222290039062, -2.0265579223632812e-06], "choice_history": [97, 285, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 75, 298, "3", "<EOS>", 361, 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "append", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 102, 142, 346, 50, 174, "target", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "targets", "<EOS>", 136, 318, 21, 174, "target", "<EOS>", "damage", "<EOS>", 347, 52, 179, "1", "<EOS>", 50, 174, "self", "<EOS>"]}]}
{"index": 6, "beams": [{"score": -0.026006628136535426, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "name": "ArcaneShot", "body": [{"hole1": 1, "hole2": "HUNTER", "hole3": "FREE", "hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole0": "Arcane Shot", "_type": "Template14"}, {"hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"hole0": 2, "_type": "Template61"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template3"}]}]}, "score_history": [-0.0007762908935546875, -9.34600830078125e-05, -7.62939453125e-06, -9.34600830078125e-05, -7.2479248046875e-05, -6.318072337307967e-06, -1.1920928244535389e-07, -2.3841855067985307e-07, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.00019042077474296093, -2.682209014892578e-05, -1.4185905456542969e-05, -5.340576171875e-05, -0.004195213317871094, -0.000217437744140625, -2.3841855067985307e-07, -8.344645902980119e-05, -8.463837730232626e-06, -7.748603820800781e-06, -3.468915383564308e-05, 0.0, -0.0022393465042114258, 0.0, -5.1736828027060255e-05, 0.0, -0.0002079010009765625, -0.000133514404296875, -0.0002460479736328125, -0.00048089027404785156, -2.288818359375e-05, -0.00057220458984375, -1.33514404296875e-05, -2.288818359375e-05, -7.62939453125e-06, -6.103515625e-05, -3.0517578125e-05, -0.00038051605224609375, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0007730672368779778, -5.960462772236497e-07, -0.000370025634765625, -3.24249267578125e-05, -3.4332275390625e-05, 0.0, -7.82012939453125e-05, 0.0, -0.0005782842636108398, -2.0265579223632812e-06, -2.944469088106416e-05, -4.887569048150908e-06, -0.00020799753838218749, -1.311301275563892e-06, -0.00028228759765625, -0.000339508056640625, -6.29425048828125e-05, -0.011140704154968262, -8.344646857949556e-07, -1.33514404296875e-05, -4.38690185546875e-05, -0.0013664107536897063, -0.00023436531773768365], "choice_history": [96, 173, 358, 105, 152, "Arcane", "Shot", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Arcane", " ", "Shot", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"]}]}
{"index": 7, "beams": [{"score": -0.02357877408040565, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "model_output": {"hole6": [{"hole0": "Weapon", "hole2": 2, "hole1": 5, "_type": "Template68"}], "hole4": "player", "hole1": "WeaponCard", "hole2": [{"hole0": "Arcanite Reaper", "hole2": "WARRIOR", "hole1": 5, "_type": "Template31"}], "hole3": "create_weapon", "hole0": "ArcaniteReaper", "_type": "Template5"}, "score_history": [-0.0012531280517578125, -0.001506805419921875, -0.009176359511911869, -3.2186049793381244e-05, -7.855583680793643e-05, -0.0029408561531454325, -0.00016546178085263819, -1.1920922133867862e-06, -3.0517578125e-05, -0.0022983551025390625, -0.000598907470703125, -1.1920928244535389e-07, -1.8715843907557428e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -7.244452717714012e-05, 0.0, -0.000232696533203125, 0.0, -0.0010993480682373047, -1.9073486328125e-06, -0.0007397984736599028, -1.9073486328125e-06, -2.86102294921875e-05, -0.0012493133544921875, -0.0014247894287109375, -1.2040138244628906e-05, -5.483620952873025e-06, 0.0, -2.3603161025675945e-05, -0.0005755389574915171, -4.768370445162873e-07], "choice_history": [97, 283, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 358, 127, 230, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"]}]}
{"index": 8, "beams": [{"score": -0.19577663346046847, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "name": "Assassinate", "body": [{"hole1": 5, "hole2": "ROGUE", "hole3": "FREE", "hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole0": "Assassinate", "_type": "Template14"}, {"hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template3"}]}]}, "score_history": [-0.0006046295166015625, -0.000316619873046875, -3.814697265625e-06, -0.00018310546875, -5.91278076171875e-05, -1.013275596051244e-05, -0.00041321321623399854, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001952934544533491, -1.7762184143066406e-05, -3.933906555175781e-06, -1.71661376953125e-05, -0.11438655853271484, -0.0001087188720703125, -1.6689286894688848e-06, -7.152555099310121e-07, -4.768370445162873e-07, 0.0, -0.002705216407775879, 0.0, -0.00010251998173771426, 0.0, -0.000102996826171875, -9.918212890625e-05, -0.0001621246337890625, -0.00038623809814453125, -2.288818359375e-05, -0.0005970001220703125, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -3.62396240234375e-05, -2.86102294921875e-05, -0.0013409852981567383, -0.0002862215042114258, -0.000446319580078125, -5.91278076171875e-05, -0.03489875793457031, -1.9073486328125e-05, -0.0002651214599609375, -0.030221939086914062, -6.103515625e-05, 0.0, -0.001148223876953125, 0.0, -0.00051116943359375, 0.0, -5.7220458984375e-06, 0.0, -0.0029125106520950794, 0.0, -7.62939453125e-06, -0.0013580322265625, -1.9073486328125e-06, -0.001603841781616211, -3.933898824470816e-06], "choice_history": [96, 173, 358, 105, 152, "Assassinate", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Assassinate", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"]}]}
{"index": 9, "beams": [{"score": -0.7622365312895241, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "name": "Backstab", "body": [{"hole6": "find_minion_spell_target", "hole4": "target_func", "hole1": 0, "hole7": "filter_func", "hole8": {"args": {"hole0": "target", "_type": "Template49"}, "_type": "Lambda", "body": {"_type": "BoolOp", "values": [{"ops": [{"_type": "Eq"}], "comparators": [{"hole0": {"id": "target", "_type": "Name"}, "hole1": "calculate_max_health", "_type": "Template76"}], "_type": "Compare", "left": {"value": {"id": "target", "_type": "Name"}, "_type": "Attribute", "attr": "health"}}, {"hole0": {"id": "target", "_type": "Name"}, "hole1": "spell_targetable", "_type": "Template76"}], "op": {"_type": "And"}}}, "hole2": "ROGUE", "hole3": "FREE", "hole5": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "hole0": "Backstab", "_type": "Template4"}, {"hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"hole0": 2, "_type": "Template61"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template3"}]}]}, "score_history": [-0.12358474731445312, -8.58306884765625e-05, -3.814697265625e-06, -3.62396240234375e-05, -8.0108642578125e-05, -2.3364747903542593e-05, -0.0002795067266561091, -3.62396240234375e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0007172070909291506, -4.291534423828125e-06, -1.1563301086425781e-05, -7.62939453125e-05, -0.06959056854248047, -0.0006122589111328125, -1.0967194612021558e-05, 0.0, -1.1086401173088234e-05, -1.1920928244535389e-07, -0.0026497829239815474, 0.0, -0.0003509521484375, -3.814697265625e-06, -0.0009680986404418945, -5.53131103515625e-05, -0.0016002655029296875, 0.0, -9.918212890625e-05, 0.0, -0.0006160736083984375, -5.7220458984375e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.0024216175079345703, 0.0, -0.009123802185058594, 0.0, -0.0027570724487304688, -0.0011196136474609375, -0.00052642822265625, -4.1961669921875e-05, -0.0010321118170395494, -6.437291176553117e-06, -0.0002155303955078125, -0.000396728515625, -0.0007076263427734375, -0.0006084442138671875, -0.0012226104736328125, -7.62939453125e-06, -0.0028409957885742188, -3.814697265625e-06, -0.0014705657958984375, -1.9073486328125e-06, -0.0010569094447419047, -1.8954096958623268e-05, -0.0088958740234375, -3.24249267578125e-05, -2.09808349609375e-05, -0.33576488494873047, -1.1444091796875e-05, -0.004986763000488281, -4.00543212890625e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.0024270927533507347, -2.9802276912960224e-06, -0.003239870071411133, -1.919269561767578e-05, -0.0036230087280273438, -1.33514404296875e-05, -2.09808349609375e-05, -1.33514404296875e-05, -0.00023114588111639023, -3.0398065064218827e-05, -0.01484751421958208, -4.291534423828125e-06, -0.054633140563964844, -0.0018777847290039062, -6.29425048828125e-05, 0.0, -6.67572021484375e-05, 0.0, -0.0010303258895874023, 0.0, -7.867813110351562e-06, -1.1920928244535389e-07, -0.0680670216679573, 0.0, -5.53131103515625e-05, -0.011196136474609375, -1.33514404296875e-05, -0.023414969444274902, -1.1920928244535389e-07, -2.09808349609375e-05, -3.4332275390625e-05, -5.817396959173493e-05, -0.00031065940856933594], "choice_history": [96, 173, 358, 105, 152, "Backstab", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Backstab", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 167, 0, 282, "target", "<EOS>", 15, 146, 2, 347, 46, 153, 13, 143, 21, 174, "target", "<EOS>", "health", "<EOS>", 343, 4, 346, 85, 317, 21, 174, "target", "<EOS>", "calculate_max_health", "<EOS>", 85, 317, 21, 174, "target", "<EOS>", "spell_targetable", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"]}]}
{"index": 10, "beams": [{"score": -0.09943385804180593, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "name": "BlessingOfKings", "body": [{"hole0": "Blessing of Kings", "hole2": "PALADIN", "hole1": 4, "_type": "Template2"}, {"hole6": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "hole4": "change_attack", "hole1": "use", "hole7": "increase_health", "hole8": [{"_type": "Num", "n": 4}], "hole2": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "hole3": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "hole5": [{"_type": "Num", "n": 4}], "hole0": {"hole0": "super", "_type": "Template79"}, "_type": "Template7"}]}]}, "score_history": [-0.00081634521484375, -0.000152587890625, -2.86102294921875e-05, -0.000209808349609375, -5.91278076171875e-05, -4.458328112377785e-05, -0.00037931581027805805, -1.1801710570580326e-05, -0.00015245705435518175, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -0.0016894015716388822, -2.7179718017578125e-05, -8.404254913330078e-05, -6.29425048828125e-05, -0.005322456359863281, -7.62939453125e-05, -4.172316494077677e-06, -0.000274658203125, -0.001350001199170947, -8.58306884765625e-05, -0.0006036758422851562, 0.0, -0.00010644747817423195, 0.0, -0.004135847091674805, -2.1457672119140625e-06, -0.00551605224609375, -0.0005941390991210938, -0.000244140625, -3.814697265625e-06, -0.00022744358284398913, -6.198883056640625e-06, -0.002834320068359375, -4.017353057861328e-05, -0.000766754150390625, -0.0002727508544921875, -0.0002422332763671875, -0.002029061084613204, -3.4570634852570947e-06, -0.001617431640625, -7.62939453125e-06, -0.00018894672393798828, -2.3841855067985307e-07, -0.0005474090576171875, -1.71661376953125e-05, -4.38690185546875e-05, 0.0, -0.0002548694610595703, -8.344646857949556e-07, -0.00011551367060746998, -4.291525328881107e-06, -0.06195329129695892, -3.814697265625e-06, -2.47955322265625e-05, -0.0003833770751953125, -1.9073486328125e-06, -0.00013184142881073058, -0.00010514259338378906, -0.000301361083984375, 0.0, -3.24249267578125e-05, 0.0, -0.00081634521484375, -2.0265579223632812e-06, -0.00021791458129882812, 0.0, -0.0034667253494262695, -1.9073486328125e-06, -9.5367431640625e-05, -0.0002651214599609375, 0.0, -0.0002631847746670246, -4.780292510986328e-05], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Kings", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 52, 179, "4", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 52, 179, "4", "<EOS>"]}]}
{"index": 11, "beams": [{"score": -0.09016045630595926, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "name": "BlessingOfMight", "body": [{"hole1": 1, "hole2": "PALADIN", "hole3": "FREE", "hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole0": "Blessing of Might", "_type": "Template14"}, {"hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"_type": "Num", "n": 3}], "hole1": "change_attack", "_type": "Template3"}]}]}, "score_history": [-0.0005588531494140625, -0.00012969970703125, -2.47955322265625e-05, -9.72747802734375e-05, -4.9591064453125e-05, -5.054346183896996e-05, -0.0003923103795386851, -8.296652958961204e-05, -8.583032467868179e-06, -1.52587890625e-05, -1.9073486328125e-06, -3.814697265625e-05, -0.0005719813052564859, -9.655952453613281e-06, -6.341934204101562e-05, -7.2479248046875e-05, -0.0016069412231445312, -0.0011539459228515625, -1.6689286894688848e-06, -0.0001283884048461914, -0.00013816128193866462, -6.866455078125e-05, -0.00018799304962158203, -0.0001544952392578125, -6.556488642672775e-06, -1.52587890625e-05, -0.0002378225326538086, -1.9073486328125e-06, -0.00017404556274414062, 0.0, -0.0001049041748046875, -0.0001392364501953125, -9.5367431640625e-05, -0.0004546642303466797, -3.814697265625e-06, -0.0006542205810546875, -1.33514404296875e-05, -7.82012939453125e-05, 0.0, -5.340576171875e-05, -3.814697265625e-06, -9.918212890625e-05, -2.288818359375e-05, -3.24249267578125e-05, -1.33514404296875e-05, -0.0022031066473573446, 0.0, -0.0002803802490234375, -0.0002593994140625, -9.5367431640625e-06, 0.0, -0.0003147125244140625, 0.0, -5.352497100830078e-05, 0.0, -0.0004220008850097656, -2.384185791015625e-06, -0.007933378219604492, -1.1920928244535389e-07, -3.814697265625e-06, -0.008638381958007812, -0.00029754638671875, -0.06193002685904503, 0.0], "choice_history": [96, 173, 358, 105, 152, "Blessing", "Of", "Might", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Blessing", " ", "of", " ", "Might", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 52, 179, "3", "<EOS>"]}]}
{"index": 12, "beams": [{"score": -0.01113992545586484, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole6": [{"hole0": 3, "hole1": 2, "_type": "Template62"}], "hole4": "player", "hole1": "MinionCard", "hole2": [{"hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "hole1": 2, "hole2": "FREE", "hole3": "minion_type", "hole0": "Bloodfen Raptor", "_type": "Template26"}], "hole3": "create_minion", "hole0": "BloodfenRaptor", "_type": "Template5"}, "score_history": [-4.57763671875e-05, -0.0001277923583984375, -0.00014054289204068482, -1.4066622497921344e-05, -2.3841855067985307e-07, -1.4156103134155273e-06, -2.1457672119140625e-05, -8.58306884765625e-06, -3.62396240234375e-05, -0.0003986358642578125, -0.00035858154296875, -5.960462772236497e-07, -4.398822784423828e-05, -7.867813110351562e-06, -2.86102294921875e-05, -3.56431191903539e-05, 0.0, -0.0002307891845703125, -3.0517578125e-05, -0.0008531808853149414, -2.9802317840221804e-06, -0.0010929107666015625, -0.000152587890625, -2.288818359375e-05, 0.0, -2.300739288330078e-05, -3.814697265625e-06, -0.0043697357177734375, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.0006657838821411133, 0.0, -7.62939453125e-06, -0.000560760498046875, -4.57763671875e-05, -1.2278481335670222e-05, 0.0, -0.0017857120838016272, 0.0], "choice_history": [97, 283, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"]}]}
{"index": 13, "beams": [{"score": -0.07911058680496552, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n", "model_output": {"hole6": [{"value": {"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": "player", "hole1": "use", "_type": "Template63", "hole3": "game"}, "_type": "Expr"}, {"_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}, "body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": 3, "hole1": "change_temp_attack", "_type": "Template65"}]}], "hole4": "player", "hole1": "SpellCard", "hole2": [{"hole0": "Bloodlust", "hole2": "SHAMAN", "hole1": 5, "_type": "Template31"}], "hole3": "use", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Bloodlust", "_type": "Template5"}, "score_history": [-1.1444091796875e-05, -0.0006351470947265625, -2.0265558760002023e-06, -2.6106754376087338e-05, -9.536736342852237e-07, -4.696843461715616e-05, -1.6689286894688848e-06, -4.38690185546875e-05, -0.000530242919921875, -0.000156402587890625, -5.483612312673358e-06, -2.2649765014648438e-06, -8.821448318485636e-06, 0.0, -0.002079010009765625, 0.0, -0.0001735687255859375, 0.0, -3.933906555175781e-06, 0.0, -0.000244140625, -4.9591064453125e-05, -4.1723224057932384e-06, -0.002146005630493164, -0.00353240966796875, -7.62939453125e-06, -4.9591064453125e-05, -0.000164031982421875, -9.918212890625e-05, -0.0001220703125, -1.33514404296875e-05, -0.00010895729064941406, -9.34600830078125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -4.768371127283899e-06, -4.768370445162873e-07, -6.425376341212541e-05, -4.768370445162873e-07, -0.0011043548583984375, -0.000164031982421875, -0.000217437744140625, -4.57763671875e-05, -0.004951357841491699, -1.9073486328125e-06, -0.0047245025634765625, -1.9073486328125e-06, -0.0029468536376953125, -1.9073486328125e-06, -0.0002765655517578125, 0.0, -0.001434326171875, -3.814697265625e-06, -5.7220458984375e-06, -0.008164405822753906, -0.0032596588134765625, -0.0003452301025390625, -4.9591064453125e-05, -0.0038034915924072266, 0.0, -0.0077239274978637695, -6.67572021484375e-05, -0.0293711069971323, 0.0], "choice_history": [97, 285, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 133, 304, 21, 174, "minion", "<EOS>", "change_temp_attack", "<EOS>", "3", "<EOS>"]}]}
{"index": 14, "beams": [{"score": -0.17958563907684066, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "model_output": {"hole6": [{"hole0": 2, "hole2": "charge", "hole1": 1, "_type": "Template50", "hole3": {"value": true, "_type": "NameConstant"}}], "hole4": "player", "hole1": "MinionCard", "hole2": [{"hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}, "hole1": 2, "hole2": "COMMON", "hole3": "minion_type", "hole0": "Bluegill Warrior", "_type": "Template26"}], "hole3": "create_minion", "hole0": "BluegillWarrior", "_type": "Template5"}, "score_history": [-0.0002384185791015625, -9.5367431640625e-06, -0.1592073142528534, -0.00018690305296331644, -1.1920928244535389e-07, -3.501772880554199e-07, -3.266334533691406e-05, -1.0490381100680679e-05, -2.6702880859375e-05, -0.0035724639892578125, -0.000743865966796875, -1.1920928244535389e-07, -7.05718994140625e-05, -2.384185791015625e-05, 0.0, -0.0040847063064575195, -1.33514404296875e-05, -0.000301361083984375, -1.9073486328125e-06, -0.00030553340911865234, -2.9802276912960224e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.00010502338409423828, -8.344646857949556e-07, -0.005334973335266113, 0.0, -2.09808349609375e-05, 0.0, -0.000240325927734375, 0.0, -9.5367431640625e-06, -0.0016422271728515625, -9.5367431640625e-06, -2.1457672119140625e-06, -8.583032467868179e-06, -0.00032889749854803085, -1.1920928244535389e-07, -0.001230596681125462, -2.3841855067985307e-07, -0.00084686279296875, -1.71661376953125e-05, -0.0009315013885498047, 0.0], "choice_history": [97, 283, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"]}]}
{"index": 15, "beams": [{"score": -0.12138783267320719, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole6": [{"hole0": 1, "hole1": 1, "_type": "Template62"}], "hole4": "player", "hole1": "MinionCard", "hole2": [{"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": [{"s": "Boar", "_type": "Str"}, {"_type": "Num", "n": 1}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "hole1": "__init__", "_type": "Template77", "hole3": [{"hole0": "BEAST", "_type": "Template75"}]}], "hole3": "create_minion", "hole0": "Boar", "_type": "Template5"}, "score_history": [-4.1961669921875e-05, -7.62939453125e-05, -1.4305104514278355e-06, -0.00013648608000949025, -3.570457920432091e-07, -0.00016331623191945255, -5.245203283266164e-06, -3.814697265625e-05, -0.0005283355712890625, -0.0036373138427734375, -7.2479248046875e-05, -9.5367431640625e-06, -2.0265579223632812e-06, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.00029754638671875, -0.0003604888916015625, -4.38690185546875e-05, -4.410734163684538e-06, -2.741813204920618e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.00010609157470753416, -1.9073486328125e-06, -3.0517578125e-05, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -2.8848648071289062e-05, -5.7220458984375e-06, -4.4345855712890625e-05, -9.5367431640625e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.000133514404296875, 0.0, -4.410743713378906e-05, -4.541872476693243e-05, -0.018835067749023438, -1.9073486328125e-06, -1.33514404296875e-05, -9.34600830078125e-05, -2.5868412194540724e-05, 0.0, -0.0002040863037109375, -0.002429962158203125, -0.0006561279296875, -0.08888399600982666, 0.0, -1.1444091796875e-05, 0.0, -0.0041697025299072266, 0.0, -3.62396240234375e-05, -3.4332275390625e-05, -3.814697265625e-06, -1.3113067325321026e-06, -4.768370445162873e-07, -7.712515071034431e-09, -2.3841855067985307e-07], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Boar", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"]}]}
{"index": 16, "beams": [{"score": -0.13961263883481934, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "model_output": {"hole6": [{"value": {"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": "player", "hole1": "use", "_type": "Template63", "hole3": "game"}, "_type": "Expr"}, {"hole0": "self", "hole2": "change_attack", "hole1": "target", "_type": "Template52"}, {"value": {"hole0": "<UNK>", "_type": "Template37"}, "_type": "Expr"}], "hole4": "player", "hole1": "SpellCard", "hole2": [{"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": [{"s": "Charge", "_type": "Str"}, {"_type": "Num", "n": 3}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "hole1": "__init__", "_type": "Template77", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}]}], "hole3": "use", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Charge", "_type": "Template5"}, "score_history": [-0.0006275177001953125, -0.0003147125244140625, -0.0020334296859800816, -7.688998448429629e-05, -6.91385503159836e-05, -7.450580596923828e-05, -2.3841830625315197e-06, -9.1552734375e-05, -0.000133514404296875, -0.0012493133544921875, -1.33514404296875e-05, 0.0, -6.7470311478246e-05, -1.1444091796875e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0024623870849609375, -7.62939453125e-05, -0.0009174346923828125, -1.7881377516459906e-06, -0.0013324019964784384, -4.38690185546875e-05, -1.1444091796875e-05, -1.1920917586394353e-07, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.110004425048828e-05, -3.814697265625e-06, -0.0006554126157425344, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -5.91278076171875e-05, -1.1444091796875e-05, -0.00057220458984375, -5.7220458984375e-06, -0.000347137451171875, -2.288818359375e-05, -7.62939453125e-06, -0.00023305416107177734, -1.9073486328125e-06, -0.011335372924804688, -2.288818359375e-05, -0.00045013427734375, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.000301361083984375, -4.76837158203125e-05, -2.86102294921875e-05, -1.71661376953125e-05, -0.03150200843811035, 0.0, -0.0009958744049072266, 0.0, -3.933906555175781e-06, 0.0, -4.76837158203125e-05, -0.0003032684326171875, -2.384185791015625e-06, -5.9604644775390625e-06, -0.01857280731201172, -0.0021266937255859375, -0.0001506805419921875, -0.000400543212890625, -0.00020599365234375, -5.7220458984375e-06, 0.0, -5.6028297876764555e-06, -5.14984130859375e-05, -5.841255187988281e-06, 0.0, -7.748603820800781e-06, 0.0, -5.280971163301729e-05, -7.152555099310121e-07, -0.02556896209716797, -0.0004425048828125, -0.000597357633523643, -0.0024012450594455004, -0.00031113624572753906, -2.2649765014648438e-06, -0.0011394020402804017, 0.0, -0.00064849853515625, -9.5367431640625e-06, -0.027243614196777344, -0.0007839202880859375, -0.0020422935485839844, -7.545940025011078e-05], "choice_history": [97, 285, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Charge", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 131, 289, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 106, 155, 26, 236, "<UNK>", "<EOS>"]}]}
{"index": 17, "beams": [{"score": -0.021697974981165657, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"hole6": [{"hole0": 4, "hole1": 5, "_type": "Template62"}], "hole4": "player", "hole1": "MinionCard", "hole2": [{"hole0": "Chillwind Yeti", "hole2": "ALL", "hole1": 4, "_type": "Template31"}], "hole3": "create_minion", "hole0": "ChillwindYeti", "_type": "Template5"}, "score_history": [-0.000102996826171875, -1.71661376953125e-05, -0.0009667137055657804, -1.871574750111904e-05, 0.0, -5.913898348808289e-07, -1.52587890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -0.001621246337890625, -0.0001373291015625, -5.245195097813848e-06, -4.482269287109375e-05, -1.1920928244535389e-07, 0.0, -0.00022934697335585952, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001163482666015625, 0.0, -8.58306884765625e-05, 0.0, -1.52587890625e-05, -0.0001239776611328125, -7.62939453125e-06, -9.655945177655667e-06, -1.1920928244535389e-07, -0.018158145248889923, 0.0], "choice_history": [97, 283, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"]}]}
{"index": 18, "beams": [{"score": -0.43014656753774716, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n", "model_output": {"hole6": [{"value": {"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": "player", "hole1": "use", "_type": "Template63", "hole3": "game"}, "_type": "Expr"}, {"hole0": "player", "hole2": "change_temp_attack", "hole1": "hero", "_type": "Template52"}, {"hole0": "player", "hole2": "increase_armor", "hole1": "hero", "_type": "Template52"}], "hole4": "player", "hole1": "SpellCard", "hole2": [{"hole0": "Claw", "hole2": "DRUID", "hole1": 1, "_type": "Template34", "hole3": "FREE"}], "hole3": "use", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Claw", "_type": "Template5"}, "score_history": [-1.52587890625e-05, -0.0010433197021484375, -6.282132380874828e-05, -7.04508347553201e-05, -5.209304072195664e-05, -2.2411237296182662e-05, -2.3841855067985307e-07, -0.0003299713134765625, -0.00069427490234375, -4.00543212890625e-05, -1.311301275563892e-06, -2.634504016896244e-05, -1.6689252788637532e-06, 0.0, -0.001667022705078125, 0.0, -0.000217437744140625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -7.62939453125e-06, -2.0265579223632812e-06, -1.52587890625e-05, -0.0004634857177734375, -0.0024738311767578125, -0.0010356903076171875, -6.103515625e-05, -0.0001850128173828125, -6.4849853515625e-05, -3.814697265625e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.9431114196777344e-05, -2.3841855067985307e-07, -0.16036605834960938, -0.0005035400390625, -7.069110870361328e-05, 0.0, -0.0027360916137695312, -5.7220458984375e-06, -0.017402885481715202, -1.9073486328125e-06, -0.0016183853149414062, -0.00202178955078125, -1.1444091796875e-05, 0.0, -0.0011816024780273438, 0.0, -0.23556339740753174, 0.0], "choice_history": [97, 285, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>"]}]}
{"index": 19, "beams": [{"score": -0.5540701476085843, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole6": [{"value": {"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": "player", "hole1": "use", "_type": "Template63", "hole3": "game"}, "_type": "Expr"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}}, "_type": "Assign"}, {"_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "_type": "Call", "func": {"id": "range", "_type": "Name"}}, "body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "_type": "Call", "func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "random_choice"}}, "_type": "Assign"}, {"hole0": {"id": "minions", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}], "hole1": "remove", "_type": "Template77"}, {"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"hole0": 2, "_type": "Template61"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template77"}]}], "hole4": "player", "hole1": "SpellCard", "hole7": [{"args": {"args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"value": {"_type": "BoolOp", "values": [{"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": "player", "hole1": "can_use", "_type": "Template63", "hole3": "game"}, {"ops": [{"_type": "GtE"}], "comparators": [{"_type": "Num", "n": 2}], "_type": "Compare", "left": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"id": "len", "_type": "Name"}}}], "op": {"_type": "And"}}, "_type": "Return"}]}], "hole2": [{"hole0": "Cleave", "hole2": "WARRIOR", "hole1": 2, "_type": "Template31"}], "hole3": "use", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Cleave", "_type": "Template5"}, "score_history": [-1.71661376953125e-05, -0.04876136779785156, -9.298280929215252e-06, -0.0011407823767513037, -1.013253495329991e-05, -0.00021564960479736328, -4.88758041683468e-06, -5.7220458984375e-06, -0.0040435791015625, -0.0001068115234375, -4.29153169534402e-06, -5.9604644775390625e-06, -5.722029527532868e-06, 0.0, -0.00029218191048130393, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -7.033347174001392e-06, 0.0, -0.0002040863037109375, -0.000148773193359375, -5.364416665543104e-06, -4.410743713378906e-06, -0.018331527709960938, -1.1444091796875e-05, -0.0002384185791015625, -2.47955322265625e-05, -3.62396240234375e-05, -1.1444091796875e-05, 0.0, -3.719329833984375e-05, -0.00011265277862548828, -3.0636758310720325e-05, -1.1920928244535389e-07, -8.344650268554688e-06, -1.1920928244535389e-07, -1.1682502190524247e-05, -4.768370445162873e-07, -0.04137229919433594, -1.33514404296875e-05, -0.000640869140625, -3.814697265625e-06, -5.340576171875e-05, -0.0006089566741138697, -0.0002956197422463447, -0.0018024444580078125, -0.0001010894775390625, -0.0001659393310546875, -1.71661376953125e-05, -0.00018310546875, 0.0, -0.005362749099731445, -3.4332275390625e-05, -0.00023651123046875, -5.7220458984375e-06, -7.62939453125e-06, -0.020421981811523438, -4.38690185546875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.000110626220703125, -2.47955322265625e-05, -0.00011599059507716447, -3.933906555175781e-06, -0.007896661758422852, 0.0, -0.0003681182861328125, -5.841255187988281e-06, -0.0020122528076171875, -0.0008544921875, -9.5367431640625e-05, -0.00055694580078125, -0.0019695477094501257, -1.9073486328125e-06, -0.0006351470947265625, -3.814697265625e-06, -0.0001983642578125, -6.4849853515625e-05, -0.004082579165697098, -1.1920928244535389e-07, -0.0001964569091796875, -1.71661376953125e-05, -7.62939453125e-06, -0.0003399766865186393, -4.9591064453125e-05, -0.0003662109375, 0.0, -0.014142811298370361, 0.0, -0.01574993133544922, -0.002960205078125, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -6.866455078125e-05, -0.011373840272426605, -1.7166135876323096e-05, -0.0003185272216796875, -1.52587890625e-05, -0.00012969970703125, -1.9073486328125e-06, -0.00030517578125, 0.0, -0.0015034668613225222, -1.1920928244535389e-07, -0.001614689826965332, -1.9073486328125e-06, -0.0001392364501953125, -0.0015506744384765625, -5.7220458984375e-06, -0.0002937614917755127, -0.0012702918611466885, -0.001461029052734375, -0.0007381439208984375, -0.001796722412109375, -0.0001068115234375, -0.0003153776633553207, -0.0011363490484654903, -0.016005996614694595, -2.741813204920618e-06, -0.000240325927734375, -0.0001220703125, -1.33514404296875e-05, -0.07540115714073181, -1.1920928244535389e-07, -0.0005950927734375, -0.0008087158203125, -0.0016040802001953125, -1.9073486328125e-06, -0.04658894240856171, -6.556489552167477e-06, -0.012260095216333866, 0.0, -8.20159912109375e-05, -0.0005283355712890625, -0.0001373291015625, -0.10673311352729797, 0.0, -0.000202178955078125, -3.62396240234375e-05, -0.0002443790144752711, -1.7404556274414062e-05, -7.62939453125e-05, -0.0002803802490234375, -7.62939453125e-05, -0.0013718213886022568, 0.0, -7.43865966796875e-05, -0.0001659393310546875, -0.000152587890625, -0.000518798828125, -9.000300633488223e-05, -5.245195097813848e-06, -1.9073486328125e-06, -0.00032269948860630393, 0.0, -1.9073486328125e-06, -1.9431105101830326e-05, -1.0728830375228426e-06, -2.288818359375e-05, -0.0004978179931640625, -0.0004367828369140625, -0.001308441162109375, -0.0018253326416015625, -0.00014495849609375, -0.010479927062988281, -0.0012607574462890625, -4.76837158203125e-05, -0.0002002716064453125, 0.0, -0.00045511050848290324, -2.3365020751953125e-05, -0.0006037686252966523, -1.1920928244535389e-07, -8.20142449811101e-05, 0.0, -0.00010895390732912347, -1.549708758830093e-05, -0.007460594177246094, -3.0517578125e-05, -0.0005283355712890625, -7.62939453125e-05, -0.0004558563232421875, -1.71661376953125e-05, -0.0016551699955016375, -1.6331669030478224e-05, -3.4332275390625e-05, -0.006058692932128906, -0.000125885009765625, -0.0010395050048828125, -1.52587890625e-05, -4.1961669921875e-05, -5.7220458984375e-06, -0.00013446807861328125, -1.1444091796875e-05, -0.01022350788116455, 0.0, -0.00019454954599495977, -9.775161743164062e-06, -0.017095565795898438, -0.0018329620361328125, -6.29425048828125e-05, -3.814697265625e-06, -7.82012939453125e-05, -0.00218523433431983, 0.0], "choice_history": [97, 286, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "minions", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "2", "<EOS>", 360, 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "minions", "<EOS>", 136, 318, 21, 174, "minions", "<EOS>", "remove", "<EOS>", 346, 50, 174, "minion", "<EOS>", 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "2", "<EOS>"]}]}
{"index": 20, "beams": [{"score": -0.26675887403727216, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole6": [{"value": {"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": "player", "hole1": "use", "_type": "Template63", "hole3": "game"}, "_type": "Expr"}, {"_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}}, "body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"hole0": 2, "_type": "Template61"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template77"}]}, {"hole0": {"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "hole2": [{"hole0": 2, "_type": "Template61"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template77"}], "hole4": "player", "hole1": "SpellCard", "hole2": [{"hole0": "Consecration", "hole2": "PALADIN", "hole1": 4, "_type": "Template31"}], "hole3": "use", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Consecration", "_type": "Template5"}, "score_history": [-0.000133514404296875, -0.000225067138671875, -2.50339189733495e-06, -1.871571657829918e-05, -3.814697265625e-06, -1.764294211170636e-05, -8.940656698541716e-06, -9.5367431640625e-06, -0.0015926361083984375, -0.0003261566162109375, -1.0728830375228426e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, 0.0, -0.000637054443359375, -4.172325134277344e-06, -3.910064697265625e-05, 0.0, -5.43593596376013e-05, 0.0, -0.0001277923583984375, -1.33514404296875e-05, -5.006785613659304e-06, -5.9604644775390625e-06, -0.002777099609375, -1.1444091796875e-05, -0.000148773193359375, -2.6702880859375e-05, -2.47955322265625e-05, -2.47955322265625e-05, 0.0, -2.8967857360839844e-05, -2.6702880859375e-05, -3.7670135498046875e-05, 0.0, -1.4662741705251392e-05, -1.1920928244535389e-07, -2.7894893719349056e-05, -5.960462772236497e-07, -0.000141143798828125, -0.0011444091796875, -0.0052642822265625, -9.5367431640625e-06, -0.004397273063659668, -1.1920928244535389e-07, -0.000102996826171875, -5.53131103515625e-05, -0.0010242462158203125, -0.00125885009765625, -5.14984130859375e-05, -1.9073486328125e-06, -0.0013071298599243164, -0.0001373291015625, -8.785724639892578e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0008029937744140625, -8.20159912109375e-05, -3.4332275390625e-05, -4.1961669921875e-05, -0.000247955322265625, -2.47955322265625e-05, -5.364418029785156e-05, 0.0, -0.0010761022567749023, 0.0, -0.0037488937377929688, -1.9073486328125e-06, -1.1444091796875e-05, -0.0016536712646484375, -0.0007457733154296875, -0.0034961700439453125, -0.000331878662109375, -0.0002708400716073811, -7.152531907195225e-06, -0.004013931378722191, -1.1920928244535389e-07, -8.7738037109375e-05, -0.0008106231689453125, -6.866455078125e-05, -0.001137081766501069, -7.60526381782256e-05, -1.52587890625e-05, -4.38690185546875e-05, -0.00312774907797575, -0.00029861892107874155, -0.002864837646484375, -0.0006008148193359375, -0.0008792877197265625, -0.009372711181640625, -0.0005626678466796875, -1.1444091796875e-05, -0.19164085388183594, -1.9073486328125e-06, -0.00030934796086512506, -4.768370445162873e-07, -0.006148813758045435, 0.0, -0.0046877991408109665, -2.3603161025675945e-05, -0.000528820208273828, -3.576278118089249e-07, -0.0004901885986328125, -0.0009241104125976562, -4.76837158203125e-05, -0.003352804109454155, -5.245195097813848e-06, -3.4332275390625e-05, -5.7220458984375e-05, -0.0004438015748746693, -8.416139462497085e-05], "choice_history": [97, 285, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"]}]}
{"index": 21, "beams": [{"score": -0.030878485761377306, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "model_output": {"hole6": [{"hole0": 9, "hole1": 5, "_type": "Template62"}], "hole4": "player", "hole1": "MinionCard", "hole2": [{"hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "hole1": 7, "hole2": "COMMON", "hole3": "minion_type", "hole0": "Core Hound", "_type": "Template26"}], "hole3": "create_minion", "hole0": "CoreHound", "_type": "Template5"}, "score_history": [-0.0001125335693359375, -8.0108642578125e-05, -0.0005603847093880177, -1.490105023549404e-05, -2.50339189733495e-06, -4.637986421585083e-07, -3.314018249511719e-05, -1.0728823326644488e-05, -0.0002803802490234375, -0.011859893798828125, -0.00041961669921875, -3.576278118089249e-07, -2.300739288330078e-05, -5.364416665543104e-06, -1.9073486328125e-06, -0.0003628726990427822, -3.814697265625e-06, -0.0012416839599609375, -1.9073486328125e-06, -0.0135270357131958, -3.576278118089249e-07, -4.00543212890625e-05, 0.0, -1.52587890625e-05, 0.0, -5.7220458984375e-05, -2.1457672119140625e-06, -0.0009766817092895508, 0.0, -1.52587890625e-05, 0.0, -0.0007883310317993164, 0.0, -7.62939453125e-05, -6.29425048828125e-05, -2.09808349609375e-05, -1.2397689715726301e-05, -4.768370445162873e-07, -0.00026747933588922024, 0.0], "choice_history": [97, 283, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "9", "<EOS>", "5", "<EOS>"]}]}
{"index": 22, "beams": [{"score": -0.3744940104579584, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "name": "Corruption", "body": [{"hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "hole1": 1, "hole2": "WARLOCK", "hole3": "target_func", "hole0": "Corruption", "_type": "Template8"}, {"hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"args": [{"_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}, "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template79"}, "_type": "keyword", "arg": "player"}]}, {"hole0": "Kill", "hole3": "SelfSelector", "_type": "Template44"}], "_type": "Call", "func": {"id": "Effect", "_type": "Name"}}], "hole1": "add_effect", "_type": "Template3"}]}]}, "score_history": [-0.0028820037841796875, -6.4849853515625e-05, -5.7220458984375e-06, -0.0005741119384765625, -0.00037384033203125, -2.646422763064038e-05, -0.00019321995205245912, -5.7220458984375e-06, -1.71661376953125e-05, -2.288818359375e-05, -0.00016717659309506416, -7.748603820800781e-06, -5.9604644775390625e-06, -1.71661376953125e-05, -0.2303152084350586, -0.000408172607421875, -1.41858699862496e-05, -2.2649765014648438e-06, -1.1920928244535389e-07, 0.0, -0.0009746551513671875, 0.0, -0.001415252685546875, -7.62939453125e-06, -7.05718994140625e-05, -5.7220458984375e-06, -0.000431060791015625, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -0.0002384185791015625, -9.5367431640625e-06, -0.0002079010009765625, -0.0002155303955078125, -0.012827634811401367, -7.62939453125e-06, -0.0002307891845703125, -0.0004940032958984375, -4.9591064453125e-05, 0.0, -0.0075397491455078125, 0.0, -0.0001926422119140625, 0.0, -0.0005487203598022461, 0.0, -0.015759028494358063, -1.33514404296875e-05, -0.0001087188720703125, -0.00032806396484375, -0.0009136199951171875, -0.00023651123046875, -1.9073486328125e-06, -0.019246339797973633, -0.00020181271247565746, -9.5367431640625e-06, -0.0022125244140625, -0.00032806396484375, -0.00011444091796875, -0.0003147125244140625, -0.0007745026960037649, -0.0008474588394165039, -2.86102294921875e-05, -5.340576171875e-05, -0.00016021728515625, -5.7220458984375e-06, -0.013159751892089844, 0.0, -0.0002593994140625, 0.0, -0.0444035530090332, -6.520748138427734e-05, 0.0, -0.0010700225830078125, -0.006722450256347656, -0.0017595278332009912, -0.0006612539291381836, -0.004104137420654297, 0.0, 0.0], "choice_history": [96, 173, 358, 105, 152, "Corruption", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 137, 326, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 346, 45, 150, 21, 174, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Turn", "Started", "<EOS>", 353, 95, 336, "player", "<EOS>", 38, 325, "Enemy", "Player", "<EOS>", 64, 269, "Kill", "<EOS>", "Self", "Selector", "<EOS>"]}]}
{"index": 23, "beams": [{"score": -0.009113491693476305, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "model_output": {"hole6": [{"hole0": 1, "hole2": "spell_damage", "hole1": 4, "_type": "Template50", "hole3": {"_type": "Num", "n": 1}}], "hole4": "player", "hole1": "MinionCard", "hole2": [{"hole0": "Dalaran Mage", "hole2": "ALL", "hole1": 3, "_type": "Template31"}], "hole3": "create_minion", "hole0": "DalaranMage", "_type": "Template5"}, "score_history": [-1.9073486328125e-05, -2.6702880859375e-05, -0.0026144878938794136, -1.3470558769768104e-05, 0.0, -2.24970281124115e-05, -2.288818359375e-05, -4.768370445162873e-07, 0.0, -0.000667572021484375, -2.09808349609375e-05, -2.622604142743512e-06, -3.409384953556582e-05, -2.0265579223632812e-06, 0.0, -0.00016199142555706203, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, 0.0, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -0.000347137451171875, -1.1444091796875e-05, -7.987022399902344e-06, -6.318072337307967e-06, -1.0728698725870345e-05, 0.0, -0.0032355785369873047, -1.1920928244535389e-07, -0.0003528594970703125, -0.0002155303955078125, -0.0012425179593265057, -3.814697265625e-06], "choice_history": [97, 283, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 23, 179, "1", "<EOS>"]}]}
{"index": 24, "beams": [{"score": -0.14678432408913977, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "name": "DivineSpirit", "body": [{"hole0": "Divine Spirit", "hole2": "PRIEST", "hole1": 2, "_type": "Template2"}, {"hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "health"}], "hole1": "increase_health", "_type": "Template3"}]}]}, "score_history": [-0.00042724609375, -5.14984130859375e-05, -3.814697265625e-06, -0.0007190704345703125, -5.53131103515625e-05, -1.2040129149681889e-05, -5.006777428206988e-06, -0.0006505518686026335, -0.00014495849609375, -1.9073486328125e-06, -1.71661376953125e-05, -0.00014467502478510141, -5.7458873925497755e-05, -3.099440846199286e-06, -7.62939453125e-05, -0.0019855499267578125, -0.0001583099365234375, -1.7285317881032825e-05, -0.0010723269078880548, -2.062306521111168e-05, -1.9073486328125e-06, -6.818535621277988e-05, 0.0, -0.0006812810897827148, -1.9073486328125e-06, -0.011319160461425781, -0.010229110717773438, -7.82012939453125e-05, -7.62939453125e-06, -0.0001087188720703125, 0.0, -8.58306884765625e-05, 0.0, -1.33514404296875e-05, 0.0, -0.08383655548095703, 0.0, -3.814697265625e-06, -0.0019664764404296875, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -8.58306884765625e-05, 0.0, -0.0032682418823242188, 0.0, -2.300739288330078e-05, 0.0, -0.0293656587600708, 0.0], "choice_history": [96, 173, 358, 105, 152, "Divine", "Spirit", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"]}]}
{"index": 25, "beams": [{"score": -0.08438591280587104, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "model_output": {"hole6": [{"hole0": 2, "hole1": 4, "_type": "Template62"}], "hole4": "player", "hole1": "MinionCard", "hole2": [{"hole4": [{"hole0": "MechanicalDragonling", "_type": "Template79"}], "hole1": 4, "hole2": "COMMON", "hole3": "Summon", "hole5": "PlayerSelector", "hole0": "Dragonling Mechanic", "_type": "Template15"}], "hole3": "create_minion", "hole0": "DragonlingMechanic", "_type": "Template5"}, "score_history": [-0.0001316070556640625, -1.71661376953125e-05, -4.863638605456799e-05, -2.765654426184483e-05, -5.245195097813848e-06, -3.814697265625e-06, -1.5735626220703125e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -0.0006647109985351562, -0.07346057891845703, -5.960462772236497e-07, -8.070378680713475e-05, -4.8279762268066406e-05, -7.2479248046875e-05, -7.465248927474022e-06, -1.9073486328125e-06, -0.001064300537109375, -1.1920928244535389e-07, -0.0015947894426062703, -0.002766852267086506, -0.000156402587890625, -0.000133514404296875, -2.09808349609375e-05, -0.0009803751017898321, -0.002421468496322632, -7.057183393044397e-05, -0.0001040696952259168, -1.7881377516459906e-06, -1.4424220353248529e-05, -0.00017856399063020945, -1.9073486328125e-06, -3.6358804209157825e-05, 0.0, -1.1444091796875e-05, -0.00012969970703125, -5.7220458984375e-05, -1.5497207641601562e-05, -4.410734163684538e-06, -1.9073486328125e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Summon", "<EOS>", 346, 88, 325, "Mechanical", "Dragonling", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"]}]}
{"index": 26, "beams": [{"score": -0.24261213039468998, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "model_output": {"hole6": [{"value": {"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": "player", "hole1": "use", "_type": "Template63", "hole3": "game"}, "_type": "Expr"}, {"hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"hole0": 2, "_type": "Template61"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template77"}, {"hole0": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "hero"}, "hole2": [{"hole0": {"id": "player", "_type": "Name"}, "hole1": "effective_heal_power", "_type": "Template67"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template77"}], "hole4": "player", "hole1": "SpellCard", "hole2": [{"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": [{"s": "Drain Life", "_type": "Str"}, {"_type": "Num", "n": 3}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "hole1": "__init__", "_type": "Template77", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}]}], "hole3": "use", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "DrainLife", "_type": "Template5"}, "score_history": [-0.0002689361572265625, -0.0001773834228515625, -9.536738616588991e-07, -0.00020656836568377912, -1.1920928244535389e-07, -6.770849722670391e-05, -2.3365020751953125e-05, -4.5299530029296875e-06, -7.62939453125e-06, -0.0008068084716796875, -0.0025691986083984375, -3.814697265625e-05, 0.0, -6.79492904964718e-06, 0.0, -0.0009282827377319336, -1.9073486328125e-06, -0.0001773834228515625, -1.9073486328125e-05, -0.0004329681396484375, -1.1920896213268861e-05, -3.826618194580078e-05, -4.9233411118621007e-05, -9.655952453613281e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.748603820800781e-06, 0.0, -1.33514404296875e-05, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0002498626708984375, 0.0, -0.003017425537109375, -2.288818359375e-05, -1.52587890625e-05, -0.0018444061279296875, -1.1444091796875e-05, 0.0, -0.0004367828369140625, -3.24249267578125e-05, -0.0003528594970703125, -1.9073486328125e-06, -5.7220458984375e-05, -0.0001125335693359375, -5.7220458984375e-06, -0.0002789497375488281, -3.814697265625e-06, -0.0036439895629882812, -8.0108642578125e-05, -3.24249267578125e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-06, -0.0005438327789306641, -4.00543212890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00557255744934082, -1.1920928244535389e-07, -7.450580596923828e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000141143798828125, -7.82012939453125e-05, -2.0980818590032868e-05, 0.0, -0.0011768341064453125, -8.96453857421875e-05, -8.58306884765625e-05, -0.0001983642578125, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.00013554096221923828, 0.0, -0.0002155303955078125, -2.09808349609375e-05, -0.0009365081787109375, -3.814697265625e-06, -0.000225067138671875, 0.0, -0.0005666017532348633, -3.814697265625e-06, -1.52587890625e-05, -1.1920928244535389e-07, -0.00532504403963685, 0.0, -9.5367431640625e-05, -0.0018253326416015625, -7.05718994140625e-05, -0.0003050409723073244, -8.821448318485636e-06, -1.9073486328125e-06, -4.38690185546875e-05, -0.0022535324096679688, -0.0001455545425415039, -0.01727008819580078, -5.91278076171875e-05, -0.0048732757568359375, -6.103515625e-05, -0.016504287719726562, 0.0, -8.058547973632812e-05, 0.0, -0.0016422271728515625, 0.0, -0.0039268359541893005, 0.0, -2.6702880859375e-05, -0.14841365814208984, -0.0033321380615234375, -0.00080108642578125, 0.0, -5.7220458984375e-06, 0.0, -0.0015581839252263308, -1.1920928244535389e-07, -0.000225067138671875, -7.62939453125e-06, -0.007271170616149902, -5.483625955093885e-06], "choice_history": [97, 285, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Drain", " ", "Life", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 136, 318, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 347, 78, 305, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 50, 174, "self", "<EOS>"]}]}
{"index": 27, "beams": [{"score": -0.10276388792021862, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "name": "DreadInfernal", "body": [{"hole6": "DEMON", "hole4": "minion_type", "hole1": 6, "hole7": "battlecry", "hole8": {"hole0": "Damage", "hole2": "CharacterSelector", "hole1": [{"_type": "Num", "n": 1}], "_type": "Template43", "hole4": [{"value": {"hole0": "BothPlayer", "_type": "Template79"}, "_type": "keyword", "arg": "players"}]}, "hole2": "WARLOCK", "hole3": "COMMON", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole0": "Dread Infernal", "_type": "Template4"}, {"hole0": 6, "hole1": 6, "_type": "Template19"}]}]}, "score_history": [-0.000640869140625, -2.6702880859375e-05, -3.4332275390625e-05, -0.0001068115234375, -1.1444091796875e-05, -0.00016652150952722877, -2.7418097943154862e-06, -0.008640049956738949, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.15406359732151e-05, -8.535290544386953e-05, -4.291534423828125e-06, -0.0008411407470703125, -0.0011835098266601562, -8.58306884765625e-05, -4.52994936495088e-06, -9.071826934814453e-05, -0.00013731967192143202, -9.655952453613281e-06, -3.5047098208451644e-05, -1.9073486328125e-06, -0.0026264190673828125, -0.000194549560546875, -0.003917694091796875, 0.0, -0.000217437744140625, 0.0, -0.0003070831298828125, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -0.00185394287109375, 0.0, -0.000461578369140625, -1.9073486328125e-06, -0.0042934417724609375, -0.06352901458740234, -0.003530830144882202, -7.390975224552676e-05, -2.6702880859375e-05, -5.91278076171875e-05, 0.0, -0.00017046094581019133, -9.5367431640625e-06, -0.0062656402587890625, -0.0004062652587890625, -3.814697265625e-06, -0.0011234283447265625, -0.000255584716796875, 0.0, -0.0006735324859619141, 0.0, -0.000102996826171875, 0.0, -5.924701690673828e-05, -1.71661376953125e-05, 0.0, -0.000152587890625, -7.62939453125e-05, -0.00013433984713628888, 0.0, -1.2278658687137067e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Dread", "Infernal", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 29, 266, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"]}]}
{"index": 28, "beams": [{"score": -0.0702773710112723, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole6": [{"hole0": 1, "hole1": 1, "_type": "Template62"}], "hole4": "player", "hole1": "MinionCard", "hole2": [{"hole4": [{"_type": "Num", "n": 1}], "hole1": 1, "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template79"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template79"}, "_type": "keyword", "arg": "picker"}], "hole2": "COMMON", "hole3": "Damage", "hole5": "CharacterSelector", "hole0": "Elven Archer", "_type": "Template15"}], "hole3": "create_minion", "hole0": "ElvenArcher", "_type": "Template5"}, "score_history": [-0.005069732666015625, -5.7220458984375e-06, -0.005090865306556225, -1.6689191397745162e-05, -9.65590606938349e-06, -3.5390257835388184e-07, -1.621246337890625e-05, 0.0, -8.58306884765625e-05, -0.0030775070190429688, -0.036029815673828125, -1.311301275563892e-06, -1.657007851463277e-05, -6.31808916295995e-06, -0.0001697540283203125, -6.079643753764685e-06, -7.43865966796875e-05, -0.00057220458984375, -9.5367431640625e-06, -0.005541798658668995, -0.0015505858464166522, -1.9073486328125e-06, -5.340576171875e-05, -1.52587890625e-05, -0.00012009497731924057, -2.288818359375e-05, -0.0033150911331176758, -2.682209014892578e-05, 0.0, -0.0001506805419921875, -9.5367431640625e-05, -1.9073486328125e-05, -0.000263214111328125, -1.9073486328125e-06, -0.000179290771484375, 0.0, -0.0014538764953613281, -6.520748138427734e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.0002079010009765625, -0.0004506111145019531, -1.1920928244535389e-07, -0.003787994384765625, 0.0, -0.0002498626708984375, -5.924701690673828e-05, -1.1920928244535389e-07, -0.00014698503946419805, 0.0, -0.001592874526977539, 0.0, -4.76837158203125e-05, -0.0004291534423828125, -9.5367431640625e-05, -9.536870493320748e-07, -7.033323527139146e-06, -8.870760211721063e-06, -3.576278118089249e-07], "choice_history": [97, 283, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"]}]}
{"index": 29, "beams": []}
{"index": 30, "beams": [{"score": -0.2526288477551475, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "name": "Execute", "body": [{"hole6": "find_enemy_minion_spell_target", "hole4": "target_func", "hole1": 1, "hole7": "filter_func", "hole8": {"args": {"hole0": "target", "_type": "Template49"}, "_type": "Lambda", "body": {"_type": "BoolOp", "values": [{"ops": [{"_type": "NotEq"}], "comparators": [{"hole0": {"id": "target", "_type": "Name"}, "hole1": "calculate_max_health", "_type": "Template76"}], "_type": "Compare", "left": {"value": {"id": "target", "_type": "Name"}, "_type": "Attribute", "attr": "health"}}, {"hole0": {"id": "target", "_type": "Name"}, "hole1": "spell_targetable", "_type": "Template76"}], "op": {"_type": "And"}}}, "hole2": "WARRIOR", "hole3": "FREE", "hole5": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "hole0": "Execute", "_type": "Template4"}, {"hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template3"}]}]}, "score_history": [-0.027280807495117188, -7.05718994140625e-05, -1.9073486328125e-06, -9.918212890625e-05, -2.47955322265625e-05, -2.9802276912960224e-06, -0.00024434964871034026, -9.5367431640625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -0.0010514564346522093, -1.4781950994802173e-05, -2.0265579223632812e-06, -2.09808349609375e-05, -0.03667640686035156, -0.0067653656005859375, -3.576278118089249e-07, -1.9073486328125e-06, -7.330933294724673e-05, -3.814697265625e-06, -0.000786423624958843, 0.0, -0.0003129243850708008, -1.9073486328125e-06, -0.02451014518737793, -9.5367431640625e-06, -0.002025604248046875, 0.0, -0.000514984130859375, -9.5367431640625e-06, -0.002399444580078125, -0.000377655029296875, -9.72747802734375e-05, -1.71661376953125e-05, -0.019232749938964844, -5.7220458984375e-06, -0.018015027046203613, -2.0265579223632812e-06, -0.02062702178955078, -0.0003910064697265625, -0.0002079010009765625, -2.47955322265625e-05, -0.00046539306640625, -2.9802317840221804e-06, -0.000530242919921875, -2.6702880859375e-05, -0.00032806396484375, -0.0002117156982421875, -0.001190185546875, -1.9073486328125e-06, -0.016775131225585938, -2.6702880859375e-05, -0.0002307891845703125, -3.814697265625e-06, -0.0015728473663330078, -1.0371208190917969e-05, -0.0035054683685302734, -7.62939453125e-06, -1.52587890625e-05, -0.0050029754638671875, 0.0, -0.0025806427001953125, -0.0009632110595703125, -0.0003299713134765625, -2.47955322265625e-05, -0.0021684160456061363, -7.271740287251305e-06, -0.0018281936645507812, 0.0, -0.0020885467529296875, -2.09808349609375e-05, -5.7220458984375e-05, 0.0, -0.00027906891773454845, -6.43729799776338e-06, -0.011808395385742188, -1.9073486328125e-06, -0.02804279327392578, -0.001377105712890625, -6.866455078125e-05, 0.0, -5.91278076171875e-05, 0.0, -0.005532264709472656, 0.0, -7.62939453125e-06, 0.0, -0.001509596244432032, 0.0, -3.814697265625e-06, -0.0006198883056640625, 0.0, -0.0013375282287597656, -1.8954096958623268e-05], "choice_history": [96, 173, 358, 105, 152, "Execute", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 167, 0, 282, "target", "<EOS>", 15, 146, 2, 347, 46, 153, 13, 143, 21, 174, "target", "<EOS>", "health", "<EOS>", 343, 12, 346, 85, 317, 21, 174, "target", "<EOS>", "calculate_max_health", "<EOS>", 85, 317, 21, 174, "target", "<EOS>", "spell_targetable", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"]}]}
{"index": 31, "beams": [{"score": -0.07342356528751992, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "model_output": {"hole6": [{"value": {"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": "player", "hole1": "use", "_type": "Template63", "hole3": "game"}, "_type": "Expr"}, {"_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}}, "body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"hole0": 1, "_type": "Template61"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template77"}]}, {"value": {"hole0": {"id": "player", "_type": "Name"}, "hole1": "draw", "_type": "Template76"}, "_type": "Expr"}], "hole4": "player", "hole1": "SpellCard", "hole2": [{"hole0": "Fan of Knives", "hole2": "ROGUE", "hole1": 3, "_type": "Template31"}], "hole3": "use", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "FanOfKnives", "_type": "Template5"}, "score_history": [-6.4849853515625e-05, -0.0001068115234375, -1.7881377516459906e-06, -0.000947797205299139, -1.3470558769768104e-05, -8.475421054754406e-05, -8.344646857949556e-07, -5.400113150244579e-05, -1.2516919014160521e-05, -1.52587890625e-05, -0.00542449951171875, -0.006591796875, -2.1338462829589844e-05, -0.00018131732940673828, -1.33514404296875e-05, -9.918212890625e-05, -0.0005785226821899414, -1.9073486328125e-06, -1.072882923836005e-06, 0.0, -0.006237030029296875, 0.0, -1.1444091796875e-05, 0.0, -7.987022399902344e-06, 0.0, -6.67572021484375e-05, -1.52587890625e-05, -8.940672159951646e-06, -2.861018856492592e-06, -0.000762939453125, -4.76837158203125e-05, -2.86102294921875e-05, -0.00104522705078125, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -4.649161837733118e-06, -1.33514404296875e-05, -1.1444084520917386e-05, 0.0, -1.4662702596979216e-05, -1.1920928244535389e-07, -3.087519871769473e-05, -5.960462772236497e-07, -0.0001850128173828125, -0.000438690185546875, -0.0004863739013671875, -1.9073486328125e-06, -0.0002690553665161133, 0.0, -0.0003452301025390625, -9.72747802734375e-05, -6.29425048828125e-05, -5.53131103515625e-05, -3.24249267578125e-05, 0.0, -0.0014172792434692383, -9.5367431640625e-06, -0.0002155303955078125, -1.1444091796875e-05, -1.71661376953125e-05, -0.000110626220703125, -5.7220458984375e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.0001659393310546875, -5.7220458984375e-06, -8.416175842285156e-05, -1.9073486328125e-06, -0.016139745712280273, 0.0, -0.00033807719592005014, -3.814697265625e-06, -1.52587890625e-05, -0.000179290771484375, -0.000263214111328125, -0.00040435791015625, -0.0017642974853515625, -0.00022327863553073257, -4.768360213347478e-06, -0.0014811489963904023, 0.0, -1.33514404296875e-05, -0.00080108642578125, -2.288818359375e-05, -0.0006185979582369328, -0.00015031162183731794, -0.0001583099365234375, -0.0001220703125, -0.00048565774341113865, -0.00020647048950195312, -0.010847091674804688, -0.00067901611328125, -0.010301589965820312, -5.7220458984375e-06, -0.0004253387451171875, -1.9073486328125e-05, -4.172325134277344e-06, -2.3841855067985307e-07, -0.001116633415222168, -2.09808349609375e-05], "choice_history": [97, 285, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"]}]}
{"index": 32, "beams": [{"score": -0.022704929671107266, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "name": "Fireball", "body": [{"hole1": 4, "hole2": "MAGE", "hole3": "FREE", "hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole0": "Fireball", "_type": "Template14"}, {"hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"hole0": 6, "_type": "Template61"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template3"}]}]}, "score_history": [-0.000972747802734375, -0.000133514404296875, -1.9073486328125e-06, -0.0001277923583984375, -0.00012969970703125, -2.0146166207268834e-05, -2.634490556374658e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003653703606687486, -7.641315460205078e-05, -9.655952453613281e-06, -7.62939453125e-05, -0.0052204132080078125, -0.0002384185791015625, -4.053113570989808e-06, 0.0, -3.5762775496550603e-07, -1.9073486328125e-06, -0.0004825592041015625, -5.7220458984375e-06, -0.00010311603546142578, 0.0, -0.0009784698486328125, -0.0004329681396484375, -0.0004482269287109375, -0.00043892860412597656, -2.09808349609375e-05, -0.00072479248046875, -2.47955322265625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -6.67572021484375e-05, -5.91278076171875e-05, -0.00018453598022460938, -5.936622619628906e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0014364647213369608, -2.3841830625315197e-06, -9.72747802734375e-05, -1.52587890625e-05, -3.62396240234375e-05, 0.0, -0.00110626220703125, 0.0, -0.00011873245239257812, -1.9073486328125e-06, -8.52346420288086e-05, -8.4638240878121e-06, -6.270203448366374e-05, -2.3841855067985307e-07, -0.000514984130859375, -0.0013895034790039062, -3.24249267578125e-05, -0.004392743110656738, -4.768370445162873e-07, -3.0517578125e-05, -7.62939453125e-06, -0.0012311802711337805, -0.000655055046081543], "choice_history": [96, 173, 358, 105, 152, "Fireball", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Fireball", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "6", "<EOS>", 50, 174, "self", "<EOS>"]}]}
{"index": 33, "beams": [{"score": -0.06874724704708512, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n", "model_output": {"hole6": [{"value": {"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": "player", "hole1": "use", "_type": "Template63", "hole3": "game"}, "_type": "Expr"}, {"_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}}, "body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"hole0": 4, "_type": "Template61"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template77"}]}], "hole4": "player", "hole1": "SpellCard", "hole2": [{"hole0": "Flamestrike", "hole2": "MAGE", "hole1": 7, "_type": "Template31"}], "hole3": "use", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Flamestrike", "_type": "Template5"}, "score_history": [-2.09808349609375e-05, -0.0006885528564453125, -2.622600959512056e-06, -8.106222594506107e-06, -1.1920928244535389e-07, -5.3048133850097656e-05, -1.4305104514278355e-06, -7.62939453125e-06, -0.0012989044189453125, -0.001140594482421875, -2.2649765014648438e-06, -5.7220458984375e-06, -8.344646857949556e-07, 0.0, -0.001325845718383789, -2.288818359375e-05, -1.3947486877441406e-05, 0.0, -3.206721521564759e-05, 0.0, -2.86102294921875e-05, -0.000164031982421875, -1.1086422091466375e-05, -2.5272369384765625e-05, -0.014578819274902344, -3.4332275390625e-05, -1.1444091796875e-05, -1.71661376953125e-05, -0.0001049041748046875, -9.5367431640625e-06, -1.9073486328125e-06, -4.589557647705078e-05, -2.6702880859375e-05, -2.4914739697123878e-05, 0.0, -4.446501407073811e-05, -1.1920928244535389e-07, -3.1709590984974056e-05, -4.768370445162873e-07, -0.000308990478515625, -0.0002727508544921875, -0.0007572174072265625, -1.71661376953125e-05, -0.0028454065322875977, 0.0, -0.0001392364501953125, -0.000324249267578125, -0.000217437744140625, -5.53131103515625e-05, -4.9591064453125e-05, 0.0, -0.00684356689453125, -0.0001392364501953125, -0.00010311603546142578, -5.7220458984375e-06, -4.38690185546875e-05, -0.0001316070556640625, -7.82012939453125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -6.866455078125e-05, -3.0517578125e-05, -2.4199485778808594e-05, -3.814697265625e-06, -0.004975795745849609, 0.0, -0.00018572749104350805, -5.7220458984375e-06, -5.7220458984375e-06, -0.000492095947265625, -0.00012969970703125, -0.0006847381591796875, -0.00035858154296875, -0.0001485344546381384, -2.264974000354414e-06, -0.023432951420545578, 0.0, -1.52587890625e-05, -0.005181312561035156, -0.0001201629638671875, -0.00022684020223096013, -0.0002048014575848356, -4.57763671875e-05, -3.24249267578125e-05, -0.0001964569091796875, -3.266334533691406e-05], "choice_history": [97, 285, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "4", "<EOS>", 50, 174, "self", "<EOS>"]}]}
{"index": 34, "beams": [{"score": -0.08489506882170161, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n", "model_output": {"hole6": [{"hole0": 0, "hole2": "auras", "hole1": 3, "_type": "Template50", "hole3": {"hole0": "Aura", "hole1": [{"hole0": 2, "_type": "Template70"}, {"hole0": "MinionSelector", "hole1": "Adjacent", "_type": "Template55"}], "_type": "Template78"}}], "hole4": "player", "hole1": "MinionCard", "hole2": [{"hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "TOTEM"}, "hole1": 2, "hole2": "SHAMAN", "hole3": "minion_type", "hole0": "Flametongue Totem", "_type": "Template27"}], "hole3": "create_minion", "hole0": "FlametongueTotem", "_type": "Template5"}, "score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -0.002484489232301712, -2.32455840887269e-05, -3.576278118089249e-07, -7.110647857189178e-07, -2.872943878173828e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.0023345947265625, -0.0004787445068359375, -3.576278118089249e-07, -1.811981201171875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.000268780771875754, 0.0, -0.001796722412109375, 0.0, -0.0007859468460083008, 0.0, -0.0020122528076171875, -2.47955322265625e-05, -2.288818359375e-05, 0.0, -0.00016021728515625, 0.0, -0.010423660278320312, 0.0, -2.47955322265625e-05, 0.0, -0.000225067138671875, 0.0, -3.814697265625e-06, -0.0008563995361328125, -1.52587890625e-05, -1.0847986231965479e-05, -2.861018856492592e-06, -0.00011896601063199341, -3.576278118089249e-07, -0.0059619927778840065, -1.1920928244535389e-07, -0.008693695068359375, -0.037639617919921875, -0.0015621185302734375, -2.288818359375e-05, -0.000293731689453125, -0.0022726058959960938, -6.29425048828125e-05, -0.0009398385882377625, -6.318092346191406e-06, -0.0024290084838867188, -1.33514404296875e-05, -0.0002924203872680664, -5.3405718063004315e-05, -1.7881371604744345e-05, -0.0024313535541296005, -4.291525328881107e-06], "choice_history": [97, 283, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "2", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>"]}]}
{"index": 35, "beams": [{"score": -0.8109127247033712, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n", "model_output": {"hole6": [{"hole0": 0, "hole2": "taunt", "hole1": 1, "_type": "Template50", "hole3": {"value": true, "_type": "NameConstant"}}], "hole4": "p", "hole1": "MinionCard", "hole2": [{"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": [{"s": "Frog", "_type": "Str"}, {"_type": "Num", "n": 0}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "hole1": "__init__", "_type": "Template77", "hole3": [{"hole0": "BEAST", "_type": "Template75"}]}], "hole3": "create_minion", "hole0": "Frog", "_type": "Template5"}, "score_history": [-4.9591064453125e-05, -0.00014495849609375, -2.3841830625315197e-06, -8.618476567789912e-05, -3.549456596374512e-05, -2.7775760827353224e-05, -1.3589828085969202e-05, -4.57763671875e-05, -0.0048847198486328125, -0.06380653381347656, -3.62396240234375e-05, -1.9073486328125e-06, -6.914137884450611e-06, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.000736236572265625, -0.0004596710205078125, -0.0001811981201171875, -1.0967213711410295e-05, -0.001791128539480269, -4.76837158203125e-05, -5.7220458984375e-06, -0.004931232891976833, 0.0, -0.0008678436279296875, -2.09808349609375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -5.7578086853027344e-05, -7.62939453125e-06, -2.3245811462402344e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.52587890625e-05, -3.62396240234375e-05, 0.0, -6.151199340820312e-05, -0.0001277923583984375, -0.03956794738769531, -1.9073486328125e-06, -0.001018524169921875, -1.1444091796875e-05, -2.5033950805664062e-05, -2.47955322265625e-05, -0.0003833770751953125, -0.009680747985839844, -0.0012264251708984375, -0.007644772529602051, 0.0, -4.00543212890625e-05, 0.0, -0.6686364412307739, -1.9073486328125e-06, -4.9591064453125e-05, -0.0010967254638671875, -5.7220458984375e-06, -2.062299427052494e-05, -8.702239938429557e-06, -2.67025734501658e-05, -4.768370445162873e-07, -0.002592325210571289, 0.0, -6.67572021484375e-05, -7.62939453125e-06, -0.00018143653869628906, 0.0], "choice_history": [97, 283, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Frog", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 130, 287, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"]}]}
{"index": 36, "beams": [{"score": -0.1960063178215634, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Frozen()))\n", "model_output": {"hole6": [{"value": {"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": "player", "hole1": "use", "_type": "Template63", "hole3": "game"}, "_type": "Expr"}, {"_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}, "body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"hole0": "Frozen", "_type": "Template54"}], "hole1": "add_buff", "_type": "Template77"}]}], "hole4": "player", "hole1": "SpellCard", "hole2": [{"hole0": "Frost Nova", "hole2": "MAGE", "hole1": 3, "_type": "Template31"}], "hole3": "use", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "FrostNova", "_type": "Template5"}, "score_history": [-3.0517578125e-05, -0.0005016326904296875, -1.1920928244535389e-07, -2.503383075236343e-05, -2.0265558760002023e-06, -2.384144681855105e-05, -5.7220458984375e-05, -2.0265558760002023e-06, -7.62939453125e-06, -0.0004520416259765625, -0.000659942626953125, -1.1920922133867862e-06, -0.00012040138244628906, -4.0531158447265625e-06, 0.0, -0.00036971812369301915, -1.9073486328125e-06, -0.000118255615234375, -5.7220458984375e-05, -5.7220458984375e-06, 0.0, -0.0001817941665649414, 0.0, -3.814697265625e-05, -5.14984130859375e-05, -1.0490381100680679e-05, -4.9948692321777344e-05, -0.08286380767822266, -5.340576171875e-05, -5.7220458984375e-06, -1.9073486328125e-05, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -1.33514404296875e-05, -6.67572021484375e-05, -1.728534698486328e-05, 0.0, -1.4066696166992188e-05, 0.0, -2.3484230041503906e-05, -8.344646857949556e-07, -0.0003070831298828125, -0.000370025634765625, -0.00031280517578125, -0.0001468658447265625, -0.005965113639831543, 0.0, -0.059456825256347656, -1.9073486328125e-05, -0.00083160400390625, -1.9073486328125e-06, -0.0001239776611328125, -4.38690185546875e-05, -0.00015270709991455078, -3.814697265625e-06, -0.0017757415771484375, 0.0, -0.0015726475976407528, -0.0001764287444530055, -4.00543212890625e-05, -0.0008983612060546875, -2.288818359375e-05, -0.0009441375732421875, -0.0005207061767578125, -0.0004248605982866138, 0.0, -0.021986333653330803, -1.9073486328125e-06, -0.00011444091796875, -0.0009517669677734375, -0.0025701522827148438, -0.00853427778929472, -0.001830458641052246], "choice_history": [97, 285, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "add_buff", "<EOS>", 346, 69, 290, "Frozen", "<EOS>"]}]}
{"index": 37, "beams": [{"score": -0.10393128884270197, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n", "model_output": {"hole6": [{"value": {"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": "player", "hole1": "use", "_type": "Template63", "hole3": "game"}, "_type": "Expr"}, {"hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"hole0": 1, "_type": "Template61"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template77"}, {"value": {"hole0": "Frozen", "_type": "Template37"}, "_type": "Expr"}], "hole4": "player", "hole1": "SpellCard", "hole2": [{"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": [{"s": "Frost Shock", "_type": "Str"}, {"_type": "Num", "n": 1}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "hole1": "__init__", "_type": "Template77", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword", "arg": "target_func"}]}], "hole3": "use", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "FrostShock", "_type": "Template5"}, "score_history": [-3.24249267578125e-05, -0.000385284423828125, 0.0, -2.4795503122732043e-05, -2.622600959512056e-06, -8.344646857949556e-07, -1.4901155736879446e-05, -4.410734163684538e-06, -0.000110626220703125, -4.9591064453125e-05, -0.0013179779052734375, -4.00543212890625e-05, -1.9073486328125e-06, -1.03711727206246e-05, -3.814697265625e-06, -5.114077794132754e-05, -5.7220458984375e-06, -0.000347137451171875, -2.86102294921875e-05, -0.0006046295166015625, -3.576278118089249e-07, -4.172325134277344e-05, -0.0016976594924926758, -0.0007305145263671875, -2.86102294921875e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0014896392822265625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.0002117156982421875, 0.0, -0.0004405975341796875, -9.918212890625e-05, -3.814697265625e-06, -0.000386953295674175, -2.0265579223632812e-06, -0.073455810546875, -4.9591064453125e-05, -0.000164031982421875, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.002559661865234375, -3.933906555175781e-06, -9.1552734375e-05, -1.33514404296875e-05, -0.00022589309082832187, -5.924577999394387e-05, -0.00027751867310144007, 0.0, -3.933906555175781e-06, 0.0, -8.58306884765625e-05, -9.5367431640625e-06, -4.649161837733118e-06, -2.2649765014648438e-06, -0.0028285980224609375, -7.62939453125e-06, -4.00543212890625e-05, -0.0001621246337890625, -0.0001621246337890625, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -8.225440979003906e-06, 0.0, -9.655952453613281e-06, 0.0, -2.6941268515656702e-05, -1.1920928244535389e-07, -0.00095367431640625, -4.1961669921875e-05, -0.0003719329833984375, 0.0, -0.0023746490478515625, 0.0, -7.43865966796875e-05, -3.814697265625e-06, -2.1338462829589844e-05, -1.311301275563892e-06, -0.0002004950656555593, -1.1920928244535389e-07, -5.7220458984375e-05, -0.0020656585693359375, -5.91278076171875e-05, -0.00016809487715363503, -4.768360213347478e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0001504421088611707, -0.00047433358849957585, -0.00057220458984375, -0.0002288818359375, -0.0038299560546875, -0.0014438629150390625, -0.002013325458392501, -0.00014221383025869727], "choice_history": [97, 285, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Frost", " ", "Shock", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"]}]}
{"index": 38, "beams": [{"score": -0.06306397884392112, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "model_output": {"hole6": [{"value": {"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": "player", "hole1": "use", "_type": "Template63", "hole3": "game"}, "_type": "Expr"}, {"hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"hole0": 3, "_type": "Template61"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template77"}, {"value": {"hole0": "Frozen", "_type": "Template37"}, "_type": "Expr"}], "hole4": "player", "hole1": "SpellCard", "hole2": [{"hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole1": 2, "hole2": "MAGE", "hole3": "target_func", "hole0": "Frostbolt", "_type": "Template27"}], "hole3": "use", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Frostbolt", "_type": "Template5"}, "score_history": [-0.0001506805419921875, -0.000278472900390625, -0.0001037067049765028, -8.344646857949556e-07, -8.344646857949556e-07, -3.5405155358603224e-05, -7.271740287251305e-06, -6.67572021484375e-05, -0.001621246337890625, -5.14984130859375e-05, -0.00012230873107910156, 0.0, -1.5497195136049413e-06, 0.0, -0.004378557205200195, -0.0001888275146484375, -0.0018788576126098633, -5.841255187988281e-06, -0.00136566162109375, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -0.00016176699136849493, -1.0490413842489943e-05, -2.491474151611328e-05, -1.52587890625e-05, -0.013957181945443153, -1.4305104514278355e-06, -0.0004878040053881705, 0.0, -6.23464584350586e-05, 0.0, -0.0006008148193359375, -3.814697265625e-06, -1.3113007298670709e-05, -2.1457672119140625e-06, -0.002277374267578125, -3.814697265625e-06, -5.53131103515625e-05, -0.0003452301025390625, -8.392333984375e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -2.384185791015625e-05, -2.3841855067985307e-07, -0.00010096874029841274, -1.1920928244535389e-07, -0.00495147705078125, -3.4332275390625e-05, -0.0001468658447265625, 0.0, -0.0048542022705078125, 0.0, -5.161762237548828e-05, -2.2649765014648438e-06, -4.649162292480469e-05, -3.3378546504536644e-06, -7.760358130326495e-05, 0.0, -3.4332275390625e-05, -0.0025882720947265625, -0.0002498626708984375, -0.009702562354505062, -1.311301275563892e-06, -3.814697265625e-06, -9.5367431640625e-06, -0.0002925153821706772, -0.0015794021310284734, -0.0002269744873046875, -0.00089263916015625, -0.0022230148315429688, -0.0007610321044921875, -0.005590915214270353, -0.00011765655654016882], "choice_history": [97, 285, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"]}]}
{"index": 39, "beams": [{"score": -0.01456782395732148, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "model_output": {"hole6": [{"hole0": 2, "hole2": "taunt", "hole1": 2, "_type": "Template50", "hole3": {"value": true, "_type": "NameConstant"}}], "hole4": "player", "hole1": "MinionCard", "hole2": [{"hole0": "Frostwolf Grunt", "hole2": "ALL", "hole1": 2, "_type": "Template31"}], "hole3": "create_minion", "hole0": "FrostwolfGrunt", "_type": "Template5"}, "score_history": [-2.09808349609375e-05, -1.71661376953125e-05, -6.186844257172197e-05, -2.479527029208839e-05, -7.152531907195225e-06, -6.121397018432617e-05, -2.09808349609375e-05, -4.172325134277344e-06, -1.9073486328125e-06, -0.0006771087646484375, -3.24249267578125e-05, -2.1457672119140625e-06, -3.0398367016459815e-05, 0.0, -3.814697265625e-06, -4.1960774979088455e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0003032684326171875, 0.0, -1.9073486328125e-06, -0.00130462646484375, -1.71661376953125e-05, -4.768358849105425e-06, -5.960446742392378e-06, -3.5558303352445364e-05, -2.3841855067985307e-07, -0.01165318489074707, 0.0, -0.0001068115234375, -2.86102294921875e-05, -6.711483001708984e-05, 0.0], "choice_history": [97, 283, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"]}]}
{"index": 40, "beams": [{"score": -0.027496623233659534, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n", "model_output": {"hole6": [{"hole0": 1, "hole2": "taunt", "hole1": 2, "_type": "Template50", "hole3": {"value": true, "_type": "NameConstant"}}], "hole4": "player", "hole1": "MinionCard", "hole2": [{"hole0": "Goldshire Footman", "hole2": "ALL", "hole1": 1, "_type": "Template31"}], "hole3": "create_minion", "hole0": "GoldshireFootman", "_type": "Template5"}, "score_history": [-9.918212890625e-05, -3.24249267578125e-05, -5.996135587338358e-05, -2.6344954676460475e-05, -3.576272320060525e-06, -4.5705586671829224e-05, -1.33514404296875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.001010894775390625, -2.09808349609375e-05, -1.1920928244535389e-07, -3.1828880310058594e-05, 0.0, -3.814697265625e-06, -5.161752415006049e-05, 0.0, -2.86102294921875e-05, 0.0, -5.91278076171875e-05, 0.0, -0.0005035400390625, 0.0, -1.9073486328125e-06, -0.0012454986572265625, -1.71661376953125e-05, -1.6093243175419047e-05, -1.764281842042692e-05, -5.245191459835041e-06, -1.1920928244535389e-07, -0.023939967155456543, 0.0, -0.0001068115234375, -3.24249267578125e-05, -0.00011849403381347656, 0.0], "choice_history": [97, 283, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"]}]}
{"index": 41, "beams": [{"score": -0.38657060779698327, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "model_output": {"hole6": [{"hole0": 1, "hole2": "auras", "hole1": 1, "_type": "Template50", "hole3": {"hole0": "Aura", "hole1": [{"hole0": 1, "_type": "Template70"}, {"args": [{"hole0": "MURLOC", "_type": "Template60"}, {"hole0": "BothPlayer", "_type": "Template79"}], "_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}}], "_type": "Template78"}}], "hole4": "player", "hole1": "MinionCard", "hole2": [{"hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}, "hole1": 1, "hole2": "COMMON", "hole3": "minion_type", "hole0": "Grimscale Oracle", "_type": "Template26"}], "hole3": "create_minion", "hole0": "GrimscaleOracle", "_type": "Template5"}, "score_history": [-3.62396240234375e-05, -3.814697265625e-05, -0.00022290059132501483, -3.099436753473128e-06, -4.410734163684538e-06, -1.0669231414794922e-05, -2.3245811462402344e-05, -1.8358125089434907e-05, -1.52587890625e-05, -0.0028171539306640625, -0.0001506805419921875, 0.0, -3.921985626220703e-05, -4.053113570989808e-06, -4.780292510986328e-05, -1.3231212506070733e-05, -7.748603820800781e-06, -0.0004775524139404297, -1.9073486328125e-06, -0.0005944966687820852, -3.3378591979271732e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -0.0005384683609008789, -7.390969585685525e-06, -0.003016233444213867, -1.9073486328125e-06, -9.918212890625e-05, 0.0, -0.000110626220703125, 0.0, -1.9073486328125e-05, -0.0005512237548828125, -5.7220458984375e-06, -5.4836082199472e-06, -6.556489552167477e-06, -4.650899791158736e-05, -2.3841855067985307e-07, -0.0029518466908484697, 0.0, -0.0001888275146484375, -0.0033102035522460938, -0.0008488893508911133, -2.09808349609375e-05, -0.000240325927734375, -0.019910812377929688, -0.0007228851318359375, -0.00017344953084830195, -0.004974484443664551, -0.33206653594970703, -0.000255584716796875, -6.67572021484375e-05, -2.288818359375e-05, -0.0010069655254483223, -0.00012981891632080078, 0.0, -0.0011577606201171875, -0.002307891845703125, -0.0006885528564453125, -0.004196046851575375, 0.0, -5.14984130859375e-05, -0.0002231597900390625, -0.0017306709196418524, -0.00037038279697299004, 0.0], "choice_history": [97, 283, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 45, 150, 21, 174, "Minion", "Selector", "<EOS>", 347, 74, 297, "MURLOC", "<EOS>", 88, 325, "Both", "Player", "<EOS>"]}]}
{"index": 42, "beams": [{"score": -0.08434560553950377, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "model_output": {"hole6": [{"hole0": 5, "hole1": 6, "_type": "Template62"}], "hole4": "player", "hole1": "MinionCard", "hole2": [{"hole4": {"hole0": "Heal", "hole2": "HeroSelector", "hole1": [{"_type": "Num", "n": 6}], "_type": "Template43"}, "hole1": 7, "hole2": "PALADIN", "hole3": "battlecry", "hole0": "Guardian of Kings", "_type": "Template27"}], "hole3": "create_minion", "hole0": "GuardianOfKings", "_type": "Template5"}, "score_history": [-4.00543212890625e-05, -5.14984130859375e-05, -0.00011669908417388797, -0.00032019594800658524, -0.0012572346022352576, -2.777537883957848e-05, -7.26478174328804e-06, -3.8623809814453125e-05, -9.5367431640625e-06, -0.0014286041259765625, -0.018929481506347656, -0.0005359649658203125, -1.049041748046875e-05, -0.00012028217315673828, -6.294228660408407e-05, -2.6702880859375e-05, -0.0018998384475708008, -5.53131103515625e-05, -1.585482641530689e-05, -1.1920928244535389e-07, -0.0008504390716552734, -3.814697265625e-06, -0.001251220703125, -5.91278076171875e-05, -0.02418994903564453, -0.009263038635253906, -0.006176471710205078, -1.1682510375976562e-05, -2.6702880859375e-05, -8.7738037109375e-05, -5.7220458984375e-06, -0.005555034149438143, -1.9073486328125e-06, -0.00012409687042236328, -0.0005743503570556641, -3.814697265625e-06, -0.007003903388977051, 0.0, -0.000607609748840332, 0.0, -0.000125885009765625, -0.0001678466796875, -2.288818359375e-05, -0.0031148195266723633, -2.50339189733495e-06, -0.00016056202002801, 0.0], "choice_history": [97, 283, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 29, 265, "Heal", "<EOS>", 346, 52, 179, "6", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "6", "<EOS>"]}]}
{"index": 43, "beams": [{"score": -0.2513507387190259, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n", "model_output": {"hole6": [{"hole0": 2, "hole2": "effects", "hole1": 7, "_type": "Template50", "hole3": {"hole0": "Effect", "hole1": [{"_type": "Call", "func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"value": {"hole0": "MinionIsTarget", "_type": "Template79"}, "_type": "keyword", "arg": "condition"}]}, {"hole0": "Give", "hole2": [{"_type": "Num", "n": 3}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template38", "hole3": "SelfSelector"}], "_type": "Template78"}}], "hole4": "player", "hole1": "MinionCard", "hole2": [{"hole0": "Gurubashi Berserker", "hole2": "ALL", "hole1": 5, "_type": "Template31"}], "hole3": "create_minion", "hole0": "GurubashiBerserker", "_type": "Template5"}, "score_history": [-0.0005645751953125, -0.0020313262939453125, -0.01791844703257084, -3.2782078051241115e-05, -7.867782187531702e-06, -9.980052709579468e-06, -1.1563301086425781e-05, -3.2186455882765586e-06, 0.0, -0.0015964508056640625, -7.05718994140625e-05, -3.4570680327306036e-06, -2.777576446533203e-05, -2.3841855067985307e-07, -1.919269561767578e-05, -0.0011112524662166834, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001621246337890625, 0.0, -1.7404556274414062e-05, 0.0, -1.9073486328125e-06, -0.07915687561035156, -7.82012939453125e-05, -0.0007161909597925842, -2.3841855067985307e-07, -0.002655790885910392, 0.0, -0.00275421142578125, 0.0, -0.000194549560546875, -0.0002593994140625, -0.007293921895325184, -2.3841855067985307e-07, -0.0003986358642578125, -0.005227088928222656, -0.002895355224609375, -1.9073486328125e-05, -1.1444091796875e-05, -0.01745770126581192, -0.019107520580291748, -6.079673767089844e-06, -0.01580047607421875, -0.0003185272216796875, -1.1444091796875e-05, -0.0038040876388549805, -0.0001565095444675535, -0.004614830017089844, -0.0002880096435546875, -0.0008814386674202979, -0.0048165288753807545, -0.024110987782478333, -2.1219253540039062e-05, -0.00547027587890625, -0.00102996826171875, -0.00026905478443950415, -0.00900995172560215, -0.000141143798828125, -0.001239776611328125, -0.00022971609723754227, -8.440016972599551e-05, -7.986990567587782e-06, -1.9073486328125e-06, -3.0517578125e-05, -6.103515625e-05, -0.016542259603738785, -2.288818359375e-05, -0.0005002021789550781, -2.09808349609375e-05, -2.86102294921875e-05], "choice_history": [97, 283, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 37, 321, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Character", "Damaged", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Minion", "Is", "Target", "<EOS>", 60, 238, "Give", "<EOS>", 21, 174, "Change", "Attack", "<EOS>", 346, 52, 179, "3", "<EOS>", "Self", "Selector", "<EOS>"]}]}
{"index": 44, "beams": [{"score": -0.08844322795828674, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "model_output": {"hole6": [{"value": {"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": "player", "hole1": "use", "_type": "Template63", "hole3": "game"}, "_type": "Expr"}, {"hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"hole0": 3, "_type": "Template61"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template77"}, {"value": {"hole0": {"id": "player", "_type": "Name"}, "hole1": "draw", "_type": "Template76"}, "_type": "Expr"}], "hole4": "player", "hole1": "SpellCard", "hole2": [{"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": [{"s": "Hammer of Wrath", "_type": "Str"}, {"_type": "Num", "n": 4}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "hole1": "__init__", "_type": "Template77", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}]}], "hole3": "use", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "HammerOfWrath", "_type": "Template5"}, "score_history": [-0.0002117156982421875, -0.0003414154052734375, -7.748573807475623e-06, -0.00020062841940671206, -0.013590533286333084, -4.2080348066519946e-05, -7.903257937869057e-05, -0.00025582313537597656, -4.172325134277344e-06, -6.103515625e-05, -0.000164031982421875, -0.0002841949462890625, -0.0003299713134765625, -1.9073486328125e-05, -6.186878454172984e-05, 0.0, -0.0003504753112792969, -1.9073486328125e-06, -0.0016994476318359375, -8.96453857421875e-05, -0.0003757476806640625, -1.9907896785298362e-05, -5.53131103515625e-05, -4.053115117130801e-05, -4.9591064453125e-05, -0.0011084078578278422, -0.000690460205078125, -1.9073486328125e-05, -9.5367431640625e-06, -3.576278118089249e-07, -2.288818359375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -3.814697265625e-06, -1.1444091796875e-05, -6.4849853515625e-05, -5.7220458984375e-06, -0.0008854866027832031, -2.09808349609375e-05, -3.0517578125e-05, -5.14984130859375e-05, -1.1444091796875e-05, 0.0, -8.404254913330078e-05, -2.6702880859375e-05, -0.000629425048828125, -1.9073486328125e-06, -0.0016765594482421875, -9.72747802734375e-05, -7.62939453125e-06, -0.0017248360672965646, -2.0265579223632812e-06, -0.007298469543457031, -0.000171661376953125, -0.0001010894775390625, -5.7220458984375e-05, -3.814697265625e-05, -3.24249267578125e-05, -0.00036847591400146484, -3.814697265625e-06, -0.002084970474243164, 0.0, -0.005356774665415287, -9.65590606938349e-06, -0.0002498626708984375, 0.0, -0.00012886524200439453, 0.0, -0.0003299713134765625, -8.7738037109375e-05, -0.00010680697596399114, -6.437280717364047e-06, -0.01358795166015625, -1.71661376953125e-05, -6.866455078125e-05, -0.0008678436279296875, -1.71661376953125e-05, -1.52587890625e-05, 0.0, -3.933906555175781e-05, -1.9073486328125e-06, -0.00011456011998234317, 0.0, -1.3232214769232087e-05, -1.1920928244535389e-07, -0.0003096969739999622, -7.152555099310121e-07, -0.000545501708984375, -2.47955322265625e-05, -0.0004978179931640625, -1.9073486328125e-06, -0.0044651031494140625, 0.0, -0.0002999305725097656, -2.0265579223632812e-06, -0.0016225576400756836, -1.0967194612021558e-05, -0.0005664817290380597, -2.50339189733495e-06, -5.14984130859375e-05, -0.013513565063476562, -4.9591064453125e-05, -0.0007599588134326041, -0.0015673328889533877, -7.62939453125e-06, -0.00011444091796875, -0.0014385753311216831, -0.00018095967243425548, -4.38690185546875e-05, -0.0010318756103515625, -0.0035724639892578125, -4.57763671875e-05, -0.0001201629638671875, -5.7220458984375e-06, -1.251697449333733e-05, -2.634490556374658e-05, -0.0007991605089046061, -1.33514404296875e-05], "choice_history": [97, 285, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 52, 179, "4", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"]}]}
{"index": 45, "beams": [{"score": -0.18650307816039202, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "model_output": {"hole6": [{"value": {"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": "player", "hole1": "use", "_type": "Template63", "hole3": "game"}, "_type": "Expr"}, {"targets": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "divine_shield"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole4": "player", "hole1": "SpellCard", "hole2": [{"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": [{"s": "Hand of Protection", "_type": "Str"}, {"_type": "Num", "n": 1}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "hole1": "__init__", "_type": "Template77", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}]}], "hole3": "use", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "HandOfProtection", "_type": "Template5"}, "score_history": [-0.000247955322265625, -0.008157730102539062, -0.00015805903240107, -0.0018355483189225197, -0.0008493128116242588, -3.421248038648628e-05, -5.841252459504176e-06, -8.90493392944336e-05, -2.2649677703157067e-05, -0.000988006591796875, -8.7738037109375e-05, -0.0008106231689453125, -0.0001068115234375, -8.7738037109375e-05, -0.0007427695672959089, -1.9073486328125e-06, -0.0002887248992919922, 0.0, -0.0011234283447265625, -0.000110626220703125, -0.0013580322265625, -4.410734163684538e-06, -0.00012159346078988165, -0.00022017580340616405, -7.43865966796875e-05, -0.0009691715240478516, -0.0002841949462890625, -0.00020599365234375, -3.0517578125e-05, -0.0001982170360861346, -5.7220458984375e-06, -2.288818359375e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.0002155303955078125, -1.33514404296875e-05, -0.0005112886428833008, -1.9073486328125e-05, -4.1961669921875e-05, -2.288818359375e-05, -0.0002384185791015625, -3.814697265625e-06, -0.00044858455657958984, -9.5367431640625e-06, -0.0010433197021484375, -1.33514404296875e-05, -0.0007915496826171875, -4.57763671875e-05, -5.7220458984375e-06, -0.013360141776502132, -2.0265579223632812e-06, -0.0003795623779296875, -1.33514404296875e-05, -0.000244140625, 0.0, -3.814697265625e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0006486177444458008, -3.814697265625e-06, -0.009699344635009766, -1.1920928244535389e-07, -0.02189767360687256, 0.0, -1.835809598560445e-05, 0.0, -0.0036411285400390625, -0.00017547607421875, -0.00018356749205850065, -4.076874756719917e-05, -0.045665740966796875, -0.00023651123046875, -0.0001049041748046875, -7.43865966796875e-05, -0.0001850128173828125, -1.1444091796875e-05, 0.0, -0.0014764175284653902, -0.00012993812561035156, -0.00038406188832595944, -1.0728830375228426e-06, -3.778920290642418e-05, 0.0, -0.0004479839699342847, -5.960462772236497e-07, -0.005303382873535156, -2.47955322265625e-05, -5.7220458984375e-06, -0.006655693054199219, -6.866455078125e-05, -9.5367431640625e-06, 0.0, -0.03086376190185547, -1.9073486328125e-06, -0.0009347200393676758, -5.960462772236497e-07, -0.0016428232192993164, -6.079673767089844e-06, -0.01776360161602497, 0.0, -0.000751495361328125, -0.0002498626708984375, -0.0003122087218798697, -4.768370445162873e-07], "choice_history": [97, 285, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hand", " ", "of", " ", "Protection", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"]}]}
{"index": 46, "beams": [{"score": -0.44818240902441175, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "name": "HealingTotem", "body": [{"hole4": [{"value": true, "_type": "NameConstant"}, {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "TOTEM"}], "hole1": 1, "hole2": "SHAMAN", "hole3": "FREE", "hole0": "Healing Totem", "_type": "Template14"}, {"hole4": [{"_type": "Num", "n": 1}], "hole1": 2, "hole7": [{"value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword", "arg": "condition"}], "hole2": "TurnEnded", "hole3": "Heal", "hole5": "MinionSelector", "hole0": 0, "_type": "Template0"}]}]}, "score_history": [-0.0011501312255859375, -5.7220458984375e-06, -2.09808349609375e-05, -0.0001220703125, -9.918212890625e-05, -2.861018856492592e-06, -2.1457672119140625e-06, -8.272798004327342e-05, -3.814697265625e-05, -3.814697265625e-05, -3.814697265625e-06, -0.00834289938211441, -2.0384788513183594e-05, -0.0002460479736328125, -0.0003871917724609375, -0.0174560546875, -0.32895565032958984, -4.0172799344873056e-05, -5.936622619628906e-05, -4.88758041683468e-06, -0.0001926422119140625, -0.00012873999367002398, -9.5367431640625e-06, -0.008020401000976562, -3.814697265625e-06, -0.0007915496826171875, -7.62939453125e-06, -0.0009002685546875, -0.000133514404296875, -0.00019073486328125, -0.0007668733596801758, -7.62939453125e-06, -0.0006771087646484375, -3.814697265625e-05, -0.000469207763671875, 0.0, -0.001407623291015625, -3.814697265625e-06, -0.0043048858642578125, -1.9073486328125e-06, -0.00030517578125, -0.056591033935546875, -0.002007854636758566, -1.2636171959456988e-05, -7.283539162017405e-05, -1.9550323486328125e-05, -0.0020732879638671875, -0.0012416839599609375, -3.814697265625e-06, -0.002144932746887207, -0.00027310848236083984, -3.62396240234375e-05, -1.33514404296875e-05, -5.7220458984375e-06, -2.815969673974905e-05, -3.659724825411104e-05, -0.0008220672607421875, -5.340576171875e-05, -5.7220458984375e-06, -2.47955322265625e-05, -0.000339508056640625, 0.0, -0.0016145706176757812, -0.0018330812454223633, -0.0012807846069335938, -0.00107574462890625, -0.001130223274230957, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "Healing", "Totem", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 199, "Healing", " ", "Totem", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", 347, 51, 175, "False", "<EOS>", 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 112, 190, "0", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "1", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 22, 176, "Null", "<EOS>"]}]}
{"index": 47, "beams": [{"score": -0.06365456477171705, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "name": "HealingTouch", "body": [{"hole1": 3, "hole2": "DRUID", "hole3": "FREE", "hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole0": "Healing Touch", "_type": "Template14"}, {"hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"hole0": {"id": "player", "_type": "Name"}, "hole2": 8, "hole1": "effective_heal_power", "_type": "Template69"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template3"}]}]}, "score_history": [-0.001720428466796875, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001506805419921875, -0.00016021728515625, -8.583032467868179e-06, -5.960462772236497e-07, -4.410734163684538e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.593647852540016e-05, -0.0003434419631958008, -2.1696090698242188e-05, -6.67572021484375e-05, -0.0012264251708984375, -0.00020599365234375, -8.344646857949556e-07, -5.91278076171875e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -1.43051022405416e-06, -1.1444091796875e-05, -0.0015659332275390625, 0.0, -0.00043487548828125, -1.9073486328125e-06, -7.05718994140625e-05, -3.814697265625e-05, -5.7220458984375e-06, -0.00043511390686035156, -1.9073486328125e-06, -0.00028228759765625, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.43865966796875e-05, -7.62939453125e-06, -0.0002614259719848633, -1.52587890625e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.002739548683166504, -1.9073486328125e-06, -0.00205230712890625, -0.00269317626953125, -0.00014495849609375, -1.9073486328125e-05, -5.53131103515625e-05, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.0002307891845703125, 0.0, -0.006607382092624903, -3.933906555175781e-06, -0.0001087188720703125, -0.00716400146484375, -0.0004901885986328125, -9.1552734375e-05, 0.0, -5.602834789897315e-06, -1.1920928244535389e-07, -0.0011726615484803915, -1.52587890625e-05, -1.6331649021594785e-05, -2.2530381102114916e-05, -0.03185081481933594, -3.4332275390625e-05, -0.0006438493728637695, -6.127357482910156e-05], "choice_history": [96, 173, 358, 105, 152, "Healing", "Touch", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Healing", " ", "Touch", "<EOS>", "3", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "8", "<EOS>", 50, 174, "self", "<EOS>"]}]}
{"index": 48, "beams": [{"score": -1.1604116523106853, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n", "model_output": {"hole6": [{"value": {"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": "player", "hole1": "use", "_type": "Template63", "hole3": "game"}, "_type": "Expr"}, {"targets": [{"id": "frog", "_type": "Name"}], "value": {"hole0": {"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "<UNK>"}, "hole1": "Frog", "_type": "Template76"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "_type": "Call", "func": {"value": {"id": "frog", "_type": "Name"}, "_type": "Attribute", "attr": "create_minion"}}, "_type": "Assign"}, {"targets": [{"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "card"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}, {"hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"id": "minion", "_type": "Name"}], "hole1": "<UNK>", "_type": "Template77"}], "hole4": "player", "hole1": "SpellCard", "hole2": [{"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": [{"s": "Hex", "_type": "Str"}, {"_type": "Num", "n": 3}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "hole1": "__init__", "_type": "Template77", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword", "arg": "target_func"}]}], "hole3": "use", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "Hex", "_type": "Template5"}, "score_history": [-2.6702880859375e-05, -0.030279159545898438, -0.010879598557949066, -1.3589857189799659e-05, -4.291522600397002e-06, -2.205371856689453e-05, -2.1457672119140625e-06, -8.392333984375e-05, -0.00052642822265625, -0.0073947906494140625, -3.24249267578125e-05, -1.9073486328125e-06, -0.004127688240259886, -2.98022641800344e-05, -9.775154467206448e-05, -5.7220458984375e-06, -0.000194549560546875, -1.1444091796875e-05, -0.000171661376953125, -6.198803021106869e-05, -1.71661376953125e-05, -0.0001125335693359375, -4.9591064453125e-05, -2.300739288330078e-05, -1.9073486328125e-06, -2.09808349609375e-05, -2.6702880859375e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0001163482666015625, -1.9073486328125e-06, -0.0031871795654296875, 0.0, -2.86102294921875e-05, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -4.6133995056152344e-05, -5.53131103515625e-05, -7.82012939453125e-05, -3.814697265625e-06, -0.0002422332763671875, -3.24249267578125e-05, -1.9073486328125e-06, -0.15481436252593994, -2.0265579223632812e-06, -0.0016832351684570312, -2.09808349609375e-05, -3.62396240234375e-05, 0.0, -1.33514404296875e-05, 0.0, -0.00022852420806884766, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0052149295806884766, 0.0, -0.005436897277832031, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -3.4570680327306036e-06, -4.649161837733118e-06, -0.028081893920898438, -0.00164794921875, -2.47955322265625e-05, -3.24249267578125e-05, -5.340576171875e-05, -5.7220458984375e-06, 0.0, -6.270408630371094e-05, -1.1444091796875e-05, -0.00022971630096435547, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.647804260253906e-05, -4.768370445162873e-07, -0.0019273757934570312, -8.0108642578125e-05, -7.62939453125e-06, -4.76837158203125e-05, -6.103515625e-05, -0.16188481450080872, -0.00015699861978646368, -0.008260726928710938, -0.0002536773681640625, -0.0008106231689453125, -3.24249267578125e-05, -0.0001201629638671875, 0.0, -0.0004138946533203125, 0.0, -0.03459739685058594, -6.866455078125e-05, -0.0019877662416547537, -3.266334533691406e-05, -0.0012264251708984375, -1.1920928244535389e-07, -0.011273376643657684, -2.384185791015625e-06, -0.008715559728443623, -1.1920928244535389e-07, -0.004731889348477125, -0.0053282976150512695, -0.00130462646484375, -0.0001773834228515625, -1.9073486328125e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.009701728820800781, 0.0, -0.032149314880371094, -0.0011053085327148438, -0.0001888275146484375, -1.9073486328125e-06, -0.014665603637695312, -1.52587890625e-05, -0.23065637052059174, -6.56840784358792e-05, -0.0008640289306640625, 0.0, -0.00029754638671875, -0.024747848510742188, -0.0009326934814453125, -0.0004972218885086477, -3.564357393770479e-05, -0.005982398986816406, -0.00069427490234375, -0.0004673004150390625, -0.0009899139404296875, -0.0003662109375, -0.06432723999023438, -1.9073486328125e-06, -0.011065234430134296, -7.62939453125e-06, -0.01678466796875, 0.0, -0.002033233642578125, 0.0, -0.14601561427116394, -0.002553110709413886, -0.004433631896972656, -0.000202178955078125, -0.0019626617431640625, 0.0, -0.002094268798828125, -1.9073486328125e-06, -0.0005773305892944336, 0.0, -0.030117154121398926, 0.0, -0.005731760524213314, 0.0, -0.00089263916015625, -0.000659942626953125, 0.0, -0.047186970710754395, 0.0], "choice_history": [97, 285, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Hex", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 362, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "frog", "<EOS>", 36, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "frog", "<EOS>", "create_minion", "<EOS>", 346, 51, 176, "Null", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "minion", "<EOS>", "card", "<EOS>", 21, 174, "frog", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "minion", "<EOS>"]}]}
{"index": 49, "beams": [{"score": -0.03618223488854255, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "name": "HolyLight", "body": [{"hole1": 2, "hole2": "PALADIN", "hole3": "FREE", "hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole0": "Holy Light", "_type": "Template14"}, {"hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"hole0": {"id": "player", "_type": "Name"}, "hole2": 6, "hole1": "effective_heal_power", "_type": "Template69"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template3"}]}]}, "score_history": [-0.0005550384521484375, -6.866455078125e-05, -3.814697265625e-06, -0.000152587890625, -0.000102996826171875, -7.271740287251305e-06, -1.1920922133867862e-06, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, -6.087403744459152e-05, -0.00011074542999267578, -1.5974044799804688e-05, -1.52587890625e-05, -0.0011234283447265625, -0.0001621246337890625, -8.344646857949556e-07, -8.964535663835704e-05, -4.172325134277344e-06, -3.814697265625e-06, -1.0013530300057027e-05, 0.0, -0.0011866092681884766, -1.9073486328125e-06, -6.580352783203125e-05, 0.0, -0.0001544952392578125, -4.1961669921875e-05, -1.9073486328125e-05, -0.0005025863647460938, -1.9073486328125e-06, -0.0003414154052734375, -2.6702880859375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -9.34600830078125e-05, -5.7220458984375e-06, -0.0004901885986328125, -9.5367431640625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.0018242597579956055, 0.0, -0.0015811920166015625, -0.0055370330810546875, -3.4332275390625e-05, -7.62939453125e-06, -0.0001659393310546875, 0.0, -9.5367431640625e-05, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.0035667354241013527, -3.814697265625e-06, -0.0005340576171875, -0.008104324340820312, -0.000202178955078125, -7.82012939453125e-05, 0.0, -2.1457672119140625e-06, 0.0, -0.0007779590087011456, -4.1961669921875e-05, -0.000983238103799522, 0.0, -0.0064907073974609375, -7.62939453125e-06, -0.0005130767822265625, -0.00010335445404052734], "choice_history": [96, 173, 358, 105, 152, "Holy", "Light", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Holy", " ", "Light", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "6", "<EOS>", 50, 174, "self", "<EOS>"]}]}
{"index": 50, "beams": [{"score": -1.0281195672152421, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.heal(player.effective_heal_power(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "model_output": {"hole6": [{"value": {"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": "player", "hole1": "use", "_type": "Template63", "hole3": "game"}, "_type": "Expr"}, {"_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}}, "body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"hole0": {"id": "player", "_type": "Name"}, "hole1": "effective_heal_power", "_type": "Template67"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template77"}]}, {"_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}, "body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"hole0": {"id": "player", "_type": "Name"}, "hole1": "effective_heal_power", "_type": "Template67"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template77"}]}], "hole4": "player", "hole1": "SpellCard", "hole2": [{"hole0": "Holy Nova", "hole2": "PRIEST", "hole1": 5, "_type": "Template31"}], "hole3": "use", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "HolyNova", "_type": "Template5"}, "score_history": [-0.00014495849609375, -0.000240325927734375, -1.1920928244535389e-07, -1.2516897186287679e-05, -1.4305104514278355e-06, -5.721730849472806e-05, -1.3589850823336747e-05, -2.741813204920618e-06, -7.62939453125e-06, -0.001750946044921875, -0.0007781982421875, -1.311301275563892e-06, -0.00022029876708984375, -2.3841855067985307e-07, -1.9073486328125e-06, -3.4927710657939315e-05, 0.0, -0.0025997161865234375, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.6702880859375e-05, -2.622604142743512e-06, -2.0265579223632812e-06, -0.0031871795654296875, -4.76837158203125e-05, -1.52587890625e-05, -3.814697265625e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.7881393432617188e-05, -1.33514404296875e-05, -2.1457672119140625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000110626220703125, -0.0002193450927734375, -0.0015687942504882812, -7.62939453125e-06, -0.011283278465270996, 0.0, -0.0049724578857421875, -4.57763671875e-05, -0.0002880096435546875, -0.000377655029296875, -2.86102294921875e-05, 0.0, -0.0019457340240478516, -7.62939453125e-06, -0.0001506805419921875, -5.7220458984375e-06, -2.09808349609375e-05, -0.00830078125, -2.6702880859375e-05, -3.814697265625e-05, -1.1444091796875e-05, -0.000278472900390625, -3.814697265625e-06, -0.00017583370208740234, 0.0, -0.0031642913818359375, 0.0, -0.0008497238159179688, -7.62939453125e-06, -2.86102294921875e-05, -0.0001926422119140625, -0.00017547607421875, -0.00135040283203125, -0.00017547607421875, -0.00040827927296049893, -2.7418097943154862e-06, -0.5932491421699524, -1.0728830375228426e-06, -0.0005168914794921875, -0.14786624908447266, -0.010369300842285156, -0.00022125244140625, 0.0, -8.58306884765625e-06, 0.0, -0.002590656280517578, -1.9073486328125e-06, -9.918212890625e-05, -0.0001659393310546875, -0.001160740852355957, -2.300739288330078e-05, -0.009556770324707031, -0.01251220703125, -0.00943756103515625, -1.9073486328125e-06, -0.006131887435913086, -1.1920928244535389e-07, -0.0013179779052734375, -1.9073486328125e-05, -0.011875152587890625, 0.0, -0.0008299350738525391, 0.0, -0.013344526290893555, 0.0, -1.71661376953125e-05, -0.00037384033203125, -4.1961669921875e-05, -0.0009822845458984375, -0.001384735107421875, -0.015816211700439453, -1.1920928244535389e-07, -0.014466245658695698, -1.1920928244535389e-07, -0.0005168914794921875, -0.11472511291503906, -0.008545875549316406, -0.000507354736328125, -1.9073486328125e-06, -1.5974044799804688e-05, 0.0, -0.003077387809753418, -1.9073486328125e-06, -6.4849853515625e-05, -0.0001926422119140625, -0.0005227327346801758, -1.3470649719238281e-05], "choice_history": [97, 285, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "heal", "<EOS>", 347, 78, 305, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 50, 174, "self", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "heal", "<EOS>", 347, 78, 305, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 50, 174, "self", "<EOS>"]}]}
{"index": 51, "beams": [{"score": -0.032064746599701266, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "name": "HolySmite", "body": [{"hole1": 1, "hole2": "PRIEST", "hole3": "FREE", "hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}], "hole0": "Holy Smite", "_type": "Template14"}, {"hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"hole0": 2, "_type": "Template61"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template3"}]}]}, "score_history": [-0.000606536865234375, -5.91278076171875e-05, -9.5367431640625e-06, -0.0001354217529296875, -0.000179290771484375, -1.1205610462639015e-05, -9.536738616588991e-07, -1.9430925021879375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.82436691224575e-05, -5.543231964111328e-05, -2.431869324936997e-05, -0.000347137451171875, -0.012582778930664062, -0.000179290771484375, -8.4638240878121e-06, -6.771086918888614e-05, -4.41074053014745e-06, -7.62939453125e-06, -9.536737479720614e-07, 0.0, -0.0023860931396484375, 0.0, -0.0001857280731201172, 0.0, -0.0003337860107421875, -0.000202178955078125, -4.38690185546875e-05, -0.00027489662170410156, -7.62939453125e-06, -0.0005168914794921875, -2.09808349609375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -0.00044524669647216797, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -0.0008907051524147391, -1.7881377516459906e-06, -0.0002727508544921875, -3.24249267578125e-05, -2.6702880859375e-05, 0.0, -0.0001068115234375, 0.0, -0.0003126859664916992, -2.0265579223632812e-06, -3.123283022432588e-05, -5.245195097813848e-06, -0.00027736922493204474, -5.960462772236497e-07, -0.000270843505859375, -0.000492095947265625, -3.814697265625e-05, -0.008649230003356934, -8.344646857949556e-07, -3.814697265625e-05, -2.86102294921875e-05, -0.0013551379088312387, -0.0002874133933801204], "choice_history": [96, 173, 358, 105, 152, "Holy", "Smite", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Holy", " ", "Smite", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"]}]}
{"index": 52, "beams": [{"score": -0.7094425671022577, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "name": "Houndmaster", "body": [{"hole6": "<UNK>", "hole4": "minion_type", "hole1": 4, "hole7": "battlecry", "hole8": {"hole6": "IsType", "hole4": 2, "hole1": "ChangeHealth", "hole7": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}], "hole8": [{"value": {"hole0": "UserPicker", "_type": "Template79"}, "_type": "keyword", "arg": "picker"}], "hole2": [{"_type": "Num", "n": 2}], "hole3": "ChangeAttack", "hole5": [{"hole0": "Taunt", "_type": "Template54"}], "hole0": "Battlecry", "_type": "Template9"}, "hole2": "HUNTER", "hole3": "FREE", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole0": "Houndmaster", "_type": "Template4"}, {"hole0": 4, "hole1": 3, "_type": "Template19"}]}]}, "score_history": [-0.03239154815673828, -4.1961669921875e-05, -2.86102294921875e-05, -0.00017547607421875, -1.9073486328125e-05, -0.00391217740252614, -0.00099333212710917, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.5018234737217426e-06, -2.4318444047821686e-05, -5.841255187988281e-06, -0.0001430511474609375, -0.001415252685546875, -3.814697265625e-05, -7.152555099310121e-07, -7.748603820800781e-06, -0.00025975704193115234, 0.0, -0.002609729766845703, -5.7220458984375e-06, -0.0019227266311645508, -1.9073486328125e-06, -0.0015010833740234375, -3.576278118089249e-07, -0.0003337860107421875, 0.0, -5.650520324707031e-05, -2.1457672119140625e-06, -0.0865793228149414, -3.814697265625e-06, -0.014119386672973633, -5.7220458984375e-06, -0.42388343811035156, -0.018413543701171875, -0.006604424677789211, -0.021991968154907227, -0.0006070137023925781, -0.0012341737747192383, -1.4066597032069694e-05, -0.000133514404296875, -0.0019159317016601562, -5.7220458984375e-06, -0.008627671748399734, -1.9073486328125e-06, -0.005172252655029297, -0.01694774627685547, -1.33514404296875e-05, -0.0011203765170648694, -3.814697265625e-06, -0.0058345794677734375, -0.001605987548828125, -0.00115966796875, -7.677030225750059e-05, -0.00027251243591308594, -0.00010323524475097656, -0.010598182678222656, -2.110004425048828e-05, -8.392333984375e-05, -0.0047740936279296875, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.00021946430206298828, -0.0006866455078125, -0.0003376007080078125, 0.0, -0.000362396240234375, -0.0016908645629882812, 0.0, -0.023004531860351562, 0.0, -0.0013513565063476562, 0.0, -0.00019848346710205078, -0.00011456012725830078, 0.0, -0.001880645751953125, -4.38690185546875e-05, -6.6756979322235566e-06, -2.7179487005923875e-05, -0.0016498249024152756, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "Houndmaster", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 39, 328, "Battlecry", "<EOS>", "Change", "Health", "<EOS>", 346, 52, 179, "2", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 346, 69, 290, "Taunt", "<EOS>", "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", 122, 213, "4", "<EOS>", "3", "<EOS>"]}]}
{"index": 53, "beams": [{"score": -0.17337426011044954, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "model_output": {"hole6": [{"hole0": 4, "hole2": "charge", "hole1": 2, "_type": "Template50", "hole3": {"value": true, "_type": "NameConstant"}}], "hole4": "player", "hole1": "MinionCard", "hole2": [{"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": [{"s": "Huffer", "_type": "Str"}, {"_type": "Num", "n": 3}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "hole1": "__init__", "_type": "Template77", "hole3": [{"hole0": "BEAST", "_type": "Template75"}]}], "hole3": "create_minion", "hole0": "Huffer", "_type": "Template5"}, "score_history": [-0.0001735687255859375, -3.24249267578125e-05, -0.00432793190702796, -2.8013790142722428e-05, -3.50363552570343e-06, -3.695487976074219e-05, 0.0, -8.20159912109375e-05, -0.018522262573242188, -0.005401611328125, -3.0517578125e-05, 0.0, -3.099440846199286e-06, -1.9073486328125e-06, -6.115436553955078e-05, 0.0, -0.0045261383056640625, -0.0001430511474609375, -0.0001239776611328125, -1.239776611328125e-05, -6.175041198730469e-05, -3.814697265625e-06, -3.814697265625e-06, -2.5868290322250687e-05, 0.0, -2.288818359375e-05, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0007418394088745117, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -1.1444091796875e-05, -0.1257305145263672, 0.0, -0.00016021728515625, -5.14984130859375e-05, -0.0008418560028076172, -1.33514404296875e-05, -0.0003204345703125, -0.0004711151123046875, -0.0002269744873046875, -0.0012614727020263672, 0.0, -0.0001544952392578125, 0.0, -0.00019490718841552734, 0.0, -9.5367431640625e-06, -0.002933502197265625, -6.103515625e-05, -4.172325134277344e-06, -3.4927710657939315e-05, -3.099440846199286e-06, 0.0, -0.005289316177368164, 0.0, -0.000431060791015625, -3.24249267578125e-05, -0.0005718469619750977, -1.9073486328125e-06], "choice_history": [97, 283, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Huffer", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"]}]}
{"index": 54, "beams": [{"score": -0.08898744632006128, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "name": "Humility", "body": [{"hole0": "Humility", "hole2": "PALADIN", "hole1": 1, "_type": "Template2"}, {"hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"op": {"_type": "Sub"}, "_type": "BinOp", "right": {"hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "hole1": "calculate_attack", "_type": "Template76"}, "left": {"_type": "Num", "n": 1}}], "hole1": "change_attack", "_type": "Template3"}]}]}, "score_history": [-0.0013980865478515625, -6.67572021484375e-05, -3.814697265625e-06, -0.0003910064697265625, -0.0001506805419921875, -3.933898824470816e-06, -0.0010631411569193006, -3.814697265625e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.00018560374155640602, -1.9669512766995467e-05, -2.3841830625315197e-06, -4.1961669921875e-05, -0.009622573852539062, -0.000213623046875, -2.50339189733495e-06, -1.9073486328125e-06, -1.692756632110104e-05, 0.0, -0.002832651138305664, 0.0, -0.005707740783691406, -0.00014495849609375, -7.43865966796875e-05, 0.0, -0.0004177093505859375, 0.0, -6.29425048828125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.013842887245118618, 0.0, -2.288818359375e-05, -0.022887229919433594, -0.011110305786132812, -0.0025157928466796875, -0.0001544952392578125, -5.4957810789346695e-05, -9.5367431640625e-06, -0.009769439697265625, -0.0040187835693359375, -0.000152587890625, -0.0001010894775390625, 0.0, -8.0108642578125e-05, 0.0, -0.0015058517456054688, 0.0, -5.7220458984375e-06, 0.0, -0.00026023387908935547, -9.5367431640625e-06], "choice_history": [96, 173, 358, 105, 152, "Humility", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 43, 145, 23, 179, "1", "<EOS>", 99, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"]}]}
{"index": 55, "beams": [{"score": -0.16559441606318615, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "name": "<UNK>Mark", "body": [{"hole0": "<UNK> Mark", "hole2": "HUNTER", "hole1": 0, "_type": "Template2"}, {"hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"_type": "Num", "n": 1}], "hole1": "set_health_to", "_type": "Template3"}]}]}, "score_history": [-0.01355743408203125, -0.0001373291015625, -2.09808349609375e-05, -0.000499725341796875, -0.0025653839111328125, -0.00012397475074976683, -0.0011519708205014467, -0.00037746530142612755, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0001893381995614618, -4.720686411019415e-05, -2.622600959512056e-06, -1.9073486328125e-05, -0.004695892333984375, -8.58306884765625e-05, -0.001029161037877202, -0.00018310546875, -0.0003414769598748535, -0.0019702911376953125, -0.00011360082862665877, 0.0, -0.0008335113525390625, 0.0, -0.0059528350830078125, -0.000720977783203125, -3.4332275390625e-05, -1.9073486328125e-06, -0.013885498046875, 0.0, -0.0006084442138671875, 0.0, -5.7220458984375e-06, 0.0, -0.11266064643859863, -1.33514404296875e-05, -7.62939453125e-06, -0.002971649169921875, -2.86102294921875e-05, -0.0007364566554315388, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "<UNK>", "Mark", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 346, 52, 179, "1", "<EOS>"]}]}
{"index": 56, "beams": [{"score": -0.13579017560638107, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(2),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "model_output": {"hole6": [{"hole0": 2, "hole1": 2, "_type": "Template62"}], "hole4": "player", "hole1": "MinionCard", "hole2": [{"hole4": [{"_type": "Num", "n": 2}], "hole1": 3, "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template79"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template79"}, "_type": "keyword", "arg": "picker"}], "hole2": "COMMON", "hole3": "Damage", "hole5": "CharacterSelector", "hole0": "Ironforge Rifleman", "_type": "Template15"}], "hole3": "create_minion", "hole0": "IronforgeRifleman", "_type": "Template5"}, "score_history": [-0.06573772430419922, -5.7220458984375e-06, -0.011796029284596443, -8.225420970120467e-06, -4.6132929128361866e-05, -2.3562461137771606e-07, -1.931190308823716e-05, 0.0, -0.00014495849609375, -0.0016040802001953125, -0.02220439910888672, -3.4570680327306036e-06, -2.133839370799251e-05, -3.576272320060525e-06, -0.0002671480178833008, -2.205362579843495e-05, -0.0010852813720703125, -0.001064300537109375, -9.5367431640625e-06, -0.002645652275532484, -0.0010233611101284623, -1.9073486328125e-06, -9.918212890625e-05, -4.57763671875e-05, -0.016762662678956985, -3.814697265625e-06, -0.000632762850727886, -5.3882598876953125e-05, -1.9073486328125e-06, -0.0001430511474609375, -0.0001220703125, -2.288818359375e-05, -0.000125885009765625, -1.9073486328125e-06, -0.0001773834228515625, 0.0, -0.0013049840927124023, -4.410743713378906e-05, -1.9073486328125e-06, -6.103515625e-05, -0.000263214111328125, -0.0004012584686279297, 0.0, -0.0035343170166015625, 0.0, -0.0002460479736328125, -3.635883331298828e-05, -1.1920928244535389e-07, -0.00017726421356201172, 0.0, -0.001497507095336914, 0.0, -6.29425048828125e-05, -0.0006694793701171875, -6.4849853515625e-05, -1.33514404296875e-05, -9.536738616588991e-07, -0.0015026332112029195, -2.3841855067985307e-07], "choice_history": [97, 283, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "2", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "2", "<EOS>"]}]}
{"index": 57, "beams": [{"score": -0.013482447958800492, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "model_output": {"hole6": [{"hole0": 3, "hole2": "taunt", "hole1": 3, "_type": "Template50", "hole3": {"value": true, "_type": "NameConstant"}}], "hole4": "player", "hole1": "MinionCard", "hole2": [{"hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "hole1": 3, "hole2": "COMMON", "hole3": "minion_type", "hole0": "Ironfur Grizzly", "_type": "Template26"}], "hole3": "create_minion", "hole0": "IronfurGrizzly", "_type": "Template5"}, "score_history": [-0.000110626220703125, -0.0001049041748046875, -0.0006657097255811095, -7.414570427499712e-05, -1.5497195136049413e-06, -1.3902783393859863e-05, -2.872943878173828e-05, -1.1086449376307428e-05, -2.86102294921875e-05, -0.0017795562744140625, -0.0008869171142578125, -2.3841855067985307e-07, -3.254413604736328e-05, -4.291534423828125e-06, -4.76837158203125e-05, -3.695463419717271e-06, -1.9073486328125e-06, -0.000698089599609375, -5.7220458984375e-06, -0.0010148286819458008, -1.9073468138230965e-06, -6.866455078125e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -6.29425048828125e-05, -2.1457672119140625e-06, -0.0006122589111328125, 0.0, -7.62939453125e-06, 0.0, -0.003978729248046875, 0.0, -4.00543212890625e-05, -0.00080108642578125, -9.5367431640625e-06, -7.152531907195225e-06, -5.090107151772827e-05, -8.702285413164645e-06, -1.1920928244535389e-07, -0.002088785171508789, 0.0, -3.62396240234375e-05, -1.71661376953125e-05, -0.00015652179718017578, 0.0], "choice_history": [97, 283, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"]}]}
{"index": 58, "beams": [{"score": -1.0421873955225465, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n", "model_output": {"hole6": [{"value": {"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": "player", "hole1": "use", "_type": "Template63", "hole3": "game"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, {"args": {"hole0": "x", "_type": "Template49"}, "_type": "Lambda", "body": {"ops": [{"_type": "Is"}], "comparators": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Compare", "left": {"value": {"value": {"id": "x", "_type": "Name"}, "_type": "Attribute", "attr": "card"}, "_type": "Attribute", "attr": "minion_type"}}}], "_type": "Call", "func": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Assign"}, {"_type": "If", "orelse": [{"hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"hole0": 3, "_type": "Template61"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template77"}], "body": [{"hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "hole2": [{"hole0": 3, "_type": "Template61"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template77"}], "test": {"ops": [{"_type": "Is"}], "comparators": [{"value": "Null", "_type": "NameConstant"}], "_type": "Compare", "left": {"id": "<UNK>", "_type": "Name"}}}], "hole4": "player", "hole1": "SpellCard", "hole2": [{"hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole1": 3, "hole2": "HUNTER", "hole3": "target_func", "hole0": "Kill Command", "_type": "Template27"}], "hole3": "use", "hole5": [{"_type": "arg", "arg": "game"}], "hole0": "KillCommand", "_type": "Template5"}, "score_history": [-0.0008907318115234375, -0.000766754150390625, -4.768370445162873e-07, -7.5101784204889555e-06, -9.536738616588991e-07, -1.633159445191268e-05, -0.00014507770538330078, -3.6954863844584906e-06, -0.0001659393310546875, -0.0003566741943359375, -5.91278076171875e-05, 0.0, -0.00024485576432198286, -1.1920928244535389e-07, -5.7220458984375e-06, -2.3841852225814364e-07, 0.0, -0.0007021427154541016, -7.62939453125e-06, -0.012505412101745605, -2.0265579223632812e-06, -0.0010852813720703125, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00015866756439208984, -3.635883331298828e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.003229659516364336, -1.5497195136049413e-06, -0.0002922932035289705, 0.0, -4.4345855712890625e-05, 0.0, -0.000186920166015625, -0.000118255615234375, -1.6570091247558594e-05, -2.0265558760002023e-06, -0.013527870178222656, -1.9073486328125e-05, -0.00012969970703125, -0.0002155303955078125, -7.62939453125e-05, -4.1961669921875e-05, 0.0, -5.543231964111328e-05, 0.0, -2.872943878173828e-05, 0.0, -8.463859558105469e-06, -1.1920928244535389e-07, -9.024133760249242e-05, -3.576278118089249e-07, -0.008131027221679688, -4.1961669921875e-05, -0.00011444091796875, -0.000240325927734375, -1.9073486328125e-06, -0.008885413408279419, -1.3589859008789062e-05, -0.009466171264648438, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.0221099853515625, 0.0, -0.000331878662109375, -1.9073486328125e-06, -0.006445407867431641, -2.384185791015625e-06, -0.0003299713134765625, 0.0, -0.0005978345288895071, -2.1457672119140625e-06, -0.000202178955078125, -0.0011749267578125, 0.0, -0.0001888275146484375, -1.9073486328125e-06, -0.0006951093673706055, -2.3841855067985307e-07, -0.00011277183511992916, -1.311301275563892e-06, -0.00012969970703125, -0.0001983642578125, -5.53131103515625e-05, -0.00296783447265625, -0.0023610303178429604, -0.0008681835606694221, -0.03238105773925781, -9.5367431640625e-05, -0.06221771240234375, -1.71661376953125e-05, -0.000217437744140625, -0.000186920166015625, -0.0010852813720703125, -1.9073486328125e-06, -0.2838200330734253, 0.0, -0.004841327667236328, -7.152555099310121e-07, -0.0032347054220736027, -1.6689286894688848e-06, -0.000335693359375, -0.010730743408203125, -3.814697265625e-06, -0.001621246337890625, 0.0, -0.00012969970703125, 0.0, -0.00010001659393310547, 0.0, -0.017665863037109375, 0.0, -0.0724191665649414, -0.0027713775634765625, -0.0006923675537109375, -4.57763671875e-05, -0.0002193450927734375, -2.47955322265625e-05, -0.011140004731714725, -5.483620952873025e-06, -0.0002269744873046875, -0.06583690643310547, -4.1961669921875e-05, -0.0013875961303710938, -0.0003509521484375, -6.020058935973793e-05, -7.986990567587782e-06, -0.000347137451171875, -0.0001430511474609375, -5.91278076171875e-05, -0.003749847412109375, 0.0, -0.0015583038330078125, 0.0, -0.0001920461654663086, 0.0, -5.841255187988281e-06, -1.1920922133867862e-06, -0.0007750988006591797, 0.0, -0.0003910064697265625, -0.000339508056640625, -4.76837158203125e-05, -0.1531914323568344, -1.1920928244535389e-07, -1.52587890625e-05, -1.9073486328125e-05, -0.0004510772996582091, -0.0014045226853340864, -0.0001125335693359375, -0.00060272216796875, -6.866455078125e-05, -0.000499725341796875, -1.9073486328125e-06, -0.000255584716796875, 0.0, -0.001507401466369629, -1.9073486328125e-06, -1.33514404296875e-05, -5.960462772236497e-07, -3.31399824062828e-05, 0.0, -0.000148773193359375, -0.000331878662109375, -8.96453857421875e-05, -0.198142409324646, -1.1920928244535389e-07, -1.33514404296875e-05, -3.24249267578125e-05, -0.0005624086479656398, -0.001979587133973837], "choice_history": [97, 285, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 347, 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 47, 167, 0, 282, "x", "<EOS>", 17, 153, 13, 143, 13, 143, 21, 174, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 343, 8, 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 161, 17, 153, 21, 174, "<UNK>", "<EOS>", 343, 8, 346, 51, 176, "Null", "<EOS>", 358, 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 358, 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>"]}]}
{"index": 59, "beams": [{"score": -0.005041276473477296, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n", "model_output": {"hole6": [{"hole0": 2, "hole2": "spell_damage", "hole1": 2, "_type": "Template50", "hole3": {"_type": "Num", "n": 1}}], "hole4": "player", "hole1": "MinionCard", "hole2": [{"hole0": "Kobold Geomancer", "hole2": "ALL", "hole1": 2, "_type": "Template31"}], "hole3": "create_minion", "hole0": "KoboldGeomancer", "_type": "Template5"}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.474196900147945e-05, -1.025196434056852e-05, -2.0146166207268834e-05, -4.966557025909424e-05, -4.38690185546875e-05, -3.576278118089249e-07, 0.0, -0.0007381439208984375, -2.86102294921875e-05, -2.1457672119140625e-06, -2.574920654296875e-05, -2.0265579223632812e-06, -3.814697265625e-06, -5.090115519124083e-05, 0.0, -1.919269561767578e-05, 0.0, -1.33514404296875e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -0.000335693359375, -9.5367431640625e-06, -2.861022494471399e-06, -1.1920928244535389e-07, -0.0002042913984041661, 0.0, -0.002529263263568282, -1.1920928244535389e-07, -0.00048828125, -8.96453857421875e-05, -0.00023936983780004084, -1.9073486328125e-06], "choice_history": [97, 283, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 23, 179, "1", "<EOS>"]}]}
{"index": 60, "beams": [{"score": -0.022815226618376983, "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "model_output": {"hole6": [{"hole0": 4, "hole2": "charge", "hole1": 3, "_type": "Template50", "hole3": {"value": true, "_type": "NameConstant"}}], "hole4": "player", "hole1": "MinionCard", "hole2": [{"hole0": "Kor'kron Elite", "hole2": "WARRIOR", "hole1": 4, "_type": "Template31"}], "hole3": "create_minion", "hole0": "<UNK>Elite", "_type": "Template5"}, "score_history": [-0.0001678466796875, -4.38690185546875e-05, -0.003423934103921056, -0.0011651900131255388, -3.4450891689630225e-05, -1.4500692486763e-05, -4.220008850097656e-05, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0036602020263671875, -5.340576171875e-05, -2.50339189733495e-06, -2.574920654296875e-05, -2.2649765014648438e-06, -3.814697265625e-06, -8.237365545937791e-05, 0.0, -0.0003739595413208008, 0.0, -0.0002574920654296875, 0.0, -0.00011861324310302734, 0.0, -1.9073486328125e-06, -0.0064544677734375, -0.0002155303955078125, -1.0728830375228426e-06, -2.5629668016335927e-05, -0.00012969970703125, 0.0, -0.005820512305945158, 0.0, -0.000469207763671875, -5.14984130859375e-05, -0.0001684427261352539, -1.9073486328125e-06], "choice_history": [97, 283, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"]}]}
{"index": 61, "beams": [{"score": -0.20196087825524245, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n", "model_output": {"hole6": [{"hole0": 2, "hole2": "auras", "hole1": 4, "_type": "Template50", "hole3": {"hole0": "Aura", "hole1": [{"hole0": 1, "_type": "Template70"}, {"hole0": "MinionSelector", "_type": "Template79"}], "_type": "Template78"}}], "hole4": "player", "hole1": "MinionCard", "hole2": [{"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": [{"s": "Leokk", "_type": "Str"}, {"_type": "Num", "n": 3}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "hole1": "__init__", "_type": "Template77", "hole3": [{"hole0": "BEAST", "_type": "Template75"}]}], "hole3": "create_minion", "hole0": "Leokk", "_type": "Template5"}, "score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -2.5033637939486653e-05, -3.933898824470816e-06, -1.301988959312439e-06, -0.00014472007751464844, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0015268325805664062, -0.0056934356689453125, -4.1961669921875e-05, 0.0, -5.9604644775390625e-06, -4.172325134277344e-06, -8.213520050048828e-05, 0.0, -0.0007343292236328125, -0.0004291534423828125, -4.00543212890625e-05, -5.841255187988281e-06, -0.0001468658447265625, -5.7220458984375e-06, -1.33514404296875e-05, -0.0006635189056396484, 0.0, -3.0517578125e-05, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -1.919269561767578e-05, -1.9073486328125e-06, -0.000967860221862793, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -4.792213439941406e-05, 0.0, -0.16085529327392578, 0.0, -0.0001964569091796875, -6.4849853515625e-05, -4.5776359911542386e-05, -2.6702880859375e-05, -8.7738037109375e-05, -0.000286102294921875, -5.53131103515625e-05, -0.00146484375, 0.0, -0.0002231597900390625, 0.0, -9.02414321899414e-05, 0.0, -1.9073486328125e-05, -0.0005817413330078125, -2.6702880859375e-05, -7.867813110351562e-06, -3.3378546504536644e-06, -4.768335202243179e-07, 0.0, -0.001088734483346343, 0.0, -0.000286102294921875, -0.014162063598632812, -5.91278076171875e-05, -5.7220458984375e-06, -0.0001735687255859375, -0.0015048980712890625, -8.58306884765625e-05, -0.0001517515047453344, -2.300739288330078e-05, -0.008899688720703125, -0.0003814697265625, -1.965835690498352e-05, -0.00032757080043666065, 0.0], "choice_history": [97, 283, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Leokk", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Minion", "Selector", "<EOS>"]}]}
{"index": 62, "beams": [{"score": -0.5289817912807209, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "model_output": {"hole6": [{"hole0": "Weapon", "hole2": 4, "hole1": 1, "_type": "Template68"}], "hole4": "player", "hole1": "WeaponCard", "hole2": [{"hole0": "<UNK> Justice", "hole2": "PALADIN", "hole1": 1, "_type": "Template34", "hole3": "FREE"}], "hole3": "create_weapon", "hole0": "<UNK>Justice", "_type": "Template5"}, "score_history": [-0.0010128021240234375, -0.0005550384521484375, -6.687594577670097e-05, -0.00018416276725474745, -0.010693143121898174, -0.00562733830884099, -0.0003933906555175781, -1.311301275563892e-06, -1.71661376953125e-05, -0.00250244140625, -5.14984130859375e-05, -0.003031659172847867, -0.0001850128173828125, -1.6570051229791716e-05, -0.00020599365234375, -0.0002232456172350794, -1.9073486328125e-06, -0.0008544921875, -0.000125885009765625, -0.00248563289642334, -3.814697265625e-06, -0.08676958084106445, -1.9073486328125e-06, -0.00010514008317841217, 0.0, -7.62939453125e-06, -0.0007343292236328125, -0.00136566162109375, -0.4116511046886444, -2.1457672119140625e-06, -1.1920928244535389e-07, -3.576278118089249e-07, -0.00010443339124321938, 0.0], "choice_history": [97, 283, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"]}]}
{"index": 63, "beams": [{"score": -0.03409088061516741, "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "model_output": {"hole6": [{"hole0": 6, "hole2": "taunt", "hole1": 5, "_type": "Template50", "hole3": {"value": true, "_type": "NameConstant"}}], "hole4": "player", "hole1": "MinionCard", "hole2": [{"hole0": "Lord of the Arena", "hole2": "ALL", "hole1": 6, "_type": "Template31"}], "hole3": "create_minion", "hole0": "LordOfTheArena", "_type": "Template5"}, "score_history": [-0.00011444091796875, -4.38690185546875e-05, -0.0008150608628056943, -0.0001878737093647942, -0.0014983155997470021, -5.054470238974318e-05, -4.6491513785440475e-06, -3.129243850708008e-05, -5.14984130859375e-05, -2.0265558760002023e-06, 0.0, -0.0077667236328125, -3.24249267578125e-05, -0.00015305601118598133, -0.00018537044525146484, -0.00020944235438946635, -6.67572021484375e-05, -0.0013467073440551758, -0.0001964569091796875, -0.008280754089355469, -0.0001468658447265625, -4.649278707802296e-06, 0.0, -0.00011718273162841797, 0.0, -5.340576171875e-05, 0.0, -0.0005340576171875, 0.0, -1.1444091796875e-05, -0.0038051605224609375, -1.1444091796875e-05, -0.0002803409588523209, -9.894321920000948e-06, -4.982941391062923e-05, -2.0265558760002023e-06, -0.0077925920486450195, 0.0, -6.4849853515625e-05, -2.86102294921875e-05, -0.00014126300811767578, 0.0], "choice_history": [97, 283, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"]}]}
{"index": 64, "beams": [{"score": -0.039123176078163624, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"hole6": [{"hole0": 2, "hole1": 1, "_type": "Template62"}], "hole4": "player", "hole1": "MinionCard", "hole2": [{"hole0": {"hole0": "super", "_type": "Template79"}, "hole2": [{"s": "Mechanical Dragonling", "_type": "Str"}, {"_type": "Num", "n": 1}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "hole1": "__init__", "_type": "Template77", "hole3": [{"hole0": "MECH", "_type": "Template75"}]}], "hole3": "create_minion", "hole0": "MechanicalDragonling", "_type": "Template5"}, "score_history": [-1.33514404296875e-05, -4.9591064453125e-05, -2.145764938177308e-06, -6.437280717364047e-06, -4.386805812828243e-05, -1.1918018572032452e-07, -4.088878631591797e-05, -4.649161837733118e-06, -2.86102294921875e-05, -0.00112152099609375, -0.012402534484863281, -0.00012969970703125, -4.38690185546875e-05, -1.823902130126953e-05, -1.9073486328125e-06, -0.0001010894775390625, -2.86102294921875e-05, -0.0013751983642578125, -0.0005359649658203125, -2.288818359375e-05, -2.0503914129221812e-05, -0.0001429318217560649, -4.768367489305092e-06, -9.1552734375e-05, 0.0, -1.9073486328125e-06, -3.9815906347939745e-05, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.7404556274414062e-05, 0.0, -1.3470649719238281e-05, -5.7220458984375e-06, -0.0002593994140625, -1.9073486328125e-06, -0.000354766845703125, 0.0, -3.707408905029297e-05, -0.00017940998077392578, -0.005565643310546875, -1.9073486328125e-06, -8.7738037109375e-05, -1.1444091796875e-05, -4.470348358154297e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.002513885498046875, -0.0005321502685546875, -0.011821866035461426, 0.0, -4.76837158203125e-05, 0.0, -0.0008227825164794922, 0.0, -0.0001506805419921875, -4.76837158203125e-05, -2.86102294921875e-05, -9.596345626050606e-05, -2.3841855067985307e-07, -6.484967161668465e-05, -8.106198947643861e-06], "choice_history": [97, 283, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Mechanical", " ", "Dragonling", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"]}]}
{"index": 65, "beams": [{"score": -0.9096958169712792, "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "name": "MindBlast", "body": [{"hole0": "Mind Blast", "hole2": "PRIEST", "hole1": 2, "_type": "Template12"}, {"hole0": {"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "hole2": [{"hole0": 5, "_type": "Template61"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template3"}]}]}, "score_history": [-0.003814697265625, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002288818359375, -0.000102996826171875, -9.536738616588991e-07, -3.576278118089249e-07, -2.3841855067985307e-07, -0.0001049041748046875, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014997116522863507, -1.8715856640483253e-05, -3.9696693420410156e-05, -0.000278472900390625, -0.8490104675292969, -0.0311279296875, -4.768370445162873e-07, -0.0025347890332341194, -1.156323378381785e-05, 0.0, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.0023488998413085938, 0.0, -0.000453948974609375, -0.0018482208251953125, -0.0002765655517578125, -1.9073486328125e-06, -0.0003299713134765625, -1.71661376953125e-05, -0.001155853271484375, -3.814697265625e-06, -0.0008950233459472656, 0.0, -0.004026055335998535, 0.0, -0.0025730663910508156, -1.1920928244535389e-07, -0.0007069140556268394, -4.768370445162873e-07, -4.9591064453125e-05, -0.000667572021484375, -9.5367431640625e-05, -0.0017594099044799805, -0.00021705696417484432, -4.00543212890625e-05, -2.47955322265625e-05, -0.004500031471252441, -0.00023268836957868189], "choice_history": [96, 173, 358, 105, 152, "Mind", "Blast", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 116, 196, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 126, 225, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "5", "<EOS>", 50, 174, "self", "<EOS>"]}]}
