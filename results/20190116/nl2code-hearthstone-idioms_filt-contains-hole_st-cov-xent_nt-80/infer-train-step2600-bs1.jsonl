{"index": 0, "beams": [{"inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole0": "Acidic Swamp Ooze", "hole2": "ALL", "hole3": "battlecry", "hole1": 2, "_type": "Template11", "hole4": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"hole0": "Destroy", "_type": "Template77"}, {"hole1": "EnemyPlayer", "hole0": "WeaponSelector", "_type": "Template69"}], "_type": "Call"}}, {"hole1": 2, "hole0": 3, "_type": "Template27"}], "name": "AcidicSwampOoze"}]}, "choice_history": [80, 159, 295, 88, 138, "Acidic", "Swamp", "Ooze", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 68, 260, "Destroy", "<EOS>", 61, 250, "Weapon", "Selector", "<EOS>", "Enemy", "Player", "<EOS>", 110, 202, "3", "<EOS>", "2", "<EOS>"], "score_history": [-3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0002422332763671875, -1.33514404296875e-05, -0.0024377910885959864, -0.01136899832636118, -0.0001904870441649109, -1.6689286894688848e-06, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -3.576278118089249e-07, -1.9073486328125e-05, -4.172325134277344e-06, -3.814697265625e-06, -0.0027561187744140625, -0.000102996826171875, -4.672895011026412e-05, -7.677078247070312e-05, -0.002408742904663086, -1.71661376953125e-05, -9.500976011622697e-05, -0.0001506805419921875, -3.79082266590558e-05, 0.0, -6.67572021484375e-05, -1.9073486328125e-06, -0.0017567873001098633, 0.0, -0.02264404296875, -0.015398025512695312, -9.5367431640625e-06, -1.9073486328125e-06, -6.878376007080078e-05, -1.9073486328125e-06, -9.5367431640625e-05, -0.007537841796875, -1.33514404296875e-05, -0.00391093734651804, -0.00018596288282424212, -0.041281700134277344, -1.9073486328125e-06, -0.0019953250885009766, -0.0007136930944398046, -1.1920928244535389e-07, -0.0031407452188432217, -0.0005340432398952544, 0.0, -0.00299835205078125, -1.1444091796875e-05, -0.0010368824005126953, 0.0, -4.2915203266602475e-06, 0.0], "score": -0.12343718938694082}]}
{"index": 1, "beams": [{"inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n        self.target.damage(player.effective_heal_power(self.target.card.\n            minion_type()), self)\n        self.target.taunt = True\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}, "args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}]}, "_type": "Expr"}], "name": "__init__"}, {"args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "heal"}, "args": [{"func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "args": [{"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}, "_type": "Call"}], "_type": "Call"}, {"id": "self", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}, {"value": {"value": true, "_type": "NameConstant"}, "_type": "Assign", "targets": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "taunt"}]}, {"value": {"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}, "args": [{"func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "args": [{"func": {"value": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "card"}, "_type": "Attribute", "attr": "minion_type"}, "_type": "Call"}], "_type": "Call"}, {"id": "self", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}, {"value": {"value": true, "_type": "NameConstant"}, "_type": "Assign", "targets": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "taunt"}]}], "name": "use"}], "name": "AncestralHealing"}]}, "choice_history": [80, 159, 295, 88, 138, "Ancestral", "Healing", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Ancestral", " ", "Healing", "<EOS>", 47, 165, "0", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 299, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 283, 40, 136, 11, 129, 19, 160, "player", "<EOS>", "effective_heal_power", "<EOS>", 282, 40, 134, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 45, 160, "self", "<EOS>", 85, 128, 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 283, 40, 136, 11, 129, 19, 160, "player", "<EOS>", "effective_heal_power", "<EOS>", 282, 40, 134, 11, 129, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 45, 160, "self", "<EOS>", 85, 128, 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score_history": [-6.29425048828125e-05, -0.0002613067626953125, -7.62939453125e-06, -2.86102294921875e-05, -1.33514404296875e-05, -4.649161837733118e-06, -0.0006542548071593046, -4.768370445162873e-07, -0.000141143798828125, 0.0, -1.9073486328125e-06, -4.780292510986328e-05, -1.33514404296875e-05, -1.71661376953125e-05, -2.47955322265625e-05, -0.0007686614990234375, 0.0, -0.00013649463653564453, -3.814697265625e-06, -7.62939453125e-06, -1.52587890625e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -6.866455078125e-05, -2.288818359375e-05, -0.0001049041748046875, -0.000926971435546875, -0.0002231597900390625, -1.1444091796875e-05, 0.0, -5.53131103515625e-05, 0.0, -3.933906555175781e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.000690460205078125, -0.0001373291015625, -5.7220458984375e-06, -3.2186455882765586e-06, -1.33514404296875e-05, -4.184243152849376e-05, -6.29425048828125e-05, -2.288818359375e-05, -1.1444091796875e-05, -0.00026959233218804, -9.5367431640625e-06, -0.0001277923583984375, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.0004329681396484375, -1.1920928244535389e-07, -0.0001506805419921875, 0.0, -6.866455078125e-05, 0.0, -5.340576171875e-05, -0.0004634857177734375, -2.300739288330078e-05, -4.0531158447265625e-06, -0.0004940032958984375, -1.33514404296875e-05, -1.9073486328125e-05, -0.000171661376953125, -1.9073486328125e-05, -0.000568389892578125, -1.9073486328125e-06, -0.0001621246337890625, -7.43865966796875e-05, -1.33514404296875e-05, -2.09808349609375e-05, -5.340576171875e-05, -7.62939453125e-06, -0.000339508056640625, -7.62939453125e-06, -1.52587890625e-05, 0.0, -0.022748231887817383, -9.167194366455078e-05, -0.010080337524414062, -1.52587890625e-05, -2.86102294921875e-05, -1.1444091796875e-05, -0.0001201629638671875, -4.38690185546875e-05, -5.7220458984375e-06, -8.0108642578125e-05, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.0002918243408203125, -7.62939453125e-06, -4.1723224057932384e-06, -0.8715505599975586, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -2.09808349609375e-05, -7.62939453125e-06, 0.0, -8.392333984375e-05, 0.0, -3.826618194580078e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.52587890625e-05, -3.814697265625e-06, -5.340576171875e-05, -1.9073486328125e-06, -8.20159912109375e-05, 0.0, -3.4332275390625e-05, -4.57763671875e-05, -2.288818359375e-05, -8.463859558105469e-06, -0.007663726806640625, -1.9073486328125e-06, -0.00061798095703125, -0.0001220703125, 0.0, -4.38690185546875e-05, -0.00016021728515625, -1.9073486328125e-06, -0.000705718994140625, -3.814697265625e-06, -4.38690185546875e-05, -8.96453857421875e-05, -0.0002899169921875, -1.9073486328125e-06, -0.0029802322387695312, -3.814697265625e-06, -0.0002346038818359375, -0.000209808349609375, -0.0011463165283203125, -0.0035152435302734375, -1.52587890625e-05, -1.52587890625e-05, 0.0, -0.00014495849609375, 0.0, -0.0005679125897586346, -5.7220458984375e-06, -0.0037670135498046875, -0.04703807830810547, -0.0005359649658203125, -8.0108642578125e-05, 0.0, -0.0002498626708984375, -1.9073486328125e-06, -0.2110891342163086, 0.0, -0.0002593994140625, -0.0001888275146484375, -1.9073486328125e-05, -1.1444091796875e-05, -0.12448322772979736, -0.000484466552734375, -0.00180816650390625, -0.005228996276855469, -0.0010987520217895508, -3.814697265625e-06, -0.017304420471191406, -2.09808349609375e-05, -1.9073486328125e-06, -0.0003261566162109375, 0.0, -0.04179096221923828, -1.33514404296875e-05, -0.000469207763671875, 0.0, -0.005088925361633301, -7.05718994140625e-05, -0.000362396240234375, -2.0265579223632812e-06, -0.0687781572341919, 0.0, -0.001415252685546875, -5.7220458984375e-05, -1.3589859008789062e-05, -9.536738616588991e-07, -0.028833389282226562, -3.814697265625e-06, -0.0001010894775390625, -0.0024280548095703125, -1.9073486328125e-06, 0.0, -0.028310775756835938, 0.0, -0.0010204315185546875, -5.7220458984375e-05, -0.030160903930664062, -1.52587890625e-05, -0.0010499954223632812, 0.0, -0.21912014484405518, -3.814697265625e-05, -0.0002536773681640625, -0.09224605560302734, -0.11285591125488281, -0.029897689819335938, -5.53131103515625e-05, -1.71661376953125e-05, 0.0, -0.0003681182861328125, 0.0, -0.0006582731730304658, -1.9073486328125e-06, -0.000438690185546875, -0.07227230072021484, -0.0003452301025390625, -7.82012939453125e-05, 0.0, -0.0002346038818359375, -3.814697265625e-06, -0.16812801361083984, -5.7220458984375e-06, -0.00263214111328125, 0.0, -0.003942608833312988, -0.0005970001220703125, -2.47955322265625e-05, -5.14984130859375e-05, -0.04311084747314453, -3.814697265625e-06, -0.4014178514480591, -4.00543212890625e-05, -0.0002994537353515625, -0.15717506408691406, -0.08683633804321289, -2.6702880859375e-05, -0.1619405746459961, -1.1444091796875e-05, -3.814697265625e-06, -0.0002040863037109375, 0.0, -0.04363059997558594, -2.86102294921875e-05, -0.00089263916015625, 0.0, -0.0016319751739501953, -6.29425048828125e-05, -0.00042724609375, -5.841255187988281e-06, -0.1021108627319336, 0.0, -0.0019626617431640625, -8.96453857421875e-05, -1.1801719665527344e-05, -1.1920922133867862e-06], "score": -3.2626070717427567}]}
{"index": 2, "beams": [{"inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Animal Companion", "_type": "Template15", "hole2": "HUNTER"}, {"args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}, {"value": {"elts": [{"func": {"value": {"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}, "_type": "Attribute", "attr": "Huffer"}, "_type": "Call"}, {"func": {"value": {"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}, "_type": "Attribute", "attr": "Misha"}, "_type": "Call"}, {"func": {"value": {"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "hunter"}, "_type": "Attribute", "attr": "Misha"}, "_type": "Call"}], "_type": "List"}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "card", "_type": "Name"}]}, {"value": {"func": {"value": {"id": "card", "_type": "Name"}, "_type": "Attribute", "attr": "summon"}, "args": [{"id": "player", "_type": "Name"}, {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call"}], "_type": "Call"}, "_type": "Expr"}], "name": "use"}, {"hole1": [{"_type": "Lt"}], "hole0": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call"}, "_type": "Template4", "hole2": [{"n": 7, "_type": "Num"}]}], "name": "AnimalCompanion"}]}, "choice_history": [80, 159, 295, 88, 138, "Animal", "Companion", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 297, 101, 184, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "<UNK>", "<EOS>", 17, 155, 284, 40, 134, 11, 129, 11, 129, 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 40, 134, 11, 129, 11, 129, 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 40, 134, 11, 129, 11, 129, 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 85, 128, 282, 45, 160, "card", "<EOS>", 14, 136, 11, 129, 19, 160, "game", "<EOS>", "random_choice", "<EOS>", 282, 45, 160, "<UNK>", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "card", "<EOS>", "summon", "<EOS>", 284, 45, 160, "player", "<EOS>", 37, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", 40, 136, 19, 160, "len", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>", 113, 217, 14, 136, 19, 160, "len", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>", 279, 8, 282, 47, 165, "7", "<EOS>"], "score_history": [-0.000102996826171875, -3.62396240234375e-05, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -7.581423415103927e-05, -5.745722592109814e-05, -6.794906312279636e-06, -1.52587890625e-05, 0.0, -3.814697265625e-06, -0.0001304149627685547, -3.814697265625e-06, -2.0265579223632812e-06, -0.14798545837402344, -0.0007114410400390625, -6.4849853515625e-05, -0.00013600854435935616, -3.659724825411104e-05, -2.777547706500627e-05, 0.0, -0.00036995718255639076, -7.62939453125e-06, -8.845329284667969e-05, -5.7220458984375e-05, -0.000400543212890625, -1.9073486328125e-06, -0.0001201629638671875, -3.814697265625e-06, -1.1444091796875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -2.6702880859375e-05, 0.0, -2.6702880859375e-05, -2.1219253540039062e-05, -3.933906555175781e-06, -0.35208606719970703, -0.017120361328125, -3.814697265625e-06, -9.5367431640625e-06, -2.288818359375e-05, -9.1552734375e-05, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -6.580276385648176e-05, -3.814697265625e-06, -4.38690185546875e-05, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.0013580322265625e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -2.47955322265625e-05, -7.62939453125e-06, -0.004715919494628906, -7.62939453125e-06, -1.71661376953125e-05, -4.38690185546875e-05, -2.288818359375e-05, -0.017781734466552734, -8.2254373410251e-06, -0.0022153854370117188, -0.0021028518676757812, -0.0038061141967773438, -0.00079345703125, -3.62396240234375e-05, -4.57763671875e-05, -4.57763671875e-05, -3.62396240234375e-05, 0.0, -0.0001201629638671875, -7.62939453125e-06, -0.00984954833984375, -5.7220458984375e-06, -0.01085662841796875, -8.20159912109375e-05, -0.0011899470118805766, -9.5367431640625e-06, -0.008403778076171875, 0.0, -0.007730959914624691, -9.5367431640625e-06, -0.004411101341247559, -5.245203283266164e-06, -0.6638389825820923, -1.9073486328125e-06, -0.0004634857177734375, -4.9591064453125e-05, -2.288818359375e-05, -9.1552734375e-05, -0.0001010894775390625, -9.5367431640625e-06, -0.0021076202392578125, -1.1444091796875e-05, -0.15044593811035156, -2.86102294921875e-05, -0.00336456298828125, -1.9073486328125e-06, -0.000574468809645623, -7.62939453125e-06, -0.007925987243652344, 0.0, -0.007623791694641113, -1.1444091796875e-05, -0.0027390718460083008, -3.218649908376392e-06, -0.8714977502822876, 0.0, -0.0009021759033203125, -5.7220458984375e-05, -2.86102294921875e-05, -4.00543212890625e-05, -0.00011444091796875, -4.76837158203125e-05, -0.00218963623046875, -2.47955322265625e-05, -0.3434791564941406, -4.38690185546875e-05, -0.0026607513427734375, -1.9073486328125e-06, -0.0008172978996299207, -7.748603820800781e-06, -0.00852203369140625, 0.0, -0.007859587669372559, -9.5367431640625e-06, -0.0028611421585083008, -3.099440846199286e-06, -0.8648888468742371, -1.9073486328125e-06, -0.3097515106201172, -4.76837158203125e-05, -1.71661376953125e-05, -0.000461578369140625, -1.52587890625e-05, -0.013601422309875488, -8.0108642578125e-05, -0.004670143127441406, -0.010056495666503906, -4.00543212890625e-05, 0.0, -0.005542755126953125, 0.0, -0.013427257537841797, 0.0, -0.005624890327453613, -2.5033950805664062e-05, -0.0001983642578125, -0.00313568115234375, -1.9073486328125e-05, -0.00046646595001220703, -3.063678741455078e-05, -0.0020532608032226562, -5.7220458984375e-05, -4.76837158203125e-05, -0.004268646240234375, -1.71661376953125e-05, 0.0, -0.0012531280517578125, 0.0, -0.005212185904383659, -5.161762237548828e-05, -0.0026845932006835938, 0.0, -0.0006351470947265625, -3.62396240234375e-05, -7.62939453125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.00516510009765625, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0013141632080078125, 0.0, -0.0005981922149658203, 0.0, -0.0013332366943359375, -0.0044708251953125, -2.09808349609375e-05, 0.0, -0.00017178058624267578, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, 0.0, -0.0019935364834964275, 0.0, -0.005686759948730469, -0.0011491775512695312, -0.0003662109375, -0.000125885009765625, -1.9073486328125e-06, 0.0, -0.0008825063705444336, -1.33514404296875e-05, -6.4849853515625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.0001049041748046875, 0.0, -0.0017354481387883425, 0.0, -3.814697265625e-06, -0.001476287841796875, -2.288818359375e-05, -0.0001392364501953125, -1.9073486328125e-06, -0.0020656585693359375, 0.0], "score": -3.9525681438706215}]}
{"index": 3, "beams": [{"inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Arcane Explosion", "_type": "Template17", "hole2": "MAGE"}, {"args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}, {"iter": {"func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"value": {"func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "args": [{"hole0": 1, "_type": "Template71"}, {"id": "self", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}]}], "name": "use"}], "name": "ArcaneExplosion"}]}, "choice_history": [80, 159, 295, 88, 138, "Arcane", "Explosion", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>"], "score_history": [-0.00055694580078125, -0.0017147064208984375, -1.71661376953125e-05, -0.000118255615234375, -3.62396240234375e-05, -7.152555099310121e-07, -2.0384652088978328e-05, -8.225420970120467e-06, -0.000133514404296875, 0.0, -5.7220458984375e-06, -7.832050323486328e-05, -8.96453857421875e-05, -6.4849853515625e-05, -5.7220458984375e-05, -0.08032894134521484, -0.00563812255859375, -0.00014995403762441128, -4.3511328840395436e-05, -0.00019488928955979645, -1.9073486328125e-06, -9.179113112622872e-05, 0.0, -0.000545501708984375, -4.0531158447265625e-06, -0.06639289855957031, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -1.71661376953125e-05, -2.288818359375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, 0.0, -5.14984130859375e-05, 0.0, -1.33514404296875e-05, -1.537799835205078e-05, -4.291534423828125e-06, -0.005221366882324219, -1.33514404296875e-05, -1.1444091796875e-05, -5.53131103515625e-05, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -5.53131103515625e-05, -6.67572021484375e-05, -4.291534423828125e-06, -7.62939453125e-06, -0.0004730224609375, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.103515625e-05, 0.0, -3.0517578125e-05, -2.47955322265625e-05, -4.1961669921875e-05, -3.8504600524902344e-05, -0.000995635986328125, -0.000102996826171875, -6.4849853515625e-05, -1.9073486328125e-06, -0.0006583929061889648, 0.0, -0.004305839538574219, -0.0020008087158203125, -0.0053539276123046875, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -0.00054168701171875, -9.5367431640625e-06, -0.001789093017578125, 0.0, -0.0001392364501953125, -0.000179290771484375, -3.814697265625e-06, -3.0517578125e-05, 0.0, -0.000408172607421875, 0.0, -2.491474151611328e-05, -3.933906555175781e-06, -0.001880645751953125, -5.7220458984375e-06, -0.0003147125244140625, -2.6702880859375e-05, -0.00257110595703125, -0.001922607421875, -5.7220458984375e-06, -9.5367431640625e-06, -1.1444091796875e-05, -0.0001964569091796875, 0.0, -8.7738037109375e-05, 0.0, -0.00010025501251220703, -3.814697265625e-06, -0.0010833740234375, -3.4332275390625e-05, -9.5367431640625e-06, -0.0049228668212890625, -0.0014476776123046875, -0.00041625439189374447, -2.872943878173828e-05, -8.7738037109375e-05, 0.0, -0.003137350082397461, -3.814697265625e-06], "score": -0.19761580805766243}]}
{"index": 4, "beams": [{"inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Arcane Intellect", "_type": "Template17", "hole2": "MAGE"}, {"args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}, {"iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "_type": "Call"}, "target": {"id": "c", "_type": "Name"}, "_type": "For", "body": [{"value": {"func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "draw"}, "_type": "Call"}, "_type": "Expr"}]}], "name": "use"}], "name": "ArcaneIntellect"}]}, "choice_history": [80, 159, 295, 88, 138, "Arcane", "Intellect", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "c", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "2", "<EOS>", 295, 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score_history": [-2.6702880859375e-05, -9.34600830078125e-05, -0.0002079010009765625, -0.000110626220703125, -1.9073486328125e-06, -1.1444026313256472e-05, -8.702266313775908e-06, -2.2649765014648438e-06, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -4.887580871582031e-05, -2.491474151611328e-05, -0.00023150436754804105, -0.0002422332763671875, -0.07098007202148438, -0.0002193450927734375, -4.255681051290594e-05, -0.0001161092659458518, -6.43729799776338e-06, 0.0, -5.006777428206988e-06, 0.0, -0.0004253387451171875, -3.933904736186378e-06, -0.0013942718505859375, -3.814697265625e-06, -8.594989776611328e-05, -3.814697265625e-06, -3.814697265625e-06, -4.76837158203125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.919269561767578e-05, 0.0, -3.24249267578125e-05, -6.115436553955078e-05, -4.29153169534402e-06, -0.0019168853759765625, -3.814697265625e-05, -7.62939453125e-06, -5.7220458984375e-06, -7.2479248046875e-05, -3.814697265625e-06, -1.9073486328125e-06, -8.96453857421875e-05, -3.814697265625e-06, -2.3841854272177443e-05, 0.0, -9.34600830078125e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -7.05718994140625e-05, -1.71661376953125e-05, -3.0517578125e-05, -3.814697265625e-06, -0.001155853271484375, -0.0001163482666015625, -6.866455078125e-05, -0.0001659393310546875, -0.0318148136138916, -2.47955322265625e-05, -0.0029458999633789062, -0.0001010894775390625, -0.0001201629638671875, -2.86102294921875e-05, -0.029504776000976562, -4.00543212890625e-05, -2.86102294921875e-05, -7.2479248046875e-05, -3.814697265625e-06, -0.006589426193386316, -5.7220458984375e-06, -0.0112457275390625, -1.9073486328125e-06, -0.002457940485328436, -2.288818359375e-05, -0.03741264343261719, -0.000881195068359375, -1.9073486328125e-06, -2.288818359375e-05, -0.00026702880859375, -0.001422882080078125, 0.0, -0.001041412353515625, 0.0, -4.9591064453125e-05, 0.0, -0.0016716718673706055, 0.0], "score": -0.206191038912948}]}
{"index": 5, "beams": [{"inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Arcane Missiles", "_type": "Template17", "hole2": "MAGE"}, {"args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}, {"iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"hole0": 3, "_type": "Template71"}], "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"value": {"func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}]}, {"value": {"func": {"value": {"id": "targets", "_type": "Name"}, "_type": "Attribute", "attr": "append"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"id": "targets", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "target", "_type": "Name"}]}, {"value": {"func": {"value": {"id": "target", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "args": [{"n": 1, "_type": "Num"}, {"id": "self", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}]}], "name": "use"}], "name": "ArcaneMissiles"}]}, "choice_history": [80, 159, 295, 88, 138, "Arcane", "Missiles", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 63, 253, "3", "<EOS>", 298, 85, 128, 282, 45, 160, "targets", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "targets", "<EOS>", "append", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 85, 128, 282, 45, 160, "target", "<EOS>", 14, 136, 11, 129, 19, 160, "game", "<EOS>", "random_choice", "<EOS>", 282, 45, 160, "targets", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "target", "<EOS>", "damage", "<EOS>", 283, 47, 165, "1", "<EOS>", 45, 160, "self", "<EOS>"], "score_history": [-1.71661376953125e-05, -2.86102294921875e-05, -7.62939453125e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.5497195136049413e-06, -1.3351394954952411e-05, -7.748586540401448e-06, -5.340576171875e-05, 0.0, -7.62939453125e-06, -6.318092346191406e-05, -0.00014495849609375, -1.52587890625e-05, -7.05718994140625e-05, -0.07661056518554688, -0.0012493133544921875, -5.376194530981593e-05, -5.0425398512743413e-05, -2.5391420422238298e-05, 0.0, -2.503380528651178e-06, 0.0, -0.0006561279296875, -2.2649765014648438e-06, -0.002323150634765625, -1.33514404296875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -3.0517578125e-05, -2.1696090698242188e-05, -2.7418097943154862e-06, -0.005103111267089844, -2.6702880859375e-05, -9.5367431640625e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -3.814697265625e-06, -6.866455078125e-05, -2.86102294921875e-05, -1.5854784578550607e-05, -5.7220458984375e-06, -7.62939453125e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -6.866455078125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -2.682209014892578e-05, -0.0010900497436523438, -0.0001697540283203125, -0.0009441375732421875, -9.5367431640625e-06, -0.01351702120155096, -0.0002193450927734375, -0.0008792877197265625, -7.82012939453125e-05, -1.33514404296875e-05, 0.0, -0.004544973373413086, -0.00081634521484375, -0.00048065185546875, -0.0002918243408203125, -1.1444091796875e-05, -0.005152993835508823, -0.00042724609375, -0.012309074401855469, -0.0020265579223632812, -0.0005216065910644829, -0.0001596212387084961, -0.006320953369140625, -0.000194549560546875, -7.62939453125e-06, -3.814697265625e-06, -2.47955322265625e-05, -1.1444091796875e-05, -0.001869797706604004, 0.0, -0.013875961303710938, -0.00048828125, -3.24249267578125e-05, 0.0, -0.0018291473388671875, 0.0, -0.0022089481353759766, -0.0001735687255859375, -0.000347137451171875, -1.9073486328125e-06, -4.38690185546875e-05, -0.0002269744873046875, -1.9073486328125e-06, -0.0002613067626953125, -1.9073486328125e-06, -0.0002307891845703125, 0.0, -2.5391545932507142e-05, -4.0531158447265625e-06, -0.00010442732309456915, 0.0, -0.00617035711184144, -3.0517578125e-05, -6.103515625e-05, -9.918212890625e-05, -1.52587890625e-05, -7.2479248046875e-05, -6.29425048828125e-05, 0.0, -0.0001010894775390625, -1.9073486328125e-06, -0.0040700435638427734, -1.9073486328125e-06, -0.0208892822265625, -1.9073486328125e-06, -9.5367431640625e-06, -0.000244140625, 0.0, -0.000244140625, 0.0, -0.0006122589111328125, 0.0, -8.082373824436218e-05, -1.1920928244535389e-07, -0.0005601640441454947, 0.0, -0.0015458156121894717, -5.364403477869928e-06, -0.0004520416259765625, -0.0001964569091796875, -3.814697265625e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0002838372893165797, -2.3841855067985307e-07, -0.0005588531494140625, -7.43865966796875e-05, -0.0001125335693359375, 0.0, -0.000240325927734375, 0.0, -0.00013673304056283087, -3.933906555175781e-06, -0.0032459497451782227, -2.0265579223632812e-06, -5.7220458984375e-06, -0.0016880035400390625, -3.814697265625e-06, -0.004029273986816406, 0.0, -0.00022125244140625, -0.0001010894775390625, -0.000576019287109375, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -0.0001068115234375, -3.814697265625e-06, -0.0028676448855549097, 0.0, -0.008244752883911133, -3.814697265625e-06, -0.0001277923583984375, -0.0020160675048828125, -4.9591064453125e-05, -0.015065290033817291, -3.814697265625e-06, -0.0003376007080078125, -6.67572021484375e-05, -0.014809489250183105, -1.537799835205078e-05], "score": -0.24983075606663618}]}
{"index": 6, "beams": [{"inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}, "args": [{"s": "Arcane Shot", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "arg": "target_func", "_type": "keyword"}]}, "_type": "Expr"}], "name": "__init__"}, {"hole1": "target", "hole0": {"id": "self", "_type": "Name"}, "_type": "Template0", "hole2": [{"n": 2, "_type": "Num"}]}], "name": "ArcaneShot"}]}, "choice_history": [80, 159, 295, 88, 138, "Arcane", "Shot", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Arcane", " ", "Shot", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "2", "<EOS>"], "score_history": [-2.09808349609375e-05, -3.814697265625e-06, -1.1444091796875e-05, -3.0517578125e-05, -3.814697265625e-06, -5.602820692729438e-06, -1.811971014831215e-05, -2.5987286790041253e-05, -7.2479248046875e-05, 0.0, -3.814697265625e-06, -5.0187110900878906e-05, -0.00010132789611816406, -4.601478576660156e-05, -5.340576171875e-05, -0.0030345916748046875, 0.0, -3.707408905029297e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.537799835205078e-05, -1.9073486328125e-06, -7.82012939453125e-05, -9.5367431640625e-06, -1.1444091796875e-05, -0.027528762817382812, -0.0004405975341796875, -2.47955322265625e-05, -1.9073486328125e-06, -2.47955322265625e-05, -1.33514404296875e-05, -1.5497195136049413e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -0.000438690185546875, -1.33514404296875e-05, -1.9073486328125e-06, -1.680836794548668e-05, -4.971005182596855e-05, -0.0001074075698852539, -5.7220458984375e-06, -4.9591064453125e-05, -1.71661376953125e-05, -8.701463229954243e-06, -1.33514404296875e-05, -2.288818359375e-05, 0.0, -7.62939453125e-05, 0.0, -9.34600830078125e-05, -4.768370445162873e-07, -0.0005915164947509766, 0.0, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -4.9591064453125e-05, -7.43865966796875e-05, 0.0, -0.000904083251953125, -1.71661376953125e-05, -1.33514404296875e-05, -0.00038909912109375, -0.0001735687255859375, -0.0005340576171875, 0.0, -5.91278076171875e-05, 0.0, -0.0001678466796875, -1.9073486328125e-06, -3.814697265625e-05, -1.52587890625e-05, -0.0004895925521850586, -7.62939453125e-06, -9.34600830078125e-05, 0.0, -0.0007401704788208008, -6.651873991359025e-05, -0.001079559326171875, -0.0001373291015625, -0.000690460205078125, 0.0, -0.00019156932830810547, -5.7220458984375e-06, -0.0002079010009765625, -1.9073486328125e-06, -4.76837158203125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.0351883247494698e-05, -1.9073486328125e-06], "score": -0.039494612669841445}]}
{"index": 7, "beams": [{"inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Arcanite Reaper", "_type": "Template15", "hole2": "WARRIOR"}, {"args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"id": "Weapon", "_type": "Name"}, "args": [{"n": 5, "_type": "Num"}, {"n": 2, "_type": "Num"}], "_type": "Call"}, "_type": "Return"}], "name": "create_weapon"}], "name": "ArcaniteReaper"}]}, "choice_history": [80, 159, 295, 88, 138, "Arcanite", "Reaper", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 101, 184, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 136, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "5", "<EOS>", 47, 165, "2", "<EOS>"], "score_history": [-4.9591064453125e-05, -3.62396240234375e-05, -1.9073486328125e-05, -2.09808349609375e-05, -4.1961669921875e-05, -3.2066785934148356e-05, -0.00017987063620239496, -3.814689989667386e-06, -1.71661376953125e-05, 0.0, 0.0, -0.0008056163787841797, -8.58306884765625e-05, -0.00032806396484375, -4.57763671875e-05, -0.015226364135742188, -3.24249267578125e-05, -3.2186455882765586e-06, -2.396106719970703e-05, -5.841255187988281e-06, -3.4332275390625e-05, -0.00021913700038567185, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -0.0001850128173828125, -1.9073486328125e-06, -0.0004482269287109375, -1.33514404296875e-05, -9.5367431640625e-06, -0.0002002716064453125, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.528594970703125e-05, 0.0, -0.00107574462890625, -0.00823974609375, -8.20159912109375e-05, -3.0517578125e-05, -0.05599403381347656, -0.00030517578125, 0.0, -0.0015114545822143555, -4.76837158203125e-05, -2.09808349609375e-05, -7.05718994140625e-05, -1.9073486328125e-06, -0.00030779800727032125, -2.5868412194540724e-05, -3.0517578125e-05, -3.814697265625e-06, -6.318091891444055e-06, -1.7881377516459906e-06], "score": -0.08601535690104356}]}
{"index": 8, "beams": [{"inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}, "args": [{"s": "Assassinate", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}]}, "_type": "Expr"}], "name": "__init__"}, {"hole1": "die", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "Assassinate"}]}, "choice_history": [80, 159, 295, 88, 138, "Assassinate", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Assassinate", "<EOS>", 47, 165, "5", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 282, 45, 160, "self", "<EOS>"], "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -3.0517578125e-05, -7.62939453125e-06, -5.638440416078083e-05, -5.483625955093885e-06, -5.7220458984375e-05, 0.0, -1.9073486328125e-06, -7.87973403930664e-05, -3.814697265625e-06, -1.537799835205078e-05, -0.0001583099365234375, -0.0062713623046875, 0.0, -0.00011467933654785156, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00012969970703125, -7.62939453125e-06, -1.71661376953125e-05, -7.43865966796875e-05, -3.4332275390625e-05, -0.007404327392578125, -0.000194549560546875, -1.1444091796875e-05, 0.0, -3.62396240234375e-05, -4.00543212890625e-05, -2.1457672119140625e-06, -7.62939453125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001087188720703125, -9.5367431640625e-06, -1.9073486328125e-06, -4.0531076592742465e-06, -5.340576171875e-05, -1.52587890625e-05, -3.0517578125e-05, -0.0003334919747430831, -2.491474151611328e-05, -9.5367431640625e-06, 0.0, -3.24249267578125e-05, 0.0, -3.635883331298828e-05, 0.0, -0.0031528472900390625, 0.0, -2.288818359375e-05, -7.62939453125e-06, -3.24249267578125e-05, -2.86102294921875e-05, -0.000209808349609375, 0.0, -0.0007419586181640625, -9.5367431640625e-06, -1.52587890625e-05, -0.0001354217529296875, -2.86102294921875e-05, -0.0034847259521484375, 0.0, -0.000133514404296875, -1.9073486328125e-06, -0.0001811981201171875, -5.7220458984375e-06, -3.62396240234375e-05, -7.43865966796875e-05, -0.0011028051376342773, 0.0, -2.288818359375e-05, 0.0, -0.04150211811065674, -1.52587890625e-05, -0.0004138946533203125, -0.006825447082519531, -9.5367431640625e-06, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -0.00011444091796875, -1.33514404296875e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.0067141056060791016, -1.71661376953125e-05, -0.00018310546875, -0.0016326904296875, 0.0, -0.00044536590576171875, -4.38690185546875e-05], "score": -0.08290964603793327}]}
{"index": 9, "beams": [{"inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole7": "filter_func", "hole0": "Backstab", "hole8": {"args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda", "body": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"left": {"value": {"id": "target", "_type": "Name"}, "_type": "Attribute", "attr": "health"}, "comparators": [{"func": {"value": {"id": "target", "_type": "Name"}, "_type": "Attribute", "attr": "calculate_max_health"}, "_type": "Call"}], "_type": "Compare", "ops": [{"_type": "Eq"}]}, {"func": {"value": {"id": "target", "_type": "Name"}, "_type": "Attribute", "attr": "spell_targetable"}, "_type": "Call"}]}}, "hole2": "ROGUE", "hole5": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "hole3": "FREE", "hole1": 0, "hole6": "find_minion_spell_target", "_type": "Template9", "hole4": "target_func"}, {"hole1": "target", "hole0": {"id": "self", "_type": "Name"}, "_type": "Template0", "hole2": [{"n": 2, "_type": "Num"}]}], "name": "Backstab"}]}, "choice_history": [80, 159, 295, 88, 138, "Backstab", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 124, 264, "Backstab", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 16, 153, 269, 275, 268, "target", "<EOS>", 13, 132, 0, 283, 41, 139, 11, 129, 19, 160, "target", "<EOS>", "health", "<EOS>", 279, 2, 282, 40, 134, 11, 129, 19, 160, "target", "<EOS>", "calculate_max_health", "<EOS>", 40, 134, 11, 129, 19, 160, "target", "<EOS>", "spell_targetable", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "2", "<EOS>"], "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.77468371274881e-05, -8.2254373410251e-06, -2.288818359375e-05, 0.0, -3.814697265625e-06, -5.9127800341229886e-05, -5.006789251638111e-06, -4.88758041683468e-06, -0.00079345703125, -0.04961204528808594, -0.000133514404296875, -4.8040190449682996e-05, -4.363059997558594e-05, -8.809177234070376e-05, 0.0, -0.024853825569152832, -1.9073486328125e-06, -0.05641460418701172, -1.9073486328125e-06, -0.015558600425720215, 0.0, -0.0002536773681640625, 0.0, -1.52587890625e-05, 0.0, -0.00023472309112548828, -1.33514404296875e-05, -8.7738037109375e-05, 0.0, -0.00840461254119873, -1.9073486328125e-06, -0.008177757263183594, 0.0, -0.0062541961669921875, -0.0006103515625, -5.340576171875e-05, -0.0008068084716796875, -3.62396240234375e-05, -0.00044000145862810314, -4.398804594529793e-05, -0.004416465759277344, -2.288818359375e-05, -0.0048694610595703125, -0.0002040863037109375, -0.000850677490234375, -0.0001811981201171875, -0.002674102783203125, -0.0001068115234375, -0.001094818115234375, -8.7738037109375e-05, -0.001427286071702838, -2.09808349609375e-05, -0.006834983825683594, -0.00011456012725830078, -0.0023899078369140625, -0.02815723419189453, -2.09808349609375e-05, -0.0036058425903320312, -0.0001220703125, -9.918212890625e-05, 0.0, -3.62396240234375e-05, 0.0, -0.002749800682067871, -1.9073486328125e-06, -0.02848529815673828, -9.1552734375e-05, -0.000789642333984375, -0.000240325927734375, -3.0517578125e-05, -4.00543212890625e-05, -0.0001163482666015625, -9.5367431640625e-06, -0.0010797976283356547, -1.9073486328125e-06, -0.01444244384765625, 0.0, -0.002227783203125, -0.000553131103515625, -4.38690185546875e-05, 0.0, -0.00015270271978806704, -3.62396240234375e-05, -8.58306884765625e-05, -5.0187110900878906e-05, -0.0002918243408203125, -0.001422882080078125, -3.24249267578125e-05, -8.344504749402404e-06, -2.1576881408691406e-05], "score": -0.2835440421245039}]}
{"index": 10, "beams": [{"inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Blessing of Kings", "_type": "Template3", "hole2": "PALADIN"}, {"args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 4, "_type": "Template63"}, "_type": "Expr"}, {"value": {"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "increase_health"}, "args": [{"n": 4, "_type": "Num"}], "_type": "Call"}, "_type": "Expr"}], "name": "use"}], "name": "BlessingOfKings"}]}, "choice_history": [80, 159, 295, 88, 138, "Blessing", "Of", "Kings", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 111, 204, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 29, 246, "4", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 282, 47, 165, "4", "<EOS>"], "score_history": [-0.0001506805419921875, -4.1961669921875e-05, -8.7738037109375e-05, -0.00026702880859375, -0.000118255615234375, -0.00020787939138244838, -0.0002031318290391937, -2.4080030925688334e-05, -6.43729799776338e-06, -8.0108642578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0008420944213867188, -2.6702880859375e-05, -4.768371127283899e-06, -4.76837158203125e-05, -0.062255859375, -0.0006256103515625, -4.994744449504651e-05, -0.0005036149523220956, -0.01209274958819151, -1.3589859008789062e-05, -3.7550926208496094e-05, -5.7220458984375e-05, -5.173548197490163e-05, 0.0, -0.0004863739013671875, 0.0, -0.0001201629638671875, -2.09808349609375e-05, -0.00031280517578125, 0.0, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.919269561767578e-05, -1.4781842764932662e-05, -0.24028968811035156, -3.814697265625e-06, -1.9073486328125e-06, -0.0001659393310546875, -3.62396240234375e-05, -7.62939453125e-06, -8.0108642578125e-05, -8.96453857421875e-05, -3.814697265625e-06, -1.4424319488171022e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -6.67572021484375e-05, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -0.00025177001953125, -4.410743713378906e-06, -8.7738037109375e-05, -0.00030517578125, -0.0003185272216796875, -0.03163337707519531, -0.0748317763209343, -0.0018482208251953125, -0.011183738708496094, -1.33514404296875e-05, -0.040017127990722656, -0.0002689361572265625, -5.7220458984375e-06, -7.62939453125e-06, -0.001583099365234375, 0.0, -0.001323699951171875, -3.814697265625e-06, -0.0002651214599609375, -2.288818359375e-05, -0.0004444122314453125, -7.62939453125e-06, -0.006851077079772949, -3.814697265625e-06, -0.000408172607421875, -0.00012969970703125, -5.7220458984375e-05, -0.013818270526826382, -1.52587890625e-05], "score": -0.505351095642709}]}
{"index": 11, "beams": [{"inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"hole1": "PALADIN", "hole0": "Blessing of Might", "_type": "Template25", "hole2": "FREE"}, "_type": "Expr"}], "name": "__init__"}, {"hole1": "change_attack", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"n": 3, "_type": "Num"}]}], "name": "BlessingOfMight"}]}, "choice_history": [80, 159, 295, 88, 138, "Blessing", "Of", "Might", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 23, 201, "Blessing", " ", "of", " ", "Might", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 282, 47, 165, "3", "<EOS>"], "score_history": [-0.00048160552978515625, -7.43865966796875e-05, -9.1552734375e-05, -0.0002613067626953125, -0.000133514404296875, -9.583967766957358e-05, -0.0002609465445857495, -3.719267624546774e-05, -0.00010561384988250211, -2.86102294921875e-05, -1.1444091796875e-05, -3.814697265625e-06, -0.0024404525756835938, -2.491474151611328e-05, -4.4226646423339844e-05, -0.000164031982421875, -0.0009632110595703125, -3.814697265625e-06, -5.0663868023548275e-05, 0.0, 0.0, -0.0001068115234375, 0.0, -0.0002155303955078125, -3.814697265625e-06, -0.0002346038818359375, -5.7220458984375e-06, -0.0006771087646484375, -0.029892921447753906, -0.0158538818359375, -0.00034505134681239724, -0.0009722461691126227, -0.00018453365191817284, -2.777576446533203e-05, -8.273069397546351e-05, -3.814697265625e-06, -0.0031102895736694336, -7.62939453125e-06, -0.042583465576171875, 0.0, -0.00095367431640625, -0.00139617919921875, -0.000110626220703125, -6.4849853515625e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.000125885009765625, -4.1961669921875e-05, -0.0001087188720703125, -1.9073486328125e-06, -0.0323413610458374, -2.288818359375e-05, -7.62939453125e-06, -0.0028753280639648438, -0.000423431396484375, -0.005219392944127321, -1.33514404296875e-05], "score": -0.1433284994091082}]}
{"index": 12, "beams": [{"inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"hole0": "Bloodfen Raptor", "hole2": "FREE", "hole3": "minion_type", "hole1": 2, "_type": "Template34", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}}], "name": "__init__"}, {"hole1": 2, "hole0": 3, "_type": "Template27"}], "name": "BloodfenRaptor"}]}, "choice_history": [80, 159, 295, 88, 138, "Bloodfen", "Raptor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 110, 202, "3", "<EOS>", "2", "<EOS>"], "score_history": [-1.1444091796875e-05, -3.62396240234375e-05, -7.62939453125e-06, -6.4849853515625e-05, -3.814697265625e-06, -0.0024801704566925764, -7.843663479434326e-05, -4.7444260417250916e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -1.1920928244535389e-07, -1.1444091796875e-05, -6.198883056640625e-06, -7.62939453125e-06, -0.0034427642822265625, -1.71661376953125e-05, -3.504753112792969e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.00019073486328125, -1.9073486328125e-06, -9.5367431640625e-05, -0.00424957275390625, -0.0008487701416015625, -1.8358061424805783e-05, -4.053115480928682e-05, -1.025196434056852e-05, -2.09808349609375e-05, -0.00012217929179314524, 0.0, -0.0021114349365234375, 0.0, -3.6716410249937326e-05, -3.0517578125e-05, -1.1444091796875e-05, -0.00017547607421875, -7.62939453125e-06, 0.0, -0.0005550384521484375, -1.1444091796875e-05, -0.000125885009765625, -8.96453857421875e-05, -0.00218963623046875, -3.814697265625e-06, -0.004038156010210514, 0.0, -3.695486157084815e-06, 0.0], "score": -0.02128536260533309}]}
{"index": 13, "beams": [{"inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Bloodlust", "_type": "Template15", "hole2": "SHAMAN"}, {"args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}, {"iter": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"value": {"func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "change_temp_attack"}, "args": [{"n": 3, "_type": "Num"}], "_type": "Call"}, "_type": "Expr"}]}], "name": "use"}], "name": "Bloodlust"}]}, "choice_history": [80, 159, 295, 88, 138, "Bloodlust", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 101, 184, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 11, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "change_temp_attack", "<EOS>", 282, 47, 165, "3", "<EOS>"], "score_history": [-5.340576171875e-05, -1.71661376953125e-05, -7.05718994140625e-05, -9.34600830078125e-05, -5.91278076171875e-05, -0.00014590153296012431, -0.0001587810111232102, -7.2479248046875e-05, 0.0, -1.52587890625e-05, -0.0002251861587865278, -8.32080768304877e-05, -1.251697449333733e-05, -6.866455078125e-05, -0.0027980804443359375, -6.103515625e-05, -2.3841830625315197e-06, -0.0012475252151489258, -0.0001113352773245424, -9.5367431640625e-06, -0.000179290771484375, -3.814697265625e-06, -0.03987598419189453, -0.000209808349609375, -0.0006694793701171875, -2.288818359375e-05, -1.9073486328125e-06, -4.00543212890625e-05, -5.7220458984375e-05, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -7.283687591552734e-05, -2.622604142743512e-06, -0.029005050659179688, -5.14984130859375e-05, -0.0005893707275390625, -4.38690185546875e-05, -2.09808349609375e-05, -1.71661376953125e-05, -5.7220458984375e-06, -5.91278076171875e-05, -0.00025177001953125, -1.0371197276981547e-05, -1.9073486328125e-06, -0.0003871917724609375, -7.62939453125e-06, -1.9073486328125e-05, -2.09808349609375e-05, -9.5367431640625e-06, -1.3470649719238281e-05, 0.0, -0.0008449554443359375, -1.1444091796875e-05, -4.780292510986328e-05, -7.843971252441406e-05, -0.00038909912109375, -0.00019073486328125, -0.000179290771484375, -1.9073486328125e-06, -0.0020792484283447266, -5.7220458984375e-06, -0.00018310546875, 0.0, -0.00678253173828125, -3.814697265625e-06, -0.0004558563232421875, 0.0, -0.004520416259765625, -1.9073486328125e-06, -9.5367431640625e-05, -9.5367431640625e-06, -3.24249267578125e-05, -0.00047588348388671875, -0.0001354217529296875, -0.0016155242919921875, 0.0, -0.0008106231689453125, -8.96453857421875e-05, -0.0022426843643188477, -4.38690185546875e-05, -0.024216651916503906, -1.9073486328125e-06, -3.814697265625e-05, -7.05718994140625e-05, -8.392333984375e-05, -0.011506066657602787, -1.52587890625e-05], "score": -0.1342503656703684}]}
{"index": 14, "beams": [{"inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole0": "Bluegill Warrior", "hole2": "ALL", "hole3": "minion_type", "hole1": 2, "_type": "Template11", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}}, {"hole3": {"value": true, "_type": "NameConstant"}, "hole1": 1, "hole0": 2, "_type": "Template23", "hole2": "charge"}], "name": "BluegillWarrior"}]}, "choice_history": [80, 159, 295, 88, 138, "Bluegill", "Warrior", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 109, 200, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score_history": [0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.000102996826171875, -3.814697265625e-06, -1.8715796613832936e-05, -8.940672159951646e-06, -2.6225747205899097e-05, -3.814697265625e-06, -0.0001201629638671875, 0.0, -1.1920928244535389e-07, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-05, -0.09429740905761719, -0.0001163482666015625, -2.5033637939486653e-05, -1.4662729881820269e-05, -1.9073486328125e-05, -2.09808349609375e-05, -0.0005120038986206055, 0.0, -4.208087921142578e-05, -1.9073486328125e-06, -0.00012814998626708984, -2.09808349609375e-05, -0.000286102294921875, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -0.005152702331542969, -0.0016876342706382275, -0.0011081695556640625, -0.0001316070556640625, -7.510135219490621e-06, -1.9073486328125e-06, -0.00017392616427969187, 0.0, -0.0047185420989990234, -0.00024235248565673828, -0.00104522705078125, -2.47955322265625e-05, -0.0001735687255859375, -1.9073486328125e-06], "score": -0.11035572223590151}]}
{"index": 15, "beams": [{"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole0": "Boar", "hole2": "minion_type", "hole3": {"id": "MINION_TYPE", "_type": "Name"}, "hole1": "COMMON", "_type": "Template7", "hole4": "BEAST"}, {"hole1": 1, "hole0": 1, "_type": "Template27"}], "name": "Boar"}]}, "choice_history": [80, 159, 295, 88, 138, "Boar", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 121, 251, "Boar", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 110, 202, "1", "<EOS>", "1", "<EOS>"], "score_history": [-9.5367431640625e-06, -4.76837158203125e-05, -2.288818359375e-05, -8.0108642578125e-05, -0.0003414154052734375, -4.768360213347478e-06, -3.802750143222511e-05, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.00013744831085205078, -4.76837158203125e-05, -0.000102996826171875, -0.0002155303955078125, -0.05750274658203125, -0.0008525848388671875, -6.19869097135961e-05, -0.001123666763305664, -0.0037881135940551758, -5.340576171875e-05, -9.5367431640625e-06, -6.103515625e-05, -7.62939453125e-06, 0.0, -0.000179290771484375, -1.71661376953125e-05, -0.0005588531494140625, -0.0001850128173828125, -0.0061969757080078125, -2.6702880859375e-05, -3.346055746078491e-05, -1.9073486328125e-06, -9.22542967600748e-05, 0.0], "score": -0.07186145236801167}]}
{"index": 16, "beams": [{"inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}, "args": [{"s": "Charge", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}]}, "_type": "Expr"}], "name": "__init__"}, {"args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template63"}, "_type": "Expr"}, {"hole0": "<UNK>", "_type": "Template50"}], "name": "use"}], "name": "Charge"}]}, "choice_history": [80, 159, 295, 88, 138, "Charge", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Charge", "<EOS>", 47, 165, "3", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 29, 246, "2", "<EOS>", 117, 226, "<UNK>", "<EOS>"], "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -1.71661376953125e-05, -2.288818359375e-05, -2.6702880859375e-05, -7.271740287251305e-06, -1.764295666362159e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002981424331665039, -8.70227722771233e-06, -4.0531158447265625e-06, -4.38690185546875e-05, -0.00128936767578125, -1.9073486328125e-06, -1.5735626220703125e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.0265573766664602e-05, 0.0, -0.0002689361572265625, -9.5367431640625e-06, -1.33514404296875e-05, -0.0026836395263671875, -8.20159912109375e-05, -1.33514404296875e-05, -3.4332275390625e-05, -0.000202178955078125, -5.7220458984375e-05, -7.033334895822918e-06, -3.933906555175781e-06, -3.814697265625e-05, -1.1920928244535389e-07, -0.0003528594970703125, -5.14984130859375e-05, -1.9073486328125e-06, -1.1920913038920844e-06, -9.5367431640625e-06, -4.1961669921875e-05, 0.0, -3.290133463451639e-05, -5.7220458984375e-06, -0.0076045989990234375, 0.0, -0.0001010894775390625, 0.0, -0.0007381439208984375, 0.0, -0.0073375701904296875, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -0.0002079010009765625, -0.0001773834228515625, -4.6133995056152344e-05, 0.0, -0.0013027191162109375, 0.0, -1.1444091796875e-05, -0.0001678466796875, -5.7220458984375e-06, -0.0008013248443603516, 0.0, -0.000217437744140625, -3.814697265625e-06, -9.34600830078125e-05, -1.71661376953125e-05, -2.6702880859375e-05, -4.76837158203125e-05, -0.017368555068969727, -3.814697265625e-06, -2.288818359375e-05, -2.3841855067985307e-07, -0.011169672012329102, -6.914134246471804e-06, -0.019922256469726562, -3.814697265625e-06, -2.288818359375e-05, -7.62939453125e-06, -1.71661376953125e-05, -2.09808349609375e-05, -9.5367431640625e-06, -7.867813110351562e-06, 0.0, -1.9073486328125e-06, -3.576277322281385e-06, 0.0, -3.62396240234375e-05, -0.0019387006759643555, -9.059865078597795e-06, -0.10877799987792969, -9.5367431640625e-06, -2.09808349609375e-05, -0.000133514404296875, -4.76837158203125e-05, -9.5367431640625e-06, -1.33514404296875e-05, -7.82012939453125e-05, -9.34600830078125e-05, -5.829334259033203e-05, -1.9073486328125e-06, -4.9591064453125e-05, -1.1444091796875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0009442567825317383, -8.821474693831988e-06, -0.0003261566162109375, -1.9073486328125e-06, -0.0020475387573242188, -0.0025691986083984375, -0.015387005172669888, -1.33514404296875e-05, -0.013118743896484375, -0.00547027587890625, -1.9073486328125e-05, -1.1444091796875e-05], "score": -0.224512284998319}]}
{"index": 17, "beams": [{"inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Chillwind Yeti", "_type": "Template15", "hole2": "ALL"}, {"hole1": 5, "hole0": 4, "_type": "Template27"}], "name": "ChillwindYeti"}]}, "choice_history": [80, 159, 295, 88, 138, "Chillwind", "Yeti", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 110, 202, "4", "<EOS>", "5", "<EOS>"], "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.00011444091796875, -1.9073486328125e-05, -0.0074769179336726665, -7.021180499577895e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -2.6702880859375e-05, 0.0, -2.0265579223632812e-06, -5.7220458984375e-06, -5.7220458984375e-06, -3.4332275390625e-05, -0.1126251220703125, -0.000110626220703125, -5.960446742392378e-06, -4.076957338838838e-05, -6.556510470545618e-06, -4.38690185546875e-05, -0.0006495663546957076, 0.0, -0.00020599365234375, -1.9073486328125e-05, -0.011404991149902344, -9.5367431640625e-06, -0.0020928895100951195, 0.0, -0.0009938477305695415, 0.0], "score": -0.13599661576151334}]}
{"index": 18, "beams": [{"inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Claw", "_type": "Template17", "hole2": "DRUID"}, {"args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}, {"hole0": 2, "_type": "Template62"}, {"value": {"func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "increase_armor"}, "args": [{"n": 2, "_type": "Num"}], "_type": "Call"}, "_type": "Expr"}], "name": "use"}], "name": "Claw"}]}, "choice_history": [80, 159, 295, 88, 138, "Claw", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 119, 245, "2", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 282, 47, 165, "2", "<EOS>"], "score_history": [-3.814697265625e-06, -0.0001583099365234375, -1.9073486328125e-05, -5.53131103515625e-05, -9.5367431640625e-06, -0.0002774807217065245, -0.00010930955613730475, -0.0001621246337890625, 0.0, -3.62396240234375e-05, -0.00010943399684038013, -1.7642974853515625e-05, -7.176399230957031e-05, -3.0517578125e-05, -0.15134620666503906, -0.003841400146484375, -0.00033718624035827816, -0.00022113323211669922, -0.0010664985748007894, -5.14984130859375e-05, -0.0002518892288208008, 0.0, -0.00142669677734375, -7.62939453125e-06, -7.2479248046875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.53131103515625e-05, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-05, -7.82012939453125e-05, -9.655952453613281e-06, -0.01878833770751953, -6.103515625e-05, -4.1961669921875e-05, -3.814697265625e-05, -5.14984130859375e-05, -2.47955322265625e-05, -3.814697265625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -0.00014698505401611328, 0.0, -0.0001201629638671875, -1.9073486328125e-06, -1.1444091796875e-05, -3.0517578125e-05, -0.0001049041748046875, -3.814697265625e-05, -1.9073486328125e-06, -0.0001506805419921875, -1.1444091796875e-05, -8.20159912109375e-05, -2.300739288330078e-05, -0.030687332153320312, -0.0023431777954101562, -0.000493466854095459, -7.82012939453125e-05, -0.008448600769042969, -1.9073486328125e-06, -0.0001983642578125, -0.0001049041748046875, -3.24249267578125e-05, -6.4849853515625e-05, -0.0003986358642578125, 0.0, -0.0001049041748046875, -1.9073486328125e-06, -0.000415802001953125, -7.62939453125e-06, -0.037346482276916504, -2.50339189733495e-06, -0.00676572322845459, -0.000240325927734375, -0.0021228790283203125, -0.000415802001953125, -3.814697265625e-06, -0.03927336633205414, -5.7220458984375e-06], "score": -0.30924558252854695}]}
{"index": 19, "beams": [{"inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Cleave", "_type": "Template15", "hole2": "WARRIOR"}, {"args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "_type": "Call"}, "target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"value": {"func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "random_choice"}, "args": [{"id": "minions", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"value": {"func": {"value": {"id": "minions", "_type": "Name"}, "_type": "Attribute", "attr": "remove"}, "args": [{"id": "minion", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "args": [{"hole0": 2, "_type": "Template71"}, {"id": "self", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}]}], "name": "use"}, {"hole1": [{"_type": "GtE"}], "hole0": {"hole1": "other_player", "hole0": {"id": "game", "_type": "Name"}, "_type": "Template67"}, "_type": "Template4", "hole2": [{"n": 2, "_type": "Num"}]}], "name": "Cleave"}]}, "choice_history": [80, 159, 295, 88, 138, "Cleave", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 297, 101, 184, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "minions", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "2", "<EOS>", 297, 85, 128, 282, 45, 160, "minion", "<EOS>", 14, 136, 11, 129, 19, 160, "game", "<EOS>", "random_choice", "<EOS>", 282, 45, 160, "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "minions", "<EOS>", "remove", "<EOS>", 282, 45, 160, "minion", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 63, 253, "2", "<EOS>", 45, 160, "self", "<EOS>", 113, 217, 30, 249, 19, 160, "game", "<EOS>", "other_player", "<EOS>", 279, 4, 282, 47, 165, "2", "<EOS>"], "score_history": [-1.1444091796875e-05, -1.1444091796875e-05, -1.71661376953125e-05, -1.71661376953125e-05, -5.7220458984375e-06, -3.981510963058099e-05, -1.3589857189799659e-05, -2.09808349609375e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.00412177387624979, -5.59091531613376e-05, -1.1563301086425781e-05, -0.010934829711914062, -0.0075511932373046875, -0.00165557861328125, -5.960446742392378e-06, -3.767012822208926e-05, -9.691077866591513e-05, 0.0, -0.00022125244140625, -1.9073486328125e-06, -0.008111000061035156, -9.5367431640625e-06, -0.0001373291015625, -1.9073486328125e-06, -4.00543212890625e-05, -0.0001468658447265625, -5.7220458984375e-06, -2.0265579223632812e-06, 0.0, -1.9073486328125e-06, -5.662440889864229e-05, 0.0, -1.1444091796875e-05, -2.1457672119140625e-06, -3.2663341698935255e-05, -0.024733543395996094, -0.000247955322265625, -0.00066375732421875, -5.340576171875e-05, -2.09808349609375e-05, -4.76837158203125e-05, 0.0, -4.76837158203125e-05, -8.7738037109375e-05, -0.00017011164163704962, 0.0, -0.0009479522705078125, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -9.72747802734375e-05, -2.2888167222845368e-05, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -9.655952453613281e-06, -8.213520050048828e-05, -0.000179290771484375, -7.62939453125e-05, -0.01190948486328125, -3.814697265625e-06, -7.43865966796875e-05, -0.01339113712310791, -7.748603820800781e-06, -0.009572982788085938, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -0.0004062652587890625, 0.0, -0.0003472566313575953, -4.76837158203125e-05, -0.0010472536087036133, -4.57763671875e-05, -5.14984130859375e-05, -0.0009365081787109375, -1.9073486328125e-06, -0.005985260009765625, -1.52587890625e-05, -0.0022640228271484375, 0.0, -0.00019443035125732422, -2.2649765014648438e-06, -0.00031375885009765625, -1.9073486328125e-06, -0.001874854788184166, -2.09808349609375e-05, -0.0011472702026367188, -0.0001277923583984375, -6.4849853515625e-05, -5.91278076171875e-05, -0.027708468958735466, -0.0004781484603881836, -0.0011339187622070312, -1.52587890625e-05, -5.7220458984375e-05, -1.33514404296875e-05, -0.00028586387634277344, -0.00013172626495361328, -0.0001220703125, -0.0008563995361328125, -0.00018310546875, -0.00038647648761980236, -0.0001125335693359375, -0.000446319580078125, -5.14984130859375e-05, -0.0014635920524597168, -1.7404556274414062e-05, -0.0061492919921875, -5.91278076171875e-05, -7.62939453125e-06, -0.0002918243408203125, -1.9073486328125e-06, -8.96453857421875e-05, -0.004361748695373535, -1.9073486328125e-06, -0.0005550384521484375, -0.0001811981201171875, -1.71661376953125e-05, 0.0, -0.00029754638671875, 0.0, -0.0007176399230957031, -6.556510470545618e-06, -0.001259922981262207, -1.1920928244535389e-07, -0.000110626220703125, -0.000293731689453125, -5.14984130859375e-05, -0.010621070861816406, -5.7220458984375e-06, -0.00479888916015625, -0.0001850128173828125, -0.020845413208007812, -1.9073486328125e-05, -0.000133514404296875, -3.814697265625e-06, -0.0001983642578125, -0.0001983642578125, -0.03651276230812073, -0.0009157495223917067, -0.01110386848449707, 0.0, -0.0023193359375, -0.0001850128173828125, -5.7220458984375e-06, -0.003002643585205078, -3.814697265625e-06, -0.004889488220214844, -1.52587890625e-05, -0.011591911315917969, -0.0002899169921875, -7.62939453125e-06, -3.814697265625e-06, -0.0047245025634765625, -1.52587890625e-05, -0.01820175163447857, -5.483625955093885e-06, -0.0017539262771606445, -0.0001983642578125, -1.9073486328125e-05, -0.00104522705078125, -0.0001773834228515625, -0.0014480173122137785, -6.92605972290039e-05, -1.33514404296875e-05, -9.34600830078125e-05, -0.0005909200408495963, -7.43865966796875e-05, -0.05335807800292969, -0.0025005340576171875, -0.0014104843139648438, -0.0008754730224609375, -0.0008411407470703125, 0.0, -7.629378160345368e-06, -2.1219253540039062e-05, -0.0005571842193603516, 0.0, -0.000370025634765625, -0.010379791259765625, -6.866455078125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -0.0014336705207824707, -1.1920928244535389e-07], "score": -0.3669831883384944}]}
{"index": 20, "beams": [{"inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Consecration", "_type": "Template15", "hole2": "PALADIN"}, {"args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}, {"iter": {"func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"value": {"func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "args": [{"hole0": 2, "_type": "Template71"}, {"id": "self", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}]}, {"value": {"func": {"value": {"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}, "args": [{"hole0": 2, "_type": "Template71"}, {"id": "self", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}], "name": "use"}], "name": "Consecration"}]}, "choice_history": [80, 159, 295, 88, 138, "Consecration", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 101, 184, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 63, 253, "2", "<EOS>", 45, 160, "self", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 283, 63, 253, "2", "<EOS>", 45, 160, "self", "<EOS>"], "score_history": [-0.000156402587890625, -0.0006275177001953125, -0.00060272216796875, -3.814697265625e-05, -4.00543212890625e-05, -4.410734163684538e-06, -6.115331780165434e-05, -0.0002155303955078125, 0.0, -3.0517578125e-05, -4.8995018005371094e-05, -9.34600830078125e-05, -7.62939453125e-06, -7.62939453125e-05, -0.000591278076171875, -9.34600830078125e-05, -1.7881377516459906e-06, -0.00016605854034423828, -0.00014494816423393786, -5.7220458984375e-06, -0.00144195556640625, -5.7220458984375e-06, -0.000217437744140625, -1.71661376953125e-05, -0.0017242431640625, 0.0, -1.9073486328125e-05, -7.82012939453125e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, 0.0, -2.3484230041503906e-05, 0.0, -3.814697265625e-06, -5.602834789897315e-06, -2.2649765014648438e-06, -0.053442955017089844, -6.866455078125e-05, -9.5367431640625e-05, -9.5367431640625e-06, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -2.09808349609375e-05, -0.0001068115234375, -1.52587890625e-05, 0.0, -0.0001239776611328125, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, 0.0, -0.00018310546875, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0036716461181640625, -0.0003414154052734375, -0.0002727508544921875, 0.0, -0.0007269382476806641, 0.0, -0.008585929870605469, -4.1961669921875e-05, -0.0013523101806640625, -0.0001964569091796875, -0.000911712646484375, -5.7220458984375e-06, -0.0013866424560546875, -2.86102294921875e-05, -0.0006961822509765625, 0.0, -6.67572021484375e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.00030517578125, -6.103515625e-05, -0.000667572021484375, -1.9073486328125e-06, -7.82012939453125e-05, -9.655952453613281e-06, -0.0011883974075317383, -3.814697265625e-06, -0.0003859986027237028, -0.0001010894775390625, -0.002384185791015625, -0.001461029052734375, -7.62939453125e-06, -2.09808349609375e-05, -9.5367431640625e-06, -0.0001430511474609375, 0.0, -4.57763671875e-05, 0.0, -7.736682891845703e-05, -1.9073486328125e-06, -0.0014821290969848633, -4.76837158203125e-05, -7.62939453125e-06, -0.0006084442138671875, -0.0001220703125, -8.940599946072325e-05, -3.576272865757346e-05, -0.0001087188720703125, -1.1444091796875e-05, -6.687560380669311e-05, -1.71661376953125e-05, -0.10625743865966797, -1.71661376953125e-05, -0.009739875793457031, -0.0008907318115234375, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004024505615234375, -7.62939453125e-06, -0.00040435791015625, -2.6702880859375e-05, -0.11618995666503906, -3.24249267578125e-05, -8.463858830509707e-05, -1.1563301086425781e-05, -0.0036940574645996094, 0.0, -0.0017444441327825189, -1.549708758830093e-05, -0.012159347534179688, -3.0517578125e-05, -5.7220458984375e-05, -0.0028285980224609375, -0.0001010894775390625, -0.00019560717919375747, -4.0531158447265625e-06, -0.00019073486328125, -4.76837158203125e-05, -7.033336441963911e-05, -5.7220458984375e-06], "score": -0.3438813934242262}]}
{"index": 21, "beams": [{"inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole0": "Core Hound", "hole2": "ALL", "hole3": "minion_type", "hole1": 7, "_type": "Template11", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}}, {"hole1": 5, "hole0": 9, "_type": "Template27"}], "name": "CoreHound"}]}, "choice_history": [80, 159, 295, 88, 138, "Core", "Hound", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 110, 202, "9", "<EOS>", "5", "<EOS>"], "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -5.53131103515625e-05, -5.7220458984375e-06, -0.0010714748641476035, -7.426476804539561e-05, -8.106198947643861e-06, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.051491737365722656, -5.7220458984375e-05, -4.6491513785440475e-06, -9.775159924174659e-06, -1.5497207641601562e-05, -0.0001220703125, -0.00019490717386361212, 0.0, -0.00014495849609375, 0.0, -2.47955322265625e-05, -2.86102294921875e-05, -0.000125885009765625, -2.47955322265625e-05, -1.1444091796875e-05, 0.0, -0.00012969970703125, -3.814697265625e-06, -0.00029754638671875, -0.000213623046875, -0.00089263916015625, -5.7220458984375e-06, -0.0015664278762415051, 0.0, -0.00018453580560162663, 0.0], "score": -0.05682245589377999}]}
{"index": 22, "beams": [{"inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole0": "Corruption", "hole2": "WARLOCK", "hole3": "target_func", "hole1": 1, "_type": "Template11", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}}, {"hole1": "add_effect", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"func": {"id": "Effect", "_type": "Name"}, "args": [{"func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "arg": "player", "_type": "keyword"}]}, {"func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole0": "Kill", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call"}], "_type": "Call"}]}], "name": "Corruption"}]}, "choice_history": [80, 159, 295, 88, 138, "Corruption", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 98, 181, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Turn", "Started", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 68, 260, "Kill", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -7.62939453125e-06, -6.103329360485077e-05, -2.837163265212439e-05, -3.0517578125e-05, 0.0, 0.0, -0.0007641315460205078, -2.0265579223632812e-06, -8.344646857949556e-07, -0.00363922119140625, -0.0904397964477539, -4.1961669921875e-05, -5.960462772236497e-07, -1.71661376953125e-05, -7.152555099310121e-07, 0.0, -0.00013566017150878906, 0.0, -0.00164031982421875, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.0002346038818359375, -1.9073486328125e-06, -0.00052642822265625, -1.9073486328125e-06, -6.866455078125e-05, -1.1920928244535389e-07, -0.021050091832876205, -0.000301361083984375, -0.000667572021484375, -0.00390625, -1.9073486328125e-06, 0.0, -0.09145641326904297, 0.0, -2.300739288330078e-05, -4.38690185546875e-05, -2.47955322265625e-05, 0.0, -1.2174056768417358, -1.9073486328125e-06, -1.1444091796875e-05, -0.01165771484375, -0.04177665710449219, -0.0002994537353515625, 0.0, -0.22502470016479492, -0.0003337860107421875, -0.0004062652587890625, -0.0002422332763671875, -0.0107574462890625, -3.814697265625e-05, 0.0, -0.4739241600036621, -0.24076569080352783, 0.0, -3.62396240234375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0005180835723876953, 0.0, -0.0015411376953125, 0.0, -0.000542759895324707, -5.841255187988281e-06, 0.0, -0.0018596649169921875, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -0.00042724609375, -1.71661376953125e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.005078315734863281, -1.1444091796875e-05, -0.39842504262924194, -1.2397744285408407e-05, -0.00019073486328125, 0.0, -0.00325930118560791, -2.86102294921875e-05, 0.0], "score": -2.8498917164135307}]}
{"index": 23, "beams": [{"inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Dalaran Mage", "_type": "Template15", "hole2": "ALL"}, {"hole3": {"n": 1, "_type": "Num"}, "hole1": 4, "hole0": 1, "_type": "Template23", "hole2": "spell_damage"}], "name": "DalaranMage"}]}, "choice_history": [80, 159, 295, 88, 138, "Dalaran", "Mage", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 109, 200, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 21, 165, "1", "<EOS>"], "score_history": [-7.43865966796875e-05, -6.4849853515625e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -3.015949550899677e-05, -1.8119681044481695e-05, -7.152555099310121e-07, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, 0.0, -1.1444091796875e-05, -1.1920928955078125e-05, -1.52587890625e-05, -0.007117271423339844, -4.38690185546875e-05, -4.768370445162873e-07, -1.072883515007561e-05, -2.09808349609375e-05, 0.0, -8.344629350176547e-06, -5.9604644775390625e-06, -3.445148468017578e-05, -3.063678741455078e-05, -0.000545501708984375, -3.0517578125e-05, -1.3112712622387335e-06, 0.0, -1.9430992324487306e-05, -5.7220458984375e-06, -0.006823539733886719, -0.00067901611328125, -0.0007801055908203125, -3.814697265625e-05, -4.708765845862217e-05, -5.7220458984375e-06], "score": -0.01651573103993087}]}
{"index": 24, "beams": [{"inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Divine Spirit", "_type": "Template3", "hole2": "PRIEST"}, {"hole1": "increase_health", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "health"}]}], "name": "DivineSpirit"}]}, "choice_history": [80, 159, 295, 88, 138, "Divine", "Spirit", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 111, 204, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "score_history": [-7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-06, -7.82012939453125e-05, -5.7220458984375e-06, -3.1352021323982626e-05, -3.0040715500945225e-05, -9.059865078597795e-06, -8.96453857421875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00013947486877441406, -5.14984130859375e-05, -3.266334533691406e-05, -0.000186920166015625, -0.009136199951171875, -0.000858306884765625, -3.9696395106147975e-05, -5.9723781305365264e-05, -0.00010776249837363139, -3.814697265625e-06, -0.0008874366176314652, 0.0, -0.0002040863037109375, -3.814697265625e-06, -0.0007228851318359375, -0.0011081695556640625, -1.9073486328125e-06, 0.0, -0.0001811981201171875, 0.0, -2.86102294921875e-05, -0.00014495849609375, -0.000713348388671875, -3.814697265625e-06, -0.6581029891967773, -2.47955322265625e-05, -1.71661376953125e-05, -0.0057277679443359375, -1.9073486328125e-06, -5.7220458984375e-05, -0.0006122589111328125, -0.0001010894775390625, 0.0, -0.00019085407257080078, -3.4332275390625e-05, -4.38690185546875e-05, -9.5367431640625e-06, -0.07632923126220703, -3.814697265625e-06], "score": -0.7561419405237757}]}
{"index": 25, "beams": [{"inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole0": "Dragonling Mechanic", "hole2": "ALL", "hole3": "battlecry", "hole1": 4, "_type": "Template11", "hole4": {"hole1": [{"hole0": "MechanicalDragonling", "_type": "Template77"}], "hole0": "Summon", "_type": "Template59"}}, {"hole1": 4, "hole0": 2, "_type": "Template27"}], "name": "DragonlingMechanic"}]}, "choice_history": [80, 159, 295, 88, 138, "Dragonling", "Mechanic", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 28, 241, "Summon", "<EOS>", 282, 68, 260, "Mechanical", "Dragonling", "<EOS>", 110, 202, "2", "<EOS>", "4", "<EOS>"], "score_history": [-3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -3.218649908376392e-06, -8.82148651726311e-06, -4.29153169534402e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -9.536738616588991e-07, -1.537799835205078e-05, -2.503394853192731e-06, -9.5367431640625e-06, -0.05414867401123047, -0.0001316070556640625, -1.0728830375228426e-06, -1.6093232261482626e-05, -1.3470649719238281e-05, -1.9073486328125e-06, -9.155301086138934e-05, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -0.007744550704956055, -3.814697265625e-06, -0.0028057098388671875, -0.0003662109375, -0.0006297107320278883, -2.1457668481161818e-05, -2.47955322265625e-05, -0.00025177001953125, -0.00055694580078125, -0.001131018390879035, -0.0017013169126585126, -0.0008016718784347177, -0.0004730224609375, -4.38690185546875e-05, -0.0008573672384954989, 0.0, -1.430471456842497e-06, -1.9073486328125e-06], "score": -0.07196101875308614}]}
{"index": 26, "beams": [{"inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}, "args": [{"s": "Drain Life", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "arg": "target_func", "_type": "keyword"}]}, "_type": "Expr"}], "name": "__init__"}, {"args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template47"}, "_type": "Expr"}, {"value": {"func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "heal"}, "args": [{"func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "args": [{"n": 2, "_type": "Num"}], "_type": "Call"}, {"id": "self", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}], "name": "use"}], "name": "DrainLife"}]}, "choice_history": [80, 159, 295, 88, 138, "Drain", "Life", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Drain", " ", "Life", "<EOS>", 47, 165, "3", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 25, 223, "2", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 283, 40, 136, 11, 129, 19, 160, "player", "<EOS>", "effective_heal_power", "<EOS>", 282, 47, 165, "2", "<EOS>", 45, 160, "self", "<EOS>"], "score_history": [-1.71661376953125e-05, -5.14984130859375e-05, -9.5367431640625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -1.8715683836489916e-05, -0.00010752119851531461, -3.099440846199286e-06, -0.0003108978271484375, 0.0, 0.0, -3.743171691894531e-05, -2.5033950805664062e-05, -3.838539123535156e-05, -3.4332275390625e-05, -0.0011663436889648438, 0.0, -5.662440889864229e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -1.9073486328125e-05, -0.058040618896484375, -0.00048065185546875, -9.5367431640625e-06, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -2.384185791015625e-06, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -0.0002651214599609375, -4.00543212890625e-05, -9.5367431640625e-06, -2.264974000354414e-06, -5.304811929818243e-05, -1.895418972708285e-05, -3.4332275390625e-05, -0.0002593994140625, -2.47955322265625e-05, -0.00013482352369464934, -9.655952453613281e-06, -7.43865966796875e-05, 0.0, -3.0517578125e-05, 0.0, -4.00543212890625e-05, 0.0, -0.001220703125, 0.0, -7.62939453125e-06, 0.0, -7.43865966796875e-05, -7.62939453125e-06, -0.0001316070556640625, 0.0, -0.0005092620849609375, -1.9073486328125e-06, -2.09808349609375e-05, -0.00016021728515625, -6.866455078125e-05, -0.00015270709991455078, 0.0, -2.47955322265625e-05, 0.0, -6.4849853515625e-05, -1.33514404296875e-05, -1.52587890625e-05, -5.7220458984375e-06, -0.00013363361358642578, -7.05718994140625e-05, -3.4332275390625e-05, 0.0, -0.03222227096557617, -0.0001285076141357422, -0.0045032501220703125, -1.9073486328125e-05, -4.06503640988376e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -6.4849853515625e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, 0.0, -2.622604142743512e-06, 0.0, -9.1552734375e-05, -5.9604644775390625e-06, -2.503394853192731e-06, -0.025331497192382812, 0.0, -7.62939453125e-06, -0.00014495849609375, -1.52587890625e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-05, -1.71661376953125e-05, -7.05718994140625e-05, -3.814697265625e-06, -6.4849853515625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.82012939453125e-05, -4.00543212890625e-05, -9.5367431640625e-06, -4.2319297790527344e-05, -0.0005435943603515625, -1.9073486328125e-06, -0.0013980865478515625, -0.00045013427734375, -0.0001320818846579641, -2.7298927307128906e-05, -0.030806541442871094, -1.9073486328125e-06, -0.000453948974609375, -0.0042896270751953125, -1.9073486328125e-06, -1.9073486328125e-05, -5.14984130859375e-05, 0.0, -0.000316619873046875, -1.9073486328125e-06, -0.0019550323486328125, 0.0, -0.04964160919189453, -4.6491513785440475e-06, -0.001942753791809082, 0.0, -6.866455078125e-05, -0.0002498626708984375, -0.00102996826171875, -0.0001373291015625, -4.00543212890625e-05, -4.76837158203125e-05, 0.0, -3.814697265625e-06, -1.1920928244535389e-07, -0.0010533332824707031, -7.62939453125e-06, -4.38690185546875e-05, -0.0003604888916015625, -1.52587890625e-05, -8.357892511412501e-07, -1.1920928244535389e-07, -0.0007476806640625, -4.1961669921875e-05, -0.0001697540283203125, -2.491474151611328e-05], "score": -0.22346293051667487}]}
{"index": 27, "beams": [{"inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole7": "battlecry", "hole0": "Dread Infernal", "hole8": {"hole1": "CharacterSelector", "hole0": 1, "_type": "Template56", "hole2": [{"value": {"hole0": "BothPlayer", "_type": "Template77"}, "arg": "players", "_type": "keyword"}]}, "hole2": "WARLOCK", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole3": "COMMON", "hole1": 6, "hole6": "DEMON", "_type": "Template9", "hole4": "minion_type"}, {"hole1": 6, "hole0": 6, "_type": "Template27"}], "name": "DreadInfernal"}]}, "choice_history": [80, 159, 295, 88, 138, "Dread", "Infernal", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 27, 232, "1", "<EOS>", "Character", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 110, 202, "6", "<EOS>", "6", "<EOS>"], "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-06, -2.288818359375e-05, -3.814697265625e-06, -0.000196556793525815, -1.835809598560445e-05, -1.6331649021594785e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -3.933906555175781e-06, -7.62939453125e-06, -1.1920928244535389e-07, -0.0001239776611328125, -0.002330780029296875, -6.866455078125e-05, -1.6927575416048057e-05, -8.046627044677734e-05, -0.00012122917542001233, -3.814697265625e-06, -1.9954924937337637e-05, -1.9073486328125e-06, -0.0011730194091796875, -1.9073486328125e-06, -0.0003147125244140625, -1.9073486328125e-06, -8.96453857421875e-05, -5.7220458984375e-06, -0.000141143798828125, 0.0, -0.000293731689453125, -1.9073486328125e-06, -0.0011005401611328125, 0.0, -0.013448715209960938, 0.0, -0.008517265319824219, -0.012318611145019531, -0.0009409189224243164, -5.7220458984375e-06, -0.02587127685546875, -5.7220458984375e-06, 0.0, -0.002933502197265625, -0.0002346038818359375, -7.62939453125e-06, -0.0005588531494140625, -1.9073486328125e-06, -0.0002765655517578125, -7.62939453125e-06, -0.00034797191619873047, -0.0003243684477638453, -1.9073486328125e-06, -0.000583648681640625, -0.000148773193359375, -7.581437967019156e-05, -1.3232229321147315e-05, -1.8856037058867514e-05, -3.933906555175781e-06], "score": -0.07284525945032527}]}
{"index": 28, "beams": [{"inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole7": "battlecry", "hole0": "Elven Archer", "hole8": {"hole1": "CharacterSelector", "hole0": 1, "_type": "Template56", "hole2": [{"value": {"hole0": "BothPlayer", "_type": "Template77"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template77"}, "arg": "picker", "_type": "keyword"}]}, "hole2": "ALL", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole3": "COMMON", "hole1": 1, "hole6": "<UNK>", "_type": "Template9", "hole4": "minion_type"}, {"hole1": 1, "hole0": 1, "_type": "Template27"}], "name": "ElvenArcher"}]}, "choice_history": [80, 159, 295, 88, 138, "Elven", "Archer", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 27, 232, "1", "<EOS>", "Character", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "1", "<EOS>", "1", "<EOS>"], "score_history": [0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.597391747054644e-05, -2.7417760065873154e-05, -5.245203283266164e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -4.768370445162873e-07, -3.635883331298828e-05, -2.861018856492592e-06, -1.71661376953125e-05, -0.05244922637939453, -0.0001811981201171875, -0.00016735584358684719, -2.0742354536196217e-05, -2.288796349603217e-05, -1.9073486328125e-06, -0.00013727496843785048, 0.0, -6.139278411865234e-05, -1.9073486328125e-06, -0.004642486572265625, 0.0, -0.001491546630859375, -1.9073486328125e-06, -0.000640869140625, 0.0, -0.00025177001953125, -3.814697265625e-06, -0.005225181579589844, 0.0, -0.0055103302001953125, 0.0, -0.0022535324096679688, -0.00490570068359375, -0.00029774010181427, -1.52587890625e-05, -0.00302886962890625, -3.62396240234375e-05, 0.0, -0.0003032684326171875, -0.0007648468017578125, -0.00031280517578125, -0.0039010047912597656, -3.814697265625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -0.0009403228759765625, -0.0006409883499145508, -1.71661376953125e-05, -0.002166748046875, -5.340576171875e-05, -0.0012559890747070312, 0.0, -0.00147247314453125, -0.0003070831298828125, -0.000827789306640625, -0.00012409687042236328, -1.9073486328125e-06, -0.0033416748046875, -2.47955322265625e-05, -3.4568874980323017e-06, -3.814697265625e-06, -7.391963663394563e-06, -3.814697265625e-06], "score": -0.09800577802104726}]}
{"index": 29, "beams": [{"inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole1": "DRUID", "hole0": "Excess Mana", "_type": "Template13", "hole2": "COMMON"}, {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template5"}], "name": "ExcessMana"}]}, "choice_history": [80, 159, 295, 88, 138, "Excess", "Mana", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 100, 183, "Excess", " ", "Mana", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", 116, 224, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score_history": [-5.91278076171875e-05, -5.91278076171875e-05, -9.5367431640625e-06, -8.96453857421875e-05, -1.9073486328125e-06, -6.532570841955021e-05, -0.00010013097926275805, -0.000341120088705793, -3.814697265625e-05, 0.0, -1.9073486328125e-06, -0.0002040863037109375, -5.7220458984375e-05, -2.0265579223632812e-06, -2.6702880859375e-05, -0.06611919403076172, -0.00437164306640625, -3.159017433063127e-05, -0.00030144810443744063, -6.4373016357421875e-06, -5.14984130859375e-05, -0.03609180450439453, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.001773834228515625, -0.0030794143676757812, -0.00165557861328125, 0.0, -0.000347137451171875, 0.0, -0.0031235218048095703, 0.0], "score": -0.11802818793876213}]}
{"index": 30, "beams": [{"inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole7": "filter_func", "hole0": "Execute", "hole8": {"args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda", "body": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"left": {"value": {"id": "target", "_type": "Name"}, "_type": "Attribute", "attr": "health"}, "comparators": [{"func": {"value": {"id": "target", "_type": "Name"}, "_type": "Attribute", "attr": "calculate_max_health"}, "_type": "Call"}], "_type": "Compare", "ops": [{"_type": "NotEq"}]}, {"func": {"value": {"id": "target", "_type": "Name"}, "_type": "Attribute", "attr": "spell_targetable"}, "_type": "Call"}]}}, "hole2": "WARRIOR", "hole5": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "hole3": "COMMON", "hole1": 1, "hole6": "find_enemy_minion_spell_target", "_type": "Template9", "hole4": "target_func"}, {"hole1": "die", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"id": "self", "_type": "Name"}]}], "name": "Execute"}]}, "choice_history": [80, 159, 295, 88, 138, "Execute", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 124, 264, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 16, 153, 269, 275, 268, "target", "<EOS>", 13, 132, 0, 283, 41, 139, 11, 129, 19, 160, "target", "<EOS>", "health", "<EOS>", 279, 10, 282, 40, 134, 11, 129, 19, 160, "target", "<EOS>", "calculate_max_health", "<EOS>", 40, 134, 11, 129, 19, 160, "target", "<EOS>", "spell_targetable", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 282, 45, 160, "self", "<EOS>"], "score_history": [0.0, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.6954811548639555e-06, -4.982943573850207e-05, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -9.191036224365234e-05, -3.814697265625e-06, -2.1457672119140625e-06, -0.0006008148193359375, -0.017126083374023438, -0.0005016326904296875, -0.0010701649589464068, -5.173683166503906e-05, -0.00017473420302849263, -3.933906555175781e-06, -0.0005379915237426758, -1.9073486328125e-06, -0.2198467254638672, -1.9073486328125e-06, -0.006075024604797363, 0.0, -3.4332275390625e-05, -5.7220458984375e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0010852813720703125, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.07669484615325928, -1.9073486328125e-06, -0.007576704025268555, 0.0, -0.006983757019042969, -0.0005435943603515625, -1.71661376953125e-05, -0.0008029937744140625, -3.814697265625e-06, -0.002716064453125, -0.0008971691131591797, -0.003612518310546875, -1.52587890625e-05, -0.0028276443481445312, -0.001430511474609375, -0.000392913818359375, -0.000858306884765625, -0.0016794204711914062, -3.0517578125e-05, -0.0025129318237304688, -3.814697265625e-06, -0.0018645524978637695, -0.0001316070556640625, -0.011819839477539062, -9.393692016601562e-05, -9.1552734375e-05, -0.02163219451904297, -2.47955322265625e-05, -0.000148773193359375, -0.0002040863037109375, -9.5367431640625e-06, -9.5367431640625e-06, -0.0002651214599609375, -1.9073486328125e-06, -0.005779385566711426, -5.7220458984375e-06, -0.00975799560546875, -0.00046539306640625, -0.0002956390380859375, -8.20159912109375e-05, -6.103515625e-05, -0.0032787322998046875, -4.00543212890625e-05, -3.814697265625e-06, -0.0012427568435668945, -1.9073486328125e-06, -0.0018520355224609375, 0.0, -0.00159454345703125, -0.005963325500488281, -0.000202178955078125, 0.0, -7.62939453125e-06, -7.62939453125e-06, -0.00023663043975830078, -0.0002593994140625, -1.52587890625e-05, -1.9073486328125e-06, -0.005842924118041992, -9.357929229736328e-05, -2.09808349609375e-05, -0.000514984130859375, 0.0, -8.96453857421875e-05, -3.24249267578125e-05], "score": -0.43104219086353623}]}
{"index": 31, "beams": [{"inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Fan of Knives", "_type": "Template15", "hole2": "ROGUE"}, {"args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}, {"iter": {"func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"value": {"func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "args": [{"hole0": 1, "_type": "Template71"}, {"id": "self", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}]}, {"value": {"func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "draw"}, "_type": "Call"}, "_type": "Expr"}], "name": "use"}], "name": "FanOfKnives"}]}, "choice_history": [80, 159, 295, 88, 138, "Fan", "Of", "Knives", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 101, 184, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score_history": [-1.71661376953125e-05, -3.24249267578125e-05, -0.0006961822509765625, -0.000820159912109375, -1.33514404296875e-05, -6.318072337307967e-06, -0.001836384297348559, -0.0021846338640898466, -1.943101960932836e-05, -0.00018310546875, -1.9073486328125e-06, -1.52587890625e-05, -4.601478576660156e-05, -1.1563301086425781e-05, -2.1457672119140625e-06, -0.000148773193359375, -0.0007171630859375, -0.000141143798828125, -5.6980417866725475e-05, -4.1961669921875e-05, -0.00023293495178222656, -1.1444091796875e-05, -4.5895547373220325e-05, -7.62939453125e-06, -1.7762025890988298e-05, -1.1920928244535389e-07, -0.0052051544189453125, -3.814697265625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -5.7220458984375e-06, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.9073486328125e-06, -3.6716461181640625e-05, -9.536738616588991e-07, -0.042456626892089844, -5.7220458984375e-06, -1.1444091796875e-05, -2.6702880859375e-05, -3.62396240234375e-05, -9.5367431640625e-05, 0.0, -3.814697265625e-05, -7.2479248046875e-05, -2.5272365746786818e-05, -5.7220458984375e-06, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0001049041748046875, 0.0, -1.1444091796875e-05, -2.491474151611328e-05, -0.0077800750732421875, -1.9073486328125e-05, -4.57763671875e-05, 0.0, -0.001482248306274414, 0.0, -0.058341026306152344, -0.0004119873046875, -0.0020751953125, 0.0, -0.0001544952392578125, 0.0, -0.0010089874267578125, -3.0517578125e-05, -0.000514984130859375, -1.71661376953125e-05, -2.86102294921875e-05, -6.67572021484375e-05, 0.0, -0.010485649108886719, -9.5367431640625e-06, -0.0001659393310546875, 0.0, -0.00011837482452392578, -2.0265579223632812e-06, -0.00023472309112548828, 0.0, -0.0008184839971363544, -0.000141143798828125, -0.00011444091796875, -0.0001621246337890625, 0.0, -4.00543212890625e-05, -8.0108642578125e-05, -0.0005626678466796875, 0.0, -0.000110626220703125, 0.0, -0.002750396728515625, -1.9073486328125e-06, -0.010123252868652344, -4.57763671875e-05, -3.814697265625e-06, -0.022477149963378906, -0.000102996826171875, -0.0002949016634374857, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.01120007038116455, 0.0, -0.008124351501464844, -3.814697265625e-06, -0.023474693298339844, -0.0012722015380859375, -0.0002307891845703125, -1.9073486328125e-06, -0.000553131103515625, 0.0, -9.918212890625e-05, 0.0, -0.004109382629394531, 0.0], "score": -0.22560041961650512}]}
{"index": 32, "beams": [{"inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}, "args": [{"s": "Fireball", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "MAGE"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "arg": "target_func", "_type": "keyword"}]}, "_type": "Expr"}], "name": "__init__"}, {"hole1": "target", "hole0": {"id": "self", "_type": "Name"}, "_type": "Template0", "hole2": [{"n": 6, "_type": "Num"}]}], "name": "Fireball"}]}, "choice_history": [80, 159, 295, 88, 138, "Fireball", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Fireball", "<EOS>", 47, 165, "4", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "6", "<EOS>"], "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, -8.96453857421875e-05, -3.62396240234375e-05, -9.5367431640625e-06, -4.362964682513848e-05, -4.29153169534402e-06, -5.340576171875e-05, 0.0, 0.0, -6.92605972290039e-05, -6.330013275146484e-05, -6.330013275146484e-05, -5.7220458984375e-05, -0.001750946044921875, -5.7220458984375e-06, -6.449213833548129e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -4.4226646423339844e-05, -1.9073486328125e-06, -7.62939453125e-05, -1.1444091796875e-05, -4.00543212890625e-05, -0.12598896026611328, -0.0005474090576171875, -2.47955322265625e-05, 0.0, -4.38690185546875e-05, -7.62939453125e-06, -1.1920922133867862e-06, -2.3841855067985307e-07, -3.0517578125e-05, -1.9073486328125e-06, -0.0006961822509765625, -1.9073486328125e-05, 0.0, -2.264974000354414e-06, -1.52587890625e-05, -1.52587890625e-05, -2.288818359375e-05, -9.596037125447765e-05, -7.2479248046875e-05, -0.000156402587890625, 0.0, -4.38690185546875e-05, 0.0, -0.000331878662109375, 0.0, -0.001811981201171875, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.0002079010009765625, 0.0, -0.001880645751953125, -7.62939453125e-06, -7.62939453125e-06, -0.0001773834228515625, -0.0001068115234375, -0.0002728700637817383, -1.1920928244535389e-07, -4.9591064453125e-05, 0.0, -9.5367431640625e-05, -3.814697265625e-06, -7.62939453125e-05, -2.09808349609375e-05, -0.00029790401458740234, -9.5367431640625e-06, -0.0002880096435546875, -1.1920928244535389e-07, -0.0007491111755371094, -4.804131094715558e-05, -0.001247406005859375, -0.000171661376953125, -0.00140380859375, 0.0, -0.00015163421630859375, -2.491474151611328e-05, -0.0006694793701171875, -1.9073486328125e-06, -8.58306884765625e-05, -9.5367431640625e-06, -3.24249267578125e-05, -0.000541548477485776, -2.2649765014648438e-06], "score": -0.1411182645292257}]}
{"index": 33, "beams": [{"inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Flamestrike", "_type": "Template15", "hole2": "MAGE"}, {"args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}, {"iter": {"func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"value": {"func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "args": [{"hole0": 4, "_type": "Template71"}, {"id": "self", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}]}], "name": "use"}], "name": "Flamestrike"}]}, "choice_history": [80, 159, 295, 88, 138, "Flamestrike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 101, 184, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 63, 253, "4", "<EOS>", 45, 160, "self", "<EOS>"], "score_history": [-9.5367431640625e-05, -0.0007534027099609375, -0.0006732940673828125, -8.20159912109375e-05, -8.96453857421875e-05, -2.9802276912960224e-06, -3.4451219107722864e-05, -0.0001506805419921875, 0.0, -5.7220458984375e-06, -9.238719940185547e-05, -9.1552734375e-05, -9.5367431640625e-06, -6.29425048828125e-05, -0.00052642822265625, -9.34600830078125e-05, -1.0013530300057027e-05, -5.841255187988281e-06, -4.219927723170258e-05, -1.1920928244535389e-07, -0.000141143798828125, -4.2676914745243266e-05, -0.0020437240600585938, -3.4332275390625e-05, -0.0002498626708984375, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, 0.0, -2.682209014892578e-05, 0.0, -3.814697265625e-06, -9.775153557711747e-06, -8.34461570775602e-06, -0.0084991455078125, -1.71661376953125e-05, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -4.57763671875e-05, -1.71661376953125e-05, -1.3709068298339844e-05, -1.9073486328125e-06, -0.0003719329833984375, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -4.780292510986328e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -2.86102294921875e-05, -7.62939453125e-06, -0.00045013427734375, -0.0001010894775390625, -7.05718994140625e-05, -1.9073486328125e-06, -0.0002757310576271266, 0.0, -0.00157928466796875, -0.000148773193359375, -0.0019855499267578125, -1.33514404296875e-05, -0.0013408660888671875, -3.814697265625e-06, -0.000331878662109375, -7.2479248046875e-05, -0.0004711151123046875, 0.0, -5.340576171875e-05, -0.00020599365234375, -1.9073486328125e-06, -0.0001678466796875, -1.52587890625e-05, -0.0001773834228515625, 0.0, -1.3470649719238281e-05, -5.9604644775390625e-06, -0.0008679628372192383, -1.9073486328125e-06, -0.0004271269717719406, -6.103515625e-05, -0.0014514923095703125, -0.001323699951171875, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -0.000102996826171875, 0.0, -0.0002727508544921875, 0.0, -5.3763389587402344e-05, -1.33514404296875e-05, -0.0005435943603515625, -6.4849853515625e-05, -3.814697265625e-06, -0.0009059906005859375, -0.00022125244140625, -0.0003266324638389051, -1.1086463018727954e-05, -6.29425048828125e-05, -9.5367431640625e-06, -5.829290239489637e-05, -1.9073486328125e-05], "score": -0.02891313773942983}]}
{"index": 34, "beams": [{"inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole0": "Flametongue Totem", "hole2": "SHAMAN", "hole3": "minion_type", "hole1": 2, "_type": "Template11", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "TOTEM"}}, {"hole3": {"elts": [{"func": {"id": "Aura", "_type": "Name"}, "args": [{"hole0": 2, "_type": "Template73"}, {"hole1": "Adjacent", "hole0": "MinionSelector", "_type": "Template69"}], "_type": "Call"}], "_type": "List"}, "hole1": 3, "hole0": 0, "_type": "Template23", "hole2": "auras"}], "name": "FlametongueTotem"}]}, "choice_history": [80, 159, 295, 88, 138, "Flametongue", "Totem", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 109, 200, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "2", "<EOS>", 61, 250, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>"], "score_history": [-5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.0503786799963564e-05, -3.8146954466355965e-06, -1.1920922133867862e-06, -2.288818359375e-05, -3.4332275390625e-05, 0.0, 0.0, -6.103515625e-05, -3.898143768310547e-05, -3.4332275390625e-05, -0.034638404846191406, -5.7220458984375e-05, -5.960462772236497e-07, -2.6345227524871007e-05, -0.00020611286163330078, -1.9073486328125e-06, -4.0650342270964757e-05, 0.0, -0.00017023086547851562, 0.0, -0.0003901719755958766, -3.814697265625e-06, -0.0006809234619140625, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.0007039308547973633, -5.7220458984375e-06, -0.0074443817138671875, -0.004505515098571777, -0.0012359619140625, -7.62939453125e-06, -3.3378546504536644e-06, -1.1920896213268861e-05, -4.911416181130335e-05, -2.503394853192731e-06, -0.0023541427217423916, -3.576278118089249e-07, -3.24249267578125e-05, -2.288818359375e-05, -0.000240325927734375, -0.00018310546875, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -0.0017049312591552734, -1.537799835205078e-05, -7.43865966796875e-05, -0.0018873214721679688, -0.0002803802490234375, -0.014221892692148685, -2.0265579223632812e-06, -0.010224342346191406, -3.814697265625e-06, -0.0046654934994876385, -6.425351602956653e-05, -0.0019357566488906741, -0.002765944227576256, -0.003310834290459752], "score": -0.09446595551958126}]}
{"index": 35, "beams": [{"inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}, "args": [{"s": "Frog", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Call", "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}]}, "_type": "Expr"}], "name": "__init__"}, {"args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole1": 1, "hole0": 0, "_type": "Template65", "hole2": "taunt"}], "name": "create_minion"}], "name": "Frog"}]}, "choice_history": [80, 159, 295, 88, 138, "Frog", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 286, 48, 169, "Frog", "<EOS>", 47, 165, "0", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 46, 161, "False", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "p", "<EOS>", 295, 120, 247, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score_history": [-3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -4.00543212890625e-05, -7.62939453125e-06, -1.6331539882230572e-05, -2.5153160095214844e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -7.05718994140625e-05, -0.00473785400390625, -7.62939453125e-06, -1.6570085790590383e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.09808349609375e-05, -0.00014495849609375, -2.47955322265625e-05, -4.38690185546875e-05, -0.0003223419189453125, -2.09808349609375e-05, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -4.649161837733118e-06, 0.0, -1.3470649719238281e-05, 0.0, -0.004502296447753906, -1.1444091796875e-05, -2.47955322265625e-05, -9.536738616588991e-07, -0.000244140625, 0.0, -3.62396240234375e-05, -0.00041043738019652665, 0.0, -3.24249267578125e-05, 0.0, -1.1444091796875e-05, 0.0, -4.9591064453125e-05, -2.503394853192731e-06, -0.0001773834228515625, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, 0.0, -0.000152587890625, -1.9073486328125e-06, -8.0108642578125e-05, -5.7220458984375e-06, -6.115436553955078e-05, 0.0, -0.001102447509765625, -0.00012969970703125, -3.814697265625e-06, -2.8848648071289062e-05, -1.1444091796875e-05, -0.000247955322265625, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -3.62396240234375e-05, -2.491474151611328e-05, -0.000171661376953125, -1.1563301086425781e-05, -0.05458641052246094, -4.9591064453125e-05, -0.00013744831085205078, -2.0265579223632812e-06, -1.71661376953125e-05, -0.0003681182861328125, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.022057652473449707, -3.814697265625e-06, -3.0517578125e-05, -0.012400627136230469, -0.0025129318237304688, -2.2172682292875834e-05, -9.42901024245657e-05, -7.0331254391931e-05, 0.0, -0.005885720252990723, -4.76837158203125e-05, -0.0008649826049804688, -1.33514404296875e-05, -0.000152587890625, 0.0], "score": -0.1126454995981021}]}
{"index": 36, "beams": [{"inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Frozen()))\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Frost Nova", "_type": "Template15", "hole2": "MAGE"}, {"args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}, {"iter": {"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"value": {"func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "add_buff"}, "args": [{"hole1": "Frozen", "hole0": "Buff", "_type": "Template69"}], "_type": "Call"}, "_type": "Expr"}]}], "name": "use"}], "name": "FrostNova"}]}, "choice_history": [80, 159, 295, 88, 138, "Frost", "Nova", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 101, 184, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "add_buff", "<EOS>", 282, 61, 250, "Buff", "<EOS>", "Frozen", "<EOS>"], "score_history": [-5.7220458984375e-06, -2.6702880859375e-05, -1.33514404296875e-05, -0.0005397796630859375, -4.9591064453125e-05, -3.3378546504536644e-06, -7.998667570063844e-05, -6.401333666872233e-05, -0.000652313232421875, -3.814697265625e-06, 0.0, -0.00014901161193847656, -0.0005515813827514648, -2.0265579223632812e-06, -0.0001201629638671875, -0.00138092041015625, -3.0517578125e-05, -9.536738616588991e-07, -9.751313336892053e-05, -3.8981153920758516e-05, -7.43865966796875e-05, -0.000359351426595822, -5.841255187988281e-06, -0.0002613067626953125, -1.9311904907226562e-05, -0.004810333251953125, -1.9073486328125e-06, -0.000324249267578125, 0.0, -2.288818359375e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -1.060962586052483e-05, -1.5616295058862306e-05, -0.0022640228271484375, -2.47955322265625e-05, -1.1444091796875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -3.62396240234375e-05, -7.2479248046875e-05, -1.4781950994802173e-05, 0.0, -0.000148773193359375, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -9.918212890625e-05, -3.814697265625e-06, -9.655952453613281e-06, -7.748603820800781e-06, -0.0003070831298828125, -0.0004100799560546875, -0.03524971008300781, -3.814697265625e-05, -0.009155869483947754, -4.57763671875e-05, -0.00012969970703125, 0.0, -0.01192474365234375, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -0.0005340576171875, -1.1920928244535389e-07, -0.00043714046478271484, -2.384185791015625e-06, -0.0075004734098911285, -0.0023975372314453125, -0.0018157958984375, -0.0001125335693359375, 0.0, -0.00035762786865234375, -2.86102294921875e-05, -7.62939453125e-05, 0.0, -0.0037384033203125, 0.0, -0.00247955322265625, -1.52587890625e-05, -0.33240795135498047, 0.0, -1.33514404296875e-05, -0.002658843994140625, -0.0001087188720703125, -0.0017862319946289062, -5.7220458984375e-06, -0.016545889899134636, -4.172325134277344e-06], "score": -0.4428455745596622}]}
{"index": 37, "beams": [{"inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}, "args": [{"s": "Frost Shock", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "arg": "target_func", "_type": "keyword"}]}, "_type": "Expr"}], "name": "__init__"}, {"args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 1, "_type": "Template47"}, "_type": "Expr"}, {"hole0": "Frozen", "_type": "Template50"}], "name": "use"}], "name": "FrostShock"}]}, "choice_history": [80, 159, 295, 88, 138, "Frost", "Shock", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Frost", " ", "Shock", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 25, 223, "1", "<EOS>", 117, 226, "Frozen", "<EOS>"], "score_history": [-1.9073486328125e-06, -4.76837158203125e-05, -5.7220458984375e-06, -4.38690185546875e-05, -1.33514404296875e-05, -7.152555099310121e-07, -0.00011979904229519889, -7.152555099310121e-07, -0.0009441375732421875, -1.9073486328125e-06, -1.9073486328125e-06, -8.654594421386719e-05, -2.491474151611328e-05, -1.1563301086425781e-05, -5.91278076171875e-05, -0.0028753280639648438, -1.9073486328125e-06, -4.804134005098604e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -4.0531158447265625e-06, 0.0, -0.0001354217529296875, -3.814697265625e-06, -1.9073486328125e-06, -0.01990985870361328, -9.5367431640625e-05, -1.9073486328125e-05, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, -7.152555099310121e-07, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0002498626708984375, -2.288818359375e-05, -1.9073486328125e-06, -6.794906312279636e-06, -0.00010979037324432284, -6.079673767089844e-06, -0.0001239776611328125, -2.86102294921875e-05, 0.0, -2.0263760234229267e-06, -1.1444091796875e-05, -2.6702880859375e-05, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.0020122528076171875, -1.1920928244535389e-07, -0.0001850128173828125, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00021564960479736328, -2.0265579223632812e-06, -0.0005397796630859375, -1.9073486328125e-06, -2.47955322265625e-05, -0.000324249267578125, -2.47955322265625e-05, -0.0026208162307739258, -1.9073486328125e-06, -0.00016021728515625, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.843971252441406e-05, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -0.015275239944458008, -2.467606282152701e-05, -0.05964183807373047, -5.7220458984375e-06, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -2.0265579223632812e-06, -4.768371127283899e-06, -0.006946563720703125, -3.814697265625e-06, -7.62939453125e-06, -0.0003566741943359375, -1.9073486328125e-05, -2.86102294921875e-05, 0.0, -2.47955322265625e-05, -1.1444091796875e-05, -0.00014317035675048828, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00014495849609375, -5.7220458984375e-06, -4.9591064453125e-05, -1.3470649719238281e-05, -0.0001735687255859375, -1.9073486328125e-06, -0.004399299621582031, -4.9591064453125e-05, -0.003187748836353421, -9.5367431640625e-06, -0.015936851501464844, -0.00121307373046875, -0.0067293643951416016, -1.9073486328125e-06], "score": -0.1460660346813185}]}
{"index": 38, "beams": [{"inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole0": "Frostbolt", "hole2": "MAGE", "hole3": "target_func", "hole1": 2, "_type": "Template11", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}}, {"args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 3, "_type": "Template47"}, "_type": "Expr"}, {"hole0": "Frozen", "_type": "Template50"}], "name": "use"}], "name": "Frostbolt"}]}, "choice_history": [80, 159, 295, 88, 138, "Frostbolt", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 98, 181, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 25, 223, "3", "<EOS>", 117, 226, "Frozen", "<EOS>"], "score_history": [-1.1444091796875e-05, -8.0108642578125e-05, -0.0006313323974609375, -2.47955322265625e-05, -0.00014495849609375, -3.814689989667386e-06, -6.556507287314162e-06, -0.00012969970703125, -1.9073486328125e-06, -1.9073486328125e-06, -8.559226262150332e-05, -1.537799835205078e-05, -9.655952453613281e-06, -4.1961669921875e-05, -0.015960693359375, -3.24249267578125e-05, -4.529942543740617e-06, -1.1444091796875e-05, -3.0159299058141187e-05, 0.0, -0.0017948150634765625, -1.9073486328125e-06, -6.139278411865234e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, 0.0, -0.0005741119384765625, -8.7738037109375e-05, -7.62939453125e-05, 0.0, -0.002446293830871582, -4.291534423828125e-06, -0.017999649047851562, -1.71661376953125e-05, -0.00011372566223144531, 0.0, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -2.0265579223632812e-06, 0.0, 0.0, -9.655952453613281e-06, 0.0, -0.0001373291015625, -2.2649765014648438e-06, -5.960462772236497e-07, -0.003864288330078125, -1.9073486328125e-06, -2.09808349609375e-05, -0.000553131103515625, -1.52587890625e-05, -2.86102294921875e-05, 0.0, -6.29425048828125e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -4.9591064453125e-05, 0.0, -0.00019073486328125, -3.814697265625e-06, -4.00543212890625e-05, -1.9431114196777344e-05, -0.0001678466796875, -1.52587890625e-05, -0.0012111663818359375, -0.00037384033203125, -0.00041268044151365757, -5.4596839618170634e-05, -0.039112091064453125, -0.0005474090576171875, -0.005090236663818359, -1.9073486328125e-06], "score": -0.09257278445176098}]}
{"index": 39, "beams": [{"inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Frostwolf Grunt", "_type": "Template15", "hole2": "ALL"}, {"hole3": {"value": true, "_type": "NameConstant"}, "hole1": 2, "hole0": 2, "_type": "Template23", "hole2": "taunt"}], "name": "FrostwolfGrunt"}]}, "choice_history": [80, 159, 295, 88, 138, "Frostwolf", "Grunt", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score_history": [0.0, -1.1444091796875e-05, -3.814697265625e-06, -7.82012939453125e-05, -3.814697265625e-06, -2.407998726994265e-05, -1.4424220353248529e-05, -9.595905430614948e-05, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -7.152536454668734e-06, -1.9073486328125e-06, -4.768370445162873e-07, -0.00077056884765625, -0.0014286041259765625, -6.67572021484375e-05, -6.318072337307967e-06, -2.0384788513183594e-05, -4.88758041683468e-06, -1.9073486328125e-06, -9.65605431701988e-06, 0.0, -9.918212890625e-05, -1.9073486328125e-06, -0.001434326171875, -0.00046539306640625, -8.940590305428486e-06, 0.0, -2.0992887584725395e-05, 0.0, -0.0025157928466796875, 0.0, -0.0001583099365234375, -5.53131103515625e-05, -1.1444091796875e-05, 0.0], "score": -0.007341034449723338}]}
{"index": 40, "beams": [{"inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Goldshire Footman", "_type": "Template15", "hole2": "ALL"}, {"hole3": {"value": true, "_type": "NameConstant"}, "hole1": 2, "hole0": 1, "_type": "Template23", "hole2": "taunt"}], "name": "GoldshireFootman"}]}, "choice_history": [80, 159, 295, 88, 138, "Goldshire", "Footman", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 109, 200, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, -4.76837158203125e-05, -1.9073486328125e-06, -5.5549986427649856e-05, -3.2305197237292305e-05, -1.3351374946068972e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.960462772236497e-07, -3.814697265625e-06, -3.576278118089249e-07, -0.000469207763671875, -0.0015106201171875, -4.57763671875e-05, -6.556489552167477e-06, -2.3007385607343167e-05, -7.152556463552173e-06, -1.9073486328125e-06, -7.426738739013672e-05, 0.0, -0.00010323524475097656, -1.9073486328125e-06, -0.0023193359375, -0.000335693359375, -4.7683579396107234e-07, 0.0, -2.932511233666446e-05, 0.0, -0.001903533935546875, -1.9073486328125e-06, -0.000141143798828125, -4.76837158203125e-05, -1.33514404296875e-05, 0.0], "score": -0.007220265717251095}]}
{"index": 41, "beams": [{"inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole0": "Grimscale Oracle", "hole2": "ALL", "hole3": "minion_type", "hole1": 1, "_type": "Template11", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}}, {"hole3": {"elts": [{"func": {"id": "Aura", "_type": "Name"}, "args": [{"hole0": 1, "_type": "Template73"}, {"func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"func": {"id": "IsType", "_type": "Name"}, "args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}], "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template77"}], "_type": "Call"}], "_type": "Call"}], "_type": "List"}, "hole1": 1, "hole0": 1, "_type": "Template23", "hole2": "auras"}], "name": "GrimscaleOracle"}]}, "choice_history": [80, 159, 295, 88, 138, "Grimscale", "Oracle", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 109, 200, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "1", "<EOS>", 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 283, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 68, 260, "Both", "Player", "<EOS>"], "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -1.2278481335670222e-05, -2.8132995794294402e-05, -3.1470757676288486e-05, -9.5367431640625e-06, -6.4849853515625e-05, 0.0, -2.1457672119140625e-06, -1.71661376953125e-05, -6.079673767089844e-06, -2.47955322265625e-05, -0.20341968536376953, -0.0001087188720703125, -5.960462772236497e-07, -2.396105628577061e-05, -1.71661376953125e-05, 0.0, -7.272676157299429e-06, 0.0, -6.54458999633789e-05, -1.1444091796875e-05, -0.00012540817260742188, -7.62939453125e-06, -0.000141143798828125, -0.0001239776611328125, -3.814697265625e-06, 0.0, -0.0005799531936645508, -9.5367431640625e-06, -0.004421234130859375, -8.547247853130102e-05, -0.00025177001953125, -1.1444091796875e-05, -7.510187060688622e-06, -1.1920928244535389e-07, 4.761645868711639e-07, 0.0, -0.00410008430480957, -2.7418097943154862e-06, -8.392333984375e-05, -0.0001125335693359375, -0.00079345703125, -8.58306884765625e-05, -2.47955322265625e-05, -3.814697265625e-06, 0.0, -0.0003892183303833008, -0.00018894672393798828, -0.0004978179931640625, -0.0013103485107421875, -0.00055694580078125, -0.0073578450828790665, -5.7220458984375e-06, -0.004611015319824219, -0.001312255859375, -3.814697265625e-06, 0.0, -0.010535240173339844, -6.866455078125e-05, 0.0, -0.001811981201171875, -0.0002269744873046875, -2.288818359375e-05, -0.0001583099365234375, 0.0, -0.0005303621292114258, -0.0008109807968139648, -2.0265579223632812e-06, -0.0001583099365234375, -3.62396240234375e-05, -0.0013408660888671875, -0.0001354217529296875, 0.0, -0.0012302398681640625, -1.1563301086425781e-05, -0.0034332275390625, -9.417517503607087e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.003149616066366434, -0.007442112546414137, -3.2782554626464844e-05], "score": -0.2622400447763127}]}
{"index": 42, "beams": [{"inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole0": "Guardian of Kings", "hole2": "PALADIN", "hole3": "battlecry", "hole1": 7, "_type": "Template11", "hole4": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"func": {"id": "Heal", "_type": "Name"}, "args": [{"n": 6, "_type": "Num"}], "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template77"}], "_type": "Call"}}, {"hole1": 6, "hole0": 5, "_type": "Template27"}], "name": "GuardianOfKings"}]}, "choice_history": [80, 159, 295, 88, 138, "Guardian", "Of", "Kings", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "6", "<EOS>", 68, 260, "Hero", "Selector", "<EOS>", 110, 202, "5", "<EOS>", "6", "<EOS>"], "score_history": [0.0, -1.71661376953125e-05, -2.6702880859375e-05, -4.9591064453125e-05, -4.57763671875e-05, -6.222543015610427e-05, -0.0006054597906768322, -1.931181213876698e-05, -1.41858699862496e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, 0.0, -3.814697265625e-06, -4.768371127283899e-06, -2.288818359375e-05, -0.0025310516357421875, -0.000675201416015625, -7.152555099310121e-07, -1.251697449333733e-05, -1.7046884750016034e-05, -5.7220458984375e-06, -4.6014782128622755e-05, -8.58306884765625e-05, -0.004099726676940918, -2.3841855067985307e-07, -0.0002002716064453125, 0.0, -0.001483917236328125, 0.0, -0.033972740173339844, -0.001434326171875, -9.5367431640625e-06, -9.5367431640625e-06, -4.76837158203125e-05, -1.9073486328125e-06, -5.340576171875e-05, -0.0001316070556640625, -0.004128456115722656, -1.9073486328125e-05, -5.7220458984375e-06, -0.0068558454513549805, -0.00034606456756591797, -1.9073486328125e-06, -5.340576171875e-05, -5.7220458984375e-06, -0.00026675828848965466, -1.9073486328125e-06, -0.00034332275390625, -7.62939453125e-06, -0.00023508071899414062, -7.64130090828985e-05, 0.0, -0.000457763671875, -1.71661376953125e-05, -0.004620223306119442, -1.9073486328125e-06, -7.987019671418238e-06, 0.0], "score": -0.0631585025496122}]}
{"index": 43, "beams": [{"inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Gurubashi Berserker", "_type": "Template15", "hole2": "ALL"}, {"hole3": {"elts": [{"func": {"id": "Effect", "_type": "Name"}, "args": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "MinionIsTarget", "_type": "Template77"}, "arg": "condition", "_type": "keyword"}]}, {"func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template66", "hole2": 3}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call"}], "_type": "Call"}], "_type": "List"}, "hole1": 7, "hole0": 2, "_type": "Template23", "hole2": "effects"}], "name": "GurubashiBerserker"}]}, "choice_history": [80, 159, 295, 88, 138, "Gurubashi", "Berserker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Character", "Damaged", "<EOS>", 290, 79, 271, "condition", "<EOS>", 33, 260, "Minion", "Is", "Target", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 59, 248, "Give", "<EOS>", "Change", "Attack", "<EOS>", "3", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0008361419313587248, -6.615908932872117e-05, -1.5497195136049413e-06, -1.71661376953125e-05, -7.82012939453125e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.1444091796875e-05, -6.29425048828125e-05, -0.0011615753173828125, -0.00022125244140625, -4.6491513785440475e-06, -3.528594606905244e-05, -9.894371032714844e-06, -9.5367431640625e-06, -2.7179487005923875e-05, -2.0265579223632812e-06, -0.0002040863037109375, -7.05718994140625e-05, -0.00717926025390625, -3.0517578125e-05, -1.1324843399052043e-05, 0.0, -0.0005412666359916329, -8.463859558105469e-06, -0.012241363525390625, -0.0003458261489868164, -1.33514404296875e-05, -8.20159912109375e-05, -0.000614166259765625, -0.00194549560546875, -0.000324249267578125, -4.57763671875e-05, 0.0, -0.009899497032165527, -1.9073486328125e-06, -0.000640869140625, -6.4849853515625e-05, -0.0005779266357421875, -0.000316619873046875, -1.9073486328125e-06, -0.0012432336807250977, -0.002887129783630371, -0.00168609619140625, -0.022393226623535156, -0.0009021759033203125, -0.0001773834228515625, -0.16321945190429688, -4.768371127283899e-06, -0.003200531005859375, -8.392333984375e-05, -0.00040662288665771484, -0.005375862121582031, -0.0780535563826561, 0.0, -8.20159912109375e-05, -8.392333984375e-05, 0.0, 0.0, -0.000247955322265625, -7.62939453125e-05, -1.1444091796875e-05, -0.00012969970703125, -0.013360023498535156, -0.00049591064453125, -0.0013390779495239258, 0.0, -4.76837158203125e-05, -0.001926422119140625, -2.09808349609375e-05, -0.031436678022146225, -5.7220458984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000942230224609375, -7.62939453125e-05, 0.0], "score": -0.36770846570027516}]}
{"index": 44, "beams": [{"inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}, "args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "arg": "target_func", "_type": "keyword"}]}, "_type": "Expr"}], "name": "__init__"}, {"args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 3, "_type": "Template47"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "draw"}, "_type": "Call"}, "_type": "Expr"}], "name": "use"}], "name": "HammerOfWrath"}]}, "choice_history": [80, 159, 295, 88, 138, "Hammer", "Of", "Wrath", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 47, 165, "4", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 25, 223, "3", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score_history": [-9.72747802734375e-05, -1.71661376953125e-05, -0.0004520416259765625, -0.00092315673828125, -4.38690185546875e-05, -2.7060237698606215e-05, -0.0013872361741960049, -0.004420415498316288, -3.4570690331747755e-05, -0.000537872314453125, -1.9073486328125e-06, -5.7220458984375e-06, -0.00017178058624267578, -1.7762184143066406e-05, -8.463855920126662e-06, -5.91278076171875e-05, -0.023606300354003906, -6.67572021484375e-05, -0.0002579663705546409, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -0.0004787445068359375, -3.814697265625e-06, -5.7220458984375e-06, -0.015582084655761719, -0.0012722015380859375, -0.00012969970703125, 0.0, -0.000125885009765625, -1.9073486328125e-06, -3.886161357513629e-05, 0.0, -1.728534698486328e-05, 0.0, -0.0008487701416015625, -3.814697265625e-05, -3.62396240234375e-05, -4.029192859889008e-05, -8.45193862915039e-05, -2.5510591513011605e-05, -9.5367431640625e-06, -0.00023496006906498224, -0.0001239776611328125, -1.52587890625e-05, -2.09808349609375e-05, -0.001699819345958531, -5.91278076171875e-05, -5.14984130859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001010894775390625, -5.960462772236497e-07, -0.0014705657958984375, 0.0, -5.7220458984375e-06, -3.4332275390625e-05, -7.62939453125e-06, -7.43865966796875e-05, -1.52587890625e-05, -5.841255187988281e-06, -0.0008087158203125, -1.9073486328125e-06, -9.34600830078125e-05, -0.0016050338745117188, -0.0005359649658203125, -0.00372922420501709, 0.0, -0.00016021728515625, -1.9073486328125e-06, -0.0001201629638671875, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -0.0002484321594238281, -1.1444091796875e-05, -0.0006656646728515625, -2.3841855067985307e-07, -0.00032687163911759853, -3.2305710192304105e-05, -0.0020160675048828125, -2.09808349609375e-05, -3.8623809814453125e-05, -3.814697265625e-06, -3.814697265625e-06, -8.0108642578125e-05, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0011272430419921875, -2.1219253540039062e-05, -1.311301275563892e-06, -0.0020198822021484375, -5.7220458984375e-06, -1.9073486328125e-06, -1.71661376953125e-05, -0.0003108978271484375, -6.67572021484375e-05, -3.814697265625e-06, -8.7738037109375e-05, -1.33514404296875e-05, -4.9233436584472656e-05, -7.62939453125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -0.000335693359375, -1.9073486328125e-06, -1.1444091796875e-05, -1.7881393432617188e-05, -9.34600830078125e-05, -5.7220458984375e-06, -0.0011138916015625, -0.0001392364501953125, -0.001161856227554381, -0.00038564199348911643, -0.0003490447998046875, -1.9073486328125e-06, -7.2479248046875e-05, -0.0006618499755859375, -0.0002002716064453125, 0.0, -0.0001163482666015625, 0.0, -6.008148193359375e-05, 0.0, -0.0016831159591674805, 0.0], "score": -0.07559055520394509}]}
{"index": 45, "beams": [{"inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"hole1": "PALADIN", "hole0": "Hand of Protection", "_type": "Template25", "hole2": "FREE"}, "_type": "Expr"}], "name": "__init__"}, {"args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}, {"value": {"value": true, "_type": "NameConstant"}, "_type": "Assign", "targets": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "divine_shield"}]}], "name": "use"}], "name": "HandOfProtection"}]}, "choice_history": [80, 159, 295, 88, 138, "Hand", "Of", "Protection", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 23, 201, "Hand", " ", "of", " ", "Protection", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 20, 161, "True", "<EOS>"], "score_history": [-5.7220458984375e-05, -5.53131103515625e-05, -5.53131103515625e-05, -0.0005741119384765625, -0.000286102294921875, -7.152301259338856e-05, -0.0006035225233063102, -6.54440009384416e-05, -1.5258699932019226e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000637054443359375, -1.072883515007561e-05, -7.498260674765334e-05, -0.000186920166015625, -0.001129150390625, -1.9073486328125e-06, -0.00024223275249823928, 0.0, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -0.00016999244689941406, -1.9073486328125e-06, -0.00083160400390625, -1.1444091796875e-05, -0.0002899169921875, -0.03066539764404297, -0.035892486572265625, -0.00011729506513802335, -0.0025080761406570673, -0.00034661006066016853, -1.4185905456542969e-05, -0.00010108929564012215, -5.7220458984375e-05, -0.055635303258895874, -1.71661376953125e-05, -0.011965751647949219, -3.576278118089249e-07, -0.11045265197753906, -1.9073486328125e-06, -0.00055694580078125, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -2.47955322265625e-05, -3.0517578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, -9.894371032714844e-06, -3.9934315282152966e-05, -0.005069732666015625, -4.00543212890625e-05, -9.5367431640625e-06, -0.0004291534423828125, -2.288818359375e-05, -1.1444091796875e-05, -2.288818359375e-05, -9.34600830078125e-05, -1.71661376953125e-05, -6.520748138427734e-05, 0.0, -2.86102294921875e-05, -2.288818359375e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -0.00440216064453125, -1.835809598560445e-05, -0.0065746307373046875, -0.0003070831298828125, -0.001743316650390625, -0.014788627624511719, -2.6702880859375e-05, -0.006024360656738281, -0.000125885009765625, -0.0015411376953125, 0.0, -0.0002117156982421875, -3.814697265625e-06, -0.00080108642578125, -2.8729431505780667e-05, -0.01854199543595314, -7.748603820800781e-06, -0.011651039123535156, -0.00081634521484375, -0.0003067239886149764, -2.384185791015625e-06], "score": -0.3277873654341761}]}
{"index": 46, "beams": [{"inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}, "args": [{"s": "Healing Totem", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}, {"value": true, "_type": "NameConstant"}, {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "TOTEM"}], "_type": "Call"}, "_type": "Expr"}], "name": "__init__"}, {"hole7": [{"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}], "hole0": 0, "hole2": "TurnEnded", "hole5": "MinionSelector", "hole3": "Heal", "hole1": 2, "_type": "Template1", "hole4": [{"n": 1, "_type": "Num"}]}], "name": "HealingTotem"}]}, "choice_history": [80, 159, 295, 88, 138, "Healing", "Totem", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 287, 48, 169, "Healing", " ", "Totem", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 46, 161, "False", "<EOS>", 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 96, 177, "0", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 282, 47, 165, "1", "<EOS>", "Minion", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 20, 162, "Null", "<EOS>"], "score_history": [0.0, -9.34600830078125e-05, -7.62939453125e-06, -0.00017547607421875, 0.0, -3.135155202471651e-05, -0.00020705162023659796, -9.536738616588991e-07, -7.62939453125e-05, 0.0, 0.0, -2.872943878173828e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.57763671875e-05, -0.000949859619140625, -5.7220458984375e-06, -4.410743713378906e-05, -1.9073486328125e-06, -2.288818359375e-05, -1.52587890625e-05, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -2.09808349609375e-05, -2.288818359375e-05, -3.24249267578125e-05, -0.0008411407470703125, -3.0517578125e-05, 0.0, -7.62939453125e-05, -5.7220458984375e-06, -3.8980677345534787e-05, -1.9073486328125e-06, -0.000278472900390625, 0.0, -0.0010900497436523438, -1.9073486328125e-05, -1.9073486328125e-05, -0.00010823617776622996, -2.002716064453125e-05, -5.829324072692543e-05, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, -0.0010229824110865593, -7.62939453125e-06, -0.009307861328125, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.0004062652587890625, -1.1920928244535389e-07, -0.000156402587890625, 0.0, -0.0003643035888671875, 0.0, -1.1444091796875e-05, 0.0, -9.5367431640625e-05, -9.5367431640625e-06, -0.00075531005859375, -2.09808349609375e-05, -0.007861137390136719, -0.00078582763671875, -0.0004119873046875, 0.0, -1.9073486328125e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0017108917236328125, 0.0, -0.0016803741455078125, -3.933906555175781e-06, -0.0038003921508789062, -0.020275115966796875, -2.133839370799251e-05, 0.0, -0.0001776063145371154, 0.0, -0.0014060735702514648, -6.29425048828125e-05, -1.1444091796875e-05, -0.004317522048950195, -6.4849853515625e-05, -2.47955322265625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.000326611683703959, -1.71661376953125e-05, -0.0050029754638671875, -0.00023651123046875, 0.0, -3.24249267578125e-05, -4.9591064453125e-05, 0.0, -0.02906930446624756, -2.503394853192731e-06, -0.000194549560546875, -0.0001506805419921875, -0.001308441162109375, -1.33514404296875e-05], "score": -0.09570168249342004}]}
{"index": 47, "beams": [{"inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}, "args": [{"s": "Healing Touch", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "arg": "target_func", "_type": "keyword"}]}, "_type": "Expr"}], "name": "__init__"}, {"hole1": "heal", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "args": [{"n": 8, "_type": "Num"}], "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "name": "HealingTouch"}]}, "choice_history": [80, 159, 295, 88, 138, "Healing", "Touch", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Healing", " ", "Touch", "<EOS>", 47, 165, "3", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 283, 40, 136, 11, 129, 19, 160, "player", "<EOS>", "effective_heal_power", "<EOS>", 282, 47, 165, "8", "<EOS>", 45, 160, "self", "<EOS>"], "score_history": [-1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, -3.814697265625e-05, -1.1444091796875e-05, -1.1920922133867862e-06, -0.00011574551899684593, -2.7417760065873154e-05, -2.288818359375e-05, 0.0, 0.0, -3.2782554626464844e-05, -1.5735626220703125e-05, -9.000301361083984e-05, -5.53131103515625e-05, -0.0014410018920898438, 0.0, -7.843971252441406e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.971027374267578e-05, -5.7220458984375e-06, -6.4849853515625e-05, -9.5367431640625e-06, -3.814697265625e-05, -0.00337982177734375, -0.0002040863037109375, -2.288818359375e-05, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -4.88758041683468e-06, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.0008563995361328125, -2.47955322265625e-05, -1.9073486328125e-06, -4.6491513785440475e-06, -6.270408630371094e-05, -2.9802317840221804e-06, -9.34600830078125e-05, -4.9591064453125e-05, -1.33514404296875e-05, -0.00010775935515994206, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.00057220458984375, -3.814697265625e-06, -6.520748138427734e-05, -1.1920928244535389e-07, -0.001140594482421875, 0.0, -3.4332275390625e-05, -5.7220458984375e-06, -5.7220458984375e-05, -0.0001678466796875, -3.4332275390625e-05, 0.0, -0.0009212493896484375, -1.9073486328125e-05, -1.52587890625e-05, -7.2479248046875e-05, -3.814697265625e-05, -0.00021386146545410156, 0.0, -8.20159912109375e-05, -3.814697265625e-06, -0.00102996826171875, -5.7220458984375e-06, -1.52587890625e-05, -9.5367431640625e-06, -0.00029969215393066406, -3.814697265625e-06, -2.288818359375e-05, -2.2649765014648438e-06, -0.004279254004359245, -0.0010097010526806116, -0.0024890899658203125, -0.0013256072998046875, -3.62396240234375e-05, -0.000102996826171875, -4.76837158203125e-05, 0.0, -0.0008373260498046875, -3.814697265625e-06, -0.0001354217529296875, -4.1961669921875e-05, -0.01054680161178112, -9.262561070499942e-05, -0.005153656005859375, -0.0002536773681640625, -1.33514404296875e-05, -0.010646820068359375, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -2.682209014892578e-05, 0.0, -0.000947117805480957, -1.33514404296875e-05, -0.000194549560546875, 0.0, -3.4332275390625e-05, -0.0005410422454588115, -0.00020396432955749333, -0.0004901885986328125, -8.96453857421875e-05, -0.0018428564071655273, -0.0011725425720214844], "score": -0.054593731718561855}]}
{"index": 48, "beams": [{"inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}, "args": [{"s": "Hex", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}]}, "_type": "Expr"}], "name": "__init__"}, {"args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"value": {"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Attribute", "attr": "Frog"}, "_type": "Attribute", "attr": "Frog"}, "_type": "Call"}, "_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}]}, {"value": {"func": {"value": {"id": "frog", "_type": "Name"}, "_type": "Attribute", "attr": "create_minion"}, "args": [{"value": "Null", "_type": "NameConstant"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"value": {"id": "frog", "_type": "Name"}, "_type": "Assign", "targets": [{"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "card"}]}, {"value": {"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "<UNK>"}, "args": [{"id": "minion", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}], "name": "use"}], "name": "Hex"}]}, "choice_history": [80, 159, 295, 88, 138, "Hex", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Hex", "<EOS>", 47, 165, "3", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 299, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "frog", "<EOS>", 14, 134, 11, 129, 11, 129, 11, 129, 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", "Frog", "<EOS>", 85, 128, 282, 45, 160, "minion", "<EOS>", 14, 136, 11, 129, 19, 160, "frog", "<EOS>", "create_minion", "<EOS>", 282, 46, 162, "Null", "<EOS>", 85, 128, 282, 37, 129, 19, 160, "minion", "<EOS>", "card", "<EOS>", 19, 160, "frog", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 282, 45, 160, "minion", "<EOS>"], "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -5.340576171875e-05, -7.43865966796875e-05, -5.7220458984375e-06, -0.0037060168106108904, -0.00044241605792194605, -0.0001811981201171875, 0.0, -2.09808349609375e-05, -0.0006660223007202148, -4.172325134277344e-06, -1.1563301086425781e-05, -3.814697265625e-05, -0.0012941360473632812, -3.814697265625e-06, -8.881048415787518e-05, -2.503394853192731e-06, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.0001888275146484375, -1.9073486328125e-05, -1.52587890625e-05, -0.0007381439208984375, -0.000225067138671875, -8.7738037109375e-05, -5.340576171875e-05, -0.000255584716796875, -0.0002079010009765625, -0.0002264745271531865, -3.099440846199286e-06, -6.735312490491197e-05, -1.1920928244535389e-07, -0.0001201629638671875, -2.86102294921875e-05, -7.62939453125e-06, -9.536738616588991e-07, -4.720687138615176e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.00018117620493285358, -6.198883056640625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -3.254413604736328e-05, -2.3841855067985307e-07, -0.0001697540283203125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -0.0001964569091796875, -8.106231689453125e-06, -2.2649765014648438e-06, -0.0008296966552734375, -3.814697265625e-06, -0.0002269744873046875, -0.005382537841796875, -7.62939453125e-05, -0.0004067420959472656, -1.9073486328125e-06, -0.0001888275146484375, -2.6702880859375e-05, -7.62939453125e-05, -5.7220458984375e-06, -3.4332275390625e-05, -7.62939453125e-06, -0.0002939700207207352, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -0.006026980001479387, -0.0001666545867919922, -0.0032339096069335938, -1.52587890625e-05, -5.352497100830078e-05, -3.24249267578125e-05, -3.0517578125e-05, -2.47955322265625e-05, 0.0, -2.1219253540039062e-05, -1.9073486328125e-06, 0.0, -9.894371032714844e-06, 0.0, -6.4849853515625e-05, -0.004996180534362793, -3.933898824470816e-06, -0.056369781494140625, -1.1444091796875e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.71661376953125e-05, -0.0002269744873046875, -3.814697265625e-06, -6.67572021484375e-05, -5.14984130859375e-05, -9.286397835239768e-05, -1.3470649719238281e-05, -5.14984130859375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.33514404296875e-05, -7.867813110351562e-06, 0.0, -9.5367431640625e-06, -1.52587890625e-05, -0.0001811981201171875, -7.033347174001392e-06, -0.0034589767456054688, -7.62939453125e-06, -1.9073486328125e-05, -0.021079063415527344, -3.814697265625e-05, -0.4489065408706665, -1.1920928244535389e-07, -0.016757965087890625, -0.000823974609375, -4.1961669921875e-05, -1.9073486328125e-06, -3.24249267578125e-05, -7.62939453125e-06, -8.96453857421875e-05, 0.0, -0.00128936767578125, -1.9073486328125e-06, -0.2784290313720703, 0.0, -0.010328292846679688, -0.0002841949462890625, -0.0029308428056538105, -3.3378546504536644e-06, -0.0042266845703125, -5.960462772236497e-07, -0.0025932644493877888, -7.581710087833926e-05, -0.0052115111611783504, -0.0015530440723523498, -0.027014313265681267, -0.00012385842273943126, -0.3667241632938385, -5.0067901611328125e-05, -0.00078582763671875, -0.0001506805419921875, -1.9073486328125e-05, -0.003406524658203125, -1.9073486328125e-05, -0.31407999992370605, -4.5299530029296875e-06, -0.0008554458618164062, -0.034523963928222656, -3.4332275390625e-05, -6.4849853515625e-05, -0.00858306884765625, 0.0, -0.2840225398540497, -1.9073486328125e-06, -0.0055828094482421875, -2.682209014892578e-05, -0.000293731689453125, -0.00661468505859375, -0.00026702880859375, -0.00016438942111562937, -5.7220458984375e-06, -0.0006961822509765625, -0.0009613037109375, -7.62939453125e-06, -0.0005931854248046875, -0.00049591064453125, -4.00543212890625e-05, -2.6702880859375e-05, -0.06268966197967529, -9.930133819580078e-05, -0.028644442558288574, -0.0001163482666015625, -0.0016412734985351562, -9.5367431640625e-06, -0.33869755268096924, 0.0, -0.008937835693359375, 0.0, -0.0059814453125, -0.019193649291992188, -1.33514404296875e-05, -1.9073486328125e-06, -0.004364013671875, -5.7220458984375e-06, -0.016180038452148438, -1.1444091796875e-05, -0.0028920171316713095, -0.0001316070556640625, -0.0007266998291015625, -3.814697265625e-06, -0.0015213489532470703, -3.218649908376392e-06, -0.00032806396484375, -0.0034160614013671875, -1.9073486328125e-06, -0.0649186372756958, -1.919269561767578e-05], "score": -2.504148533209232}]}
{"index": 49, "beams": [{"inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}, "args": [{"s": "Holy Light", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "arg": "target_func", "_type": "keyword"}]}, "_type": "Expr"}], "name": "__init__"}, {"hole1": "heal", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "args": [{"n": 6, "_type": "Num"}], "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "name": "HolyLight"}]}, "choice_history": [80, 159, 295, 88, 138, "Holy", "Light", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Holy", " ", "Light", "<EOS>", 47, 165, "2", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 283, 40, 136, 11, 129, 19, 160, "player", "<EOS>", "effective_heal_power", "<EOS>", 282, 47, 165, "6", "<EOS>", 45, 160, "self", "<EOS>"], "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.0517578125e-05, -3.814697265625e-06, -8.344646857949556e-07, -7.510183422709815e-06, -2.3841855067985307e-07, -0.0001010894775390625, -1.9073486328125e-06, -1.9073486328125e-06, -7.68899917602539e-05, -3.635883331298828e-05, -0.00010895729064941406, -4.9591064453125e-05, -0.0040683746337890625, -1.9073486328125e-06, -4.38690185546875e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -7.43865966796875e-05, -7.62939453125e-06, -4.1961669921875e-05, -0.000797271728515625, -0.0002288818359375, -1.1444091796875e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -4.172325134277344e-06, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.0012912750244140625, -1.1444091796875e-05, 0.0, -1.883488948806189e-05, -2.884860077756457e-05, -3.4689903259277344e-05, -0.000213623046875, -0.0001049041748046875, -2.288818359375e-05, -0.0003460152365732938, -6.127357482910156e-05, -0.0026569366455078125, -1.9073486328125e-06, -0.0011425018310546875, -1.9073486328125e-06, -0.0003014802932739258, -4.768370445162873e-07, -0.000591278076171875, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0001010894775390625, -6.103515625e-05, -4.9591064453125e-05, 0.0, -0.0009765625, -2.47955322265625e-05, -2.09808349609375e-05, -7.82012939453125e-05, -2.47955322265625e-05, -0.0011731386184692383, -1.9073486328125e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.027785301208496094, -1.9073486328125e-06, -2.6702880859375e-05, -1.71661376953125e-05, -0.00016415119171142578, -7.62939453125e-06, -1.9073486328125e-05, -4.5299530029296875e-06, -0.00474047614261508, -0.0017757402965798974, -0.000904083251953125, -0.0026035308837890625, -0.0004425048828125, 0.0, -5.14984130859375e-05, 0.0, -0.0005990266799926758, -2.09808349609375e-05, -0.000194549560546875, -0.0001430511474609375, -0.010898232460021973, -0.0001475811004638672, -0.0017414093017578125, -6.866455078125e-05, -1.1444091796875e-05, -0.004329681396484375, -1.1444091796875e-05, -7.62939453125e-05, 0.0, -0.00016021728515625, 0.0, -0.0008639097213745117, -8.213520050048828e-05, -7.05718994140625e-05, -1.9073486328125e-06, -2.09808349609375e-05, -0.0012366297887638211, -0.00023424625396728516, -0.0002899169921875, -0.000308990478515625, -0.004313826560974121, -0.0038323402404785156], "score": -0.08347119953165816}]}
{"index": 50, "beams": [{"inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.heal(player.effective_heal_power(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Holy Nova", "_type": "Template15", "hole2": "PRIEST"}, {"args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}, {"iter": {"func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"value": {"func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "heal"}, "args": [{"func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "args": [{"n": 2, "_type": "Num"}], "_type": "Call"}, {"id": "self", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}]}, {"iter": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}, "target": {"id": "minion", "_type": "Name"}, "_type": "For", "body": [{"value": {"func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "heal"}, "args": [{"func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "args": [{"n": 2, "_type": "Num"}], "_type": "Call"}, {"id": "self", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}]}], "name": "use"}], "name": "HolyNova"}]}, "choice_history": [80, 159, 295, 88, 138, "Holy", "Nova", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 101, 184, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "heal", "<EOS>", 283, 40, 136, 11, 129, 19, 160, "player", "<EOS>", "effective_heal_power", "<EOS>", 282, 47, 165, "2", "<EOS>", 45, 160, "self", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 11, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "heal", "<EOS>", 283, 40, 136, 11, 129, 19, 160, "player", "<EOS>", "effective_heal_power", "<EOS>", 282, 47, 165, "2", "<EOS>", 45, 160, "self", "<EOS>"], "score_history": [-5.7220458984375e-06, -4.1961669921875e-05, -9.5367431640625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -7.152555099310121e-07, -8.106222594506107e-06, -2.9802276912960224e-06, -0.000286102294921875, 0.0, -3.814697265625e-06, -7.081031799316406e-05, -6.67572021484375e-05, -5.7220458984375e-06, -0.0001068115234375, -0.000820159912109375, -4.38690185546875e-05, -1.764281842042692e-05, -1.8358225133852102e-05, -2.1457672119140625e-06, -9.5367431640625e-06, -1.358979079668643e-05, -1.1920928244535389e-07, -0.0006277561187744141, -0.0003644227981567383, -0.009919166564941406, -5.7220458984375e-06, -0.0004597902297973633, 0.0, -5.7220458984375e-06, -4.00543212890625e-05, -3.814697265625e-06, 0.0, 0.0, 0.0, -2.110004425048828e-05, 0.0, -3.62396240234375e-05, -6.4373016357421875e-06, -2.9802317840221804e-06, -0.031905174255371094, -3.24249267578125e-05, -1.1444091796875e-05, -1.33514404296875e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.4332275390625e-05, -4.57763671875e-05, -1.71661376953125e-05, 0.0, -5.7220458984375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -8.96453857421875e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.841255187988281e-06, -0.0050106048583984375, -7.05718994140625e-05, -0.0003299713134765625, -3.814697265625e-06, -0.0007655620574951172, 0.0, -0.5578241348266602, -4.57763671875e-05, -0.0010089874267578125, -1.1444091796875e-05, -0.0002231597900390625, -3.814697265625e-06, -0.0008068084716796875, -3.814697265625e-05, -0.0014858245849609375, -2.47955322265625e-05, -0.000102996826171875, -0.0001850128173828125, 0.0, -0.0005741119384765625, -2.6702880859375e-05, -0.000457763671875, -1.9073486328125e-06, -4.971027374267578e-05, -2.0265579223632812e-06, -0.0010510683059692383, -1.9073486328125e-06, -0.0012773240450769663, -0.000194549560546875, -0.0016326904296875, -0.0001983642578125, -3.814697265625e-06, -1.9073486328125e-05, -7.62939453125e-06, -0.0001888275146484375, 0.0, -4.57763671875e-05, 0.0, -0.00060272216796875, -1.9073486328125e-06, -0.5971393585205078, -7.62939453125e-06, -0.0001659393310546875, -0.060161590576171875, -0.0001926422119140625, -0.000118255615234375, -0.00012969970703125, -5.7220458984375e-06, 0.0, -0.020778775215148926, 0.0, -0.0023963451385498047, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -0.000110626220703125, -3.336835652589798e-05, -1.9073486328125e-06, -0.0012760162353515625, -1.52587890625e-05, -0.0632781982421875, -9.5367431640625e-06, -0.013324737548828125, -0.003482818603515625, -0.000385284423828125, -1.9073486328125e-06, -7.450580596923828e-05, 0.0, -0.00022125244140625, 0.0, -0.04712867736816406, -1.9073486328125e-06, -0.004978179931640625, 0.0, -0.005455970764160156, -1.9073486328125e-06, -2.288818359375e-05, -7.62939453125e-05, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -2.09808349609375e-05, 0.0, -0.0001277923583984375, -1.9073486328125e-06, -0.00016808509826660156, -1.9073486328125e-06, -0.0067397356033325195, -3.814697265625e-06, -0.0005950927734375, -0.03803825378417969, -0.00018310546875, -0.0001506805419921875, -0.0002593994140625, -1.1444091796875e-05, 0.0, -0.0038661956787109375, 0.0, -0.0019818544387817383, -1.9073486328125e-06, -2.47955322265625e-05, -2.6702880859375e-05, -0.0001068115234375, -3.9268285036087036e-05, -1.9073486328125e-06, -0.0009174346923828125, -3.4332275390625e-05, -0.06303048133850098, -9.5367431640625e-06], "score": -1.5570097314077813}]}
{"index": 51, "beams": [{"inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}, "args": [{"s": "Holy Smite", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "arg": "target_func", "_type": "keyword"}]}, "_type": "Expr"}], "name": "__init__"}, {"hole1": "target", "hole0": {"id": "self", "_type": "Name"}, "_type": "Template0", "hole2": [{"n": 2, "_type": "Num"}]}], "name": "HolySmite"}]}, "choice_history": [80, 159, 295, 88, 138, "Holy", "Smite", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Holy", " ", "Smite", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "2", "<EOS>"], "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -1.1444091796875e-05, -2.47955322265625e-05, -3.814697265625e-06, -3.576272320060525e-06, -5.125993993715383e-06, -1.311301275563892e-06, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -2.8967857360839844e-05, -7.653236389160156e-05, -5.352497100830078e-05, -5.53131103515625e-05, -0.0020704269409179688, 0.0, -3.314018249511719e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -7.641315460205078e-05, -1.9073486328125e-06, -0.0001354217529296875, -7.62939453125e-06, -2.6702880859375e-05, -0.03570270538330078, -0.0008697509765625, -2.47955322265625e-05, -1.9073486328125e-06, -3.62396240234375e-05, -7.62939453125e-06, -2.9802276912960224e-06, 0.0, -3.4332275390625e-05, 0.0, -0.0006961822509765625, -2.288818359375e-05, 0.0, -2.13382354559144e-05, -1.20401346066501e-05, -4.0531158447265625e-06, -4.1961669921875e-05, -3.62396240234375e-05, -5.14984130859375e-05, -5.8407895267009735e-06, -2.6702880859375e-05, -0.0001678466796875, 0.0, -0.000362396240234375, -1.9073486328125e-06, -0.0003681182861328125, -1.1920928244535389e-07, -0.0010890960693359375, 0.0, -9.5367431640625e-06, 0.0, -0.0001773834228515625, -3.814697265625e-06, -0.0002002716064453125, 0.0, -0.0008335113525390625, -3.24249267578125e-05, -7.62939453125e-06, -0.0002880096435546875, -0.0001125335693359375, -0.0008585453033447266, -1.1920928244535389e-07, -7.62939453125e-05, 0.0, -4.38690185546875e-05, 0.0, -9.5367431640625e-05, -7.62939453125e-06, -0.0005385875701904297, -9.5367431640625e-06, -0.0001964569091796875, -2.0265579223632812e-06, -0.0008616447448730469, -9.477099229115993e-05, -0.001102447509765625, -0.0001697540283203125, -0.0011234283447265625, 0.0, -0.00030040740966796875, -5.7220458984375e-06, -0.000301361083984375, -1.9073486328125e-06, -6.103515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.118665285408497e-06, 0.0], "score": -0.04981540789502503}]}
{"index": 52, "beams": [{"inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole7": "battlecry", "hole0": "Houndmaster", "hole8": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"hole0": "ChangeHealth", "hole2": "ChangeAttack", "hole3": 2, "hole1": [{"n": 2, "_type": "Num"}], "_type": "Template30", "hole4": [{"hole1": "Taunt", "hole0": "Buff", "_type": "Template69"}]}, {"func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"func": {"id": "IsType", "_type": "Name"}, "args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Call"}], "_type": "Call", "keywords": [{"value": {"hole0": "UserPicker", "_type": "Template77"}, "arg": "picker", "_type": "keyword"}]}], "_type": "Call"}, "hole2": "HUNTER", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole3": "FREE", "hole1": 4, "hole6": "<UNK>", "_type": "Template9", "hole4": "minion_type"}, {"hole1": 3, "hole0": 4, "_type": "Template27"}], "name": "Houndmaster"}]}, "choice_history": [80, 159, 295, 88, 138, "Houndmaster", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 51, 205, "Change", "Health", "<EOS>", 282, 47, 165, "2", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 282, 61, 250, "Buff", "<EOS>", "Taunt", "<EOS>", 40, 137, 19, 160, "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "4", "<EOS>", "3", "<EOS>"], "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-05, -0.0025804101023823023, -3.337859743623994e-05, -1.9073486328125e-06, 0.0, 0.0, -2.503394853192731e-06, -0.000225067138671875, -2.503394853192731e-06, -0.0002689361572265625, -0.0065708160400390625, -0.0001678466796875, -7.64102369430475e-05, -1.52587890625e-05, -0.0029336337465792894, 0.0, -0.0004858970642089844, -7.62939453125e-06, -0.01767253875732422, -1.9073486328125e-06, -0.0028764009475708008, 0.0, -0.0008182525634765625, -3.814697265625e-06, -0.0003871917724609375, 0.0, -0.10353660583496094, -1.1920928244535389e-07, -0.009375214576721191, 0.0, -0.0031175613403320312, -1.71661376953125e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.0017548799514770508, 0.0, -9.5367431640625e-06, -0.16207504272460938, -0.005428314208984375, -0.0009237527847290039, -0.020040512084960938, -3.4332275390625e-05, -5.7220458984375e-06, -1.71661376953125e-05, -7.62939453125e-06, -0.00041388830868527293, -1.9073486328125e-06, -0.0008070468902587891, -0.02104949951171875, -4.1961669921875e-05, -0.00016856190632097423, -1.1444091796875e-05, -0.0001010894775390625, -0.008665084838867188, -3.814697265625e-06, -0.000743865966796875, -5.841247457283316e-06, -0.0017492033075541258, -3.767002635868266e-05, -1.33514404296875e-05, -0.013692855834960938, -7.62939453125e-06, 0.0, -0.0011386871337890625, -5.91278076171875e-05, 0.0, -0.0001583099365234375, -0.0001888275146484375, -8.0108642578125e-05, -3.24249267578125e-05, -0.000217437744140625, -0.021842122077941895, -0.00023877619241829962, 0.0, -4.1961669921875e-05, 0.0, 0.0, -0.000202178955078125, -3.814697265625e-06, -5.91278076171875e-05, -3.933906555175781e-06, -0.0011005401611328125, 0.0, -0.0003871917724609375, -0.000209808349609375, -1.52587890625e-05, -0.0003509521484375, 0.0, -0.010152816772460938, -7.62939453125e-06, -0.0026924610137939453, -7.04526828485541e-05, 0.0, -0.0003414154052734375, -1.1444091796875e-05, -0.0003079899470321834, -1.9073486328125e-06, -0.00018858423572964966, 0.0], "score": -0.42914927246874157}]}
{"index": 53, "beams": [{"inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}, "args": [{"s": "Huffer", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Call", "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}]}, "_type": "Expr"}], "name": "__init__"}, {"hole3": {"value": true, "_type": "NameConstant"}, "hole1": 2, "hole0": 4, "_type": "Template23", "hole2": "charge"}], "name": "Huffer"}]}, "choice_history": [80, 159, 295, 88, 138, "Huffer", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 286, 48, 169, "Huffer", "<EOS>", 47, 165, "3", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 46, 161, "False", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -6.103515625e-05, -1.52587890625e-05, -5.6503606174374e-05, -3.1232637411449105e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -5.53131103515625e-05, -8.7738037109375e-05, -0.000274658203125, -0.0025272369384765625, -5.7220458984375e-06, -0.0003192424774169922, -1.1444091796875e-05, -3.814697265625e-05, -1.33514404296875e-05, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.000148773193359375, -0.0001010894775390625, -7.05718994140625e-05, 0.0, -5.91278076171875e-05, 0.0, -2.5510777049930766e-05, 0.0, -8.988380432128906e-05, -1.9073486328125e-06, -0.0749216079711914, -3.814697265625e-06, -2.86102294921875e-05, -1.0251946150674485e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.33514404296875e-05, -0.0005216221907176077, -7.522106170654297e-05, -1.33514404296875e-05, 0.0, -6.866455078125e-05, 0.0, -7.867813110351562e-06, -7.152555099310121e-07, -0.0007441043853759766, -3.62396240234375e-05, -3.0517578125e-05, 0.0, -1.33514404296875e-05, -0.000293731689453125, -2.300739288330078e-05, -2.1457672119140625e-06, -0.00212860107421875, -3.0517578125e-05, -0.00046539306640625, -1.33514404296875e-05, -3.814697265625e-05, -3.814697265625e-06, -0.003692626953125, -4.1961669921875e-05, -7.62939453125e-06, -1.1563301086425781e-05, -0.0002574920654296875, -0.000591278076171875, -2.6702880859375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -7.82012939453125e-05, -1.537799835205078e-05, -0.0001659393310546875, -0.002320885192602873, -0.09209442138671875, -2.86102294921875e-05, -0.00039517879486083984, -1.9073486328125e-06, -0.0001680848654359579, 0.0, -0.005114673171192408, -2.09808349609375e-05, -0.0004253387451171875, -1.71661376953125e-05, -5.924701690673828e-05, -1.9073486328125e-06], "score": -0.18920989643606134}]}
{"index": 54, "beams": [{"inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Humility", "_type": "Template3", "hole2": "PALADIN"}, {"hole1": "change_attack", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"right": {"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_attack"}, "_type": "Call"}, "left": {"n": 1, "_type": "Num"}, "_type": "BinOp", "op": {"_type": "Sub"}}]}], "name": "Humility"}]}, "choice_history": [80, 159, 295, 88, 138, "Humility", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 111, 204, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 282, 38, 131, 21, 165, "1", "<EOS>", 82, 14, 134, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "score_history": [-8.96453857421875e-05, -0.0001926422119140625, -0.0001163482666015625, -1.52587890625e-05, -0.000118255615234375, -0.00034397884155623615, -9.024119935929775e-05, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -0.00022912025451660156, -1.52587890625e-05, -1.33514404296875e-05, -0.0003604888916015625, -0.0029392242431640625, -0.0007534027099609375, -4.7205852752085775e-05, -4.38690185546875e-05, -0.00024325656704604626, 0.0, -0.0015164613723754883, 0.0, -0.0040531158447265625, -0.0007991790771484375, -1.9073486328125e-06, 0.0, -0.000152587890625, 0.0, -2.86102294921875e-05, -5.53131103515625e-05, -0.000553131103515625, 0.0, -0.2303152084350586, -5.7220458984375e-06, -1.9073486328125e-06, -0.12126731872558594, -0.0005979537963867188, -0.003204345703125, -7.05718994140625e-05, -0.000774383544921875, 0.0, -0.012946128845214844, -0.00038242340087890625, -0.000919342041015625, -7.62939453125e-06, 0.0, -0.007068634033203125, 0.0, -0.00020599365234375, 0.0, -0.000110626220703125, -3.814697265625e-06, -0.0001087188720703125, 0.0, -0.004943966865539551, -3.814697265625e-06], "score": -0.3957351538047078}]}
{"index": 55, "beams": [{"inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "<UNK> Mark", "_type": "Template3", "hole2": "HUNTER"}, {"hole1": "set_health_to", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"n": 1, "_type": "Num"}]}], "name": "<UNK>Mark"}]}, "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Mark", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 111, 204, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 282, 47, 165, "1", "<EOS>"], "score_history": [-5.7220458984375e-06, -0.0001087188720703125, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -0.002220815047621727, -0.0003626880934461951, -2.3841830625315197e-06, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -0.00039505958557128906, -1.52587890625e-05, -1.1801719665527344e-05, -0.0003223419189453125, -0.0066967010498046875, -0.000415802001953125, -0.0002838355430867523, -3.0517578125e-05, -5.006785613659304e-06, -1.9073486328125e-05, -0.000627687550149858, -1.9073486328125e-06, -5.602836608886719e-05, -3.814697265625e-06, -0.0019664764404296875, -0.00122833251953125, -1.9073486328125e-05, 0.0, -2.47955322265625e-05, 0.0, -9.5367431640625e-06, -6.4849853515625e-05, -0.0002269744873046875, 0.0, -0.8887534141540527, -5.841255187988281e-06, 0.0, -0.002628326416015625, -1.9073486328125e-06, -0.001075603999197483, 0.0], "score": -0.9076475173569634}]}
{"index": 56, "beams": [{"inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole7": "battlecry", "hole0": "Ironforge Rifleman", "hole8": {"hole1": "CharacterSelector", "hole0": 1, "_type": "Template56", "hole2": [{"value": {"hole0": "BothPlayer", "_type": "Template77"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template77"}, "arg": "picker", "_type": "keyword"}]}, "hole2": "ALL", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole3": "COMMON", "hole1": 3, "hole6": "<UNK>", "_type": "Template9", "hole4": "minion_type"}, {"hole1": 2, "hole0": 2, "_type": "Template27"}], "name": "IronforgeRifleman"}]}, "choice_history": [80, 159, 295, 88, 138, "Ironforge", "Rifleman", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 27, 232, "1", "<EOS>", "Character", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "2", "<EOS>", "2", "<EOS>"], "score_history": [0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -8.940656698541716e-06, -3.0397963200812228e-05, -1.5973946574376896e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -7.152553962441743e-07, -0.0002652406692504883, -4.291525328881107e-06, -1.33514404296875e-05, -0.0820455551147461, -0.00025177001953125, -0.00011598391574807465, -1.3470642443280667e-05, -2.443764969939366e-05, -1.9073486328125e-06, -1.1205610462639015e-05, -2.3841855067985307e-07, -5.7578086853027344e-05, -3.814697265625e-06, -0.0005685091018676758, 0.0, -0.0013810396194458008, -1.9073486328125e-06, -0.0005035400390625, 0.0, -0.0002765655517578125, -5.7220458984375e-06, -0.003926277160644531, 0.0, -0.005156517028808594, 0.0, -0.0021200180053710938, -0.005198478698730469, -0.0003164820373058319, -1.52587890625e-05, -0.002964019775390625, -3.62396240234375e-05, 0.0, -0.0002956390380859375, -0.0007457733154296875, -0.0002956390380859375, -0.003916382789611816, -3.814697265625e-06, -3.4332275390625e-05, -9.5367431640625e-06, -0.0009326934814453125, -0.0005609989166259766, -1.71661376953125e-05, -0.0021276473999023438, -5.53131103515625e-05, -0.0012903213500976562, 0.0, -0.001373291015625, -0.000217437744140625, -0.0007381439208984375, -0.00015294551849365234, -1.9073486328125e-06, -0.00371551513671875, -2.6702880859375e-05, -5.030501779401675e-05, -2.2649765014648438e-06, -3.9220001781359315e-05, -1.9073486328125e-06], "score": -0.12197849396270044}]}
{"index": 57, "beams": [{"inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole0": "Ironfur Grizzly", "hole2": "ALL", "hole3": "minion_type", "hole1": 3, "_type": "Template11", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}}, {"hole3": {"value": true, "_type": "NameConstant"}, "hole1": 3, "hole0": 3, "_type": "Template23", "hole2": "taunt"}], "name": "IronfurGrizzly"}]}, "choice_history": [80, 159, 295, 88, 138, "Ironfur", "Grizzly", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -6.103515625e-05, -3.814697265625e-06, -0.0013700895942747593, -3.9219088648678735e-05, -0.0001110973025788553, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -2.0265579223632812e-06, -5.7220458984375e-06, -1.1563301086425781e-05, -5.340576171875e-05, -0.013865470886230469, -3.814697265625e-05, -1.6689286894688848e-06, -1.060962586052483e-05, -7.152556463552173e-06, -9.5367431640625e-06, -2.384221261308994e-06, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -1.9550323486328125e-05, -4.00543212890625e-05, -0.000213623046875, -0.0001010894775390625, -1.33514404296875e-05, 0.0, -1.52587890625e-05, -3.814697265625e-06, -8.58306884765625e-05, -3.933906555175781e-06, -0.07211494445800781, -7.62939453125e-06, -3.7311776395654306e-05, -4.172325134277344e-06, -0.00014541775453835726, 0.0, -0.023174285888671875, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0], "score": -0.11176394659150901}]}
{"index": 58, "beams": [{"inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(5), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole0": "Kill Command", "hole2": "HUNTER", "hole3": "target_func", "hole1": 3, "_type": "Template11", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}}, {"args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, {"args": {"args": [{"arg": "x", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda", "body": {"left": {"value": {"value": {"id": "x", "_type": "Name"}, "_type": "Attribute", "attr": "card"}, "_type": "Attribute", "attr": "minion_type"}, "comparators": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Compare", "ops": [{"_type": "Is"}]}}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"body": [{"value": {"hole0": 5, "_type": "Template47"}, "_type": "Expr"}], "orelse": [{"value": {"hole0": 5, "_type": "Template47"}, "_type": "Expr"}], "_type": "If", "test": {"left": {"id": "<UNK>", "_type": "Name"}, "comparators": [{"value": "Null", "_type": "NameConstant"}], "_type": "Compare", "ops": [{"_type": "Is"}]}}], "name": "use"}], "name": "KillCommand"}]}, "choice_history": [80, 159, 295, 88, 138, "Kill", "Command", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 98, 181, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "<UNK>", "<EOS>", 14, 136, 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 283, 37, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", 42, 153, 269, 275, 268, "x", "<EOS>", 15, 139, 11, 129, 11, 129, 19, 160, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 279, 6, 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 92, 147, 15, 139, 19, 160, "<UNK>", "<EOS>", 279, 6, 282, 46, 162, "Null", "<EOS>", 295, 89, 141, 25, 223, "5", "<EOS>", 295, 89, 141, 25, 223, "5", "<EOS>"], "score_history": [-2.288818359375e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841830625315197e-06, -3.409345663385466e-05, -7.986990567587782e-06, -4.57763671875e-05, 0.0, -5.91278076171875e-05, -0.0001239776611328125, -2.2530553906108253e-05, -1.7881377516459906e-06, -4.76837158203125e-05, -0.039943695068359375, -0.000164031982421875, -7.152555099310121e-07, -1.800060272216797e-05, -5.841255187988281e-06, -5.7220458984375e-06, -2.6822088329936378e-05, -1.9073486328125e-06, -0.0005638599395751953, -1.9073486328125e-06, -0.000762939453125, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -4.00543212890625e-05, 0.0, -1.52587890625e-05, 0.0, -0.00019085407257080078, -5.7220458984375e-06, -0.0001926422119140625, 0.0, -0.004386305809020996, -9.536741345073096e-06, -0.0003299713134765625, -3.814697265625e-06, -0.0005022287368774414, 0.0, -1.71661376953125e-05, -4.38690185546875e-05, -1.9073486328125e-05, -4.589557647705078e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.5735626220703125e-05, 0.0, -5.14984130859375e-05, -1.4305092918220907e-05, -1.4305104514278355e-06, -0.3154258728027344, -4.57763671875e-05, -5.7220458984375e-05, -0.000164031982421875, -4.38690185546875e-05, -4.00543212890625e-05, 0.0, -0.0001621246337890625, -2.09808349609375e-05, -7.748603820800781e-05, -3.814697265625e-06, -6.866455078125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0001506805419921875, -2.3126602172851562e-05, -0.0035200119018554688, -3.814697265625e-06, -2.86102294921875e-05, -4.00543212890625e-05, 0.0, -0.03786063194274902, -1.621236151549965e-05, -0.000293731689453125, -0.0065784454345703125, -5.340576171875e-05, -1.9073486328125e-06, -0.000179290771484375, 0.0, -0.0022106170654296875, 0.0, -0.0008405447006225586, -2.0265579223632812e-06, -0.0007078647613525391, 0.0, -0.011727571487426758, -2.0027106074849144e-05, -0.0055637359619140625, -0.000335693359375, -9.5367431640625e-06, -0.000118255615234375, -1.9073486328125e-06, -0.019501090049743652, 0.0, -0.000980019336566329, 0.0, -0.0030775070190429688, -0.00069427490234375, -0.0016107559204101562, -0.0013332366943359375, -8.0108642578125e-05, -0.004071712493896484, -2.15768777707126e-05, -0.01148223876953125, -0.000324249267578125, -5.7220458984375e-05, 0.0, -0.031482696533203125, -1.9073486328125e-06, -0.0003566741943359375, 0.0, -0.00946414191275835, -1.1920928244535389e-07, -0.003978848457336426, -2.288818359375e-05, -0.0036319494247436523, -9.5367431640625e-06, -1.9073486328125e-06, -0.02842235565185547, -1.71661376953125e-05, -4.57763671875e-05, 0.0, -6.67572021484375e-05, -2.09808349609375e-05, -0.00014722347259521484, -1.537799835205078e-05, -0.0022640228271484375, -3.814697265625e-06, -0.015186309814453125, -0.0016984939575195312, -0.026113510131835938, -0.00217437744140625, -4.38690185546875e-05, -1.1444091796875e-05, -0.0032634735107421875, -2.1457672119140625e-06, -2.288818359375e-05, -0.007837295532226562, -0.0020904541015625, -0.012609481811523438, -3.814697265625e-05, -4.38690185546875e-05, -1.1444091796875e-05, -0.00070953369140625, -3.0517578125e-05, -1.1444091796875e-05, -0.0033349990844726562, -0.0002765655517578125, -0.6411082148551941, -0.0003409385681152344, -0.000102996826171875, -0.0007810592651367188, -2.86102294921875e-05, -0.03190803527832031, -5.14984130859375e-05, -0.05194695666432381, -0.0002558227861300111], "score": -1.359456911407385}]}
{"index": 59, "beams": [{"inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Kobold Geomancer", "_type": "Template15", "hole2": "ALL"}, {"hole3": {"n": 1, "_type": "Num"}, "hole1": 2, "hole0": 2, "_type": "Template23", "hole2": "spell_damage"}], "name": "KoboldGeomancer"}]}, "choice_history": [80, 159, 295, 88, 138, "Kobold", "Geomancer", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 21, 165, "1", "<EOS>"], "score_history": [-7.82012939453125e-05, -8.0108642578125e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -3.218599158572033e-05, -1.7046782886609435e-05, -3.4212545870104805e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -3.0994312965049176e-06, -3.0517578125e-05, -1.192092622659402e-05, -1.33514404296875e-05, -0.00287628173828125, -7.05718994140625e-05, -2.7418097943154862e-06, -1.811981201171875e-05, -4.291534423828125e-06, -1.9073486328125e-06, -1.0967274647555314e-05, 0.0, -0.00010883808135986328, -1.1444091796875e-05, -0.0002765655517578125, -8.20159912109375e-05, -7.140370871638879e-05, 0.0, -0.00011922595149371773, 0.0, -0.0103989839553833, -0.0003204345703125, -0.0003814697265625, -0.000156402587890625, -3.3736214390955865e-05, -5.7220458984375e-06], "score": -0.015291822848212178}]}
{"index": 60, "beams": [{"inferred_code": "class Kor'kronElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Kor'kron Elite", "_type": "Template15", "hole2": "WARRIOR"}, {"hole3": {"value": true, "_type": "NameConstant"}, "hole1": 3, "hole0": 4, "_type": "Template23", "hole2": "charge"}], "name": "Kor'kronElite"}]}, "choice_history": [80, 159, 295, 88, 138, "Kor'kron", "Elite", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 109, 200, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score_history": [-1.33514404296875e-05, -1.9073486328125e-05, -5.7220458984375e-06, -0.000110626220703125, -7.05718994140625e-05, -0.4074207842350006, -0.00020215852418914437, -1.4185829968482722e-05, -1.71661376953125e-05, -7.62939453125e-06, 0.0, 0.0, -7.62939453125e-06, -5.841255187988281e-06, -6.866455078125e-05, -0.042227745056152344, -5.7220458984375e-05, -5.721882189391181e-05, -2.4914739697123878e-05, -5.125998541188892e-06, -1.9073486328125e-06, -0.00032901758095249534, 0.0, -0.000457763671875, -7.62939453125e-06, -0.0008754730224609375, -0.0002040863037109375, -1.1086437552876305e-05, -1.9073486328125e-06, -0.00039862882113084197, 0.0, -0.0044939517974853516, -4.00543212890625e-05, -0.00023651123046875, -0.0001277923583984375, -4.76837158203125e-05, 0.0], "score": -0.45756912284286955}]}
{"index": 61, "beams": [{"inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}, "args": [{"s": "Leokk", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Call", "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}]}, "_type": "Expr"}], "name": "__init__"}, {"hole3": {"elts": [{"func": {"id": "Aura", "_type": "Name"}, "args": [{"hole0": 1, "_type": "Template73"}, {"hole0": "MinionSelector", "_type": "Template77"}], "_type": "Call"}], "_type": "List"}, "hole1": 4, "hole0": 2, "_type": "Template23", "hole2": "auras"}], "name": "Leokk"}]}, "choice_history": [80, 159, 295, 88, 138, "Leokk", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 286, 48, 169, "Leokk", "<EOS>", 47, 165, "3", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 46, 161, "False", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "1", "<EOS>", 68, 260, "Minion", "Selector", "<EOS>"], "score_history": [-1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -1.4662635294371285e-05, -6.735241913702339e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -5.9604644775390625e-06, -8.58306884765625e-05, -0.0001049041748046875, -2.47955322265625e-05, -0.0027551651000976562, -1.9073486328125e-06, -0.0001652240753173828, -1.1444091796875e-05, -1.52587890625e-05, -2.288818359375e-05, -5.7220458984375e-06, -5.53131103515625e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -7.2479248046875e-05, -9.34600830078125e-05, -8.7738037109375e-05, -0.0001583099365234375, -1.33514404296875e-05, -0.000446319580078125, -1.9073486328125e-06, -6.675708846159978e-06, 0.0, -2.6702880859375e-05, 0.0, -0.15266990661621094, -2.288818359375e-05, -0.0003719329833984375, -0.0002787916746456176, -0.000392913818359375, -7.62939453125e-06, -2.86102294921875e-05, -0.0008400733349844813, -4.38690185546875e-05, -9.5367431640625e-06, 0.0, -2.86102294921875e-05, 0.0, -1.728534698486328e-05, -2.741813204920618e-06, -0.0005060434341430664, -7.62939453125e-06, -2.288818359375e-05, 0.0, -1.1444091796875e-05, -4.76837158203125e-05, -2.944469451904297e-05, -2.0265579223632812e-06, -0.015857696533203125, -6.103515625e-05, -0.000244140625, -0.0010356903076171875, -0.00035333630512468517, 0.0, -0.0004444122314453125, -0.0002079010009765625, -9.72747802734375e-05, -1.8477434423402883e-05, -2.47955322265625e-05, -0.0007343292236328125, -2.47955322265625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0045261383056640625, -5.7220458984375e-06, -0.00124359130859375, -0.001670241355895996, -0.008492469787597656, -0.0005588531494140625, -0.00012957259605173022, 0.0, -0.00025412123068235815, 0.0, -0.002566099166870117, 0.0, -3.0517578125e-05, -5.340576171875e-05, -0.0004444122314453125, -9.918212890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.00013387203216552734, -1.52587890625e-05, -4.57763671875e-05, -0.001117706298828125, -0.0005550384521484375, -0.0004997178912162781, -0.0002422332763671875, -0.14688873291015625, -6.866455078125e-05, -0.0031778421252965927, -5.91278076171875e-05, -1.9073486328125e-06], "score": -0.35170101859603164}]}
{"index": 62, "beams": [{"inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, True)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}, "args": [{"s": "<UNK> Justice", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}, {"value": true, "_type": "NameConstant"}], "_type": "Call"}, "_type": "Expr"}], "name": "__init__"}, {"args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"value": {"func": {"id": "Weapon", "_type": "Name"}, "args": [{"n": 1, "_type": "Num"}, {"n": 4, "_type": "Num"}], "_type": "Call"}, "_type": "Return"}], "name": "create_weapon"}], "name": "<UNK>Justice"}]}, "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Justice", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 286, 48, 169, "<UNK>", " ", "Justice", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 46, 161, "False", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 136, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "1", "<EOS>", 47, 165, "4", "<EOS>"], "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -2.86102294921875e-05, -0.0001316070556640625, -3.24249267578125e-05, -0.00010907096293522045, -0.0002099059202009812, -2.2649765014648438e-06, -9.5367431640625e-06, 0.0, 0.0, -0.003912687301635742, -9.655952453613281e-06, -0.0004349946975708008, -0.000171661376953125, -0.46259403228759766, -2.09808349609375e-05, -6.29425048828125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -2.288818359375e-05, -3.814697265625e-06, -1.52587890625e-05, -5.53131103515625e-05, -0.02158355712890625, -7.62939453125e-06, 0.0, -5.53131103515625e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -0.000110626220703125, 0.0, -0.06847858428955078, -1.9073486328125e-06, -2.6702880859375e-05, -0.006878063548356295, -9.34600830078125e-05, -0.00026449092547409236, -0.0018749237060546875, -3.814697265625e-06, -5.7220458984375e-06, -0.00014958836254663765, -7.62939453125e-06, -0.0001010894775390625, 0.0, -1.52587890625e-05, 0.0, -4.780292510986328e-05, -1.1920928244535389e-07, -0.0004367828369140625, 0.0, 0.0, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -3.24249267578125e-05, 0.0, -0.0067806243896484375, -3.814697265625e-06, -0.00045013427734375, -6.103515625e-05, -0.000263214111328125, 0.0, -0.006911277770996094, -1.9073486328125e-05, -0.0006103515625, -9.5367431640625e-06, -1.33514404296875e-05, -0.0001354217529296875, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00019741058349609375, 0.0, -0.0005474090576171875, -0.001300811767578125, -4.38690185546875e-05, -3.24249267578125e-05, -0.0001659393310546875, -6.4849853515625e-05, 0.0, -0.0019812583923339844, -2.09808349609375e-05, -5.340576171875e-05, -0.0001316070556640625, 0.0, -0.002648935653269291, 0.0, -4.00543212890625e-05, -1.71661376953125e-05, -8.592876838520169e-05, -1.9073486328125e-06], "score": -0.5906999594371811}]}
{"index": 63, "beams": [{"inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Lord of the Arena", "_type": "Template15", "hole2": "ALL"}, {"hole3": {"value": true, "_type": "NameConstant"}, "hole1": 5, "hole0": 6, "_type": "Template23", "hole2": "taunt"}], "name": "LordOfTheArena"}]}, "choice_history": [80, 159, 295, 88, 138, "Lord", "Of", "The", "Arena", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 109, 200, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score_history": [-2.6702880859375e-05, -3.814697265625e-05, -5.340576171875e-05, -0.0001850128173828125, -6.866455078125e-05, -3.7788631743751466e-05, -0.001049634302034974, -0.0012860116548836231, -4.9233327445108443e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.741813204920618e-06, -0.0011539459228515625, -0.006725311279296875, -4.57763671875e-05, -1.537788011773955e-05, -6.222614319995046e-05, -0.00021171437401790172, -1.52587890625e-05, -0.003363370895385742, -0.0001850128173828125, -0.00029301640461198986, -1.71661376953125e-05, -3.552477573975921e-05, -1.9073486328125e-06, -4.9591064453125e-05, -3.814697265625e-06, -0.006371498107910156, -1.52587890625e-05, -0.0003154978039674461, -1.1920928244535389e-07, -0.0003255328629165888, -1.9073486328125e-06, -0.003876805305480957, 0.0, -0.000110626220703125, -1.71661376953125e-05, -5.7220458984375e-06, 0.0], "score": -0.026037591485405187}]}
{"index": 64, "beams": [{"inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole0": "Mechanical Dragonling", "hole2": "minion_type", "hole3": {"id": "MINION_TYPE", "_type": "Name"}, "hole1": "COMMON", "_type": "Template7", "hole4": "MECH"}, {"hole1": 1, "hole0": 2, "_type": "Template27"}], "name": "MechanicalDragonling"}]}, "choice_history": [80, 159, 295, 88, 138, "Mechanical", "Dragonling", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 121, 251, "Mechanical", " ", "Dragonling", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 110, 202, "2", "<EOS>", "1", "<EOS>"], "score_history": [-7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -5.53131103515625e-05, -3.814697265625e-06, -1.1920928244535389e-07, -5.9604644775390625e-06, -1.7881377516459906e-06, -1.1444091796875e-05, -3.4332275390625e-05, 0.0, -6.675719760096399e-06, -9.5367431640625e-06, -1.9073486328125e-06, -4.57763671875e-05, -0.06628799438476562, -0.0002880096435546875, -1.4305104514278355e-06, -1.8000591808231547e-05, -4.613397686625831e-05, -1.9073486328125e-06, -0.0003224611282348633, -3.814697265625e-06, -2.288818359375e-05, -1.52587890625e-05, -7.62939453125e-06, 0.0, -0.0001544952392578125, -1.9073486328125e-06, -0.005130767822265625, -1.9073486328125e-06, -0.0038299560546875, -0.0001201629638671875, -0.00988836120814085, 0.0, -1.7642625607550144e-05, 0.0], "score": -0.0863564709112481}]}
{"index": 65, "beams": [{"inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n", "model_output": {"_type": "Module", "body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Mind Blast", "_type": "Template17", "hole2": "PRIEST"}, {"hole1": "hero", "hole0": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Template0", "hole2": [{"n": 5, "_type": "Num"}]}], "name": "MindBlast"}]}, "choice_history": [80, 159, 295, 88, 138, "Mind", "Blast", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 95, 172, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 282, 47, 165, "5", "<EOS>"], "score_history": [-7.62939453125e-06, -0.0002994537353515625, -1.71661376953125e-05, -1.9073486328125e-05, -1.1444091796875e-05, -1.1920928244535389e-07, -1.4424267646973021e-05, -3.218649908376392e-06, -0.00037384033203125, 0.0, -1.9073486328125e-06, -8.738040196476504e-05, -1.9073486328125e-05, -0.00012981891632080078, -4.1961669921875e-05, -0.3705635070800781, -0.0032796859741210938, -1.621236151549965e-05, -7.867813110351562e-05, -1.347058241663035e-05, -4.4465065002441406e-05, -2.861022494471399e-06, -2.0265579223632812e-06, -0.0008530616760253906, -3.814697265625e-06, -0.007869720458984375, -0.000324249267578125, -0.00312042236328125, -0.0003032684326171875, -5.340576171875e-05, 0.0, -0.0031800270080566406, -1.1920928244535389e-07, -0.001787424087524414, 0.0, -0.0024593472480773926, -7.795983401592821e-05, -1.71661376953125e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.00038313865661621094, -7.152555099310121e-07], "score": -0.39547079473980773}]}
