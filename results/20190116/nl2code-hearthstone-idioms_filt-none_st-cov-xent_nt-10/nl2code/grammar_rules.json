{
  "all_rules": [
    [
      "arg_plus_templates_seq_elem",
      "Template0"
    ],
    [
      "arg_plus_templates_seq_elem",
      "arg"
    ],
    [
      "boolop",
      "And"
    ],
    [
      "boolop",
      "Or"
    ],
    [
      "cmpop_seq_elem",
      "Eq"
    ],
    [
      "cmpop_seq_elem",
      "Gt"
    ],
    [
      "cmpop_seq_elem",
      "GtE"
    ],
    [
      "cmpop_seq_elem",
      "In"
    ],
    [
      "cmpop_seq_elem",
      "Is"
    ],
    [
      "cmpop_seq_elem",
      "IsNot"
    ],
    [
      "cmpop_seq_elem",
      "Lt"
    ],
    [
      "cmpop_seq_elem",
      "LtE"
    ],
    [
      "cmpop_seq_elem",
      "NotEq"
    ],
    [
      "expr",
      "Attribute"
    ],
    [
      "expr",
      "BinOp"
    ],
    [
      "expr",
      "BoolOp"
    ],
    [
      "expr",
      "Call"
    ],
    [
      "expr",
      "Compare"
    ],
    [
      "expr",
      "Lambda"
    ],
    [
      "expr",
      "List"
    ],
    [
      "expr",
      "ListComp"
    ],
    [
      "expr",
      "Name"
    ],
    [
      "expr",
      "NameConstant"
    ],
    [
      "expr",
      "Num"
    ],
    [
      "expr",
      "Subscript"
    ],
    [
      "expr",
      "Template2"
    ],
    [
      "expr",
      "Template4"
    ],
    [
      "expr",
      "Template5"
    ],
    [
      "expr",
      "Template6"
    ],
    [
      "expr",
      "Template8"
    ],
    [
      "expr",
      "Template9"
    ],
    [
      "expr",
      "Tuple"
    ],
    [
      "expr",
      "UnaryOp"
    ],
    [
      "expr_seq_elem",
      "Attribute"
    ],
    [
      "expr_seq_elem",
      "BinOp"
    ],
    [
      "expr_seq_elem",
      "BoolOp"
    ],
    [
      "expr_seq_elem",
      "Call"
    ],
    [
      "expr_seq_elem",
      "Compare"
    ],
    [
      "expr_seq_elem",
      "Lambda"
    ],
    [
      "expr_seq_elem",
      "List"
    ],
    [
      "expr_seq_elem",
      "ListComp"
    ],
    [
      "expr_seq_elem",
      "Name"
    ],
    [
      "expr_seq_elem",
      "NameConstant"
    ],
    [
      "expr_seq_elem",
      "Num"
    ],
    [
      "expr_seq_elem",
      "Str"
    ],
    [
      "expr_seq_elem",
      "Subscript"
    ],
    [
      "expr_seq_elem",
      "Template1"
    ],
    [
      "expr_seq_elem",
      "Template2"
    ],
    [
      "expr_seq_elem",
      "Template4"
    ],
    [
      "expr_seq_elem",
      "Template5_expr_seq"
    ],
    [
      "expr_seq_elem",
      "Template6"
    ],
    [
      "expr_seq_elem",
      "Template7"
    ],
    [
      "expr_seq_elem",
      "Template8"
    ],
    [
      "expr_seq_elem",
      "Template9"
    ],
    [
      "expr_seq_elem",
      "UnaryOp"
    ],
    [
      "mod",
      "Module"
    ],
    [
      "operator",
      "Add"
    ],
    [
      "operator",
      "Sub"
    ],
    [
      "slice",
      "Index"
    ],
    [
      "slice",
      "Slice"
    ],
    [
      "stmt_seq_elem",
      "Assign"
    ],
    [
      "stmt_seq_elem",
      "AugAssign"
    ],
    [
      "stmt_seq_elem",
      "Break"
    ],
    [
      "stmt_seq_elem",
      "ClassDef"
    ],
    [
      "stmt_seq_elem",
      "Expr"
    ],
    [
      "stmt_seq_elem",
      "For"
    ],
    [
      "stmt_seq_elem",
      "FunctionDef"
    ],
    [
      "stmt_seq_elem",
      "If"
    ],
    [
      "stmt_seq_elem",
      "ImportFrom"
    ],
    [
      "stmt_seq_elem",
      "Return"
    ],
    [
      "stmt_seq_elem",
      "Template3_stmt_seq"
    ],
    [
      "unaryop",
      "Not"
    ],
    [
      "unaryop",
      "USub"
    ],
    [
      "Add",
      []
    ],
    [
      "And",
      []
    ],
    [
      "Assign",
      [
        true,
        true
      ]
    ],
    [
      "Attribute",
      [
        true,
        "str"
      ]
    ],
    [
      "AugAssign",
      [
        true,
        true,
        true
      ]
    ],
    [
      "BinOp",
      [
        true,
        true,
        true
      ]
    ],
    [
      "BoolOp",
      [
        true,
        true
      ]
    ],
    [
      "Break",
      []
    ],
    [
      "Call",
      [
        true,
        false,
        false
      ]
    ],
    [
      "Call",
      [
        true,
        false,
        true
      ]
    ],
    [
      "Call",
      [
        true,
        true,
        false
      ]
    ],
    [
      "Call",
      [
        true,
        true,
        true
      ]
    ],
    [
      "ClassDef",
      [
        "str",
        true,
        false,
        true,
        false
      ]
    ],
    [
      "Compare",
      [
        true,
        true,
        true
      ]
    ],
    [
      "Eq",
      []
    ],
    [
      "Expr",
      [
        true
      ]
    ],
    [
      "For",
      [
        true,
        true,
        true,
        false
      ]
    ],
    [
      "FunctionDef",
      [
        "str",
        true,
        true,
        false,
        false
      ]
    ],
    [
      "Gt",
      []
    ],
    [
      "GtE",
      []
    ],
    [
      "If",
      [
        true,
        true,
        false
      ]
    ],
    [
      "If",
      [
        true,
        true,
        true
      ]
    ],
    [
      "ImportFrom",
      [
        "str",
        true,
        "int"
      ]
    ],
    [
      "In",
      []
    ],
    [
      "Index",
      [
        true
      ]
    ],
    [
      "Is",
      []
    ],
    [
      "IsNot",
      []
    ],
    [
      "Lambda",
      [
        true,
        true
      ]
    ],
    [
      "List",
      [
        true
      ]
    ],
    [
      "ListComp",
      [
        true,
        true
      ]
    ],
    [
      "Lt",
      []
    ],
    [
      "LtE",
      []
    ],
    [
      "Module",
      [
        true
      ]
    ],
    [
      "Name",
      [
        "str"
      ]
    ],
    [
      "NameConstant",
      [
        "bool"
      ]
    ],
    [
      "NameConstant",
      [
        "str"
      ]
    ],
    [
      "Not",
      []
    ],
    [
      "NotEq",
      []
    ],
    [
      "Num",
      [
        "int"
      ]
    ],
    [
      "Or",
      []
    ],
    [
      "Return",
      [
        true
      ]
    ],
    [
      "Slice",
      [
        false,
        false,
        false
      ]
    ],
    [
      "Str",
      [
        "str"
      ]
    ],
    [
      "Sub",
      []
    ],
    [
      "Subscript",
      [
        true,
        true
      ]
    ],
    [
      "Template0",
      []
    ],
    [
      "Template1",
      []
    ],
    [
      "Template2",
      []
    ],
    [
      "Template3_stmt_seq",
      []
    ],
    [
      "Template4",
      []
    ],
    [
      "Template5",
      []
    ],
    [
      "Template5_expr_seq",
      []
    ],
    [
      "Template6",
      []
    ],
    [
      "Template7",
      []
    ],
    [
      "Template8",
      []
    ],
    [
      "Template9",
      []
    ],
    [
      "Tuple",
      [
        true
      ]
    ],
    [
      "USub",
      []
    ],
    [
      "UnaryOp",
      [
        true,
        true
      ]
    ],
    [
      "alias",
      [
        "str",
        false
      ]
    ],
    [
      "arg",
      [
        "str",
        false
      ]
    ],
    [
      "arguments",
      [
        true,
        false,
        false,
        false,
        false,
        false
      ]
    ],
    [
      "comprehension",
      [
        true,
        true,
        true
      ]
    ],
    [
      "keyword",
      [
        "str",
        true
      ]
    ],
    [
      "alias*",
      1
    ],
    [
      "alias*",
      10
    ],
    [
      "arg_plus_templates*",
      0
    ],
    [
      "arg_plus_templates*",
      1
    ],
    [
      "arg_plus_templates*",
      2
    ],
    [
      "arg_plus_templates*",
      3
    ],
    [
      "arg_plus_templates*",
      4
    ],
    [
      "cmpop*",
      1
    ],
    [
      "comprehension*",
      1
    ],
    [
      "expr*",
      0
    ],
    [
      "expr*",
      1
    ],
    [
      "expr*",
      2
    ],
    [
      "expr*",
      3
    ],
    [
      "expr*",
      4
    ],
    [
      "expr*",
      5
    ],
    [
      "expr*",
      6
    ],
    [
      "expr*",
      12
    ],
    [
      "keyword*",
      0
    ],
    [
      "keyword*",
      1
    ],
    [
      "keyword*",
      2
    ],
    [
      "keyword*",
      3
    ],
    [
      "keyword*",
      4
    ],
    [
      "stmt*",
      0
    ],
    [
      "stmt*",
      1
    ],
    [
      "stmt*",
      2
    ],
    [
      "stmt*",
      3
    ],
    [
      "stmt*",
      4
    ],
    [
      "stmt*",
      5
    ],
    [
      "stmt*",
      6
    ],
    [
      "stmt*",
      7
    ],
    [
      "stmt*",
      11
    ]
  ],
  "rules_mask": {
    "Add": [
      73,
      74
    ],
    "And": [
      74,
      75
    ],
    "Assign": [
      75,
      76
    ],
    "Attribute": [
      76,
      77
    ],
    "AugAssign": [
      77,
      78
    ],
    "BinOp": [
      78,
      79
    ],
    "BoolOp": [
      79,
      80
    ],
    "Break": [
      80,
      81
    ],
    "Call": [
      81,
      85
    ],
    "ClassDef": [
      85,
      86
    ],
    "Compare": [
      86,
      87
    ],
    "Eq": [
      87,
      88
    ],
    "Expr": [
      88,
      89
    ],
    "For": [
      89,
      90
    ],
    "FunctionDef": [
      90,
      91
    ],
    "Gt": [
      91,
      92
    ],
    "GtE": [
      92,
      93
    ],
    "If": [
      93,
      95
    ],
    "ImportFrom": [
      95,
      96
    ],
    "In": [
      96,
      97
    ],
    "Index": [
      97,
      98
    ],
    "Is": [
      98,
      99
    ],
    "IsNot": [
      99,
      100
    ],
    "Lambda": [
      100,
      101
    ],
    "List": [
      101,
      102
    ],
    "ListComp": [
      102,
      103
    ],
    "Lt": [
      103,
      104
    ],
    "LtE": [
      104,
      105
    ],
    "Module": [
      105,
      106
    ],
    "Name": [
      106,
      107
    ],
    "NameConstant": [
      107,
      109
    ],
    "Not": [
      109,
      110
    ],
    "NotEq": [
      110,
      111
    ],
    "Num": [
      111,
      112
    ],
    "Or": [
      112,
      113
    ],
    "Return": [
      113,
      114
    ],
    "Slice": [
      114,
      115
    ],
    "Str": [
      115,
      116
    ],
    "Sub": [
      116,
      117
    ],
    "Subscript": [
      117,
      118
    ],
    "Template0": [
      118,
      119
    ],
    "Template1": [
      119,
      120
    ],
    "Template2": [
      120,
      121
    ],
    "Template3_stmt_seq": [
      121,
      122
    ],
    "Template4": [
      122,
      123
    ],
    "Template5": [
      123,
      124
    ],
    "Template5_expr_seq": [
      124,
      125
    ],
    "Template6": [
      125,
      126
    ],
    "Template7": [
      126,
      127
    ],
    "Template8": [
      127,
      128
    ],
    "Template9": [
      128,
      129
    ],
    "Tuple": [
      129,
      130
    ],
    "USub": [
      130,
      131
    ],
    "UnaryOp": [
      131,
      132
    ],
    "alias": [
      132,
      133
    ],
    "alias*": [
      137,
      139
    ],
    "arg": [
      133,
      134
    ],
    "arg_plus_templates*": [
      139,
      144
    ],
    "arg_plus_templates_seq_elem": [
      0,
      2
    ],
    "arguments": [
      134,
      135
    ],
    "boolop": [
      2,
      4
    ],
    "cmpop*": [
      144,
      145
    ],
    "cmpop_seq_elem": [
      4,
      13
    ],
    "comprehension": [
      135,
      136
    ],
    "comprehension*": [
      145,
      146
    ],
    "expr": [
      13,
      33
    ],
    "expr*": [
      146,
      154
    ],
    "expr_seq_elem": [
      33,
      55
    ],
    "keyword": [
      136,
      137
    ],
    "keyword*": [
      154,
      159
    ],
    "mod": [
      55,
      56
    ],
    "operator": [
      56,
      58
    ],
    "slice": [
      58,
      60
    ],
    "stmt*": [
      159,
      168
    ],
    "stmt_seq_elem": [
      60,
      71
    ],
    "unaryop": [
      71,
      73
    ]
  }
}