{"tree": {"body": [{"bases": [{"_type": "Name", "id": "WeaponCard"}], "_type": "ClassDef", "name": "AssassinsBlade", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Assassin's Blade"}, {"n": 5, "_type": "Num"}, {"_type": "Attribute", "attr": "ROGUE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"n": 3, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"_type": "Name", "id": "Weapon"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_weapon"}]}], "_type": "Module"}, "orig_code": "class AssassinsBlade(WeaponCard):\n    def __init__(self):\n        super().__init__(\"Assassin's Blade\", 5, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "BoulderfistOgre", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Boulderfist Ogre"}, {"n": 6, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"n": 6, "_type": "Num"}, {"n": 7, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class BoulderfistOgre(MinionCard):\n    def __init__(self):\n        super().__init__(\"Boulderfist Ogre\", 6, CHARACTER_CLASS.ALL, CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef", "name": "DeadlyPoison", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Deadly Poison"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "ROGUE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}, {"target": {"_type": "Attribute", "attr": "base_attack", "value": {"_type": "Attribute", "attr": "weapon", "value": {"_type": "Name", "id": "player"}}}, "_type": "AugAssign", "value": {"n": 2, "_type": "Num"}, "op": {"_type": "Add"}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"n": 2, "_type": "Num"}], "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Name", "id": "player"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "name": "use"}, {"body": [{"_type": "Return", "value": {"_type": "BoolOp", "values": [{"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}, {"left": {"_type": "Attribute", "attr": "weapon", "value": {"_type": "Name", "id": "player"}}, "_type": "Compare", "comparators": [{"_type": "NameConstant", "value": null}], "ops": [{"_type": "IsNot"}]}], "op": {"_type": "And"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "name": "can_use"}]}], "_type": "Module"}, "orig_code": "class DeadlyPoison(SpellCard):\n    def __init__(self):\n        super().__init__(\"Deadly Poison\", 1, CHARACTER_CLASS.ROGUE, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        player.weapon.base_attack += 2\n        player.hero.change_temp_attack(2)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and player.weapon is not None\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "FireElemental", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 3, "_type": "Num"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "BothPlayer"}}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "UserPicker"}}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"_type": "Str", "s": "Fire Elemental"}, {"n": 6, "_type": "Num"}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"n": 6, "_type": "Num"}, {"n": 5, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class FireElemental(MinionCard):\n    def __init__(self):\n        super().__init__(\"Fire Elemental\", 6, CHARACTER_CLASS.SHAMAN, CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3), CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "GnomishInventor", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Draw"}}, {"_type": "Call", "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"_type": "Str", "s": "Gnomish Inventor"}, {"n": 4, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"n": 2, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class GnomishInventor(MinionCard):\n    def __init__(self):\n        super().__init__(\"Gnomish Inventor\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef", "name": "HeroicStrike", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Heroic Strike"}, {"n": 2, "_type": "Num"}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"n": 4, "_type": "Num"}], "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Name", "id": "player"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "name": "use"}]}], "_type": "Module"}, "orig_code": "class HeroicStrike(SpellCard):\n    def __init__(self):\n        super().__init__(\"Heroic Strike\", 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(4)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "IronbarkProtector", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ironbark Protector"}, {"n": 8, "_type": "Num"}, {"_type": "Attribute", "attr": "DRUID", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "keywords": [{"arg": "taunt", "_type": "keyword", "value": {"_type": "NameConstant", "value": true}}], "args": [{"n": 8, "_type": "Num"}, {"n": 8, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class IronbarkProtector(MinionCard):\n    def __init__(self):\n        super().__init__(\"Ironbark Protector\", 8, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef", "name": "MarkOfTheWild", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "args": [{"_type": "Str", "s": "Mark of the Wild"}, {"n": 2, "_type": "Num"}, {"_type": "Attribute", "attr": "DRUID", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"n": 2, "_type": "Num"}], "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"n": 2, "_type": "Num"}], "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}}}, {"targets": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}], "_type": "Assign", "value": {"_type": "NameConstant", "value": true}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "name": "use"}]}], "_type": "Module"}, "orig_code": "class MarkOfTheWild(SpellCard):\n    def __init__(self):\n        super().__init__(\"Mark of the Wild\", 2, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(2)\n        self.target.taunt = True\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef", "name": "MultiShot", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Multi-Shot"}, {"n": 4, "_type": "Num"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}, {"targets": [{"_type": "Name", "id": "targets"}], "_type": "Assign", "value": {"_type": "Call", "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}], "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"body": [{"targets": [{"_type": "Name", "id": "target"}], "_type": "Assign", "value": {"_type": "Call", "args": [{"_type": "Name", "id": "targets"}], "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Name", "id": "target"}], "func": {"_type": "Attribute", "attr": "remove", "value": {"_type": "Name", "id": "targets"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 3, "_type": "Num"}], "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}], "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Name", "id": "target"}}}}], "target": {"_type": "Name", "id": "i"}, "_type": "For", "iter": {"_type": "Call", "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"_type": "Name", "id": "range"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "name": "use"}, {"body": [{"_type": "Return", "value": {"_type": "BoolOp", "values": [{"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}, {"left": {"_type": "Call", "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}], "func": {"_type": "Name", "id": "len"}}, "_type": "Compare", "comparators": [{"n": 2, "_type": "Num"}], "ops": [{"_type": "GtE"}]}], "op": {"_type": "And"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "name": "can_use"}]}], "_type": "Module"}, "orig_code": "class MultiShot(SpellCard):\n    def __init__(self):\n        super().__init__(\"Multi-Shot\", 4, CHARACTER_CLASS.HUNTER, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        targets = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            target = game.random_choice(targets)\n            targets.remove(target)\n            target.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions) >= 2\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef", "name": "PowerWordShield", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "args": [{"_type": "Str", "s": "Power Word: Shield"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "PRIEST", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"n": 2, "_type": "Num"}], "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Name", "id": "player"}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "name": "use"}]}], "_type": "Module"}, "orig_code": "class PowerWordShield(SpellCard):\n    def __init__(self):\n        super().__init__(\"Power Word: Shield\", 1, CHARACTER_CLASS.PRIEST, CARD_RARITY.FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.increase_health(2)\n        player.draw()\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "SenjinShieldmasta", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Sen'jin Shieldmasta"}, {"n": 4, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "keywords": [{"arg": "taunt", "_type": "keyword", "value": {"_type": "NameConstant", "value": true}}], "args": [{"n": 3, "_type": "Num"}, {"n": 5, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class SenjinShieldmasta(MinionCard):\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef", "name": "SinisterStrike", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Sinister Strike"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "ROGUE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 3, "_type": "Num"}], "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}], "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "name": "use"}]}], "_type": "Module"}, "orig_code": "class SinisterStrike(SpellCard):\n    def __init__(self):\n        super().__init__(\"Sinister Strike\", 1, CHARACTER_CLASS.ROGUE, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "Succubus", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "minion_type", "_type": "keyword", "value": {"_type": "Attribute", "attr": "DEMON", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Discard"}}, {"_type": "Call", "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"_type": "Str", "s": "Succubus"}, {"n": 2, "_type": "Num"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"n": 4, "_type": "Num"}, {"n": 3, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class Succubus(MinionCard):\n    def __init__(self):\n        super().__init__(\"Succubus\", 2, CHARACTER_CLASS.WARLOCK, CARD_RARITY.FREE, minion_type=MINION_TYPE.DEMON, battlecry=Battlecry(Discard(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "WarGolem", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "War Golem"}, {"n": 7, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"n": 7, "_type": "Num"}, {"n": 7, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class WarGolem(MinionCard):\n    def __init__(self):\n        super().__init__(\"War Golem\", 7, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "Acidmaw", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "minion_type", "_type": "keyword", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "args": [{"_type": "Str", "s": "Acidmaw"}, {"n": 7, "_type": "Num"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "LEGENDARY", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "keywords": [{"arg": "effects", "_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "MinionIsNotTarget"}}, {"_type": "Call", "func": {"_type": "Name", "id": "BothPlayer"}}], "func": {"_type": "Name", "id": "CharacterDamaged"}}, {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Kill"}}, {"_type": "Call", "func": {"_type": "Name", "id": "TargetSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}]}], "func": {"_type": "Name", "id": "Effect"}}]}}], "args": [{"n": 4, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class Acidmaw(MinionCard):\n    def __init__(self):\n        super().__init__(\"Acidmaw\", 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(CharacterDamaged(MinionIsNotTarget(), BothPlayer()), [ActionTag(Kill(), TargetSelector())])])\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "Boar", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "minion_type", "_type": "keyword", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "args": [{"_type": "Str", "s": "Boar"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}, {"_type": "NameConstant", "value": false}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"n": 1, "_type": "Num"}, {"n": 1, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class Boar(MinionCard):\n    def __init__(self):\n        super().__init__(\"Boar\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "AnodizedRoboCub", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "minion_type", "_type": "keyword", "value": {"_type": "Attribute", "attr": "MECH", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"arg": "choices", "_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "AttackMode"}}, {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 1, "_type": "Num"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "func": {"_type": "Name", "id": "SelfSelector"}}], "func": {"_type": "Name", "id": "Choice"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "TankMode"}}, {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 1, "_type": "Num"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "func": {"_type": "Name", "id": "SelfSelector"}}], "func": {"_type": "Name", "id": "Choice"}}]}}], "args": [{"_type": "Str", "s": "Anodized Robo Cub"}, {"n": 2, "_type": "Num"}, {"_type": "Attribute", "attr": "DRUID", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "keywords": [{"arg": "taunt", "_type": "keyword", "value": {"_type": "NameConstant", "value": true}}], "args": [{"n": 2, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class AnodizedRoboCub(MinionCard):\n    def __init__(self):\n        super().__init__(\"Anodized Robo Cub\", 2, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, choices=[Choice(AttackMode(), Give([Buff(ChangeAttack(1))]), SelfSelector()), Choice(TankMode(), Give([Buff(ChangeHealth(1))]), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef", "name": "BurrowingMine", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "effects", "_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Drawn"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 10, "_type": "Num"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "func": {"_type": "Name", "id": "HeroSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Drawn"}}, {"_type": "Call", "args": [{"_type": "Call", "keywords": [{"arg": "query", "_type": "keyword", "value": {"_type": "Call", "keywords": [{"arg": "source", "_type": "keyword", "value": {"_type": "Attribute", "attr": "LAST_DRAWN", "value": {"_type": "Name", "id": "CARD_SOURCE"}}}], "func": {"_type": "Name", "id": "CardQuery"}}}], "func": {"_type": "Name", "id": "Discard"}}, {"_type": "Call", "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Drawn"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Draw"}}, {"_type": "Call", "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}], "args": [{"_type": "Str", "s": "Burrowing Mine"}, {"n": 0, "_type": "Num"}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}, {"_type": "NameConstant", "value": false}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "name": "use"}]}], "_type": "Module"}, "orig_code": "class BurrowingMine(SpellCard):\n    def __init__(self):\n        super().__init__(\"Burrowing Mine\", 0, CHARACTER_CLASS.WARRIOR, CARD_RARITY.COMMON, False, effects=[Effect(Drawn(), ActionTag(Damage(10), HeroSelector())), Effect(Drawn(), ActionTag(Discard(query=CardQuery(source=CARD_SOURCE.LAST_DRAWN)), PlayerSelector())), Effect(Drawn(), ActionTag(Draw(), PlayerSelector()))])\n\n    def use(self, player, game):\n        super().use(player, game)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef", "name": "Crackle", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}, {"arg": "overload", "_type": "keyword", "value": {"n": 1, "_type": "Num"}}], "args": [{"_type": "Str", "s": "Crackle"}, {"n": 2, "_type": "Num"}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 3, "_type": "Num"}, {"n": 6, "_type": "Num"}], "func": {"_type": "Attribute", "attr": "random_amount", "value": {"_type": "Name", "id": "game"}}}], "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}], "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "name": "use"}]}], "_type": "Module"}, "orig_code": "class Crackle(SpellCard):\n    def __init__(self):\n        super().__init__(\"Crackle\", 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_spell_target, overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.damage(player.effective_spell_damage(game.random_amount(3, 6)), self)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef", "name": "EmergencyCoolant", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "args": [{"_type": "Str", "s": "Emergency Coolant"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}, {"_type": "NameConstant", "value": false}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Frozen"}}], "func": {"_type": "Name", "id": "Buff"}}], "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "name": "use"}]}], "_type": "Module"}, "orig_code": "class EmergencyCoolant(SpellCard):\n    def __init__(self):\n        super().__init__(\"Emergency Coolant\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Frozen()))\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "FlyingMachine", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "minion_type", "_type": "keyword", "value": {"_type": "Attribute", "attr": "MECH", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "args": [{"_type": "Str", "s": "Flying Machine"}, {"n": 3, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "keywords": [{"arg": "windfury", "_type": "keyword", "value": {"_type": "NameConstant", "value": true}}], "args": [{"n": 1, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class FlyingMachine(MinionCard):\n    def __init__(self):\n        super().__init__(\"Flying Machine\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "GoblinAutoBarber", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "minion_type", "_type": "keyword", "value": {"_type": "Attribute", "attr": "MECH", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 1, "_type": "Num"}], "func": {"_type": "Name", "id": "IncreaseWeaponAttack"}}, {"_type": "Call", "func": {"_type": "Name", "id": "WeaponSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"_type": "Str", "s": "Goblin Auto-Barber"}, {"n": 2, "_type": "Num"}, {"_type": "Attribute", "attr": "ROGUE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"n": 3, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class GoblinAutoBarber(MinionCard):\n    def __init__(self):\n        super().__init__(\"Goblin Auto-Barber\", 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=Battlecry(IncreaseWeaponAttack(1), WeaponSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "IronSensei", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "minion_type", "_type": "keyword", "value": {"_type": "Attribute", "attr": "MECH", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "args": [{"_type": "Str", "s": "Iron Sensei"}, {"n": 3, "_type": "Num"}, {"_type": "Attribute", "attr": "ROGUE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "RARE", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "keywords": [{"arg": "effects", "_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "TurnEnded"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 2, "_type": "Num"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 2, "_type": "Num"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "keywords": [{"arg": "picker", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "RandomPicker"}}}], "args": [{"_type": "Call", "args": [{"_type": "Attribute", "attr": "MECH", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}], "args": [{"n": 2, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class IronSensei(MinionCard):\n    def __init__(self):\n        super().__init__(\"Iron Sensei\", 3, CHARACTER_CLASS.ROGUE, CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]), MinionSelector(IsType(MINION_TYPE.MECH), picker=RandomPicker())))])\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "MalGanis", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "minion_type", "_type": "keyword", "value": {"_type": "Attribute", "attr": "DEMON", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "args": [{"_type": "Str", "s": "Mal'Ganis"}, {"n": 9, "_type": "Num"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "LEGENDARY", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "keywords": [{"arg": "auras", "_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 2, "_type": "Num"}], "func": {"_type": "Name", "id": "ChangeHealth"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "attr": "DEMON", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Aura"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 2, "_type": "Num"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "attr": "DEMON", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Aura"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Immune"}}, {"_type": "Call", "func": {"_type": "Name", "id": "HeroSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}], "args": [{"n": 9, "_type": "Num"}, {"n": 7, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class MalGanis(MinionCard):\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK, CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeHealth(2), MinionSelector(IsType(MINION_TYPE.DEMON))), Aura(ChangeAttack(2), MinionSelector(IsType(MINION_TYPE.DEMON))), Aura(Immune(), HeroSelector())])\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "MistressOfPain", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "minion_type", "_type": "keyword", "value": {"_type": "Attribute", "attr": "DEMON", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "args": [{"_type": "Str", "s": "Mistress of Pain"}, {"n": 2, "_type": "Num"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "RARE", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "keywords": [{"arg": "effects", "_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "DidDamage"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "EventValue"}}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Call", "func": {"_type": "Name", "id": "HeroSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}], "args": [{"n": 1, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class MistressOfPain(MinionCard):\n    def __init__(self):\n        super().__init__(\"Mistress of Pain\", 2, CHARACTER_CLASS.WARLOCK, CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(DidDamage(), ActionTag(Heal(EventValue()), HeroSelector()))])\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "WeaponCard"}], "_type": "ClassDef", "name": "Powermace", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Powermace"}, {"n": 3, "_type": "Num"}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "RARE", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "keywords": [{"arg": "deathrattle", "_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 2, "_type": "Num"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 2, "_type": "Num"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "keywords": [{"arg": "picker", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "RandomPicker"}}}], "args": [{"_type": "Call", "args": [{"_type": "Attribute", "attr": "MECH", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Deathrattle"}}}], "args": [{"n": 3, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"_type": "Name", "id": "Weapon"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_weapon"}]}], "_type": "Module"}, "orig_code": "class Powermace(WeaponCard):\n    def __init__(self):\n        super().__init__(\"Powermace\", 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2))]), MinionSelector(IsType(MINION_TYPE.MECH), picker=RandomPicker())))\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "ScrewjankClunker", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "minion_type", "_type": "keyword", "value": {"_type": "Attribute", "attr": "MECH", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 2, "_type": "Num"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 2, "_type": "Num"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "keywords": [{"arg": "picker", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "UserPicker"}}}], "args": [{"_type": "Call", "args": [{"_type": "Attribute", "attr": "MECH", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"_type": "Str", "s": "Screwjank Clunker"}, {"n": 4, "_type": "Num"}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "RARE", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"n": 2, "_type": "Num"}, {"n": 5, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class ScrewjankClunker(MinionCard):\n    def __init__(self):\n        super().__init__(\"Screwjank Clunker\", 4, CHARACTER_CLASS.WARRIOR, CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2))]), MinionSelector(IsType(MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "SneedsOldShredder", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "minion_type", "_type": "keyword", "value": {"_type": "Attribute", "attr": "MECH", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "args": [{"_type": "Str", "s": "Sneed's Old Shredder"}, {"n": 8, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "LEGENDARY", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "keywords": [{"arg": "deathrattle", "_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"arg": "conditions", "_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Attribute", "attr": "LEGENDARY", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Name", "id": "IsRarity"}}, {"_type": "Call", "func": {"_type": "Name", "id": "IsMinion"}}]}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Call", "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "Deathrattle"}}}], "args": [{"n": 5, "_type": "Num"}, {"n": 7, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class SneedsOldShredder(MinionCard):\n    def __init__(self):\n        super().__init__(\"Sneed's Old Shredder\", 8, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(conditions=[IsRarity(CARD_RARITY.LEGENDARY), IsMinion()])), PlayerSelector()))\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "Toshley", "body": [{"body": [{"names": [{"_type": "alias", "name": "spare_part_list"}], "_type": "ImportFrom", "module": "hearthbreaker.cards.spells.neutral", "level": 0}, {"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"arg": "source", "_type": "keyword", "value": {"_type": "Attribute", "attr": "LIST", "value": {"_type": "Name", "id": "CARD_SOURCE"}}}, {"arg": "source_list", "_type": "keyword", "value": {"_type": "Name", "id": "spare_part_list"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"_type": "Str", "s": "Toshley"}, {"n": 6, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "LEGENDARY", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"names": [{"_type": "alias", "name": "spare_part_list"}], "_type": "ImportFrom", "module": "hearthbreaker.cards.spells.neutral", "level": 0}, {"_type": "Return", "value": {"_type": "Call", "keywords": [{"arg": "deathrattle", "_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"arg": "source", "_type": "keyword", "value": {"_type": "Attribute", "attr": "LIST", "value": {"_type": "Name", "id": "CARD_SOURCE"}}}, {"arg": "source_list", "_type": "keyword", "value": {"_type": "Name", "id": "spare_part_list"}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "Deathrattle"}}}], "args": [{"n": 5, "_type": "Num"}, {"n": 7, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class Toshley(MinionCard):\n    def __init__(self):\n        from hearthbreaker.cards.spells.neutral import spare_part_list\n        super().__init__(\"Toshley\", 6, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, battlecry=Battlecry(AddCard(CardQuery(source=CARD_SOURCE.LIST, source_list=spare_part_list)), PlayerSelector()))\n\n    def create_minion(self, player):\n        from hearthbreaker.cards.spells.neutral import spare_part_list\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(source=CARD_SOURCE.LIST, source_list=spare_part_list)), PlayerSelector()))\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "Warbot", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "minion_type", "_type": "keyword", "value": {"_type": "Attribute", "attr": "MECH", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "args": [{"_type": "Str", "s": "Warbot"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "keywords": [{"arg": "enrage", "_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 1, "_type": "Num"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "func": {"_type": "Name", "id": "SelfSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}], "args": [{"n": 1, "_type": "Num"}, {"n": 3, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class Warbot(MinionCard):\n    def __init__(self):\n        super().__init__(\"Warbot\", 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "Deathlord", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Deathlord"}, {"n": 3, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "RARE", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "keywords": [{"arg": "taunt", "_type": "keyword", "value": {"_type": "NameConstant", "value": true}}, {"arg": "deathrattle", "_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"arg": "conditions", "_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Name", "id": "IsMinion"}}]}}, {"arg": "source", "_type": "keyword", "value": {"_type": "Attribute", "attr": "MY_DECK", "value": {"_type": "Name", "id": "CARD_SOURCE"}}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "EnemyPlayer"}}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "Deathrattle"}}}], "args": [{"n": 2, "_type": "Num"}, {"n": 8, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class Deathlord(MinionCard):\n    def __init__(self):\n        super().__init__(\"Deathlord\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, taunt=True, deathrattle=Deathrattle(Summon(CardQuery(conditions=[IsMinion()], source=CARD_SOURCE.MY_DECK)), PlayerSelector(EnemyPlayer())))\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "NerubarWeblord", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Nerub'ar Weblord"}, {"n": 2, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "keywords": [{"arg": "auras", "_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 2, "_type": "Num"}], "func": {"_type": "Name", "id": "ManaChange"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "BothPlayer"}}, {"_type": "Call", "func": {"_type": "Name", "id": "HasBattlecry"}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}], "args": [{"n": 1, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class NerubarWeblord(MinionCard):\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(2), CardSelector(BothPlayer(), HasBattlecry()))])\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "SpectralKnight", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Spectral Knight"}, {"n": 5, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "keywords": [{"arg": "spell_targetable", "_type": "keyword", "value": {"_type": "NameConstant", "value": false}}], "args": [{"n": 4, "_type": "Num"}, {"n": 6, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class SpectralKnight(MinionCard):\n    def __init__(self):\n        super().__init__(\"Spectral Knight\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=False)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "WailingSoul", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Silence"}}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"_type": "Str", "s": "Wailing Soul"}, {"n": 4, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "RARE", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"n": 3, "_type": "Num"}, {"n": 5, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class WailingSoul(MinionCard):\n    def __init__(self):\n        super().__init__(\"Wailing Soul\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, battlecry=Battlecry(Silence(), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "AmaniBerserker", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Amani Berserker"}, {"n": 2, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "keywords": [{"arg": "enrage", "_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 3, "_type": "Num"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "func": {"_type": "Name", "id": "SelfSelector"}}], "func": {"_type": "Name", "id": "Aura"}}]}}], "args": [{"n": 2, "_type": "Num"}, {"n": 3, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class AmaniBerserker(MinionCard):\n    def __init__(self):\n        super().__init__(\"Amani Berserker\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(3), SelfSelector())])\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "ArchmageAntonidas", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Archmage Antonidas"}, {"n": 7, "_type": "Num"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "LEGENDARY", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "keywords": [{"arg": "effects", "_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "SpellCast"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "Fireball", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}], "args": [{"n": 5, "_type": "Num"}, {"n": 7, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class ArchmageAntonidas(MinionCard):\n    def __init__(self):\n        super().__init__(\"Archmage Antonidas\", 7, CHARACTER_CLASS.MAGE, CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(), ActionTag(AddCard(hearthbreaker.cards.Fireball()), PlayerSelector()))])\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef", "name": "Bananas", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Bananas"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}, {"_type": "NameConstant", "value": false}, {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"n": 1, "_type": "Num"}], "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"n": 1, "_type": "Num"}], "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "name": "use"}]}], "_type": "Module"}, "orig_code": "class Bananas(SpellCard):\n    def __init__(self):\n        super().__init__(\"Bananas\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n        self.target.increase_health(1)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef", "name": "BlessedChampion", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "args": [{"_type": "Str", "s": "Blessed Champion"}, {"n": 5, "_type": "Num"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "RARE", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "DoubleAttack"}}], "func": {"_type": "Name", "id": "Buff"}}], "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "name": "use"}]}], "_type": "Module"}, "orig_code": "class BlessedChampion(SpellCard):\n    def __init__(self):\n        super().__init__(\"Blessed Champion\", 5, CHARACTER_CLASS.PALADIN, CARD_RARITY.RARE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(DoubleAttack()))\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "CabalShadowPriest", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Steal"}}, {"_type": "Call", "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "EnemyPlayer"}}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "UserPicker"}}}], "args": [{"_type": "Call", "args": [{"n": 2, "_type": "Num"}], "func": {"_type": "Name", "id": "AttackLessThanOrEqualTo"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"_type": "Str", "s": "Cabal Shadow Priest"}, {"n": 6, "_type": "Num"}, {"_type": "Attribute", "attr": "PRIEST", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "EPIC", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"n": 4, "_type": "Num"}, {"n": 5, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class CabalShadowPriest(MinionCard):\n    def __init__(self):\n        super().__init__(\"Cabal Shadow Priest\", 6, CHARACTER_CLASS.PRIEST, CARD_RARITY.EPIC, battlecry=Battlecry(Steal(), MinionSelector(AttackLessThanOrEqualTo(2), players=EnemyPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef", "name": "ConeOfCold", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "args": [{"_type": "Str", "s": "Cone of Cold"}, {"n": 4, "_type": "Num"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Frozen"}}], "func": {"_type": "Name", "id": "Buff"}}], "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}}}, {"targets": [{"_type": "Name", "id": "index"}], "_type": "Assign", "value": {"_type": "Attribute", "attr": "index", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}}, {"test": {"left": {"_type": "Attribute", "attr": "index", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}, "_type": "Compare", "comparators": [{"left": {"_type": "Call", "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "player", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}}], "func": {"_type": "Name", "id": "len"}}, "_type": "BinOp", "right": {"n": 1, "_type": "Num"}, "op": {"_type": "Sub"}}], "ops": [{"_type": "Lt"}]}, "body": [{"targets": [{"_type": "Name", "id": "minion"}], "_type": "Assign", "value": {"_type": "Subscript", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "player", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}}, "slice": {"_type": "Index", "value": {"left": {"_type": "Name", "id": "index"}, "_type": "BinOp", "right": {"n": 1, "_type": "Num"}, "op": {"_type": "Add"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 1, "_type": "Num"}], "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}], "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Name", "id": "minion"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Frozen"}}], "func": {"_type": "Name", "id": "Buff"}}], "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Name", "id": "minion"}}}}], "_type": "If"}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 1, "_type": "Num"}], "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}], "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}}}, {"test": {"left": {"_type": "Attribute", "attr": "index", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}, "_type": "Compare", "comparators": [{"n": 0, "_type": "Num"}], "ops": [{"_type": "Gt"}]}, "body": [{"targets": [{"_type": "Name", "id": "minion"}], "_type": "Assign", "value": {"_type": "Subscript", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "player", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}}, "slice": {"_type": "Index", "value": {"left": {"_type": "Name", "id": "index"}, "_type": "BinOp", "right": {"n": 1, "_type": "Num"}, "op": {"_type": "Sub"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 1, "_type": "Num"}], "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}], "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Name", "id": "minion"}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Frozen"}}], "func": {"_type": "Name", "id": "Buff"}}], "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Name", "id": "minion"}}}}], "_type": "If"}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "name": "use"}]}], "_type": "Module"}, "orig_code": "class ConeOfCold(SpellCard):\n    def __init__(self):\n        super().__init__(\"Cone of Cold\", 4, CHARACTER_CLASS.MAGE, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.add_buff(Buff(Frozen()))\n        index = self.target.index\n\n        if self.target.index < len(self.target.player.minions) - 1:\n            minion = self.target.player.minions[index + 1]\n            minion.damage(player.effective_spell_damage(1), self)\n            minion.add_buff(Buff(Frozen()))\n\n        self.target.damage(player.effective_spell_damage(1), self)\n\n        if self.target.index > 0:\n            minion = self.target.player.minions[index - 1]\n            minion.damage(player.effective_spell_damage(1), self)\n            minion.add_buff(Buff(Frozen()))\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "DefenderOfArgus", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Taunt"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 1, "_type": "Num"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 1, "_type": "Num"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Adjacent"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"_type": "Str", "s": "Defender of Argus"}, {"n": 4, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "RARE", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"n": 2, "_type": "Num"}, {"n": 3, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class DefenderOfArgus(MinionCard):\n    def __init__(self):\n        super().__init__(\"Defender of Argus\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, battlecry=Battlecry(Give([ Buff(Taunt()), Buff(ChangeAttack(1)), Buff(ChangeHealth(1)) ]), MinionSelector(Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "WeaponCard"}], "_type": "ClassDef", "name": "Doomhammer", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "overload", "_type": "keyword", "value": {"n": 2, "_type": "Num"}}], "args": [{"_type": "Str", "s": "Doomhammer"}, {"n": 5, "_type": "Num"}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "EPIC", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "keywords": [{"arg": "buffs", "_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Windfury"}}], "func": {"_type": "Name", "id": "Buff"}}]}}], "args": [{"n": 2, "_type": "Num"}, {"n": 8, "_type": "Num"}], "func": {"_type": "Name", "id": "Weapon"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_weapon"}]}], "_type": "Module"}, "orig_code": "class Doomhammer(WeaponCard):\n    def __init__(self):\n        super().__init__(\"Doomhammer\", 5, CHARACTER_CLASS.SHAMAN, CARD_RARITY.EPIC, overload=2)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8, buffs=[Buff(Windfury())])\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef", "name": "EarthShock", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "args": [{"_type": "Str", "s": "Earth Shock"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "silence", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 1, "_type": "Num"}], "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}], "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "name": "use"}]}], "_type": "Module"}, "orig_code": "class EarthShock(SpellCard):\n    def __init__(self):\n        super().__init__(\"Earth Shock\", 1, CHARACTER_CLASS.SHAMAN, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        self.target.silence()\n        self.target.damage(player.effective_spell_damage(1), self)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "SecretCard"}], "_type": "ClassDef", "name": "EyeForAnEye", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Eye for an Eye"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"test": {"_type": "Call", "func": {"_type": "Attribute", "attr": "is_hero", "value": {"_type": "Name", "id": "character"}}}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Name", "id": "amount"}, {"_type": "Name", "id": "self"}], "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "opponent", "value": {"_type": "Attribute", "attr": "player", "value": {"_type": "Name", "id": "character"}}}}}}}], "_type": "If"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "reveal", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "character", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}, {"arg": "amount", "_type": "arg"}]}, "name": "_reveal"}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "character_damaged"}, {"_type": "Attribute", "attr": "_reveal", "value": {"_type": "Name", "id": "self"}}], "func": {"_type": "Attribute", "attr": "bind", "value": {"_type": "Name", "id": "player"}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "activate"}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "character_damaged"}, {"_type": "Attribute", "attr": "_reveal", "value": {"_type": "Name", "id": "self"}}], "func": {"_type": "Attribute", "attr": "unbind", "value": {"_type": "Name", "id": "player"}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "deactivate"}]}], "_type": "Module"}, "orig_code": "class EyeForAnEye(SecretCard):\n    def __init__(self):\n        super().__init__(\"Eye for an Eye\", 1, CHARACTER_CLASS.PALADIN, CARD_RARITY.COMMON)\n\n    def _reveal(self, character, attacker, amount):\n        if character.is_hero():\n            character.player.opponent.hero.damage(amount, self)\n        super().reveal()\n\n    def activate(self, player):\n        player.bind(\"character_damaged\", self._reveal)\n\n    def deactivate(self, player):\n        player.unbind(\"character_damaged\", self._reveal)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef", "name": "Flare", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Flare"}, {"n": 2, "_type": "Num"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "RARE", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}, {"body": [{"targets": [{"_type": "Attribute", "attr": "stealth", "value": {"_type": "Name", "id": "minion"}}], "_type": "Assign", "value": {"_type": "NameConstant", "value": false}}], "target": {"_type": "Name", "id": "minion"}, "_type": "For", "iter": {"_type": "Call", "args": [{"_type": "Name", "id": "game"}, {"body": {"_type": "Attribute", "attr": "stealth", "value": {"_type": "Name", "id": "m"}}, "_type": "Lambda", "args": {"_type": "arguments", "args": [{"arg": "m", "_type": "arg"}]}}], "func": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}], "func": {"_type": "Attribute", "attr": "deactivate", "value": {"_type": "Name", "id": "secret"}}}}], "target": {"_type": "Name", "id": "secret"}, "_type": "For", "iter": {"_type": "Attribute", "attr": "secrets", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}}, {"targets": [{"_type": "Attribute", "attr": "secrets", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}], "_type": "Assign", "value": {"_type": "List"}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Name", "id": "player"}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "name": "use"}]}], "_type": "Module"}, "orig_code": "class Flare(SpellCard):\n    def __init__(self):\n        super().__init__(\"Flare\", 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in hearthbreaker.targeting.find_minion_spell_target(game, lambda m: m.stealth):\n            minion.stealth = False\n\n        for secret in game.other_player.secrets:\n            secret.deactivate(game.other_player)\n\n        game.other_player.secrets = []\n        player.draw()\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "WeaponCard"}], "_type": "ClassDef", "name": "Gorehowl", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Gorehowl"}, {"n": 7, "_type": "Num"}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "EPIC", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "keywords": [{"arg": "effects", "_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "IsHero"}}, {"_type": "Call", "func": {"_type": "Name", "id": "TargetIsMinion"}}], "func": {"_type": "Name", "id": "And"}}], "func": {"_type": "Name", "id": "CharacterAttack"}}, {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "IncreaseDurability"}}, {"_type": "Call", "func": {"_type": "Name", "id": "WeaponSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"n": 1, "_type": "Num"}}], "func": {"_type": "Name", "id": "IncreaseWeaponAttack"}}, {"_type": "Call", "func": {"_type": "Name", "id": "WeaponSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 1, "_type": "Num"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "func": {"_type": "Name", "id": "AttackCompleted"}}], "func": {"_type": "Name", "id": "BuffUntil"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "func": {"_type": "Name", "id": "HeroSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}]}], "func": {"_type": "Name", "id": "Effect"}}]}}], "args": [{"n": 7, "_type": "Num"}, {"n": 1, "_type": "Num"}], "func": {"_type": "Name", "id": "Weapon"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_weapon"}]}], "_type": "Module"}, "orig_code": "class Gorehowl(WeaponCard):\n    def __init__(self):\n        super().__init__(\"Gorehowl\", 7, CHARACTER_CLASS.WARRIOR, CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, effects=[Effect(CharacterAttack(And(IsHero(), TargetIsMinion())), [ActionTag(IncreaseDurability(), WeaponSelector()), ActionTag(IncreaseWeaponAttack(-1), WeaponSelector()), ActionTag(Give(BuffUntil(ChangeAttack(1), AttackCompleted())), HeroSelector())])])\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "Hound", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "minion_type", "_type": "keyword", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "args": [{"_type": "Str", "s": "Hound"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}, {"_type": "NameConstant", "value": false}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "keywords": [{"arg": "charge", "_type": "keyword", "value": {"_type": "NameConstant", "value": true}}], "args": [{"n": 1, "_type": "Num"}, {"n": 1, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class Hound(MinionCard):\n    def __init__(self):\n        super().__init__(\"Hound\", 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "InjuredBlademaster", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 4, "_type": "Num"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "func": {"_type": "Name", "id": "SelfSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"_type": "Str", "s": "Injured Blademaster"}, {"n": 3, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "RARE", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"n": 4, "_type": "Num"}, {"n": 7, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class InjuredBlademaster(MinionCard):\n    def __init__(self):\n        super().__init__(\"Injured Blademaster\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "KnifeJuggler", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Knife Juggler"}, {"n": 2, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "RARE", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "keywords": [{"arg": "effects", "_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "AfterAdded"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 1, "_type": "Num"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "EnemyPlayer"}}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "RandomPicker"}}}, {"arg": "condition", "_type": "keyword", "value": {"_type": "NameConstant", "value": null}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}], "args": [{"n": 3, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class KnifeJuggler(MinionCard):\n    def __init__(self):\n        super().__init__(\"Knife Juggler\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(AfterAdded(), ActionTag(Damage(1), CharacterSelector(players=EnemyPlayer(), picker=RandomPicker(), condition=None)))])\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "Lightwell", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Lightwell"}, {"n": 2, "_type": "Num"}, {"_type": "Attribute", "attr": "PRIEST", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "RARE", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "keywords": [{"arg": "effects", "_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "TurnStarted"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 3, "_type": "Num"}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Call", "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "IsDamaged"}}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "RandomPicker"}}}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}], "args": [{"n": 0, "_type": "Num"}, {"n": 5, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class Lightwell(MinionCard):\n    def __init__(self):\n        super().__init__(\"Lightwell\", 2, CHARACTER_CLASS.PRIEST, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(3), CharacterSelector(condition=IsDamaged(), picker=RandomPicker())))])\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "ManaWyrm", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mana Wyrm"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "keywords": [{"arg": "effects", "_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "SpellCast"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 1, "_type": "Num"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "func": {"_type": "Name", "id": "SelfSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}}], "args": [{"n": 1, "_type": "Num"}, {"n": 3, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class ManaWyrm(MinionCard):\n    def __init__(self):\n        super().__init__(\"Mana Wyrm\", 1, CHARACTER_CLASS.MAGE, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(), ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "MogushanWarden", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mogu'shan Warden"}, {"n": 4, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "keywords": [{"arg": "taunt", "_type": "keyword", "value": {"_type": "NameConstant", "value": true}}], "args": [{"n": 1, "_type": "Num"}, {"n": 7, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class MogushanWarden(MinionCard):\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef", "name": "Nourish", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Nourish"}, {"n": 5, "_type": "Num"}, {"_type": "Attribute", "attr": "DRUID", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "RARE", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}, {"bases": [{"_type": "Name", "id": "ChoiceCard"}], "_type": "ClassDef", "name": "Gain2", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Gain 2 mana crystals"}, {"n": 0, "_type": "Num"}, {"_type": "Attribute", "attr": "DRUID", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}, {"_type": "NameConstant", "value": false}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"test": {"left": {"_type": "Attribute", "attr": "max_mana", "value": {"_type": "Name", "id": "player"}}, "_type": "Compare", "comparators": [{"n": 8, "_type": "Num"}], "ops": [{"_type": "Lt"}]}, "body": [{"target": {"_type": "Attribute", "attr": "max_mana", "value": {"_type": "Name", "id": "player"}}, "_type": "AugAssign", "value": {"n": 2, "_type": "Num"}, "op": {"_type": "Add"}}, {"target": {"_type": "Attribute", "attr": "mana", "value": {"_type": "Name", "id": "player"}}, "_type": "AugAssign", "value": {"n": 2, "_type": "Num"}, "op": {"_type": "Add"}}], "_type": "If", "orelse": [{"targets": [{"_type": "Attribute", "attr": "max_mana", "value": {"_type": "Name", "id": "player"}}], "_type": "Assign", "value": {"n": 10, "_type": "Num"}}, {"target": {"_type": "Attribute", "attr": "mana", "value": {"_type": "Name", "id": "player"}}, "_type": "AugAssign", "value": {"n": 2, "_type": "Num"}, "op": {"_type": "Add"}}]}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "name": "use"}]}, {"bases": [{"_type": "Name", "id": "ChoiceCard"}], "_type": "ClassDef", "name": "Draw3", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Draw three cards"}, {"n": 0, "_type": "Num"}, {"_type": "Attribute", "attr": "DRUID", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}, {"_type": "NameConstant", "value": false}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Name", "id": "player"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Name", "id": "player"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Name", "id": "player"}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "name": "use"}]}, {"targets": [{"_type": "Name", "id": "option"}], "_type": "Assign", "value": {"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Name", "id": "Gain2"}}, {"_type": "Call", "func": {"_type": "Name", "id": "Draw3"}}]}, {"_type": "Name", "id": "player"}], "func": {"_type": "Attribute", "attr": "choose_option", "value": {"_type": "Attribute", "attr": "agent", "value": {"_type": "Name", "id": "player"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Name", "id": "option"}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "name": "use"}]}], "_type": "Module"}, "orig_code": "class Nourish(SpellCard):\n    def __init__(self):\n        super().__init__(\"Nourish\", 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n        class Gain2(ChoiceCard):\n\n            def __init__(self):\n                super().__init__(\"Gain 2 mana crystals\", 0, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, False)\n\n            def use(self, player, game):\n                if player.max_mana < 8:\n                    player.max_mana += 2\n                    player.mana += 2\n                else:\n                    player.max_mana = 10\n                    player.mana += 2\n\n        class Draw3(ChoiceCard):\n\n            def __init__(self):\n                super().__init__(\"Draw three cards\", 0, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, False)\n\n            def use(self, player, game):\n                player.draw()\n                player.draw()\n                player.draw()\n\n        option = player.agent.choose_option([Gain2(), Draw3()], player)\n        option.use(player, game)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef", "name": "Preparation", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Preparation"}, {"n": 0, "_type": "Num"}, {"_type": "Attribute", "attr": "ROGUE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "EPIC", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "UnaryOp", "op": {"_type": "USub"}, "operand": {"n": 3, "_type": "Num"}}], "func": {"_type": "Name", "id": "ManaChange"}}, {"_type": "Call", "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "IsSpell"}}}], "func": {"_type": "Name", "id": "CardSelector"}}, {"_type": "Call", "func": {"_type": "Name", "id": "SpellCast"}}], "func": {"_type": "Name", "id": "AuraUntil"}}], "func": {"_type": "Attribute", "attr": "add_aura", "value": {"_type": "Name", "id": "player"}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "name": "use"}]}], "_type": "Module"}, "orig_code": "class Preparation(SpellCard):\n    def __init__(self):\n        super().__init__(\"Preparation\", 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.add_aura(AuraUntil(ManaChange(-3), CardSelector(condition=IsSpell()), SpellCast()))\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "SecretCard"}], "_type": "ClassDef", "name": "Repentance", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Repentance"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"n": 1, "_type": "Num"}], "func": {"_type": "Attribute", "attr": "set_health_to", "value": {"_type": "Name", "id": "minion"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "reveal", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}]}, "name": "_reveal"}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "attr": "_reveal", "value": {"_type": "Name", "id": "self"}}], "func": {"_type": "Attribute", "attr": "bind", "value": {"_type": "Attribute", "attr": "current_player", "value": {"_type": "Attribute", "attr": "game", "value": {"_type": "Name", "id": "player"}}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "activate"}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "attr": "_reveal", "value": {"_type": "Name", "id": "self"}}], "func": {"_type": "Attribute", "attr": "unbind", "value": {"_type": "Attribute", "attr": "current_player", "value": {"_type": "Attribute", "attr": "game", "value": {"_type": "Name", "id": "player"}}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "deactivate"}]}], "_type": "Module"}, "orig_code": "class Repentance(SecretCard):\n    def __init__(self):\n        super().__init__(\"Repentance\", 1, CHARACTER_CLASS.PALADIN, CARD_RARITY.COMMON)\n\n    def _reveal(self, minion):\n\n        minion.set_health_to(1)\n        super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind(\"minion_played\", self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind(\"minion_played\", self._reveal)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "ShadowOfNothing", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Shadow of Nothing"}, {"n": 0, "_type": "Num"}, {"_type": "Attribute", "attr": "PRIEST", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "EPIC", "value": {"_type": "Name", "id": "CARD_RARITY"}}, {"_type": "NameConstant", "value": false}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"n": 0, "_type": "Num"}, {"n": 1, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class ShadowOfNothing(MinionCard):\n    def __init__(self):\n        super().__init__(\"Shadow of Nothing\", 0, CHARACTER_CLASS.PRIEST, CARD_RARITY.EPIC, False)\n\n    def create_minion(self, p):\n        return Minion(0, 1)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "SpellCard"}], "_type": "ClassDef", "name": "Slam", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "target_func", "_type": "keyword", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "args": [{"_type": "Str", "s": "Slam"}, {"n": 2, "_type": "Num"}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}, {"test": {"_type": "BoolOp", "values": [{"left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}, "_type": "Compare", "comparators": [{"_type": "Call", "args": [{"n": 2, "_type": "Num"}], "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}], "ops": [{"_type": "Gt"}]}, {"_type": "Attribute", "attr": "divine_shield", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}], "op": {"_type": "Or"}}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 2, "_type": "Num"}], "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}], "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Name", "id": "player"}}}}], "_type": "If", "orelse": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 2, "_type": "Num"}], "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Name", "id": "player"}}}, {"_type": "Name", "id": "self"}], "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}}}]}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}]}, "name": "use"}]}], "_type": "Module"}, "orig_code": "class Slam(SpellCard):\n    def __init__(self):\n        super().__init__(\"Slam\", 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if self.target.health > player.effective_spell_damage(2) or self.target.divine_shield:\n            self.target.damage(player.effective_spell_damage(2), self)\n            player.draw()\n        else:\n            self.target.damage(player.effective_spell_damage(2), self)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "Spellbreaker", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "minion_type", "_type": "keyword", "value": {"_type": "Attribute", "attr": "NONE", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Silence"}}, {"_type": "Call", "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "BothPlayer"}}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "UserPicker"}}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"_type": "Str", "s": "Spellbreaker"}, {"n": 4, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"n": 4, "_type": "Num"}, {"n": 3, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class Spellbreaker(MinionCard):\n    def __init__(self):\n        super().__init__(\"Spellbreaker\", 4, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.NONE, battlecry=Battlecry(Silence(), MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "SunfuryProtector", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Taunt"}}], "func": {"_type": "Name", "id": "Buff"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Adjacent"}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"_type": "Str", "s": "Sunfury Protector"}, {"n": 2, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "RARE", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"n": 2, "_type": "Num"}, {"n": 3, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class SunfuryProtector(MinionCard):\n    def __init__(self):\n        super().__init__(\"Sunfury Protector\", 2, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, battlecry=Battlecry(Give(Buff(Taunt())), MinionSelector(Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "TinkmasterOverspark", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"arg": "source", "_type": "keyword", "value": {"_type": "Attribute", "attr": "LIST", "value": {"_type": "Name", "id": "CARD_SOURCE"}}}, {"arg": "source_list", "_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Name", "id": "Devilsaur"}}, {"_type": "Call", "func": {"_type": "Name", "id": "Squirrel"}}]}}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "Transform"}}, {"_type": "Call", "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "BothPlayer"}}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "RandomPicker"}}}], "func": {"_type": "Name", "id": "MinionSelector"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"_type": "Str", "s": "Tinkmaster Overspark"}, {"n": 3, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "LEGENDARY", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"n": 3, "_type": "Num"}, {"n": 3, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class TinkmasterOverspark(MinionCard):\n    def __init__(self):\n        super().__init__(\"Tinkmaster Overspark\", 3, CHARACTER_CLASS.ALL, CARD_RARITY.LEGENDARY, battlecry=Battlecry(Transform(CardQuery(source=CARD_SOURCE.LIST, source_list=[Devilsaur(), Squirrel()])), MinionSelector(players=BothPlayer(), picker=RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "SecretCard"}], "_type": "ClassDef", "name": "Vaporize", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Vaporize"}, {"n": 3, "_type": "Num"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "RARE", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"test": {"_type": "BoolOp", "values": [{"left": {"_type": "Name", "id": "target"}, "_type": "Compare", "comparators": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "player", "value": {"_type": "Name", "id": "self"}}}], "ops": [{"_type": "Is"}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "is_minion", "value": {"_type": "Name", "id": "attacker"}}}, {"_type": "UnaryOp", "op": {"_type": "Not"}, "operand": {"_type": "Attribute", "attr": "removed", "value": {"_type": "Name", "id": "attacker"}}}], "op": {"_type": "And"}}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Name", "id": "self"}], "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Name", "id": "attacker"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "check_delayed", "value": {"_type": "Attribute", "attr": "game", "value": {"_type": "Name", "id": "attacker"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "reveal", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "If"}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}, {"arg": "target", "_type": "arg"}]}, "name": "_reveal"}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "character_attack"}, {"_type": "Attribute", "attr": "_reveal", "value": {"_type": "Name", "id": "self"}}], "func": {"_type": "Attribute", "attr": "bind", "value": {"_type": "Attribute", "attr": "opponent", "value": {"_type": "Name", "id": "player"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "activate"}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "character_attack"}, {"_type": "Attribute", "attr": "_reveal", "value": {"_type": "Name", "id": "self"}}], "func": {"_type": "Attribute", "attr": "unbind", "value": {"_type": "Attribute", "attr": "opponent", "value": {"_type": "Name", "id": "player"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "deactivate"}]}], "_type": "Module"}, "orig_code": "class Vaporize(SecretCard):\n    def __init__(self):\n        super().__init__(\"Vaporize\", 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def _reveal(self, attacker, target):\n        if target is self.player.hero and attacker.is_minion() and not attacker.removed:\n            attacker.die(self)\n            attacker.game.check_delayed()\n            super().reveal()\n\n    def activate(self, player):\n        player.opponent.bind(\"character_attack\", self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind(\"character_attack\", self._reveal)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "WorgenInfiltrator", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Worgen Infiltrator"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "keywords": [{"arg": "stealth", "_type": "keyword", "value": {"_type": "NameConstant", "value": true}}], "args": [{"n": 2, "_type": "Num"}, {"n": 1, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class WorgenInfiltrator(MinionCard):\n    def __init__(self):\n        super().__init__(\"Worgen Infiltrator\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "BlackwingCorruptor", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 3, "_type": "Num"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"arg": "players", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "BothPlayer"}}}, {"arg": "picker", "_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "UserPicker"}}}], "func": {"_type": "Name", "id": "CharacterSelector"}}, {"_type": "Call", "keywords": [{"arg": "value", "_type": "keyword", "value": {"n": 0, "_type": "Num"}}], "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Attribute", "attr": "DRAGON", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "func": {"_type": "Name", "id": "IsType"}}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "GreaterThan"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"_type": "Str", "s": "Blackwing Corruptor"}, {"n": 5, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"n": 5, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class BlackwingCorruptor(MinionCard):\n    def __init__(self):\n        super().__init__(\"Blackwing Corruptor\", 5, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3), CharacterSelector(players=BothPlayer(), picker=UserPicker()), GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "DrakonidCrusher", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "minion_type", "_type": "keyword", "value": {"_type": "Attribute", "attr": "DRAGON", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 3, "_type": "Num"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 3, "_type": "Num"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}]}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "func": {"_type": "Name", "id": "SelfSelector"}}, {"_type": "Call", "args": [{"_type": "Call", "keywords": [{"arg": "value", "_type": "keyword", "value": {"n": 15, "_type": "Num"}}], "args": [{"_type": "Call", "args": [{"_type": "Str", "s": "health"}, {"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "EnemyPlayer"}}], "func": {"_type": "Name", "id": "HeroSelector"}}], "func": {"_type": "Name", "id": "Attribute"}}], "func": {"_type": "Name", "id": "GreaterThan"}}], "func": {"_type": "Name", "id": "Not"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"_type": "Str", "s": "Drakonid Crusher"}, {"n": 6, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"n": 6, "_type": "Num"}, {"n": 6, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class DrakonidCrusher(MinionCard):\n    def __init__(self):\n        super().__init__(\"Drakonid Crusher\", 6, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=(Battlecry(Give([Buff(ChangeAttack(3)), Buff(ChangeHealth(3))]), SelfSelector(), Not(GreaterThan(Attribute('health', HeroSelector(EnemyPlayer())), value=15)))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "Imp", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "minion_type", "_type": "keyword", "value": {"_type": "Attribute", "attr": "DEMON", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "args": [{"_type": "Str", "s": "Imp"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "ALL", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "RARE", "value": {"_type": "Name", "id": "CARD_RARITY"}}, {"_type": "NameConstant", "value": false}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"n": 1, "_type": "Num"}, {"n": 1, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class Imp(MinionCard):\n    def __init__(self):\n        super().__init__(\"Imp\", 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, False, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n\n"}
{"tree": {"body": [{"bases": [{"_type": "Name", "id": "MinionCard"}], "_type": "ClassDef", "name": "TwilightWhelp", "body": [{"body": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"arg": "minion_type", "_type": "keyword", "value": {"_type": "Attribute", "attr": "DRAGON", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"arg": "battlecry", "_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"n": 2, "_type": "Num"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}], "func": {"_type": "Name", "id": "Give"}}, {"_type": "Call", "func": {"_type": "Name", "id": "SelfSelector"}}, {"_type": "Call", "keywords": [{"arg": "value", "_type": "keyword", "value": {"n": 0, "_type": "Num"}}], "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"arg": "condition", "_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Attribute", "attr": "DRAGON", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "func": {"_type": "Name", "id": "IsType"}}}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "GreaterThan"}}], "func": {"_type": "Name", "id": "Battlecry"}}}], "args": [{"_type": "Str", "s": "Twilight Whelp"}, {"n": 1, "_type": "Num"}, {"_type": "Attribute", "attr": "PRIEST", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}]}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"n": 2, "_type": "Num"}, {"n": 1, "_type": "Num"}], "func": {"_type": "Name", "id": "Minion"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}]}, "name": "create_minion"}]}], "_type": "Module"}, "orig_code": "class TwilightWhelp(MinionCard):\n    def __init__(self):\n        super().__init__(\"Twilight Whelp\", 1, CHARACTER_CLASS.PRIEST, CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=(Battlecry(Give(Buff(ChangeHealth(2))), SelfSelector(), GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.DRAGON))), value=0))))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n\n"}
