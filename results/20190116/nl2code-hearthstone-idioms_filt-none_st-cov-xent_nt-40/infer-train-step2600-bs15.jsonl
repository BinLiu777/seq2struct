{"beams": [{"inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -0.14404176570963045, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "AcidicSwampOoze", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"hole0": "Destroy", "_type": "Template5"}, {"func": {"id": "WeaponSelector", "_type": "Name"}, "args": [{"hole0": "EnemyPlayer", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -2.288818359375e-05, -3.6119981814408675e-05, -0.005933357868343592, -0.0015473088715225458, -0.00019608080037869513, -5.7220458984375e-06, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00121307373046875, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.0010561172384768724, -3.778933751164004e-05, -0.0009262443636544049, -6.151199340820312e-05, -0.0006178140174597502, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.0001430511474609375, -3.814697265625e-06, -0.0001895427703857422, -1.9073486328125e-06, -0.0332794189453125, -5.7220458984375e-06, -4.00543212890625e-05, -1.9073486328125e-05, -0.012308120727539062, -7.62939453125e-06, -0.033049650490283966, -0.03870338574051857, -8.20159912109375e-05, -0.0005893707275390625, -0.0007534027099609375, 0.0, -0.007558465003967285, -0.0001220703125, -1.9073486328125e-06, -0.0001373291015625, -0.0001430511474609375, 0.0, -0.0030588791705667973, -0.0006213188171386719, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, 0.0, -5.91278076171875e-05, -3.814697265625e-06, -0.00012969970703125, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0010132789611816406, -1.1920922133867862e-06, -3.0994415283203125e-05, -4.768370445162873e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Acidic", "Swamp", "Ooze", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 69, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 87, 193, "Destroy", "<EOS>", 58, 123, 23, 146, "Weapon", "Selector", "<EOS>", 216, 87, 193, "Enemy", "Player", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(DestroyDestroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -3.399568066782308, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "AcidicSwampOoze", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"hole0": "DestroyDestroy", "_type": "Template5"}, {"func": {"id": "WeaponSelector", "_type": "Name"}, "args": [{"hole0": "EnemyPlayer", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -2.288818359375e-05, -3.6119981814408675e-05, -0.005933357868343592, -0.0015473088715225458, -0.00019608080037869513, -5.7220458984375e-06, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00121307373046875, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.0010561172384768724, -3.778933751164004e-05, -0.0009262443636544049, -6.151199340820312e-05, -0.0006178140174597502, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.0001430511474609375, -3.814697265625e-06, -0.0001895427703857422, -1.9073486328125e-06, -0.0332794189453125, -5.7220458984375e-06, -4.00543212890625e-05, -1.9073486328125e-05, -0.012308120727539062, -7.62939453125e-06, -0.033049650490283966, -3.2966129779815674, -0.00038059180951677263, -0.0001468658447265625, -5.91278076171875e-05, -0.0004291534423828125, 0.0, -0.005807995796203613, -0.000152587890625, -3.814697265625e-06, -5.14984130859375e-05, -3.4332275390625e-05, 0.0, -0.0032616385724395514, -0.0003528594970703125, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, 0.0, -6.103515625e-05, -3.814697265625e-06, -0.0001239776611328125, 0.0, -1.1563301086425781e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0010172128677368164, -1.1920922133867862e-06, -3.0994415283203125e-05, -4.768370445162873e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Acidic", "Swamp", "Ooze", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 69, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 87, 193, "Destroy", "Destroy", "<EOS>", 58, 123, 23, 146, "Weapon", "Selector", "<EOS>", 216, 87, 193, "Enemy", "Player", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), WeaponSelector(\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -4.571606144362818, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "AcidicSwampOoze", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"hole0": "Kill", "_type": "Template5"}, {"func": {"id": "WeaponSelector", "_type": "Name"}, "args": [{"hole0": "EnemyPlayer", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -2.288818359375e-05, -3.6119981814408675e-05, -0.005933357868343592, -0.0015473088715225458, -0.00019608080037869513, -5.7220458984375e-06, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00121307373046875, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.0010561172384768724, -3.778933751164004e-05, -0.0009262443636544049, -6.151199340820312e-05, -0.0006178140174597502, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.0001430511474609375, -3.814697265625e-06, -0.0001895427703857422, -1.9073486328125e-06, -0.0332794189453125, -5.7220458984375e-06, -4.00543212890625e-05, -1.9073486328125e-05, -0.012308120727539062, -7.62939453125e-06, -3.7546420097351074, -0.0001432798453606665, -1.52587890625e-05, -0.0004787445068359375, -0.7438888549804688, 0.0, -0.010311484336853027, -7.2479248046875e-05, -3.814697265625e-06, -9.1552734375e-05, -0.00016021728515625, 0.0, -0.0022089339327067137, -0.00036656856536865234, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, 0.0, -6.103515625e-05, -3.814697265625e-06, -0.0001239776611328125, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0010133981704711914, -1.1920922133867862e-06, -3.0994415283203125e-05, -4.768370445162873e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Acidic", "Swamp", "Ooze", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 69, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 87, 193, "Kill", "<EOS>", 58, 123, 23, 146, "Weapon", "Selector", "<EOS>", 216, 87, 193, "Enemy", "Player", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(5), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -4.835978370970452, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "AcidicSwampOoze", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template5"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -2.288818359375e-05, -3.6119981814408675e-05, -0.005933357868343592, -0.0015473088715225458, -0.00019608080037869513, -5.7220458984375e-06, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00121307373046875, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.0010561172384768724, -3.778933751164004e-05, -0.0009262443636544049, -6.151199340820312e-05, -0.0006178140174597502, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.0001430511474609375, -3.814697265625e-06, -0.0001895427703857422, -1.9073486328125e-06, -0.0332794189453125, -5.7220458984375e-06, -4.00543212890625e-05, -1.9073486328125e-05, -4.438782691955566, -1.9073486328125e-05, -1.71661376953125e-05, -5.7220458984375e-06, -0.23318330943584442, -0.0003158777253702283, -3.814697265625e-05, -0.062254905700683594, -0.004207611083984375, -1.9073486328125e-06, -0.05033250153064728, -1.5497207641601562e-05, 0.0, 0.0, 0.0, -1.1563301086425781e-05, 0.0, -3.814697265625e-06, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -0.0009750127792358398, -1.0728830375228426e-06, -3.0994415283203125e-05, -4.768370445162873e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Acidic", "Swamp", "Ooze", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 69, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Heal", "<EOS>", 216, 77, 87, 193, "Hero", "Selector", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=(Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())), Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer()))))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -5.025165221940256, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "AcidicSwampOoze", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"_type": "Tuple", "elts": [{"func": {"_type": "Template21"}, "args": [{"hole0": "Destroy", "_type": "Template5"}, {"func": {"id": "WeaponSelector", "_type": "Name"}, "args": [{"hole0": "EnemyPlayer", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, {"func": {"_type": "Template21"}, "args": [{"hole0": "Destroy", "_type": "Template5"}, {"func": {"id": "WeaponSelector", "_type": "Name"}, "args": [{"hole0": "EnemyPlayer", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}]}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -2.288818359375e-05, -3.6119981814408675e-05, -0.005933357868343592, -0.0015473088715225458, -0.00019608080037869513, -5.7220458984375e-06, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00121307373046875, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.0010561172384768724, -3.778933751164004e-05, -0.0009262443636544049, -6.151199340820312e-05, -0.0006178140174597502, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.0001430511474609375, -3.814697265625e-06, -0.0001895427703857422, -1.9073486328125e-06, -3.663456916809082, -0.002437591552734375, -0.000247955322265625, -0.0005054473876953125, 0.0, -0.9520788192749023, -3.814697265625e-06, -0.3001842498779297, -1.9073486328125e-06, -0.0028770833741873503, -0.0011000784579664469, -1.52587890625e-05, -0.000244140625, -2.6702880859375e-05, 0.0, -0.007667899131774902, -7.2479248046875e-05, -1.9073486328125e-06, -0.000186920166015625, -6.67572021484375e-05, 0.0, -0.0028281358536332846, -0.0008711814880371094, 0.0, -0.0137481689453125, -0.0002803802490234375, -0.0010986328125, -5.7220458984375e-06, -0.04807090759277344, -1.9073486328125e-06, -0.0006934797274880111, -0.0018139310413971543, -0.0001544952392578125, -0.00022125244140625, -1.71661376953125e-05, 0.0, -0.006943941116333008, -7.2479248046875e-05, -3.814697265625e-06, -0.0001888275146484375, -5.14984130859375e-05, 0.0, -0.002647929824888706, -0.0005179643630981445, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -6.103515625e-05, -3.814697265625e-06, -0.000308990478515625, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0010170936584472656, -1.311301275563892e-06, -3.2901763916015625e-05, -4.768370445162873e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Acidic", "Swamp", "Ooze", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 69, 89, 88, 224, 205, "battlecry", "<EOS>", 53, 198, 217, 58, 123, 34, 217, 87, 193, "Destroy", "<EOS>", 58, 123, 23, 146, "Weapon", "Selector", "<EOS>", 216, 87, 193, "Enemy", "Player", "<EOS>", 58, 123, 34, 217, 87, 193, "Destroy", "<EOS>", 58, 123, 23, 146, "Weapon", "Selector", "<EOS>", 216, 87, 193, "Enemy", "Player", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class Acidic<UNK>Ooze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -5.30527225671824, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Acidic<UNK>Ooze", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"hole0": "Destroy", "_type": "Template5"}, {"func": {"id": "WeaponSelector", "_type": "Name"}, "args": [{"hole0": "EnemyPlayer", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -2.288818359375e-05, -3.6119981814408675e-05, -5.167163848876953, -0.0015473088715225458, -0.00019608080037869513, -5.7220458984375e-06, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00121307373046875, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.0010561172384768724, -3.778933751164004e-05, -0.0009262443636544049, -6.151199340820312e-05, -0.0006178140174597502, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.0001430511474609375, -3.814697265625e-06, -0.0001895427703857422, -1.9073486328125e-06, -0.0332794189453125, -5.7220458984375e-06, -4.00543212890625e-05, -1.9073486328125e-05, -0.012308120727539062, -7.62939453125e-06, -0.033049650490283966, -0.03870338574051857, -8.20159912109375e-05, -0.0005893707275390625, -0.0007534027099609375, 0.0, -0.007558465003967285, -0.0001220703125, -1.9073486328125e-06, -0.0001373291015625, -0.0001430511474609375, 0.0, -0.0030588791705667973, -0.0006213188171386719, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, 0.0, -5.91278076171875e-05, -3.814697265625e-06, -0.00012969970703125, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0010132789611816406, -1.1920922133867862e-06, -3.0994415283203125e-05, -4.768370445162873e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Acidic", "<UNK>", "Ooze", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 69, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 87, 193, "Destroy", "<EOS>", 58, 123, 23, 146, "Weapon", "Selector", "<EOS>", 216, 87, 193, "Enemy", "Player", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=(Attribute('<UNK>',\n            WeaponSelector(EnemyPlayer())), Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer()))))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -5.325277468857962, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "AcidicSwampOoze", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"_type": "Tuple", "elts": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"_type": "Str", "s": "<UNK>"}, {"func": {"id": "WeaponSelector", "_type": "Name"}, "args": [{"hole0": "EnemyPlayer", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, {"func": {"_type": "Template21"}, "args": [{"hole0": "Destroy", "_type": "Template5"}, {"func": {"id": "WeaponSelector", "_type": "Name"}, "args": [{"hole0": "EnemyPlayer", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}]}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -2.288818359375e-05, -3.6119981814408675e-05, -0.005933357868343592, -0.0015473088715225458, -0.00019608080037869513, -5.7220458984375e-06, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00121307373046875, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.0010561172384768724, -3.778933751164004e-05, -0.0009262443636544049, -6.151199340820312e-05, -0.0006178140174597502, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.0001430511474609375, -3.814697265625e-06, -0.0001895427703857422, -1.9073486328125e-06, -3.663456916809082, -0.002437591552734375, -0.000247955322265625, -0.0005054473876953125, 0.0, -0.49608707427978516, -1.9073486328125e-06, -0.8670923709869385, -1.8477414414519444e-05, -2.288818359375e-05, -0.08727645874023438, -0.00058746337890625, -0.02559855952858925, -0.00089263916015625, -0.07890033721923828, -0.0002193450927734375, -0.003681182861328125, 0.0, -0.008554697036743164, -8.392333984375e-05, -7.62939453125e-06, -0.0001468658447265625, -0.000194549560546875, -1.9073486328125e-06, -0.0018961479654535651, -0.0005697011947631836, 0.0, -0.0063228607177734375, -0.00037384033203125, -0.0013637542724609375, -1.9073486328125e-06, -0.05159759521484375, -1.9073486328125e-06, -0.0005046996520832181, -0.002081148326396942, -0.0001277923583984375, -0.0002422332763671875, -1.33514404296875e-05, 0.0, -0.006521940231323242, -6.4849853515625e-05, -3.814697265625e-06, -0.000263214111328125, -4.9591064453125e-05, 0.0, -0.002991332206875086, -0.0005060434341430664, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-05, -3.814697265625e-06, -0.000293731689453125, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -0.0010421276092529297, -1.311301275563892e-06, -3.3020973205566406e-05, -4.768370445162873e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Acidic", "Swamp", "Ooze", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 69, 89, 88, 224, 205, "battlecry", "<EOS>", 53, 198, 217, 58, 123, 23, 146, "Attribute", "<EOS>", 217, 66, 155, "<UNK>", "<EOS>", 58, 123, 23, 146, "Weapon", "Selector", "<EOS>", 216, 87, 193, "Enemy", "Player", "<EOS>", 58, 123, 34, 217, 87, 193, "Destroy", "<EOS>", 58, 123, 23, 146, "Weapon", "Selector", "<EOS>", 216, 87, 193, "Enemy", "Player", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(<UNK>Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -5.5163610709670365, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "AcidicSwampOoze", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"hole0": "<UNK>Destroy", "_type": "Template5"}, {"func": {"id": "WeaponSelector", "_type": "Name"}, "args": [{"hole0": "EnemyPlayer", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -2.288818359375e-05, -3.6119981814408675e-05, -0.005933357868343592, -0.0015473088715225458, -0.00019608080037869513, -5.7220458984375e-06, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00121307373046875, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.0010561172384768724, -3.778933751164004e-05, -0.0009262443636544049, -6.151199340820312e-05, -0.0006178140174597502, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.0001430511474609375, -3.814697265625e-06, -0.0001895427703857422, -1.9073486328125e-06, -0.0332794189453125, -5.7220458984375e-06, -4.00543212890625e-05, -1.9073486328125e-05, -0.012308120727539062, -7.62939453125e-06, -5.279019832611084, -0.16391442716121674, -0.000470058002974838, -0.000286102294921875, -0.000202178955078125, -0.0004825592041015625, 0.0, -0.00944662094116211, -0.00018310546875, -1.9073486328125e-06, -4.1961669921875e-05, -4.76837158203125e-05, 0.0, -0.0026212367229163647, -0.00042045116424560547, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, 0.0, -5.91278076171875e-05, -3.814697265625e-06, -0.0001239776611328125, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0010172128677368164, -1.1920922133867862e-06, -3.0994415283203125e-05, -4.768370445162873e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Acidic", "Swamp", "Ooze", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 69, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 87, 193, "<UNK>", "Destroy", "<EOS>", 58, 123, 23, 146, "Weapon", "Selector", "<EOS>", 216, 87, 193, "Enemy", "Player", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=(Draw(Attribute('<UNK>',\n            WeaponSelector(EnemyPlayer()))), Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer()))))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -5.7965639229976205, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "AcidicSwampOoze", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"_type": "Tuple", "elts": [{"func": {"id": "Draw", "_type": "Name"}, "args": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"_type": "Str", "s": "<UNK>"}, {"func": {"id": "WeaponSelector", "_type": "Name"}, "args": [{"hole0": "EnemyPlayer", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}, {"func": {"_type": "Template21"}, "args": [{"hole0": "Destroy", "_type": "Template5"}, {"func": {"id": "WeaponSelector", "_type": "Name"}, "args": [{"hole0": "EnemyPlayer", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}]}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -2.288818359375e-05, -3.6119981814408675e-05, -0.005933357868343592, -0.0015473088715225458, -0.00019608080037869513, -5.7220458984375e-06, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00121307373046875, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.0010561172384768724, -3.778933751164004e-05, -0.0009262443636544049, -6.151199340820312e-05, -0.0006178140174597502, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.0001430511474609375, -3.814697265625e-06, -0.0001895427703857422, -1.9073486328125e-06, -3.663456916809082, -0.002437591552734375, -0.000247955322265625, -0.0005054473876953125, 0.0, -0.49608707427978516, -1.9073486328125e-06, -1.4007923603057861, -3.814697265625e-06, -0.05556297302246094, -0.0008792877197265625, -2.288818359375e-05, -0.0008192062377929688, -9.5367431640625e-06, -0.013920425437390804, -6.246566044865176e-05, -1.52587890625e-05, -0.0037708282470703125, -0.0003223419189453125, -0.026123803108930588, -0.0011997222900390625, -0.03188896179199219, -2.6702880859375e-05, -0.0009708404541015625, 0.0, -0.006775736343115568, -8.022785186767578e-05, -3.814697265625e-06, -0.0001354217529296875, -0.000186920166015625, -1.9073486328125e-06, -0.0023627339396625757, -0.0006194114685058594, 0.0, -0.0081939697265625, -0.00035858154296875, -0.00141143798828125, -3.814697265625e-06, -0.04923248291015625, -1.9073486328125e-06, -0.0005099429981783032, -0.002185002900660038, -0.000125885009765625, -0.0002269744873046875, -1.33514404296875e-05, 0.0, -0.007062673568725586, -7.05718994140625e-05, -1.9073486328125e-06, -0.000278472900390625, -5.53131103515625e-05, 0.0, -0.003242158330976963, -0.00047969818115234375, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-05, -3.814697265625e-06, -0.00028228759765625, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -5.7220458984375e-06, -0.001101374626159668, -1.4305104514278355e-06, -3.1113624572753906e-05, -4.768370445162873e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Acidic", "Swamp", "Ooze", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 69, 89, 88, 224, 205, "battlecry", "<EOS>", 53, 198, 217, 58, 123, 23, 146, "Draw", "<EOS>", 216, 58, 123, 23, 146, "Attribute", "<EOS>", 217, 66, 155, "<UNK>", "<EOS>", 58, 123, 23, 146, "Weapon", "Selector", "<EOS>", 216, 87, 193, "Enemy", "Player", "<EOS>", 58, 123, 34, 217, 87, 193, "Destroy", "<EOS>", 58, 123, 23, 146, "Weapon", "Selector", "<EOS>", 216, 87, 193, "Enemy", "Player", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), MinionSelector(\n            Has<UNK>('taunt'), EnemyPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -6.030934968289216, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "AcidicSwampOoze", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"hole0": "Kill", "_type": "Template5"}, {"func": {"_type": "Template26"}, "args": [{"func": {"id": "Has<UNK>", "_type": "Name"}, "args": [{"_type": "Str", "s": "taunt"}], "_type": "Call"}, {"hole0": "EnemyPlayer", "_type": "Template5"}, {"hole0": "UserPicker", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -2.288818359375e-05, -3.6119981814408675e-05, -0.005933357868343592, -0.0015473088715225458, -0.00019608080037869513, -5.7220458984375e-06, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00121307373046875, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.0010561172384768724, -3.778933751164004e-05, -0.0009262443636544049, -6.151199340820312e-05, -0.0006178140174597502, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.0001430511474609375, -3.814697265625e-06, -0.0001895427703857422, -1.9073486328125e-06, -0.0332794189453125, -5.7220458984375e-06, -4.00543212890625e-05, -1.9073486328125e-05, -0.012308120727539062, -7.62939453125e-06, -3.7546420097351074, -0.0001432798453606665, -1.52587890625e-05, -0.0004787445068359375, -0.6459331512451172, -0.04541587829589844, -0.09213542938232422, -7.82012939453125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.1480175256729126, -0.0038109933957457542, -0.0021286001428961754, -7.62939453125e-06, -0.009608268737792969, -0.000843048095703125, -0.8775655627250671, -0.3703618049621582, -0.0014171600341796875, 0.0, -0.004650111310184002, -0.0001773834228515625, -4.00543212890625e-05, -0.0001163482666015625, 0.0, -0.01403223816305399, -0.000255346269113943, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -9.34600830078125e-05, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0008951425552368164, -1.311301275563892e-06, -3.2901763916015625e-05, -4.768370445162873e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Acidic", "Swamp", "Ooze", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 69, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 87, 193, "Kill", "<EOS>", 58, 123, 38, 218, 58, 123, 23, 146, "Has", "<UNK>", "<EOS>", 216, 66, 155, "taunt", "<EOS>", 87, 193, "Enemy", "Player", "<EOS>", 87, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), MinionSelector(\n            Has<UNK>(\"Gallywix's Ooze\"), EnemyPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -6.291805033829235, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "AcidicSwampOoze", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"hole0": "Kill", "_type": "Template5"}, {"func": {"_type": "Template26"}, "args": [{"func": {"id": "Has<UNK>", "_type": "Name"}, "args": [{"_type": "Str", "s": "Gallywix's Ooze"}], "_type": "Call"}, {"hole0": "EnemyPlayer", "_type": "Template5"}, {"hole0": "UserPicker", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -2.288818359375e-05, -3.6119981814408675e-05, -0.005933357868343592, -0.0015473088715225458, -0.00019608080037869513, -5.7220458984375e-06, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00121307373046875, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.0010561172384768724, -3.778933751164004e-05, -0.0009262443636544049, -6.151199340820312e-05, -0.0006178140174597502, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.0001430511474609375, -3.814697265625e-06, -0.0001895427703857422, -1.9073486328125e-06, -0.0332794189453125, -5.7220458984375e-06, -4.00543212890625e-05, -1.9073486328125e-05, -0.012308120727539062, -7.62939453125e-06, -3.7546420097351074, -0.0001432798453606665, -1.52587890625e-05, -0.0004787445068359375, -0.6459331512451172, -0.04541587829589844, -0.09213542938232422, -7.82012939453125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.1480175256729126, -0.0038109933957457542, -0.0021286001428961754, -7.62939453125e-06, -0.009608268737792969, -0.000843048095703125, -1.1585371494293213, -0.015261292457580566, -0.2941162884235382, -2.09808349609375e-05, -0.004006385803222656, 0.0, -0.04027901962399483, -0.0006313323974609375, -4.00543212890625e-05, -0.0001850128173828125, -1.9073486328125e-06, -0.01611470803618431, -0.0003529786772560328, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -9.5367431640625e-05, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -3.814697265625e-06, -0.0008246898651123047, -1.4305104514278355e-06, -3.4689903259277344e-05, -3.576278118089249e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Acidic", "Swamp", "Ooze", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 69, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 87, 193, "Kill", "<EOS>", 58, 123, 38, 218, 58, 123, 23, 146, "Has", "<UNK>", "<EOS>", 216, 66, 155, "Gallywix's", " ", "Ooze", "<EOS>", 87, 193, "Enemy", "Player", "<EOS>", 87, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(), HeroSelector\n            (EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -6.4743943454185455, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "AcidicSwampOoze", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"hole0": "Destroy", "_type": "Template5"}, {"func": {"id": "HeroSelector", "_type": "Name"}, "args": [{"hole0": "EnemyPlayer", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -2.288818359375e-05, -3.6119981814408675e-05, -0.005933357868343592, -0.0015473088715225458, -0.00019608080037869513, -5.7220458984375e-06, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00121307373046875, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.0010561172384768724, -3.778933751164004e-05, -0.0009262443636544049, -6.151199340820312e-05, -0.0006178140174597502, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.0001430511474609375, -3.814697265625e-06, -0.0001895427703857422, -1.9073486328125e-06, -0.0332794189453125, -5.7220458984375e-06, -4.00543212890625e-05, -1.9073486328125e-05, -0.012308120727539062, -7.62939453125e-06, -0.033049650490283966, -0.03870338574051857, -8.20159912109375e-05, -0.0005893707275390625, -0.0007534027099609375, 0.0, -6.337433338165283, -7.43865966796875e-05, -1.9073486328125e-06, -7.43865966796875e-05, -0.0004520416259765625, 0.0, -0.003352288156747818, -0.0006031990051269531, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, 0.0, -5.91278076171875e-05, -3.814697265625e-06, -0.000133514404296875, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0010133981704711914, -1.311301275563892e-06, -3.0994415283203125e-05, -4.768370445162873e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Acidic", "Swamp", "Ooze", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 69, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 87, 193, "Destroy", "<EOS>", 58, 123, 23, 146, "Hero", "Selector", "<EOS>", 216, 87, 193, "Enemy", "Player", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            PlayerSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -6.579373432318903, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "AcidicSwampOoze", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"hole0": "Destroy", "_type": "Template5"}, {"func": {"id": "PlayerSelector", "_type": "Name"}, "args": [{"hole0": "EnemyPlayer", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -2.288818359375e-05, -3.6119981814408675e-05, -0.005933357868343592, -0.0015473088715225458, -0.00019608080037869513, -5.7220458984375e-06, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00121307373046875, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.0010561172384768724, -3.778933751164004e-05, -0.0009262443636544049, -6.151199340820312e-05, -0.0006178140174597502, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.0001430511474609375, -3.814697265625e-06, -0.0001895427703857422, -1.9073486328125e-06, -0.0332794189453125, -5.7220458984375e-06, -4.00543212890625e-05, -1.9073486328125e-05, -0.012308120727539062, -7.62939453125e-06, -0.033049650490283966, -0.03870338574051857, -8.20159912109375e-05, -0.0005893707275390625, -0.0007534027099609375, 0.0, -6.4432454109191895, -0.0001983642578125, -1.9073486328125e-06, -3.814697265625e-05, -0.000423431396484375, 0.0, -0.002701930934563279, -0.00036156177520751953, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, 0.0, -6.103515625e-05, -3.814697265625e-06, -0.000125885009765625, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -0.001015305519104004, -1.1920922133867862e-06, -3.0994415283203125e-05, -4.768370445162873e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Acidic", "Swamp", "Ooze", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 69, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 87, 193, "Destroy", "<EOS>", 58, 123, 23, 146, "Player", "Selector", "<EOS>", 216, 87, 193, "Enemy", "Player", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(), WeaponSelector(\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -6.643016522047333, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "AcidicSwampOoze", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"hole0": "Heal", "_type": "Template5"}, {"func": {"id": "WeaponSelector", "_type": "Name"}, "args": [{"hole0": "EnemyPlayer", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -2.288818359375e-05, -3.6119981814408675e-05, -0.005933357868343592, -0.0015473088715225458, -0.00019608080037869513, -5.7220458984375e-06, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00121307373046875, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.0010561172384768724, -3.778933751164004e-05, -0.0009262443636544049, -6.151199340820312e-05, -0.0006178140174597502, 0.0, -4.57763671875e-05, -2.86102294921875e-05, -1.33514404296875e-05, -0.0001430511474609375, -3.814697265625e-06, -0.0001895427703857422, -1.9073486328125e-06, -0.0332794189453125, -5.7220458984375e-06, -4.00543212890625e-05, -1.9073486328125e-05, -0.012308120727539062, -7.62939453125e-06, -6.5327959060668945, -0.009349445812404156, -0.0003490447998046875, -0.001712799072265625, -0.025503158569335938, 0.0, -0.011049270629882812, -8.7738037109375e-05, -3.814697265625e-06, -0.0001621246337890625, -0.0002613067626953125, 0.0, -0.0019969497807323933, -0.0005220174789428711, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, 0.0, -6.103515625e-05, -3.814697265625e-06, -0.000125885009765625, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0010133981704711914, -1.1920922133867862e-06, -3.0994415283203125e-05, -4.768370445162873e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Acidic", "Swamp", "Ooze", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 69, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 87, 193, "Heal", "<EOS>", 58, 123, 23, 146, "Weapon", "Selector", "<EOS>", 216, 87, 193, "Enemy", "Player", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "", "score": -19.49559211730957, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, -3.814697265625e-06, -19.495588302612305], "choice_history": [93, 145, 228]}], "index": 0}
{"beams": [{"inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n", "score": -0.4604414687296412, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "AncestralHealing", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template31"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Assign", "value": {"_type": "NameConstant", "value": true}, "targets": [{"attr": "taunt", "_type": "Attribute", "value": {"_type": "Template8"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -2.09808349609375e-05, -3.814697265625e-06, -9.1552734375e-05, -4.1961669921875e-05, -1.1920922133867862e-06, -4.362964682513848e-05, -1.1920922133867862e-06, -1.33514404296875e-05, -0.0002117156982421875, -0.00017547607421875, -1.9073486328125e-05, -1.9073486328125e-06, -1.1563301086425781e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0001697540283203125, -0.0001163482666015625, -2.288818359375e-05, -6.29425048828125e-05, -6.4849853515625e-05, -1.1444091796875e-05, -0.0005092620849609375, -3.0517578125e-05, -9.5367431640625e-06, -2.8371408916427754e-05, -2.1219253540039062e-05, -1.239776611328125e-05, -4.0531158447265625e-06, -0.0001964569091796875, -3.814697265625e-06, 0.0, 0.0, 0.0, -9.655952453613281e-06, 0.0, -0.0005218982114456594, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.00019085407257080078, -7.62939453125e-06, -0.06050682067871094, 0.0, -4.00543212890625e-05, 0.0, -1.52587890625e-05, -3.24249267578125e-05, -0.000152587890625, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -3.814697265625e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -0.0024003982543945312, -1.1801719665527344e-05, -5.14984130859375e-05, -1.71661376953125e-05, -2.86102294921875e-05, -3.814697265625e-05, 0.0, 0.0, -0.00083160400390625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -5.924701690673828e-05, -2.503394898667466e-05, -0.00565338134765625, -1.71661376953125e-05, -0.0002651214599609375, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -8.0108642578125e-05, -0.017860889434814453, -1.1444091796875e-05, -3.0517578125e-05, -0.0030345916748046875, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -0.000576019287109375, -0.03710675239562988, 0.0, -1.9073486328125e-06, -0.2908334732055664, -0.0002841949462890625, -0.0012149810791015625, 0.0, -0.002796173095703125, -0.008101344108581543, -1.1444091796875e-05, -0.000263214111328125, -0.0070343017578125, -0.0017375946044921875, -1.1444091796875e-05, -9.72747802734375e-05, -1.71661376953125e-05, -0.0001697540283203125, -0.008505940437316895, -1.9073486328125e-06, -0.0037059783935546875, -0.00376129150390625, -0.000133514404296875, -7.867813110351562e-06, -2.09808349609375e-05], "choice_history": [93, 145, 230, 101, 125, "Ancestral", "Healing", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ancestral", " ", "Healing", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 58, 121, 15, 116, 52, "calculate_max_health", "<EOS>", 74, 98, 115, 216, 55, 116, 52, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(3), self)\n        self.target.increase_health(2)\n", "score": -2.0842878804346583, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "AncestralHealing", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template31"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -2.09808349609375e-05, -3.814697265625e-06, -9.1552734375e-05, -4.1961669921875e-05, -1.1920922133867862e-06, -4.362964682513848e-05, -1.1920922133867862e-06, -1.33514404296875e-05, -0.0002117156982421875, -0.00017547607421875, -1.9073486328125e-05, -1.9073486328125e-06, -1.1563301086425781e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0001697540283203125, -0.0001163482666015625, -2.288818359375e-05, -6.29425048828125e-05, -6.4849853515625e-05, -1.1444091796875e-05, -0.0005092620849609375, -3.0517578125e-05, -9.5367431640625e-06, -2.8371408916427754e-05, -2.1219253540039062e-05, -1.239776611328125e-05, -4.0531158447265625e-06, -0.0001964569091796875, -3.814697265625e-06, 0.0, 0.0, 0.0, -9.655952453613281e-06, 0.0, -0.0005218982114456594, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.00019085407257080078, -7.62939453125e-06, -0.06050682067871094, 0.0, -4.00543212890625e-05, 0.0, -1.52587890625e-05, -3.24249267578125e-05, -0.000152587890625, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -3.814697265625e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -0.0024003982543945312, -1.1801719665527344e-05, -5.14984130859375e-05, -1.71661376953125e-05, -2.86102294921875e-05, -3.814697265625e-05, 0.0, 0.0, -0.00083160400390625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -5.924701690673828e-05, -2.503394898667466e-05, -0.00565338134765625, -1.71661376953125e-05, -0.0002651214599609375, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -8.0108642578125e-05, -0.017860889434814453, -1.1444091796875e-05, -3.0517578125e-05, -0.0030345916748046875, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -0.000576019287109375, -0.03710675239562988, 0.0, -1.9073486328125e-06, -1.5338430404663086, -2.6702880859375e-05, -0.0011692047119140625, -1.9073486328125e-06, -1.1444091796875e-05, -0.06292343139648438, -7.62939453125e-06, 0.0, -0.19726276397705078, -0.05728590488433838, -3.814697265625e-06, -1.9073486328125e-06, -0.1000070571899414, -1.1444091796875e-05], "choice_history": [93, 145, 230, 101, 125, "Ancestral", "Healing", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ancestral", " ", "Healing", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 72, 74, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 69, 109]}, {"inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n", "score": -3.721720907818053, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "AncestralHealing", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template31"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Assign", "value": {"_type": "NameConstant", "value": true}, "targets": [{"attr": "taunt", "_type": "Attribute", "value": {"_type": "Template8"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -2.09808349609375e-05, -3.814697265625e-06, -9.1552734375e-05, -4.1961669921875e-05, -1.1920922133867862e-06, -4.362964682513848e-05, -1.1920922133867862e-06, -1.33514404296875e-05, -0.0002117156982421875, -0.00017547607421875, -1.9073486328125e-05, -1.9073486328125e-06, -1.1563301086425781e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0001697540283203125, -0.0001163482666015625, -2.288818359375e-05, -6.29425048828125e-05, -6.4849853515625e-05, -1.1444091796875e-05, -0.0005092620849609375, -3.0517578125e-05, -9.5367431640625e-06, -2.8371408916427754e-05, -2.1219253540039062e-05, -1.239776611328125e-05, -4.0531158447265625e-06, -0.0001964569091796875, -3.814697265625e-06, 0.0, 0.0, 0.0, -9.655952453613281e-06, 0.0, -0.0005218982114456594, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.00019085407257080078, -7.62939453125e-06, -2.837953567504883, 0.0, -1.71661376953125e-05, 0.0, -3.4332275390625e-05, -3.0517578125e-05, -0.0002307891845703125, 0.0, -3.4332275390625e-05, 0.0, -3.0517578125e-05, 0.0, -3.635883331298828e-05, -1.9073486328125e-06, -0.0036935806274414062, -1.0132789611816406e-05, -4.1961669921875e-05, -0.003265380859375, -3.814697265625e-06, -0.0003833770751953125, -5.340576171875e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.0018749237060546875, -1.9073486328125e-05, -2.288818359375e-05, -0.005300045013427734, -4.7206878662109375e-05, -0.0038852691650390625, -0.000141143798828125, -0.0002574920654296875, -0.000804901123046875, -0.14249420166015625, -0.0002613067626953125, -0.1577587127685547, 0.0, -0.0037364959716796875, 0.0, -0.034205786883831024, -7.152556463552173e-06, -0.004339080769568682, 0.0, -0.000499725341796875, -0.05604839324951172, -1.9073486328125e-05, -0.004787445068359375, -0.0001010894775390625, -7.2479248046875e-05, 0.0, -0.0070171356201171875, 0.0, -0.01271522045135498, -7.748603820800781e-06, -0.013326999731361866, -1.9073486328125e-06, -6.4849853515625e-05, -4.00543212890625e-05, -0.0002899169921875, 0.0, -0.0004634857177734375, 0.0, -0.006550312042236328, -2.7060508728027344e-05, -0.010206107050180435, -2.5510787963867188e-05, -8.7738037109375e-05, -7.82012939453125e-05, -6.496906280517578e-05, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -0.0009860992431640625, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -6.139278411865234e-05, -2.9802317840221804e-06, -0.003958702087402344, -4.57763671875e-05, -0.000141143798828125, -3.814697265625e-06, 0.0, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -8.96453857421875e-05, -0.015413522720336914, -9.5367431640625e-06, -4.00543212890625e-05, -0.0017108917236328125, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -0.000484466552734375, -0.03207051753997803, 0.0, -1.9073486328125e-06, -0.3094797134399414, -0.00029754638671875, -0.001201629638671875, 0.0, -0.00249481201171875, -0.007797360420227051, -1.33514404296875e-05, -0.0002079010009765625, -0.009923934936523438, -0.0019130706787109375, -9.5367431640625e-06, -8.392333984375e-05, -2.47955322265625e-05, -0.000186920166015625, -0.009220242500305176, -1.9073486328125e-06, -0.003265380859375, -0.0041179656982421875, -0.0001392364501953125, -7.867813110351562e-06, -2.09808349609375e-05], "choice_history": [93, 145, 230, 101, 125, "Ancestral", "Healing", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ancestral", " ", "Healing", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 14, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 58, 121, 15, 116, 52, "calculate_max_health", "<EOS>", 74, 98, 115, 216, 55, 116, 52, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(4), self)\n        self.target.increase_health(2)\n", "score": -4.161639331354763, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "AncestralHealing", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template31"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template20"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -2.09808349609375e-05, -3.814697265625e-06, -9.1552734375e-05, -4.1961669921875e-05, -1.1920922133867862e-06, -4.362964682513848e-05, -1.1920922133867862e-06, -1.33514404296875e-05, -0.0002117156982421875, -0.00017547607421875, -1.9073486328125e-05, -1.9073486328125e-06, -1.1563301086425781e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0001697540283203125, -0.0001163482666015625, -2.288818359375e-05, -6.29425048828125e-05, -6.4849853515625e-05, -1.1444091796875e-05, -0.0005092620849609375, -3.0517578125e-05, -9.5367431640625e-06, -2.8371408916427754e-05, -2.1219253540039062e-05, -1.239776611328125e-05, -4.0531158447265625e-06, -0.0001964569091796875, -3.814697265625e-06, 0.0, 0.0, 0.0, -9.655952453613281e-06, 0.0, -0.0005218982114456594, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.00019085407257080078, -7.62939453125e-06, -0.06050682067871094, 0.0, -4.00543212890625e-05, 0.0, -1.52587890625e-05, -3.24249267578125e-05, -0.000152587890625, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -3.814697265625e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -0.0024003982543945312, -1.1801719665527344e-05, -5.14984130859375e-05, -1.71661376953125e-05, -2.86102294921875e-05, -3.814697265625e-05, 0.0, 0.0, -0.00083160400390625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -5.924701690673828e-05, -2.503394898667466e-05, -0.00565338134765625, -1.71661376953125e-05, -0.0002651214599609375, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -8.0108642578125e-05, -0.017860889434814453, -1.1444091796875e-05, -3.0517578125e-05, -0.0030345916748046875, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -0.000576019287109375, -0.03710675239562988, 0.0, -1.9073486328125e-06, -3.426481246948242, -0.000194549560546875, -0.0001220703125, 0.0, -1.9073486328125e-06, -0.33778858184814453, -1.52587890625e-05, 0.0, -0.17264747619628906, -0.0360407829284668, -3.814697265625e-06, -1.9073486328125e-06, -0.0565948486328125, -1.52587890625e-05], "choice_history": [93, 145, 230, 101, 125, "Ancestral", "Healing", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ancestral", " ", "Healing", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 76, 74, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 69, 109]}, {"inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_spell_damage(3), self)\n        self.target.increase_health(2)\n", "score": -4.506872294916775, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "AncestralHealing", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template31"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -2.09808349609375e-05, -3.814697265625e-06, -9.1552734375e-05, -4.1961669921875e-05, -1.1920922133867862e-06, -4.362964682513848e-05, -1.1920922133867862e-06, -1.33514404296875e-05, -0.0002117156982421875, -0.00017547607421875, -1.9073486328125e-05, -1.9073486328125e-06, -1.1563301086425781e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0001697540283203125, -0.0001163482666015625, -2.288818359375e-05, -6.29425048828125e-05, -6.4849853515625e-05, -1.1444091796875e-05, -0.0005092620849609375, -3.0517578125e-05, -9.5367431640625e-06, -2.8371408916427754e-05, -2.1219253540039062e-05, -1.239776611328125e-05, -4.0531158447265625e-06, -0.0001964569091796875, -3.814697265625e-06, 0.0, 0.0, 0.0, -9.655952453613281e-06, 0.0, -0.0005218982114456594, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.00019085407257080078, -7.62939453125e-06, -0.06050682067871094, 0.0, -4.00543212890625e-05, 0.0, -1.52587890625e-05, -3.24249267578125e-05, -0.000152587890625, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -3.814697265625e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -0.0024003982543945312, -1.1801719665527344e-05, -5.14984130859375e-05, -1.71661376953125e-05, -2.86102294921875e-05, -3.814697265625e-05, 0.0, 0.0, -0.00083160400390625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -5.924701690673828e-05, -2.503394898667466e-05, -0.00565338134765625, -1.71661376953125e-05, -0.0002651214599609375, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -8.0108642578125e-05, -0.017860889434814453, -1.1444091796875e-05, -3.0517578125e-05, -0.0030345916748046875, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -0.000576019287109375, -3.445563554763794, 0.0, 0.0, -0.5242271423339844, -0.000152587890625, -0.00213623046875, -1.9073486328125e-06, -9.5367431640625e-06, -0.11777305603027344, -9.5367431640625e-06, 0.0, -0.1674327850341797, -0.05402708053588867, -1.9073486328125e-06, -3.814697265625e-06, -0.10089874267578125, -1.1444091796875e-05], "choice_history": [93, 145, 230, 101, 125, "Ancestral", "Healing", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ancestral", " ", "Healing", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 69, 109]}, {"inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(3), self)\n        self.target.increase_health(4)\n", "score": -4.587200401796963, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "AncestralHealing", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template31"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -2.09808349609375e-05, -3.814697265625e-06, -9.1552734375e-05, -4.1961669921875e-05, -1.1920922133867862e-06, -4.362964682513848e-05, -1.1920922133867862e-06, -1.33514404296875e-05, -0.0002117156982421875, -0.00017547607421875, -1.9073486328125e-05, -1.9073486328125e-06, -1.1563301086425781e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0001697540283203125, -0.0001163482666015625, -2.288818359375e-05, -6.29425048828125e-05, -6.4849853515625e-05, -1.1444091796875e-05, -0.0005092620849609375, -3.0517578125e-05, -9.5367431640625e-06, -2.8371408916427754e-05, -2.1219253540039062e-05, -1.239776611328125e-05, -4.0531158447265625e-06, -0.0001964569091796875, -3.814697265625e-06, 0.0, 0.0, 0.0, -9.655952453613281e-06, 0.0, -0.0005218982114456594, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.00019085407257080078, -7.62939453125e-06, -0.06050682067871094, 0.0, -4.00543212890625e-05, 0.0, -1.52587890625e-05, -3.24249267578125e-05, -0.000152587890625, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -3.814697265625e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -0.0024003982543945312, -1.1801719665527344e-05, -5.14984130859375e-05, -1.71661376953125e-05, -2.86102294921875e-05, -3.814697265625e-05, 0.0, 0.0, -0.00083160400390625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -5.924701690673828e-05, -2.503394898667466e-05, -0.00565338134765625, -1.71661376953125e-05, -0.0002651214599609375, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -8.0108642578125e-05, -0.017860889434814453, -1.1444091796875e-05, -3.0517578125e-05, -0.0030345916748046875, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -0.000576019287109375, -0.03710675239562988, 0.0, -1.9073486328125e-06, -1.5338430404663086, -2.6702880859375e-05, -0.0011692047119140625, -1.9073486328125e-06, -1.1444091796875e-05, -0.06292343139648438, -7.62939453125e-06, 0.0, -0.19726276397705078, -0.05728590488433838, -3.814697265625e-06, -1.9073486328125e-06, -2.602139472961426, -0.0007915496826171875], "choice_history": [93, 145, 230, 101, 125, "Ancestral", "Healing", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ancestral", " ", "Healing", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 72, 74, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 76, 109]}, {"inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(2)\n", "score": -4.854493855013516, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "AncestralHealing", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template31"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -2.09808349609375e-05, -3.814697265625e-06, -9.1552734375e-05, -4.1961669921875e-05, -1.1920922133867862e-06, -4.362964682513848e-05, -1.1920922133867862e-06, -1.33514404296875e-05, -0.0002117156982421875, -0.00017547607421875, -1.9073486328125e-05, -1.9073486328125e-06, -1.1563301086425781e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0001697540283203125, -0.0001163482666015625, -2.288818359375e-05, -6.29425048828125e-05, -6.4849853515625e-05, -1.1444091796875e-05, -0.0005092620849609375, -3.0517578125e-05, -9.5367431640625e-06, -2.8371408916427754e-05, -2.1219253540039062e-05, -1.239776611328125e-05, -4.0531158447265625e-06, -0.0001964569091796875, -3.814697265625e-06, 0.0, 0.0, 0.0, -9.655952453613281e-06, 0.0, -0.0005218982114456594, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.00019085407257080078, -7.62939453125e-06, -0.06050682067871094, 0.0, -4.00543212890625e-05, 0.0, -1.52587890625e-05, -3.24249267578125e-05, -0.000152587890625, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -3.814697265625e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -0.0024003982543945312, -1.1801719665527344e-05, -5.14984130859375e-05, -1.71661376953125e-05, -2.86102294921875e-05, -3.814697265625e-05, 0.0, 0.0, -0.00083160400390625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -5.924701690673828e-05, -2.503394898667466e-05, -0.00565338134765625, -1.71661376953125e-05, -0.0002651214599609375, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -8.0108642578125e-05, -4.642487049102783, -1.9073486328125e-06, -2.6702880859375e-05, -0.04209423065185547, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.53131103515625e-05, -0.000164031982421875, 0.0, -0.007114410400390625, -0.007274031639099121, -3.814697265625e-06, -9.5367431640625e-06, -0.08215713500976562, -1.33514404296875e-05], "choice_history": [93, 145, 230, 101, 125, "Ancestral", "Healing", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ancestral", " ", "Healing", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 69, 109]}, {"inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_spell_damage(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n", "score": -5.270421980394985, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "AncestralHealing", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template31"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Assign", "value": {"_type": "NameConstant", "value": true}, "targets": [{"attr": "taunt", "_type": "Attribute", "value": {"_type": "Template8"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -2.09808349609375e-05, -3.814697265625e-06, -9.1552734375e-05, -4.1961669921875e-05, -1.1920922133867862e-06, -4.362964682513848e-05, -1.1920922133867862e-06, -1.33514404296875e-05, -0.0002117156982421875, -0.00017547607421875, -1.9073486328125e-05, -1.9073486328125e-06, -1.1563301086425781e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0001697540283203125, -0.0001163482666015625, -2.288818359375e-05, -6.29425048828125e-05, -6.4849853515625e-05, -1.1444091796875e-05, -0.0005092620849609375, -3.0517578125e-05, -9.5367431640625e-06, -2.8371408916427754e-05, -2.1219253540039062e-05, -1.239776611328125e-05, -4.0531158447265625e-06, -0.0001964569091796875, -3.814697265625e-06, 0.0, 0.0, 0.0, -9.655952453613281e-06, 0.0, -0.0005218982114456594, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.00019085407257080078, -7.62939453125e-06, -0.06050682067871094, 0.0, -4.00543212890625e-05, 0.0, -1.52587890625e-05, -3.24249267578125e-05, -0.000152587890625, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -3.814697265625e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -0.0024003982543945312, -1.1801719665527344e-05, -5.14984130859375e-05, -1.71661376953125e-05, -2.86102294921875e-05, -3.814697265625e-05, 0.0, 0.0, -0.00083160400390625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -5.924701690673828e-05, -2.503394898667466e-05, -0.00565338134765625, -1.71661376953125e-05, -0.0002651214599609375, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -8.0108642578125e-05, -0.017860889434814453, -1.1444091796875e-05, -3.0517578125e-05, -0.0030345916748046875, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -0.000576019287109375, -3.445563554763794, 0.0, 0.0, -1.6873178482055664, -0.000583648681640625, -0.0006275177001953125, 0.0, -0.0064716339111328125, -0.008969306945800781, -5.7220458984375e-06, -0.0002613067626953125, -0.0073528289794921875, -0.00185394287109375, -1.1444091796875e-05, -0.0001125335693359375, -1.71661376953125e-05, -0.000164031982421875, -0.00837242603302002, -1.9073486328125e-06, -0.0042572021484375, -0.00368499755859375, -0.0001392364501953125, -7.867813110351562e-06, -2.288818359375e-05], "choice_history": [93, 145, 230, 101, 125, "Ancestral", "Healing", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ancestral", " ", "Healing", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 58, 121, 15, 116, 52, "calculate_max_health", "<EOS>", 74, 98, 115, 216, 55, 116, 52, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(3), self)\n        self.target.<UNK>()\n", "score": -5.323785661234524, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "AncestralHealing", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template31"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -2.09808349609375e-05, -3.814697265625e-06, -9.1552734375e-05, -4.1961669921875e-05, -1.1920922133867862e-06, -4.362964682513848e-05, -1.1920922133867862e-06, -1.33514404296875e-05, -0.0002117156982421875, -0.00017547607421875, -1.9073486328125e-05, -1.9073486328125e-06, -1.1563301086425781e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0001697540283203125, -0.0001163482666015625, -2.288818359375e-05, -6.29425048828125e-05, -6.4849853515625e-05, -1.1444091796875e-05, -0.0005092620849609375, -3.0517578125e-05, -9.5367431640625e-06, -2.8371408916427754e-05, -2.1219253540039062e-05, -1.239776611328125e-05, -4.0531158447265625e-06, -0.0001964569091796875, -3.814697265625e-06, 0.0, 0.0, 0.0, -9.655952453613281e-06, 0.0, -0.0005218982114456594, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.00019085407257080078, -7.62939453125e-06, -0.06050682067871094, 0.0, -4.00543212890625e-05, 0.0, -1.52587890625e-05, -3.24249267578125e-05, -0.000152587890625, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -3.814697265625e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -0.0024003982543945312, -1.1801719665527344e-05, -5.14984130859375e-05, -1.71661376953125e-05, -2.86102294921875e-05, -3.814697265625e-05, 0.0, 0.0, -0.00083160400390625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -5.924701690673828e-05, -2.503394898667466e-05, -0.00565338134765625, -1.71661376953125e-05, -0.0002651214599609375, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -8.0108642578125e-05, -0.017860889434814453, -1.1444091796875e-05, -3.0517578125e-05, -0.0030345916748046875, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -0.000576019287109375, -0.03710675239562988, 0.0, -1.9073486328125e-06, -1.5338430404663086, -2.6702880859375e-05, -0.0011692047119140625, -1.9073486328125e-06, -1.1444091796875e-05, -2.8039045333862305, -4.57763671875e-05, 0.0, -0.3032035827636719, -0.5498440265655518, -1.9073486328125e-06, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Ancestral", "Healing", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ancestral", " ", "Healing", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 72, 74, 102, 128, 18, 121, 15, 116, 52, "<UNK>", "<EOS>", 109]}, {"inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(4), self)\n        self.target.<UNK>()\n", "score": -5.779568432345059, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "AncestralHealing", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template31"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template20"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -2.09808349609375e-05, -3.814697265625e-06, -9.1552734375e-05, -4.1961669921875e-05, -1.1920922133867862e-06, -4.362964682513848e-05, -1.1920922133867862e-06, -1.33514404296875e-05, -0.0002117156982421875, -0.00017547607421875, -1.9073486328125e-05, -1.9073486328125e-06, -1.1563301086425781e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0001697540283203125, -0.0001163482666015625, -2.288818359375e-05, -6.29425048828125e-05, -6.4849853515625e-05, -1.1444091796875e-05, -0.0005092620849609375, -3.0517578125e-05, -9.5367431640625e-06, -2.8371408916427754e-05, -2.1219253540039062e-05, -1.239776611328125e-05, -4.0531158447265625e-06, -0.0001964569091796875, -3.814697265625e-06, 0.0, 0.0, 0.0, -9.655952453613281e-06, 0.0, -0.0005218982114456594, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.00019085407257080078, -7.62939453125e-06, -0.06050682067871094, 0.0, -4.00543212890625e-05, 0.0, -1.52587890625e-05, -3.24249267578125e-05, -0.000152587890625, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -3.814697265625e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -0.0024003982543945312, -1.1801719665527344e-05, -5.14984130859375e-05, -1.71661376953125e-05, -2.86102294921875e-05, -3.814697265625e-05, 0.0, 0.0, -0.00083160400390625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -5.924701690673828e-05, -2.503394898667466e-05, -0.00565338134765625, -1.71661376953125e-05, -0.0002651214599609375, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -8.0108642578125e-05, -0.017860889434814453, -1.1444091796875e-05, -3.0517578125e-05, -0.0030345916748046875, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -0.000576019287109375, -0.03710675239562988, 0.0, -1.9073486328125e-06, -3.426481246948242, -0.000194549560546875, -0.0001220703125, 0.0, -1.9073486328125e-06, -1.2517166137695312, -2.09808349609375e-05, 0.0, -0.5672416687011719, -0.40205395221710205, -1.9073486328125e-06, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Ancestral", "Healing", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ancestral", " ", "Healing", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 76, 74, 102, 128, 18, 121, 15, 116, 52, "<UNK>", "<EOS>", 109]}, {"inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(3), self)\n        self.target.change_attack.append(4)\n", "score": -6.615035174860623, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "AncestralHealing", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template31"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -2.09808349609375e-05, -3.814697265625e-06, -9.1552734375e-05, -4.1961669921875e-05, -1.1920922133867862e-06, -4.362964682513848e-05, -1.1920922133867862e-06, -1.33514404296875e-05, -0.0002117156982421875, -0.00017547607421875, -1.9073486328125e-05, -1.9073486328125e-06, -1.1563301086425781e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0001697540283203125, -0.0001163482666015625, -2.288818359375e-05, -6.29425048828125e-05, -6.4849853515625e-05, -1.1444091796875e-05, -0.0005092620849609375, -3.0517578125e-05, -9.5367431640625e-06, -2.8371408916427754e-05, -2.1219253540039062e-05, -1.239776611328125e-05, -4.0531158447265625e-06, -0.0001964569091796875, -3.814697265625e-06, 0.0, 0.0, 0.0, -9.655952453613281e-06, 0.0, -0.0005218982114456594, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.00019085407257080078, -7.62939453125e-06, -0.06050682067871094, 0.0, -4.00543212890625e-05, 0.0, -1.52587890625e-05, -3.24249267578125e-05, -0.000152587890625, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -3.814697265625e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -0.0024003982543945312, -1.1801719665527344e-05, -5.14984130859375e-05, -1.71661376953125e-05, -2.86102294921875e-05, -3.814697265625e-05, 0.0, 0.0, -0.00083160400390625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -5.924701690673828e-05, -2.503394898667466e-05, -0.00565338134765625, -1.71661376953125e-05, -0.0002651214599609375, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -8.0108642578125e-05, -0.017860889434814453, -1.1444091796875e-05, -3.0517578125e-05, -0.0030345916748046875, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -0.000576019287109375, -0.03710675239562988, 0.0, -1.9073486328125e-06, -1.5338430404663086, -2.6702880859375e-05, -0.0011692047119140625, -1.9073486328125e-06, -1.1444091796875e-05, -0.06292343139648438, -7.62939453125e-06, 0.0, -1.7326574325561523, 0.0, -0.06365108489990234, -1.8285404443740845, 0.0, -0.46757209300994873, 0.0, -4.00543212890625e-05, -0.7927179336547852, -0.000141143798828125], "choice_history": [93, 145, 230, 101, 125, "Ancestral", "Healing", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ancestral", " ", "Healing", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 72, 74, 102, 128, 18, 123, 15, 116, 15, 116, 52, "change_attack", "<EOS>", "append", "<EOS>", 216, 76, 109]}, {"inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = Null\n", "score": -6.9087724671503565, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "AncestralHealing", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template31"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Assign", "value": {"_type": "NameConstant", "value": "Null"}, "targets": [{"attr": "taunt", "_type": "Attribute", "value": {"_type": "Template8"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -2.09808349609375e-05, -3.814697265625e-06, -9.1552734375e-05, -4.1961669921875e-05, -1.1920922133867862e-06, -4.362964682513848e-05, -1.1920922133867862e-06, -1.33514404296875e-05, -0.0002117156982421875, -0.00017547607421875, -1.9073486328125e-05, -1.9073486328125e-06, -1.1563301086425781e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0001697540283203125, -0.0001163482666015625, -2.288818359375e-05, -6.29425048828125e-05, -6.4849853515625e-05, -1.1444091796875e-05, -0.0005092620849609375, -3.0517578125e-05, -9.5367431640625e-06, -2.8371408916427754e-05, -2.1219253540039062e-05, -1.239776611328125e-05, -4.0531158447265625e-06, -0.0001964569091796875, -3.814697265625e-06, 0.0, 0.0, 0.0, -9.655952453613281e-06, 0.0, -0.0005218982114456594, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.00019085407257080078, -7.62939453125e-06, -0.06050682067871094, 0.0, -4.00543212890625e-05, 0.0, -1.52587890625e-05, -3.24249267578125e-05, -0.000152587890625, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -3.814697265625e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -0.0024003982543945312, -1.1801719665527344e-05, -5.14984130859375e-05, -1.71661376953125e-05, -2.86102294921875e-05, -3.814697265625e-05, 0.0, 0.0, -0.00083160400390625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -5.924701690673828e-05, -2.503394898667466e-05, -0.00565338134765625, -1.71661376953125e-05, -0.0002651214599609375, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -8.0108642578125e-05, -0.017860889434814453, -1.1444091796875e-05, -3.0517578125e-05, -0.0030345916748046875, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -0.000576019287109375, -0.03710675239562988, 0.0, -1.9073486328125e-06, -0.2908334732055664, -0.0002841949462890625, -0.0012149810791015625, 0.0, -0.002796173095703125, -0.008101344108581543, -1.1444091796875e-05, -0.000263214111328125, -0.0070343017578125, -0.0017375946044921875, -1.1444091796875e-05, -9.72747802734375e-05, -1.71661376953125e-05, -0.0001697540283203125, -0.008505940437316895, -1.9073486328125e-06, -0.0037059783935546875, -6.452149391174316, -9.191036224365234e-05, -1.1444091796875e-05, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Ancestral", "Healing", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ancestral", " ", "Healing", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 58, 121, 15, 116, 52, "calculate_max_health", "<EOS>", 74, 98, 115, 216, 55, 116, 52, "taunt", "<EOS>", 24, 148, "Null", "<EOS>", 109]}, {"inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(3), self)\n        self.target.card.summon(self.target.player, game, len(self.target.\n            player.minions))\n", "score": -7.004116603852253, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "AncestralHealing", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template31"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "summon", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"_type": "Template8"}}}, "args": [{"attr": "player", "_type": "Attribute", "value": {"_type": "Template8"}}, {"id": "game", "_type": "Name"}, {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "player", "_type": "Attribute", "value": {"_type": "Template8"}}}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -2.09808349609375e-05, -3.814697265625e-06, -9.1552734375e-05, -4.1961669921875e-05, -1.1920922133867862e-06, -4.362964682513848e-05, -1.1920922133867862e-06, -1.33514404296875e-05, -0.0002117156982421875, -0.00017547607421875, -1.9073486328125e-05, -1.9073486328125e-06, -1.1563301086425781e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0001697540283203125, -0.0001163482666015625, -2.288818359375e-05, -6.29425048828125e-05, -6.4849853515625e-05, -1.1444091796875e-05, -0.0005092620849609375, -3.0517578125e-05, -9.5367431640625e-06, -2.8371408916427754e-05, -2.1219253540039062e-05, -1.239776611328125e-05, -4.0531158447265625e-06, -0.0001964569091796875, -3.814697265625e-06, 0.0, 0.0, 0.0, -9.655952453613281e-06, 0.0, -0.0005218982114456594, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.00019085407257080078, -7.62939453125e-06, -0.06050682067871094, 0.0, -4.00543212890625e-05, 0.0, -1.52587890625e-05, -3.24249267578125e-05, -0.000152587890625, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -3.814697265625e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -0.0024003982543945312, -1.1801719665527344e-05, -5.14984130859375e-05, -1.71661376953125e-05, -2.86102294921875e-05, -3.814697265625e-05, 0.0, 0.0, -0.00083160400390625, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -5.924701690673828e-05, -2.503394898667466e-05, -0.00565338134765625, -1.71661376953125e-05, -0.0002651214599609375, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -8.0108642578125e-05, -0.017860889434814453, -1.1444091796875e-05, -3.0517578125e-05, -0.0030345916748046875, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -0.000576019287109375, -0.03710675239562988, 0.0, -1.9073486328125e-06, -1.5338430404663086, -2.6702880859375e-05, -0.0011692047119140625, -1.9073486328125e-06, -1.1444091796875e-05, -0.06292343139648438, -7.62939453125e-06, 0.0, -1.7326574325561523, 0.0, -0.06365108489990234, -1.4420329332351685, 0.0, -0.48938465118408203, -2.6702880859375e-05, -0.030323028564453125, -0.6110610961914062, -1.52587890625e-05, -0.06823539733886719, -0.005633592139929533, 0.0, -0.4775247573852539, -0.000637054443359375, -0.0012979507446289062, 0.0, -0.0032720565795898438, -0.00063323974609375, -1.71661376953125e-05, -7.62939453125e-06, -0.0011396408081054688, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.20559310913085938, 0.0, -0.13274860382080078, -0.005895018577575684, 0.0, -0.002541731810197234, -1.9073486328125e-05, -2.09808349609375e-05], "choice_history": [93, 145, 230, 101, 125, "Ancestral", "Healing", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ancestral", " ", "Healing", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 72, 74, 102, 128, 18, 123, 15, 116, 15, 116, 52, "card", "<EOS>", "summon", "<EOS>", 218, 55, 116, 52, "player", "<EOS>", 63, 146, "game", "<EOS>", 58, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 15, 116, 52, "player", "<EOS>", "minions", "<EOS>", 109]}, {"inferred_code": "", "score": -21.501758575439453, "model_output": {"_type": "Module", "body": [{"_type": "Template13_stmt_seq"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -2.09808349609375e-05, -3.814697265625e-06, -15.80064582824707, -5.701087951660156], "choice_history": [93, 145, 230, 109, 109]}, {"inferred_code": "", "score": -21.58160972595215, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, -2.09808349609375e-05, -21.581588745117188], "choice_history": [93, 145, 228]}], "index": 1}
{"beams": [{"inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -2.5696073316093972, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "AnimalCompanion", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"_type": "List", "elts": [{"func": {"attr": "Leokk", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"_type": "Template15_expr_seq"}, {"_type": "Template15_expr_seq"}, {"_type": "Template15_expr_seq"}]}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "card", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "summon", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}, "args": [{"_type": "Template19"}, {"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}, {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template24"}], "ops": [{"_type": "Lt"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -4.291450386517681e-05, -9.560128091834486e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.0014781951904296875, -0.00011444091796875, 0.0, -5.9604644775390625e-06, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, 0.0, -0.0003719329833984375, -3.814697265625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -7.62939453125e-06, -2.157668859581463e-05, -1.0013580322265625e-05, -2.0265579223632812e-06, -3.814697265625e-06, -0.000133514404296875, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -0.00018465518951416016, 0.0, -6.103515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001087188720703125, 0.0, -0.000286102294921875, -4.00543212890625e-05, -0.000751495361328125, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -3.0517578125e-05, 0.0, -1.33514404296875e-05, -3.62396240234375e-05, -2.09808349609375e-05, 0.0, -0.010451316833496094, -0.000453948974609375, -0.006084442138671875, -2.6702880859375e-05, -4.57763671875e-05, -2.288818359375e-05, 0.0, -0.08859863132238388, -0.00038699767901562154, -0.0018672943115234375, -0.00063323974609375, -0.012630462646484375, -0.00203704833984375, -0.0031518936157226562, -0.0001964569091796875, 0.0, -0.0051860809326171875, -1.9073486328125e-06, -0.0002117156982421875, -7.62939453125e-06, -0.0007457733154296875, -1.52587890625e-05, -0.20967769622802734, -1.9073486328125e-06, -0.00018143653869628906, -3.933906555175781e-06, -0.0008971592178568244, 0.0, -0.002563675632700324, -8.82148651726311e-06, -0.027758503332734108, -3.0994415283203125e-05, -1.3784202337265015, -0.027750253677368164, -0.132476806640625, -0.17569351196289062, -0.30714988708496094, -0.0066280364990234375, -2.288818359375e-05, -1.9073486328125e-06, -0.001827239990234375, -1.9073486328125e-06, -0.008749961853027344, 0.0, -4.76837158203125e-05, -1.71661376953125e-05, -0.00018310546875, -4.00543212890625e-05, -4.9591064453125e-05, -8.392333984375e-05, -0.010525226593017578, 0.0, -0.0004363059997558594, 0.0, -9.5367431640625e-06, -0.002960205078125, -3.814697265625e-06, -0.05002856254577637, -0.00035208225017413497, -0.0001506805419921875, -1.9073486328125e-06, 0.0, -0.002666473388671875, -0.0004119873046875, -1.9073486328125e-06, -0.0004138946533203125, -4.76837158203125e-05, -0.009340044111013412, 0.0, -0.0026212790980935097, -3.814697265625e-06, -0.0007476806640625, -0.0010356903076171875, -0.007450103759765625, -2.09808349609375e-05, -0.0002536773681640625, -0.00023376941680908203, 0.0, -7.2479248046875e-05, -4.76837158203125e-05, -0.0002079010009765625, -1.9073486328125e-06, -0.0017464160919189453, -1.1444091796875e-05, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.000614166259765625, -0.0005321493372321129, -3.4332275390625e-05, -0.0030765533447265625, -4.9591064453125e-05, -0.0020751953125, -3.24249267578125e-05, -2.288818359375e-05, -1.9073486328125e-06, -8.96453857421875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.000244140625, -0.0003223419189453125, -0.000988006591796875, -0.001739501953125, -0.00079345703125, -0.0006847381591796875, -0.003993988037109375, -0.0002765655517578125, -1.52587890625e-05, -0.000240325927734375, -7.62939453125e-06, -0.00019073486328125, -0.0021648406982421875, -0.000321983709000051, -6.306171417236328e-05, -0.001316070556640625, 0.0, -0.0001201629638671875, -4.38690185546875e-05, -0.0057525634765625, -3.814697265625e-06, -6.771086918888614e-05, 0.0, -0.00806427001953125, -0.0002231597900390625, -7.2479248046875e-05, -1.1444091796875e-05, -0.0001277923583984375, -3.814697265625e-06, -0.0009040831355378032, -1.1920928244535389e-07, -3.814697265625e-06, -0.0003261566162109375, -3.814697265625e-06, -0.00081634521484375, -0.023081541061401367, 0.0, -5.7220458984375e-05, -0.0002899169921875, -3.814697265625e-06, -0.00072479248046875, -2.09808349609375e-05], "choice_history": [93, 145, 230, 101, 125, "Animal", "Companion", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Animal", " ", "Companion", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 21, 141, 219, 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 71, 71, 71, 98, 115, 216, 63, 146, "card", "<EOS>", 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "<UNK>", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "card", "<EOS>", "summon", "<EOS>", 218, 75, 55, 116, 32, "game", "<EOS>", 58, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 213, 12, 216, 79, 109]}, {"inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -2.7923697453688803, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "AnimalCompanion", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"_type": "List", "elts": [{"func": {"attr": "Misha", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"func": {"attr": "Leokk", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"_type": "Template15_expr_seq"}, {"_type": "Template15_expr_seq"}]}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "card", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "summon", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}, "args": [{"_type": "Template19"}, {"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}, {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template24"}], "ops": [{"_type": "Lt"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -4.291450386517681e-05, -9.560128091834486e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.0014781951904296875, -0.00011444091796875, 0.0, -5.9604644775390625e-06, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, 0.0, -0.0003719329833984375, -3.814697265625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -7.62939453125e-06, -2.157668859581463e-05, -1.0013580322265625e-05, -2.0265579223632812e-06, -3.814697265625e-06, -0.000133514404296875, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -0.00018465518951416016, 0.0, -6.103515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001087188720703125, 0.0, -0.000286102294921875, -4.00543212890625e-05, -0.000751495361328125, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -3.0517578125e-05, 0.0, -1.33514404296875e-05, -3.62396240234375e-05, -2.09808349609375e-05, 0.0, -0.010451316833496094, -0.000453948974609375, -0.006084442138671875, -2.6702880859375e-05, -4.57763671875e-05, -2.288818359375e-05, 0.0, -0.08859863132238388, -0.00038699767901562154, -0.0018672943115234375, -0.00063323974609375, -0.012630462646484375, -0.00203704833984375, -0.0031518936157226562, -0.0001964569091796875, 0.0, -0.0051860809326171875, -1.9073486328125e-06, -0.0002117156982421875, -7.62939453125e-06, -0.0007457733154296875, -1.52587890625e-05, -0.20967769622802734, -1.9073486328125e-06, -0.00018143653869628906, -3.933906555175781e-06, -0.0008971592178568244, 0.0, -0.002563675632700324, -8.82148651726311e-06, -0.027758503332734108, -3.0994415283203125e-05, -0.8551400899887085, -0.0019876956939697266, -0.000148773193359375, -0.0003681182861328125, -3.0517578125e-05, 0.0, -0.0001583099365234375, 0.0, -5.91278076171875e-05, -3.814697265625e-06, -0.003231048583984375, -3.814697265625e-06, -0.07719898223876953, -7.62939453125e-06, -0.0003490447998046875, -1.9073486328125e-06, -0.0006751830223947763, -1.9073486328125e-06, -0.0024565239436924458, -4.410743713378906e-06, -0.025821687653660774, -1.2040138244628906e-05, -1.1250345706939697, -0.01645481586456299, -0.030584335327148438, -0.11096954345703125, -0.0029706954956054688, -4.38690185546875e-05, -1.9073486328125e-06, -0.002185821533203125, -1.9073486328125e-06, -0.004823565483093262, 0.0, -5.14984130859375e-05, -2.6702880859375e-05, -0.00014495849609375, -6.866455078125e-05, -8.58306884765625e-05, -0.0001773834228515625, -0.0078105926513671875, 0.0, -0.0005092620849609375, 0.0, -1.1444091796875e-05, -0.0032176971435546875, -3.814697265625e-06, -0.053768157958984375, -0.00038795097498223186, -0.0001659393310546875, -1.9073486328125e-06, 0.0, -0.002532958984375, -0.000396728515625, -1.9073486328125e-06, -0.00042724609375, -4.76837158203125e-05, -0.009297485463321209, 0.0, -0.0025600064545869827, -3.814697265625e-06, -0.0007457733154296875, -0.0010223388671875, -0.0074558258056640625, -2.288818359375e-05, -0.0002498626708984375, -0.00023472309112548828, 0.0, -7.2479248046875e-05, -4.57763671875e-05, -0.0002155303955078125, -1.9073486328125e-06, -0.0016443729400634766, -7.62939453125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0006999969482421875, -0.0005486001609824598, -2.09808349609375e-05, -0.0023250579833984375, -4.57763671875e-05, -0.002277374267578125, -2.288818359375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -8.96453857421875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0002536773681640625, -0.0003261566162109375, -0.0009918212890625, -0.0016765594482421875, -0.0007781982421875, -0.0006809234619140625, -0.004032135009765625, -0.0002536773681640625, -1.52587890625e-05, -0.00023651123046875, -7.62939453125e-06, -0.00018310546875, -0.002201080322265625, -0.00032162611023522913, -6.115436553955078e-05, -0.0013179779052734375, 0.0, -0.0001201629638671875, -4.38690185546875e-05, -0.0057964324951171875, -3.814697265625e-06, -6.783007847843692e-05, 0.0, -0.008081436157226562, -0.0002193450927734375, -7.2479248046875e-05, -1.1444091796875e-05, -0.0001277923583984375, -3.814697265625e-06, -0.0009040831355378032, -1.1920928244535389e-07, -3.814697265625e-06, -0.000324249267578125, -3.814697265625e-06, -0.00081634521484375, -0.023084402084350586, 0.0, -5.7220458984375e-05, -0.0002899169921875, -3.814697265625e-06, -0.0007266998291015625, -2.288818359375e-05], "choice_history": [93, 145, 230, 101, 125, "Animal", "Companion", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Animal", " ", "Companion", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 21, 141, 219, 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 71, 71, 98, 115, 216, 63, 146, "card", "<EOS>", 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "<UNK>", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "card", "<EOS>", "summon", "<EOS>", 218, 75, 55, 116, 32, "game", "<EOS>", 58, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 213, 12, 216, 79, 109]}, {"inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -3.4452535511400058, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "AnimalCompanion", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"_type": "List", "elts": [{"func": {"attr": "Misha", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"func": {"attr": "Misha", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"func": {"attr": "Leokk", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "card", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "summon", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}, "args": [{"_type": "Template19"}, {"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}, {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template24"}], "ops": [{"_type": "Lt"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -4.291450386517681e-05, -9.560128091834486e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.0014781951904296875, -0.00011444091796875, 0.0, -5.9604644775390625e-06, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, 0.0, -0.0003719329833984375, -3.814697265625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -7.62939453125e-06, -2.157668859581463e-05, -1.0013580322265625e-05, -2.0265579223632812e-06, -3.814697265625e-06, -0.000133514404296875, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -0.00018465518951416016, 0.0, -6.103515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001087188720703125, 0.0, -0.000286102294921875, -4.00543212890625e-05, -0.000751495361328125, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -3.0517578125e-05, 0.0, -1.33514404296875e-05, -3.62396240234375e-05, -2.09808349609375e-05, 0.0, -0.010451316833496094, -0.000453948974609375, -0.006084442138671875, -2.6702880859375e-05, -4.57763671875e-05, -2.288818359375e-05, 0.0, -0.08859863132238388, -0.00038699767901562154, -0.0018672943115234375, -0.00063323974609375, -0.012630462646484375, -0.00203704833984375, -0.0031518936157226562, -0.0001964569091796875, 0.0, -0.0051860809326171875, -1.9073486328125e-06, -0.0002117156982421875, -7.62939453125e-06, -0.0007457733154296875, -1.52587890625e-05, -0.20967769622802734, -1.9073486328125e-06, -0.00018143653869628906, -3.933906555175781e-06, -0.0008971592178568244, 0.0, -0.002563675632700324, -8.82148651726311e-06, -0.027758503332734108, -3.0994415283203125e-05, -0.8551400899887085, -0.0019876956939697266, -0.000148773193359375, -0.0003681182861328125, -3.0517578125e-05, 0.0, -0.0001583099365234375, 0.0, -5.91278076171875e-05, -3.814697265625e-06, -0.003231048583984375, -3.814697265625e-06, -0.07719898223876953, -7.62939453125e-06, -0.0003490447998046875, -1.9073486328125e-06, -0.0006751830223947763, -1.9073486328125e-06, -0.0024565239436924458, -4.410743713378906e-06, -0.025821687653660774, -1.2040138244628906e-05, -0.6492264270782471, -0.004278302192687988, -0.000843048095703125, -0.0002727508544921875, -2.288818359375e-05, 0.0, -0.0001888275146484375, 0.0, -8.0108642578125e-05, -7.62939453125e-06, -0.0035953521728515625, -1.33514404296875e-05, -0.09876251220703125, -1.33514404296875e-05, -0.0003833770751953125, -1.9073486328125e-06, -0.0006184428348205984, 0.0, -0.002594927093014121, -4.5299530029296875e-06, -0.02785070799291134, -1.430511474609375e-05, -1.123101830482483, -0.017117738723754883, -0.029146194458007812, -0.001605987548828125, -3.0517578125e-05, -1.9073486328125e-06, -0.0033140182495117188, -1.9073486328125e-06, -0.004054665565490723, 0.0, -8.392333984375e-05, -3.24249267578125e-05, -0.000110626220703125, -6.103515625e-05, -0.0001373291015625, -0.000362396240234375, -0.006687283515930176, 0.0, -0.0005820989608764648, -2.0265579223632812e-06, -9.5367431640625e-06, -0.0024509429931640625, -3.814697265625e-06, -0.03305184841156006, -0.00040928172529675066, -0.0001506805419921875, -1.9073486328125e-06, 0.0, -0.0026645660400390625, -0.000408172607421875, -1.9073486328125e-06, -0.0003833770751953125, -4.76837158203125e-05, -0.009882684797048569, 0.0, -0.0026433339808136225, -3.814697265625e-06, -0.0007610321044921875, -0.0009765625, -0.0078067779541015625, -2.09808349609375e-05, -0.000244140625, -0.00023663043975830078, 0.0, -7.2479248046875e-05, -4.57763671875e-05, -0.000213623046875, -1.9073486328125e-06, -0.0015909671783447266, -5.7220458984375e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0009059906005859375, -0.0005615937989205122, -1.52587890625e-05, -0.001800537109375, -4.1961669921875e-05, -0.0026226043701171875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0002651214599609375, -0.0003299713134765625, -0.000995635986328125, -0.0016326904296875, -0.00075531005859375, -0.00067138671875, -0.004138946533203125, -0.0002460479736328125, -1.52587890625e-05, -0.000232696533203125, -7.62939453125e-06, -0.000179290771484375, -0.0022029876708984375, -0.00032341424957849085, -6.115436553955078e-05, -0.0013179779052734375, 0.0, -0.0001201629638671875, -4.38690185546875e-05, -0.0058155059814453125, -3.814697265625e-06, -6.783007847843692e-05, 0.0, -0.008087158203125, -0.000217437744140625, -7.2479248046875e-05, -1.1444091796875e-05, -0.0001277923583984375, -3.814697265625e-06, -0.0009021757869049907, -1.1920928244535389e-07, -3.814697265625e-06, -0.000324249267578125, -3.814697265625e-06, -0.00081634521484375, -0.023085355758666992, 0.0, -5.7220458984375e-05, -0.0002899169921875, -3.814697265625e-06, -0.000728607177734375, -2.288818359375e-05], "choice_history": [93, 145, 230, 101, 125, "Animal", "Companion", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Animal", " ", "Companion", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 21, 141, 219, 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 71, 98, 115, 216, 63, 146, "card", "<EOS>", 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "<UNK>", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "card", "<EOS>", "summon", "<EOS>", 218, 75, 55, 116, 32, "game", "<EOS>", 58, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 213, 12, 216, 79, 109]}, {"inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -3.4980516145469593, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "AnimalCompanion", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"_type": "List", "elts": [{"func": {"attr": "Huffer", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"func": {"attr": "Leokk", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"_type": "Template15_expr_seq"}, {"_type": "Template15_expr_seq"}]}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "card", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "summon", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}, "args": [{"_type": "Template19"}, {"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}, {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template24"}], "ops": [{"_type": "Lt"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -4.291450386517681e-05, -9.560128091834486e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.0014781951904296875, -0.00011444091796875, 0.0, -5.9604644775390625e-06, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, 0.0, -0.0003719329833984375, -3.814697265625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -7.62939453125e-06, -2.157668859581463e-05, -1.0013580322265625e-05, -2.0265579223632812e-06, -3.814697265625e-06, -0.000133514404296875, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -0.00018465518951416016, 0.0, -6.103515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001087188720703125, 0.0, -0.000286102294921875, -4.00543212890625e-05, -0.000751495361328125, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -3.0517578125e-05, 0.0, -1.33514404296875e-05, -3.62396240234375e-05, -2.09808349609375e-05, 0.0, -0.010451316833496094, -0.000453948974609375, -0.006084442138671875, -2.6702880859375e-05, -4.57763671875e-05, -2.288818359375e-05, 0.0, -0.08859863132238388, -0.00038699767901562154, -0.0018672943115234375, -0.00063323974609375, -0.012630462646484375, -0.00203704833984375, -0.0031518936157226562, -0.0001964569091796875, 0.0, -0.0051860809326171875, -1.9073486328125e-06, -0.0002117156982421875, -7.62939453125e-06, -0.0007457733154296875, -1.52587890625e-05, -0.20967769622802734, -1.9073486328125e-06, -0.00018143653869628906, -3.933906555175781e-06, -0.0008971592178568244, 0.0, -0.002563675632700324, -8.82148651726311e-06, -0.027758503332734108, -3.0994415283203125e-05, -1.4531816244125366, -0.00413203239440918, -0.0008563995361328125, -0.0006542205810546875, -1.9073486328125e-05, 0.0, -0.000164031982421875, 0.0, -0.0001850128173828125, -1.9073486328125e-06, -0.0020542144775390625, -3.814697265625e-06, -0.09560966491699219, -7.62939453125e-06, -0.0003604888916015625, -1.9073486328125e-06, -0.0006563455099239945, -1.9073486328125e-06, -0.002337674144655466, -4.410743713378906e-06, -0.02588672563433647, -1.5854835510253906e-05, -1.185725212097168, -0.020348787307739258, -0.03783130645751953, -0.12474536895751953, -0.0030002593994140625, -4.1961669921875e-05, -1.9073486328125e-06, -0.002227783203125, -1.9073486328125e-06, -0.004774928092956543, 0.0, -5.14984130859375e-05, -2.6702880859375e-05, -0.000141143798828125, -6.866455078125e-05, -8.7738037109375e-05, -0.0001773834228515625, -0.007989883422851562, 0.0, -0.00051116943359375, 0.0, -1.1444091796875e-05, -0.0032596588134765625, -3.814697265625e-06, -0.05516946315765381, -0.00038795097498223186, -0.0001678466796875, -1.9073486328125e-06, 0.0, -0.0025272369384765625, -0.000396728515625, -1.9073486328125e-06, -0.000431060791015625, -4.76837158203125e-05, -0.009273047558963299, 0.0, -0.002554403617978096, -3.814697265625e-06, -0.0007457733154296875, -0.0010242462158203125, -0.0074367523193359375, -2.288818359375e-05, -0.0002498626708984375, -0.00023472309112548828, 0.0, -7.2479248046875e-05, -4.57763671875e-05, -0.0002155303955078125, -1.9073486328125e-06, -0.0016415119171142578, -7.62939453125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.000698089599609375, -0.0005486001609824598, -2.288818359375e-05, -0.0023345947265625, -4.57763671875e-05, -0.0022706985473632812, -2.288818359375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -8.96453857421875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0002536773681640625, -0.0003261566162109375, -0.0009918212890625, -0.001678466796875, -0.0007781982421875, -0.0006809234619140625, -0.0040340423583984375, -0.0002536773681640625, -1.52587890625e-05, -0.00023651123046875, -7.62939453125e-06, -0.00018310546875, -0.002201080322265625, -0.00032162611023522913, -6.115436553955078e-05, -0.0013179779052734375, 0.0, -0.0001201629638671875, -4.38690185546875e-05, -0.0057964324951171875, -3.814697265625e-06, -6.783007847843692e-05, 0.0, -0.008081436157226562, -0.0002193450927734375, -7.2479248046875e-05, -1.1444091796875e-05, -0.0001277923583984375, -3.814697265625e-06, -0.0009040831355378032, -1.1920928244535389e-07, -3.814697265625e-06, -0.000324249267578125, -3.814697265625e-06, -0.00081634521484375, -0.023084402084350586, 0.0, -5.7220458984375e-05, -0.0002899169921875, -3.814697265625e-06, -0.0007266998291015625, -2.288818359375e-05], "choice_history": [93, 145, 230, 101, 125, "Animal", "Companion", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Animal", " ", "Companion", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 21, 141, 219, 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 71, 71, 98, 115, 216, 63, 146, "card", "<EOS>", 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "<UNK>", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "card", "<EOS>", "summon", "<EOS>", 218, 75, 55, 116, 32, "game", "<EOS>", 58, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 213, 12, 216, 79, 109]}, {"inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -4.018705199169737, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "AnimalCompanion", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"_type": "List", "elts": [{"func": {"attr": "Huffer", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"func": {"attr": "Misha", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"func": {"attr": "Leokk", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "card", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "summon", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}, "args": [{"_type": "Template19"}, {"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}, {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template24"}], "ops": [{"_type": "Lt"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -4.291450386517681e-05, -9.560128091834486e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.0014781951904296875, -0.00011444091796875, 0.0, -5.9604644775390625e-06, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, 0.0, -0.0003719329833984375, -3.814697265625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -7.62939453125e-06, -2.157668859581463e-05, -1.0013580322265625e-05, -2.0265579223632812e-06, -3.814697265625e-06, -0.000133514404296875, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -0.00018465518951416016, 0.0, -6.103515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001087188720703125, 0.0, -0.000286102294921875, -4.00543212890625e-05, -0.000751495361328125, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -3.0517578125e-05, 0.0, -1.33514404296875e-05, -3.62396240234375e-05, -2.09808349609375e-05, 0.0, -0.010451316833496094, -0.000453948974609375, -0.006084442138671875, -2.6702880859375e-05, -4.57763671875e-05, -2.288818359375e-05, 0.0, -0.08859863132238388, -0.00038699767901562154, -0.0018672943115234375, -0.00063323974609375, -0.012630462646484375, -0.00203704833984375, -0.0031518936157226562, -0.0001964569091796875, 0.0, -0.0051860809326171875, -1.9073486328125e-06, -0.0002117156982421875, -7.62939453125e-06, -0.0007457733154296875, -1.52587890625e-05, -0.20967769622802734, -1.9073486328125e-06, -0.00018143653869628906, -3.933906555175781e-06, -0.0008971592178568244, 0.0, -0.002563675632700324, -8.82148651726311e-06, -0.027758503332734108, -3.0994415283203125e-05, -1.4531816244125366, -0.00413203239440918, -0.0008563995361328125, -0.0006542205810546875, -1.9073486328125e-05, 0.0, -0.000164031982421875, 0.0, -0.0001850128173828125, -1.9073486328125e-06, -0.0020542144775390625, -3.814697265625e-06, -0.09560966491699219, -7.62939453125e-06, -0.0003604888916015625, -1.9073486328125e-06, -0.0006563455099239945, -1.9073486328125e-06, -0.002337674144655466, -4.410743713378906e-06, -0.02588672563433647, -1.5854835510253906e-05, -0.6104812026023865, -0.0022345781326293945, -0.0005130767822265625, -0.0003204345703125, -2.6702880859375e-05, 0.0, -0.0002002716064453125, 0.0, -7.82012939453125e-05, -7.62939453125e-06, -0.003688812255859375, -1.33514404296875e-05, -0.09886646270751953, -1.33514404296875e-05, -0.0003833770751953125, -1.9073486328125e-06, -0.0006223765667527914, 0.0, -0.0025937343016266823, -4.5299530029296875e-06, -0.027794919908046722, -1.4185905456542969e-05, -1.117827296257019, -0.01802659034729004, -0.02856731414794922, -0.001651763916015625, -3.0517578125e-05, -1.9073486328125e-06, -0.0033435821533203125, -1.9073486328125e-06, -0.004059433937072754, 0.0, -8.392333984375e-05, -3.24249267578125e-05, -0.0001087188720703125, -6.103515625e-05, -0.0001373291015625, -0.000354766845703125, -0.006729245185852051, 0.0, -0.0005820989608764648, -2.0265579223632812e-06, -9.5367431640625e-06, -0.00247955322265625, -3.814697265625e-06, -0.033805251121520996, -0.00040904339402914047, -0.000152587890625, -1.9073486328125e-06, 0.0, -0.002658843994140625, -0.000408172607421875, -1.9073486328125e-06, -0.0003833770751953125, -4.76837158203125e-05, -0.009859200567007065, 0.0, -0.0026396384928375483, -3.814697265625e-06, -0.000759124755859375, -0.0009784698486328125, -0.00778961181640625, -2.09808349609375e-05, -0.000244140625, -0.00023567676544189453, 0.0, -7.2479248046875e-05, -4.57763671875e-05, -0.000213623046875, -1.9073486328125e-06, -0.0015909671783447266, -5.7220458984375e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.000896453857421875, -0.0005614745896309614, -1.52587890625e-05, -0.0018138885498046875, -4.1961669921875e-05, -0.0026092529296875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0002651214599609375, -0.0003299713134765625, -0.000995635986328125, -0.0016326904296875, -0.0007572174072265625, -0.00067138671875, -0.0041370391845703125, -0.0002460479736328125, -1.52587890625e-05, -0.000232696533203125, -7.62939453125e-06, -0.000179290771484375, -0.0022029876708984375, -0.00032341424957849085, -6.115436553955078e-05, -0.0013179779052734375, 0.0, -0.0001201629638671875, -4.38690185546875e-05, -0.0058155059814453125, -3.814697265625e-06, -6.783007847843692e-05, 0.0, -0.008087158203125, -0.000217437744140625, -7.2479248046875e-05, -1.1444091796875e-05, -0.0001277923583984375, -3.814697265625e-06, -0.0009021757869049907, -1.1920928244535389e-07, -3.814697265625e-06, -0.000324249267578125, -3.814697265625e-06, -0.00081634521484375, -0.023085355758666992, 0.0, -5.7220458984375e-05, -0.0002899169921875, -3.814697265625e-06, -0.000728607177734375, -2.288818359375e-05], "choice_history": [93, 145, 230, 101, 125, "Animal", "Companion", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Animal", " ", "Companion", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 21, 141, 219, 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 71, 98, 115, 216, 63, 146, "card", "<EOS>", 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "<UNK>", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "card", "<EOS>", "summon", "<EOS>", 218, 75, 55, 116, 32, "game", "<EOS>", 58, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 213, 12, 216, 79, 109]}, {"inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Huffer(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -5.189852391328479, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "AnimalCompanion", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"_type": "List", "elts": [{"func": {"attr": "Misha", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"func": {"attr": "Huffer", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"func": {"attr": "Leokk", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "card", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "summon", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}, "args": [{"_type": "Template19"}, {"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}, {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template24"}], "ops": [{"_type": "Lt"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -4.291450386517681e-05, -9.560128091834486e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.0014781951904296875, -0.00011444091796875, 0.0, -5.9604644775390625e-06, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, 0.0, -0.0003719329833984375, -3.814697265625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -7.62939453125e-06, -2.157668859581463e-05, -1.0013580322265625e-05, -2.0265579223632812e-06, -3.814697265625e-06, -0.000133514404296875, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -0.00018465518951416016, 0.0, -6.103515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001087188720703125, 0.0, -0.000286102294921875, -4.00543212890625e-05, -0.000751495361328125, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -3.0517578125e-05, 0.0, -1.33514404296875e-05, -3.62396240234375e-05, -2.09808349609375e-05, 0.0, -0.010451316833496094, -0.000453948974609375, -0.006084442138671875, -2.6702880859375e-05, -4.57763671875e-05, -2.288818359375e-05, 0.0, -0.08859863132238388, -0.00038699767901562154, -0.0018672943115234375, -0.00063323974609375, -0.012630462646484375, -0.00203704833984375, -0.0031518936157226562, -0.0001964569091796875, 0.0, -0.0051860809326171875, -1.9073486328125e-06, -0.0002117156982421875, -7.62939453125e-06, -0.0007457733154296875, -1.52587890625e-05, -0.20967769622802734, -1.9073486328125e-06, -0.00018143653869628906, -3.933906555175781e-06, -0.0008971592178568244, 0.0, -0.002563675632700324, -8.82148651726311e-06, -0.027758503332734108, -3.0994415283203125e-05, -0.8551400899887085, -0.0019876956939697266, -0.000148773193359375, -0.0003681182861328125, -3.0517578125e-05, 0.0, -0.0001583099365234375, 0.0, -5.91278076171875e-05, -3.814697265625e-06, -0.003231048583984375, -3.814697265625e-06, -0.07719898223876953, -7.62939453125e-06, -0.0003490447998046875, -1.9073486328125e-06, -0.0006751830223947763, -1.9073486328125e-06, -0.0024565239436924458, -4.410743713378906e-06, -0.025821687653660774, -1.2040138244628906e-05, -2.3348782062530518, -0.00437474250793457, -0.009822845458984375, -0.0002536773681640625, -3.62396240234375e-05, 0.0, -0.0002918243408203125, 0.0, -0.0001277923583984375, -5.7220458984375e-06, -0.0023136138916015625, -1.52587890625e-05, -0.12047004699707031, -1.52587890625e-05, -0.00038909912109375, -1.9073486328125e-06, -0.0006139109609648585, -1.9073486328125e-06, -0.0025203030090779066, -2.622604142743512e-06, -0.02826767787337303, -1.609325408935547e-05, -1.1477059125900269, -0.017818689346313477, -0.031884193420410156, -0.001575469970703125, -2.86102294921875e-05, -1.9073486328125e-06, -0.0034017562866210938, -1.9073486328125e-06, -0.00403749942779541, 0.0, -8.58306884765625e-05, -3.24249267578125e-05, -0.0001068115234375, -6.103515625e-05, -0.0001392364501953125, -0.0003566741943359375, -0.006758928298950195, 0.0, -0.0005822181701660156, -2.0265579223632812e-06, -9.5367431640625e-06, -0.0024890899658203125, -3.814697265625e-06, -0.03389310836791992, -0.0004095200274605304, -0.000152587890625, -1.9073486328125e-06, 0.0, -0.002655029296875, -0.000408172607421875, -1.9073486328125e-06, -0.000385284423828125, -4.76837158203125e-05, -0.009849902242422104, 0.0, -0.002636539051309228, -3.814697265625e-06, -0.000759124755859375, -0.0009784698486328125, -0.00778961181640625, -2.09808349609375e-05, -0.000244140625, -0.00023567676544189453, 0.0, -7.2479248046875e-05, -4.57763671875e-05, -0.000213623046875, -1.9073486328125e-06, -0.0015909671783447266, -5.7220458984375e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0008983612060546875, -0.0005614745896309614, -1.52587890625e-05, -0.0018100738525390625, -4.1961669921875e-05, -0.0026121139526367188, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0002651214599609375, -0.0003299713134765625, -0.000995635986328125, -0.0016326904296875, -0.00075531005859375, -0.00067138671875, -0.0041370391845703125, -0.0002460479736328125, -1.52587890625e-05, -0.000232696533203125, -7.62939453125e-06, -0.000179290771484375, -0.0022029876708984375, -0.00032341424957849085, -6.115436553955078e-05, -0.0013179779052734375, 0.0, -0.0001201629638671875, -4.38690185546875e-05, -0.0058155059814453125, -3.814697265625e-06, -6.783007847843692e-05, 0.0, -0.008087158203125, -0.000217437744140625, -7.2479248046875e-05, -1.1444091796875e-05, -0.0001277923583984375, -3.814697265625e-06, -0.0009021757869049907, -1.1920928244535389e-07, -3.814697265625e-06, -0.000324249267578125, -3.814697265625e-06, -0.00081634521484375, -0.023085355758666992, 0.0, -5.7220458984375e-05, -0.0002899169921875, -3.814697265625e-06, -0.000728607177734375, -2.288818359375e-05], "choice_history": [93, 145, 230, 101, 125, "Animal", "Companion", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Animal", " ", "Companion", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 21, 141, 219, 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 71, 98, 115, 216, 63, 146, "card", "<EOS>", 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "<UNK>", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "card", "<EOS>", "summon", "<EOS>", 218, 75, 55, 116, 32, "game", "<EOS>", 58, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 213, 12, 216, 79, 109]}, {"inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Misha(), hearthbreaker.cards.minions.hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -5.7591100886227125, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "AnimalCompanion", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"_type": "List", "elts": [{"func": {"attr": "Misha", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"func": {"attr": "Misha", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"func": {"attr": "Misha", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"func": {"attr": "Leokk", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}]}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "card", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "summon", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}, "args": [{"_type": "Template19"}, {"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}, {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template24"}], "ops": [{"_type": "Lt"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -4.291450386517681e-05, -9.560128091834486e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.0014781951904296875, -0.00011444091796875, 0.0, -5.9604644775390625e-06, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, 0.0, -0.0003719329833984375, -3.814697265625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -7.62939453125e-06, -2.157668859581463e-05, -1.0013580322265625e-05, -2.0265579223632812e-06, -3.814697265625e-06, -0.000133514404296875, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -0.00018465518951416016, 0.0, -6.103515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001087188720703125, 0.0, -0.000286102294921875, -4.00543212890625e-05, -0.000751495361328125, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -3.0517578125e-05, 0.0, -1.33514404296875e-05, -3.62396240234375e-05, -2.09808349609375e-05, 0.0, -0.010451316833496094, -0.000453948974609375, -0.006084442138671875, -2.6702880859375e-05, -4.57763671875e-05, -2.288818359375e-05, 0.0, -0.08859863132238388, -0.00038699767901562154, -0.0018672943115234375, -0.00063323974609375, -0.012630462646484375, -0.00203704833984375, -0.0031518936157226562, -0.0001964569091796875, 0.0, -0.0051860809326171875, -1.9073486328125e-06, -0.0002117156982421875, -7.62939453125e-06, -0.0007457733154296875, -1.52587890625e-05, -0.20967769622802734, -1.9073486328125e-06, -0.00018143653869628906, -3.933906555175781e-06, -0.0008971592178568244, 0.0, -0.002563675632700324, -8.82148651726311e-06, -0.027758503332734108, -3.0994415283203125e-05, -0.8551400899887085, -0.0019876956939697266, -0.000148773193359375, -0.0003681182861328125, -3.0517578125e-05, 0.0, -0.0001583099365234375, 0.0, -5.91278076171875e-05, -3.814697265625e-06, -0.003231048583984375, -3.814697265625e-06, -0.07719898223876953, -7.62939453125e-06, -0.0003490447998046875, -1.9073486328125e-06, -0.0006751830223947763, -1.9073486328125e-06, -0.0024565239436924458, -4.410743713378906e-06, -0.025821687653660774, -1.2040138244628906e-05, -0.6492264270782471, -0.004278302192687988, -0.000843048095703125, -0.0002727508544921875, -2.288818359375e-05, 0.0, -0.0001888275146484375, 0.0, -8.0108642578125e-05, -7.62939453125e-06, -0.0035953521728515625, -1.33514404296875e-05, -0.09876251220703125, -1.33514404296875e-05, -0.0003833770751953125, -1.9073486328125e-06, -0.0006184428348205984, 0.0, -0.002594927093014121, -4.5299530029296875e-06, -0.02785070799291134, -1.430511474609375e-05, -0.6461320519447327, -0.003866434097290039, -0.0008602142333984375, -0.0002880096435546875, -2.47955322265625e-05, 0.0, -0.0001850128173828125, 0.0, -8.20159912109375e-05, -7.62939453125e-06, -0.0037097930908203125, -1.52587890625e-05, -0.09781837463378906, -1.52587890625e-05, -0.0003814697265625, -1.9073486328125e-06, -0.0006211840081959963, 0.0, -0.0025859849993139505, -2.622604142743512e-06, -0.027997184544801712, -1.430511474609375e-05, -1.117586374282837, -0.017374277114868164, -1.1542234420776367, -3.814697265625e-06, -1.9073486328125e-06, -0.40343284606933594, -1.9073486328125e-06, -0.02297377586364746, 0.0, -0.0014715194702148438, -0.0004634857177734375, -0.0001468658447265625, -1.71661376953125e-05, -0.0003681182861328125, -0.000286102294921875, -0.005603313446044922, 0.0, -0.0005328655242919922, -2.0265579223632812e-06, -7.62939453125e-06, -0.001644134521484375, -3.814697265625e-06, -0.02252376079559326, -0.00045015302021056414, -0.000171661376953125, -1.9073486328125e-06, 0.0, -0.00344085693359375, -0.0004329681396484375, -1.9073486328125e-06, -0.0003719329833984375, -5.340576171875e-05, -0.01106715016067028, 0.0, -0.0025824184995144606, -5.7220458984375e-06, -0.000759124755859375, -0.000873565673828125, -0.008398056030273438, -2.09808349609375e-05, -0.000240325927734375, -0.00023758411407470703, 0.0, -7.05718994140625e-05, -4.38690185546875e-05, -0.00020599365234375, -1.9073486328125e-06, -0.0015746355056762695, -5.7220458984375e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0011539459228515625, -0.0005671964609064162, -1.33514404296875e-05, -0.0016193389892578125, -4.00543212890625e-05, -0.002857208251953125, -1.1444091796875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.000270843505859375, -0.000354766845703125, -0.0010547637939453125, -0.00156402587890625, -0.0007228851318359375, -0.00061798095703125, -0.0041484832763671875, -0.0002536773681640625, -1.52587890625e-05, -0.0002269744873046875, -7.62939453125e-06, -0.0001811981201171875, -0.0021877288818359375, -0.00032532159821130335, -6.115436553955078e-05, -0.001323699951171875, 0.0, -0.000118255615234375, -4.38690185546875e-05, -0.005832672119140625, -3.814697265625e-06, -6.783007847843692e-05, 0.0, -0.007959365844726562, -0.0002117156982421875, -6.866455078125e-05, -1.33514404296875e-05, -0.0001277923583984375, -3.814697265625e-06, -0.0008945463923737407, -1.1920928244535389e-07, -3.814697265625e-06, -0.0003223419189453125, -3.814697265625e-06, -0.00081634521484375, -0.023062467575073242, 0.0, -5.7220458984375e-05, -0.0002899169921875, -3.814697265625e-06, -0.0007305145263671875, -2.288818359375e-05], "choice_history": [93, 145, 230, 101, 125, "Animal", "Companion", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Animal", " ", "Companion", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 21, 141, 219, 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 98, 115, 216, 63, 146, "card", "<EOS>", 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "<UNK>", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "card", "<EOS>", "summon", "<EOS>", 218, 75, 55, 116, 32, "game", "<EOS>", 58, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 213, 12, 216, 79, 109]}, {"inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.<UNK>) < 7\n", "score": -6.490292265271243, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "AnimalCompanion", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"_type": "List", "elts": [{"func": {"attr": "Leokk", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"_type": "Template15_expr_seq"}, {"_type": "Template15_expr_seq"}, {"_type": "Template15_expr_seq"}]}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "card", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "summon", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}, "args": [{"_type": "Template19"}, {"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}, {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template24"}], "ops": [{"_type": "Lt"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -4.291450386517681e-05, -9.560128091834486e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.0014781951904296875, -0.00011444091796875, 0.0, -5.9604644775390625e-06, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, 0.0, -0.0003719329833984375, -3.814697265625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -7.62939453125e-06, -2.157668859581463e-05, -1.0013580322265625e-05, -2.0265579223632812e-06, -3.814697265625e-06, -0.000133514404296875, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -0.00018465518951416016, 0.0, -6.103515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001087188720703125, 0.0, -0.000286102294921875, -4.00543212890625e-05, -0.000751495361328125, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -3.0517578125e-05, 0.0, -1.33514404296875e-05, -3.62396240234375e-05, -2.09808349609375e-05, 0.0, -0.010451316833496094, -0.000453948974609375, -0.006084442138671875, -2.6702880859375e-05, -4.57763671875e-05, -2.288818359375e-05, 0.0, -0.08859863132238388, -0.00038699767901562154, -0.0018672943115234375, -0.00063323974609375, -0.012630462646484375, -0.00203704833984375, -0.0031518936157226562, -0.0001964569091796875, 0.0, -0.0051860809326171875, -1.9073486328125e-06, -0.0002117156982421875, -7.62939453125e-06, -0.0007457733154296875, -1.52587890625e-05, -0.20967769622802734, -1.9073486328125e-06, -0.00018143653869628906, -3.933906555175781e-06, -0.0008971592178568244, 0.0, -0.002563675632700324, -8.82148651726311e-06, -0.027758503332734108, -3.0994415283203125e-05, -1.3784202337265015, -0.027750253677368164, -0.132476806640625, -0.17569351196289062, -0.30714988708496094, -0.0066280364990234375, -2.288818359375e-05, -1.9073486328125e-06, -0.001827239990234375, -1.9073486328125e-06, -0.008749961853027344, 0.0, -4.76837158203125e-05, -1.71661376953125e-05, -0.00018310546875, -4.00543212890625e-05, -4.9591064453125e-05, -8.392333984375e-05, -0.010525226593017578, 0.0, -0.0004363059997558594, 0.0, -9.5367431640625e-06, -0.002960205078125, -3.814697265625e-06, -0.05002856254577637, -0.00035208225017413497, -0.0001506805419921875, -1.9073486328125e-06, 0.0, -0.002666473388671875, -0.0004119873046875, -1.9073486328125e-06, -0.0004138946533203125, -4.76837158203125e-05, -0.009340044111013412, 0.0, -0.0026212790980935097, -3.814697265625e-06, -0.0007476806640625, -0.0010356903076171875, -0.007450103759765625, -2.09808349609375e-05, -0.0002536773681640625, -0.00023376941680908203, 0.0, -7.2479248046875e-05, -4.76837158203125e-05, -0.0002079010009765625, -1.9073486328125e-06, -0.0017464160919189453, -1.1444091796875e-05, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.000614166259765625, -0.0005321493372321129, -3.4332275390625e-05, -0.0030765533447265625, -4.9591064453125e-05, -0.0020751953125, -3.24249267578125e-05, -2.288818359375e-05, -1.9073486328125e-06, -8.96453857421875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.000244140625, -0.0003223419189453125, -0.000988006591796875, -0.001739501953125, -0.00079345703125, -0.0006847381591796875, -0.003993988037109375, -0.0002765655517578125, -1.52587890625e-05, -0.000240325927734375, -7.62939453125e-06, -0.00019073486328125, -0.0021648406982421875, -0.000321983709000051, -6.306171417236328e-05, -0.001316070556640625, 0.0, -0.0001201629638671875, -4.38690185546875e-05, -0.0057525634765625, -3.814697265625e-06, -6.771086918888614e-05, 0.0, -0.00806427001953125, -0.0002231597900390625, -7.2479248046875e-05, -1.1444091796875e-05, -0.0001277923583984375, -3.814697265625e-06, -0.0009040831355378032, -1.1920928244535389e-07, -3.814697265625e-06, -0.0003261566162109375, -3.814697265625e-06, -0.00081634521484375, -3.9279439449310303, -1.0728830375228426e-06, -5.7220458984375e-06, -0.016256332397460938, -5.7220458984375e-06, -0.000637054443359375, -1.33514404296875e-05], "choice_history": [93, 145, 230, 101, 125, "Animal", "Companion", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Animal", " ", "Companion", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 21, 141, 219, 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 71, 71, 71, 98, 115, 216, 63, 146, "card", "<EOS>", 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "<UNK>", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "card", "<EOS>", "summon", "<EOS>", 218, 75, 55, 116, 32, "game", "<EOS>", 58, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "<UNK>", "<EOS>", 213, 12, 216, 79, 109]}, {"inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.<UNK>) < 7\n", "score": -6.7128601294701795, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "AnimalCompanion", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"_type": "List", "elts": [{"func": {"attr": "Misha", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"func": {"attr": "Leokk", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"_type": "Template15_expr_seq"}, {"_type": "Template15_expr_seq"}]}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "card", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "summon", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}, "args": [{"_type": "Template19"}, {"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}, {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template24"}], "ops": [{"_type": "Lt"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -4.291450386517681e-05, -9.560128091834486e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.0014781951904296875, -0.00011444091796875, 0.0, -5.9604644775390625e-06, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, 0.0, -0.0003719329833984375, -3.814697265625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -7.62939453125e-06, -2.157668859581463e-05, -1.0013580322265625e-05, -2.0265579223632812e-06, -3.814697265625e-06, -0.000133514404296875, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -0.00018465518951416016, 0.0, -6.103515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001087188720703125, 0.0, -0.000286102294921875, -4.00543212890625e-05, -0.000751495361328125, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -3.0517578125e-05, 0.0, -1.33514404296875e-05, -3.62396240234375e-05, -2.09808349609375e-05, 0.0, -0.010451316833496094, -0.000453948974609375, -0.006084442138671875, -2.6702880859375e-05, -4.57763671875e-05, -2.288818359375e-05, 0.0, -0.08859863132238388, -0.00038699767901562154, -0.0018672943115234375, -0.00063323974609375, -0.012630462646484375, -0.00203704833984375, -0.0031518936157226562, -0.0001964569091796875, 0.0, -0.0051860809326171875, -1.9073486328125e-06, -0.0002117156982421875, -7.62939453125e-06, -0.0007457733154296875, -1.52587890625e-05, -0.20967769622802734, -1.9073486328125e-06, -0.00018143653869628906, -3.933906555175781e-06, -0.0008971592178568244, 0.0, -0.002563675632700324, -8.82148651726311e-06, -0.027758503332734108, -3.0994415283203125e-05, -0.8551400899887085, -0.0019876956939697266, -0.000148773193359375, -0.0003681182861328125, -3.0517578125e-05, 0.0, -0.0001583099365234375, 0.0, -5.91278076171875e-05, -3.814697265625e-06, -0.003231048583984375, -3.814697265625e-06, -0.07719898223876953, -7.62939453125e-06, -0.0003490447998046875, -1.9073486328125e-06, -0.0006751830223947763, -1.9073486328125e-06, -0.0024565239436924458, -4.410743713378906e-06, -0.025821687653660774, -1.2040138244628906e-05, -1.1250345706939697, -0.01645481586456299, -0.030584335327148438, -0.11096954345703125, -0.0029706954956054688, -4.38690185546875e-05, -1.9073486328125e-06, -0.002185821533203125, -1.9073486328125e-06, -0.004823565483093262, 0.0, -5.14984130859375e-05, -2.6702880859375e-05, -0.00014495849609375, -6.866455078125e-05, -8.58306884765625e-05, -0.0001773834228515625, -0.0078105926513671875, 0.0, -0.0005092620849609375, 0.0, -1.1444091796875e-05, -0.0032176971435546875, -3.814697265625e-06, -0.053768157958984375, -0.00038795097498223186, -0.0001659393310546875, -1.9073486328125e-06, 0.0, -0.002532958984375, -0.000396728515625, -1.9073486328125e-06, -0.00042724609375, -4.76837158203125e-05, -0.009297485463321209, 0.0, -0.0025600064545869827, -3.814697265625e-06, -0.0007457733154296875, -0.0010223388671875, -0.0074558258056640625, -2.288818359375e-05, -0.0002498626708984375, -0.00023472309112548828, 0.0, -7.2479248046875e-05, -4.57763671875e-05, -0.0002155303955078125, -1.9073486328125e-06, -0.0016443729400634766, -7.62939453125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0006999969482421875, -0.0005486001609824598, -2.09808349609375e-05, -0.0023250579833984375, -4.57763671875e-05, -0.002277374267578125, -2.288818359375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -8.96453857421875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0002536773681640625, -0.0003261566162109375, -0.0009918212890625, -0.0016765594482421875, -0.0007781982421875, -0.0006809234619140625, -0.004032135009765625, -0.0002536773681640625, -1.52587890625e-05, -0.00023651123046875, -7.62939453125e-06, -0.00018310546875, -0.002201080322265625, -0.00032162611023522913, -6.115436553955078e-05, -0.0013179779052734375, 0.0, -0.0001201629638671875, -4.38690185546875e-05, -0.0057964324951171875, -3.814697265625e-06, -6.783007847843692e-05, 0.0, -0.008081436157226562, -0.0002193450927734375, -7.2479248046875e-05, -1.1444091796875e-05, -0.0001277923583984375, -3.814697265625e-06, -0.0009040831355378032, -1.1920928244535389e-07, -3.814697265625e-06, -0.000324249267578125, -3.814697265625e-06, -0.00081634521484375, -3.9277522563934326, -1.0728830375228426e-06, -5.7220458984375e-06, -0.01625823974609375, -5.7220458984375e-06, -0.0006389617919921875, -1.33514404296875e-05], "choice_history": [93, 145, 230, 101, 125, "Animal", "Companion", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Animal", " ", "Companion", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 21, 141, 219, 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 71, 71, 98, 115, 216, 63, 146, "card", "<EOS>", 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "<UNK>", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "card", "<EOS>", "summon", "<EOS>", 218, 75, 55, 116, 32, "game", "<EOS>", 58, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "<UNK>", "<EOS>", 213, 12, 216, 79, 109]}, {"inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.<UNK>) < 7\n", "score": -7.365564644469821, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "AnimalCompanion", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"_type": "List", "elts": [{"func": {"attr": "Misha", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"func": {"attr": "Misha", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"func": {"attr": "Leokk", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "card", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "summon", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}, "args": [{"_type": "Template19"}, {"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}, {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template24"}], "ops": [{"_type": "Lt"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -4.291450386517681e-05, -9.560128091834486e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.0014781951904296875, -0.00011444091796875, 0.0, -5.9604644775390625e-06, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, 0.0, -0.0003719329833984375, -3.814697265625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -7.62939453125e-06, -2.157668859581463e-05, -1.0013580322265625e-05, -2.0265579223632812e-06, -3.814697265625e-06, -0.000133514404296875, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -0.00018465518951416016, 0.0, -6.103515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001087188720703125, 0.0, -0.000286102294921875, -4.00543212890625e-05, -0.000751495361328125, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -3.0517578125e-05, 0.0, -1.33514404296875e-05, -3.62396240234375e-05, -2.09808349609375e-05, 0.0, -0.010451316833496094, -0.000453948974609375, -0.006084442138671875, -2.6702880859375e-05, -4.57763671875e-05, -2.288818359375e-05, 0.0, -0.08859863132238388, -0.00038699767901562154, -0.0018672943115234375, -0.00063323974609375, -0.012630462646484375, -0.00203704833984375, -0.0031518936157226562, -0.0001964569091796875, 0.0, -0.0051860809326171875, -1.9073486328125e-06, -0.0002117156982421875, -7.62939453125e-06, -0.0007457733154296875, -1.52587890625e-05, -0.20967769622802734, -1.9073486328125e-06, -0.00018143653869628906, -3.933906555175781e-06, -0.0008971592178568244, 0.0, -0.002563675632700324, -8.82148651726311e-06, -0.027758503332734108, -3.0994415283203125e-05, -0.8551400899887085, -0.0019876956939697266, -0.000148773193359375, -0.0003681182861328125, -3.0517578125e-05, 0.0, -0.0001583099365234375, 0.0, -5.91278076171875e-05, -3.814697265625e-06, -0.003231048583984375, -3.814697265625e-06, -0.07719898223876953, -7.62939453125e-06, -0.0003490447998046875, -1.9073486328125e-06, -0.0006751830223947763, -1.9073486328125e-06, -0.0024565239436924458, -4.410743713378906e-06, -0.025821687653660774, -1.2040138244628906e-05, -0.6492264270782471, -0.004278302192687988, -0.000843048095703125, -0.0002727508544921875, -2.288818359375e-05, 0.0, -0.0001888275146484375, 0.0, -8.0108642578125e-05, -7.62939453125e-06, -0.0035953521728515625, -1.33514404296875e-05, -0.09876251220703125, -1.33514404296875e-05, -0.0003833770751953125, -1.9073486328125e-06, -0.0006184428348205984, 0.0, -0.002594927093014121, -4.5299530029296875e-06, -0.02785070799291134, -1.430511474609375e-05, -1.123101830482483, -0.017117738723754883, -0.029146194458007812, -0.001605987548828125, -3.0517578125e-05, -1.9073486328125e-06, -0.0033140182495117188, -1.9073486328125e-06, -0.004054665565490723, 0.0, -8.392333984375e-05, -3.24249267578125e-05, -0.000110626220703125, -6.103515625e-05, -0.0001373291015625, -0.000362396240234375, -0.006687283515930176, 0.0, -0.0005820989608764648, -2.0265579223632812e-06, -9.5367431640625e-06, -0.0024509429931640625, -3.814697265625e-06, -0.03305184841156006, -0.00040928172529675066, -0.0001506805419921875, -1.9073486328125e-06, 0.0, -0.0026645660400390625, -0.000408172607421875, -1.9073486328125e-06, -0.0003833770751953125, -4.76837158203125e-05, -0.009882684797048569, 0.0, -0.0026433339808136225, -3.814697265625e-06, -0.0007610321044921875, -0.0009765625, -0.0078067779541015625, -2.09808349609375e-05, -0.000244140625, -0.00023663043975830078, 0.0, -7.2479248046875e-05, -4.57763671875e-05, -0.000213623046875, -1.9073486328125e-06, -0.0015909671783447266, -5.7220458984375e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0009059906005859375, -0.0005615937989205122, -1.52587890625e-05, -0.001800537109375, -4.1961669921875e-05, -0.0026226043701171875, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0002651214599609375, -0.0003299713134765625, -0.000995635986328125, -0.0016326904296875, -0.00075531005859375, -0.00067138671875, -0.004138946533203125, -0.0002460479736328125, -1.52587890625e-05, -0.000232696533203125, -7.62939453125e-06, -0.000179290771484375, -0.0022029876708984375, -0.00032341424957849085, -6.115436553955078e-05, -0.0013179779052734375, 0.0, -0.0001201629638671875, -4.38690185546875e-05, -0.0058155059814453125, -3.814697265625e-06, -6.783007847843692e-05, 0.0, -0.008087158203125, -0.000217437744140625, -7.2479248046875e-05, -1.1444091796875e-05, -0.0001277923583984375, -3.814697265625e-06, -0.0009021757869049907, -1.1920928244535389e-07, -3.814697265625e-06, -0.000324249267578125, -3.814697265625e-06, -0.00081634521484375, -3.927565336227417, -1.0728830375228426e-06, -5.7220458984375e-06, -0.016266822814941406, -5.7220458984375e-06, -0.000640869140625, -1.33514404296875e-05], "choice_history": [93, 145, 230, 101, 125, "Animal", "Companion", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Animal", " ", "Companion", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 21, 141, 219, 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 71, 98, 115, 216, 63, 146, "card", "<EOS>", 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "<UNK>", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "card", "<EOS>", "summon", "<EOS>", 218, 75, 55, 116, 32, "game", "<EOS>", 58, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "<UNK>", "<EOS>", 213, 12, 216, 79, 109]}, {"inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.<UNK>) < 7\n", "score": -7.418551535391423, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "AnimalCompanion", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"_type": "List", "elts": [{"func": {"attr": "Huffer", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"func": {"attr": "Leokk", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"_type": "Template15_expr_seq"}, {"_type": "Template15_expr_seq"}]}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "card", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "summon", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}, "args": [{"_type": "Template19"}, {"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}, {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template24"}], "ops": [{"_type": "Lt"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -4.291450386517681e-05, -9.560128091834486e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.0014781951904296875, -0.00011444091796875, 0.0, -5.9604644775390625e-06, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, 0.0, -0.0003719329833984375, -3.814697265625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -7.62939453125e-06, -2.157668859581463e-05, -1.0013580322265625e-05, -2.0265579223632812e-06, -3.814697265625e-06, -0.000133514404296875, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -0.00018465518951416016, 0.0, -6.103515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001087188720703125, 0.0, -0.000286102294921875, -4.00543212890625e-05, -0.000751495361328125, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -3.0517578125e-05, 0.0, -1.33514404296875e-05, -3.62396240234375e-05, -2.09808349609375e-05, 0.0, -0.010451316833496094, -0.000453948974609375, -0.006084442138671875, -2.6702880859375e-05, -4.57763671875e-05, -2.288818359375e-05, 0.0, -0.08859863132238388, -0.00038699767901562154, -0.0018672943115234375, -0.00063323974609375, -0.012630462646484375, -0.00203704833984375, -0.0031518936157226562, -0.0001964569091796875, 0.0, -0.0051860809326171875, -1.9073486328125e-06, -0.0002117156982421875, -7.62939453125e-06, -0.0007457733154296875, -1.52587890625e-05, -0.20967769622802734, -1.9073486328125e-06, -0.00018143653869628906, -3.933906555175781e-06, -0.0008971592178568244, 0.0, -0.002563675632700324, -8.82148651726311e-06, -0.027758503332734108, -3.0994415283203125e-05, -1.4531816244125366, -0.00413203239440918, -0.0008563995361328125, -0.0006542205810546875, -1.9073486328125e-05, 0.0, -0.000164031982421875, 0.0, -0.0001850128173828125, -1.9073486328125e-06, -0.0020542144775390625, -3.814697265625e-06, -0.09560966491699219, -7.62939453125e-06, -0.0003604888916015625, -1.9073486328125e-06, -0.0006563455099239945, -1.9073486328125e-06, -0.002337674144655466, -4.410743713378906e-06, -0.02588672563433647, -1.5854835510253906e-05, -1.185725212097168, -0.020348787307739258, -0.03783130645751953, -0.12474536895751953, -0.0030002593994140625, -4.1961669921875e-05, -1.9073486328125e-06, -0.002227783203125, -1.9073486328125e-06, -0.004774928092956543, 0.0, -5.14984130859375e-05, -2.6702880859375e-05, -0.000141143798828125, -6.866455078125e-05, -8.7738037109375e-05, -0.0001773834228515625, -0.007989883422851562, 0.0, -0.00051116943359375, 0.0, -1.1444091796875e-05, -0.0032596588134765625, -3.814697265625e-06, -0.05516946315765381, -0.00038795097498223186, -0.0001678466796875, -1.9073486328125e-06, 0.0, -0.0025272369384765625, -0.000396728515625, -1.9073486328125e-06, -0.000431060791015625, -4.76837158203125e-05, -0.009273047558963299, 0.0, -0.002554403617978096, -3.814697265625e-06, -0.0007457733154296875, -0.0010242462158203125, -0.0074367523193359375, -2.288818359375e-05, -0.0002498626708984375, -0.00023472309112548828, 0.0, -7.2479248046875e-05, -4.57763671875e-05, -0.0002155303955078125, -1.9073486328125e-06, -0.0016415119171142578, -7.62939453125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.000698089599609375, -0.0005486001609824598, -2.288818359375e-05, -0.0023345947265625, -4.57763671875e-05, -0.0022706985473632812, -2.288818359375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -8.96453857421875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0002536773681640625, -0.0003261566162109375, -0.0009918212890625, -0.001678466796875, -0.0007781982421875, -0.0006809234619140625, -0.0040340423583984375, -0.0002536773681640625, -1.52587890625e-05, -0.00023651123046875, -7.62939453125e-06, -0.00018310546875, -0.002201080322265625, -0.00032162611023522913, -6.115436553955078e-05, -0.0013179779052734375, 0.0, -0.0001201629638671875, -4.38690185546875e-05, -0.0057964324951171875, -3.814697265625e-06, -6.783007847843692e-05, 0.0, -0.008081436157226562, -0.0002193450927734375, -7.2479248046875e-05, -1.1444091796875e-05, -0.0001277923583984375, -3.814697265625e-06, -0.0009040831355378032, -1.1920928244535389e-07, -3.814697265625e-06, -0.000324249267578125, -3.814697265625e-06, -0.00081634521484375, -3.927762746810913, -1.0728830375228426e-06, -5.7220458984375e-06, -0.016257286071777344, -5.7220458984375e-06, -0.0006389617919921875, -1.33514404296875e-05], "choice_history": [93, 145, 230, 101, 125, "Animal", "Companion", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Animal", " ", "Companion", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 21, 141, 219, 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 71, 71, 98, 115, 216, 63, 146, "card", "<EOS>", 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "<UNK>", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "card", "<EOS>", "summon", "<EOS>", 218, 75, 55, 116, 32, "game", "<EOS>", 58, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "<UNK>", "<EOS>", 213, 12, 216, 79, 109]}, {"inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Misha(), hearthbreaker.cards.minions.hunter.Misha()]\n        if len(player.minions) < 7 and len(player.minions) < 7:\n            card = game.random_choice(<UNK>)\n        else:\n            card.summon(player, player.game, len(player.minions))\n        if len(ManaChange(2)) > 0:\n            card = game.random_choice(<UNK>)\n        else:\n            card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -12.697740576735427, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "AnimalCompanion", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"_type": "List", "elts": [{"func": {"attr": "Misha", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"func": {"attr": "Misha", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"func": {"attr": "Misha", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"func": {"attr": "Misha", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}]}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "If", "test": {"values": [{"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template24"}], "ops": [{"_type": "Lt"}]}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template24"}], "ops": [{"_type": "Lt"}]}], "_type": "BoolOp", "op": {"_type": "And"}}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "summon", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}, "args": [{"_type": "Template19"}, {"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}, {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}], "_type": "Call"}}], "body": [{"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "card", "_type": "Name"}]}]}, {"_type": "If", "test": {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"func": {"id": "ManaChange", "_type": "Name"}, "args": [{"_type": "Template12"}], "_type": "Call"}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template31"}], "ops": [{"_type": "Gt"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "summon", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}, "args": [{"_type": "Template19"}, {"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}, {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}], "_type": "Call"}}], "body": [{"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "card", "_type": "Name"}]}]}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template24"}], "ops": [{"_type": "Lt"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -4.291450386517681e-05, -9.560128091834486e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.0014781951904296875, -0.00011444091796875, 0.0, -5.9604644775390625e-06, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, 0.0, -0.0003719329833984375, -3.814697265625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -7.62939453125e-06, -2.157668859581463e-05, -1.0013580322265625e-05, -2.0265579223632812e-06, -3.814697265625e-06, -0.000133514404296875, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -0.00018465518951416016, 0.0, -6.103515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001087188720703125, 0.0, -0.000286102294921875, -4.00543212890625e-05, -0.000751495361328125, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -3.0517578125e-05, 0.0, -1.33514404296875e-05, -3.62396240234375e-05, -2.09808349609375e-05, 0.0, -0.010451316833496094, -0.000453948974609375, -0.006084442138671875, -2.6702880859375e-05, -4.57763671875e-05, -2.288818359375e-05, 0.0, -0.08859863132238388, -0.00038699767901562154, -0.0018672943115234375, -0.00063323974609375, -0.012630462646484375, -0.00203704833984375, -0.0031518936157226562, -0.0001964569091796875, 0.0, -0.0051860809326171875, -1.9073486328125e-06, -0.0002117156982421875, -7.62939453125e-06, -0.0007457733154296875, -1.52587890625e-05, -0.20967769622802734, -1.9073486328125e-06, -0.00018143653869628906, -3.933906555175781e-06, -0.0008971592178568244, 0.0, -0.002563675632700324, -8.82148651726311e-06, -0.027758503332734108, -3.0994415283203125e-05, -0.8551400899887085, -0.0019876956939697266, -0.000148773193359375, -0.0003681182861328125, -3.0517578125e-05, 0.0, -0.0001583099365234375, 0.0, -5.91278076171875e-05, -3.814697265625e-06, -0.003231048583984375, -3.814697265625e-06, -0.07719898223876953, -7.62939453125e-06, -0.0003490447998046875, -1.9073486328125e-06, -0.0006751830223947763, -1.9073486328125e-06, -0.0024565239436924458, -4.410743713378906e-06, -0.025821687653660774, -1.2040138244628906e-05, -0.6492264270782471, -0.004278302192687988, -0.000843048095703125, -0.0002727508544921875, -2.288818359375e-05, 0.0, -0.0001888275146484375, 0.0, -8.0108642578125e-05, -7.62939453125e-06, -0.0035953521728515625, -1.33514404296875e-05, -0.09876251220703125, -1.33514404296875e-05, -0.0003833770751953125, -1.9073486328125e-06, -0.0006184428348205984, 0.0, -0.002594927093014121, -4.5299530029296875e-06, -0.02785070799291134, -1.430511474609375e-05, -0.6461320519447327, -0.003866434097290039, -0.0008602142333984375, -0.0002880096435546875, -2.47955322265625e-05, 0.0, -0.0001850128173828125, 0.0, -8.20159912109375e-05, -7.62939453125e-06, -0.0037097930908203125, -1.52587890625e-05, -0.09781837463378906, -1.52587890625e-05, -0.0003814697265625, -1.9073486328125e-06, -0.0006211840081959963, 0.0, -0.0025859849993139505, -2.622604142743512e-06, -0.027997184544801712, -1.430511474609375e-05, -0.648327112197876, -0.003832101821899414, -0.06302165985107422, -0.03099822998046875, -1.1521644592285156, -0.001628875732421875, -8.392333984375e-05, -0.0002231597900390625, -0.012056350708007812, -2.47955322265625e-05, -0.3131732940673828, -0.00875091552734375, -5.53131103515625e-05, -6.29425048828125e-05, -0.0025429714005440474, -2.384185791015625e-06, -1.9073486328125e-06, -0.0011997222900390625, 0.0, -0.009914398193359375, -0.5487852096557617, -1.33514404296875e-05, -1.1444091796875e-05, -0.1518259048461914, -0.0001239776611328125, -0.0002002716064453125, -0.0007419586181640625, -0.0002880096435546875, -2.288818359375e-05, -5.7220458984375e-06, -0.12078094482421875, -3.814697265625e-06, -0.0016981350490823388, -1.1920928244535389e-07, -3.814697265625e-06, -0.008045196533203125, -5.340576171875e-05, -0.026525497436523438, -0.02182328701019287, -7.62939453125e-06, -3.0517578125e-05, -0.00025177001953125, -1.9073486328125e-05, -0.0002880096435546875, -0.2362651824951172, -0.6616983413696289, -1.9073486328125e-06, -3.814697265625e-06, -0.0001220703125, 0.0, -0.35534095764160156, -1.9073486328125e-06, -3.24249267578125e-05, -0.0001220703125, -8.96453857421875e-05, -2.09808349609375e-05, -0.0001010894775390625, -5.340576171875e-05, -0.08719456195831299, 0.0, -0.001120924949645996, 0.0, -9.5367431640625e-06, -0.0014667510986328125, -3.814697265625e-06, -0.029870986938476562, -0.00047696271212771535, -0.035513877868652344, -0.0027008056640625, -5.7220458984375e-06, 0.0, -4.57763671875e-05, -0.00373077392578125, -1.9073486328125e-06, -0.0030050277709960938, -4.57763671875e-05, -0.019337624311447144, -4.41074053014745e-06, -0.029408905655145645, -1.9073486328125e-06, -0.004222869873046875, -0.0014286041259765625, -0.01694488525390625, -4.76837158203125e-05, -0.000186920166015625, -0.0002518892288208008, 0.0, -9.72747802734375e-05, -5.340576171875e-05, -0.000270843505859375, 0.0, -0.0015453100204467773, -1.71661376953125e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.0007171630859375, -0.0004588358278851956, -3.62396240234375e-05, -0.4783754348754883, -0.025726318359375, -0.021674156188964844, -0.000141143798828125, -0.0011034011840820312, -0.0001049041748046875, -0.0008792877197265625, -1.71661376953125e-05, -0.003140089800581336, -3.933906555175781e-06, -3.814697265625e-06, -0.034483909606933594, -0.0008392333984375, -0.2601490020751953, 0.0, -0.19835495948791504, -0.017770886421203613, -1.9073486328125e-06, -0.000293731689453125, -1.4328489303588867, -0.04637718200683594, -1.3054609298706055, -1.52587890625e-05, -0.06694698333740234, -0.07762813568115234, -0.3907737731933594, -7.2479248046875e-05, -9.5367431640625e-06, -1.71661376953125e-05, 0.0, -0.5290180444717407, -1.9073486328125e-06, -3.814697265625e-05, -0.0002307891845703125, -3.814697265625e-05, -3.24249267578125e-05, -0.00084686279296875, -0.0001049041748046875, -0.04533112049102783, 0.0, -0.001112818717956543, -1.9073486328125e-06, -1.1444091796875e-05, -0.00113677978515625, -3.814697265625e-06, -0.029515385627746582, -0.000711904198396951, -0.030298233032226562, -0.003208160400390625, -5.7220458984375e-06, 0.0, -4.9591064453125e-05, -0.002361297607421875, -1.9073486328125e-06, -0.0072422027587890625, -7.82012939453125e-05, -0.020093543455004692, -4.41074053014745e-06, -0.031538840383291245, -1.9073486328125e-06, -0.0048961639404296875, -0.0012760162353515625, -0.020330429077148438, -8.20159912109375e-05, -0.000217437744140625, -0.00019741058349609375, 0.0, -8.0108642578125e-05, -4.9591064453125e-05, -0.000423431396484375, 0.0, -0.0014984607696533203, -1.71661376953125e-05, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0007190704345703125, -0.00043165625538676977, -3.814697265625e-05, -0.0021915435791015625, -4.1961669921875e-05, -0.0020418167114257812, -3.0517578125e-05, -1.52587890625e-05, -1.9073486328125e-06, -9.1552734375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0002689361572265625, -0.00026702880859375, -0.0009765625, -0.0018672943115234375, -0.00093841552734375, -0.0007305145263671875, -0.0035247802734375, -0.000274658203125, -1.52587890625e-05, -0.0002498626708984375, -7.62939453125e-06, -0.00019073486328125, -0.002201080322265625, -0.00031804980244487524, -6.306171417236328e-05, -0.0013179779052734375, 0.0, -0.0001201629638671875, -4.38690185546875e-05, -0.005740165710449219, -3.814697265625e-06, -6.771086918888614e-05, 0.0, -0.008148193359375, -0.0002269744873046875, -7.43865966796875e-05, -1.1444091796875e-05, -0.000125885009765625, -3.814697265625e-06, -0.0009078978328034282, -1.1920928244535389e-07, -3.814697265625e-06, -0.0003261566162109375, -3.814697265625e-06, -0.00081634521484375, -0.023097753524780273, 0.0, -5.7220458984375e-05, -0.0002899169921875, -3.814697265625e-06, -0.0007228851318359375, -2.288818359375e-05], "choice_history": [93, 145, 230, 101, 125, "Animal", "Companion", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Animal", " ", "Companion", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 21, 141, 219, 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 105, 134, 17, 119, 4, 217, 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 213, 12, 216, 79, 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 213, 12, 216, 79, 229, 98, 115, 216, 63, 146, "card", "<EOS>", 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "<UNK>", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 23, 146, "card", "<EOS>", "summon", "<EOS>", 218, 75, 55, 116, 32, "game", "<EOS>", 58, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 105, 134, 19, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 58, 123, 23, 146, "Mana", "Change", "<EOS>", 216, 69, 213, 7, 216, 83, 229, 98, 115, 216, 63, 146, "card", "<EOS>", 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "<UNK>", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 23, 146, "card", "<EOS>", "summon", "<EOS>", 218, 75, 55, 116, 32, "game", "<EOS>", 58, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 213, 12, 216, 79, 109]}, {"inferred_code": "return Minion\n", "score": -16.611376762390137, "model_output": {"_type": "Module", "body": [{"_type": "Return", "value": {"_type": "Template23"}}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -14.901467323303223, -0.25347900390625, -0.92999267578125, -0.5264148712158203], "choice_history": [93, 145, 230, 107, 153, 36, 109]}, {"inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Misha(), hearthbreaker.cards.minions.hunter.Misha()]\n        if len(player.minions) < 7 and len(player.minions) < 7:\n            card = game.random_choice(<UNK>)\n        else:\n            card.summon(player, player.game, len(player.minions))\n        if len(ManaChange(2)) > 0:\n            card = game.random_choice(<UNK>)\n        else:\n            card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.<UNK>) < 7\n", "score": -16.617994449606257, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "AnimalCompanion", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"_type": "List", "elts": [{"func": {"attr": "Misha", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"func": {"attr": "Misha", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"func": {"attr": "Misha", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, {"func": {"attr": "Misha", "_type": "Attribute", "value": {"attr": "hunter", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}]}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "If", "test": {"values": [{"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template24"}], "ops": [{"_type": "Lt"}]}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template24"}], "ops": [{"_type": "Lt"}]}], "_type": "BoolOp", "op": {"_type": "And"}}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "summon", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}, "args": [{"_type": "Template19"}, {"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}, {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}], "_type": "Call"}}], "body": [{"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "card", "_type": "Name"}]}]}, {"_type": "If", "test": {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"func": {"id": "ManaChange", "_type": "Name"}, "args": [{"_type": "Template12"}], "_type": "Call"}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template31"}], "ops": [{"_type": "Gt"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "summon", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}, "args": [{"_type": "Template19"}, {"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}, {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}], "_type": "Call"}}], "body": [{"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "card", "_type": "Name"}]}]}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template24"}], "ops": [{"_type": "Lt"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -4.291450386517681e-05, -9.560128091834486e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.0014781951904296875, -0.00011444091796875, 0.0, -5.9604644775390625e-06, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, 0.0, -0.0003719329833984375, -3.814697265625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -7.62939453125e-06, -2.157668859581463e-05, -1.0013580322265625e-05, -2.0265579223632812e-06, -3.814697265625e-06, -0.000133514404296875, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -0.00018465518951416016, 0.0, -6.103515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001087188720703125, 0.0, -0.000286102294921875, -4.00543212890625e-05, -0.000751495361328125, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -3.0517578125e-05, 0.0, -1.33514404296875e-05, -3.62396240234375e-05, -2.09808349609375e-05, 0.0, -0.010451316833496094, -0.000453948974609375, -0.006084442138671875, -2.6702880859375e-05, -4.57763671875e-05, -2.288818359375e-05, 0.0, -0.08859863132238388, -0.00038699767901562154, -0.0018672943115234375, -0.00063323974609375, -0.012630462646484375, -0.00203704833984375, -0.0031518936157226562, -0.0001964569091796875, 0.0, -0.0051860809326171875, -1.9073486328125e-06, -0.0002117156982421875, -7.62939453125e-06, -0.0007457733154296875, -1.52587890625e-05, -0.20967769622802734, -1.9073486328125e-06, -0.00018143653869628906, -3.933906555175781e-06, -0.0008971592178568244, 0.0, -0.002563675632700324, -8.82148651726311e-06, -0.027758503332734108, -3.0994415283203125e-05, -0.8551400899887085, -0.0019876956939697266, -0.000148773193359375, -0.0003681182861328125, -3.0517578125e-05, 0.0, -0.0001583099365234375, 0.0, -5.91278076171875e-05, -3.814697265625e-06, -0.003231048583984375, -3.814697265625e-06, -0.07719898223876953, -7.62939453125e-06, -0.0003490447998046875, -1.9073486328125e-06, -0.0006751830223947763, -1.9073486328125e-06, -0.0024565239436924458, -4.410743713378906e-06, -0.025821687653660774, -1.2040138244628906e-05, -0.6492264270782471, -0.004278302192687988, -0.000843048095703125, -0.0002727508544921875, -2.288818359375e-05, 0.0, -0.0001888275146484375, 0.0, -8.0108642578125e-05, -7.62939453125e-06, -0.0035953521728515625, -1.33514404296875e-05, -0.09876251220703125, -1.33514404296875e-05, -0.0003833770751953125, -1.9073486328125e-06, -0.0006184428348205984, 0.0, -0.002594927093014121, -4.5299530029296875e-06, -0.02785070799291134, -1.430511474609375e-05, -0.6461320519447327, -0.003866434097290039, -0.0008602142333984375, -0.0002880096435546875, -2.47955322265625e-05, 0.0, -0.0001850128173828125, 0.0, -8.20159912109375e-05, -7.62939453125e-06, -0.0037097930908203125, -1.52587890625e-05, -0.09781837463378906, -1.52587890625e-05, -0.0003814697265625, -1.9073486328125e-06, -0.0006211840081959963, 0.0, -0.0025859849993139505, -2.622604142743512e-06, -0.027997184544801712, -1.430511474609375e-05, -0.648327112197876, -0.003832101821899414, -0.06302165985107422, -0.03099822998046875, -1.1521644592285156, -0.001628875732421875, -8.392333984375e-05, -0.0002231597900390625, -0.012056350708007812, -2.47955322265625e-05, -0.3131732940673828, -0.00875091552734375, -5.53131103515625e-05, -6.29425048828125e-05, -0.0025429714005440474, -2.384185791015625e-06, -1.9073486328125e-06, -0.0011997222900390625, 0.0, -0.009914398193359375, -0.5487852096557617, -1.33514404296875e-05, -1.1444091796875e-05, -0.1518259048461914, -0.0001239776611328125, -0.0002002716064453125, -0.0007419586181640625, -0.0002880096435546875, -2.288818359375e-05, -5.7220458984375e-06, -0.12078094482421875, -3.814697265625e-06, -0.0016981350490823388, -1.1920928244535389e-07, -3.814697265625e-06, -0.008045196533203125, -5.340576171875e-05, -0.026525497436523438, -0.02182328701019287, -7.62939453125e-06, -3.0517578125e-05, -0.00025177001953125, -1.9073486328125e-05, -0.0002880096435546875, -0.2362651824951172, -0.6616983413696289, -1.9073486328125e-06, -3.814697265625e-06, -0.0001220703125, 0.0, -0.35534095764160156, -1.9073486328125e-06, -3.24249267578125e-05, -0.0001220703125, -8.96453857421875e-05, -2.09808349609375e-05, -0.0001010894775390625, -5.340576171875e-05, -0.08719456195831299, 0.0, -0.001120924949645996, 0.0, -9.5367431640625e-06, -0.0014667510986328125, -3.814697265625e-06, -0.029870986938476562, -0.00047696271212771535, -0.035513877868652344, -0.0027008056640625, -5.7220458984375e-06, 0.0, -4.57763671875e-05, -0.00373077392578125, -1.9073486328125e-06, -0.0030050277709960938, -4.57763671875e-05, -0.019337624311447144, -4.41074053014745e-06, -0.029408905655145645, -1.9073486328125e-06, -0.004222869873046875, -0.0014286041259765625, -0.01694488525390625, -4.76837158203125e-05, -0.000186920166015625, -0.0002518892288208008, 0.0, -9.72747802734375e-05, -5.340576171875e-05, -0.000270843505859375, 0.0, -0.0015453100204467773, -1.71661376953125e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.0007171630859375, -0.0004588358278851956, -3.62396240234375e-05, -0.4783754348754883, -0.025726318359375, -0.021674156188964844, -0.000141143798828125, -0.0011034011840820312, -0.0001049041748046875, -0.0008792877197265625, -1.71661376953125e-05, -0.003140089800581336, -3.933906555175781e-06, -3.814697265625e-06, -0.034483909606933594, -0.0008392333984375, -0.2601490020751953, 0.0, -0.19835495948791504, -0.017770886421203613, -1.9073486328125e-06, -0.000293731689453125, -1.4328489303588867, -0.04637718200683594, -1.3054609298706055, -1.52587890625e-05, -0.06694698333740234, -0.07762813568115234, -0.3907737731933594, -7.2479248046875e-05, -9.5367431640625e-06, -1.71661376953125e-05, 0.0, -0.5290180444717407, -1.9073486328125e-06, -3.814697265625e-05, -0.0002307891845703125, -3.814697265625e-05, -3.24249267578125e-05, -0.00084686279296875, -0.0001049041748046875, -0.04533112049102783, 0.0, -0.001112818717956543, -1.9073486328125e-06, -1.1444091796875e-05, -0.00113677978515625, -3.814697265625e-06, -0.029515385627746582, -0.000711904198396951, -0.030298233032226562, -0.003208160400390625, -5.7220458984375e-06, 0.0, -4.9591064453125e-05, -0.002361297607421875, -1.9073486328125e-06, -0.0072422027587890625, -7.82012939453125e-05, -0.020093543455004692, -4.41074053014745e-06, -0.031538840383291245, -1.9073486328125e-06, -0.0048961639404296875, -0.0012760162353515625, -0.020330429077148438, -8.20159912109375e-05, -0.000217437744140625, -0.00019741058349609375, 0.0, -8.0108642578125e-05, -4.9591064453125e-05, -0.000423431396484375, 0.0, -0.0014984607696533203, -1.71661376953125e-05, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0007190704345703125, -0.00043165625538676977, -3.814697265625e-05, -0.0021915435791015625, -4.1961669921875e-05, -0.0020418167114257812, -3.0517578125e-05, -1.52587890625e-05, -1.9073486328125e-06, -9.1552734375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0002689361572265625, -0.00026702880859375, -0.0009765625, -0.0018672943115234375, -0.00093841552734375, -0.0007305145263671875, -0.0035247802734375, -0.000274658203125, -1.52587890625e-05, -0.0002498626708984375, -7.62939453125e-06, -0.00019073486328125, -0.002201080322265625, -0.00031804980244487524, -6.306171417236328e-05, -0.0013179779052734375, 0.0, -0.0001201629638671875, -4.38690185546875e-05, -0.005740165710449219, -3.814697265625e-06, -6.771086918888614e-05, 0.0, -0.008148193359375, -0.0002269744873046875, -7.43865966796875e-05, -1.1444091796875e-05, -0.000125885009765625, -3.814697265625e-06, -0.0009078978328034282, -1.1920928244535389e-07, -3.814697265625e-06, -0.0003261566162109375, -3.814697265625e-06, -0.00081634521484375, -3.9275872707366943, -1.0728830375228426e-06, -5.7220458984375e-06, -0.016198158264160156, -5.7220458984375e-06, -0.0006351470947265625, -1.52587890625e-05], "choice_history": [93, 145, 230, 101, 125, "Animal", "Companion", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Animal", " ", "Companion", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 21, 141, 219, 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 105, 134, 17, 119, 4, 217, 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 213, 12, 216, 79, 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 213, 12, 216, 79, 229, 98, 115, 216, 63, 146, "card", "<EOS>", 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "<UNK>", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 23, 146, "card", "<EOS>", "summon", "<EOS>", 218, 75, 55, 116, 32, "game", "<EOS>", 58, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 105, 134, 19, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 58, 123, 23, 146, "Mana", "Change", "<EOS>", 216, 69, 213, 7, 216, 83, 229, 98, 115, 216, 63, 146, "card", "<EOS>", 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "<UNK>", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 23, 146, "card", "<EOS>", "summon", "<EOS>", 218, 75, 55, 116, 32, "game", "<EOS>", 58, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "<UNK>", "<EOS>", 213, 12, 216, 79, 109]}, {"inferred_code": "", "score": -20.29578971862793, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -20.295778274536133], "choice_history": [93, 145, 228]}], "index": 2}
{"beams": [{"inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "score": -0.048923087972184476, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneExplosion", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Explosion"}, {"_type": "Template12"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -0.000347137451171875, -8.7738037109375e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -2.861022494471399e-06, -6.318072337307967e-06, -1.33514404296875e-05, -3.0517578125e-05, -0.0004825592041015625, -9.5367431640625e-06, 0.0, -1.5854835510253906e-05, 0.0, -0.0002765655517578125, -9.5367431640625e-06, -3.814697265625e-05, -0.0003147125244140625, 0.0, -7.2479248046875e-05, -0.0030612945556640625, -9.918212890625e-05, -2.288818359375e-05, -1.52587890625e-05, -3.0040289857424796e-05, -2.837179636117071e-05, -6.794917680963408e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, 0.0, -7.05718994140625e-05, 0.0, -0.00013172626495361328, 0.0, -5.14984130859375e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -0.0001773834228515625, 0.0, -0.000225067138671875, 0.0, -1.9073486328125e-06, 0.0, -0.0001087188720703125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006418228149414062, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.000293731689453125, -1.9073486328125e-06, -0.02382183074951172, -0.0003910064697265625, -0.0020503997802734375, -3.62396240234375e-05, -3.4332275390625e-05, -0.004975318908691406, -0.00109100341796875, -7.82012939453125e-05, 0.0, -2.6702880859375e-05, -1.1444091796875e-05, -0.000644683837890625, -6.103515625e-05, -0.0001468658447265625, 0.0, -0.0001354217529296875, -2.09808349609375e-05, -3.814697265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -0.00012969970703125, 0.0, -0.002758026123046875, 0.0, -0.002071380615234375, -3.0517578125e-05, -0.0001392364501953125, -9.918212890625e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.00038909912109375, -1.33514404296875e-05, 0.0, -0.000194549560546875, -0.001518083969131112, -3.814697265625e-06, -1.1444091796875e-05, -0.0001468658447265625, -4.9591064453125e-05, -1.9073486328125e-05, 0.0, -0.0002765655517578125, -0.00017940998077392578, 0.0, -4.1961669921875e-05, -0.00026702880859375, -0.0001430511474609375, 0.0], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Explosion", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Explosion", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 109]}, {"inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(1), self)\n", "score": -4.271659197455612, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneExplosion", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Explosion"}, {"_type": "Template12"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "extend", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"id": "targets", "_type": "Name"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -0.000347137451171875, -8.7738037109375e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -2.861022494471399e-06, -6.318072337307967e-06, -1.33514404296875e-05, -3.0517578125e-05, -0.0004825592041015625, -9.5367431640625e-06, 0.0, -1.5854835510253906e-05, 0.0, -0.0002765655517578125, -9.5367431640625e-06, -3.814697265625e-05, -0.0003147125244140625, 0.0, -7.2479248046875e-05, -0.0030612945556640625, -9.918212890625e-05, -2.288818359375e-05, -1.52587890625e-05, -3.0040289857424796e-05, -2.837179636117071e-05, -6.794917680963408e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, 0.0, -7.05718994140625e-05, 0.0, -0.00013172626495361328, 0.0, -5.14984130859375e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -0.0001773834228515625, 0.0, -0.000225067138671875, 0.0, -1.9073486328125e-06, 0.0, -0.0001087188720703125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006418228149414062, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.000293731689453125, -1.9073486328125e-06, -4.156682968139648, -0.0002002716064453125, -0.0007534027099609375, -0.0010318756103515625, -3.62396240234375e-05, -2.86102294921875e-05, -8.0108642578125e-05, -0.00021564911003224552, -1.1920928244535389e-07, -5.91278076171875e-05, -5.53131103515625e-05, -0.000286102294921875, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.00037872791290283203, -0.0001125335693359375, -9.34600830078125e-05, -1.9073486328125e-06, -0.000446319580078125, -2.288818359375e-05, -2.86102294921875e-05, -0.0001239776611328125, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.001483917236328125, -1.9073486328125e-06, -0.0030832290649414062, 0.0, -0.0006809234619140625, -3.814697265625e-06, -1.71661376953125e-05, -0.000110626220703125, -4.00543212890625e-05, -0.0002765655517578125, -2.86102294921875e-05, 0.0, -0.0069942474365234375, -1.9073486328125e-06, -0.001139423344284296, -1.5497195136049413e-06, -0.004274215083569288, -3.445148468017578e-05, -9.5367431640625e-06, -0.0004405975341796875, -3.814697265625e-06, -0.0030002593994140625, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -8.96453857421875e-05, -7.62939453125e-06, -0.03050518035888672, -8.7738037109375e-05, -0.008973002433776855, -0.001622319221496582, -0.009756088256835938, -0.000225067138671875, -0.0001277923583984375, -0.005534172058105469, -2.47955322265625e-05, -0.0003609657287597656, -2.1457672119140625e-06, -3.24249267578125e-05, -0.018192291259765625, -1.9073486328125e-06, -1.9073486328125e-06, -8.0108642578125e-05, -2.47955322265625e-05, 0.0, -5.53131103515625e-05, -0.001096205087378621, 0.0, -3.814697265625e-06, -9.918212890625e-05, -4.00543212890625e-05, -5.340576171875e-05, 0.0, -7.43865966796875e-05, -0.0001800060272216797, 0.0, -1.33514404296875e-05, -0.00519561767578125, -5.91278076171875e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Explosion", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Explosion", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "extend", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 103, 129, 41, 23, 146, "targets", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 109]}, {"inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(1), self)\n", "score": -5.636134736207282, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneExplosion", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Explosion"}, {"_type": "Template12"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -0.000347137451171875, -8.7738037109375e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -2.861022494471399e-06, -6.318072337307967e-06, -1.33514404296875e-05, -3.0517578125e-05, -0.0004825592041015625, -9.5367431640625e-06, 0.0, -1.5854835510253906e-05, 0.0, -0.0002765655517578125, -9.5367431640625e-06, -3.814697265625e-05, -0.0003147125244140625, 0.0, -7.2479248046875e-05, -0.0030612945556640625, -9.918212890625e-05, -2.288818359375e-05, -1.52587890625e-05, -3.0040289857424796e-05, -2.837179636117071e-05, -6.794917680963408e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, 0.0, -7.05718994140625e-05, 0.0, -0.00013172626495361328, 0.0, -5.14984130859375e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -0.0001773834228515625, 0.0, -0.000225067138671875, 0.0, -1.9073486328125e-06, 0.0, -0.0001087188720703125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006418228149414062, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.000293731689453125, -1.9073486328125e-06, -0.02382183074951172, -0.0003910064697265625, -0.0020503997802734375, -3.62396240234375e-05, -3.4332275390625e-05, -5.4176435470581055, 0.0, -0.002330780029296875, 0.0, -0.0001010894775390625, -1.9073486328125e-06, -0.008523941040039062, 0.0, -0.15699589252471924, 0.0, -0.010843276977539062, -1.9073486328125e-06, -6.29425048828125e-05, -4.00543212890625e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.0018901824951171875, -1.33514404296875e-05, 0.0, -0.000225067138671875, -0.003307097125798464, -3.814697265625e-06, -5.7220458984375e-06, -0.0001678466796875, -6.67572021484375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.0001163482666015625, -8.404254913330078e-05, 0.0, -4.38690185546875e-05, -0.000324249267578125, -0.0001392364501953125, 0.0], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Explosion", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Explosion", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 41, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 109]}, {"inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        minion.damage(player.effective_spell_damage(1), self)\n", "score": -6.262263255173025, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneExplosion", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}, {"_type": "Template13_stmt_seq"}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -0.000347137451171875, -8.7738037109375e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -2.861022494471399e-06, -6.318072337307967e-06, -1.33514404296875e-05, -3.0517578125e-05, -0.0004825592041015625, -9.5367431640625e-06, 0.0, -1.5854835510253906e-05, 0.0, -0.0002765655517578125, -9.5367431640625e-06, -3.814697265625e-05, -0.0003147125244140625, 0.0, -7.2479248046875e-05, -5.806221961975098, -3.814697265625e-05, -0.0420989990234375, -0.028299884870648384, -5.841255187988281e-06, -0.012174606323242188, -0.0002613067626953125, -0.000888824462890625, -0.000110626220703125, -1.9073486328125e-06, -0.0001888275146484375, -0.0006324052810668945, 0.0, -2.47955322265625e-05, -0.0070934295654296875, -0.0001354217529296875, -0.36232757568359375, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Explosion", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 109, 109]}, {"inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.<UNK>):\n            minion.damage(player.effective_spell_damage(1), self)\n", "score": -6.403218025774663, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneExplosion", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Explosion"}, {"_type": "Template12"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -0.000347137451171875, -8.7738037109375e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -2.861022494471399e-06, -6.318072337307967e-06, -1.33514404296875e-05, -3.0517578125e-05, -0.0004825592041015625, -9.5367431640625e-06, 0.0, -1.5854835510253906e-05, 0.0, -0.0002765655517578125, -9.5367431640625e-06, -3.814697265625e-05, -0.0003147125244140625, 0.0, -7.2479248046875e-05, -0.0030612945556640625, -9.918212890625e-05, -2.288818359375e-05, -1.52587890625e-05, -3.0040289857424796e-05, -2.837179636117071e-05, -6.794917680963408e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, 0.0, -7.05718994140625e-05, 0.0, -0.00013172626495361328, 0.0, -5.14984130859375e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -0.0001773834228515625, 0.0, -0.000225067138671875, 0.0, -1.9073486328125e-06, 0.0, -0.0001087188720703125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006418228149414062, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.000293731689453125, -1.9073486328125e-06, -0.02382183074951172, -0.0003910064697265625, -0.0020503997802734375, -3.62396240234375e-05, -3.4332275390625e-05, -0.004975318908691406, -0.00109100341796875, -7.82012939453125e-05, 0.0, -2.6702880859375e-05, -1.1444091796875e-05, -0.000644683837890625, -6.103515625e-05, -0.0001468658447265625, 0.0, -0.0001354217529296875, -2.09808349609375e-05, -3.814697265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -0.00012969970703125, 0.0, -0.002758026123046875, 0.0, -6.35317850112915, -2.0265579223632812e-06, -0.0014743804931640625, -0.0005054473876953125, -3.814697265625e-06, -4.38690185546875e-05, -0.0001049041748046875, -4.38690185546875e-05, 0.0, -0.000293731689453125, -0.0029777241870760918, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001068115234375, -4.1961669921875e-05, -3.814697265625e-05, 0.0, -0.0004558563232421875, -0.00015842914581298828, 0.0, -3.62396240234375e-05, -0.0002994537353515625, -0.000125885009765625, 0.0], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Explosion", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Explosion", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "<UNK>", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 109]}, {"inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.hero.<UNK>()\n", "score": -6.599630284672571, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneExplosion", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Explosion"}, {"_type": "Template12"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -0.000347137451171875, -8.7738037109375e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -2.861022494471399e-06, -6.318072337307967e-06, -1.33514404296875e-05, -3.0517578125e-05, -0.0004825592041015625, -9.5367431640625e-06, 0.0, -1.5854835510253906e-05, 0.0, -0.0002765655517578125, -9.5367431640625e-06, -3.814697265625e-05, -0.0003147125244140625, 0.0, -7.2479248046875e-05, -0.0030612945556640625, -9.918212890625e-05, -2.288818359375e-05, -1.52587890625e-05, -3.0040289857424796e-05, -2.837179636117071e-05, -6.794917680963408e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, 0.0, -7.05718994140625e-05, 0.0, -0.00013172626495361328, 0.0, -5.14984130859375e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -0.0001773834228515625, 0.0, -0.000225067138671875, 0.0, -1.9073486328125e-06, 0.0, -0.0001087188720703125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006418228149414062, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.000293731689453125, -1.9073486328125e-06, -4.963374137878418, -5.91278076171875e-05, -0.0039033889770507812, -0.000637054443359375, -0.0001583099365234375, -0.000698089599609375, -0.0003070831298828125, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -0.0004082918167114258, -4.9591064453125e-05, -0.00017547607421875, 0.0, -0.0001678466796875, -2.09808349609375e-05, -8.7738037109375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.000141143798828125, 0.0, -0.0023136138916015625, 0.0, -0.00251007080078125, -2.47955322265625e-05, -0.0001430511474609375, -3.62396240234375e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.000316619873046875, -1.52587890625e-05, 0.0, -0.0002117156982421875, -0.0010654219659045339, -3.814697265625e-06, -1.1444091796875e-05, -0.0001201629638671875, -4.57763671875e-05, -2.288818359375e-05, 0.0, -0.000293731689453125, -0.00020420551300048828, 0.0, -4.00543212890625e-05, -0.0002918243408203125, -0.0001373291015625, -0.01291656494140625, -2.288818359375e-05, -0.00174713134765625, -0.0023555755615234375, -5.7220458984375e-06, 0.0, -0.5189456939697266, -2.47955322265625e-05, -0.8141660690307617, -0.21129417419433594, 0.0, -0.05310237407684326, -1.9073486328125e-06, -8.7738037109375e-05], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Explosion", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Explosion", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 102, 128, 18, 121, 15, 116, 15, 116, 32, "hero", "<EOS>", "<UNK>", "<EOS>", 109]}, {"inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.add_buff(Buff(Frozen()))\n", "score": -6.756928074308348, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneExplosion", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Explosion"}, {"_type": "Template12"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Frozen", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -0.000347137451171875, -8.7738037109375e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -2.861022494471399e-06, -6.318072337307967e-06, -1.33514404296875e-05, -3.0517578125e-05, -0.0004825592041015625, -9.5367431640625e-06, 0.0, -1.5854835510253906e-05, 0.0, -0.0002765655517578125, -9.5367431640625e-06, -3.814697265625e-05, -0.0003147125244140625, 0.0, -7.2479248046875e-05, -0.0030612945556640625, -9.918212890625e-05, -2.288818359375e-05, -1.52587890625e-05, -3.0040289857424796e-05, -2.837179636117071e-05, -6.794917680963408e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, 0.0, -7.05718994140625e-05, 0.0, -0.00013172626495361328, 0.0, -5.14984130859375e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -0.0001773834228515625, 0.0, -0.000225067138671875, 0.0, -1.9073486328125e-06, 0.0, -0.0001087188720703125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006418228149414062, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.000293731689453125, -1.9073486328125e-06, -0.02382183074951172, -0.0003910064697265625, -0.0020503997802734375, -3.62396240234375e-05, -3.4332275390625e-05, -0.004975318908691406, -0.00109100341796875, -7.82012939453125e-05, 0.0, -2.6702880859375e-05, -1.1444091796875e-05, -0.000644683837890625, -6.103515625e-05, -0.0001468658447265625, 0.0, -0.0001354217529296875, -2.09808349609375e-05, -3.814697265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -0.00012969970703125, 0.0, -0.002758026123046875, 0.0, -0.002071380615234375, -3.0517578125e-05, -0.0001392364501953125, -9.918212890625e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.00038909912109375, -1.33514404296875e-05, 0.0, -0.000194549560546875, -6.622835159301758, -0.00013160303933545947, -0.00023651123046875, -0.04247093200683594, -9.5367431640625e-06, -0.003314971923828125, 0.0, -0.03505992889404297, 0.0, -1.1444091796875e-05, -0.0010204315185546875, -1.9073486328125e-06, -0.0054727718234062195, -7.379054295597598e-05, -2.288818359375e-05], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Explosion", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Explosion", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Frozen", "<EOS>", 109]}, {"inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.random_choice.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "score": -7.210172350252947, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneExplosion", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Explosion"}, {"_type": "Template12"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -0.000347137451171875, -8.7738037109375e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -2.861022494471399e-06, -6.318072337307967e-06, -1.33514404296875e-05, -3.0517578125e-05, -0.0004825592041015625, -9.5367431640625e-06, 0.0, -1.5854835510253906e-05, 0.0, -0.0002765655517578125, -9.5367431640625e-06, -3.814697265625e-05, -0.0003147125244140625, 0.0, -7.2479248046875e-05, -0.0030612945556640625, -9.918212890625e-05, -2.288818359375e-05, -1.52587890625e-05, -3.0040289857424796e-05, -2.837179636117071e-05, -6.794917680963408e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, 0.0, -7.05718994140625e-05, 0.0, -0.00013172626495361328, 0.0, -5.14984130859375e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -0.0001773834228515625, 0.0, -0.000225067138671875, 0.0, -1.9073486328125e-06, 0.0, -0.0001087188720703125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006418228149414062, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.000293731689453125, -1.9073486328125e-06, -0.02382183074951172, -0.0003910064697265625, -0.0020503997802734375, -3.62396240234375e-05, -3.4332275390625e-05, -0.004975318908691406, -0.00109100341796875, -7.82012939453125e-05, 0.0, -2.6702880859375e-05, -1.1444091796875e-05, -0.000644683837890625, -6.103515625e-05, -0.0001468658447265625, 0.0, -0.0001354217529296875, -2.09808349609375e-05, -3.814697265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -0.00012969970703125, 0.0, -7.136982440948486, 0.0, -0.02881908416748047, -4.57763671875e-05, -0.0001049041748046875, -0.0005283355712890625, -5.7220458984375e-06, -1.9073486328125e-05, -0.000244140625, -1.33514404296875e-05, 0.0, -0.000240325927734375, -0.0015339211095124483, -1.9073486328125e-06, -9.5367431640625e-06, -0.000152587890625, -4.38690185546875e-05, -1.71661376953125e-05, 0.0, -0.0002079010009765625, -0.00017750263214111328, 0.0, -4.38690185546875e-05, -0.0002899169921875, -0.0001373291015625, 0.0], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Explosion", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Explosion", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 109]}, {"inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "score": -7.6494643663573925, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneExplosion", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Explosion"}, {"_type": "Template12"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -0.000347137451171875, -8.7738037109375e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -2.861022494471399e-06, -6.318072337307967e-06, -1.33514404296875e-05, -3.0517578125e-05, -0.0004825592041015625, -9.5367431640625e-06, 0.0, -1.5854835510253906e-05, 0.0, -0.0002765655517578125, -9.5367431640625e-06, -3.814697265625e-05, -0.0003147125244140625, 0.0, -7.2479248046875e-05, -0.0030612945556640625, -9.918212890625e-05, -2.288818359375e-05, -1.52587890625e-05, -3.0040289857424796e-05, -2.837179636117071e-05, -6.794917680963408e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, 0.0, -7.05718994140625e-05, 0.0, -0.00013172626495361328, 0.0, -5.14984130859375e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -0.0001773834228515625, 0.0, -0.000225067138671875, 0.0, -1.9073486328125e-06, 0.0, -0.0001087188720703125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006418228149414062, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.000293731689453125, -1.9073486328125e-06, -0.02382183074951172, -0.0003910064697265625, -7.588505744934082, -0.00014495849609375, -9.5367431640625e-06, -0.0025730133056640625, -3.814697265625e-06, 0.0, -0.02367877960205078, -7.033151632640511e-05, -4.291534423828125e-06, -5.7220458984375e-06, -0.00141143798828125, -3.62396240234375e-05, -3.24249267578125e-05, 0.0, -0.0004749298095703125, -0.00018870830535888672, -3.814697265625e-06, -8.96453857421875e-05, -0.0011081695556640625, -9.34600830078125e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Explosion", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Explosion", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 109]}, {"inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        minion.damage(player.effective_spell_damage(1), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= game.other_player.minions\n", "score": -8.67255874330396, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneExplosion", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "ops": [{"_type": "GtE"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -0.000347137451171875, -8.7738037109375e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -2.861022494471399e-06, -6.318072337307967e-06, -1.33514404296875e-05, -3.0517578125e-05, -0.0004825592041015625, -9.5367431640625e-06, 0.0, -1.5854835510253906e-05, 0.0, -0.0002765655517578125, -9.5367431640625e-06, -3.814697265625e-05, -0.0003147125244140625, 0.0, -7.2479248046875e-05, -5.806221961975098, -3.814697265625e-05, -0.0420989990234375, -0.028299884870648384, -5.841255187988281e-06, -0.012174606323242188, -0.0002613067626953125, -0.000888824462890625, -0.000110626220703125, -1.9073486328125e-06, -0.0001888275146484375, -0.0006324052810668945, 0.0, -2.47955322265625e-05, -0.0070934295654296875, -0.0001354217529296875, -1.210611343383789, -0.00275421142578125, -0.04472923278808594, -0.004863739013671875, -0.0002803802490234375, -0.0001506805419921875, -0.0016298294067382812, -0.0001373291015625, -0.00046539306640625, -5.7220458984375e-06, -7.069110870361328e-05, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -0.0012580156326293945, -1.1563301086425781e-05, -0.036457061767578125, -0.054050445556640625, -0.014101028442382812, -0.10937881469726562, -0.0014057159423828125, -0.0006389617919921875, -4.9591064453125e-05, -0.001529693603515625, -0.00023651123046875, -5.7220458984375e-06, 0.0, -0.000560760498046875, -6.4849853515625e-05, -0.0008304118528030813, -7.62939453125e-05, -0.0007467269897460938, 0.0, -2.86102294921875e-05, -0.0003986358642578125, -0.04255867004394531, -2.09808349609375e-05, -0.002401113510131836, 0.0, -0.008629798889160156, -0.00104522705078125, -0.0012912750244140625, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -7.28367522242479e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -0.000408172607421875, -3.0517578125e-05, -0.0001926422119140625, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -0.0018911361694335938, -1.52587890625e-05, -0.002888202667236328, -1.9073486328125e-06, -0.0001773834228515625, -1.9073486328125e-06, -4.9591064453125e-05, -0.302886962890625, -1.33514404296875e-05, -0.8672704696655273, -0.0003814697265625, -0.0060672760009765625, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.01111602783203125, 0.0, -0.02886068820953369, 0.0, -0.006724836304783821, 0.0, -1.33514404296875e-05], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Explosion", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 213, 8, 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 109]}, {"inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n", "score": -8.759898781278139, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneExplosion", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Explosion"}, {"_type": "Template12"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -0.000347137451171875, -8.7738037109375e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -2.861022494471399e-06, -6.318072337307967e-06, -1.33514404296875e-05, -3.0517578125e-05, -0.0004825592041015625, -9.5367431640625e-06, 0.0, -1.5854835510253906e-05, 0.0, -0.0002765655517578125, -9.5367431640625e-06, -3.814697265625e-05, -0.0003147125244140625, 0.0, -7.2479248046875e-05, -0.0030612945556640625, -9.918212890625e-05, -2.288818359375e-05, -1.52587890625e-05, -3.0040289857424796e-05, -2.837179636117071e-05, -6.794917680963408e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, 0.0, -7.05718994140625e-05, 0.0, -0.00013172626495361328, 0.0, -5.14984130859375e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -0.0001773834228515625, 0.0, -0.000225067138671875, 0.0, -1.9073486328125e-06, 0.0, -0.0001087188720703125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006418228149414062, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.000293731689453125, -1.9073486328125e-06, -8.1118803024292, -0.4863615036010742, -0.15484046936035156], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Explosion", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Explosion", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 108, 109]}, {"inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__.damage(player.effective_spell_damage(1), self)\n", "score": -9.82726281132011, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneExplosion", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template4"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}, {"_type": "Template13_stmt_seq"}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -0.000347137451171875, -8.7738037109375e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -2.861022494471399e-06, -6.318072337307967e-06, -1.33514404296875e-05, -3.0517578125e-05, -0.0004825592041015625, -9.5367431640625e-06, 0.0, -1.5854835510253906e-05, 0.0, -0.0002765655517578125, -9.5367431640625e-06, -3.814697265625e-05, -0.0003147125244140625, 0.0, -7.2479248046875e-05, -5.806221961975098, -3.814697265625e-05, -3.772449493408203, -0.027192525565624237, -5.9723832237068564e-05, -0.012470245361328125, -0.0023336410522460938, -0.0030002593994140625, -0.0009613037109375, -1.9073486328125e-06, -0.0001430511474609375, -0.0006024837493896484, 0.0, -2.09808349609375e-05, -0.010408401489257812, -0.0001697540283203125, -0.18943023681640625, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Explosion", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 15, 116, 50, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 109, 109]}, {"inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        minion.damage(player.effective_spell_damage(1), self)\n\n    def can_use(self, player, game):\n        super().use(player, game)\n", "score": -10.33155282025939, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneExplosion", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Template0"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -0.000347137451171875, -8.7738037109375e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -2.861022494471399e-06, -6.318072337307967e-06, -1.33514404296875e-05, -3.0517578125e-05, -0.0004825592041015625, -9.5367431640625e-06, 0.0, -1.5854835510253906e-05, 0.0, -0.0002765655517578125, -9.5367431640625e-06, -3.814697265625e-05, -0.0003147125244140625, 0.0, -7.2479248046875e-05, -5.806221961975098, -3.814697265625e-05, -0.0420989990234375, -0.028299884870648384, -5.841255187988281e-06, -0.012174606323242188, -0.0002613067626953125, -0.000888824462890625, -0.000110626220703125, -1.9073486328125e-06, -0.0001888275146484375, -0.0006324052810668945, 0.0, -2.47955322265625e-05, -0.0070934295654296875, -0.0001354217529296875, -1.210611343383789, -0.00275421142578125, -0.04472923278808594, -0.004863739013671875, -0.0002803802490234375, -0.0001506805419921875, -0.0016298294067382812, -0.0001373291015625, -0.00046539306640625, -5.7220458984375e-06, -7.069110870361328e-05, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -0.0012580156326293945, -1.1563301086425781e-05, -0.036457061767578125, -2.9788455963134766, -0.14931583404541016], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Explosion", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 108, 109]}, {"inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        minion.die(self)\n", "score": -11.626905440113774, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneExplosion", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}]}, {"_type": "Template13_stmt_seq"}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -0.000347137451171875, -8.7738037109375e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -2.861022494471399e-06, -6.318072337307967e-06, -1.33514404296875e-05, -3.0517578125e-05, -0.0004825592041015625, -9.5367431640625e-06, 0.0, -1.5854835510253906e-05, 0.0, -0.0002765655517578125, -9.5367431640625e-06, -3.814697265625e-05, -0.0003147125244140625, 0.0, -7.2479248046875e-05, -5.806221961975098, -3.814697265625e-05, -0.0420989990234375, -4.174201488494873, -6.13916345173493e-05, -0.014314651489257812, -0.15473461151123047, -1.430450439453125, -0.0030269622802734375], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Explosion", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 15, 116, 41, "die", "<EOS>", 216, 74, 109, 109]}, {"inferred_code": "", "score": -16.901901245117188, "model_output": {"_type": "Module", "body": []}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -16.901880264282227], "choice_history": [93, 145, 228]}], "index": 3}
{"beams": [{"inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n", "score": -0.6178569721290046, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneIntellect", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template16"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"id": "c", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Template31"}, {"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-05, -5.7220458984375e-06, -7.2479248046875e-05, -4.76837158203125e-05, -1.311301275563892e-06, -4.649158654501662e-06, -1.680836794548668e-05, -1.52587890625e-05, -2.288818359375e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -0.0018912553787231445, 0.0, -5.7220458984375e-06, -3.814697265625e-05, -1.33514404296875e-05, -0.0001201629638671875, -1.9073486328125e-06, -0.000125885009765625, -3.0517578125e-05, -0.002838134765625, -1.9073486328125e-06, -1.52587890625e-05, -7.259582343976945e-05, -2.3007385607343167e-05, -2.861022494471399e-06, -1.71661376953125e-05, -0.000263214111328125, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.9591064453125e-05, -3.814697265625e-06, -0.00016772744129411876, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -0.00013363361358642578, 0.0, -0.00016236305236816406, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0012140274047851562, -0.0002593994140625, -1.52587890625e-05, 0.0, -0.00011456012725830078, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.5735626220703125e-05, -5.960462772236497e-07, -0.553746223449707, -8.96453857421875e-05, -0.013181686401367188, -0.000148773193359375, -0.004180908203125, -2.288818359375e-05, -0.010121703147888184, -3.814697265625e-06, -0.017042160034179688, -6.4849853515625e-05, -6.866455078125e-05, -5.7220458984375e-06, -0.0015928701031953096, -1.71661376953125e-05, -2.288818359375e-05, -0.0001201629638671875, -0.008174896240234375, -9.1552734375e-05, -7.05718994140625e-05, -3.814697265625e-05, -1.52587890625e-05, -0.0002613067626953125, -3.814697265625e-06, 0.0, -0.000415802001953125, -0.0001817941665649414, -1.9073486328125e-06, -0.0001087188720703125], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Intellect", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Intellect", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 23, 146, "c", "<EOS>", 18, 123, 23, 146, "range", "<EOS>", 217, 83, 69, 229, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.cards.<UNK>()\n        player.draw()\n        player.draw()\n", "score": -4.809801095087373, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneIntellect", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template16"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "Call"}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-05, -5.7220458984375e-06, -7.2479248046875e-05, -4.76837158203125e-05, -1.311301275563892e-06, -4.649158654501662e-06, -1.680836794548668e-05, -1.52587890625e-05, -2.288818359375e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -0.0018912553787231445, 0.0, -5.7220458984375e-06, -3.814697265625e-05, -1.33514404296875e-05, -0.0001201629638671875, -1.9073486328125e-06, -0.000125885009765625, -3.0517578125e-05, -0.002838134765625, -1.9073486328125e-06, -1.52587890625e-05, -7.259582343976945e-05, -2.3007385607343167e-05, -2.861022494471399e-06, -1.71661376953125e-05, -0.000263214111328125, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.9591064453125e-05, -3.814697265625e-06, -0.00016772744129411876, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -0.00013363361358642578, 0.0, -0.00016236305236816406, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0012140274047851562, -0.0002593994140625, -1.52587890625e-05, 0.0, -0.00011456012725830078, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.5735626220703125e-05, -5.960462772236497e-07, -0.9227180480957031, -0.003143310546875, -0.002841949462890625, -0.0002040863037109375, -0.0001316070556640625, -0.0022296905517578125, -0.000701904296875, -0.41353511810302734, -5.602679812000133e-05, -0.13414573669433594, -0.09384822845458984, -4.57763671875e-05, 0.0, -0.004894256591796875, 0.0, -0.03314781188964844, -3.814697265625e-06, -0.0003968473756685853, -1.9073486328125e-06, -0.06899571418762207, -1.1920928244535389e-07, -0.9193236827850342, -0.002733347937464714, -0.016469955444335938, -9.5367431640625e-06, -1.1444091796875e-05, -0.198455810546875, -2.09808349609375e-05, 0.0, -1.9127225875854492, -0.00014698505401611328, -1.9073486328125e-06, -0.000164031982421875, -1.9073486328125e-06, -7.62939453125e-06, -0.01052093505859375, -1.9073486328125e-06, 0.0, -0.059996604919433594, -5.14984130859375e-05, -1.9073486328125e-06, -5.340576171875e-05], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Intellect", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Intellect", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 18, 121, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "<UNK>", "<EOS>", 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.cards.<UNK>()\n        <UNK>.check_delayed()\n        player.draw()\n", "score": -5.302294962961518, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneIntellect", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template16"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "Call"}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "check_delayed", "_type": "Attribute", "value": {"id": "<UNK>", "_type": "Name"}}, "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-05, -5.7220458984375e-06, -7.2479248046875e-05, -4.76837158203125e-05, -1.311301275563892e-06, -4.649158654501662e-06, -1.680836794548668e-05, -1.52587890625e-05, -2.288818359375e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -0.0018912553787231445, 0.0, -5.7220458984375e-06, -3.814697265625e-05, -1.33514404296875e-05, -0.0001201629638671875, -1.9073486328125e-06, -0.000125885009765625, -3.0517578125e-05, -0.002838134765625, -1.9073486328125e-06, -1.52587890625e-05, -7.259582343976945e-05, -2.3007385607343167e-05, -2.861022494471399e-06, -1.71661376953125e-05, -0.000263214111328125, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.9591064453125e-05, -3.814697265625e-06, -0.00016772744129411876, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -0.00013363361358642578, 0.0, -0.00016236305236816406, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0012140274047851562, -0.0002593994140625, -1.52587890625e-05, 0.0, -0.00011456012725830078, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.5735626220703125e-05, -5.960462772236497e-07, -0.9227180480957031, -0.003143310546875, -0.002841949462890625, -0.0002040863037109375, -0.0001316070556640625, -0.0022296905517578125, -0.000701904296875, -0.41353511810302734, -5.602679812000133e-05, -0.13414573669433594, -0.09384822845458984, -4.57763671875e-05, 0.0, -0.004894256591796875, 0.0, -0.03314781188964844, -3.814697265625e-06, -0.0003968473756685853, -1.9073486328125e-06, -0.06899571418762207, -1.1920928244535389e-07, -0.9193236827850342, -0.002733347937464714, -0.016469955444335938, -9.5367431640625e-06, -1.1444091796875e-05, -0.198455810546875, -2.09808349609375e-05, 0.0, -0.1858997344970703, -1.1444091796875e-05, -1.4392261505126953, 0.0, -0.7140686511993408, -1.33514404296875e-05, -0.019086837768554688, 0.0, -5.7220458984375e-06, -0.06566429138183594, -5.7220458984375e-06, 0.0, -0.05204963684082031, -9.739398956298828e-05, -1.9073486328125e-06, -3.4332275390625e-05], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Intellect", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Intellect", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 18, 121, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "<UNK>", "<EOS>", 102, 128, 18, 121, 15, 116, 23, 146, "<UNK>", "<EOS>", "check_delayed", "<EOS>", 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.cards.minions()\n        <UNK>.<UNK>()\n        player.draw()\n", "score": -5.347990269683855, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneIntellect", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template16"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "Call"}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "<UNK>", "_type": "Name"}}, "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-05, -5.7220458984375e-06, -7.2479248046875e-05, -4.76837158203125e-05, -1.311301275563892e-06, -4.649158654501662e-06, -1.680836794548668e-05, -1.52587890625e-05, -2.288818359375e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -0.0018912553787231445, 0.0, -5.7220458984375e-06, -3.814697265625e-05, -1.33514404296875e-05, -0.0001201629638671875, -1.9073486328125e-06, -0.000125885009765625, -3.0517578125e-05, -0.002838134765625, -1.9073486328125e-06, -1.52587890625e-05, -7.259582343976945e-05, -2.3007385607343167e-05, -2.861022494471399e-06, -1.71661376953125e-05, -0.000263214111328125, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.9591064453125e-05, -3.814697265625e-06, -0.00016772744129411876, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -0.00013363361358642578, 0.0, -0.00016236305236816406, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0012140274047851562, -0.0002593994140625, -1.52587890625e-05, 0.0, -0.00011456012725830078, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.5735626220703125e-05, -5.960462772236497e-07, -0.9227180480957031, -0.003143310546875, -0.002841949462890625, -0.0002040863037109375, -0.0001316070556640625, -0.0022296905517578125, -0.000701904296875, -0.41353511810302734, -5.602679812000133e-05, -0.13414573669433594, -0.09384822845458984, -4.57763671875e-05, 0.0, -0.004894256591796875, 0.0, -0.03314781188964844, -3.814697265625e-06, -0.0003968473756685853, -1.9073486328125e-06, -0.06899571418762207, -1.1920928244535389e-07, -0.7131507396697998, -8.344639354618266e-06, -0.0003719329833984375, -1.33514404296875e-05, -3.62396240234375e-05, -0.3077259063720703, -0.000156402587890625, 0.0, -0.01525115966796875, -1.9073486328125e-06, -1.3538641929626465, 0.0, -0.8832778930664062, -1.9073486328125e-06, -0.00041961669921875, -1.9073486328125e-06, -7.62939453125e-06, -0.1263904571533203, -2.6702880859375e-05, 0.0, -0.25799560546875, -0.00011467933654785156, -1.9073486328125e-06, -6.67572021484375e-05], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Intellect", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Intellect", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 18, 121, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", 102, 128, 18, 121, 15, 116, 23, 146, "<UNK>", "<EOS>", "<UNK>", "<EOS>", 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        cards.append(game.current_player.minions)\n", "score": -6.032833303999638, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneIntellect", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template16"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "cards", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-05, -5.7220458984375e-06, -7.2479248046875e-05, -4.76837158203125e-05, -1.311301275563892e-06, -4.649158654501662e-06, -1.680836794548668e-05, -1.52587890625e-05, -2.288818359375e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -0.0018912553787231445, 0.0, -5.7220458984375e-06, -3.814697265625e-05, -1.33514404296875e-05, -0.0001201629638671875, -1.9073486328125e-06, -0.000125885009765625, -3.0517578125e-05, -0.002838134765625, -1.9073486328125e-06, -1.52587890625e-05, -7.259582343976945e-05, -2.3007385607343167e-05, -2.861022494471399e-06, -1.71661376953125e-05, -0.000263214111328125, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.9591064453125e-05, -3.814697265625e-06, -0.00016772744129411876, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -0.00013363361358642578, 0.0, -0.00016236305236816406, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0012140274047851562, -0.0002593994140625, -1.52587890625e-05, 0.0, -0.00011456012725830078, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.5735626220703125e-05, -5.960462772236497e-07, -3.9126787185668945, -6.29425048828125e-05, -0.2926597595214844, -1.1444091796875e-05, -0.000396728515625, -0.0023326873779296875, -2.86102294921875e-05, -0.6443819403648376, -8.344646857949556e-07, -0.0042057037353515625, -0.000614166259765625, -9.72747802734375e-05, 0.0, -7.05718994140625e-05, -2.86102294921875e-05, -0.0016150709707289934, -3.0517578125e-05, -0.0007497072219848633, 0.0, -0.0001735687255859375, -1.1444091796875e-05, 0.0, -4.76837158203125e-05, 0.0, -0.002960205078125, -5.7220458984375e-06, -0.0002938508987426758, 0.0, -0.015905380249023438, -2.3841855067985307e-07, -0.007075791712850332, -6.198883056640625e-06, -0.03313636779785156, -9.5367431640625e-06, -1.1444091796875e-05, -0.004077911376953125, -7.62939453125e-06, 0.0, -0.00539398193359375, 0.0, -0.24090242385864258, 0.0, -0.2305086851119995, 0.0, -0.0006389617919921875, -0.010179519653320312, 0.0, -0.060878753662109375, -1.9073486328125e-06, -0.007891654968261719, -7.62939453125e-06, -0.0020831823348999023, 0.0, -0.21631062030792236, -7.987022399902344e-06, -0.32624781131744385, -2.5033950805664062e-05, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Intellect", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Intellect", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "cards", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 109]}, {"inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.cards.minions()\n        cards.append(game.current_player.minions)\n        cards.append(game.current_player.minions)\n", "score": -6.549872483037966, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneIntellect", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template16"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "Call"}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "cards", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "cards", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-05, -5.7220458984375e-06, -7.2479248046875e-05, -4.76837158203125e-05, -1.311301275563892e-06, -4.649158654501662e-06, -1.680836794548668e-05, -1.52587890625e-05, -2.288818359375e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -0.0018912553787231445, 0.0, -5.7220458984375e-06, -3.814697265625e-05, -1.33514404296875e-05, -0.0001201629638671875, -1.9073486328125e-06, -0.000125885009765625, -3.0517578125e-05, -0.002838134765625, -1.9073486328125e-06, -1.52587890625e-05, -7.259582343976945e-05, -2.3007385607343167e-05, -2.861022494471399e-06, -1.71661376953125e-05, -0.000263214111328125, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.9591064453125e-05, -3.814697265625e-06, -0.00016772744129411876, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -0.00013363361358642578, 0.0, -0.00016236305236816406, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0012140274047851562, -0.0002593994140625, -1.52587890625e-05, 0.0, -0.00011456012725830078, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.5735626220703125e-05, -5.960462772236497e-07, -0.9227180480957031, -0.003143310546875, -0.002841949462890625, -0.0002040863037109375, -0.0001316070556640625, -0.0022296905517578125, -0.000701904296875, -0.41353511810302734, -5.602679812000133e-05, -0.13414573669433594, -0.09384822845458984, -4.57763671875e-05, 0.0, -0.004894256591796875, 0.0, -0.03314781188964844, -3.814697265625e-06, -0.0003968473756685853, -1.9073486328125e-06, -0.06899571418762207, -1.1920928244535389e-07, -0.7131507396697998, -8.344639354618266e-06, -0.0003719329833984375, -1.33514404296875e-05, -3.62396240234375e-05, -1.3337020874023438, -4.9591064453125e-05, 0.0, -0.0001926422119140625, 0.0, -0.2827596962451935, 0.0, -0.24232053756713867, 0.0, -0.0003871917724609375, -0.013105392456054688, 0.0, -0.04511070251464844, -1.9073486328125e-06, -0.006747245788574219, -9.5367431640625e-06, -0.00215303897857666, 0.0, -0.2022383213043213, -7.987022399902344e-06, -0.3692086637020111, -2.3126602172851562e-05, -0.1272258758544922, -7.62939453125e-06, -1.52587890625e-05, -0.39336585998535156, -3.4332275390625e-05, 0.0, -0.000278472900390625, 0.0, -0.26063498854637146, 0.0, -0.23524296283721924, 0.0, -0.000514984130859375, -0.015151023864746094, 0.0, -0.03416252136230469, -3.814697265625e-06, -0.009632110595703125, -1.1444091796875e-05, -0.0019279718399047852, 0.0, -0.20378422737121582, -7.987022399902344e-06, -0.3671407699584961, -2.3126602172851562e-05, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Intellect", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Intellect", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 18, 121, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "cards", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "cards", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 109]}, {"inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        cards = copy.copy(game.other_player.minions)\n        cards.append(game.current_player.minions)\n        cards.append(game.current_player.minions)\n", "score": -6.604125498770173, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneIntellect", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template16"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "cards", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "cards", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "cards", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-05, -5.7220458984375e-06, -7.2479248046875e-05, -4.76837158203125e-05, -1.311301275563892e-06, -4.649158654501662e-06, -1.680836794548668e-05, -1.52587890625e-05, -2.288818359375e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -0.0018912553787231445, 0.0, -5.7220458984375e-06, -3.814697265625e-05, -1.33514404296875e-05, -0.0001201629638671875, -1.9073486328125e-06, -0.000125885009765625, -3.0517578125e-05, -0.002838134765625, -1.9073486328125e-06, -1.52587890625e-05, -7.259582343976945e-05, -2.3007385607343167e-05, -2.861022494471399e-06, -1.71661376953125e-05, -0.000263214111328125, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.9591064453125e-05, -3.814697265625e-06, -0.00016772744129411876, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -0.00013363361358642578, 0.0, -0.00016236305236816406, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0012140274047851562, -0.0002593994140625, -1.52587890625e-05, 0.0, -0.00011456012725830078, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.5735626220703125e-05, -5.960462772236497e-07, -0.9227180480957031, -0.003143310546875, -0.002841949462890625, -0.0002040863037109375, -0.0001316070556640625, -0.0022296905517578125, -0.000701904296875, -1.6495914459228516, -9.536738616588991e-07, -0.09363651275634766, -0.6867780685424805, -9.34600830078125e-05, 0.0, -2.09808349609375e-05, -2.288818359375e-05, -0.005128009244799614, -1.1444091796875e-05, -0.0008260011672973633, 0.0, -0.0001010894775390625, -7.62939453125e-06, 0.0, -7.62939453125e-05, 0.0, -0.0012073516845703125, -3.814697265625e-06, -0.00024831295013427734, 0.0, -0.011185646057128906, -2.3841855067985307e-07, -0.010780561715364456, -6.198883056640625e-06, -4.00543212890625e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.018423080444335938, -6.67572021484375e-05, 0.0, -0.000209808349609375, 0.0, -0.5788331627845764, 0.0, -0.31144726276397705, 0.0, -0.0008068084716796875, -0.019931793212890625, 0.0, -0.054691314697265625, -1.9073486328125e-06, -0.008937835693359375, -9.5367431640625e-06, -0.002562999725341797, 0.0, -0.22335922718048096, -7.987022399902344e-06, -0.3307132422924042, -2.5033950805664062e-05, -0.11478996276855469, -7.62939453125e-06, -1.52587890625e-05, -0.37506961822509766, -3.62396240234375e-05, 0.0, -0.0002803802490234375, 0.0, -0.2925839424133301, 0.0, -0.2410517930984497, 0.0, -0.0005207061767578125, -0.015340805053710938, 0.0, -0.034503936767578125, -1.9073486328125e-06, -0.009942054748535156, -1.1444091796875e-05, -0.0019356012344360352, 0.0, -0.2045212984085083, -7.987022399902344e-06, -0.3636209964752197, -2.3126602172851562e-05, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Intellect", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Intellect", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "cards", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "cards", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "cards", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 109]}, {"inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        cards.append(game.current_player.minions)\n        cards.append(game.current_player.minions)\n", "score": -6.706471672723836, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneIntellect", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template16"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "cards", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "cards", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-05, -5.7220458984375e-06, -7.2479248046875e-05, -4.76837158203125e-05, -1.311301275563892e-06, -4.649158654501662e-06, -1.680836794548668e-05, -1.52587890625e-05, -2.288818359375e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -0.0018912553787231445, 0.0, -5.7220458984375e-06, -3.814697265625e-05, -1.33514404296875e-05, -0.0001201629638671875, -1.9073486328125e-06, -0.000125885009765625, -3.0517578125e-05, -0.002838134765625, -1.9073486328125e-06, -1.52587890625e-05, -7.259582343976945e-05, -2.3007385607343167e-05, -2.861022494471399e-06, -1.71661376953125e-05, -0.000263214111328125, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.9591064453125e-05, -3.814697265625e-06, -0.00016772744129411876, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -0.00013363361358642578, 0.0, -0.00016236305236816406, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0012140274047851562, -0.0002593994140625, -1.52587890625e-05, 0.0, -0.00011456012725830078, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.5735626220703125e-05, -5.960462772236497e-07, -0.9227180480957031, -0.003143310546875, -0.002841949462890625, -0.0002040863037109375, -0.0001316070556640625, -0.0022296905517578125, -0.000701904296875, -2.434011936187744, -3.576278118089249e-07, -0.0055217742919921875, -0.005808830261230469, -0.000179290771484375, 0.0, -1.33514404296875e-05, -2.288818359375e-05, -0.0019813678227365017, -2.47955322265625e-05, -0.0006963014602661133, 0.0, -0.00038909912109375, -9.5367431640625e-06, 0.0, -6.29425048828125e-05, 0.0, -0.0015201568603515625, -5.7220458984375e-06, -0.00026726722717285156, 0.0, -0.008815765380859375, -2.3841855067985307e-07, -0.0074408091604709625, -4.172325134277344e-06, -3.62396240234375e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.018402099609375, -6.4849853515625e-05, 0.0, -0.0002231597900390625, 0.0, -0.6797011494636536, 0.0, -0.3008230924606323, 0.0, -0.00080108642578125, -0.019614219665527344, 0.0, -0.05559349060058594, -1.9073486328125e-06, -0.009507179260253906, -9.5367431640625e-06, -0.0024971961975097656, 0.0, -0.22276031970977783, -7.987022399902344e-06, -0.32800015807151794, -2.5033950805664062e-05, -0.11477279663085938, -7.62939453125e-06, -1.52587890625e-05, -0.3765707015991211, -3.62396240234375e-05, 0.0, -0.0002803802490234375, 0.0, -0.29845282435417175, 0.0, -0.2412949800491333, 0.0, -0.0005207061767578125, -0.015344619750976562, 0.0, -0.034542083740234375, -1.9073486328125e-06, -0.009979248046875, -1.1444091796875e-05, -0.0019279718399047852, 0.0, -0.20462429523468018, -7.987022399902344e-06, -0.3631460666656494, -2.3126602172851562e-05, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Intellect", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Intellect", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "cards", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "cards", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 109]}, {"inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        cards = copy.copy(game.other_player.minions)\n        cards.append(game.other_player.hero)\n        cards.append(game.current_player.minions)\n", "score": -7.149834154484353, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneIntellect", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template16"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "cards", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "cards", "_type": "Name"}}, "args": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "cards", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-05, -5.7220458984375e-06, -7.2479248046875e-05, -4.76837158203125e-05, -1.311301275563892e-06, -4.649158654501662e-06, -1.680836794548668e-05, -1.52587890625e-05, -2.288818359375e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -0.0018912553787231445, 0.0, -5.7220458984375e-06, -3.814697265625e-05, -1.33514404296875e-05, -0.0001201629638671875, -1.9073486328125e-06, -0.000125885009765625, -3.0517578125e-05, -0.002838134765625, -1.9073486328125e-06, -1.52587890625e-05, -7.259582343976945e-05, -2.3007385607343167e-05, -2.861022494471399e-06, -1.71661376953125e-05, -0.000263214111328125, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.9591064453125e-05, -3.814697265625e-06, -0.00016772744129411876, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -0.00013363361358642578, 0.0, -0.00016236305236816406, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0012140274047851562, -0.0002593994140625, -1.52587890625e-05, 0.0, -0.00011456012725830078, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.5735626220703125e-05, -5.960462772236497e-07, -0.9227180480957031, -0.003143310546875, -0.002841949462890625, -0.0002040863037109375, -0.0001316070556640625, -0.0022296905517578125, -0.000701904296875, -1.6495914459228516, -9.536738616588991e-07, -0.09363651275634766, -0.6867780685424805, -9.34600830078125e-05, 0.0, -2.09808349609375e-05, -2.288818359375e-05, -0.005128009244799614, -1.1444091796875e-05, -0.0008260011672973633, 0.0, -0.0001010894775390625, -7.62939453125e-06, 0.0, -7.62939453125e-05, 0.0, -0.0012073516845703125, -3.814697265625e-06, -0.00024831295013427734, 0.0, -0.011185646057128906, -2.3841855067985307e-07, -0.010780561715364456, -6.198883056640625e-06, -4.00543212890625e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.018423080444335938, -6.67572021484375e-05, 0.0, -0.000209808349609375, 0.0, -0.5788331627845764, 0.0, -0.31144726276397705, 0.0, -0.0008068084716796875, -0.019931793212890625, 0.0, -0.054691314697265625, -1.9073486328125e-06, -0.008937835693359375, -9.5367431640625e-06, -0.002562999725341797, 0.0, -1.6292973756790161, -2.503394853192731e-06, -0.07248404622077942, -0.00020348966063465923, -0.08787155151367188, -3.814697265625e-06, -3.62396240234375e-05, -0.09449577331542969, -2.47955322265625e-05, 0.0, -0.0007228851318359375, -1.9073486328125e-06, -0.08509203791618347, 0.0, -0.13700604438781738, 0.0, -0.0006351470947265625, -0.011773109436035156, 0.0, -0.03459930419921875, -3.814697265625e-06, -0.008107185363769531, -1.1444091796875e-05, -0.0026874542236328125, 0.0, -0.1733715534210205, -1.0132789611816406e-05, -0.4156160056591034, -2.1219253540039062e-05, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Intellect", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Intellect", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "cards", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "cards", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "cards", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 109]}, {"inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        cards.append(game.other_player.hero)\n        cards.append(game.current_player.minions)\n", "score": -7.251522859389269, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneIntellect", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template16"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "cards", "_type": "Name"}}, "args": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "cards", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-05, -5.7220458984375e-06, -7.2479248046875e-05, -4.76837158203125e-05, -1.311301275563892e-06, -4.649158654501662e-06, -1.680836794548668e-05, -1.52587890625e-05, -2.288818359375e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -0.0018912553787231445, 0.0, -5.7220458984375e-06, -3.814697265625e-05, -1.33514404296875e-05, -0.0001201629638671875, -1.9073486328125e-06, -0.000125885009765625, -3.0517578125e-05, -0.002838134765625, -1.9073486328125e-06, -1.52587890625e-05, -7.259582343976945e-05, -2.3007385607343167e-05, -2.861022494471399e-06, -1.71661376953125e-05, -0.000263214111328125, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.9591064453125e-05, -3.814697265625e-06, -0.00016772744129411876, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -0.00013363361358642578, 0.0, -0.00016236305236816406, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0012140274047851562, -0.0002593994140625, -1.52587890625e-05, 0.0, -0.00011456012725830078, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.5735626220703125e-05, -5.960462772236497e-07, -0.9227180480957031, -0.003143310546875, -0.002841949462890625, -0.0002040863037109375, -0.0001316070556640625, -0.0022296905517578125, -0.000701904296875, -2.434011936187744, -3.576278118089249e-07, -0.0055217742919921875, -0.005808830261230469, -0.000179290771484375, 0.0, -1.33514404296875e-05, -2.288818359375e-05, -0.0019813678227365017, -2.47955322265625e-05, -0.0006963014602661133, 0.0, -0.00038909912109375, -9.5367431640625e-06, 0.0, -6.29425048828125e-05, 0.0, -0.0015201568603515625, -5.7220458984375e-06, -0.00026726722717285156, 0.0, -0.008815765380859375, -2.3841855067985307e-07, -0.0074408091604709625, -4.172325134277344e-06, -3.62396240234375e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.018402099609375, -6.4849853515625e-05, 0.0, -0.0002231597900390625, 0.0, -0.6797011494636536, 0.0, -0.3008230924606323, 0.0, -0.00080108642578125, -0.019614219665527344, 0.0, -0.05559349060058594, -1.9073486328125e-06, -0.009507179260253906, -9.5367431640625e-06, -0.0024971961975097656, 0.0, -1.6317988634109497, -2.503394853192731e-06, -0.07314631342887878, -0.00020456252968870103, -0.08820724487304688, -3.814697265625e-06, -3.4332275390625e-05, -0.09486770629882812, -2.47955322265625e-05, 0.0, -0.000720977783203125, -1.9073486328125e-06, -0.08485624194145203, 0.0, -0.13676047325134277, 0.0, -0.00063323974609375, -0.011760711669921875, 0.0, -0.03470611572265625, -3.814697265625e-06, -0.008106231689453125, -1.1444091796875e-05, -0.002685546875, 0.0, -0.17327523231506348, -1.0132789611816406e-05, -0.4155615270137787, -2.1219253540039062e-05, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Intellect", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Intellect", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "cards", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "cards", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 109]}, {"inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = copy.copy(game.other_player.minions)\n        cards.append(game.current_player.minions)\n        cards.append(game.current_player.minions)\n", "score": -7.26756468442386, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneIntellect", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template16"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "cards", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "cards", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-05, -5.7220458984375e-06, -7.2479248046875e-05, -4.76837158203125e-05, -1.311301275563892e-06, -4.649158654501662e-06, -1.680836794548668e-05, -1.52587890625e-05, -2.288818359375e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -0.0018912553787231445, 0.0, -5.7220458984375e-06, -3.814697265625e-05, -1.33514404296875e-05, -0.0001201629638671875, -1.9073486328125e-06, -0.000125885009765625, -3.0517578125e-05, -0.002838134765625, -1.9073486328125e-06, -1.52587890625e-05, -7.259582343976945e-05, -2.3007385607343167e-05, -2.861022494471399e-06, -1.71661376953125e-05, -0.000263214111328125, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.9591064453125e-05, -3.814697265625e-06, -0.00016772744129411876, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -0.00013363361358642578, 0.0, -0.00016236305236816406, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0012140274047851562, -0.0002593994140625, -1.52587890625e-05, 0.0, -0.00011456012725830078, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.5735626220703125e-05, -5.960462772236497e-07, -0.9227180480957031, -0.003143310546875, -0.002841949462890625, -0.0002040863037109375, -0.0001316070556640625, -0.0022296905517578125, -0.000701904296875, -0.41353511810302734, -5.602679812000133e-05, -0.13414573669433594, -2.50852108001709, -7.43865966796875e-05, 0.0, -6.866455078125e-05, -1.52587890625e-05, -0.015370476990938187, -5.7220458984375e-06, -0.0009139776229858398, 0.0, -5.340576171875e-05, -7.62939453125e-06, 0.0, -3.814697265625e-05, 0.0, -0.001941680908203125, -3.814697265625e-06, -0.00042569637298583984, 0.0, -0.009548187255859375, -3.576278118089249e-07, -0.0111228683963418, -6.318092346191406e-06, -3.814697265625e-05, -5.7220458984375e-06, -2.47955322265625e-05, -0.019922256469726562, -6.67572021484375e-05, 0.0, -0.0002269744873046875, 0.0, -0.6113452911376953, 0.0, -0.3047398328781128, 0.0, -0.0008144378662109375, -0.019438743591308594, 0.0, -0.05431365966796875, -1.9073486328125e-06, -0.009189605712890625, -9.5367431640625e-06, -0.0025467872619628906, 0.0, -0.2208329439163208, -7.987022399902344e-06, -0.32975301146507263, -2.5033950805664062e-05, -0.11525344848632812, -7.62939453125e-06, -1.52587890625e-05, -0.37697315216064453, -3.62396240234375e-05, 0.0, -0.000278472900390625, 0.0, -0.29408207535743713, 0.0, -0.24133789539337158, 0.0, -0.0005207061767578125, -0.015336990356445312, 0.0, -0.03447914123535156, -1.9073486328125e-06, -0.009935379028320312, -1.1444091796875e-05, -0.0019336938858032227, 0.0, -0.20452606678009033, -7.987022399902344e-06, -0.36360859870910645, -2.3126602172851562e-05, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Intellect", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Intellect", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "cards", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "cards", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 109]}, {"inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.cards.minions()\n        cards.append(game.current_player.minions)\n        cards.append(game.current_player.hero)\n", "score": -7.44847627947302, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneIntellect", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template16"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "Call"}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "cards", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "cards", "_type": "Name"}}, "args": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-05, -5.7220458984375e-06, -7.2479248046875e-05, -4.76837158203125e-05, -1.311301275563892e-06, -4.649158654501662e-06, -1.680836794548668e-05, -1.52587890625e-05, -2.288818359375e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -0.0018912553787231445, 0.0, -5.7220458984375e-06, -3.814697265625e-05, -1.33514404296875e-05, -0.0001201629638671875, -1.9073486328125e-06, -0.000125885009765625, -3.0517578125e-05, -0.002838134765625, -1.9073486328125e-06, -1.52587890625e-05, -7.259582343976945e-05, -2.3007385607343167e-05, -2.861022494471399e-06, -1.71661376953125e-05, -0.000263214111328125, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.9591064453125e-05, -3.814697265625e-06, -0.00016772744129411876, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -0.00013363361358642578, 0.0, -0.00016236305236816406, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0012140274047851562, -0.0002593994140625, -1.52587890625e-05, 0.0, -0.00011456012725830078, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.5735626220703125e-05, -5.960462772236497e-07, -0.9227180480957031, -0.003143310546875, -0.002841949462890625, -0.0002040863037109375, -0.0001316070556640625, -0.0022296905517578125, -0.000701904296875, -0.41353511810302734, -5.602679812000133e-05, -0.13414573669433594, -0.09384822845458984, -4.57763671875e-05, 0.0, -0.004894256591796875, 0.0, -0.03314781188964844, -3.814697265625e-06, -0.0003968473756685853, -1.9073486328125e-06, -0.06899571418762207, -1.1920928244535389e-07, -0.7131507396697998, -8.344639354618266e-06, -0.0003719329833984375, -1.33514404296875e-05, -3.62396240234375e-05, -1.3337020874023438, -4.9591064453125e-05, 0.0, -0.0001926422119140625, 0.0, -0.2827596962451935, 0.0, -0.24232053756713867, 0.0, -0.0003871917724609375, -0.013105392456054688, 0.0, -0.04511070251464844, -1.9073486328125e-06, -0.006747245788574219, -9.5367431640625e-06, -0.00215303897857666, 0.0, -0.2022383213043213, -7.987022399902344e-06, -0.3692086637020111, -2.3126602172851562e-05, -0.1272258758544922, -7.62939453125e-06, -1.52587890625e-05, -0.39336585998535156, -3.4332275390625e-05, 0.0, -0.000278472900390625, 0.0, -0.26063498854637146, 0.0, -0.23524296283721924, 0.0, -0.000514984130859375, -0.015151023864746094, 0.0, -0.03416252136230469, -3.814697265625e-06, -0.009632110595703125, -1.1444091796875e-05, -0.0019279718399047852, 0.0, -0.20378422737121582, -7.987022399902344e-06, -1.2648897171020508, -0.0008817905909381807, 0.0], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Intellect", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Intellect", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 18, 121, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "cards", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "cards", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "hero", "<EOS>", 109]}, {"inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.cards.minions()\n        cards.append(game.current_player.minions)\n        cards.append(game.other_player.hero)\n", "score": -7.758995617185342, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneIntellect", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template16"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "Call"}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "cards", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "cards", "_type": "Name"}}, "args": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-05, -5.7220458984375e-06, -7.2479248046875e-05, -4.76837158203125e-05, -1.311301275563892e-06, -4.649158654501662e-06, -1.680836794548668e-05, -1.52587890625e-05, -2.288818359375e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -0.0018912553787231445, 0.0, -5.7220458984375e-06, -3.814697265625e-05, -1.33514404296875e-05, -0.0001201629638671875, -1.9073486328125e-06, -0.000125885009765625, -3.0517578125e-05, -0.002838134765625, -1.9073486328125e-06, -1.52587890625e-05, -7.259582343976945e-05, -2.3007385607343167e-05, -2.861022494471399e-06, -1.71661376953125e-05, -0.000263214111328125, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.9591064453125e-05, -3.814697265625e-06, -0.00016772744129411876, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -0.00013363361358642578, 0.0, -0.00016236305236816406, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0012140274047851562, -0.0002593994140625, -1.52587890625e-05, 0.0, -0.00011456012725830078, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.5735626220703125e-05, -5.960462772236497e-07, -0.9227180480957031, -0.003143310546875, -0.002841949462890625, -0.0002040863037109375, -0.0001316070556640625, -0.0022296905517578125, -0.000701904296875, -0.41353511810302734, -5.602679812000133e-05, -0.13414573669433594, -0.09384822845458984, -4.57763671875e-05, 0.0, -0.004894256591796875, 0.0, -0.03314781188964844, -3.814697265625e-06, -0.0003968473756685853, -1.9073486328125e-06, -0.06899571418762207, -1.1920928244535389e-07, -0.7131507396697998, -8.344639354618266e-06, -0.0003719329833984375, -1.33514404296875e-05, -3.62396240234375e-05, -1.3337020874023438, -4.9591064453125e-05, 0.0, -0.0001926422119140625, 0.0, -0.2827596962451935, 0.0, -0.24232053756713867, 0.0, -0.0003871917724609375, -0.013105392456054688, 0.0, -0.04511070251464844, -1.9073486328125e-06, -0.006747245788574219, -9.5367431640625e-06, -0.00215303897857666, 0.0, -0.2022383213043213, -7.987022399902344e-06, -0.3692086637020111, -2.3126602172851562e-05, -0.1272258758544922, -7.62939453125e-06, -1.52587890625e-05, -0.39336585998535156, -3.4332275390625e-05, 0.0, -0.000278472900390625, 0.0, -0.26063498854637146, 0.0, -0.23524296283721924, 0.0, -0.000514984130859375, -0.015151023864746094, 0.0, -0.03416252136230469, -3.814697265625e-06, -0.009632110595703125, -1.1444091796875e-05, -0.0019279718399047852, 0.0, -1.71413254737854, -4.5299530029296875e-06, -0.06574654579162598, -0.00019943667575716972, 0.0], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Intellect", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Intellect", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 18, 121, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "cards", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "cards", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 109]}, {"inferred_code": "", "score": -20.694969177246094, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, -1.9073486328125e-05, -20.694950103759766], "choice_history": [93, 145, 228]}, {"inferred_code": "super().use(player, game)\n", "score": -21.279861450195312, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-05, -5.7220458984375e-06, -14.356972694396973, -6.922863960266113], "choice_history": [93, 145, 230, 108, 109]}], "index": 4}
{"beams": [{"inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n", "score": -0.14415882425242188, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneMissiles", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template14"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "targets", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "target", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "args": [{"_type": "Template14"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Template31"}, {"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.00012969970703125, -6.29425048828125e-05, -1.0728830375228426e-06, -4.29153169534402e-06, -3.933898824470816e-06, -1.71661376953125e-05, -9.34600830078125e-05, -0.000244140625, -1.9073486328125e-06, 0.0, -6.186960672494024e-05, -3.814697265625e-06, -0.00012969970703125, -1.9073486328125e-06, -1.1444091796875e-05, -6.67572021484375e-05, 0.0, -0.0007381439208984375, -9.5367431640625e-06, -0.001529693603515625, -3.0517578125e-05, -1.52587890625e-05, -2.4199192921514623e-05, -2.8252596166566946e-05, -3.3378591979271732e-06, -3.814697265625e-06, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.00019645682186819613, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.340576171875e-05, 0.0, -0.00014138221740722656, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.00022125244140625, 0.0, -0.00018310546875, 0.0, -0.0001583099365234375, -1.9073486328125e-06, 0.0, 0.0, -1.5497207641601562e-05, 0.0, 0.0, -3.814697265625e-06, -0.00011146068572998047, -2.109982233378105e-05, -0.0034923553466796875, -0.0005092620849609375, -0.001850128173828125, -6.103515625e-05, -0.0006160736083984375, -1.52587890625e-05, -0.004432163201272488, -4.076957702636719e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.00011444091796875, -3.0517578125e-05, -0.0002673827111721039, -6.0796710386057384e-06, -0.0001068115234375, -0.015045166015625, -0.0001926422119140625, -4.1961669921875e-05, -0.0027370452880859375, -6.29425048828125e-05, -0.0030536651611328125, -0.00026929378509521484, 0.0, -0.0002346038818359375, -0.000946044921875, -0.0024309158325195312, -0.0011043548583984375, -5.7220458984375e-06, -7.05718994140625e-05, -0.0001354217529296875, -2.09808349609375e-05, -0.0008183701429516077, -1.1920928244535389e-07, -1.52587890625e-05, -7.62939453125e-06, -0.0004138946533203125, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0005366802215576172, 0.0, -0.00042057037353515625, 0.0, -5.53131103515625e-05, -3.814697265625e-05, 0.0, -0.000377655029296875, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.002258896827697754, 0.0, -0.00042176246643066406, 0.0, -0.001083349110558629, -5.006785613659304e-06, -1.52587890625e-05, -0.000202178955078125, -0.0001087188720703125, -1.33514404296875e-05, -8.58306884765625e-05, 0.0, -0.001369476318359375, 0.0, -0.0019800749141722918, -2.861018856492592e-06, -0.03906781226396561, 0.0, -0.0001392364501953125, -0.000255584716796875, 0.0, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -6.365776062011719e-05, 0.0, -0.004287838935852051, -2.3841855067985307e-07, -0.015482418239116669, -9.775130820344202e-06, -0.001148223876953125, -4.9591064453125e-05, -4.38690185546875e-05, -0.0004978179931640625, -1.1444091796875e-05, -0.003914952278137207, -7.152555099310121e-07, -0.0003032684326171875, -1.1444091796875e-05, -0.000141143798828125, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0004132986068725586, 0.0, -0.0011372566223144531, 0.0, -2.47955322265625e-05, -0.000797271728515625, -0.0001811981201171875, -0.0013087642146274447, -2.3841855067985307e-07, -3.62396240234375e-05, -3.0517578125e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.0517578125e-05, 0.0, -9.918212890625e-05, 0.0, -0.008457510732114315, -0.001503421226516366, -0.003264046972617507, 0.0, -0.0004367828369140625, -0.008218765258789062, -4.38690185546875e-05, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Missiles", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Missiles", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 23, 146, "i", "<EOS>", 18, 123, 23, 146, "range", "<EOS>", 217, 83, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 232, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 98, 115, 216, 63, 146, "target", "<EOS>", 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "targets", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "target", "<EOS>", "damage", "<EOS>", 217, 70, 74, 109]}, {"inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.extend(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n", "score": -3.7312602886340898, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneMissiles", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template14"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "extend", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "targets", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "target", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "args": [{"_type": "Template14"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Template31"}, {"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.00012969970703125, -6.29425048828125e-05, -1.0728830375228426e-06, -4.29153169534402e-06, -3.933898824470816e-06, -1.71661376953125e-05, -9.34600830078125e-05, -0.000244140625, -1.9073486328125e-06, 0.0, -6.186960672494024e-05, -3.814697265625e-06, -0.00012969970703125, -1.9073486328125e-06, -1.1444091796875e-05, -6.67572021484375e-05, 0.0, -0.0007381439208984375, -9.5367431640625e-06, -0.001529693603515625, -3.0517578125e-05, -1.52587890625e-05, -2.4199192921514623e-05, -2.8252596166566946e-05, -3.3378591979271732e-06, -3.814697265625e-06, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.00019645682186819613, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.340576171875e-05, 0.0, -0.00014138221740722656, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.00022125244140625, 0.0, -0.00018310546875, 0.0, -0.0001583099365234375, -1.9073486328125e-06, 0.0, 0.0, -1.5497207641601562e-05, 0.0, 0.0, -3.814697265625e-06, -0.00011146068572998047, -2.109982233378105e-05, -0.0034923553466796875, -0.0005092620849609375, -0.001850128173828125, -6.103515625e-05, -0.0006160736083984375, -1.52587890625e-05, -0.004432163201272488, -4.076957702636719e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.00011444091796875, -3.0517578125e-05, -0.0002673827111721039, -6.0796710386057384e-06, -0.0001068115234375, -0.015045166015625, -0.0001926422119140625, -4.1961669921875e-05, -0.0027370452880859375, -6.29425048828125e-05, -0.0030536651611328125, -0.00026929378509521484, 0.0, -0.0002346038818359375, -0.000946044921875, -0.0024309158325195312, -0.0011043548583984375, -5.7220458984375e-06, -7.05718994140625e-05, -0.0001354217529296875, -2.09808349609375e-05, -0.0008183701429516077, -1.1920928244535389e-07, -1.52587890625e-05, -7.62939453125e-06, -0.0004138946533203125, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0005366802215576172, 0.0, -0.00042057037353515625, 0.0, -5.53131103515625e-05, -3.814697265625e-05, 0.0, -0.000377655029296875, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.002258896827697754, 0.0, -0.00042176246643066406, 0.0, -0.001083349110558629, -5.006785613659304e-06, -1.52587890625e-05, -0.000202178955078125, -0.0001087188720703125, -1.33514404296875e-05, -8.58306884765625e-05, 0.0, -0.001369476318359375, 0.0, -0.0019800749141722918, -2.861018856492592e-06, -3.386765956878662, -1.1920928244535389e-07, -1.33514404296875e-05, -8.96453857421875e-05, 0.0, -0.0015869140625, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -7.60553521104157e-05, 0.0, -0.0815126895904541, -3.576278118089249e-07, -0.1742716282606125, -2.3484071789425798e-05, -0.001300811767578125, -4.1961669921875e-05, -4.38690185546875e-05, -0.00026702880859375, -9.5367431640625e-06, -0.0028743743896484375, -7.152555099310121e-07, -0.0001811981201171875, -9.5367431640625e-06, -0.000133514404296875, 0.0, -1.1444091796875e-05, 0.0, -0.00027096265694126487, 0.0, -0.0011243820190429688, 0.0, -2.47955322265625e-05, -0.0008945465087890625, -0.00016021728515625, -0.00392754003405571, -2.3841855067985307e-07, -4.57763671875e-05, -3.814697265625e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.0517578125e-05, 0.0, -0.000102996826171875, 0.0, -0.008660105988383293, -0.001427595503628254, -0.003304323647171259, 0.0, -0.000370025634765625, -0.008877754211425781, -4.57763671875e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Missiles", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Missiles", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 23, 146, "i", "<EOS>", 18, 123, 23, 146, "range", "<EOS>", 217, 83, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 232, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "extend", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 98, 115, 216, 63, 146, "target", "<EOS>", 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "targets", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "target", "<EOS>", "damage", "<EOS>", 217, 70, 74, 109]}, {"inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n", "score": -5.303115027845699, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneMissiles", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template14"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "targets", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "target", "_type": "Name"}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Template31"}, {"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.00012969970703125, -6.29425048828125e-05, -1.0728830375228426e-06, -4.29153169534402e-06, -3.933898824470816e-06, -1.71661376953125e-05, -9.34600830078125e-05, -0.000244140625, -1.9073486328125e-06, 0.0, -6.186960672494024e-05, -3.814697265625e-06, -0.00012969970703125, -1.9073486328125e-06, -1.1444091796875e-05, -6.67572021484375e-05, 0.0, -0.0007381439208984375, -9.5367431640625e-06, -0.001529693603515625, -3.0517578125e-05, -1.52587890625e-05, -2.4199192921514623e-05, -2.8252596166566946e-05, -3.3378591979271732e-06, -3.814697265625e-06, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.00019645682186819613, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.340576171875e-05, 0.0, -0.00014138221740722656, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.00022125244140625, 0.0, -0.00018310546875, 0.0, -0.0001583099365234375, -1.9073486328125e-06, 0.0, 0.0, -1.5497207641601562e-05, 0.0, 0.0, -3.814697265625e-06, -0.00011146068572998047, -2.109982233378105e-05, -0.0034923553466796875, -0.0005092620849609375, -0.001850128173828125, -6.103515625e-05, -0.0006160736083984375, -1.52587890625e-05, -0.004432163201272488, -4.076957702636719e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.00011444091796875, -3.0517578125e-05, -0.0002673827111721039, -6.0796710386057384e-06, -0.0001068115234375, -0.015045166015625, -0.0001926422119140625, -4.1961669921875e-05, -0.0027370452880859375, -6.29425048828125e-05, -0.0030536651611328125, -0.00026929378509521484, 0.0, -0.0002346038818359375, -0.000946044921875, -0.0024309158325195312, -0.0011043548583984375, -5.7220458984375e-06, -7.05718994140625e-05, -0.0001354217529296875, -2.09808349609375e-05, -0.0008183701429516077, -1.1920928244535389e-07, -1.52587890625e-05, -7.62939453125e-06, -0.0004138946533203125, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0005366802215576172, 0.0, -0.00042057037353515625, 0.0, -5.53131103515625e-05, -3.814697265625e-05, 0.0, -0.000377655029296875, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.002258896827697754, 0.0, -0.00042176246643066406, 0.0, -0.001083349110558629, -5.006785613659304e-06, -1.52587890625e-05, -0.000202178955078125, -0.0001087188720703125, -1.33514404296875e-05, -8.58306884765625e-05, 0.0, -0.001369476318359375, 0.0, -0.0019800749141722918, -2.861018856492592e-06, -0.03906781226396561, 0.0, -0.0001392364501953125, -0.000255584716796875, 0.0, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -6.365776062011719e-05, 0.0, -0.004287838935852051, -2.3841855067985307e-07, -5.132788181304932, -1.1920922133867862e-06, -8.58306884765625e-05, -0.00040435791015625, -0.0003261566162109375, -9.5367431640625e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0026397705078125, 0.0, -0.0025137504562735558, -2.7418097943154862e-06, -0.03355478122830391, 0.0, -0.0001201629638671875, -0.00017547607421875, 0.0, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -6.580351328011602e-05, 0.0, -0.0064237117767333984, -3.576278118089249e-07, -0.015413510613143444, -9.417505680175964e-06, -0.001216888427734375, -4.9591064453125e-05, -4.57763671875e-05, -0.00049591064453125, -1.1444091796875e-05, -0.003866434097290039, -7.152555099310121e-07, -0.0002918243408203125, -1.1444091796875e-05, -0.0001392364501953125, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0004010200500488281, 0.0, -0.0011391639709472656, 0.0, -2.47955322265625e-05, -0.0008068084716796875, -0.0001735687255859375, -0.001344134914688766, -2.3841855067985307e-07, -0.00196075439453125], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Missiles", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Missiles", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 23, 146, "i", "<EOS>", 18, 123, 23, 146, "range", "<EOS>", 217, 83, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 232, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 98, 115, 216, 63, 146, "target", "<EOS>", 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "targets", "<EOS>", 109]}, {"inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(player.effective_spell_damage(3), self)\n", "score": -5.3232135511844305, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneMissiles", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template14"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "targets", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "target", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Template31"}, {"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.00012969970703125, -6.29425048828125e-05, -1.0728830375228426e-06, -4.29153169534402e-06, -3.933898824470816e-06, -1.71661376953125e-05, -9.34600830078125e-05, -0.000244140625, -1.9073486328125e-06, 0.0, -6.186960672494024e-05, -3.814697265625e-06, -0.00012969970703125, -1.9073486328125e-06, -1.1444091796875e-05, -6.67572021484375e-05, 0.0, -0.0007381439208984375, -9.5367431640625e-06, -0.001529693603515625, -3.0517578125e-05, -1.52587890625e-05, -2.4199192921514623e-05, -2.8252596166566946e-05, -3.3378591979271732e-06, -3.814697265625e-06, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.00019645682186819613, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.340576171875e-05, 0.0, -0.00014138221740722656, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.00022125244140625, 0.0, -0.00018310546875, 0.0, -0.0001583099365234375, -1.9073486328125e-06, 0.0, 0.0, -1.5497207641601562e-05, 0.0, 0.0, -3.814697265625e-06, -0.00011146068572998047, -2.109982233378105e-05, -0.0034923553466796875, -0.0005092620849609375, -0.001850128173828125, -6.103515625e-05, -0.0006160736083984375, -1.52587890625e-05, -0.004432163201272488, -4.076957702636719e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.00011444091796875, -3.0517578125e-05, -0.0002673827111721039, -6.0796710386057384e-06, -0.0001068115234375, -0.015045166015625, -0.0001926422119140625, -4.1961669921875e-05, -0.0027370452880859375, -6.29425048828125e-05, -0.0030536651611328125, -0.00026929378509521484, 0.0, -0.0002346038818359375, -0.000946044921875, -0.0024309158325195312, -0.0011043548583984375, -5.7220458984375e-06, -7.05718994140625e-05, -0.0001354217529296875, -2.09808349609375e-05, -0.0008183701429516077, -1.1920928244535389e-07, -1.52587890625e-05, -7.62939453125e-06, -0.0004138946533203125, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0005366802215576172, 0.0, -0.00042057037353515625, 0.0, -5.53131103515625e-05, -3.814697265625e-05, 0.0, -0.000377655029296875, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.002258896827697754, 0.0, -0.00042176246643066406, 0.0, -0.001083349110558629, -5.006785613659304e-06, -1.52587890625e-05, -0.000202178955078125, -0.0001087188720703125, -1.33514404296875e-05, -8.58306884765625e-05, 0.0, -0.001369476318359375, 0.0, -0.0019800749141722918, -2.861018856492592e-06, -0.03906781226396561, 0.0, -0.0001392364501953125, -0.000255584716796875, 0.0, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -6.365776062011719e-05, 0.0, -0.004287838935852051, -2.3841855067985307e-07, -0.015482418239116669, -9.775130820344202e-06, -0.001148223876953125, -4.9591064453125e-05, -4.38690185546875e-05, -0.0004978179931640625, -1.1444091796875e-05, -0.003914952278137207, -7.152555099310121e-07, -0.0003032684326171875, -1.1444091796875e-05, -0.000141143798828125, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0004132986068725586, 0.0, -0.0011372566223144531, 0.0, -2.47955322265625e-05, -0.000797271728515625, -0.0001811981201171875, -0.0013087642146274447, -2.3841855067985307e-07, -3.62396240234375e-05, -3.0517578125e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.0517578125e-05, 0.0, -9.918212890625e-05, 0.0, -0.008457510732114315, -0.001503421226516366, -0.003264046972617507, 0.0, -0.0004367828369140625, -5.184006690979004, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -0.00029896674095653, -1.9073468138230965e-06, -4.38690185546875e-05, -0.002124786376953125, -0.0008029937744140625, 0.0], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Missiles", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Missiles", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 23, 146, "i", "<EOS>", 18, 123, 23, 146, "range", "<EOS>", 217, 83, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 232, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 98, 115, 216, 63, 146, "target", "<EOS>", 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "targets", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "target", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 109]}, {"inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.split)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n", "score": -5.431011109184304, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneMissiles", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template14"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "split", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "targets", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "target", "_type": "Name"}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Template31"}, {"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.00012969970703125, -6.29425048828125e-05, -1.0728830375228426e-06, -4.29153169534402e-06, -3.933898824470816e-06, -1.71661376953125e-05, -9.34600830078125e-05, -0.000244140625, -1.9073486328125e-06, 0.0, -6.186960672494024e-05, -3.814697265625e-06, -0.00012969970703125, -1.9073486328125e-06, -1.1444091796875e-05, -6.67572021484375e-05, 0.0, -0.0007381439208984375, -9.5367431640625e-06, -0.001529693603515625, -3.0517578125e-05, -1.52587890625e-05, -2.4199192921514623e-05, -2.8252596166566946e-05, -3.3378591979271732e-06, -3.814697265625e-06, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.00019645682186819613, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.340576171875e-05, 0.0, -0.00014138221740722656, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.00022125244140625, 0.0, -0.00018310546875, 0.0, -0.0001583099365234375, -1.9073486328125e-06, 0.0, 0.0, -1.5497207641601562e-05, 0.0, 0.0, -3.814697265625e-06, -0.00011146068572998047, -2.109982233378105e-05, -0.0034923553466796875, -0.0005092620849609375, -0.001850128173828125, -6.103515625e-05, -0.0006160736083984375, -1.52587890625e-05, -0.004432163201272488, -4.076957702636719e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.00011444091796875, -3.0517578125e-05, -0.0002673827111721039, -6.0796710386057384e-06, -0.0001068115234375, -0.015045166015625, -0.0001926422119140625, -4.1961669921875e-05, -0.0027370452880859375, -6.29425048828125e-05, -0.0030536651611328125, -0.00026929378509521484, 0.0, -0.0002346038818359375, -0.000946044921875, -0.0024309158325195312, -0.0011043548583984375, -5.7220458984375e-06, -7.05718994140625e-05, -0.0001354217529296875, -2.09808349609375e-05, -0.0008183701429516077, -1.1920928244535389e-07, -1.52587890625e-05, -7.62939453125e-06, -0.0004138946533203125, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0005366802215576172, 0.0, -0.00042057037353515625, 0.0, -5.53131103515625e-05, -3.814697265625e-05, 0.0, -0.000377655029296875, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.002258896827697754, 0.0, -0.00042176246643066406, 0.0, -0.001083349110558629, -5.006785613659304e-06, -1.52587890625e-05, -0.000202178955078125, -0.0001087188720703125, -1.33514404296875e-05, -8.58306884765625e-05, 0.0, -0.001369476318359375, 0.0, -0.0019800749141722918, -2.861018856492592e-06, -0.03906781226396561, 0.0, -0.0001392364501953125, -0.000255584716796875, 0.0, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -6.365776062011719e-05, 0.0, -0.004287838935852051, -2.3841855067985307e-07, -5.172795295715332, -2.622604142743512e-06, -0.08172607421875, -6.29425048828125e-05, -7.05718994140625e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.014345169067382812, 0.0, -0.01063075102865696, -3.4570634852570947e-06, -0.026304859668016434, 0.0, -4.38690185546875e-05, -8.58306884765625e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -7.200241088867188e-05, 0.0, -0.003481626510620117, -2.3841855067985307e-07, -0.012370551005005836, -6.318082796497038e-06, -0.00130462646484375, -5.340576171875e-05, -4.38690185546875e-05, -0.0003986358642578125, -1.1444091796875e-05, -0.004320263862609863, -7.152555099310121e-07, -0.0003032684326171875, -1.1444091796875e-05, -0.0001392364501953125, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0004360675811767578, 0.0, -0.0011620521545410156, 0.0, -2.47955322265625e-05, -0.0007953643798828125, -0.0001811981201171875, -0.0012610103003680706, -2.3841855067985307e-07, -0.001979827880859375], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Missiles", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Missiles", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 23, 146, "i", "<EOS>", 18, 123, 23, 146, "range", "<EOS>", 217, 83, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 232, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "split", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 98, 115, 216, 63, 146, "target", "<EOS>", 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "targets", "<EOS>", 109]}, {"inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            targets.append(game.other_player.hero)\n", "score": -5.788417591655197, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneMissiles", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template14"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "targets", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "target", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Template31"}, {"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.00012969970703125, -6.29425048828125e-05, -1.0728830375228426e-06, -4.29153169534402e-06, -3.933898824470816e-06, -1.71661376953125e-05, -9.34600830078125e-05, -0.000244140625, -1.9073486328125e-06, 0.0, -6.186960672494024e-05, -3.814697265625e-06, -0.00012969970703125, -1.9073486328125e-06, -1.1444091796875e-05, -6.67572021484375e-05, 0.0, -0.0007381439208984375, -9.5367431640625e-06, -0.001529693603515625, -3.0517578125e-05, -1.52587890625e-05, -2.4199192921514623e-05, -2.8252596166566946e-05, -3.3378591979271732e-06, -3.814697265625e-06, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.00019645682186819613, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.340576171875e-05, 0.0, -0.00014138221740722656, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.00022125244140625, 0.0, -0.00018310546875, 0.0, -0.0001583099365234375, -1.9073486328125e-06, 0.0, 0.0, -1.5497207641601562e-05, 0.0, 0.0, -3.814697265625e-06, -0.00011146068572998047, -2.109982233378105e-05, -0.0034923553466796875, -0.0005092620849609375, -0.001850128173828125, -6.103515625e-05, -0.0006160736083984375, -1.52587890625e-05, -0.004432163201272488, -4.076957702636719e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.00011444091796875, -3.0517578125e-05, -0.0002673827111721039, -6.0796710386057384e-06, -0.0001068115234375, -0.015045166015625, -0.0001926422119140625, -4.1961669921875e-05, -0.0027370452880859375, -6.29425048828125e-05, -0.0030536651611328125, -0.00026929378509521484, 0.0, -0.0002346038818359375, -0.000946044921875, -0.0024309158325195312, -0.0011043548583984375, -5.7220458984375e-06, -7.05718994140625e-05, -0.0001354217529296875, -2.09808349609375e-05, -0.0008183701429516077, -1.1920928244535389e-07, -1.52587890625e-05, -7.62939453125e-06, -0.0004138946533203125, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0005366802215576172, 0.0, -0.00042057037353515625, 0.0, -5.53131103515625e-05, -3.814697265625e-05, 0.0, -0.000377655029296875, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.002258896827697754, 0.0, -0.00042176246643066406, 0.0, -0.001083349110558629, -5.006785613659304e-06, -1.52587890625e-05, -0.000202178955078125, -0.0001087188720703125, -1.33514404296875e-05, -8.58306884765625e-05, 0.0, -0.001369476318359375, 0.0, -0.0019800749141722918, -2.861018856492592e-06, -0.03906781226396561, 0.0, -0.0001392364501953125, -0.000255584716796875, 0.0, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -6.365776062011719e-05, 0.0, -0.004287838935852051, -2.3841855067985307e-07, -0.015482418239116669, -9.775130820344202e-06, -0.001148223876953125, -4.9591064453125e-05, -4.38690185546875e-05, -0.0004978179931640625, -1.1444091796875e-05, -0.003914952278137207, -7.152555099310121e-07, -0.0003032684326171875, -1.1444091796875e-05, -0.000141143798828125, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0004132986068725586, 0.0, -0.0011372566223144531, 0.0, -2.47955322265625e-05, -0.000797271728515625, -0.0001811981201171875, -0.0013087642146274447, -2.3841855067985307e-07, -3.62396240234375e-05, -3.0517578125e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.0517578125e-05, 0.0, -9.918212890625e-05, 0.0, -5.1180419921875, -3.7788631743751466e-05, -0.5248638391494751, 0.0, -4.57763671875e-05, -0.0006103515625, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -9.89435357041657e-05, -1.1920928244535389e-07, -0.004778623580932617, -1.1920928244535389e-07, -0.017646482214331627, -5.722038622479886e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Missiles", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Missiles", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 23, 146, "i", "<EOS>", 18, 123, 23, 146, "range", "<EOS>", 217, 83, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 232, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 98, 115, 216, 63, 146, "target", "<EOS>", 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "targets", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 109]}, {"inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n", "score": -5.87503882018455, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneMissiles", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template14"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Template31"}, {"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.00012969970703125, -6.29425048828125e-05, -1.0728830375228426e-06, -4.29153169534402e-06, -3.933898824470816e-06, -1.71661376953125e-05, -9.34600830078125e-05, -0.000244140625, -1.9073486328125e-06, 0.0, -6.186960672494024e-05, -3.814697265625e-06, -0.00012969970703125, -1.9073486328125e-06, -1.1444091796875e-05, -6.67572021484375e-05, 0.0, -0.0007381439208984375, -9.5367431640625e-06, -0.001529693603515625, -3.0517578125e-05, -1.52587890625e-05, -2.4199192921514623e-05, -2.8252596166566946e-05, -3.3378591979271732e-06, -3.814697265625e-06, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.00019645682186819613, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.340576171875e-05, 0.0, -0.00014138221740722656, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.00022125244140625, 0.0, -0.00018310546875, 0.0, -0.0001583099365234375, -1.9073486328125e-06, 0.0, 0.0, -1.5497207641601562e-05, 0.0, 0.0, -3.814697265625e-06, -0.00011146068572998047, -2.109982233378105e-05, -0.0034923553466796875, -0.0005092620849609375, -0.001850128173828125, -6.103515625e-05, -0.0006160736083984375, -1.52587890625e-05, -0.004432163201272488, -4.076957702636719e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.00011444091796875, -3.0517578125e-05, -0.0002673827111721039, -6.0796710386057384e-06, -0.0001068115234375, -0.015045166015625, -0.0001926422119140625, -4.1961669921875e-05, -0.0027370452880859375, -6.29425048828125e-05, -0.0030536651611328125, -0.00026929378509521484, 0.0, -0.0002346038818359375, -0.000946044921875, -0.0024309158325195312, -0.0011043548583984375, -5.7220458984375e-06, -7.05718994140625e-05, -0.0001354217529296875, -2.09808349609375e-05, -0.0008183701429516077, -1.1920928244535389e-07, -1.52587890625e-05, -7.62939453125e-06, -0.0004138946533203125, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0005366802215576172, 0.0, -0.00042057037353515625, 0.0, -5.53131103515625e-05, -3.814697265625e-05, 0.0, -0.000377655029296875, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.002258896827697754, 0.0, -0.00042176246643066406, 0.0, -0.001083349110558629, -5.006785613659304e-06, -1.52587890625e-05, -0.000202178955078125, -0.0001087188720703125, -1.33514404296875e-05, -8.58306884765625e-05, 0.0, -0.001369476318359375, 0.0, -0.0019800749141722918, -2.861018856492592e-06, -0.03906781226396561, 0.0, -0.0001392364501953125, -0.000255584716796875, 0.0, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -6.365776062011719e-05, 0.0, -0.004287838935852051, -2.3841855067985307e-07, -0.015482418239116669, -9.775130820344202e-06, -0.001148223876953125, -4.9591064453125e-05, -4.38690185546875e-05, -0.0004978179931640625, -1.1444091796875e-05, -5.66956090927124, 0.0, -0.0003509521484375, -5.7220458984375e-06, -0.023546218872070312, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.001032829168252647, 0.0, -0.00043964385986328125, 0.0, -4.1961669921875e-05, -7.62939453125e-05, 0.0, -0.000278472900390625, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0011146068572998047, 0.0, -0.00036466121673583984, 0.0, -0.002811836078763008, -6.079665126890177e-06, -1.71661376953125e-05, -0.0002269744873046875, -0.0001201629638671875, -1.52587890625e-05, -8.0108642578125e-05, 0.0, -0.0013675689697265625, 0.0, -0.0019443109631538391, -2.861018856492592e-06, -0.03854161500930786, 0.0, -0.0001392364501953125, -0.000247955322265625, 0.0, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -6.663799285888672e-05, 0.0, -0.003703474998474121, -2.3841855067985307e-07, -0.01509162224829197, -9.298297300119884e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Missiles", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Missiles", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 23, 146, "i", "<EOS>", 18, 123, 23, 146, "range", "<EOS>", 217, 83, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 232, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 109]}, {"inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.extend(game.other_player.split)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n", "score": -5.961156761946945, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneMissiles", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template14"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "extend", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "split", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "targets", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "target", "_type": "Name"}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Template31"}, {"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.00012969970703125, -6.29425048828125e-05, -1.0728830375228426e-06, -4.29153169534402e-06, -3.933898824470816e-06, -1.71661376953125e-05, -9.34600830078125e-05, -0.000244140625, -1.9073486328125e-06, 0.0, -6.186960672494024e-05, -3.814697265625e-06, -0.00012969970703125, -1.9073486328125e-06, -1.1444091796875e-05, -6.67572021484375e-05, 0.0, -0.0007381439208984375, -9.5367431640625e-06, -0.001529693603515625, -3.0517578125e-05, -1.52587890625e-05, -2.4199192921514623e-05, -2.8252596166566946e-05, -3.3378591979271732e-06, -3.814697265625e-06, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.00019645682186819613, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.340576171875e-05, 0.0, -0.00014138221740722656, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.00022125244140625, 0.0, -0.00018310546875, 0.0, -0.0001583099365234375, -1.9073486328125e-06, 0.0, 0.0, -1.5497207641601562e-05, 0.0, 0.0, -3.814697265625e-06, -0.00011146068572998047, -2.109982233378105e-05, -0.0034923553466796875, -0.0005092620849609375, -0.001850128173828125, -6.103515625e-05, -0.0006160736083984375, -1.52587890625e-05, -0.004432163201272488, -4.076957702636719e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.00011444091796875, -3.0517578125e-05, -0.0002673827111721039, -6.0796710386057384e-06, -0.0001068115234375, -0.015045166015625, -0.0001926422119140625, -4.1961669921875e-05, -0.0027370452880859375, -6.29425048828125e-05, -0.0030536651611328125, -0.00026929378509521484, 0.0, -0.0002346038818359375, -0.000946044921875, -0.0024309158325195312, -0.0011043548583984375, -5.7220458984375e-06, -7.05718994140625e-05, -0.0001354217529296875, -2.09808349609375e-05, -0.0008183701429516077, -1.1920928244535389e-07, -1.52587890625e-05, -7.62939453125e-06, -0.0004138946533203125, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0005366802215576172, 0.0, -0.00042057037353515625, 0.0, -5.53131103515625e-05, -3.814697265625e-05, 0.0, -0.000377655029296875, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.002258896827697754, 0.0, -0.00042176246643066406, 0.0, -0.001083349110558629, -5.006785613659304e-06, -1.52587890625e-05, -0.000202178955078125, -0.0001087188720703125, -1.33514404296875e-05, -8.58306884765625e-05, 0.0, -0.001369476318359375, 0.0, -0.0019800749141722918, -2.861018856492592e-06, -3.386765956878662, -1.1920928244535389e-07, -1.33514404296875e-05, -8.96453857421875e-05, 0.0, -0.0015869140625, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -7.60553521104157e-05, 0.0, -0.0815126895904541, -3.576278118089249e-07, -2.2723283767700195, -2.1457672119140625e-06, -0.04980754852294922, -6.29425048828125e-05, -5.340576171875e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.010811805725097656, 0.0, -0.012175457552075386, -3.2186455882765586e-06, -0.031925447285175323, 0.0, -5.14984130859375e-05, -0.0001125335693359375, 0.0, -1.33514404296875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -6.854525418020785e-05, -1.1920928244535389e-07, -0.022640585899353027, -3.576278118089249e-07, -0.025843743234872818, -1.1205629562027752e-05, -0.0015010833740234375, -4.76837158203125e-05, -4.57763671875e-05, -0.0005435943603515625, -1.1444091796875e-05, -0.0038874149322509766, -7.152555099310121e-07, -0.0002613067626953125, -1.1444091796875e-05, -0.0001354217529296875, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.00037491321563720703, 0.0, -0.0011469125747680664, 0.0, -2.288818359375e-05, -0.0008296966552734375, -0.0001678466796875, -0.0015384647995233536, -2.3841855067985307e-07, -0.0019054412841796875], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Missiles", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Missiles", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 23, 146, "i", "<EOS>", 18, 123, 23, 146, "range", "<EOS>", 217, 83, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 232, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "extend", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "split", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 98, 115, 216, 63, 146, "target", "<EOS>", 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "targets", "<EOS>", 109]}, {"inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(1, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n", "score": -6.088823950813143, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneMissiles", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template14"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "targets", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "target", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "args": [{"_type": "Template14"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Template14"}, {"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.00012969970703125, -6.29425048828125e-05, -1.0728830375228426e-06, -4.29153169534402e-06, -3.933898824470816e-06, -1.71661376953125e-05, -9.34600830078125e-05, -0.000244140625, -1.9073486328125e-06, 0.0, -6.186960672494024e-05, -3.814697265625e-06, -0.00012969970703125, -1.9073486328125e-06, -1.1444091796875e-05, -6.67572021484375e-05, 0.0, -0.0007381439208984375, -9.5367431640625e-06, -0.001529693603515625, -3.0517578125e-05, -1.52587890625e-05, -2.4199192921514623e-05, -2.8252596166566946e-05, -3.3378591979271732e-06, -3.814697265625e-06, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.00019645682186819613, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.340576171875e-05, 0.0, -0.00014138221740722656, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.00022125244140625, 0.0, -0.00018310546875, 0.0, -0.0001583099365234375, -1.9073486328125e-06, 0.0, 0.0, -1.5497207641601562e-05, 0.0, 0.0, -3.814697265625e-06, -0.00011146068572998047, -2.109982233378105e-05, -0.0034923553466796875, -0.0005092620849609375, -0.001850128173828125, -6.103515625e-05, -0.0006160736083984375, -1.52587890625e-05, -0.004432163201272488, -4.076957702636719e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.00011444091796875, -3.0517578125e-05, -0.0002673827111721039, -6.0796710386057384e-06, -0.0001068115234375, -4.912416458129883, -0.019888877868652344, -0.0009002685546875, -0.8955087661743164, -0.000133514404296875, -0.13673686981201172, -0.00032651424407958984, 0.0, -0.0003910064697265625, -0.0015506744384765625, -0.002105712890625, -0.001201629638671875, -5.7220458984375e-06, -4.9591064453125e-05, -0.00011444091796875, -1.9073486328125e-05, -0.0007698523695580661, -1.1920928244535389e-07, -1.71661376953125e-05, -7.62939453125e-06, -0.0004291534423828125, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.0005251169204711914, 0.0, -0.00040531158447265625, 0.0, -5.53131103515625e-05, -3.814697265625e-05, 0.0, -0.00037384033203125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00227510929107666, 0.0, -0.00042366981506347656, 0.0, -0.0010800107847899199, -5.125993993715383e-06, -1.52587890625e-05, -0.0002155303955078125, -0.0001049041748046875, -1.33514404296875e-05, -8.58306884765625e-05, 0.0, -0.0013828277587890625, 0.0, -0.001943720504641533, -2.861018856492592e-06, -0.03905028849840164, 0.0, -0.0001392364501953125, -0.00025177001953125, 0.0, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -6.532669067382812e-05, 0.0, -0.004123568534851074, -2.3841855067985307e-07, -0.015334723517298698, -9.655922440288123e-06, -0.0011959075927734375, -5.14984130859375e-05, -4.38690185546875e-05, -0.0005054473876953125, -1.1444091796875e-05, -0.0038176774978637695, -7.152555099310121e-07, -0.00030517578125, -1.1444091796875e-05, -0.00014495849609375, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00041234493255615234, 0.0, -0.0011391639709472656, 0.0, -2.47955322265625e-05, -0.00078582763671875, -0.00018310546875, -0.0013011425035074353, -2.3841855067985307e-07, -3.62396240234375e-05, -3.24249267578125e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.0517578125e-05, 0.0, -9.918212890625e-05, 0.0, -0.008605623617768288, -0.0014971125638112426, -0.0033125353511422873, 0.0, -0.00042724609375, -0.008144378662109375, -4.38690185546875e-05, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Missiles", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Missiles", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 23, 146, "i", "<EOS>", 18, 123, 23, 146, "range", "<EOS>", 217, 70, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 232, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 98, 115, 216, 63, 146, "target", "<EOS>", 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "targets", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "target", "<EOS>", "damage", "<EOS>", 217, 70, 74, 109]}, {"inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.current_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n", "score": -6.421620726384667, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneMissiles", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template14"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "targets", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "target", "_type": "Name"}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Template31"}, {"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.00012969970703125, -6.29425048828125e-05, -1.0728830375228426e-06, -4.29153169534402e-06, -3.933898824470816e-06, -1.71661376953125e-05, -9.34600830078125e-05, -0.000244140625, -1.9073486328125e-06, 0.0, -6.186960672494024e-05, -3.814697265625e-06, -0.00012969970703125, -1.9073486328125e-06, -1.1444091796875e-05, -6.67572021484375e-05, 0.0, -0.0007381439208984375, -9.5367431640625e-06, -0.001529693603515625, -3.0517578125e-05, -1.52587890625e-05, -2.4199192921514623e-05, -2.8252596166566946e-05, -3.3378591979271732e-06, -3.814697265625e-06, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.00019645682186819613, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.340576171875e-05, 0.0, -0.00014138221740722656, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.00022125244140625, 0.0, -0.00018310546875, 0.0, -0.0001583099365234375, -1.9073486328125e-06, 0.0, 0.0, -1.5497207641601562e-05, 0.0, 0.0, -3.814697265625e-06, -0.00011146068572998047, -2.109982233378105e-05, -0.0034923553466796875, -0.0005092620849609375, -0.001850128173828125, -6.103515625e-05, -0.0006160736083984375, -1.52587890625e-05, -0.004432163201272488, -4.076957702636719e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.00011444091796875, -3.0517578125e-05, -0.0002673827111721039, -6.0796710386057384e-06, -0.0001068115234375, -0.015045166015625, -0.0001926422119140625, -4.1961669921875e-05, -0.0027370452880859375, -6.29425048828125e-05, -0.0030536651611328125, -0.00026929378509521484, 0.0, -0.0002346038818359375, -0.000946044921875, -0.0024309158325195312, -0.0011043548583984375, -5.7220458984375e-06, -7.05718994140625e-05, -0.0001354217529296875, -2.09808349609375e-05, -0.0008183701429516077, -1.1920928244535389e-07, -1.52587890625e-05, -7.62939453125e-06, -0.0004138946533203125, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0005366802215576172, 0.0, -0.00042057037353515625, 0.0, -5.53131103515625e-05, -3.814697265625e-05, 0.0, -0.000377655029296875, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.002258896827697754, 0.0, -0.00042176246643066406, 0.0, -0.001083349110558629, -5.006785613659304e-06, -1.52587890625e-05, -0.000202178955078125, -0.0001087188720703125, -1.33514404296875e-05, -8.58306884765625e-05, 0.0, -0.001369476318359375, 0.0, -0.0019800749141722918, -2.861018856492592e-06, -0.03906781226396561, 0.0, -0.0001392364501953125, -0.000255584716796875, 0.0, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -6.365776062011719e-05, 0.0, -5.713888168334961, 0.0, -0.2623865008354187, -6.556510470545618e-06, -0.2951021194458008, -0.000530242919921875, -0.0002613067626953125, -3.814697265625e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.001270294189453125, 0.0, -0.0027169878594577312, -2.7418097943154862e-06, -0.02471068501472473, 0.0, -8.0108642578125e-05, -0.000164031982421875, 0.0, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -7.736682891845703e-05, 0.0, -0.0034624338150024414, -2.3841855067985307e-07, -0.012574589811265469, -7.629378160345368e-06, -0.001178741455078125, -5.14984130859375e-05, -4.38690185546875e-05, -0.000461578369140625, -1.1444091796875e-05, -0.004047513008117676, -7.152555099310121e-07, -0.0002994537353515625, -1.1444091796875e-05, -0.000141143798828125, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00042557716369628906, 0.0, -0.0011467933654785156, 0.0, -2.47955322265625e-05, -0.0007877349853515625, -0.000179290771484375, -0.0012574365828186274, -2.3841855067985307e-07, -0.0019855499267578125], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Missiles", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Missiles", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 23, 146, "i", "<EOS>", 18, 123, 23, 146, "range", "<EOS>", 217, 83, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 232, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 98, 115, 216, 63, 146, "target", "<EOS>", 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "targets", "<EOS>", 109]}, {"inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.among)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n", "score": -6.48299017412571, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneMissiles", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template14"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "among", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "targets", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "target", "_type": "Name"}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Template31"}, {"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.00012969970703125, -6.29425048828125e-05, -1.0728830375228426e-06, -4.29153169534402e-06, -3.933898824470816e-06, -1.71661376953125e-05, -9.34600830078125e-05, -0.000244140625, -1.9073486328125e-06, 0.0, -6.186960672494024e-05, -3.814697265625e-06, -0.00012969970703125, -1.9073486328125e-06, -1.1444091796875e-05, -6.67572021484375e-05, 0.0, -0.0007381439208984375, -9.5367431640625e-06, -0.001529693603515625, -3.0517578125e-05, -1.52587890625e-05, -2.4199192921514623e-05, -2.8252596166566946e-05, -3.3378591979271732e-06, -3.814697265625e-06, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.00019645682186819613, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.340576171875e-05, 0.0, -0.00014138221740722656, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.00022125244140625, 0.0, -0.00018310546875, 0.0, -0.0001583099365234375, -1.9073486328125e-06, 0.0, 0.0, -1.5497207641601562e-05, 0.0, 0.0, -3.814697265625e-06, -0.00011146068572998047, -2.109982233378105e-05, -0.0034923553466796875, -0.0005092620849609375, -0.001850128173828125, -6.103515625e-05, -0.0006160736083984375, -1.52587890625e-05, -0.004432163201272488, -4.076957702636719e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.00011444091796875, -3.0517578125e-05, -0.0002673827111721039, -6.0796710386057384e-06, -0.0001068115234375, -0.015045166015625, -0.0001926422119140625, -4.1961669921875e-05, -0.0027370452880859375, -6.29425048828125e-05, -0.0030536651611328125, -0.00026929378509521484, 0.0, -0.0002346038818359375, -0.000946044921875, -0.0024309158325195312, -0.0011043548583984375, -5.7220458984375e-06, -7.05718994140625e-05, -0.0001354217529296875, -2.09808349609375e-05, -0.0008183701429516077, -1.1920928244535389e-07, -1.52587890625e-05, -7.62939453125e-06, -0.0004138946533203125, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0005366802215576172, 0.0, -0.00042057037353515625, 0.0, -5.53131103515625e-05, -3.814697265625e-05, 0.0, -0.000377655029296875, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.002258896827697754, 0.0, -0.00042176246643066406, 0.0, -0.001083349110558629, -5.006785613659304e-06, -1.52587890625e-05, -0.000202178955078125, -0.0001087188720703125, -1.33514404296875e-05, -8.58306884765625e-05, 0.0, -0.001369476318359375, 0.0, -0.0019800749141722918, -2.861018856492592e-06, -0.03906781226396561, 0.0, -0.0001392364501953125, -0.000255584716796875, 0.0, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -6.365776062011719e-05, 0.0, -0.004287838935852051, -2.3841855067985307e-07, -6.224774360656738, -2.622604142743512e-06, -0.08172607421875, -6.29425048828125e-05, -7.05718994140625e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.014345169067382812, 0.0, -0.01063075102865696, -3.4570634852570947e-06, -0.026304859668016434, 0.0, -4.38690185546875e-05, -8.58306884765625e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -7.200241088867188e-05, 0.0, -0.003481626510620117, -2.3841855067985307e-07, -0.012370551005005836, -6.318082796497038e-06, -0.00130462646484375, -5.340576171875e-05, -4.38690185546875e-05, -0.0003986358642578125, -1.1444091796875e-05, -0.004320263862609863, -7.152555099310121e-07, -0.0003032684326171875, -1.1444091796875e-05, -0.0001392364501953125, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0004360675811767578, 0.0, -0.0011620521545410156, 0.0, -2.47955322265625e-05, -0.0007953643798828125, -0.0001811981201171875, -0.0012610103003680706, -2.3841855067985307e-07, -0.001979827880859375], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Missiles", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Missiles", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 23, 146, "i", "<EOS>", 18, 123, 23, 146, "range", "<EOS>", 217, 83, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 232, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "among", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 98, 115, 216, 63, 146, "target", "<EOS>", 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "targets", "<EOS>", 109]}, {"inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, game.random_choice(3)):\n            minion.heal(player.effective_heal_power(3), self)\n", "score": -8.052916712223919, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneMissiles", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template14"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Template31"}, {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"_type": "Template16"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.00012969970703125, -6.29425048828125e-05, -1.0728830375228426e-06, -4.29153169534402e-06, -3.933898824470816e-06, -1.71661376953125e-05, -9.34600830078125e-05, -0.000244140625, -1.9073486328125e-06, 0.0, -6.186960672494024e-05, -3.814697265625e-06, -0.00012969970703125, -1.9073486328125e-06, -1.1444091796875e-05, -6.67572021484375e-05, 0.0, -0.0007381439208984375, -9.5367431640625e-06, -0.001529693603515625, -3.0517578125e-05, -1.52587890625e-05, -2.4199192921514623e-05, -2.8252596166566946e-05, -3.3378591979271732e-06, -3.814697265625e-06, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.00019645682186819613, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.340576171875e-05, 0.0, -0.00014138221740722656, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.00022125244140625, 0.0, -0.00018310546875, 0.0, -0.0001583099365234375, -1.9073486328125e-06, 0.0, 0.0, -1.5497207641601562e-05, 0.0, 0.0, -3.814697265625e-06, -0.00011146068572998047, -2.109982233378105e-05, -0.0034923553466796875, -0.0005092620849609375, -0.001850128173828125, -6.103515625e-05, -0.0006160736083984375, -1.52587890625e-05, -0.004432163201272488, -4.076957702636719e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.00011444091796875, -3.0517578125e-05, -0.0002673827111721039, -6.0796710386057384e-06, -0.0001068115234375, -0.015045166015625, -0.0001926422119140625, -4.1961669921875e-05, -0.0027370452880859375, -6.29425048828125e-05, -6.151388168334961, 0.0, -0.030140995979309082, 0.0, -0.1919194459915161, 0.0, -1.9073486328125e-05, -0.11612606048583984, -0.3458251953125, -0.0084686279296875, -3.814697265625e-06, -1.1444091796875e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -0.6776800155639648, -0.3399256467819214, -0.00012695122859440744, -2.47955322265625e-05, -0.0023937225341796875, -9.5367431640625e-06, -5.7220458984375e-05, 0.0, -2.86102294921875e-05, -0.05676042661070824, -1.4066643416299485e-05, -0.000209808349609375, -0.09745502471923828, -0.00016021728515625, 0.0], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Missiles", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Missiles", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 23, 146, "i", "<EOS>", 18, 123, 23, 146, "range", "<EOS>", 217, 83, 58, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 72, 229, 102, 128, 18, 123, 15, 116, 41, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 72, 74, 109]}, {"inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n", "score": -9.883242248854799, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneMissiles", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template14"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.00012969970703125, -6.29425048828125e-05, -1.0728830375228426e-06, -4.29153169534402e-06, -3.933898824470816e-06, -1.71661376953125e-05, -9.34600830078125e-05, -0.000244140625, -1.9073486328125e-06, 0.0, -6.186960672494024e-05, -3.814697265625e-06, -0.00012969970703125, -1.9073486328125e-06, -1.1444091796875e-05, -6.67572021484375e-05, 0.0, -0.0007381439208984375, -9.5367431640625e-06, -0.001529693603515625, -3.0517578125e-05, -1.52587890625e-05, -2.4199192921514623e-05, -2.8252596166566946e-05, -3.3378591979271732e-06, -3.814697265625e-06, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.00019645682186819613, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.340576171875e-05, 0.0, -0.00014138221740722656, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.00022125244140625, 0.0, -0.00018310546875, 0.0, -0.0001583099365234375, -1.9073486328125e-06, 0.0, 0.0, -1.5497207641601562e-05, 0.0, 0.0, -3.814697265625e-06, -0.00011146068572998047, -2.109982233378105e-05, -8.179763793945312, -1.6884593963623047, -0.010540008544921875], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Missiles", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcane", " ", "Missiles", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 108, 109]}, {"inferred_code": "return Minion\n", "score": -17.203947067260742, "model_output": {"_type": "Module", "body": [{"_type": "Return", "value": {"_type": "Template23"}}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -12.953132629394531, -1.2380895614624023, -2.2493953704833984, -0.7633142471313477], "choice_history": [93, 145, 230, 107, 153, 36, 109]}, {"inferred_code": "", "score": -21.71235466003418, "model_output": {"_type": "Module", "body": []}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -21.712343215942383], "choice_history": [93, 145, 228]}], "index": 5}
{"beams": [{"inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -0.17018250970442494, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneShot", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template14"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -1.1444091796875e-05, -3.0517578125e-05, -0.0001125335693359375, -2.7418097943154862e-06, -1.5854784578550607e-05, 0.0, -2.09808349609375e-05, -4.76837158203125e-05, -2.6702880859375e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.88758041683468e-06, -1.9073486328125e-06, -5.14984130859375e-05, -9.5367431640625e-06, -8.58306884765625e-05, -0.0001659393310546875, -5.7220458984375e-06, -0.000988006591796875, -6.103515625e-05, -7.62939453125e-06, -6.866455078125e-05, -2.09808349609375e-05, -3.6238969187252223e-05, -4.9114201829070225e-05, -2.2411237296182662e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.0003499983577057719, 0.0, -0.0004291534423828125, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.000186920166015625, 0.0, -0.09400749206542969, 0.0, -0.0003662109375, 0.0, -2.6702880859375e-05, -0.000179290771484375, -0.000118255615234375, -6.866455078125e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.0001068115234375, 0.0, -0.0002346038818359375, -1.9073486328125e-06, -0.004235625267028809, -1.9073486328125e-06, -0.00011444091796875, -5.53131103515625e-05, -0.0002899169921875, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -9.72747802734375e-05, -1.9073486328125e-06, -5.91278076171875e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -0.0007543563842773438, -5.602820692729438e-06, -0.06313896179199219, -0.000125885009765625, -7.43865966796875e-05, -2.86102294921875e-05, -2.47955322265625e-05, -8.58306884765625e-05, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, -1.0728830375228426e-06, -0.0006572449929080904, -9.5367431640625e-06, -3.24249267578125e-05, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -5.53131103515625e-05, -0.0003821849822998047, -1.1920928244535389e-07, -1.9073486328125e-06, -0.001026153564453125, -0.0006961822509765625, -2.09808349609375e-05], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Shot", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Arcane", " ", "Shot", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, **2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -3.5605623019297283, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneShot", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template14"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"_type": "Template12"}, "_type": "keyword", "arg": ""}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -1.1444091796875e-05, -3.0517578125e-05, -0.0001125335693359375, -2.7418097943154862e-06, -1.5854784578550607e-05, 0.0, -2.09808349609375e-05, -4.76837158203125e-05, -2.6702880859375e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.88758041683468e-06, -1.9073486328125e-06, -5.14984130859375e-05, -9.5367431640625e-06, -8.58306884765625e-05, -0.0001659393310546875, -5.7220458984375e-06, -0.000988006591796875, -6.103515625e-05, -7.62939453125e-06, -6.866455078125e-05, -2.09808349609375e-05, -3.6238969187252223e-05, -4.9114201829070225e-05, -2.2411237296182662e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.0003499983577057719, 0.0, -0.0004291534423828125, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.000186920166015625, 0.0, -2.413599967956543, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -7.62939453125e-06, -2.6702880859375e-05, -5.14984130859375e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001220703125, 0.0, -0.0003509521484375, -1.9073486328125e-06, -0.004563570022583008, -1.9073486328125e-06, -0.001461029052734375, -0.6773662567138672, -0.2732362747192383, -0.17103958129882812, -0.000186920166015625, -0.0010538101196289062, 0.0, -1.9073486328125e-06, 0.0, -0.0001354217529296875, -1.9073486328125e-06, -0.000125885009765625, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -0.00045561790466308594, -9.417489309271332e-06, -0.010375022888183594, -0.0001697540283203125, -8.20159912109375e-05, -2.6702880859375e-05, -1.9073486328125e-05, -7.2479248046875e-05, -3.814697265625e-06, 0.0, -8.20159912109375e-05, -1.0728830375228426e-06, -0.0006400846177712083, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -3.814697265625e-06, 0.0, -5.340576171875e-05, -0.00030040740966796875, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0010547637939453125, -0.0007381439208984375, -2.09808349609375e-05], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Shot", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Arcane", " ", "Shot", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "<EOS>", 27, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "score": -4.362507156016001, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneShot", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template14"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -1.1444091796875e-05, -3.0517578125e-05, -0.0001125335693359375, -2.7418097943154862e-06, -1.5854784578550607e-05, 0.0, -2.09808349609375e-05, -4.76837158203125e-05, -2.6702880859375e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.88758041683468e-06, -1.9073486328125e-06, -5.14984130859375e-05, -9.5367431640625e-06, -8.58306884765625e-05, -0.0001659393310546875, -5.7220458984375e-06, -0.000988006591796875, -6.103515625e-05, -7.62939453125e-06, -6.866455078125e-05, -2.09808349609375e-05, -3.6238969187252223e-05, -4.9114201829070225e-05, -2.2411237296182662e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.0003499983577057719, 0.0, -0.0004291534423828125, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.000186920166015625, 0.0, -0.09400749206542969, 0.0, -0.0003662109375, 0.0, -2.6702880859375e-05, -0.000179290771484375, -0.000118255615234375, -6.866455078125e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.0001068115234375, 0.0, -0.0002346038818359375, -1.9073486328125e-06, -0.004235625267028809, -1.9073486328125e-06, -0.00011444091796875, -5.53131103515625e-05, -0.0002899169921875, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -9.72747802734375e-05, -1.9073486328125e-06, -5.91278076171875e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -0.0007543563842773438, -5.602820692729438e-06, -2.8969078063964844, -8.58306884765625e-05, -0.0028438568115234375, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.91278076171875e-05, -1.4305104514278355e-06, -0.00021468229533638805, -1.52587890625e-05, -4.57763671875e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -8.20159912109375e-05, -0.0001789331145118922, -1.1920928244535389e-07, -1.9073486328125e-06, -0.000980377197265625, -0.0002803802490234375, -1.52587890625e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.10714340209960938, -3.814697265625e-06, -1.9073486328125e-06, -0.10930061340332031, 0.0, -0.7601356506347656, -1.9073486328125e-06, -0.17890167236328125, -2.47955322265625e-05, -0.00038743019104003906, -1.1920928244535389e-07, -0.005113243591040373, -2.3245658667292446e-05, -0.12674690783023834, -4.5537301048170775e-05, -0.01700001209974289, 0.0, -5.7220458984375e-06, -0.001781463623046875, -0.000347137451171875, -7.62939453125e-06, -2.288818359375e-05, -0.0003070831298828125, -0.04322624206542969, -1.1920928244535389e-07, -9.5367431640625e-06, -0.0002841949462890625, -0.006183624267578125, -2.288818359375e-05], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Shot", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Arcane", " ", "Shot", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.damage(player.effective_heal_power(2), self)\n", "score": -5.060566165680591, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneShot", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template14"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -1.1444091796875e-05, -3.0517578125e-05, -0.0001125335693359375, -2.7418097943154862e-06, -1.5854784578550607e-05, 0.0, -2.09808349609375e-05, -4.76837158203125e-05, -2.6702880859375e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.88758041683468e-06, -1.9073486328125e-06, -5.14984130859375e-05, -9.5367431640625e-06, -8.58306884765625e-05, -0.0001659393310546875, -5.7220458984375e-06, -0.000988006591796875, -6.103515625e-05, -7.62939453125e-06, -6.866455078125e-05, -2.09808349609375e-05, -3.6238969187252223e-05, -4.9114201829070225e-05, -2.2411237296182662e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.0003499983577057719, 0.0, -0.0004291534423828125, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.000186920166015625, 0.0, -0.09400749206542969, 0.0, -0.0003662109375, 0.0, -2.6702880859375e-05, -0.000179290771484375, -0.000118255615234375, -6.866455078125e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.0001068115234375, 0.0, -0.0002346038818359375, -1.9073486328125e-06, -0.004235625267028809, -1.9073486328125e-06, -0.00011444091796875, -5.53131103515625e-05, -0.0002899169921875, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -9.72747802734375e-05, -1.9073486328125e-06, -5.91278076171875e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -0.0007543563842773438, -5.602820692729438e-06, -2.8969078063964844, -8.58306884765625e-05, -0.0028438568115234375, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.91278076171875e-05, -1.4305104514278355e-06, -0.00021468229533638805, -1.52587890625e-05, -4.57763671875e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -8.20159912109375e-05, -0.0001789331145118922, -1.1920928244535389e-07, -1.9073486328125e-06, -0.000980377197265625, -0.0002803802490234375, -1.52587890625e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.10714340209960938, -3.814697265625e-06, -1.9073486328125e-06, -0.10930061340332031, 0.0, -0.6558828353881836, -0.0016243397258222103, -3.242440288886428e-05, -1.0904630422592163, 0.0, -2.86102294921875e-05, -0.00034332275390625, -7.62939453125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.000255584716796875, -0.08757352828979492, -4.410743713378906e-06, -3.62396240234375e-05, -0.0021820068359375, -8.392333984375e-05, -3.0517578125e-05], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Shot", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Arcane", " ", "Shot", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.change_temp_attack(2)\n", "score": -5.172973969215938, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneShot", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template14"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -1.1444091796875e-05, -3.0517578125e-05, -0.0001125335693359375, -2.7418097943154862e-06, -1.5854784578550607e-05, 0.0, -2.09808349609375e-05, -4.76837158203125e-05, -2.6702880859375e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.88758041683468e-06, -1.9073486328125e-06, -5.14984130859375e-05, -9.5367431640625e-06, -8.58306884765625e-05, -0.0001659393310546875, -5.7220458984375e-06, -0.000988006591796875, -6.103515625e-05, -7.62939453125e-06, -6.866455078125e-05, -2.09808349609375e-05, -3.6238969187252223e-05, -4.9114201829070225e-05, -2.2411237296182662e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.0003499983577057719, 0.0, -0.0004291534423828125, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.000186920166015625, 0.0, -0.09400749206542969, 0.0, -0.0003662109375, 0.0, -2.6702880859375e-05, -0.000179290771484375, -0.000118255615234375, -6.866455078125e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.0001068115234375, 0.0, -0.0002346038818359375, -1.9073486328125e-06, -0.004235625267028809, -1.9073486328125e-06, -0.00011444091796875, -5.53131103515625e-05, -0.0002899169921875, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -9.72747802734375e-05, -1.9073486328125e-06, -5.91278076171875e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -0.0007543563842773438, -5.602820692729438e-06, -2.8969078063964844, -8.58306884765625e-05, -0.0028438568115234375, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.91278076171875e-05, -1.4305104514278355e-06, -0.00021468229533638805, -1.52587890625e-05, -4.57763671875e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -8.20159912109375e-05, -0.0001789331145118922, -1.1920928244535389e-07, -1.9073486328125e-06, -0.000980377197265625, -0.0002803802490234375, -1.52587890625e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.10714340209960938, -3.814697265625e-06, -1.9073486328125e-06, -0.10930061340332031, 0.0, -0.6558828353881836, -0.0016243397258222103, -3.242440288886428e-05, -1.292500615119934, -4.768370445162873e-07, -2.6702880859375e-05, -0.0009307861328125, -4.76837158203125e-05], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Shot", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Arcane", " ", "Shot", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "change_temp_attack", "<EOS>", 216, 69, 109]}, {"inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -5.38637309301577, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneShot", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template14"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"_type": "Template12"}, "_type": "keyword", "arg": "overload"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -1.1444091796875e-05, -3.0517578125e-05, -0.0001125335693359375, -2.7418097943154862e-06, -1.5854784578550607e-05, 0.0, -2.09808349609375e-05, -4.76837158203125e-05, -2.6702880859375e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.88758041683468e-06, -1.9073486328125e-06, -5.14984130859375e-05, -9.5367431640625e-06, -8.58306884765625e-05, -0.0001659393310546875, -5.7220458984375e-06, -0.000988006591796875, -6.103515625e-05, -7.62939453125e-06, -6.866455078125e-05, -2.09808349609375e-05, -3.6238969187252223e-05, -4.9114201829070225e-05, -2.2411237296182662e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.0003499983577057719, 0.0, -0.0004291534423828125, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.000186920166015625, 0.0, -2.413599967956543, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -7.62939453125e-06, -2.6702880859375e-05, -5.14984130859375e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001220703125, 0.0, -0.0003509521484375, -1.9073486328125e-06, -0.004563570022583008, -1.9073486328125e-06, -0.001461029052734375, -2.7473793029785156, 0.0, -0.1314067840576172, -0.058170318603515625, -0.0003261566162109375, -0.014454841613769531, 0.0, -5.7220458984375e-06, 0.0, -0.0004444122314453125, -1.9073486328125e-06, -0.0005245208740234375, -1.1444091796875e-05, -1.919269561767578e-05, 0.0, -7.62939453125e-06, -2.288818359375e-05, -0.00041425228118896484, -1.168244216387393e-05, -0.00667572021484375, -0.0001697540283203125, -8.0108642578125e-05, -2.6702880859375e-05, -1.71661376953125e-05, -6.103515625e-05, -3.814697265625e-06, 0.0, -8.20159912109375e-05, -1.0728830375228426e-06, -0.0006133827846497297, -9.5367431640625e-06, -4.00543212890625e-05, -1.52587890625e-05, -3.814697265625e-06, 0.0, -5.53131103515625e-05, -0.0003025531768798828, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0010471343994140625, -0.000743865966796875, -2.09808349609375e-05], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Shot", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Arcane", " ", "Shot", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "overload", "<EOS>", 27, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, **1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -5.4558191617649, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneShot", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template14"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"_type": "Template14"}, "_type": "keyword", "arg": ""}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -1.1444091796875e-05, -3.0517578125e-05, -0.0001125335693359375, -2.7418097943154862e-06, -1.5854784578550607e-05, 0.0, -2.09808349609375e-05, -4.76837158203125e-05, -2.6702880859375e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.88758041683468e-06, -1.9073486328125e-06, -5.14984130859375e-05, -9.5367431640625e-06, -8.58306884765625e-05, -0.0001659393310546875, -5.7220458984375e-06, -0.000988006591796875, -6.103515625e-05, -7.62939453125e-06, -6.866455078125e-05, -2.09808349609375e-05, -3.6238969187252223e-05, -4.9114201829070225e-05, -2.2411237296182662e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.0003499983577057719, 0.0, -0.0004291534423828125, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.000186920166015625, 0.0, -2.413599967956543, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -7.62939453125e-06, -2.6702880859375e-05, -5.14984130859375e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001220703125, 0.0, -0.0003509521484375, -1.9073486328125e-06, -0.004563570022583008, -1.9073486328125e-06, -0.001461029052734375, -0.6773662567138672, -2.215055465698242, -0.12464046478271484, -0.000331878662109375, -0.0028886795043945312, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0002231597900390625, -3.814697265625e-06, -0.000362396240234375, -9.5367431640625e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -0.0005605220794677734, -9.179073458653875e-06, -0.007803916931152344, -0.0001888275146484375, -8.20159912109375e-05, -2.6702880859375e-05, -1.9073486328125e-05, -4.9591064453125e-05, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -1.0728830375228426e-06, -0.0006721348036080599, -1.1444091796875e-05, -4.00543212890625e-05, -1.52587890625e-05, -3.814697265625e-06, 0.0, -5.14984130859375e-05, -0.0003151893615722656, -1.1920928244535389e-07, -1.9073486328125e-06, -0.001079559326171875, -0.0006542205810546875, -2.09808349609375e-05], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Shot", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Arcane", " ", "Shot", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "<EOS>", 28, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, **2)\n", "score": -5.463095783221661, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneShot", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template14"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"_type": "Template12"}, "_type": "keyword", "arg": ""}]}}]}, {"_type": "Template13_stmt_seq"}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -1.1444091796875e-05, -3.0517578125e-05, -0.0001125335693359375, -2.7418097943154862e-06, -1.5854784578550607e-05, 0.0, -2.09808349609375e-05, -4.76837158203125e-05, -2.6702880859375e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.88758041683468e-06, -1.9073486328125e-06, -5.14984130859375e-05, -9.5367431640625e-06, -8.58306884765625e-05, -0.0001659393310546875, -5.7220458984375e-06, -0.000988006591796875, -6.103515625e-05, -7.62939453125e-06, -6.866455078125e-05, -2.09808349609375e-05, -3.6238969187252223e-05, -4.9114201829070225e-05, -2.2411237296182662e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.0003499983577057719, 0.0, -0.0004291534423828125, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.000186920166015625, 0.0, -2.413599967956543, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -7.62939453125e-06, -2.6702880859375e-05, -5.14984130859375e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001220703125, 0.0, -0.0003509521484375, -1.9073486328125e-06, -0.004563570022583008, -1.9073486328125e-06, -0.001461029052734375, -0.6773662567138672, -0.2732362747192383, -2.088703155517578, -0.0005893707275390625], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Shot", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Arcane", " ", "Shot", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "<EOS>", 27, 109, 109]}, {"inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, hero=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -5.523591077609346, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneShot", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template14"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "hero"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -1.1444091796875e-05, -3.0517578125e-05, -0.0001125335693359375, -2.7418097943154862e-06, -1.5854784578550607e-05, 0.0, -2.09808349609375e-05, -4.76837158203125e-05, -2.6702880859375e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.88758041683468e-06, -1.9073486328125e-06, -5.14984130859375e-05, -9.5367431640625e-06, -8.58306884765625e-05, -0.0001659393310546875, -5.7220458984375e-06, -0.000988006591796875, -6.103515625e-05, -7.62939453125e-06, -6.866455078125e-05, -2.09808349609375e-05, -3.6238969187252223e-05, -4.9114201829070225e-05, -2.2411237296182662e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.0003499983577057719, 0.0, -0.0004291534423828125, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.000186920166015625, 0.0, -2.413599967956543, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -7.62939453125e-06, -2.6702880859375e-05, -5.14984130859375e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001220703125, 0.0, -0.0003509521484375, -1.9073486328125e-06, -0.004563570022583008, -1.9073486328125e-06, -0.001461029052734375, -2.9109668731689453, -4.76837158203125e-05, -0.006394386291503906, -0.00189971923828125, -0.006122589111328125, -0.0001678466796875, -0.0001811981201171875, -4.57763671875e-05, -0.0704507827758789, 0.0, -0.002094268798828125, 0.0, -0.024071693420410156, -1.9073486328125e-06, -6.103515625e-05, -6.67572021484375e-05, -0.000640869140625, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.0001010894775390625, -1.9073486328125e-06, -5.91278076171875e-05, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -0.000662684440612793, -4.410734163684538e-06, -0.07294082641601562, -0.0001049041748046875, -8.0108642578125e-05, -3.0517578125e-05, -2.47955322265625e-05, -8.20159912109375e-05, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, -9.536738616588991e-07, -0.0006696355994790792, -9.5367431640625e-06, -3.0517578125e-05, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -5.53131103515625e-05, -0.00039970874786376953, -1.1920928244535389e-07, -1.9073486328125e-06, -0.001041412353515625, -0.00069427490234375, -2.09808349609375e-05], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Shot", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Arcane", " ", "Shot", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "hero", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, filter_func=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -5.53190903682718, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneShot", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template14"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"_type": "Template12"}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -1.1444091796875e-05, -3.0517578125e-05, -0.0001125335693359375, -2.7418097943154862e-06, -1.5854784578550607e-05, 0.0, -2.09808349609375e-05, -4.76837158203125e-05, -2.6702880859375e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.88758041683468e-06, -1.9073486328125e-06, -5.14984130859375e-05, -9.5367431640625e-06, -8.58306884765625e-05, -0.0001659393310546875, -5.7220458984375e-06, -0.000988006591796875, -6.103515625e-05, -7.62939453125e-06, -6.866455078125e-05, -2.09808349609375e-05, -3.6238969187252223e-05, -4.9114201829070225e-05, -2.2411237296182662e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.0003499983577057719, 0.0, -0.0004291534423828125, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.000186920166015625, 0.0, -2.413599967956543, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -7.62939453125e-06, -2.6702880859375e-05, -5.14984130859375e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001220703125, 0.0, -0.0003509521484375, -1.9073486328125e-06, -0.004563570022583008, -1.9073486328125e-06, -0.001461029052734375, -2.0773239135742188, -1.9073486328125e-06, -0.9848775863647461, -0.03340911865234375, -0.0002880096435546875, -0.0022172927856445312, 0.0, -3.814697265625e-06, 0.0, -0.0003147125244140625, -1.9073486328125e-06, -0.00048828125, -9.5367431640625e-06, -1.537799835205078e-05, 0.0, -7.62939453125e-06, -2.288818359375e-05, -0.0004316568374633789, -1.0371154530730564e-05, -0.0060100555419921875, -0.0001506805419921875, -8.0108642578125e-05, -2.86102294921875e-05, -1.71661376953125e-05, -6.103515625e-05, -3.814697265625e-06, 0.0, -8.20159912109375e-05, -1.0728830375228426e-06, -0.0006114733405411243, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -3.814697265625e-06, 0.0, -5.340576171875e-05, -0.00029647350311279297, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0010662078857421875, -0.0007305145263671875, -2.288818359375e-05], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Shot", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Arcane", " ", "Shot", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 27, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -5.542581394569076, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneShot", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template14"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -1.1444091796875e-05, -3.0517578125e-05, -0.0001125335693359375, -2.7418097943154862e-06, -1.5854784578550607e-05, 0.0, -2.09808349609375e-05, -4.76837158203125e-05, -2.6702880859375e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.88758041683468e-06, -1.9073486328125e-06, -5.14984130859375e-05, -9.5367431640625e-06, -8.58306884765625e-05, -0.0001659393310546875, -5.7220458984375e-06, -0.000988006591796875, -6.103515625e-05, -7.62939453125e-06, -6.866455078125e-05, -2.09808349609375e-05, -3.6238969187252223e-05, -4.9114201829070225e-05, -2.2411237296182662e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.0003499983577057719, 0.0, -0.0004291534423828125, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.000186920166015625, 0.0, -0.09400749206542969, 0.0, -0.0003662109375, 0.0, -2.6702880859375e-05, -0.000179290771484375, -0.000118255615234375, -6.866455078125e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.0001068115234375, 0.0, -0.0002346038818359375, -1.9073486328125e-06, -0.004235625267028809, -1.9073486328125e-06, -0.00011444091796875, -5.53131103515625e-05, -0.0002899169921875, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -9.72747802734375e-05, -1.9073486328125e-06, -5.91278076171875e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -0.0007543563842773438, -5.602820692729438e-06, -2.8969078063964844, -8.58306884765625e-05, -0.0028438568115234375, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.91278076171875e-05, -1.4305104514278355e-06, -0.00021468229533638805, -1.52587890625e-05, -4.57763671875e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -8.20159912109375e-05, -0.0001789331145118922, -1.1920928244535389e-07, -1.9073486328125e-06, -0.000980377197265625, -0.0002803802490234375, -1.52587890625e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.10714340209960938, -3.814697265625e-06, -1.9073486328125e-06, -2.337726593017578, -0.07947990298271179, -5.9604644775390625e-06, -0.0003032684326171875, -7.82012939453125e-05, -9.72747802734375e-05, -1.9073486328125e-06, 0.0, -0.0001468658447265625, -0.011026620864868164, -2.0265579223632812e-06, -1.9073486328125e-06, -0.00061798095703125, -0.000446319580078125, -1.9073486328125e-05], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Shot", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Arcane", " ", "Shot", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -5.590149677311949, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneShot", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template14"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -1.1444091796875e-05, -3.0517578125e-05, -0.0001125335693359375, -2.7418097943154862e-06, -1.5854784578550607e-05, 0.0, -2.09808349609375e-05, -4.76837158203125e-05, -2.6702880859375e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.88758041683468e-06, -1.9073486328125e-06, -5.14984130859375e-05, -9.5367431640625e-06, -8.58306884765625e-05, -0.0001659393310546875, -5.7220458984375e-06, -0.000988006591796875, -6.103515625e-05, -7.62939453125e-06, -6.866455078125e-05, -2.09808349609375e-05, -3.6238969187252223e-05, -4.9114201829070225e-05, -2.2411237296182662e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.0003499983577057719, 0.0, -0.0004291534423828125, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.000186920166015625, 0.0, -2.413599967956543, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -7.62939453125e-06, -2.6702880859375e-05, -5.14984130859375e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001220703125, 0.0, -0.0003509521484375, -1.9073486328125e-06, -0.004563570022583008, -1.9073486328125e-06, -0.001461029052734375, -3.0323362350463867, -1.9073486328125e-06, -0.006717681884765625, -0.0016632080078125, -0.0005397796630859375, -0.0001735687255859375, -5.340576171875e-05, -4.00543212890625e-05, -0.030813217163085938, 0.0, -0.0016851425170898438, 0.0, -0.019419431686401367, -1.9073486328125e-06, -4.9591064453125e-05, -4.76837158203125e-05, -0.0004673004150390625, -3.814697265625e-06, -3.814697265625e-06, 0.0, -9.918212890625e-05, -1.9073486328125e-06, -6.4849853515625e-05, -7.62939453125e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -0.0006799697875976562, -4.887569048150908e-06, -0.06865787506103516, -0.000110626220703125, -8.0108642578125e-05, -3.24249267578125e-05, -2.47955322265625e-05, -8.0108642578125e-05, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, -9.536738616588991e-07, -0.0006661787629127502, -9.5367431640625e-06, -3.0517578125e-05, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -5.53131103515625e-05, -0.00040733814239501953, -1.1920928244535389e-07, -1.9073486328125e-06, -0.00104522705078125, -0.0007076263427734375, -2.09808349609375e-05], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Shot", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Arcane", " ", "Shot", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, **hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -5.63209823240981, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ArcaneShot", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template14"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": ""}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -1.1444091796875e-05, -3.0517578125e-05, -0.0001125335693359375, -2.7418097943154862e-06, -1.5854784578550607e-05, 0.0, -2.09808349609375e-05, -4.76837158203125e-05, -2.6702880859375e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.88758041683468e-06, -1.9073486328125e-06, -5.14984130859375e-05, -9.5367431640625e-06, -8.58306884765625e-05, -0.0001659393310546875, -5.7220458984375e-06, -0.000988006591796875, -6.103515625e-05, -7.62939453125e-06, -6.866455078125e-05, -2.09808349609375e-05, -3.6238969187252223e-05, -4.9114201829070225e-05, -2.2411237296182662e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.0003499983577057719, 0.0, -0.0004291534423828125, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.000186920166015625, 0.0, -2.413599967956543, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -7.62939453125e-06, -2.6702880859375e-05, -5.14984130859375e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001220703125, 0.0, -0.0003509521484375, -1.9073486328125e-06, -0.004563570022583008, -1.9073486328125e-06, -0.001461029052734375, -0.6773662567138672, -2.401561737060547, -1.33514404296875e-05, -0.009159088134765625, -1.1444091796875e-05, -0.000118255615234375, -4.9591064453125e-05, -0.024301528930664062, 0.0, -0.00208282470703125, 0.0, -0.010092616081237793, 0.0, -4.57763671875e-05, -5.7220458984375e-05, -0.0003204345703125, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0001049041748046875, -1.9073486328125e-06, -7.05718994140625e-05, -7.62939453125e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -0.0006895065307617188, -4.410734163684538e-06, -0.07947444915771484, -7.43865966796875e-05, -8.20159912109375e-05, -3.0517578125e-05, -2.47955322265625e-05, -7.2479248046875e-05, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, -9.536738616588991e-07, -0.0006629583076573908, -9.5367431640625e-06, -3.0517578125e-05, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-05, -0.00042259693145751953, -1.1920928244535389e-07, -1.9073486328125e-06, -0.001049041748046875, -0.0006732940673828125, -2.09808349609375e-05], "choice_history": [93, 145, 230, 101, 125, "Arcane", "Shot", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Arcane", " ", "Shot", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "super().use(player, game)\n", "score": -20.011887550354004, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -1.1444091796875e-05, -13.108705520629883, -6.9031476974487305], "choice_history": [93, 145, 230, 108, 109]}, {"inferred_code": "", "score": -20.727087020874023, "model_output": {"_type": "Module", "body": []}, "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -20.72706413269043], "choice_history": [93, 145, 228]}], "index": 6}
{"beams": [{"inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "score": -0.013198852164343577, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template39"}], "_type": "ClassDef", "name": "ArcaniteReaper", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template22"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Template22"}, {"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -6.97350042173639e-05, -3.814624506048858e-05, -1.1920858014491387e-05, -1.71661376953125e-05, -0.0002994537353515625, -5.53131103515625e-05, -5.7220458984375e-06, 0.0, -2.110004425048828e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.00028228759765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0004425048828125, 0.0, -0.0021800994873046875, -1.9073486328125e-06, -2.288818359375e-05, -1.4305012882687151e-05, -1.633166175452061e-05, -2.1457672119140625e-06, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -2.384185791015625e-06, -0.0005437135696411133, -1.9073486328125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -0.00075531005859375, -1.9073486328125e-05, -0.0009593963623046875, 0.0, -8.20159912109375e-05, -3.4332275390625e-05, 0.0, 0.0, -2.241134461655747e-05, -1.1920928244535389e-07, -9.1552734375e-05, -0.000156402587890625, -1.9073486328125e-06, -0.0011043548583984375, -0.0020656585693359375, -0.0001201629638671875, -0.000232696533203125, -0.0007463334477506578, -0.0011225135531276464, -5.91278076171875e-05, -0.0002193450927734375, -0.0011653900146484375, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Arcanite", "Reaper", "<EOS>", 216, 86, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcanite", " ", "Reaper", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "create_weapon", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 123, 23, 146, "Weapon", "<EOS>", 217, 77, 69, 109]}, {"inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, False)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "score": -6.1718503584324935, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template39"}], "_type": "ClassDef", "name": "ArcaniteReaper", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template22"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Template22"}, {"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -6.97350042173639e-05, -3.814624506048858e-05, -1.1920858014491387e-05, -1.71661376953125e-05, -0.0002994537353515625, -5.53131103515625e-05, -5.7220458984375e-06, 0.0, -2.110004425048828e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.00028228759765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0004425048828125, 0.0, -6.160209655761719, -7.62939453125e-06, -1.1444091796875e-05, -0.0001773833646439016, -4.482249278225936e-05, -1.919269561767578e-05, -0.00013756752014160156, -6.866455078125e-05, -1.1444091796875e-05, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -0.0017205476760864258, 0.0, -2.09808349609375e-05, -8.392333984375e-05, -1.71661376953125e-05, -2.47955322265625e-05, -0.0002593994140625, -9.5367431640625e-06, -3.0517578125e-05, 0.0, -0.000110626220703125, -1.1444091796875e-05, 0.0, 0.0, -0.00017654895782470703, 0.0, -0.000530242919921875, -0.0002994537353515625, -9.5367431640625e-06, -0.00235748291015625, -0.00083160400390625, -0.0001163482666015625, -0.000377655029296875, -0.0007307312334887683, -0.0008520487463101745, -4.57763671875e-05, -0.0002899169921875, -0.000949859619140625, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Arcanite", "Reaper", "<EOS>", 216, 86, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 220, 66, 155, "Arcanite", " ", "Reaper", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 80, 104, 130, "create_weapon", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 123, 23, 146, "Weapon", "<EOS>", 217, 77, 69, 109]}, {"inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 3)\n", "score": -6.814379691702918, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template39"}], "_type": "ClassDef", "name": "ArcaniteReaper", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template22"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Template22"}, {"_type": "Template16"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -6.97350042173639e-05, -3.814624506048858e-05, -1.1920858014491387e-05, -1.71661376953125e-05, -0.0002994537353515625, -5.53131103515625e-05, -5.7220458984375e-06, 0.0, -2.110004425048828e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.00028228759765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0004425048828125, 0.0, -0.0021800994873046875, -1.9073486328125e-06, -2.288818359375e-05, -1.4305012882687151e-05, -1.633166175452061e-05, -2.1457672119140625e-06, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -2.384185791015625e-06, -0.0005437135696411133, -1.9073486328125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -0.00075531005859375, -1.9073486328125e-05, -0.0009593963623046875, 0.0, -8.20159912109375e-05, -3.4332275390625e-05, 0.0, 0.0, -2.241134461655747e-05, -1.1920928244535389e-07, -9.1552734375e-05, -0.000156402587890625, -1.9073486328125e-06, -0.0011043548583984375, -0.0020656585693359375, -0.0001201629638671875, -0.000232696533203125, -0.0007463334477506578, -0.0011225135531276464, -5.91278076171875e-05, -0.0002193450927734375, -6.8023481369018555, 0.0], "choice_history": [93, 145, 230, 101, 125, "Arcanite", "Reaper", "<EOS>", 216, 86, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcanite", " ", "Reaper", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "create_weapon", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 123, 23, 146, "Weapon", "<EOS>", 217, 77, 72, 109]}, {"inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return WeaponWeapon(5, 2)\n", "score": -7.149284840303146, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template39"}], "_type": "ClassDef", "name": "ArcaniteReaper", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template22"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"func": {"id": "WeaponWeapon", "_type": "Name"}, "args": [{"_type": "Template22"}, {"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -6.97350042173639e-05, -3.814624506048858e-05, -1.1920858014491387e-05, -1.71661376953125e-05, -0.0002994537353515625, -5.53131103515625e-05, -5.7220458984375e-06, 0.0, -2.110004425048828e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.00028228759765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0004425048828125, 0.0, -0.0021800994873046875, -1.9073486328125e-06, -2.288818359375e-05, -1.4305012882687151e-05, -1.633166175452061e-05, -2.1457672119140625e-06, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -2.384185791015625e-06, -0.0005437135696411133, -1.9073486328125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -0.00075531005859375, -1.9073486328125e-05, -0.0009593963623046875, 0.0, -8.20159912109375e-05, -3.4332275390625e-05, 0.0, 0.0, -2.241134461655747e-05, -1.1920928244535389e-07, -9.1552734375e-05, -0.000156402587890625, -1.9073486328125e-06, -0.0011043548583984375, -0.0020656585693359375, -0.0001201629638671875, -0.000232696533203125, -0.0007463334477506578, -7.135622978210449, -0.0014195841504260898, -0.0002727508544921875, -0.000713348388671875, -0.0006237030029296875, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Arcanite", "Reaper", "<EOS>", 216, 86, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcanite", " ", "Reaper", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "create_weapon", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 123, 23, 146, "Weapon", "Weapon", "<EOS>", 217, 77, 69, 109]}, {"inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, False)\n", "score": -7.175211306623169, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template39"}], "_type": "ClassDef", "name": "ArcaniteReaper", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template22"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template22"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -6.97350042173639e-05, -3.814624506048858e-05, -1.1920858014491387e-05, -1.71661376953125e-05, -0.0002994537353515625, -5.53131103515625e-05, -5.7220458984375e-06, 0.0, -2.110004425048828e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.00028228759765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0004425048828125, 0.0, -0.0021800994873046875, -1.9073486328125e-06, -2.288818359375e-05, -1.4305012882687151e-05, -1.633166175452061e-05, -2.1457672119140625e-06, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -2.384185791015625e-06, -0.0005437135696411133, -1.9073486328125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -0.00075531005859375, -1.9073486328125e-05, -7.0985822677612305, -0.0003337860107421875, -5.7220458984375e-05, 0.0, -3.814697265625e-06, -5.340576171875e-05, -8.96453857421875e-05, -0.06354713439941406, -9.1552734375e-05, -3.814697265625e-06, -0.0016653536586090922, -5.710094410460442e-05, -3.647804260253906e-05, -0.00360870361328125, -4.76837158203125e-05, -1.71661376953125e-05, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -0.0017586946487426758, 0.0, -2.6702880859375e-05, -0.000179290771484375, -3.24249267578125e-05], "choice_history": [93, 145, 230, 101, 125, "Arcanite", "Reaper", "<EOS>", 216, 86, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcanite", " ", "Reaper", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "create_weapon", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 220, 66, 155, "Arcanite", " ", "Reaper", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 80, 109]}, {"inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return range(5, 2)\n", "score": -7.68394441754571, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template39"}], "_type": "ClassDef", "name": "ArcaniteReaper", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template22"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Template22"}, {"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -6.97350042173639e-05, -3.814624506048858e-05, -1.1920858014491387e-05, -1.71661376953125e-05, -0.0002994537353515625, -5.53131103515625e-05, -5.7220458984375e-06, 0.0, -2.110004425048828e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.00028228759765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0004425048828125, 0.0, -0.0021800994873046875, -1.9073486328125e-06, -2.288818359375e-05, -1.4305012882687151e-05, -1.633166175452061e-05, -2.1457672119140625e-06, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -2.384185791015625e-06, -0.0005437135696411133, -1.9073486328125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -0.00075531005859375, -1.9073486328125e-05, -0.0009593963623046875, 0.0, -8.20159912109375e-05, -3.4332275390625e-05, 0.0, 0.0, -2.241134461655747e-05, -1.1920928244535389e-07, -9.1552734375e-05, -0.000156402587890625, -1.9073486328125e-06, -0.0011043548583984375, -0.0020656585693359375, -0.0001201629638671875, -0.000232696533203125, -7.670489311218262, -0.0007537174969911575, -0.0001010894775390625, -0.00139617919921875, -0.0013179779052734375, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Arcanite", "Reaper", "<EOS>", 216, 86, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcanite", " ", "Reaper", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "create_weapon", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 123, 23, 146, "range", "<EOS>", 217, 77, 69, 109]}, {"inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "score": -7.998203615310558, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template39"}], "_type": "ClassDef", "name": "ArcaniteReaper", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template22"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Template22"}, {"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -6.97350042173639e-05, -3.814624506048858e-05, -1.1920858014491387e-05, -1.71661376953125e-05, -0.0002994537353515625, -5.53131103515625e-05, -5.7220458984375e-06, 0.0, -2.110004425048828e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.00028228759765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.736084938049316, -1.9073486328125e-06, -0.001529693603515625, -3.814697265625e-06, -1.1444091796875e-05, -1.2874520507466514e-05, -1.382827485940652e-05, -2.2649765014648438e-06, -1.1444091796875e-05, -1.9073486328125e-05, -1.1444091796875e-05, -0.000110626220703125, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -4.172325134277344e-06, -0.0004998445510864258, -1.9073486328125e-06, -2.09808349609375e-05, -0.0003910064697265625, -3.4332275390625e-05, -0.031594276428222656, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -0.018708229064941406, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.000469207763671875, 0.0, -0.000194549560546875, -7.62939453125e-06, -0.013425946235656738, -3.933906555175781e-06, -0.00026702880859375, -3.814697265625e-06, -0.18270206451416016, -0.000133514404296875, -6.866455078125e-05, 0.0, -0.0001544952392578125, -7.62939453125e-06, 0.0, 0.0, -1.7046926586772315e-05, 0.0, -0.000553131103515625, -0.0062580108642578125, -1.1444091796875e-05, -0.00020599365234375, -8.96453857421875e-05, -0.0001392364501953125, -0.000461578369140625, -0.0007873102440498769, -0.0012779741082340479, -4.38690185546875e-05, -0.0002727508544921875, -0.0006275177001953125, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Arcanite", "Reaper", "<EOS>", 216, 86, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Arcanite", " ", "Reaper", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "create_weapon", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 123, 23, 146, "Weapon", "<EOS>", 217, 77, 69, 109]}, {"inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "score": -8.036549677757641, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template39"}], "_type": "ClassDef", "name": "ArcaniteReaper", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template22"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Template22"}, {"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -6.97350042173639e-05, -3.814624506048858e-05, -1.1920858014491387e-05, -1.71661376953125e-05, -0.0002994537353515625, -5.53131103515625e-05, -5.7220458984375e-06, 0.0, -2.110004425048828e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.00028228759765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0004425048828125, 0.0, -0.0021800994873046875, -1.9073486328125e-06, -2.288818359375e-05, -1.4305012882687151e-05, -1.633166175452061e-05, -2.1457672119140625e-06, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -2.384185791015625e-06, -8.025538444519043, -1.9073486328125e-06, -4.00543212890625e-05, -2.09808349609375e-05, -3.0517578125e-05, -0.0004405975341796875, -1.71661376953125e-05, -0.0004405975341796875, 0.0, -8.392333984375e-05, -1.52587890625e-05, 0.0, 0.0, -4.1484832763671875e-05, -1.1920928244535389e-07, -6.4849853515625e-05, -0.000202178955078125, -1.9073486328125e-06, -0.0007266998291015625, -0.00159454345703125, -0.0001125335693359375, -0.0002422332763671875, -0.0007618190720677376, -0.001111071789637208, -5.340576171875e-05, -0.0002117156982421875, -0.0011539459228515625, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Arcanite", "Reaper", "<EOS>", 216, 86, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcanite", " ", "Reaper", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 104, 130, "create_weapon", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 123, 23, 146, "Weapon", "<EOS>", 217, 77, 69, 109]}, {"inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2, effects=[Effect(Attack(), ActionTag(Heal(5),\n            HeroSelector()))])\n", "score": -8.3100396978516, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template39"}], "_type": "ClassDef", "name": "ArcaniteReaper", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template22"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Template22"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"hole0": "Attack", "_type": "Template5"}, {"func": {"_type": "Template32"}, "args": [{"func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -6.97350042173639e-05, -3.814624506048858e-05, -1.1920858014491387e-05, -1.71661376953125e-05, -0.0002994537353515625, -5.53131103515625e-05, -5.7220458984375e-06, 0.0, -2.110004425048828e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.00028228759765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0004425048828125, 0.0, -0.0021800994873046875, -1.9073486328125e-06, -2.288818359375e-05, -1.4305012882687151e-05, -1.633166175452061e-05, -2.1457672119140625e-06, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -2.384185791015625e-06, -0.0005437135696411133, -1.9073486328125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -0.00075531005859375, -1.9073486328125e-05, -0.0009593963623046875, 0.0, -8.20159912109375e-05, -3.4332275390625e-05, 0.0, 0.0, -2.241134461655747e-05, -1.1920928244535389e-07, -9.1552734375e-05, -0.000156402587890625, -1.9073486328125e-06, -0.0011043548583984375, -6.47484016418457, -0.0005893707275390625, -0.0002079010009765625, -9.762800618773326e-05, -0.0014672442339360714, -0.0056438446044921875, -0.000141143798828125, -0.000194549560546875, -0.00042724609375, 0.0, -0.26219654083251953, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -0.05716705322265625, -5.14984130859375e-05, -7.62939453125e-06, -0.001708984375, -0.0003299713134765625, -0.07471084594726562, -3.814697265625e-06, -1.1132358312606812, -0.0047255693934857845, -0.001285552978515625, -1.33514404296875e-05, -0.0002117156982421875, -0.0037212371826171875, -0.00099945068359375, -3.814697265625e-06, -0.14585304260253906, -3.814697265625e-06, -0.08910036087036133, -2.872943878173828e-05, -7.62939453125e-06, -0.011282920837402344, -0.0007801055908203125, 0.0, -0.051284726709127426, -0.00014770030975341797, 0.0, -7.43865966796875e-05, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Arcanite", "Reaper", "<EOS>", 216, 86, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcanite", " ", "Reaper", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "create_weapon", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 23, 146, "Weapon", "<EOS>", 217, 77, 69, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 87, 193, "Attack", "<EOS>", 58, 123, 43, 217, 58, 123, 23, 146, "Heal", "<EOS>", 216, 77, 87, 193, "Hero", "Selector", "<EOS>", 71, 109]}, {"inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return isinstanceWeapon(5, 2)\n", "score": -8.854188205124949, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template39"}], "_type": "ClassDef", "name": "ArcaniteReaper", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template22"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"func": {"id": "isinstanceWeapon", "_type": "Name"}, "args": [{"_type": "Template22"}, {"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -6.97350042173639e-05, -3.814624506048858e-05, -1.1920858014491387e-05, -1.71661376953125e-05, -0.0002994537353515625, -5.53131103515625e-05, -5.7220458984375e-06, 0.0, -2.110004425048828e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.00028228759765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0004425048828125, 0.0, -0.0021800994873046875, -1.9073486328125e-06, -2.288818359375e-05, -1.4305012882687151e-05, -1.633166175452061e-05, -2.1457672119140625e-06, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -2.384185791015625e-06, -0.0005437135696411133, -1.9073486328125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -0.00075531005859375, -1.9073486328125e-05, -0.0009593963623046875, 0.0, -8.20159912109375e-05, -3.4332275390625e-05, 0.0, 0.0, -2.241134461655747e-05, -1.1920928244535389e-07, -9.1552734375e-05, -0.000156402587890625, -1.9073486328125e-06, -0.0011043548583984375, -0.0020656585693359375, -0.0001201629638671875, -0.000232696533203125, -8.64739990234375, -0.19016535580158234, -0.00487904716283083, -0.0001811981201171875, -0.0011119842529296875, -0.0005645751953125, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Arcanite", "Reaper", "<EOS>", 216, 86, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcanite", " ", "Reaper", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "create_weapon", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 123, 23, 146, "isinstance", "Weapon", "<EOS>", 217, 77, 69, 109]}, {"inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return weapon.<UNK>\n", "score": -9.12533801357494, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template39"}], "_type": "ClassDef", "name": "ArcaniteReaper", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template22"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "weapon", "_type": "Name"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -6.97350042173639e-05, -3.814624506048858e-05, -1.1920858014491387e-05, -1.71661376953125e-05, -0.0002994537353515625, -5.53131103515625e-05, -5.7220458984375e-06, 0.0, -2.110004425048828e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.00028228759765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0004425048828125, 0.0, -0.0021800994873046875, -1.9073486328125e-06, -2.288818359375e-05, -1.4305012882687151e-05, -1.633166175452061e-05, -2.1457672119140625e-06, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -2.384185791015625e-06, -0.0005437135696411133, -1.9073486328125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -0.00075531005859375, -1.9073486328125e-05, -0.0009593963623046875, 0.0, -8.20159912109375e-05, -3.4332275390625e-05, 0.0, 0.0, -2.241134461655747e-05, -1.1920928244535389e-07, -9.1552734375e-05, -0.000156402587890625, -1.9073486328125e-06, -8.16488265991211, -3.814697265625e-06, -0.014948844909667969, 0.0, -0.4460374712944031, -1.5020257706055418e-05, -0.49302899837493896, -5.2212759328540415e-05, -7.62939453125e-06], "choice_history": [93, 145, 230, 101, 125, "Arcanite", "Reaper", "<EOS>", 216, 86, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcanite", " ", "Reaper", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "create_weapon", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 15, 116, 23, 146, "weapon", "<EOS>", "<UNK>", "<EOS>", 109]}, {"inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(2, 2)\n", "score": -9.512619018179969, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template39"}], "_type": "ClassDef", "name": "ArcaniteReaper", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template22"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Template12"}, {"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -6.97350042173639e-05, -3.814624506048858e-05, -1.1920858014491387e-05, -1.71661376953125e-05, -0.0002994537353515625, -5.53131103515625e-05, -5.7220458984375e-06, 0.0, -2.110004425048828e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.00028228759765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0004425048828125, 0.0, -0.0021800994873046875, -1.9073486328125e-06, -2.288818359375e-05, -1.4305012882687151e-05, -1.633166175452061e-05, -2.1457672119140625e-06, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -2.384185791015625e-06, -0.0005437135696411133, -1.9073486328125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -0.00075531005859375, -1.9073486328125e-05, -0.0009593963623046875, 0.0, -8.20159912109375e-05, -3.4332275390625e-05, 0.0, 0.0, -2.241134461655747e-05, -1.1920928244535389e-07, -9.1552734375e-05, -0.000156402587890625, -1.9073486328125e-06, -0.0011043548583984375, -0.0020656585693359375, -0.0001201629638671875, -0.000232696533203125, -0.0007463334477506578, -0.0011225135531276464, -5.91278076171875e-05, -9.454456329345703, -0.04634857177734375, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Arcanite", "Reaper", "<EOS>", 216, 86, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcanite", " ", "Reaper", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "create_weapon", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 123, 23, 146, "Weapon", "<EOS>", 217, 69, 69, 109]}, {"inferred_code": "class <UNK>Reaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "score": -9.584830166964814, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template39"}], "_type": "ClassDef", "name": "<UNK>Reaper", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template22"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Template22"}, {"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.571701049804688, -3.814624506048858e-05, -1.1920858014491387e-05, -1.71661376953125e-05, -0.0002994537353515625, -5.53131103515625e-05, -5.7220458984375e-06, 0.0, -2.110004425048828e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.00028228759765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0004425048828125, 0.0, -0.0021800994873046875, -1.9073486328125e-06, -2.288818359375e-05, -1.4305012882687151e-05, -1.633166175452061e-05, -2.1457672119140625e-06, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -2.384185791015625e-06, -0.0005437135696411133, -1.9073486328125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -0.00075531005859375, -1.9073486328125e-05, -0.0009593963623046875, 0.0, -8.20159912109375e-05, -3.4332275390625e-05, 0.0, 0.0, -2.241134461655747e-05, -1.1920928244535389e-07, -9.1552734375e-05, -0.000156402587890625, -1.9073486328125e-06, -0.0011043548583984375, -0.0020656585693359375, -0.0001201629638671875, -0.000232696533203125, -0.0007463334477506578, -0.0011225135531276464, -5.91278076171875e-05, -0.0002193450927734375, -0.0011653900146484375, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Reaper", "<EOS>", 216, 86, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcanite", " ", "Reaper", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "create_weapon", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 123, 23, 146, "Weapon", "<EOS>", 217, 77, 69, 109]}, {"inferred_code": "", "score": -20.340415954589844, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, 0.0, -20.340415954589844], "choice_history": [93, 145, 228]}, {"inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        if len(player.minions) < 7 and len(game.other_player.minions) < 7:\n            hammer = justice.create_weapon(player.<UNK>)\n        else:\n            player.trigger.current_player(Buff(ChangeAttack(2)))\n", "score": -22.05767824568749, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template39"}], "_type": "ClassDef", "name": "ArcaniteReaper", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template22"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "If", "test": {"values": [{"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template24"}], "ops": [{"_type": "Lt"}]}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template24"}], "ops": [{"_type": "Lt"}]}], "_type": "BoolOp", "op": {"_type": "And"}}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "current_player", "_type": "Attribute", "value": {"attr": "trigger", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template12"}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}}], "body": [{"_type": "Assign", "value": {"func": {"attr": "create_weapon", "_type": "Attribute", "value": {"id": "justice", "_type": "Name"}}, "args": [{"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}, "targets": [{"id": "hammer", "_type": "Name"}]}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -6.97350042173639e-05, -3.814624506048858e-05, -1.1920858014491387e-05, -1.71661376953125e-05, -0.0002994537353515625, -5.53131103515625e-05, -5.7220458984375e-06, 0.0, -2.110004425048828e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.00028228759765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0004425048828125, 0.0, -0.0021800994873046875, -1.9073486328125e-06, -2.288818359375e-05, -1.4305012882687151e-05, -1.633166175452061e-05, -2.1457672119140625e-06, -3.814697265625e-06, -3.0517578125e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -2.384185791015625e-06, -0.0005437135696411133, -1.9073486328125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -7.837038040161133, 0.0, -0.0011119842529296875, 0.0, -0.0013980865478515625, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -2.1219253540039062e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.00015056133270263672, -1.7881377516459906e-06, -0.0725564956665039, -0.00449371337890625, -0.004679679870605469, -5.7220458984375e-05, -2.6702880859375e-05, -8.392333984375e-05, -9.5367431640625e-06, -0.12039250135421753, -5.328551196726039e-05, -0.000347137451171875, -0.000125885009765625, -0.006511688232421875, -3.814697265625e-06, -0.011144638061523438, -3.814697265625e-06, -0.3173184394836426, -5.9604644775390625e-06, -0.0036405306309461594, 0.0, -9.34600830078125e-05, -5.7220458984375e-06, 0.0, -0.001201629638671875, 0.0, -0.04419517517089844, -7.62939453125e-06, -0.029526710510253906, 0.0, -0.07420921325683594, -1.4305104514278355e-06, -0.029770107939839363, -3.814697265625e-06, -0.012662887573242188, -0.0065746307373046875, -0.5707406997680664, -0.017507553100585938, -9.918212890625e-05, -0.0070056915283203125, -0.000965118408203125, -0.000110626220703125, -0.7443246841430664, -8.58306884765625e-05, -7.43865966796875e-05, -3.814697265625e-06, -0.0059027657844126225, -3.4332275390625e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.06787490844726562, -0.013022064231336117, 0.0, -4.9591064453125e-05, -0.011210441589355469, -7.62939453125e-06, -0.1608438491821289, -0.016065597534179688, -7.43865966796875e-05, -0.0013341903686523438, -1.1444091796875e-05, -0.10816383361816406, -9.918212890625e-05, -0.0338902473449707, -1.1920928244535389e-07, -0.0002536773681640625, -2.09808349609375e-05, -5.91278076171875e-05, -0.052471160888671875, -3.814697265625e-05, -0.00974273681640625, 0.0, -0.006888389587402344, 0.0, -0.2318556308746338, -4.0531158447265625e-06, -0.036508023738861084, -8.785724639892578e-05, -7.62939453125e-06, -1.0407705307006836, -2.6702880859375e-05, -0.48159217834472656, -0.005549430847167969, -0.05096435546875, -0.000270843505859375, -2.47955322265625e-05, -0.0002307891845703125, -3.0517578125e-05, -0.7987862229347229, -0.0006189345731399953, -0.0002155303955078125, -3.814697265625e-06, -0.0013217926025390625, -1.71661376953125e-05, -0.0012912750244140625, -1.9073486328125e-06, -0.9682986736297607, -3.8743019104003906e-05, -0.10230517387390137, -3.814697265625e-06, -0.33905982971191406, -0.8485803604125977, 0.0, -0.9818010330200195, -0.5482243299484253, 0.0, -0.0009174346923828125, -0.6774187088012695, -1.9073486328125e-06, -6.67572021484375e-05, -5.7220458984375e-06, -0.00042724609375, 0.0, -0.2683143615722656, 0.0, -0.1393289566040039, -1.1180927753448486, 0.0, -1.1535100936889648, -1.33514404296875e-05, -0.48195934295654297, -0.3660163879394531, -0.019412994384765625, -0.014496803283691406, -3.814697265625e-06, -0.659844160079956, -1.9073486328125e-06, -2.6702880859375e-05, -0.00055694580078125, -3.814697265625e-06, -0.24906063079833984, -0.0001239776611328125, -0.05688762664794922, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Arcanite", "Reaper", "<EOS>", 216, 86, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Arcanite", " ", "Reaper", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 105, 134, 17, 119, 4, 217, 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 213, 12, 216, 79, 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 213, 12, 216, 79, 229, 98, 115, 216, 63, 146, "hammer", "<EOS>", 18, 123, 15, 116, 23, 146, "justice", "<EOS>", "create_weapon", "<EOS>", 216, 55, 116, 32, "<UNK>", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 15, 116, 32, "trigger", "<EOS>", "current_player", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 58, 123, 40, 216, 69, 109]}], "index": 7}
{"beams": [{"inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -0.904503979727906, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Assassinate", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template22"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.536738616588991e-07, -7.510157047363464e-06, -5.7220458984375e-06, -2.09808349609375e-05, -0.0030803680419921875, -1.1444091796875e-05, 0.0, -9.775143553270027e-06, -7.62939453125e-06, -1.1444091796875e-05, -8.20159912109375e-05, -2.09808349609375e-05, -3.4332275390625e-05, -5.7220458984375e-06, -0.0002384185791015625, -8.392333984375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1086402082582936e-05, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.00018548965454101562, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001850128173828125, -1.9073486328125e-06, -0.360504150390625, 0.0, -2.86102294921875e-05, 0.0, -9.918212890625e-05, -4.00543212890625e-05, -5.14984130859375e-05, 0.0, -7.82012939453125e-05, -5.340576171875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -0.000148773193359375, -5.7220458984375e-06, -0.007701992988586426, -4.398822784423828e-05, -3.24249267578125e-05, -0.007328033447265625, -1.33514404296875e-05, -0.00060272216796875, -9.5367431640625e-05, -1.71661376953125e-05, -0.00011444091796875, -0.00035858154296875, -0.0001010894775390625, -2.86102294921875e-05, -0.022176742553710938, -1.9073486328125e-06, -0.00286102294921875, -0.0008411407470703125, -0.00019073486328125, -2.09808349609375e-05, -0.006741523742675781, -0.000553131103515625, -0.0025005340576171875, 0.0, -5.91278076171875e-05, -1.33514404296875e-05, -0.002681136131286621, -8.118152618408203e-05, -0.007798296865075827, -1.9073486328125e-06, -0.014209747314453125, -0.2064228057861328, -0.00031280517578125, -0.003269195556640625, -0.000576019287109375, -0.0001983642578125, 0.0, -0.000499725341796875, -1.9073486328125e-06, -0.0006471872329711914, -9.5367431640625e-06, -0.05794095993041992, -4.1961669921875e-05, -0.0001811981201171875, -0.000217437744140625, -0.00016021728515625, 0.0, -0.00122833251953125, 0.0, -0.00044095516204833984, -3.814697265625e-05, -0.023931145668029785, -9.167194366455078e-05, -7.62939453125e-06, -3.62396240234375e-05, -0.0011883974075317383, 0.0, 0.0, 0.0, -0.0012531280517578125, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -0.00026702880859375, 0.0, 0.0, -9.5367431640625e-06, -4.76837158203125e-05, -3.933906555175781e-06, -0.15627002716064453, -4.9591064453125e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00060272216796875, -3.0517578125e-05, 0.0, -0.000926971435546875, -0.0012760719982907176, -0.000761508708819747, -0.0023288726806640625, -0.0007429122924804688, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Assassinate", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Assassinate", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 14, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 109]}, {"inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -1.349689509028849, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Assassinate", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template22"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.536738616588991e-07, -7.510157047363464e-06, -5.7220458984375e-06, -2.09808349609375e-05, -0.0030803680419921875, -1.1444091796875e-05, 0.0, -9.775143553270027e-06, -7.62939453125e-06, -1.1444091796875e-05, -8.20159912109375e-05, -2.09808349609375e-05, -3.4332275390625e-05, -5.7220458984375e-06, -0.0002384185791015625, -8.392333984375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1086402082582936e-05, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.00018548965454101562, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001850128173828125, -1.9073486328125e-06, -1.2004814147949219, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -6.67572021484375e-05, -7.2479248046875e-05, -8.20159912109375e-05, -1.9073486328125e-06, -3.4332275390625e-05, -2.86102294921875e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.000156402587890625, -3.814697265625e-06, -0.005112648010253906, -3.24249267578125e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0002803802490234375, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00025177001953125, 0.0, 0.0, -3.814697265625e-06, -4.1961669921875e-05, -5.841255187988281e-06, -0.1322336196899414, -4.1961669921875e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.000335693359375, -2.86102294921875e-05, 0.0, -0.000667572021484375, -0.001403119065798819, -0.0008081195410341024, -0.002445220947265625, -0.000652313232421875, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Assassinate", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Assassinate", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 109]}, {"inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health < target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -2.6482560953668326, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Assassinate", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template22"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "Lt"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.536738616588991e-07, -7.510157047363464e-06, -5.7220458984375e-06, -2.09808349609375e-05, -0.0030803680419921875, -1.1444091796875e-05, 0.0, -9.775143553270027e-06, -7.62939453125e-06, -1.1444091796875e-05, -8.20159912109375e-05, -2.09808349609375e-05, -3.4332275390625e-05, -5.7220458984375e-06, -0.0002384185791015625, -8.392333984375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1086402082582936e-05, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.00018548965454101562, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001850128173828125, -1.9073486328125e-06, -0.360504150390625, 0.0, -2.86102294921875e-05, 0.0, -9.918212890625e-05, -4.00543212890625e-05, -5.14984130859375e-05, 0.0, -7.82012939453125e-05, -5.340576171875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -0.000148773193359375, -5.7220458984375e-06, -0.007701992988586426, -4.398822784423828e-05, -3.24249267578125e-05, -0.007328033447265625, -1.33514404296875e-05, -0.00060272216796875, -9.5367431640625e-05, -1.71661376953125e-05, -0.00011444091796875, -0.00035858154296875, -0.0001010894775390625, -2.86102294921875e-05, -0.022176742553710938, -1.9073486328125e-06, -0.00286102294921875, -0.0008411407470703125, -0.00019073486328125, -2.09808349609375e-05, -0.006741523742675781, -0.000553131103515625, -0.0025005340576171875, 0.0, -5.91278076171875e-05, -1.33514404296875e-05, -0.002681136131286621, -8.118152618408203e-05, -0.007798296865075827, -1.9073486328125e-06, -0.014209747314453125, -1.904921531677246, -0.0003795623779296875, -0.06369686126708984, -0.0011272430419921875, -0.0001506805419921875, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -0.0005530118942260742, -9.5367431640625e-06, -0.04396522045135498, -4.1961669921875e-05, -0.0001583099365234375, -0.00023651123046875, -0.0001621246337890625, 0.0, -0.00124359130859375, 0.0, -0.0004439353942871094, -3.814697265625e-05, -0.025897741317749023, -9.548664093017578e-05, -7.62939453125e-06, -3.62396240234375e-05, -0.0010949373245239258, 0.0, 0.0, 0.0, -0.0012760162353515625, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -0.00026702880859375, 0.0, 0.0, -9.5367431640625e-06, -4.76837158203125e-05, -3.933906555175781e-06, -0.15306854248046875, -4.9591064453125e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0005950927734375, -3.0517578125e-05, 0.0, -0.0009365081787109375, -0.0012815493391826749, -0.0007662770804017782, -0.0023345947265625, -0.00074005126953125, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Assassinate", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Assassinate", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 12, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 109]}, {"inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        game.other_player.draw()\n", "score": -3.8419883541032505, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Assassinate", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template22"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.536738616588991e-07, -7.510157047363464e-06, -5.7220458984375e-06, -2.09808349609375e-05, -0.0030803680419921875, -1.1444091796875e-05, 0.0, -9.775143553270027e-06, -7.62939453125e-06, -1.1444091796875e-05, -8.20159912109375e-05, -2.09808349609375e-05, -3.4332275390625e-05, -5.7220458984375e-06, -0.0002384185791015625, -8.392333984375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1086402082582936e-05, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.00018548965454101562, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001850128173828125, -1.9073486328125e-06, -0.360504150390625, 0.0, -2.86102294921875e-05, 0.0, -9.918212890625e-05, -4.00543212890625e-05, -5.14984130859375e-05, 0.0, -7.82012939453125e-05, -5.340576171875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -0.000148773193359375, -5.7220458984375e-06, -0.007701992988586426, -4.398822784423828e-05, -3.24249267578125e-05, -0.007328033447265625, -1.33514404296875e-05, -0.00060272216796875, -9.5367431640625e-05, -1.71661376953125e-05, -0.00011444091796875, -0.00035858154296875, -0.0001010894775390625, -2.86102294921875e-05, -0.022176742553710938, -1.9073486328125e-06, -0.00286102294921875, -0.0008411407470703125, -0.00019073486328125, -2.09808349609375e-05, -0.006741523742675781, -0.000553131103515625, -0.0025005340576171875, 0.0, -5.91278076171875e-05, -1.33514404296875e-05, -0.002681136131286621, -8.118152618408203e-05, -0.007798296865075827, -1.9073486328125e-06, -0.014209747314453125, -0.2064228057861328, -0.00031280517578125, -0.003269195556640625, -0.000576019287109375, -0.0001983642578125, 0.0, -0.000499725341796875, -1.9073486328125e-06, -0.0006471872329711914, -9.5367431640625e-06, -0.05794095993041992, -4.1961669921875e-05, -0.0001811981201171875, -0.000217437744140625, -0.00016021728515625, 0.0, -0.00122833251953125, 0.0, -0.00044095516204833984, -3.814697265625e-05, -0.023931145668029785, -9.167194366455078e-05, -7.62939453125e-06, -3.62396240234375e-05, -0.0011883974075317383, 0.0, 0.0, 0.0, -0.0012531280517578125, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -0.00026702880859375, 0.0, 0.0, -9.5367431640625e-06, -4.76837158203125e-05, -3.933906555175781e-06, -2.942453384399414, -4.1961669921875e-05, -0.0056705474853515625, -1.9073486328125e-06, 0.0, -0.0001125335693359375, -6.67572021484375e-05, -1.9073486328125e-06, -0.001041412353515625, -0.002901965519413352, -5.626677375403233e-05, -0.0024547576904296875, -0.002811431884765625, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.0223388671875, -1.52587890625e-05, 0.0, -0.004965782165527344, 0.0, -0.03037261962890625, -1.9073486328125e-06, -0.005057334899902344, 0.0, -0.02224254608154297, -9.5367431640625e-06, -0.05649875849485397, -0.001300811767578125, -4.76837158203125e-05], "choice_history": [93, 145, 230, 101, 125, "Assassinate", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Assassinate", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 14, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 102, 128, 18, 121, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>", 109]}, {"inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        game.other_player.draw()\n        game.other_player.draw()\n", "score": -3.983345060238662, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Assassinate", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template22"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.536738616588991e-07, -7.510157047363464e-06, -5.7220458984375e-06, -2.09808349609375e-05, -0.0030803680419921875, -1.1444091796875e-05, 0.0, -9.775143553270027e-06, -7.62939453125e-06, -1.1444091796875e-05, -8.20159912109375e-05, -2.09808349609375e-05, -3.4332275390625e-05, -5.7220458984375e-06, -0.0002384185791015625, -8.392333984375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1086402082582936e-05, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.00018548965454101562, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001850128173828125, -1.9073486328125e-06, -0.360504150390625, 0.0, -2.86102294921875e-05, 0.0, -9.918212890625e-05, -4.00543212890625e-05, -5.14984130859375e-05, 0.0, -7.82012939453125e-05, -5.340576171875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -0.000148773193359375, -5.7220458984375e-06, -0.007701992988586426, -4.398822784423828e-05, -3.24249267578125e-05, -0.007328033447265625, -1.33514404296875e-05, -0.00060272216796875, -9.5367431640625e-05, -1.71661376953125e-05, -0.00011444091796875, -0.00035858154296875, -0.0001010894775390625, -2.86102294921875e-05, -0.022176742553710938, -1.9073486328125e-06, -0.00286102294921875, -0.0008411407470703125, -0.00019073486328125, -2.09808349609375e-05, -0.006741523742675781, -0.000553131103515625, -0.0025005340576171875, 0.0, -5.91278076171875e-05, -1.33514404296875e-05, -0.002681136131286621, -8.118152618408203e-05, -0.007798296865075827, -1.9073486328125e-06, -0.014209747314453125, -0.2064228057861328, -0.00031280517578125, -0.003269195556640625, -0.000576019287109375, -0.0001983642578125, 0.0, -0.000499725341796875, -1.9073486328125e-06, -0.0006471872329711914, -9.5367431640625e-06, -0.05794095993041992, -4.1961669921875e-05, -0.0001811981201171875, -0.000217437744140625, -0.00016021728515625, 0.0, -0.00122833251953125, 0.0, -0.00044095516204833984, -3.814697265625e-05, -0.023931145668029785, -9.167194366455078e-05, -7.62939453125e-06, -3.62396240234375e-05, -0.0011883974075317383, 0.0, 0.0, 0.0, -0.0012531280517578125, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -0.00026702880859375, 0.0, 0.0, -9.5367431640625e-06, -4.76837158203125e-05, -3.933906555175781e-06, -2.7278289794921875, -0.00026702880859375, -0.12211322784423828, -7.62939453125e-06, -1.1444091796875e-05, -0.0005626678466796875, -0.0002956390380859375, 0.0, -0.009508132934570312, -0.003260070690885186, -0.00017535683582536876, -0.0018138885498046875, -0.0005741119384765625, -4.9591064453125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.003665924072265625, -9.5367431640625e-06, 0.0, -0.07212257385253906, 0.0, -0.005962371826171875, 0.0, -0.007090568542480469, 0.0, -0.020444035530090332, -7.62939453125e-06, -0.08621322363615036, -0.0001239776611328125, -0.0001850128173828125, 0.0, -1.9073486328125e-06, -0.009868621826171875, -1.1444091796875e-05, 0.0, -0.1352243423461914, 0.0, -0.008584022521972656, 0.0, -0.00322723388671875, 0.0, -0.01445770263671875, -7.62939453125e-06, -0.007035135291516781, -0.0003185272216796875, -0.00080108642578125], "choice_history": [93, 145, 230, 101, 125, "Assassinate", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Assassinate", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 14, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 102, 128, 18, 121, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>", 102, 128, 18, 121, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>", 109]}, {"inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        game.other_player.draw()\n        game.other_player.draw()\n", "score": -4.099586588440161, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Assassinate", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template22"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.536738616588991e-07, -7.510157047363464e-06, -5.7220458984375e-06, -2.09808349609375e-05, -0.0030803680419921875, -1.1444091796875e-05, 0.0, -9.775143553270027e-06, -7.62939453125e-06, -1.1444091796875e-05, -8.20159912109375e-05, -2.09808349609375e-05, -3.4332275390625e-05, -5.7220458984375e-06, -0.0002384185791015625, -8.392333984375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1086402082582936e-05, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.00018548965454101562, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001850128173828125, -1.9073486328125e-06, -1.2004814147949219, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -6.67572021484375e-05, -7.2479248046875e-05, -8.20159912109375e-05, -1.9073486328125e-06, -3.4332275390625e-05, -2.86102294921875e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.000156402587890625, -3.814697265625e-06, -0.005112648010253906, -3.24249267578125e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0002803802490234375, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00025177001953125, 0.0, 0.0, -3.814697265625e-06, -4.1961669921875e-05, -5.841255187988281e-06, -2.3888282775878906, -0.000179290771484375, -0.1184835433959961, -9.5367431640625e-06, -9.5367431640625e-06, -0.0002384185791015625, -0.0002918243408203125, 0.0, -0.007045745849609375, -0.003480425337329507, -0.00013291834329720587, -0.00150299072265625, -0.0005016326904296875, -4.57763671875e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0033321380615234375, -9.5367431640625e-06, 0.0, -0.07108020782470703, 0.0, -0.0059299468994140625, 0.0, -0.0069751739501953125, 0.0, -0.020242810249328613, -7.62939453125e-06, -0.0868443176150322, -0.000125885009765625, -0.000152587890625, 0.0, -1.9073486328125e-06, -0.010768890380859375, -9.5367431640625e-06, 0.0, -0.12868976593017578, 0.0, -0.008333206176757812, 0.0, -0.0032472610473632812, 0.0, -0.014071464538574219, -7.62939453125e-06, -0.006811975501477718, -0.000316619873046875, -0.0008068084716796875], "choice_history": [93, 145, 230, 101, 125, "Assassinate", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Assassinate", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 102, 128, 18, 121, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>", 102, 128, 18, 121, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>", 109]}, {"inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.spell_targetable() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -4.144739540650789, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Assassinate", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template22"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.536738616588991e-07, -7.510157047363464e-06, -5.7220458984375e-06, -2.09808349609375e-05, -0.0030803680419921875, -1.1444091796875e-05, 0.0, -9.775143553270027e-06, -7.62939453125e-06, -1.1444091796875e-05, -8.20159912109375e-05, -2.09808349609375e-05, -3.4332275390625e-05, -5.7220458984375e-06, -0.0002384185791015625, -8.392333984375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1086402082582936e-05, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.00018548965454101562, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001850128173828125, -1.9073486328125e-06, -0.360504150390625, 0.0, -2.86102294921875e-05, 0.0, -9.918212890625e-05, -4.00543212890625e-05, -5.14984130859375e-05, 0.0, -7.82012939453125e-05, -5.340576171875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -0.000148773193359375, -5.7220458984375e-06, -0.007701992988586426, -4.398822784423828e-05, -3.24249267578125e-05, -0.007328033447265625, -1.33514404296875e-05, -0.00060272216796875, -9.5367431640625e-05, -1.71661376953125e-05, -0.00011444091796875, -0.00035858154296875, -0.0001010894775390625, -2.86102294921875e-05, -0.022176742553710938, -1.9073486328125e-06, -0.00286102294921875, -0.0008411407470703125, -0.00019073486328125, -2.09808349609375e-05, -0.006741523742675781, -0.000553131103515625, -0.0025005340576171875, 0.0, -5.91278076171875e-05, -1.33514404296875e-05, -0.002681136131286621, -8.118152618408203e-05, -0.007798296865075827, -1.9073486328125e-06, -0.014209747314453125, -0.2064228057861328, -0.00031280517578125, -0.003269195556640625, -0.000576019287109375, -0.0001983642578125, 0.0, -0.000499725341796875, -1.9073486328125e-06, -0.0006471872329711914, -9.5367431640625e-06, -3.209372043609619, -6.29425048828125e-05, -0.08337879180908203, -0.000217437744140625, -0.000164031982421875, 0.0, -0.0006656646728515625, 0.0, -0.0006316900253295898, -2.86102294921875e-05, -0.030260799452662468, -4.982948303222656e-05, -5.7220458984375e-06, -3.24249267578125e-05, -0.0013962984085083008, 0.0, -1.9073486328125e-06, 0.0, -0.0014438629150390625, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -0.0003223419189453125, 0.0, 0.0, -9.5367431640625e-06, -4.9591064453125e-05, -3.933906555175781e-06, -0.15549564361572266, -5.340576171875e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0005779266357421875, -3.0517578125e-05, 0.0, -0.000926971435546875, -0.0012816705275326967, -0.0007578132208436728, -0.0023555755615234375, -0.0007371902465820312, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Assassinate", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Assassinate", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 14, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 109]}, {"inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -4.970011629754026, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Assassinate", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template22"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "Eq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.536738616588991e-07, -7.510157047363464e-06, -5.7220458984375e-06, -2.09808349609375e-05, -0.0030803680419921875, -1.1444091796875e-05, 0.0, -9.775143553270027e-06, -7.62939453125e-06, -1.1444091796875e-05, -8.20159912109375e-05, -2.09808349609375e-05, -3.4332275390625e-05, -5.7220458984375e-06, -0.0002384185791015625, -8.392333984375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1086402082582936e-05, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.00018548965454101562, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001850128173828125, -1.9073486328125e-06, -0.360504150390625, 0.0, -2.86102294921875e-05, 0.0, -9.918212890625e-05, -4.00543212890625e-05, -5.14984130859375e-05, 0.0, -7.82012939453125e-05, -5.340576171875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -0.000148773193359375, -5.7220458984375e-06, -0.007701992988586426, -4.398822784423828e-05, -3.24249267578125e-05, -0.007328033447265625, -1.33514404296875e-05, -0.00060272216796875, -9.5367431640625e-05, -1.71661376953125e-05, -0.00011444091796875, -0.00035858154296875, -0.0001010894775390625, -2.86102294921875e-05, -0.022176742553710938, -1.9073486328125e-06, -0.00286102294921875, -0.0008411407470703125, -0.00019073486328125, -2.09808349609375e-05, -0.006741523742675781, -0.000553131103515625, -0.0025005340576171875, 0.0, -5.91278076171875e-05, -1.33514404296875e-05, -0.002681136131286621, -8.118152618408203e-05, -0.007798296865075827, -1.9073486328125e-06, -0.014209747314453125, -4.280255317687988, -6.29425048828125e-05, -0.0026912689208984375, -0.000263214111328125, -0.000240325927734375, 0.0, -0.0005035400390625, 0.0, -0.00044655799865722656, -9.5367431640625e-06, -0.05260634422302246, -4.9591064453125e-05, -0.0001468658447265625, -0.000217437744140625, -0.000164031982421875, 0.0, -0.001224517822265625, 0.0, -0.0004152059555053711, -4.38690185546875e-05, -0.02416813373565674, -9.548664093017578e-05, -7.62939453125e-06, -3.62396240234375e-05, -0.0010796785354614258, 0.0, 0.0, 0.0, -0.0012044906616210938, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -0.0002593994140625, 0.0, 0.0, -9.5367431640625e-06, -4.76837158203125e-05, -3.933906555175781e-06, -0.15455055236816406, -4.9591064453125e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0006046295166015625, -3.0517578125e-05, 0.0, -0.00092315673828125, -0.0012763100676238537, -0.0007597205694764853, -0.0023288726806640625, -0.000743865966796875, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Assassinate", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Assassinate", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 6, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 109]}, {"inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        game.other_player.draw()\n", "score": -5.41523078095679, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Assassinate", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template22"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.536738616588991e-07, -7.510157047363464e-06, -5.7220458984375e-06, -2.09808349609375e-05, -0.0030803680419921875, -1.1444091796875e-05, 0.0, -9.775143553270027e-06, -7.62939453125e-06, -1.1444091796875e-05, -8.20159912109375e-05, -2.09808349609375e-05, -3.4332275390625e-05, -5.7220458984375e-06, -0.0002384185791015625, -8.392333984375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1086402082582936e-05, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.00018548965454101562, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001850128173828125, -1.9073486328125e-06, -1.2004814147949219, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -6.67572021484375e-05, -7.2479248046875e-05, -8.20159912109375e-05, -1.9073486328125e-06, -3.4332275390625e-05, -2.86102294921875e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.000156402587890625, -3.814697265625e-06, -0.005112648010253906, -3.24249267578125e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0002803802490234375, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00025177001953125, 0.0, 0.0, -3.814697265625e-06, -4.1961669921875e-05, -5.841255187988281e-06, -4.041597366333008, -1.71661376953125e-05, -0.0054149627685546875, -1.9073486328125e-06, 0.0, -7.82012939453125e-05, -6.866455078125e-05, -1.9073486328125e-06, -0.0007457733154296875, -0.003379978472366929, -4.816054570255801e-05, -0.0027370452880859375, -0.002452850341796875, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.018642425537109375, -1.52587890625e-05, 0.0, -0.005057334899902344, 0.0, -0.03460884094238281, -1.9073486328125e-06, -0.005656242370605469, 0.0, -0.02220630645751953, -9.5367431640625e-06, -0.06000041216611862, -0.00136566162109375, -4.38690185546875e-05], "choice_history": [93, 145, 230, 101, 125, "Assassinate", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Assassinate", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 102, 128, 18, 121, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>", 109]}, {"inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health < target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        game.other_player.draw()\n        game.other_player.draw()\n", "score": -5.730521355385008, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Assassinate", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template22"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "Lt"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.536738616588991e-07, -7.510157047363464e-06, -5.7220458984375e-06, -2.09808349609375e-05, -0.0030803680419921875, -1.1444091796875e-05, 0.0, -9.775143553270027e-06, -7.62939453125e-06, -1.1444091796875e-05, -8.20159912109375e-05, -2.09808349609375e-05, -3.4332275390625e-05, -5.7220458984375e-06, -0.0002384185791015625, -8.392333984375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1086402082582936e-05, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.00018548965454101562, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001850128173828125, -1.9073486328125e-06, -0.360504150390625, 0.0, -2.86102294921875e-05, 0.0, -9.918212890625e-05, -4.00543212890625e-05, -5.14984130859375e-05, 0.0, -7.82012939453125e-05, -5.340576171875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -0.000148773193359375, -5.7220458984375e-06, -0.007701992988586426, -4.398822784423828e-05, -3.24249267578125e-05, -0.007328033447265625, -1.33514404296875e-05, -0.00060272216796875, -9.5367431640625e-05, -1.71661376953125e-05, -0.00011444091796875, -0.00035858154296875, -0.0001010894775390625, -2.86102294921875e-05, -0.022176742553710938, -1.9073486328125e-06, -0.00286102294921875, -0.0008411407470703125, -0.00019073486328125, -2.09808349609375e-05, -0.006741523742675781, -0.000553131103515625, -0.0025005340576171875, 0.0, -5.91278076171875e-05, -1.33514404296875e-05, -0.002681136131286621, -8.118152618408203e-05, -0.007798296865075827, -1.9073486328125e-06, -0.014209747314453125, -1.904921531677246, -0.0003795623779296875, -0.06369686126708984, -0.0011272430419921875, -0.0001506805419921875, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -0.0005530118942260742, -9.5367431640625e-06, -0.04396522045135498, -4.1961669921875e-05, -0.0001583099365234375, -0.00023651123046875, -0.0001621246337890625, 0.0, -0.00124359130859375, 0.0, -0.0004439353942871094, -3.814697265625e-05, -0.025897741317749023, -9.548664093017578e-05, -7.62939453125e-06, -3.62396240234375e-05, -0.0010949373245239258, 0.0, 0.0, 0.0, -0.0012760162353515625, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -0.00026702880859375, 0.0, 0.0, -9.5367431640625e-06, -4.76837158203125e-05, -3.933906555175781e-06, -2.731083869934082, -0.0002651214599609375, -0.11946868896484375, -7.62939453125e-06, -1.1444091796875e-05, -0.0005550384521484375, -0.0002956390380859375, 0.0, -0.009532928466796875, -0.003258288139477372, -0.00017535683582536876, -0.0018138885498046875, -0.0005702972412109375, -4.9591064453125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.003650665283203125, -9.5367431640625e-06, 0.0, -0.07201194763183594, 0.0, -0.005969047546386719, 0.0, -0.0070858001708984375, 0.0, -0.020424962043762207, -7.62939453125e-06, -0.08616279810667038, -0.0001239776611328125, -0.00018310546875, 0.0, -1.9073486328125e-06, -0.009889602661132812, -1.1444091796875e-05, 0.0, -0.13501548767089844, 0.0, -0.008594512939453125, 0.0, -0.0032281875610351562, 0.0, -0.014451026916503906, -7.62939453125e-06, -0.007033227942883968, -0.000316619873046875, -0.00080108642578125], "choice_history": [93, 145, 230, 101, 125, "Assassinate", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Assassinate", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 12, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 102, 128, 18, 121, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>", 102, 128, 18, 121, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>", 109]}, {"inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n", "score": -5.815418508959247, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Assassinate", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template22"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template14"}], "ops": [{"_type": "GtE"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.536738616588991e-07, -7.510157047363464e-06, -5.7220458984375e-06, -2.09808349609375e-05, -0.0030803680419921875, -1.1444091796875e-05, 0.0, -9.775143553270027e-06, -7.62939453125e-06, -1.1444091796875e-05, -8.20159912109375e-05, -2.09808349609375e-05, -3.4332275390625e-05, -5.7220458984375e-06, -0.0002384185791015625, -8.392333984375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1086402082582936e-05, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.00018548965454101562, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001850128173828125, -1.9073486328125e-06, -0.360504150390625, 0.0, -2.86102294921875e-05, 0.0, -9.918212890625e-05, -4.00543212890625e-05, -5.14984130859375e-05, 0.0, -7.82012939453125e-05, -5.340576171875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -0.000148773193359375, -5.7220458984375e-06, -0.007701992988586426, -4.398822784423828e-05, -3.24249267578125e-05, -0.007328033447265625, -1.33514404296875e-05, -0.00060272216796875, -9.5367431640625e-05, -1.71661376953125e-05, -0.00011444091796875, -0.00035858154296875, -0.0001010894775390625, -2.86102294921875e-05, -0.022176742553710938, -1.9073486328125e-06, -0.00286102294921875, -0.0008411407470703125, -0.00019073486328125, -2.09808349609375e-05, -0.006741523742675781, -0.000553131103515625, -0.0025005340576171875, 0.0, -5.91278076171875e-05, -1.33514404296875e-05, -0.002681136131286621, -8.118152618408203e-05, -0.007798296865075827, -1.9073486328125e-06, -0.014209747314453125, -0.2064228057861328, -0.00031280517578125, -0.003269195556640625, -0.000576019287109375, -0.0001983642578125, 0.0, -0.000499725341796875, -1.9073486328125e-06, -0.0006471872329711914, -9.5367431640625e-06, -0.05794095993041992, -4.1961669921875e-05, -0.0001811981201171875, -0.000217437744140625, -0.00016021728515625, 0.0, -0.00122833251953125, 0.0, -0.00044095516204833984, -3.814697265625e-05, -0.023931145668029785, -9.167194366455078e-05, -7.62939453125e-06, -3.62396240234375e-05, -0.0011883974075317383, 0.0, 0.0, 0.0, -0.0012531280517578125, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -0.00026702880859375, 0.0, 0.0, -9.5367431640625e-06, -4.76837158203125e-05, -3.933906555175781e-06, -4.270145893096924, -0.4992218017578125, -0.0005474090576171875, -0.0017833709716796875, -0.002620697021484375, -0.0337677001953125, -0.000141143798828125, -0.023583412170410156, -2.09808349609375e-05, -0.008314132690429688, -2.47955322265625e-05, -0.18699932098388672, -0.00014495849609375, -0.0007153749465942383, -8.7738037109375e-05, -0.002452850341796875, 0.0, -0.00016021728515625, -0.0003376007080078125, -0.0029344558715820312, -1.1444091796875e-05, -0.0004100799560546875, 0.0, -0.007659912109375, -0.0026912689208984375, -0.0173492431640625, -6.866455078125e-05, -5.53131103515625e-05, -7.62939453125e-06, -0.0004087686538696289, -1.33514404296875e-05, -1.9073486328125e-06, -0.0006036758422851562, 0.0, -9.5367431640625e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -0.002155303955078125, -9.5367431640625e-06, -0.0014247894287109375, -2.3841855067985307e-07, -0.0007391420658677816, -1.1920928244535389e-07, -4.9591064453125e-05, -0.0023641586303710938, -0.000583648681640625, -0.002841949462890625, -0.0002689361572265625], "choice_history": [93, 145, 230, 101, 125, "Assassinate", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Assassinate", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 14, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 213, 8, 216, 70, 109]}, {"inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        game.other_player.draw()\n        game.check_delayed()\n", "score": -6.457659943138879, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Assassinate", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template22"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "check_delayed", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.536738616588991e-07, -7.510157047363464e-06, -5.7220458984375e-06, -2.09808349609375e-05, -0.0030803680419921875, -1.1444091796875e-05, 0.0, -9.775143553270027e-06, -7.62939453125e-06, -1.1444091796875e-05, -8.20159912109375e-05, -2.09808349609375e-05, -3.4332275390625e-05, -5.7220458984375e-06, -0.0002384185791015625, -8.392333984375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1086402082582936e-05, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.00018548965454101562, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001850128173828125, -1.9073486328125e-06, -1.2004814147949219, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -6.67572021484375e-05, -7.2479248046875e-05, -8.20159912109375e-05, -1.9073486328125e-06, -3.4332275390625e-05, -2.86102294921875e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.000156402587890625, -3.814697265625e-06, -0.005112648010253906, -3.24249267578125e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0002803802490234375, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00025177001953125, 0.0, 0.0, -3.814697265625e-06, -4.1961669921875e-05, -5.841255187988281e-06, -2.3888282775878906, -0.000179290771484375, -0.1184835433959961, -9.5367431640625e-06, -9.5367431640625e-06, -0.0002384185791015625, -0.0002918243408203125, 0.0, -0.007045745849609375, -0.003480425337329507, -0.00013291834329720587, -0.00150299072265625, -0.0005016326904296875, -4.57763671875e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0033321380615234375, -9.5367431640625e-06, 0.0, -0.07108020782470703, 0.0, -0.0059299468994140625, 0.0, -0.0069751739501953125, 0.0, -0.020242810249328613, -7.62939453125e-06, -0.0868443176150322, -0.000125885009765625, -0.000152587890625, 0.0, -1.9073486328125e-06, -0.010768890380859375, -9.5367431640625e-06, 0.0, -2.233567237854004, -7.62939453125e-06, -0.27847957611083984, 0.0, -0.008240699768066406, -6.29425048828125e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Assassinate", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Assassinate", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 102, 128, 18, 121, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>", 102, 128, 18, 121, 15, 116, 23, 146, "game", "<EOS>", "check_delayed", "<EOS>", 109]}, {"inferred_code": "super().use(player, game)\n", "score": -15.034392356872559, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -13.730511665344238, -1.303842544555664], "choice_history": [93, 145, 230, 108, 109]}, {"inferred_code": "", "score": -18.823278427124023, "model_output": {"_type": "Module", "body": [{"_type": "Template13_stmt_seq"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.71661376953125e-05, -3.814697265625e-06, -14.01959228515625, -4.803647994995117], "choice_history": [93, 145, 230, 109, 109]}, {"inferred_code": "", "score": -21.15474510192871, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.71661376953125e-05, -1.71661376953125e-05, -21.15471076965332], "choice_history": [93, 145, 228]}], "index": 8}
{"beams": [{"inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -0.380720762286586, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Backstab", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template31"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "Eq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-0.0004863739013671875, -3.814697265625e-06, -1.71661376953125e-05, -0.0001087188720703125, -1.33514404296875e-05, -3.2186455882765586e-06, -8.344646857949556e-07, -9.5367431640625e-06, -0.0001506805419921875, -0.0002422332763671875, -0.000125885009765625, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -2.288818359375e-05, -4.1961669921875e-05, -0.00018310546875, -8.392333984375e-05, -0.0001583099365234375, -0.0003948211669921875, -0.0021820068359375, -9.5367431640625e-06, -4.1961669921875e-05, -4.1961669921875e-05, -2.920592851296533e-05, -1.1444091796875e-05, -0.001453399658203125, -0.00043487548828125, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00018405914306640625, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0007038116455078125, -1.9073486328125e-06, -0.03588676452636719, -1.9073486328125e-06, -0.00019073486328125, 0.0, -6.866455078125e-05, -4.38690185546875e-05, -0.00025177001953125, 0.0, -0.0001697540283203125, 0.0, -2.47955322265625e-05, 0.0, -0.000362396240234375, 0.0, -0.013809442520141602, -8.58306884765625e-06, -0.000347137451171875, -0.0035467147827148438, -9.5367431640625e-06, -0.004433631896972656, -5.7220458984375e-05, -0.0001049041748046875, -0.0006999969482421875, -0.0027065277099609375, -0.0008220672607421875, -0.0002231597900390625, -0.0021882057189941406, -1.01327859738376e-05, -0.000579833984375, -0.00038909912109375, -7.62939453125e-05, -0.0001544952392578125, -0.0034685134887695312, -8.392333984375e-05, -0.001132965087890625, 0.0, -1.1444091796875e-05, 0.0, -0.0005458585801534355, -1.8238983102492057e-05, -0.005716237239539623, 0.0, -0.0007991790771484375, -0.11543846130371094, -1.33514404296875e-05, -8.7738037109375e-05, -0.026610374450683594, -0.0017948150634765625, 0.0, -8.392333984375e-05, 0.0, -0.001638769987039268, -1.049041748046875e-05, -0.011312374845147133, 0.0, -0.0009021759033203125, -0.0001220703125, -1.71661376953125e-05, 0.0, -5.91278076171875e-05, 0.0, -0.0014374256134033203, -5.4836273193359375e-05, -0.010189303196966648, -2.753734588623047e-05, -0.0002269744873046875, -5.53131103515625e-05, -9.34600830078125e-05, 0.0, -1.9073486328125e-06, 0.0, -7.2479248046875e-05, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.00543212890625e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -0.0002614259719848633, -2.3841855067985307e-07, -0.07839298248291016, -0.0005245208740234375, -7.62939453125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -0.00011444091796875, -0.000206091528525576, -7.748603820800781e-06, -7.2479248046875e-05, -0.000194549560546875, -1.52587890625e-05, 0.0, 0.0, -0.0007963180541992188, -0.00014889240264892578, 0.0, 0.0, -0.04339885711669922, -2.86102294921875e-05, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Backstab", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Backstab", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 6, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -3.336677939016994, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Backstab", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template31"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-0.0004863739013671875, -3.814697265625e-06, -1.71661376953125e-05, -0.0001087188720703125, -1.33514404296875e-05, -3.2186455882765586e-06, -8.344646857949556e-07, -9.5367431640625e-06, -0.0001506805419921875, -0.0002422332763671875, -0.000125885009765625, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -2.288818359375e-05, -4.1961669921875e-05, -0.00018310546875, -8.392333984375e-05, -0.0001583099365234375, -0.0003948211669921875, -0.0021820068359375, -9.5367431640625e-06, -4.1961669921875e-05, -4.1961669921875e-05, -2.920592851296533e-05, -1.1444091796875e-05, -0.001453399658203125, -0.00043487548828125, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00018405914306640625, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0007038116455078125, -1.9073486328125e-06, -0.03588676452636719, -1.9073486328125e-06, -0.00019073486328125, 0.0, -6.866455078125e-05, -4.38690185546875e-05, -0.00025177001953125, 0.0, -0.0001697540283203125, 0.0, -2.47955322265625e-05, 0.0, -0.000362396240234375, 0.0, -0.013809442520141602, -8.58306884765625e-06, -0.000347137451171875, -0.0035467147827148438, -9.5367431640625e-06, -0.004433631896972656, -5.7220458984375e-05, -0.0001049041748046875, -0.0006999969482421875, -0.0027065277099609375, -0.0008220672607421875, -0.0002231597900390625, -0.0021882057189941406, -1.01327859738376e-05, -0.000579833984375, -0.00038909912109375, -7.62939453125e-05, -0.0001544952392578125, -0.0034685134887695312, -8.392333984375e-05, -0.001132965087890625, 0.0, -1.1444091796875e-05, 0.0, -0.0005458585801534355, -1.8238983102492057e-05, -0.005716237239539623, 0.0, -0.0007991790771484375, -3.082839012145996, -3.24249267578125e-05, -2.86102294921875e-05, -0.014738082885742188, -0.002330780029296875, 0.0, -0.0001068115234375, 0.0, -0.002251505618914962, -1.0848044439626392e-05, -0.010529773309826851, 0.0, -0.001430511474609375, -0.0001316070556640625, -1.33514404296875e-05, 0.0, -5.14984130859375e-05, 0.0, -0.0014071464538574219, -5.1021575927734375e-05, -0.011191370896995068, -2.562999725341797e-05, -0.0002651214599609375, -6.29425048828125e-05, -9.34600830078125e-05, 0.0, -1.9073486328125e-06, 0.0, -7.2479248046875e-05, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.38690185546875e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -0.0002671480178833008, -2.3841855067985307e-07, -0.07724380493164062, -0.000453948974609375, -9.5367431640625e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -4.38690185546875e-05, 0.0, -0.0001125335693359375, -0.00020275435235816985, -7.748603820800781e-06, -7.05718994140625e-05, -0.00019073486328125, -1.52587890625e-05, 0.0, 0.0, -0.0007762908935546875, -0.00015079975128173828, 0.0, 0.0, -0.04317951202392578, -2.86102294921875e-05, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Backstab", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Backstab", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 14, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health < target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -3.583099004694162, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Backstab", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template31"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "Lt"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-0.0004863739013671875, -3.814697265625e-06, -1.71661376953125e-05, -0.0001087188720703125, -1.33514404296875e-05, -3.2186455882765586e-06, -8.344646857949556e-07, -9.5367431640625e-06, -0.0001506805419921875, -0.0002422332763671875, -0.000125885009765625, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -2.288818359375e-05, -4.1961669921875e-05, -0.00018310546875, -8.392333984375e-05, -0.0001583099365234375, -0.0003948211669921875, -0.0021820068359375, -9.5367431640625e-06, -4.1961669921875e-05, -4.1961669921875e-05, -2.920592851296533e-05, -1.1444091796875e-05, -0.001453399658203125, -0.00043487548828125, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00018405914306640625, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0007038116455078125, -1.9073486328125e-06, -0.03588676452636719, -1.9073486328125e-06, -0.00019073486328125, 0.0, -6.866455078125e-05, -4.38690185546875e-05, -0.00025177001953125, 0.0, -0.0001697540283203125, 0.0, -2.47955322265625e-05, 0.0, -0.000362396240234375, 0.0, -0.013809442520141602, -8.58306884765625e-06, -0.000347137451171875, -0.0035467147827148438, -9.5367431640625e-06, -0.004433631896972656, -5.7220458984375e-05, -0.0001049041748046875, -0.0006999969482421875, -0.0027065277099609375, -0.0008220672607421875, -0.0002231597900390625, -0.0021882057189941406, -1.01327859738376e-05, -0.000579833984375, -0.00038909912109375, -7.62939453125e-05, -0.0001544952392578125, -0.0034685134887695312, -8.392333984375e-05, -0.001132965087890625, 0.0, -1.1444091796875e-05, 0.0, -0.0005458585801534355, -1.8238983102492057e-05, -0.005716237239539623, 0.0, -0.0007991790771484375, -3.2587804794311523, -6.103515625e-05, -0.0012683868408203125, -0.08388900756835938, -0.0010814666748046875, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.002105116844177246, -4.172325134277344e-06, -0.01324817817658186, 0.0, -0.000896453857421875, -0.000118255615234375, -1.33514404296875e-05, 0.0, -4.76837158203125e-05, 0.0, -0.0013409852981567383, -5.6743621826171875e-05, -0.012907995842397213, -3.349781036376953e-05, -0.000293731689453125, -6.866455078125e-05, -8.392333984375e-05, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-05, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -1.52587890625e-05, -3.814697265625e-06, -0.0002690553665161133, -2.3841855067985307e-07, -0.07507038116455078, -0.0004253387451171875, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -9.5367431640625e-06, -4.38690185546875e-05, 0.0, -0.000110626220703125, -0.00020597233378794044, -7.748603820800781e-06, -7.05718994140625e-05, -0.000186920166015625, -1.52587890625e-05, 0.0, 0.0, -0.0007534027099609375, -0.00014889240264892578, 0.0, 0.0, -0.043059349060058594, -2.86102294921875e-05, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Backstab", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Backstab", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 12, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -3.59648762776834, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Backstab", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template31"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-0.0004863739013671875, -3.814697265625e-06, -1.71661376953125e-05, -0.0001087188720703125, -1.33514404296875e-05, -3.2186455882765586e-06, -8.344646857949556e-07, -9.5367431640625e-06, -0.0001506805419921875, -0.0002422332763671875, -0.000125885009765625, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -2.288818359375e-05, -4.1961669921875e-05, -0.00018310546875, -8.392333984375e-05, -0.0001583099365234375, -0.0003948211669921875, -0.0021820068359375, -9.5367431640625e-06, -4.1961669921875e-05, -4.1961669921875e-05, -2.920592851296533e-05, -1.1444091796875e-05, -0.001453399658203125, -0.00043487548828125, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00018405914306640625, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0007038116455078125, -1.9073486328125e-06, -3.3572845458984375, -3.814697265625e-06, -0.0003757476806640625, 0.0, -7.62939453125e-05, -4.76837158203125e-05, -5.91278076171875e-05, -3.24249267578125e-05, -6.29425048828125e-05, 0.0, -1.52587890625e-05, 0.0, -0.0002307891845703125, 0.0, -0.009339451789855957, -1.2040138244628906e-05, -0.0007476806640625, -0.000713348388671875, -6.103515625e-05, 0.0, -2.288818359375e-05, 0.0, -7.82012939453125e-05, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -0.0004044771194458008, -3.576278118089249e-07, -0.16462993621826172, -2.288818359375e-05, -1.9073486328125e-05, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -4.57763671875e-05, 0.0, -0.0001010894775390625, -0.00016223062993958592, -7.748603820800781e-06, -5.14984130859375e-05, -0.000179290771484375, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.003966331481933594, -0.00016605854034423828, 0.0, 0.0, -0.05022239685058594, -3.4332275390625e-05, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Backstab", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Backstab", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -3.8772682911056435, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Backstab", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template31"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "Eq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-0.0004863739013671875, -3.814697265625e-06, -1.71661376953125e-05, -0.0001087188720703125, -1.33514404296875e-05, -3.2186455882765586e-06, -8.344646857949556e-07, -9.5367431640625e-06, -0.0001506805419921875, -0.0002422332763671875, -0.000125885009765625, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -2.288818359375e-05, -4.1961669921875e-05, -0.00018310546875, -8.392333984375e-05, -0.0001583099365234375, -0.0003948211669921875, -0.0021820068359375, -9.5367431640625e-06, -4.1961669921875e-05, -4.1961669921875e-05, -2.920592851296533e-05, -1.1444091796875e-05, -0.001453399658203125, -0.00043487548828125, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00018405914306640625, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0007038116455078125, -1.9073486328125e-06, -0.03588676452636719, -1.9073486328125e-06, -0.00019073486328125, 0.0, -6.866455078125e-05, -4.38690185546875e-05, -0.00025177001953125, 0.0, -0.0001697540283203125, 0.0, -2.47955322265625e-05, 0.0, -0.000362396240234375, 0.0, -0.013809442520141602, -8.58306884765625e-06, -0.000347137451171875, -0.0035467147827148438, -9.5367431640625e-06, -0.004433631896972656, -5.7220458984375e-05, -0.0001049041748046875, -0.0006999969482421875, -0.0027065277099609375, -0.0008220672607421875, -0.0002231597900390625, -0.0021882057189941406, -1.01327859738376e-05, -0.000579833984375, -0.00038909912109375, -7.62939453125e-05, -0.0001544952392578125, -0.0034685134887695312, -8.392333984375e-05, -0.001132965087890625, 0.0, -1.1444091796875e-05, 0.0, -0.0005458585801534355, -1.8238983102492057e-05, -0.005716237239539623, 0.0, -0.0007991790771484375, -0.11543846130371094, -1.33514404296875e-05, -8.7738037109375e-05, -0.026610374450683594, -0.0017948150634765625, 0.0, -8.392333984375e-05, 0.0, -0.001638769987039268, -1.049041748046875e-05, -0.011312374845147133, 0.0, -0.0009021759033203125, -0.0001220703125, -1.71661376953125e-05, 0.0, -5.91278076171875e-05, 0.0, -0.0014374256134033203, -5.4836273193359375e-05, -0.010189303196966648, -2.753734588623047e-05, -0.0002269744873046875, -5.53131103515625e-05, -9.34600830078125e-05, 0.0, -1.9073486328125e-06, 0.0, -7.2479248046875e-05, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.00543212890625e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -0.0002614259719848633, -2.3841855067985307e-07, -2.7419967651367188, -4.00543212890625e-05, -0.1561260223388672, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -5.91278076171875e-05, -0.00015686675033066422, -1.1920928244535389e-07, -0.0001392364501953125, -0.0001544952392578125, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.001323699951171875, -0.00014126300811767578, 0.0, 0.0, -0.05300712585449219, -1.52587890625e-05, -0.000347137451171875, -3.814697265625e-06, -2.09808349609375e-05, -0.0014514923095703125, -5.7220458984375e-06, 0.0, -0.1970958709716797, -0.4655612111091614, 0.0, -8.0108642578125e-05, -0.0001010894775390625, -6.29425048828125e-05, 0.0, -3.814697265625e-06, -0.000171661376953125, -0.00017559528350830078, 0.0, 0.0, -0.002155303955078125, -5.14984130859375e-05, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Backstab", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Backstab", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 6, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2 + player.\n            spell_damage), self)\n", "score": -4.037967947993678, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Backstab", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template31"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "Eq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"left": {"_type": "Template12"}, "_type": "BinOp", "right": {"attr": "spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "op": {"_type": "Add"}}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-0.0004863739013671875, -3.814697265625e-06, -1.71661376953125e-05, -0.0001087188720703125, -1.33514404296875e-05, -3.2186455882765586e-06, -8.344646857949556e-07, -9.5367431640625e-06, -0.0001506805419921875, -0.0002422332763671875, -0.000125885009765625, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -2.288818359375e-05, -4.1961669921875e-05, -0.00018310546875, -8.392333984375e-05, -0.0001583099365234375, -0.0003948211669921875, -0.0021820068359375, -9.5367431640625e-06, -4.1961669921875e-05, -4.1961669921875e-05, -2.920592851296533e-05, -1.1444091796875e-05, -0.001453399658203125, -0.00043487548828125, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00018405914306640625, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0007038116455078125, -1.9073486328125e-06, -0.03588676452636719, -1.9073486328125e-06, -0.00019073486328125, 0.0, -6.866455078125e-05, -4.38690185546875e-05, -0.00025177001953125, 0.0, -0.0001697540283203125, 0.0, -2.47955322265625e-05, 0.0, -0.000362396240234375, 0.0, -0.013809442520141602, -8.58306884765625e-06, -0.000347137451171875, -0.0035467147827148438, -9.5367431640625e-06, -0.004433631896972656, -5.7220458984375e-05, -0.0001049041748046875, -0.0006999969482421875, -0.0027065277099609375, -0.0008220672607421875, -0.0002231597900390625, -0.0021882057189941406, -1.01327859738376e-05, -0.000579833984375, -0.00038909912109375, -7.62939453125e-05, -0.0001544952392578125, -0.0034685134887695312, -8.392333984375e-05, -0.001132965087890625, 0.0, -1.1444091796875e-05, 0.0, -0.0005458585801534355, -1.8238983102492057e-05, -0.005716237239539623, 0.0, -0.0007991790771484375, -0.11543846130371094, -1.33514404296875e-05, -8.7738037109375e-05, -0.026610374450683594, -0.0017948150634765625, 0.0, -8.392333984375e-05, 0.0, -0.001638769987039268, -1.049041748046875e-05, -0.011312374845147133, 0.0, -0.0009021759033203125, -0.0001220703125, -1.71661376953125e-05, 0.0, -5.91278076171875e-05, 0.0, -0.0014374256134033203, -5.4836273193359375e-05, -0.010189303196966648, -2.753734588623047e-05, -0.0002269744873046875, -5.53131103515625e-05, -9.34600830078125e-05, 0.0, -1.9073486328125e-06, 0.0, -7.2479248046875e-05, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.00543212890625e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -0.0002614259719848633, -2.3841855067985307e-07, -0.07839298248291016, -0.0005245208740234375, -7.62939453125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -0.00011444091796875, -0.000206091528525576, -7.748603820800781e-06, -7.2479248046875e-05, -0.000194549560546875, -1.52587890625e-05, 0.0, 0.0, -0.0007963180541992188, -0.00014889240264892578, 0.0, 0.0, -3.5554285049438477, -0.007598876953125, -0.05713844299316406, -0.02064228057861328, -0.0030927658081054688, -3.814697265625e-05, -0.043506622314453125, -0.012937188148498535, -9.5367431640625e-06, -0.0002422332763671875, -4.1961669921875e-05], "choice_history": [93, 145, 230, 101, 125, "Backstab", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Backstab", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 6, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 56, 118, 27, 94, 15, 116, 32, "spell_damage", "<EOS>", 74, 109]}, {"inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(4), self)\n", "score": -4.718325284991664, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Backstab", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template31"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "Eq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template20"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-0.0004863739013671875, -3.814697265625e-06, -1.71661376953125e-05, -0.0001087188720703125, -1.33514404296875e-05, -3.2186455882765586e-06, -8.344646857949556e-07, -9.5367431640625e-06, -0.0001506805419921875, -0.0002422332763671875, -0.000125885009765625, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -2.288818359375e-05, -4.1961669921875e-05, -0.00018310546875, -8.392333984375e-05, -0.0001583099365234375, -0.0003948211669921875, -0.0021820068359375, -9.5367431640625e-06, -4.1961669921875e-05, -4.1961669921875e-05, -2.920592851296533e-05, -1.1444091796875e-05, -0.001453399658203125, -0.00043487548828125, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00018405914306640625, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0007038116455078125, -1.9073486328125e-06, -0.03588676452636719, -1.9073486328125e-06, -0.00019073486328125, 0.0, -6.866455078125e-05, -4.38690185546875e-05, -0.00025177001953125, 0.0, -0.0001697540283203125, 0.0, -2.47955322265625e-05, 0.0, -0.000362396240234375, 0.0, -0.013809442520141602, -8.58306884765625e-06, -0.000347137451171875, -0.0035467147827148438, -9.5367431640625e-06, -0.004433631896972656, -5.7220458984375e-05, -0.0001049041748046875, -0.0006999969482421875, -0.0027065277099609375, -0.0008220672607421875, -0.0002231597900390625, -0.0021882057189941406, -1.01327859738376e-05, -0.000579833984375, -0.00038909912109375, -7.62939453125e-05, -0.0001544952392578125, -0.0034685134887695312, -8.392333984375e-05, -0.001132965087890625, 0.0, -1.1444091796875e-05, 0.0, -0.0005458585801534355, -1.8238983102492057e-05, -0.005716237239539623, 0.0, -0.0007991790771484375, -0.11543846130371094, -1.33514404296875e-05, -8.7738037109375e-05, -0.026610374450683594, -0.0017948150634765625, 0.0, -8.392333984375e-05, 0.0, -0.001638769987039268, -1.049041748046875e-05, -0.011312374845147133, 0.0, -0.0009021759033203125, -0.0001220703125, -1.71661376953125e-05, 0.0, -5.91278076171875e-05, 0.0, -0.0014374256134033203, -5.4836273193359375e-05, -0.010189303196966648, -2.753734588623047e-05, -0.0002269744873046875, -5.53131103515625e-05, -9.34600830078125e-05, 0.0, -1.9073486328125e-06, 0.0, -7.2479248046875e-05, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.00543212890625e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -0.0002614259719848633, -2.3841855067985307e-07, -0.07839298248291016, -0.0005245208740234375, -7.62939453125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -0.00011444091796875, -0.000206091528525576, -7.748603820800781e-06, -7.2479248046875e-05, -0.000194549560546875, -1.52587890625e-05, 0.0, 0.0, -0.0007963180541992188, -0.00014889240264892578, 0.0, 0.0, -4.38089656829834, -0.0001354217529296875, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Backstab", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Backstab", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 6, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 76, 74, 109]}, {"inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health is not Null and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -5.242509244459001, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Backstab", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template31"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"_type": "NameConstant", "value": "Null"}], "ops": [{"_type": "IsNot"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-0.0004863739013671875, -3.814697265625e-06, -1.71661376953125e-05, -0.0001087188720703125, -1.33514404296875e-05, -3.2186455882765586e-06, -8.344646857949556e-07, -9.5367431640625e-06, -0.0001506805419921875, -0.0002422332763671875, -0.000125885009765625, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -2.288818359375e-05, -4.1961669921875e-05, -0.00018310546875, -8.392333984375e-05, -0.0001583099365234375, -0.0003948211669921875, -0.0021820068359375, -9.5367431640625e-06, -4.1961669921875e-05, -4.1961669921875e-05, -2.920592851296533e-05, -1.1444091796875e-05, -0.001453399658203125, -0.00043487548828125, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00018405914306640625, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0007038116455078125, -1.9073486328125e-06, -0.03588676452636719, -1.9073486328125e-06, -0.00019073486328125, 0.0, -6.866455078125e-05, -4.38690185546875e-05, -0.00025177001953125, 0.0, -0.0001697540283203125, 0.0, -2.47955322265625e-05, 0.0, -0.000362396240234375, 0.0, -0.013809442520141602, -8.58306884765625e-06, -0.000347137451171875, -0.0035467147827148438, -9.5367431640625e-06, -0.004433631896972656, -5.7220458984375e-05, -0.0001049041748046875, -0.0006999969482421875, -0.0027065277099609375, -0.0008220672607421875, -0.0002231597900390625, -0.0021882057189941406, -1.01327859738376e-05, -0.000579833984375, -0.00038909912109375, -7.62939453125e-05, -0.0001544952392578125, -0.0034685134887695312, -8.392333984375e-05, -0.001132965087890625, 0.0, -1.1444091796875e-05, 0.0, -0.0005458585801534355, -1.8238983102492057e-05, -0.005716237239539623, 0.0, -0.0007991790771484375, -4.819990158081055, -5.7220458984375e-05, -0.035920143127441406, -0.0002079010009765625, -3.62396240234375e-05, -1.9073486328125e-06, -0.009891510009765625, -0.058646202087402344, -2.09808349609375e-05, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.0008274316787719727, -3.0875205993652344e-05, -0.07808315753936768, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-05, -0.000270843505859375, 0.0, -1.9073486328125e-06, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -2.47955322265625e-05, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -0.000186920166015625, -2.3841855067985307e-07, -0.10565185546875, -0.0011348724365234375, -5.7220458984375e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.1444091796875e-05, -2.6702880859375e-05, 0.0, -0.0001201629638671875, -0.00025567106786184013, -5.841255187988281e-06, -7.2479248046875e-05, -0.0002155303955078125, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -0.0007152557373046875, -0.000141143798828125, 0.0, 0.0, -0.04349708557128906, -2.86102294921875e-05, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Backstab", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Backstab", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 11, 216, 64, 148, "Null", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.spell_targetable() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -5.574538451239135, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Backstab", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template31"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "Eq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-0.0004863739013671875, -3.814697265625e-06, -1.71661376953125e-05, -0.0001087188720703125, -1.33514404296875e-05, -3.2186455882765586e-06, -8.344646857949556e-07, -9.5367431640625e-06, -0.0001506805419921875, -0.0002422332763671875, -0.000125885009765625, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -2.288818359375e-05, -4.1961669921875e-05, -0.00018310546875, -8.392333984375e-05, -0.0001583099365234375, -0.0003948211669921875, -0.0021820068359375, -9.5367431640625e-06, -4.1961669921875e-05, -4.1961669921875e-05, -2.920592851296533e-05, -1.1444091796875e-05, -0.001453399658203125, -0.00043487548828125, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00018405914306640625, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0007038116455078125, -1.9073486328125e-06, -0.03588676452636719, -1.9073486328125e-06, -0.00019073486328125, 0.0, -6.866455078125e-05, -4.38690185546875e-05, -0.00025177001953125, 0.0, -0.0001697540283203125, 0.0, -2.47955322265625e-05, 0.0, -0.000362396240234375, 0.0, -0.013809442520141602, -8.58306884765625e-06, -0.000347137451171875, -0.0035467147827148438, -9.5367431640625e-06, -0.004433631896972656, -5.7220458984375e-05, -0.0001049041748046875, -0.0006999969482421875, -0.0027065277099609375, -0.0008220672607421875, -0.0002231597900390625, -0.0021882057189941406, -1.01327859738376e-05, -0.000579833984375, -0.00038909912109375, -7.62939453125e-05, -0.0001544952392578125, -0.0034685134887695312, -8.392333984375e-05, -0.001132965087890625, 0.0, -1.1444091796875e-05, 0.0, -0.0005458585801534355, -1.8238983102492057e-05, -0.005716237239539623, 0.0, -0.0007991790771484375, -0.11543846130371094, -1.33514404296875e-05, -8.7738037109375e-05, -0.026610374450683594, -0.0017948150634765625, 0.0, -8.392333984375e-05, 0.0, -0.001638769987039268, -1.049041748046875e-05, -4.7143754959106445, -1.1682510375976562e-05, -0.4873037338256836, -0.0001068115234375, -1.9073486328125e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0016554594039916992, -3.147125244140625e-05, -0.007883642800152302, -4.0531158447265625e-06, -0.00017547607421875, -9.34600830078125e-05, -0.0001010894775390625, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -0.0002614259719848633, -2.3841855067985307e-07, -0.08440113067626953, -0.000385284423828125, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -4.00543212890625e-05, 0.0, -0.00011444091796875, -0.00021979767188895494, -7.748603820800781e-06, -7.2479248046875e-05, -0.0001983642578125, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.0008563995361328125, -0.00014889240264892578, 0.0, 0.0, -0.04396820068359375, -3.0517578125e-05, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Backstab", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Backstab", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 6, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "score": -5.836438558062433, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Backstab", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template31"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "Eq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-0.0004863739013671875, -3.814697265625e-06, -1.71661376953125e-05, -0.0001087188720703125, -1.33514404296875e-05, -3.2186455882765586e-06, -8.344646857949556e-07, -9.5367431640625e-06, -0.0001506805419921875, -0.0002422332763671875, -0.000125885009765625, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -2.288818359375e-05, -4.1961669921875e-05, -0.00018310546875, -8.392333984375e-05, -0.0001583099365234375, -0.0003948211669921875, -0.0021820068359375, -9.5367431640625e-06, -4.1961669921875e-05, -4.1961669921875e-05, -2.920592851296533e-05, -1.1444091796875e-05, -0.001453399658203125, -0.00043487548828125, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00018405914306640625, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0007038116455078125, -1.9073486328125e-06, -0.03588676452636719, -1.9073486328125e-06, -0.00019073486328125, 0.0, -6.866455078125e-05, -4.38690185546875e-05, -0.00025177001953125, 0.0, -0.0001697540283203125, 0.0, -2.47955322265625e-05, 0.0, -0.000362396240234375, 0.0, -0.013809442520141602, -8.58306884765625e-06, -0.000347137451171875, -0.0035467147827148438, -9.5367431640625e-06, -0.004433631896972656, -5.7220458984375e-05, -0.0001049041748046875, -0.0006999969482421875, -0.0027065277099609375, -0.0008220672607421875, -0.0002231597900390625, -0.0021882057189941406, -1.01327859738376e-05, -0.000579833984375, -0.00038909912109375, -7.62939453125e-05, -0.0001544952392578125, -0.0034685134887695312, -8.392333984375e-05, -0.001132965087890625, 0.0, -1.1444091796875e-05, 0.0, -0.0005458585801534355, -1.8238983102492057e-05, -0.005716237239539623, 0.0, -0.0007991790771484375, -0.11543846130371094, -1.33514404296875e-05, -8.7738037109375e-05, -0.026610374450683594, -0.0017948150634765625, 0.0, -8.392333984375e-05, 0.0, -0.001638769987039268, -1.049041748046875e-05, -0.011312374845147133, 0.0, -0.0009021759033203125, -0.0001220703125, -1.71661376953125e-05, 0.0, -5.91278076171875e-05, 0.0, -0.0014374256134033203, -5.4836273193359375e-05, -0.010189303196966648, -2.753734588623047e-05, -0.0002269744873046875, -5.53131103515625e-05, -9.34600830078125e-05, 0.0, -1.9073486328125e-06, 0.0, -7.2479248046875e-05, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.00543212890625e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -0.0002614259719848633, -2.3841855067985307e-07, -2.7419967651367188, -4.00543212890625e-05, -0.1561260223388672, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -5.91278076171875e-05, -0.00015686675033066422, -1.1920928244535389e-07, -0.0001392364501953125, -0.0001544952392578125, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.001323699951171875, -0.00014126300811767578, 0.0, 0.0, -0.05300712585449219, -1.52587890625e-05, -0.000347137451171875, -3.814697265625e-06, -2.09808349609375e-05, -0.0014514923095703125, -5.7220458984375e-06, 0.0, -1.7353410720825195, -1.9073486328125e-06, -0.06978130340576172, -3.814697265625e-06, -0.3016490936279297, -5.7220458984375e-06, -0.0007668733596801758, 0.0, -0.02713477611541748, -1.9073486328125e-06, -0.21945609152317047, -9.536714060232043e-06, -0.2229820191860199, -1.9073486328125e-06, -5.7220458984375e-06, -0.00023651123046875, -0.0007648468017578125, -1.1444091796875e-05, -2.09808349609375e-05, -0.042328834533691406, -0.003047347068786621, 0.0, 0.0, -0.0005664825439453125, -0.0005092620849609375, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Backstab", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Backstab", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 6, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.current_player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(2)\n            self.target.increase_health(2)\n        else:\n            self.target.damage(player.effective_spell_damage(2), self)\n", "score": -5.988715182827342, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Backstab", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template31"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "Eq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "If", "test": {"values": [{"left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"_type": "Template8"}}}, "_type": "Compare", "comparators": [{"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Is"}]}, {"left": {"_type": "Template8"}, "_type": "Compare", "comparators": [{"id": "targets", "_type": "Name"}], "ops": [{"_type": "In"}]}], "_type": "BoolOp", "op": {"_type": "And"}}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "body": [{"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-0.0004863739013671875, -3.814697265625e-06, -1.71661376953125e-05, -0.0001087188720703125, -1.33514404296875e-05, -3.2186455882765586e-06, -8.344646857949556e-07, -9.5367431640625e-06, -0.0001506805419921875, -0.0002422332763671875, -0.000125885009765625, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -2.288818359375e-05, -4.1961669921875e-05, -0.00018310546875, -8.392333984375e-05, -0.0001583099365234375, -0.0003948211669921875, -0.0021820068359375, -9.5367431640625e-06, -4.1961669921875e-05, -4.1961669921875e-05, -2.920592851296533e-05, -1.1444091796875e-05, -0.001453399658203125, -0.00043487548828125, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00018405914306640625, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0007038116455078125, -1.9073486328125e-06, -0.03588676452636719, -1.9073486328125e-06, -0.00019073486328125, 0.0, -6.866455078125e-05, -4.38690185546875e-05, -0.00025177001953125, 0.0, -0.0001697540283203125, 0.0, -2.47955322265625e-05, 0.0, -0.000362396240234375, 0.0, -0.013809442520141602, -8.58306884765625e-06, -0.000347137451171875, -0.0035467147827148438, -9.5367431640625e-06, -0.004433631896972656, -5.7220458984375e-05, -0.0001049041748046875, -0.0006999969482421875, -0.0027065277099609375, -0.0008220672607421875, -0.0002231597900390625, -0.0021882057189941406, -1.01327859738376e-05, -0.000579833984375, -0.00038909912109375, -7.62939453125e-05, -0.0001544952392578125, -0.0034685134887695312, -8.392333984375e-05, -0.001132965087890625, 0.0, -1.1444091796875e-05, 0.0, -0.0005458585801534355, -1.8238983102492057e-05, -0.005716237239539623, 0.0, -0.0007991790771484375, -0.11543846130371094, -1.33514404296875e-05, -8.7738037109375e-05, -0.026610374450683594, -0.0017948150634765625, 0.0, -8.392333984375e-05, 0.0, -0.001638769987039268, -1.049041748046875e-05, -0.011312374845147133, 0.0, -0.0009021759033203125, -0.0001220703125, -1.71661376953125e-05, 0.0, -5.91278076171875e-05, 0.0, -0.0014374256134033203, -5.4836273193359375e-05, -0.010189303196966648, -2.753734588623047e-05, -0.0002269744873046875, -5.53131103515625e-05, -9.34600830078125e-05, 0.0, -1.9073486328125e-06, 0.0, -7.2479248046875e-05, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.00543212890625e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -0.0002614259719848633, -2.3841855067985307e-07, -2.7419967651367188, -4.00543212890625e-05, -1.9385766983032227, -0.0072078704833984375, -5.7220458984375e-06, -0.003930091857910156, -5.7220458984375e-06, -0.005716321989893913, -1.1920928244535389e-07, -0.10212421417236328, -7.62939453125e-06, -0.0001316070556640625, 0.0, -0.0003070831298828125, -1.9073486328125e-06, -0.0006865262985229492, -4.57763671875e-05, -0.00017023086547851562, 0.0, -0.0001773834228515625, -4.38690185546875e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.00289154052734375, -9.5367431640625e-06, -0.0017137527465820312, -0.0025482177734375, 0.0, -0.10445690155029297, 0.0, -0.0009008646011352539, 0.0, -0.21940898895263672, -0.00240325927734375, -0.004700660705566406, -0.0001735687255859375, -0.0001964569091796875, -0.000118255615234375, -0.002941131591796875, -4.38690185546875e-05, -0.0008144378662109375, 0.0, -0.009443283081054688, 0.0, -0.0010004043579101562, -0.004039883613586426, -2.1457672119140625e-06, -0.009519100189208984, 0.0, -7.62939453125e-06, -0.07349491119384766, -0.00032806396484375, -0.0001316070556640625, 0.0, -0.05759143829345703, 0.0, -4.76837158203125e-05, 0.0, -0.0024433135986328125, -9.5367431640625e-06, -0.009636878967285156, -4.1961669921875e-05, -0.005318641662597656, -0.00025177001953125, -0.0028324127197265625, -1.71661376953125e-05, -0.03325080871582031, -2.09808349609375e-05, -0.06251406669616699, 0.0, -0.047435760498046875, -0.0040149688720703125, -0.0004978179931640625, -9.5367431640625e-06, -3.0517578125e-05, -0.000118255615234375, 0.0, -0.0008144378662109375, -0.17054185271263123, -6.198883056640625e-06, -7.62939453125e-06, -0.000476837158203125, -0.00030517578125, -7.62939453125e-06, -1.33514404296875e-05, -0.000164031982421875, -2.47955322265625e-05, 0.0, -0.039226531982421875, -0.03698556497693062, -1.9073486328125e-06, -9.5367431640625e-06, -0.0006122589111328125, -0.0007038116455078125, -0.000606536865234375, -5.7220458984375e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, 0.0, -0.00870513916015625, -0.0008867431315593421, -4.88758041683468e-06, -0.00026702880859375, -1.33514404296875e-05, -2.86102294921875e-05, 0.0, 0.0, -8.20159912109375e-05, -0.00023102760314941406, 0.0, 0.0, -0.002590179443359375, -1.9073486328125e-05, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Backstab", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Backstab", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 6, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 15, 116, 32, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 105, 134, 17, 119, 4, 217, 59, 126, 15, 116, 15, 116, 52, "card", "<EOS>", "minion_type", "<EOS>", 213, 10, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 59, 126, 52, 213, 9, 216, 63, 146, "targets", "<EOS>", 230, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 69, 229, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -6.429866188485732, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Backstab", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template31"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"_type": "Template12"}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-0.0004863739013671875, -3.814697265625e-06, -1.71661376953125e-05, -0.0001087188720703125, -1.33514404296875e-05, -3.2186455882765586e-06, -8.344646857949556e-07, -9.5367431640625e-06, -0.0001506805419921875, -0.0002422332763671875, -0.000125885009765625, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -2.288818359375e-05, -4.1961669921875e-05, -0.00018310546875, -8.392333984375e-05, -0.0001583099365234375, -0.0003948211669921875, -0.0021820068359375, -9.5367431640625e-06, -4.1961669921875e-05, -4.1961669921875e-05, -2.920592851296533e-05, -1.1444091796875e-05, -0.001453399658203125, -0.00043487548828125, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00018405914306640625, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0007038116455078125, -1.9073486328125e-06, -0.03588676452636719, -1.9073486328125e-06, -0.00019073486328125, 0.0, -6.866455078125e-05, -4.38690185546875e-05, -0.00025177001953125, 0.0, -0.0001697540283203125, 0.0, -2.47955322265625e-05, 0.0, -0.000362396240234375, 0.0, -0.013809442520141602, -8.58306884765625e-06, -0.000347137451171875, -0.0035467147827148438, -9.5367431640625e-06, -6.228065490722656, -0.000576019287109375, -0.0025844573974609375, -0.0015573501586914062, 0.0, 0.0, 0.0, -0.0001239776611328125, -3.814697265625e-06, -7.62939453125e-06, -9.5367431640625e-06, -4.9591064453125e-05, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -0.0003147125244140625, -3.576278118089249e-07, -0.08493900299072266, -1.33514404296875e-05, -0.0002040863037109375, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, -8.58306884765625e-05, 0.0, -8.58306884765625e-05, -0.0001082361486623995, -9.655952453613281e-06, -4.00543212890625e-05, -0.00018310546875, -7.62939453125e-06, 0.0, 0.0, -0.004650115966796875, -0.00023472309112548828, 0.0, 0.0, -0.04399585723876953, -3.0517578125e-05, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Backstab", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Backstab", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 27, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -6.562823048032264, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Backstab", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template31"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-0.0004863739013671875, -3.814697265625e-06, -1.71661376953125e-05, -0.0001087188720703125, -1.33514404296875e-05, -3.2186455882765586e-06, -8.344646857949556e-07, -9.5367431640625e-06, -0.0001506805419921875, -0.0002422332763671875, -0.000125885009765625, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -2.288818359375e-05, -4.1961669921875e-05, -0.00018310546875, -8.392333984375e-05, -0.0001583099365234375, -0.0003948211669921875, -0.0021820068359375, -9.5367431640625e-06, -4.1961669921875e-05, -4.1961669921875e-05, -2.920592851296533e-05, -1.1444091796875e-05, -0.001453399658203125, -0.00043487548828125, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00018405914306640625, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0007038116455078125, -1.9073486328125e-06, -3.3572845458984375, -3.814697265625e-06, -0.0003757476806640625, 0.0, -7.62939453125e-05, -4.76837158203125e-05, -5.91278076171875e-05, -3.24249267578125e-05, -6.29425048828125e-05, 0.0, -1.52587890625e-05, 0.0, -0.0002307891845703125, 0.0, -0.009339451789855957, -1.2040138244628906e-05, -0.0007476806640625, -0.000713348388671875, -6.103515625e-05, 0.0, -2.288818359375e-05, 0.0, -7.82012939453125e-05, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -0.0004044771194458008, -3.576278118089249e-07, -1.9729862213134766, -9.5367431640625e-06, -0.4975738525390625, -2.288818359375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.6702880859375e-05, 0.0, -4.57763671875e-05, -0.0001307638012804091, -1.1920928244535389e-07, -0.0001392364501953125, -0.0001697540283203125, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0036630630493164062, -0.00015652179718017578, 0.0, -1.9073486328125e-06, -0.05241107940673828, -1.71661376953125e-05, -0.00028228759765625, -1.9073486328125e-06, -1.52587890625e-05, -0.001476287841796875, -5.7220458984375e-06, 0.0, -0.1975879669189453, -0.4564485549926758, 0.0, -8.0108642578125e-05, -0.0001068115234375, -6.4849853515625e-05, 0.0, -3.814697265625e-06, -0.000164031982421875, -0.00017559528350830078, 0.0, 0.0, -0.00212860107421875, -4.9591064453125e-05, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Backstab", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Backstab", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "super().use(player, game)\n", "score": -13.764291763305664, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-0.0004863739013671875, -3.814697265625e-06, -1.71661376953125e-05, -12.784587860107422, -0.9791965484619141], "choice_history": [93, 145, 230, 108, 109]}, {"inferred_code": "", "score": -19.888694763183594, "model_output": {"_type": "Module", "body": []}, "score_history": [-0.0004863739013671875, -3.814697265625e-06, -19.88820457458496], "choice_history": [93, 145, 228]}], "index": 9}
{"beams": [{"inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n", "score": -0.11766316352736794, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "BlessingOfKings", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -0.00028228759765625, -8.7738037109375e-05, -5.07818695041351e-05, -0.00023376547324005514, -0.0004332319076638669, -1.8835024093277752e-05, -2.6702880859375e-05, -4.9591064453125e-05, -8.7738037109375e-05, -7.62939453125e-06, -3.814697265625e-06, -4.506111145019531e-05, -5.7220458984375e-05, -1.1444091796875e-05, -0.000209808349609375, -3.0517578125e-05, -0.0001468658447265625, -0.0001125335693359375, -5.53131103515625e-05, -2.09808349609375e-05, -0.000179290771484375, -1.1444091796875e-05, -3.0517578125e-05, -5.602679812000133e-05, -5.829333167639561e-05, -2.0384763047331944e-05, -6.580352055607364e-05, -0.0005154609680175781, -4.768370445162873e-07, -0.000301361083984375, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.867813110351562e-06, -0.0004646778106689453, -3.814697265625e-06, -2.47955322265625e-05, -0.018194198608398438, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -1.52587890625e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -5.888938903808594e-05, -3.814697265625e-06, -0.005542397499084473, -0.0001188516616821289, -1.9073486328125e-06, -1.71661376953125e-05, -6.556510470545618e-06, -2.288818359375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0005779266357421875, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -2.682209014892578e-05, -4.768370445162873e-07, -0.019455909729003906, -4.57763671875e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -0.011444091796875, -0.03270137310028076, -3.123283386230469e-05, -2.86102294921875e-05, -0.004046440124511719, -0.000213623046875, -3.814697265625e-06, -3.62396240234375e-05, -2.288818359375e-05, -3.62396240234375e-05, 0.0, -0.012948989868164062, -0.006181836128234863, -9.655952453613281e-06, -0.000324249267578125, -0.001323699951171875, -2.47955322265625e-05], "choice_history": [93, 145, 230, 101, 125, "Blessing", "Of", "Kings", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Blessing", " ", "of", " ", "Kings", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 76, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 76, 109]}, {"inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(4)\n        self.target.increase_health(4)\n", "score": -4.377469200476526, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "BlessingOfKings", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -0.00028228759765625, -8.7738037109375e-05, -5.07818695041351e-05, -0.00023376547324005514, -0.0004332319076638669, -1.8835024093277752e-05, -2.6702880859375e-05, -4.9591064453125e-05, -8.7738037109375e-05, -7.62939453125e-06, -3.814697265625e-06, -4.506111145019531e-05, -5.7220458984375e-05, -1.1444091796875e-05, -0.000209808349609375, -3.0517578125e-05, -0.0001468658447265625, -0.0001125335693359375, -5.53131103515625e-05, -2.09808349609375e-05, -0.000179290771484375, -1.1444091796875e-05, -3.0517578125e-05, -5.602679812000133e-05, -5.829333167639561e-05, -2.0384763047331944e-05, -6.580352055607364e-05, -0.0005154609680175781, -4.768370445162873e-07, -0.000301361083984375, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.867813110351562e-06, -0.0004646778106689453, -3.814697265625e-06, -2.47955322265625e-05, -0.018194198608398438, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -1.52587890625e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -5.888938903808594e-05, -3.814697265625e-06, -0.005542397499084473, -0.0001188516616821289, -1.9073486328125e-06, -1.71661376953125e-05, -6.556510470545618e-06, -2.288818359375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0005779266357421875, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -2.682209014892578e-05, -4.768370445162873e-07, -0.019455909729003906, -4.57763671875e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -0.011444091796875, -4.28908634185791, -1.3470649719238281e-05, -9.5367431640625e-05, -0.0025081634521484375, -0.0004062652587890625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-05, -5.14984130859375e-05, 0.0, -0.017658233642578125, -0.0061904191970825195, -9.5367431640625e-06, -0.0003604888916015625, -0.0012493133544921875, -2.47955322265625e-05], "choice_history": [93, 145, 230, 101, 125, "Blessing", "Of", "Kings", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Blessing", " ", "of", " ", "Kings", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 76, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 76, 109]}, {"inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n        self.target.increase_health(4)\n", "score": -4.668339744045852, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "BlessingOfKings", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -0.00028228759765625, -8.7738037109375e-05, -5.07818695041351e-05, -0.00023376547324005514, -0.0004332319076638669, -1.8835024093277752e-05, -2.6702880859375e-05, -4.9591064453125e-05, -8.7738037109375e-05, -7.62939453125e-06, -3.814697265625e-06, -4.506111145019531e-05, -5.7220458984375e-05, -1.1444091796875e-05, -0.000209808349609375, -3.0517578125e-05, -0.0001468658447265625, -0.0001125335693359375, -5.53131103515625e-05, -2.09808349609375e-05, -0.000179290771484375, -1.1444091796875e-05, -3.0517578125e-05, -5.602679812000133e-05, -5.829333167639561e-05, -2.0384763047331944e-05, -6.580352055607364e-05, -0.0005154609680175781, -4.768370445162873e-07, -0.000301361083984375, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.867813110351562e-06, -0.0004646778106689453, -3.814697265625e-06, -2.47955322265625e-05, -0.018194198608398438, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -1.52587890625e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -5.888938903808594e-05, -3.814697265625e-06, -0.005542397499084473, -0.0001188516616821289, -1.9073486328125e-06, -1.71661376953125e-05, -6.556510470545618e-06, -2.288818359375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0005779266357421875, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -2.682209014892578e-05, -4.768370445162873e-07, -4.486214637756348, -8.0108642578125e-05, -0.0018062591552734375, -3.814697265625e-06, -9.5367431640625e-06, -2.47955322265625e-05, -5.7220458984375e-06, 0.0, -0.0029659271240234375, -0.028158660978078842, -3.8504600524902344e-05, -1.1444091796875e-05, -0.0038785934448242188, -0.001506805419921875, 0.0, -3.814697265625e-06, -0.0002765655517578125, -0.0001354217529296875, 0.0, -0.07002067565917969, -0.005337834358215332, -4.57763671875e-05, -5.53131103515625e-05, -0.001049041748046875, -0.010341644287109375, -1.9073486328125e-06, -5.7220458984375e-06, -0.000415802001953125, -0.00017547607421875, 0.0, -0.021085739135742188, -0.004116177558898926, -0.00021648406982421875, -3.814697265625e-05, -0.0015392303466796875, -4.1961669921875e-05], "choice_history": [93, 145, 230, 101, 125, "Blessing", "Of", "Kings", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Blessing", " ", "of", " ", "Kings", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 76, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 76, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 76, 109]}, {"inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.change_attack(4)\n", "score": -5.404579777106164, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "BlessingOfKings", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -0.00028228759765625, -8.7738037109375e-05, -5.07818695041351e-05, -0.00023376547324005514, -0.0004332319076638669, -1.8835024093277752e-05, -2.6702880859375e-05, -4.9591064453125e-05, -8.7738037109375e-05, -7.62939453125e-06, -3.814697265625e-06, -4.506111145019531e-05, -5.7220458984375e-05, -1.1444091796875e-05, -0.000209808349609375, -3.0517578125e-05, -0.0001468658447265625, -0.0001125335693359375, -5.53131103515625e-05, -2.09808349609375e-05, -0.000179290771484375, -1.1444091796875e-05, -3.0517578125e-05, -5.602679812000133e-05, -5.829333167639561e-05, -2.0384763047331944e-05, -6.580352055607364e-05, -0.0005154609680175781, -4.768370445162873e-07, -0.000301361083984375, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.867813110351562e-06, -0.0004646778106689453, -3.814697265625e-06, -2.47955322265625e-05, -0.018194198608398438, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -1.52587890625e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -5.888938903808594e-05, -3.814697265625e-06, -0.005542397499084473, -0.0001188516616821289, -1.9073486328125e-06, -1.71661376953125e-05, -6.556510470545618e-06, -2.288818359375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0005779266357421875, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -2.682209014892578e-05, -4.768370445162873e-07, -0.019455909729003906, -4.57763671875e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -0.011444091796875, -0.03270137310028076, -3.123283386230469e-05, -2.86102294921875e-05, -0.004046440124511719, -0.000213623046875, -3.814697265625e-06, -3.62396240234375e-05, -2.288818359375e-05, -3.62396240234375e-05, 0.0, -0.012948989868164062, -5.290365219116211, -9.357929229736328e-05, -9.1552734375e-05, -0.00420379638671875, -2.6702880859375e-05], "choice_history": [93, 145, 230, 101, 125, "Blessing", "Of", "Kings", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Blessing", " ", "of", " ", "Kings", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 76, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 76, 109]}, {"inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n        self.target.increase_health(4)\n        self.target.increase_health(4)\n", "score": -5.950255054816125, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "BlessingOfKings", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -0.00028228759765625, -8.7738037109375e-05, -5.07818695041351e-05, -0.00023376547324005514, -0.0004332319076638669, -1.8835024093277752e-05, -2.6702880859375e-05, -4.9591064453125e-05, -8.7738037109375e-05, -7.62939453125e-06, -3.814697265625e-06, -4.506111145019531e-05, -5.7220458984375e-05, -1.1444091796875e-05, -0.000209808349609375, -3.0517578125e-05, -0.0001468658447265625, -0.0001125335693359375, -5.53131103515625e-05, -2.09808349609375e-05, -0.000179290771484375, -1.1444091796875e-05, -3.0517578125e-05, -5.602679812000133e-05, -5.829333167639561e-05, -2.0384763047331944e-05, -6.580352055607364e-05, -0.0005154609680175781, -4.768370445162873e-07, -0.000301361083984375, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.867813110351562e-06, -0.0004646778106689453, -3.814697265625e-06, -2.47955322265625e-05, -0.018194198608398438, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -1.52587890625e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -5.888938903808594e-05, -3.814697265625e-06, -0.005542397499084473, -0.0001188516616821289, -1.9073486328125e-06, -1.71661376953125e-05, -6.556510470545618e-06, -2.288818359375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0005779266357421875, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -2.682209014892578e-05, -4.768370445162873e-07, -5.775372505187988, -4.76837158203125e-05, -0.011846542358398438, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.001922607421875, -0.038671016693115234, -4.8279762268066406e-05, -2.47955322265625e-05, -0.005175590515136719, -0.0006313323974609375, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -5.91278076171875e-05, 0.0, -0.00896453857421875, -0.009854555130004883, -1.919269561767578e-05, -0.0002956390380859375, -0.0014801025390625, -0.012472152709960938, -5.7220458984375e-06, -1.9073486328125e-06, -2.09808349609375e-05, -5.91278076171875e-05, 0.0, -0.008752822875976562, -0.0068247318267822266, -8.58306884765625e-05, -4.76837158203125e-05, -0.00194549560546875, -0.009027481079101562, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-05, 0.0, -0.019931793212890625, -0.004962921142578125, -0.00026416778564453125, -3.814697265625e-05, -0.0024852752685546875, -4.1961669921875e-05], "choice_history": [93, 145, 230, 101, 125, "Blessing", "Of", "Kings", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Blessing", " ", "of", " ", "Kings", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 233, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 76, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 76, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 76, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 76, 109]}, {"inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            calculate_attack() <= 3 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n", "score": -5.952148324641712, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "BlessingOfKings", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template16"}], "ops": [{"_type": "LtE"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -0.00028228759765625, -8.7738037109375e-05, -5.07818695041351e-05, -0.00023376547324005514, -0.0004332319076638669, -1.8835024093277752e-05, -2.6702880859375e-05, -4.9591064453125e-05, -8.7738037109375e-05, -7.62939453125e-06, -3.814697265625e-06, -4.506111145019531e-05, -5.7220458984375e-05, -1.1444091796875e-05, -0.000209808349609375, -3.0517578125e-05, -0.0001468658447265625, -0.0001125335693359375, -5.53131103515625e-05, -2.09808349609375e-05, -0.000179290771484375, -1.1444091796875e-05, -3.0517578125e-05, -5.602679812000133e-05, -5.829333167639561e-05, -2.0384763047331944e-05, -6.580352055607364e-05, -0.0005154609680175781, -4.768370445162873e-07, -0.000301361083984375, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.867813110351562e-06, -0.0004646778106689453, -3.814697265625e-06, -2.47955322265625e-05, -4.061912536621094, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -4.38690185546875e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -0.00011849403381347656, -3.814697265625e-06, -0.006785869598388672, -0.0001436471939086914, -3.814697265625e-05, -0.016901016235351562, -5.7220458984375e-06, -0.0015363693237304688, -2.09808349609375e-05, -7.62939453125e-06, -4.57763671875e-05, -7.05718994140625e-05, -1.1444091796875e-05, -3.814697265625e-06, -0.019051432609558105, -4.768367489305092e-06, -0.000843048095703125, -0.0003299713134765625, -0.000102996826171875, -0.0029087066650390625, -0.0034608840942382812, -8.96453857421875e-05, -0.04760456085205078, -0.0023746490478515625, -3.814697265625e-06, 0.0, -0.001007080078125, -1.9073486328125e-06, -0.003628726117312908, -1.7404556274414062e-05, -0.12955236434936523, -1.9073486328125e-06, -3.4332275390625e-05, -0.8944988250732422, -3.24249267578125e-05, -0.24996471405029297, -0.3991880416870117, -0.002735137939453125, -1.52587890625e-05, -1.9073486328125e-06, -0.0051937103271484375, 0.0, -0.008828520774841309, -9.775161743164062e-06, -0.020912878215312958, -3.7550926208496094e-05, -5.7220458984375e-06, -1.9073486328125e-05, -4.6253204345703125e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0003452301025390625, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.811981201171875e-05, -8.344646857949556e-07, -0.0060977935791015625, -3.0517578125e-05, -4.76837158203125e-05, -3.814697265625e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.008083343505859375, -0.02953207492828369, -3.2901763916015625e-05, -2.47955322265625e-05, -0.003993034362792969, -0.00043487548828125, -5.7220458984375e-06, -4.00543212890625e-05, -2.09808349609375e-05, -3.24249267578125e-05, 0.0, -0.011682510375976562, -0.0059844255447387695, -9.655952453613281e-06, -0.0002803802490234375, -0.001354217529296875, -2.6702880859375e-05], "choice_history": [93, 145, 230, 101, 125, "Blessing", "Of", "Kings", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Blessing", " ", "of", " ", "Kings", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 18, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_attack", "<EOS>", 213, 13, 216, 72, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 76, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 76, 109]}, {"inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n", "score": -6.043741125448662, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "BlessingOfKings", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -0.00028228759765625, -8.7738037109375e-05, -5.07818695041351e-05, -0.00023376547324005514, -0.0004332319076638669, -1.8835024093277752e-05, -2.6702880859375e-05, -4.9591064453125e-05, -8.7738037109375e-05, -7.62939453125e-06, -3.814697265625e-06, -4.506111145019531e-05, -5.7220458984375e-05, -1.1444091796875e-05, -0.000209808349609375, -3.0517578125e-05, -0.0001468658447265625, -0.0001125335693359375, -5.53131103515625e-05, -2.09808349609375e-05, -0.000179290771484375, -1.1444091796875e-05, -3.0517578125e-05, -5.602679812000133e-05, -5.829333167639561e-05, -2.0384763047331944e-05, -6.580352055607364e-05, -0.0005154609680175781, -4.768370445162873e-07, -0.000301361083984375, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.867813110351562e-06, -0.0004646778106689453, -3.814697265625e-06, -2.47955322265625e-05, -0.018194198608398438, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -1.52587890625e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -5.888938903808594e-05, -3.814697265625e-06, -5.9268927574157715, -7.62939453125e-06, 0.0, -2.6702880859375e-05, -1.0848044439626392e-05, -9.5367431640625e-06, -4.57763671875e-05, -1.9073486328125e-06, -0.000583648681640625, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -2.872943878173828e-05, -3.576278118089249e-07, -0.02459239959716797, -4.76837158203125e-05, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -0.010824203491210938, -0.032773375511169434, -3.123283386230469e-05, -2.86102294921875e-05, -0.004178047180175781, -0.0002288818359375, -3.814697265625e-06, -3.4332275390625e-05, -2.47955322265625e-05, -3.62396240234375e-05, 0.0, -0.0130157470703125, -0.006195187568664551, -9.655952453613281e-06, -0.0003223419189453125, -0.0013217926025390625, -2.47955322265625e-05], "choice_history": [93, 145, 230, 101, 125, "Blessing", "Of", "Kings", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Blessing", " ", "of", " ", "Kings", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 76, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 76, 109]}, {"inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health.append(4)\n", "score": -6.1855741923893675, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "BlessingOfKings", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -0.00028228759765625, -8.7738037109375e-05, -5.07818695041351e-05, -0.00023376547324005514, -0.0004332319076638669, -1.8835024093277752e-05, -2.6702880859375e-05, -4.9591064453125e-05, -8.7738037109375e-05, -7.62939453125e-06, -3.814697265625e-06, -4.506111145019531e-05, -5.7220458984375e-05, -1.1444091796875e-05, -0.000209808349609375, -3.0517578125e-05, -0.0001468658447265625, -0.0001125335693359375, -5.53131103515625e-05, -2.09808349609375e-05, -0.000179290771484375, -1.1444091796875e-05, -3.0517578125e-05, -5.602679812000133e-05, -5.829333167639561e-05, -2.0384763047331944e-05, -6.580352055607364e-05, -0.0005154609680175781, -4.768370445162873e-07, -0.000301361083984375, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.867813110351562e-06, -0.0004646778106689453, -3.814697265625e-06, -2.47955322265625e-05, -0.018194198608398438, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -1.52587890625e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -5.888938903808594e-05, -3.814697265625e-06, -0.005542397499084473, -0.0001188516616821289, -1.9073486328125e-06, -1.71661376953125e-05, -6.556510470545618e-06, -2.288818359375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0005779266357421875, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -2.682209014892578e-05, -4.768370445162873e-07, -0.019455909729003906, -4.57763671875e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -0.011444091796875, -0.03270137310028076, -3.123283386230469e-05, -2.86102294921875e-05, -0.004046440124511719, -0.000213623046875, -3.814697265625e-06, -3.62396240234375e-05, -2.288818359375e-05, -3.62396240234375e-05, 0.0, -4.3656005859375, 0.0, -0.04463958740234375, -0.051657915115356445, 0.0, -1.0687273740768433, 0.0, -0.000476837158203125, -0.5575666427612305, -5.53131103515625e-05], "choice_history": [93, 145, 230, 101, 125, "Blessing", "Of", "Kings", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Blessing", " ", "of", " ", "Kings", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 76, 102, 128, 18, 123, 15, 116, 15, 116, 52, "increase_health", "<EOS>", "append", "<EOS>", 216, 76, 109]}, {"inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        self.target.increase_health(4)\n", "score": -6.207180160864482, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "BlessingOfKings", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -0.00028228759765625, -8.7738037109375e-05, -5.07818695041351e-05, -0.00023376547324005514, -0.0004332319076638669, -1.8835024093277752e-05, -2.6702880859375e-05, -4.9591064453125e-05, -8.7738037109375e-05, -7.62939453125e-06, -3.814697265625e-06, -4.506111145019531e-05, -5.7220458984375e-05, -1.1444091796875e-05, -0.000209808349609375, -3.0517578125e-05, -0.0001468658447265625, -0.0001125335693359375, -5.53131103515625e-05, -2.09808349609375e-05, -0.000179290771484375, -1.1444091796875e-05, -3.0517578125e-05, -5.602679812000133e-05, -5.829333167639561e-05, -2.0384763047331944e-05, -6.580352055607364e-05, -0.0005154609680175781, -4.768370445162873e-07, -0.000301361083984375, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.867813110351562e-06, -0.0004646778106689453, -3.814697265625e-06, -2.47955322265625e-05, -0.018194198608398438, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -1.52587890625e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -5.888938903808594e-05, -3.814697265625e-06, -0.005542397499084473, -0.0001188516616821289, -1.9073486328125e-06, -1.71661376953125e-05, -6.556510470545618e-06, -2.288818359375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0005779266357421875, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -2.682209014892578e-05, -4.768370445162873e-07, -0.019455909729003906, -4.57763671875e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -0.011444091796875, -5.454056262969971, -2.622604142743512e-06, -0.00028228759765625, -0.3276700973510742, -9.5367431640625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.042044639587402344, -0.000209808349609375, 0.0, -0.3116588592529297, -0.009630203247070312, -1.1444091796875e-05, -1.52587890625e-05, -0.001739501953125, -2.288818359375e-05], "choice_history": [93, 145, 230, 101, 125, "Blessing", "Of", "Kings", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Blessing", " ", "of", " ", "Kings", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 76, 109]}, {"inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health.increase_armor(4)\n", "score": -6.2306181377018675, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "BlessingOfKings", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_armor", "_type": "Attribute", "value": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -0.00028228759765625, -8.7738037109375e-05, -5.07818695041351e-05, -0.00023376547324005514, -0.0004332319076638669, -1.8835024093277752e-05, -2.6702880859375e-05, -4.9591064453125e-05, -8.7738037109375e-05, -7.62939453125e-06, -3.814697265625e-06, -4.506111145019531e-05, -5.7220458984375e-05, -1.1444091796875e-05, -0.000209808349609375, -3.0517578125e-05, -0.0001468658447265625, -0.0001125335693359375, -5.53131103515625e-05, -2.09808349609375e-05, -0.000179290771484375, -1.1444091796875e-05, -3.0517578125e-05, -5.602679812000133e-05, -5.829333167639561e-05, -2.0384763047331944e-05, -6.580352055607364e-05, -0.0005154609680175781, -4.768370445162873e-07, -0.000301361083984375, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.867813110351562e-06, -0.0004646778106689453, -3.814697265625e-06, -2.47955322265625e-05, -0.018194198608398438, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -1.52587890625e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -5.888938903808594e-05, -3.814697265625e-06, -0.005542397499084473, -0.0001188516616821289, -1.9073486328125e-06, -1.71661376953125e-05, -6.556510470545618e-06, -2.288818359375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0005779266357421875, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -2.682209014892578e-05, -4.768370445162873e-07, -0.019455909729003906, -4.57763671875e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -0.011444091796875, -0.03270137310028076, -3.123283386230469e-05, -2.86102294921875e-05, -0.004046440124511719, -0.000213623046875, -3.814697265625e-06, -3.62396240234375e-05, -2.288818359375e-05, -3.62396240234375e-05, 0.0, -4.3656005859375, 0.0, -0.04463958740234375, -0.051657915115356445, 0.0, -1.6668413877487183, 0.0, -0.000213623046875, -0.004704475402832031, -0.000110626220703125], "choice_history": [93, 145, 230, 101, 125, "Blessing", "Of", "Kings", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Blessing", " ", "of", " ", "Kings", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 76, 102, 128, 18, 123, 15, 116, 15, 116, 52, "increase_health", "<EOS>", "increase_armor", "<EOS>", 216, 76, 109]}, {"inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n", "score": -6.2403580134953245, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "BlessingOfKings", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -0.00028228759765625, -8.7738037109375e-05, -5.07818695041351e-05, -0.00023376547324005514, -0.0004332319076638669, -1.8835024093277752e-05, -2.6702880859375e-05, -4.9591064453125e-05, -8.7738037109375e-05, -7.62939453125e-06, -3.814697265625e-06, -4.506111145019531e-05, -5.7220458984375e-05, -1.1444091796875e-05, -0.000209808349609375, -3.0517578125e-05, -0.0001468658447265625, -0.0001125335693359375, -5.53131103515625e-05, -2.09808349609375e-05, -0.000179290771484375, -1.1444091796875e-05, -3.0517578125e-05, -5.602679812000133e-05, -5.829333167639561e-05, -2.0384763047331944e-05, -6.580352055607364e-05, -0.0005154609680175781, -4.768370445162873e-07, -0.000301361083984375, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.867813110351562e-06, -0.0004646778106689453, -3.814697265625e-06, -2.47955322265625e-05, -0.018194198608398438, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -1.52587890625e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -5.888938903808594e-05, -3.814697265625e-06, -0.005542397499084473, -0.0001188516616821289, -1.9073486328125e-06, -1.71661376953125e-05, -6.556510470545618e-06, -2.288818359375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0005779266357421875, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -2.682209014892578e-05, -4.768370445162873e-07, -5.880222320556641, -0.0034198760986328125, -0.00185394287109375, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -0.0016078948974609375, -0.3168224096298218, -2.8014183044433594e-05, -9.5367431640625e-06, -0.007617950439453125, -2.09808349609375e-05], "choice_history": [93, 145, 230, 101, 125, "Blessing", "Of", "Kings", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Blessing", " ", "of", " ", "Kings", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 76, 109]}, {"inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n        self.target.increase_health(4)\n", "score": -6.323371648624061, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "BlessingOfKings", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "<UNK>", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -0.00028228759765625, -8.7738037109375e-05, -5.07818695041351e-05, -0.00023376547324005514, -0.0004332319076638669, -1.8835024093277752e-05, -2.6702880859375e-05, -4.9591064453125e-05, -8.7738037109375e-05, -7.62939453125e-06, -3.814697265625e-06, -4.506111145019531e-05, -5.7220458984375e-05, -1.1444091796875e-05, -0.000209808349609375, -3.0517578125e-05, -0.0001468658447265625, -0.0001125335693359375, -5.53131103515625e-05, -2.09808349609375e-05, -0.000179290771484375, -1.1444091796875e-05, -3.0517578125e-05, -5.602679812000133e-05, -5.829333167639561e-05, -2.0384763047331944e-05, -6.580352055607364e-05, -0.0005154609680175781, -4.768370445162873e-07, -0.000301361083984375, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.867813110351562e-06, -0.0004646778106689453, -3.814697265625e-06, -2.47955322265625e-05, -0.018194198608398438, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -1.52587890625e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -5.888938903808594e-05, -3.814697265625e-06, -0.005542397499084473, -0.0001188516616821289, -1.9073486328125e-06, -1.71661376953125e-05, -6.556510470545618e-06, -2.288818359375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0005779266357421875, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -2.682209014892578e-05, -4.768370445162873e-07, -0.019455909729003906, -4.57763671875e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -0.011444091796875, -4.973928451538086, -1.9073486328125e-06, -8.0108642578125e-05, -5.340576171875e-05, -7.62939453125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.00016021728515625, -4.9591064453125e-05, -0.000293731689453125, -0.7784519195556641, 0.0, -0.15109612047672272, -0.020312394946813583, -0.000644683837890625, 0.0, -3.814697265625e-06, -0.04239463806152344, -1.71661376953125e-05, 0.0, -0.08674430847167969, -0.20719337463378906, 0.0, -1.52587890625e-05, -0.002124786376953125, -3.4332275390625e-05], "choice_history": [93, 145, 230, 101, 125, "Blessing", "Of", "Kings", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Blessing", " ", "of", " ", "Kings", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "<UNK>", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 76, 109]}, {"inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(ChangeHealth(2)))\n        self.target.increase_health(4)\n", "score": -6.384875673636316, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "BlessingOfKings", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"func": {"id": "ChangeHealth", "_type": "Name"}, "args": [{"_type": "Template12"}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -0.00028228759765625, -8.7738037109375e-05, -5.07818695041351e-05, -0.00023376547324005514, -0.0004332319076638669, -1.8835024093277752e-05, -2.6702880859375e-05, -4.9591064453125e-05, -8.7738037109375e-05, -7.62939453125e-06, -3.814697265625e-06, -4.506111145019531e-05, -5.7220458984375e-05, -1.1444091796875e-05, -0.000209808349609375, -3.0517578125e-05, -0.0001468658447265625, -0.0001125335693359375, -5.53131103515625e-05, -2.09808349609375e-05, -0.000179290771484375, -1.1444091796875e-05, -3.0517578125e-05, -5.602679812000133e-05, -5.829333167639561e-05, -2.0384763047331944e-05, -6.580352055607364e-05, -0.0005154609680175781, -4.768370445162873e-07, -0.000301361083984375, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.867813110351562e-06, -0.0004646778106689453, -3.814697265625e-06, -2.47955322265625e-05, -0.018194198608398438, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -1.52587890625e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -5.888938903808594e-05, -3.814697265625e-06, -0.005542397499084473, -0.0001188516616821289, -1.9073486328125e-06, -1.71661376953125e-05, -6.556510470545618e-06, -2.288818359375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0005779266357421875, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -2.682209014892578e-05, -4.768370445162873e-07, -0.019455909729003906, -4.57763671875e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -0.011444091796875, -4.973928451538086, -1.9073486328125e-06, -8.0108642578125e-05, -5.340576171875e-05, -7.62939453125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.00016021728515625, -4.9591064453125e-05, -0.000293731689453125, -0.6157798767089844, -7.62939453125e-06, -0.026109695434570312, -2.09808349609375e-05, -0.24309587478637695, -0.001132965087890625, 0.0, -7.62939453125e-06, -0.4230384826660156, -0.0001373291015625, 0.0, -1.1444091796875e-05, -0.011906623840332031, -2.09808349609375e-05, 0.0, -0.018655776977539062, -0.007756233215332031, -9.5367431640625e-06, -1.9073486328125e-05, -0.00281524658203125, -1.1444091796875e-05], "choice_history": [93, 145, 230, 101, 125, "Blessing", "Of", "Kings", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Blessing", " ", "of", " ", "Kings", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 58, 123, 23, 146, "Change", "Health", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 76, 109]}, {"inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die.add_buff(Buff(ChangeHealth(5)))\n        self.target.increase_health(4)\n", "score": -6.749411124571623, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "BlessingOfKings", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"func": {"id": "ChangeHealth", "_type": "Name"}, "args": [{"_type": "Template22"}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -0.00028228759765625, -8.7738037109375e-05, -5.07818695041351e-05, -0.00023376547324005514, -0.0004332319076638669, -1.8835024093277752e-05, -2.6702880859375e-05, -4.9591064453125e-05, -8.7738037109375e-05, -7.62939453125e-06, -3.814697265625e-06, -4.506111145019531e-05, -5.7220458984375e-05, -1.1444091796875e-05, -0.000209808349609375, -3.0517578125e-05, -0.0001468658447265625, -0.0001125335693359375, -5.53131103515625e-05, -2.09808349609375e-05, -0.000179290771484375, -1.1444091796875e-05, -3.0517578125e-05, -5.602679812000133e-05, -5.829333167639561e-05, -2.0384763047331944e-05, -6.580352055607364e-05, -0.0005154609680175781, -4.768370445162873e-07, -0.000301361083984375, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.867813110351562e-06, -0.0004646778106689453, -3.814697265625e-06, -2.47955322265625e-05, -0.018194198608398438, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -1.52587890625e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -5.888938903808594e-05, -3.814697265625e-06, -0.005542397499084473, -0.0001188516616821289, -1.9073486328125e-06, -1.71661376953125e-05, -6.556510470545618e-06, -2.288818359375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0005779266357421875, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -2.682209014892578e-05, -4.768370445162873e-07, -0.019455909729003906, -4.57763671875e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -4.4837646484375, -1.52587890625e-05, -0.0035247802734375, -0.3252676725387573, -3.576278118089249e-07, -0.8593287467956543, 0.0, -3.814697265625e-05, -0.0003032684326171875, -1.71661376953125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0011550188064575195, 0.0, -0.001041412353515625, -0.15819644927978516, -7.62939453125e-06, -0.00064849853515625, -7.62939453125e-06, -0.25300753116607666, -0.0013322830200195312, 0.0, -9.5367431640625e-06, -0.5436525344848633, -0.000377655029296875, -1.9073486328125e-06, -1.71661376953125e-05, -0.04443359375, -0.000179290771484375, 0.0, -0.012289047241210938, -0.009076237678527832, -5.7220458984375e-06, -7.62939453125e-06, -0.0033922195434570312, -1.33514404296875e-05], "choice_history": [93, 145, 230, 101, 125, "Blessing", "Of", "Kings", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Blessing", " ", "of", " ", "Kings", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 15, 116, 52, "die", "<EOS>", "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 58, 123, 23, 146, "Change", "Health", "<EOS>", 216, 77, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 76, 109]}, {"inferred_code": "", "score": -19.014822006225586, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -19.014814376831055], "choice_history": [93, 145, 228]}], "index": 10}
{"beams": [{"inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "score": -0.21766518775560684, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "BlessingOfMight", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template16"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -6.29425048828125e-05, -1.52587890625e-05, -0.00064849853515625, -0.000186920166015625, -1.5497102140216157e-05, -0.0006390827475115657, -0.00012087091454304755, -8.106198947643861e-06, -2.6702880859375e-05, -2.47955322265625e-05, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -1.025199526338838e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.001373291015625, -0.00018310546875, -0.0001163482666015625, -0.0003452301025390625, -3.4332275390625e-05, -6.866455078125e-05, -0.0007877349853515625, -4.00543212890625e-05, -1.33514404296875e-05, -1.5973992049111985e-05, -3.8743019104003906e-05, -5.090151171316393e-05, -8.106225868687034e-05, -0.00042748451232910156, -2.741813204920618e-06, -7.43865966796875e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, -1.1920928244535389e-07, -0.0002982616424560547, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -3.62396240234375e-05, -2.3841855067985307e-07, -0.00019276142120361328, -1.9073486328125e-06, -0.192779541015625, 0.0, -0.0001468658447265625, 0.0, -0.000133514404296875, -4.57763671875e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.000156402587890625, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -2.753734588623047e-05, -3.62396240234375e-05, -0.0019502639770507812, -5.125998541188892e-06, -3.814697265625e-06, -2.86102294921875e-05, -4.017353057861328e-05, -4.00543212890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.000362396240234375, -4.76837158203125e-05, -9.5367431640625e-05, -1.9073486328125e-06, -2.300739288330078e-05, 0.0, -0.000125885009765625, -6.4849853515625e-05, -0.00014400482177734375, -2.2411237296182662e-05, -0.0036258697509765625, -0.0001220703125, -0.000148773193359375, -2.288818359375e-05, -1.9073486328125e-05, -7.62939453125e-06, -9.5367431640625e-05, -3.814697265625e-06, -0.000171661376953125, -0.0034240474924445152, -1.4305104514278355e-06, -9.5367431640625e-06, -0.0075359344482421875, -1.1444091796875e-05], "choice_history": [93, 145, 230, 101, 125, "Blessing", "Of", "Might", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Blessing", " ", "of", " ", "Might", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 72, 109]}, {"inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            calculate_attack() <= 3 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "score": -2.225638893613869, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "BlessingOfMight", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template16"}], "ops": [{"_type": "LtE"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template16"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -6.29425048828125e-05, -1.52587890625e-05, -0.00064849853515625, -0.000186920166015625, -1.5497102140216157e-05, -0.0006390827475115657, -0.00012087091454304755, -8.106198947643861e-06, -2.6702880859375e-05, -2.47955322265625e-05, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -1.025199526338838e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.001373291015625, -0.00018310546875, -0.0001163482666015625, -0.0003452301025390625, -3.4332275390625e-05, -6.866455078125e-05, -0.0007877349853515625, -4.00543212890625e-05, -1.33514404296875e-05, -1.5973992049111985e-05, -3.8743019104003906e-05, -5.090151171316393e-05, -8.106225868687034e-05, -0.00042748451232910156, -2.741813204920618e-06, -7.43865966796875e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, -1.1920928244535389e-07, -0.0002982616424560547, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -3.62396240234375e-05, -2.3841855067985307e-07, -0.00019276142120361328, -1.9073486328125e-06, -1.7423629760742188, 0.0, -4.76837158203125e-05, 0.0, -3.62396240234375e-05, -3.814697265625e-05, -7.62939453125e-05, -1.9073486328125e-06, -0.00011444091796875, 0.0, -3.4332275390625e-05, 0.0, -3.8027756090741605e-05, -3.24249267578125e-05, -0.0026148557662963867, -3.576277322281385e-06, -0.000255584716796875, -0.00844573974609375, -5.7220458984375e-06, -0.0036411285400390625, -0.000274658203125, -0.0062732696533203125, -0.00653076171875, -0.00125885009765625, -0.000213623046875, -1.1444091796875e-05, -0.004803060088306665, -1.871571657829918e-05, -0.0015783309936523438, -0.0005550384521484375, -0.000217437744140625, -0.000148773193359375, -0.004393577575683594, -3.62396240234375e-05, -0.2387685775756836, -0.01519012451171875, -2.288818359375e-05, -9.5367431640625e-06, -0.000408172607421875, -1.52587890625e-05, -0.0033285277895629406, -4.88758041683468e-06, -0.022373178973793983, 0.0, -0.0023403167724609375, -0.03030109405517578, -7.43865966796875e-05, -0.03795337677001953, -0.039185523986816406, -0.0062465667724609375, -0.0002422332763671875, 0.0, -0.000110626220703125, 0.0, -0.0041129374876618385, -5.6028297876764555e-06, -0.014445417560636997, -6.914126061019488e-06, -1.52587890625e-05, -3.814697265625e-05, -0.00023365020751953125, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.000244140625, -3.4332275390625e-05, -4.57763671875e-05, 0.0, -4.0531158447265625e-06, 0.0, -8.20159912109375e-05, -2.86102294921875e-05, -8.285044896183535e-05, -2.1457481125253253e-05, -0.00701904296875, -0.0008411407470703125, -0.00020599365234375, -1.9073486328125e-05, -2.09808349609375e-05, -7.62939453125e-06, -0.0001163482666015625, -3.814697265625e-06, -0.0001659393310546875, -0.0032225835602730513, -1.311301275563892e-06, -7.62939453125e-06, -0.00787353515625, -1.1444091796875e-05], "choice_history": [93, 145, 230, 101, 125, "Blessing", "Of", "Might", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Blessing", " ", "of", " ", "Might", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 18, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_attack", "<EOS>", 213, 13, 216, 72, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 72, 109]}, {"inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "score": -4.127281205661312, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "BlessingOfMight", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template16"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -6.29425048828125e-05, -1.52587890625e-05, -0.00064849853515625, -0.000186920166015625, -1.5497102140216157e-05, -0.0006390827475115657, -0.00012087091454304755, -8.106198947643861e-06, -2.6702880859375e-05, -2.47955322265625e-05, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -1.025199526338838e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.001373291015625, -0.00018310546875, -0.0001163482666015625, -0.0003452301025390625, -3.4332275390625e-05, -6.866455078125e-05, -0.0007877349853515625, -4.00543212890625e-05, -1.33514404296875e-05, -1.5973992049111985e-05, -3.8743019104003906e-05, -5.090151171316393e-05, -8.106225868687034e-05, -0.00042748451232910156, -2.741813204920618e-06, -7.43865966796875e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, -1.1920928244535389e-07, -0.0002982616424560547, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -3.62396240234375e-05, -2.3841855067985307e-07, -0.00019276142120361328, -1.9073486328125e-06, -1.7423629760742188, 0.0, -4.76837158203125e-05, 0.0, -3.62396240234375e-05, -3.814697265625e-05, -7.62939453125e-05, -1.9073486328125e-06, -0.00011444091796875, 0.0, -3.4332275390625e-05, 0.0, -3.8027756090741605e-05, -3.24249267578125e-05, -0.0026148557662963867, -3.576277322281385e-06, -0.000255584716796875, -0.00844573974609375, -5.7220458984375e-06, -0.0036411285400390625, -0.000274658203125, -0.0062732696533203125, -0.00653076171875, -0.00125885009765625, -0.000213623046875, -1.1444091796875e-05, -0.004803060088306665, -1.871571657829918e-05, -0.0015783309936523438, -0.0005550384521484375, -0.000217437744140625, -0.000148773193359375, -0.004393577575683594, -3.62396240234375e-05, -1.6049556732177734, 0.0, -0.010202407836914062, 0.0, -0.009901877492666245, -5.6503813539166003e-05, -0.018395502120256424, -8.344646857949556e-07, -0.000579833984375, -0.14119243621826172, -6.67572021484375e-05, -0.04089546203613281, -0.0004138946533203125, -0.0002803802490234375, 0.0, -0.032227516174316406, 0.0, -0.005167738068848848, -1.943101960932836e-05, -0.3860471844673157, -1.978861473617144e-05, -2.288818359375e-05, -0.0003070831298828125, -0.0015106201171875, 0.0, -0.000637054443359375, 0.0, -0.0023732183035463095, -2.861022494471399e-06, -0.0033111560624092817, -4.3391319195507094e-05, -2.47955322265625e-05, -0.0002803802490234375, -0.0009658336639404297, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003795623779296875, -1.71661376953125e-05, -4.38690185546875e-05, 0.0, -3.933906555175781e-06, 0.0, -0.0001220703125, -2.09808349609375e-05, -8.237361907958984e-05, -1.5139492461457849e-05, -0.0643768310546875, -0.0002536773681640625, -0.0002193450927734375, -2.09808349609375e-05, -1.71661376953125e-05, -7.62939453125e-06, -0.000141143798828125, -1.9073486328125e-06, -0.0001926422119140625, -0.003372667822986841, -1.4305104514278355e-06, -7.62939453125e-06, -0.00792694091796875, -1.1444091796875e-05], "choice_history": [93, 145, 230, 101, 125, "Blessing", "Of", "Might", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Blessing", " ", "of", " ", "Might", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 14, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 72, 109]}, {"inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health != target.spell_targetable() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "score": -5.251036005478987, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "BlessingOfMight", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template16"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -6.29425048828125e-05, -1.52587890625e-05, -0.00064849853515625, -0.000186920166015625, -1.5497102140216157e-05, -0.0006390827475115657, -0.00012087091454304755, -8.106198947643861e-06, -2.6702880859375e-05, -2.47955322265625e-05, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -1.025199526338838e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.001373291015625, -0.00018310546875, -0.0001163482666015625, -0.0003452301025390625, -3.4332275390625e-05, -6.866455078125e-05, -0.0007877349853515625, -4.00543212890625e-05, -1.33514404296875e-05, -1.5973992049111985e-05, -3.8743019104003906e-05, -5.090151171316393e-05, -8.106225868687034e-05, -0.00042748451232910156, -2.741813204920618e-06, -7.43865966796875e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, -1.1920928244535389e-07, -0.0002982616424560547, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -3.62396240234375e-05, -2.3841855067985307e-07, -0.00019276142120361328, -1.9073486328125e-06, -1.7423629760742188, 0.0, -4.76837158203125e-05, 0.0, -3.62396240234375e-05, -3.814697265625e-05, -7.62939453125e-05, -1.9073486328125e-06, -0.00011444091796875, 0.0, -3.4332275390625e-05, 0.0, -3.8027756090741605e-05, -3.24249267578125e-05, -0.0026148557662963867, -3.576277322281385e-06, -0.000255584716796875, -0.00844573974609375, -5.7220458984375e-06, -0.0036411285400390625, -0.000274658203125, -0.0062732696533203125, -0.00653076171875, -0.00125885009765625, -0.000213623046875, -1.1444091796875e-05, -0.004803060088306665, -1.871571657829918e-05, -0.0015783309936523438, -0.0005550384521484375, -0.000217437744140625, -0.000148773193359375, -0.004393577575683594, -3.62396240234375e-05, -1.6049556732177734, 0.0, -0.010202407836914062, 0.0, -0.009901877492666245, -5.6503813539166003e-05, -0.018395502120256424, -8.344646857949556e-07, -0.000579833984375, -0.14119243621826172, -6.67572021484375e-05, -0.04089546203613281, -0.0004138946533203125, -0.0002803802490234375, 0.0, -0.032227516174316406, 0.0, -0.005167738068848848, -1.943101960932836e-05, -1.5071314573287964, -1.9311717551317997e-05, -6.4849853515625e-05, -0.0001544952392578125, -0.0027828216552734375, 0.0, -0.0014514923095703125, 0.0, -0.002130388980731368, -2.622604142743512e-06, -0.002704738639295101, -3.504698179312982e-05, -2.6702880859375e-05, -0.00018310546875, -0.0006663799285888672, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00038909912109375, -1.71661376953125e-05, -6.866455078125e-05, 0.0, -3.933906555175781e-06, 0.0, -0.0001010894775390625, -2.47955322265625e-05, -9.429454075871035e-05, -1.8954162442241795e-05, -0.06640625, -0.00023651123046875, -0.0001697540283203125, -1.9073486328125e-05, -1.52587890625e-05, -7.62939453125e-06, -0.000141143798828125, -1.9073486328125e-06, -0.0001983642578125, -0.003242968115955591, -1.1920922133867862e-06, -5.7220458984375e-06, -0.008008956909179688, -1.1444091796875e-05], "choice_history": [93, 145, 230, 101, 125, "Blessing", "Of", "Might", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Blessing", " ", "of", " ", "Might", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 14, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 72, 109]}, {"inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n", "score": -5.956449024120353, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "BlessingOfMight", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -6.29425048828125e-05, -1.52587890625e-05, -0.00064849853515625, -0.000186920166015625, -1.5497102140216157e-05, -0.0006390827475115657, -0.00012087091454304755, -8.106198947643861e-06, -2.6702880859375e-05, -2.47955322265625e-05, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -1.025199526338838e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.001373291015625, -0.00018310546875, -0.0001163482666015625, -0.0003452301025390625, -3.4332275390625e-05, -6.866455078125e-05, -0.0007877349853515625, -4.00543212890625e-05, -1.33514404296875e-05, -1.5973992049111985e-05, -3.8743019104003906e-05, -5.090151171316393e-05, -8.106225868687034e-05, -0.00042748451232910156, -2.741813204920618e-06, -7.43865966796875e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, -1.1920928244535389e-07, -0.0002982616424560547, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -3.62396240234375e-05, -2.3841855067985307e-07, -0.00019276142120361328, -1.9073486328125e-06, -0.192779541015625, 0.0, -0.0001468658447265625, 0.0, -0.000133514404296875, -4.57763671875e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.000156402587890625, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -2.753734588623047e-05, -3.62396240234375e-05, -0.0019502639770507812, -5.125998541188892e-06, -3.814697265625e-06, -2.86102294921875e-05, -4.017353057861328e-05, -4.00543212890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.000362396240234375, -4.76837158203125e-05, -9.5367431640625e-05, -1.9073486328125e-06, -2.300739288330078e-05, 0.0, -0.000125885009765625, -6.4849853515625e-05, -0.00014400482177734375, -2.2411237296182662e-05, -0.0036258697509765625, -0.0001220703125, -0.000148773193359375, -2.288818359375e-05, -1.9073486328125e-05, -7.62939453125e-06, -9.5367431640625e-05, -3.814697265625e-06, -0.000171661376953125, -0.0034240474924445152, -1.4305104514278355e-06, -9.5367431640625e-06, -5.745062828063965, -0.0012683868408203125], "choice_history": [93, 145, 230, 101, 125, "Blessing", "Of", "Might", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Blessing", " ", "of", " ", "Might", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 76, 109]}, {"inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "score": -6.050566188732169, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "BlessingOfMight", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template14"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -6.29425048828125e-05, -1.52587890625e-05, -0.00064849853515625, -0.000186920166015625, -1.5497102140216157e-05, -0.0006390827475115657, -0.00012087091454304755, -8.106198947643861e-06, -2.6702880859375e-05, -2.47955322265625e-05, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -1.025199526338838e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.001373291015625, -0.00018310546875, -0.0001163482666015625, -0.0003452301025390625, -3.4332275390625e-05, -6.866455078125e-05, -0.0007877349853515625, -4.00543212890625e-05, -1.33514404296875e-05, -1.5973992049111985e-05, -3.8743019104003906e-05, -5.090151171316393e-05, -8.106225868687034e-05, -0.00042748451232910156, -2.741813204920618e-06, -7.43865966796875e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, -1.1920928244535389e-07, -0.0002982616424560547, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -3.62396240234375e-05, -2.3841855067985307e-07, -0.00019276142120361328, -1.9073486328125e-06, -0.192779541015625, 0.0, -0.0001468658447265625, 0.0, -0.000133514404296875, -4.57763671875e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.000156402587890625, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -2.753734588623047e-05, -3.62396240234375e-05, -0.0019502639770507812, -5.125998541188892e-06, -3.814697265625e-06, -2.86102294921875e-05, -4.017353057861328e-05, -4.00543212890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.000362396240234375, -4.76837158203125e-05, -9.5367431640625e-05, -1.9073486328125e-06, -2.300739288330078e-05, 0.0, -0.000125885009765625, -6.4849853515625e-05, -0.00014400482177734375, -2.2411237296182662e-05, -0.0036258697509765625, -0.0001220703125, -0.000148773193359375, -2.288818359375e-05, -1.9073486328125e-05, -7.62939453125e-06, -9.5367431640625e-05, -3.814697265625e-06, -0.000171661376953125, -0.0034240474924445152, -1.4305104514278355e-06, -9.5367431640625e-06, -5.840442657470703, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Blessing", "Of", "Might", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Blessing", " ", "of", " ", "Might", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 70, 109]}, {"inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health != target.calculate_attack() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "score": -6.124426799200869, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "BlessingOfMight", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template16"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -6.29425048828125e-05, -1.52587890625e-05, -0.00064849853515625, -0.000186920166015625, -1.5497102140216157e-05, -0.0006390827475115657, -0.00012087091454304755, -8.106198947643861e-06, -2.6702880859375e-05, -2.47955322265625e-05, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -1.025199526338838e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.001373291015625, -0.00018310546875, -0.0001163482666015625, -0.0003452301025390625, -3.4332275390625e-05, -6.866455078125e-05, -0.0007877349853515625, -4.00543212890625e-05, -1.33514404296875e-05, -1.5973992049111985e-05, -3.8743019104003906e-05, -5.090151171316393e-05, -8.106225868687034e-05, -0.00042748451232910156, -2.741813204920618e-06, -7.43865966796875e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, -1.1920928244535389e-07, -0.0002982616424560547, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -3.62396240234375e-05, -2.3841855067985307e-07, -0.00019276142120361328, -1.9073486328125e-06, -1.7423629760742188, 0.0, -4.76837158203125e-05, 0.0, -3.62396240234375e-05, -3.814697265625e-05, -7.62939453125e-05, -1.9073486328125e-06, -0.00011444091796875, 0.0, -3.4332275390625e-05, 0.0, -3.8027756090741605e-05, -3.24249267578125e-05, -0.0026148557662963867, -3.576277322281385e-06, -0.000255584716796875, -0.00844573974609375, -5.7220458984375e-06, -0.0036411285400390625, -0.000274658203125, -0.0062732696533203125, -0.00653076171875, -0.00125885009765625, -0.000213623046875, -1.1444091796875e-05, -0.004803060088306665, -1.871571657829918e-05, -0.0015783309936523438, -0.0005550384521484375, -0.000217437744140625, -0.000148773193359375, -0.004393577575683594, -3.62396240234375e-05, -1.6049556732177734, 0.0, -0.010202407836914062, 0.0, -0.009901877492666245, -5.6503813539166003e-05, -0.018395502120256424, -8.344646857949556e-07, -0.000579833984375, -0.14119243621826172, -6.67572021484375e-05, -0.04089546203613281, -0.0004138946533203125, -0.0002803802490234375, 0.0, -0.032227516174316406, 0.0, -0.005167738068848848, -1.943101960932836e-05, -2.387629270553589, -2.3841855067985307e-07, -0.0001201629638671875, -0.0003147125244140625, -0.005859375, 0.0, -0.0010013580322265625, 0.0, -0.001908778678625822, -2.741813204920618e-06, -0.0055061569437384605, -3.5762212064582855e-05, -2.288818359375e-05, -0.0001659393310546875, -0.000762939453125, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.000423431396484375, -2.47955322265625e-05, -7.62939453125e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.0001068115234375, -2.86102294921875e-05, -9.644030797062442e-05, -1.7523643691674806e-05, -0.0538177490234375, -0.000255584716796875, -0.0001678466796875, -1.9073486328125e-05, -1.71661376953125e-05, -7.62939453125e-06, -0.0001373291015625, -1.9073486328125e-06, -0.0002002716064453125, -0.003202675376087427, -1.1920922133867862e-06, -5.7220458984375e-06, -0.007974624633789062, -1.1444091796875e-05], "choice_history": [93, 145, 230, 101, 125, "Blessing", "Of", "Might", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Blessing", " ", "of", " ", "Might", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 14, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_attack", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 72, 109]}, {"inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            calculate_attack() <= 1 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "score": -6.1625974652773365, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "BlessingOfMight", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template14"}], "ops": [{"_type": "LtE"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template16"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -6.29425048828125e-05, -1.52587890625e-05, -0.00064849853515625, -0.000186920166015625, -1.5497102140216157e-05, -0.0006390827475115657, -0.00012087091454304755, -8.106198947643861e-06, -2.6702880859375e-05, -2.47955322265625e-05, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -1.025199526338838e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.001373291015625, -0.00018310546875, -0.0001163482666015625, -0.0003452301025390625, -3.4332275390625e-05, -6.866455078125e-05, -0.0007877349853515625, -4.00543212890625e-05, -1.33514404296875e-05, -1.5973992049111985e-05, -3.8743019104003906e-05, -5.090151171316393e-05, -8.106225868687034e-05, -0.00042748451232910156, -2.741813204920618e-06, -7.43865966796875e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, -1.1920928244535389e-07, -0.0002982616424560547, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -3.62396240234375e-05, -2.3841855067985307e-07, -0.00019276142120361328, -1.9073486328125e-06, -1.7423629760742188, 0.0, -4.76837158203125e-05, 0.0, -3.62396240234375e-05, -3.814697265625e-05, -7.62939453125e-05, -1.9073486328125e-06, -0.00011444091796875, 0.0, -3.4332275390625e-05, 0.0, -3.8027756090741605e-05, -3.24249267578125e-05, -0.0026148557662963867, -3.576277322281385e-06, -0.000255584716796875, -0.00844573974609375, -5.7220458984375e-06, -0.0036411285400390625, -0.000274658203125, -0.0062732696533203125, -0.00653076171875, -0.00125885009765625, -0.000213623046875, -1.1444091796875e-05, -0.004803060088306665, -1.871571657829918e-05, -0.0015783309936523438, -0.0005550384521484375, -0.000217437744140625, -0.000148773193359375, -0.004393577575683594, -3.62396240234375e-05, -0.2387685775756836, -0.01519012451171875, -2.288818359375e-05, -9.5367431640625e-06, -0.000408172607421875, -1.52587890625e-05, -0.0033285277895629406, -4.88758041683468e-06, -0.022373178973793983, 0.0, -0.0023403167724609375, -0.03030109405517578, -7.43865966796875e-05, -3.880809783935547, -0.0013713836669921875, -0.03306770324707031, -0.000720977783203125, 0.0, -0.000102996826171875, 0.0, -0.013517133891582489, -3.8146954466355965e-06, -0.11120915412902832, -1.4305104514278355e-06, -1.71661376953125e-05, -4.9591064453125e-05, -0.0008008480072021484, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.000370025634765625, -4.38690185546875e-05, -4.38690185546875e-05, -1.9073486328125e-06, -4.0531158447265625e-06, 0.0, -9.34600830078125e-05, -4.57763671875e-05, -9.346007573185489e-05, -2.038458114839159e-05, -0.004894256591796875, -0.000827789306640625, -0.000232696533203125, -1.9073486328125e-05, -2.09808349609375e-05, -7.62939453125e-06, -0.000118255615234375, -3.814697265625e-06, -0.000171661376953125, -0.0030852542258799076, -1.311301275563892e-06, -7.62939453125e-06, -0.0078277587890625, -1.1444091796875e-05], "choice_history": [93, 145, 230, 101, 125, "Blessing", "Of", "Might", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Blessing", " ", "of", " ", "Might", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 18, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_attack", "<EOS>", 213, 13, 216, 70, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 72, 109]}, {"inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n        self.target.increase_health(3)\n", "score": -6.204226485891887, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "BlessingOfMight", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template16"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template16"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -6.29425048828125e-05, -1.52587890625e-05, -0.00064849853515625, -0.000186920166015625, -1.5497102140216157e-05, -0.0006390827475115657, -0.00012087091454304755, -8.106198947643861e-06, -2.6702880859375e-05, -2.47955322265625e-05, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -1.025199526338838e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.001373291015625, -0.00018310546875, -0.0001163482666015625, -0.0003452301025390625, -3.4332275390625e-05, -6.866455078125e-05, -0.0007877349853515625, -4.00543212890625e-05, -1.33514404296875e-05, -1.5973992049111985e-05, -3.8743019104003906e-05, -5.090151171316393e-05, -8.106225868687034e-05, -0.00042748451232910156, -2.741813204920618e-06, -7.43865966796875e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, -1.1920928244535389e-07, -0.0002982616424560547, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -3.62396240234375e-05, -2.3841855067985307e-07, -0.00019276142120361328, -1.9073486328125e-06, -0.192779541015625, 0.0, -0.0001468658447265625, 0.0, -0.000133514404296875, -4.57763671875e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.000156402587890625, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -2.753734588623047e-05, -3.62396240234375e-05, -0.0019502639770507812, -5.125998541188892e-06, -3.814697265625e-06, -2.86102294921875e-05, -4.017353057861328e-05, -4.00543212890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.000362396240234375, -4.76837158203125e-05, -9.5367431640625e-05, -1.9073486328125e-06, -2.300739288330078e-05, 0.0, -0.000125885009765625, -6.4849853515625e-05, -0.00014400482177734375, -2.2411237296182662e-05, -5.946385383605957, -3.0517578125e-05, -0.0003757476806640625, -6.29425048828125e-05, -9.918212890625e-05, -1.52587890625e-05, -0.0001468658447265625, -7.62939453125e-06, -0.00096893310546875, -0.003402112750336528, -2.145764938177308e-06, -4.9591064453125e-05, -0.0070095062255859375, -0.0065937042236328125, -8.7738037109375e-05, -9.5367431640625e-06, -4.38690185546875e-05, -0.000118255615234375, 0.0, -0.001293182373046875, -0.02070784568786621, -3.814697265625e-06, -1.33514404296875e-05, -0.014291763305664062, -4.1961669921875e-05], "choice_history": [93, 145, 230, 101, 125, "Blessing", "Of", "Might", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Blessing", " ", "of", " ", "Might", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 72, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 72, 109]}, {"inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            calculate_max_health() <= 3 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "score": -6.415873337233101, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "BlessingOfMight", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template16"}], "ops": [{"_type": "LtE"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template16"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -6.29425048828125e-05, -1.52587890625e-05, -0.00064849853515625, -0.000186920166015625, -1.5497102140216157e-05, -0.0006390827475115657, -0.00012087091454304755, -8.106198947643861e-06, -2.6702880859375e-05, -2.47955322265625e-05, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -1.025199526338838e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.001373291015625, -0.00018310546875, -0.0001163482666015625, -0.0003452301025390625, -3.4332275390625e-05, -6.866455078125e-05, -0.0007877349853515625, -4.00543212890625e-05, -1.33514404296875e-05, -1.5973992049111985e-05, -3.8743019104003906e-05, -5.090151171316393e-05, -8.106225868687034e-05, -0.00042748451232910156, -2.741813204920618e-06, -7.43865966796875e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, -1.1920928244535389e-07, -0.0002982616424560547, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -3.62396240234375e-05, -2.3841855067985307e-07, -0.00019276142120361328, -1.9073486328125e-06, -1.7423629760742188, 0.0, -4.76837158203125e-05, 0.0, -3.62396240234375e-05, -3.814697265625e-05, -7.62939453125e-05, -1.9073486328125e-06, -0.00011444091796875, 0.0, -3.4332275390625e-05, 0.0, -3.8027756090741605e-05, -3.24249267578125e-05, -0.0026148557662963867, -3.576277322281385e-06, -0.000255584716796875, -0.00844573974609375, -5.7220458984375e-06, -0.0036411285400390625, -0.000274658203125, -0.0062732696533203125, -0.00653076171875, -0.00125885009765625, -0.000213623046875, -1.1444091796875e-05, -0.004803060088306665, -1.871571657829918e-05, -0.0015783309936523438, -0.0005550384521484375, -0.000217437744140625, -0.000148773193359375, -0.004393577575683594, -3.62396240234375e-05, -0.2387685775756836, -0.01519012451171875, -2.288818359375e-05, -9.5367431640625e-06, -0.000408172607421875, -1.52587890625e-05, -0.0033285277895629406, -4.88758041683468e-06, -4.196893692016602, -2.3841855067985307e-07, -0.0011119842529296875, -0.0640869140625, -7.43865966796875e-05, -0.04721641540527344, -0.011072158813476562, -0.0061397552490234375, -0.0001010894775390625, 0.0, -0.000102996826171875, 0.0, -0.0036661443300545216, -6.318082796497038e-06, -0.0170894768089056, -7.271752110682428e-06, -1.1444091796875e-05, -3.62396240234375e-05, -0.00026226043701171875, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.000240325927734375, -3.0517578125e-05, -4.1961669921875e-05, 0.0, -4.0531158447265625e-06, 0.0, -7.82012939453125e-05, -2.86102294921875e-05, -8.082389831542969e-05, -2.253034290333744e-05, -0.0070819854736328125, -0.000843048095703125, -0.000209808349609375, -1.9073486328125e-05, -2.09808349609375e-05, -7.62939453125e-06, -0.0001163482666015625, -3.814697265625e-06, -0.0001659393310546875, -0.003239511279389262, -1.4305104514278355e-06, -7.62939453125e-06, -0.007846832275390625, -1.1444091796875e-05], "choice_history": [93, 145, 230, 101, 125, "Blessing", "Of", "Might", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Blessing", " ", "of", " ", "Might", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 18, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 213, 13, 216, 72, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 72, 109]}, {"inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            calculate_attack() <= 0 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "score": -6.455078161973653, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "BlessingOfMight", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template31"}], "ops": [{"_type": "LtE"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template16"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -6.29425048828125e-05, -1.52587890625e-05, -0.00064849853515625, -0.000186920166015625, -1.5497102140216157e-05, -0.0006390827475115657, -0.00012087091454304755, -8.106198947643861e-06, -2.6702880859375e-05, -2.47955322265625e-05, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -1.025199526338838e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.001373291015625, -0.00018310546875, -0.0001163482666015625, -0.0003452301025390625, -3.4332275390625e-05, -6.866455078125e-05, -0.0007877349853515625, -4.00543212890625e-05, -1.33514404296875e-05, -1.5973992049111985e-05, -3.8743019104003906e-05, -5.090151171316393e-05, -8.106225868687034e-05, -0.00042748451232910156, -2.741813204920618e-06, -7.43865966796875e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, -1.1920928244535389e-07, -0.0002982616424560547, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -3.62396240234375e-05, -2.3841855067985307e-07, -0.00019276142120361328, -1.9073486328125e-06, -1.7423629760742188, 0.0, -4.76837158203125e-05, 0.0, -3.62396240234375e-05, -3.814697265625e-05, -7.62939453125e-05, -1.9073486328125e-06, -0.00011444091796875, 0.0, -3.4332275390625e-05, 0.0, -3.8027756090741605e-05, -3.24249267578125e-05, -0.0026148557662963867, -3.576277322281385e-06, -0.000255584716796875, -0.00844573974609375, -5.7220458984375e-06, -0.0036411285400390625, -0.000274658203125, -0.0062732696533203125, -0.00653076171875, -0.00125885009765625, -0.000213623046875, -1.1444091796875e-05, -0.004803060088306665, -1.871571657829918e-05, -0.0015783309936523438, -0.0005550384521484375, -0.000217437744140625, -0.000148773193359375, -0.004393577575683594, -3.62396240234375e-05, -0.2387685775756836, -0.01519012451171875, -2.288818359375e-05, -9.5367431640625e-06, -0.000408172607421875, -1.52587890625e-05, -0.0033285277895629406, -4.88758041683468e-06, -0.022373178973793983, 0.0, -0.0023403167724609375, -0.03030109405517578, -7.43865966796875e-05, -4.280819892883301, -0.00324249267578125, -0.005581855773925781, -0.0001220703125, 0.0, -6.103515625e-05, 0.0, -0.004424911458045244, -7.033342626527883e-06, -0.03765583038330078, -3.576277322281385e-06, -1.71661376953125e-05, -4.00543212890625e-05, -0.0008275508880615234, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.000316619873046875, -4.1961669921875e-05, -3.24249267578125e-05, 0.0, -4.0531158447265625e-06, 0.0, -8.20159912109375e-05, -4.00543212890625e-05, -8.726119267521426e-05, -1.9907753085135482e-05, -0.0062503814697265625, -0.0008373260498046875, -0.0002269744873046875, -1.9073486328125e-05, -2.09808349609375e-05, -7.62939453125e-06, -0.000118255615234375, -3.814697265625e-06, -0.000171661376953125, -0.0031613099854439497, -1.311301275563892e-06, -7.62939453125e-06, -0.007833480834960938, -1.1444091796875e-05], "choice_history": [93, 145, 230, 101, 125, "Blessing", "Of", "Might", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Blessing", " ", "of", " ", "Might", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 18, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_attack", "<EOS>", 213, 13, 216, 83, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 72, 109]}, {"inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "score": -6.784914843480202, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "BlessingOfMight", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template16"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -6.29425048828125e-05, -1.52587890625e-05, -0.00064849853515625, -0.000186920166015625, -1.5497102140216157e-05, -0.0006390827475115657, -0.00012087091454304755, -8.106198947643861e-06, -2.6702880859375e-05, -2.47955322265625e-05, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -1.025199526338838e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.001373291015625, -0.00018310546875, -0.0001163482666015625, -0.0003452301025390625, -3.4332275390625e-05, -6.866455078125e-05, -0.0007877349853515625, -4.00543212890625e-05, -1.33514404296875e-05, -1.5973992049111985e-05, -3.8743019104003906e-05, -5.090151171316393e-05, -8.106225868687034e-05, -0.00042748451232910156, -2.741813204920618e-06, -7.43865966796875e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, -1.1920928244535389e-07, -0.0002982616424560547, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -3.62396240234375e-05, -2.3841855067985307e-07, -0.00019276142120361328, -1.9073486328125e-06, -0.192779541015625, 0.0, -0.0001468658447265625, 0.0, -0.000133514404296875, -4.57763671875e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.000156402587890625, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -2.753734588623047e-05, -3.62396240234375e-05, -6.568946838378906, -7.748603820800781e-06, -3.814697265625e-06, -0.000110626220703125, -4.017353057861328e-05, -6.29425048828125e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.0004100799560546875, -5.340576171875e-05, -7.05718994140625e-05, -1.9073486328125e-06, -2.110004425048828e-05, 0.0, -0.000125885009765625, -6.29425048828125e-05, -0.00014781951904296875, -2.4318585928995162e-05, -0.003734588623046875, -0.0001068115234375, -0.0001392364501953125, -2.47955322265625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.000171661376953125, -0.0034114113077521324, -1.311301275563892e-06, -9.5367431640625e-06, -0.0075664520263671875, -1.1444091796875e-05], "choice_history": [93, 145, 230, 101, 125, "Blessing", "Of", "Might", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Blessing", " ", "of", " ", "Might", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 72, 109]}, {"inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n", "score": -7.156715862194083, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "BlessingOfMight", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -6.29425048828125e-05, -1.52587890625e-05, -0.00064849853515625, -0.000186920166015625, -1.5497102140216157e-05, -0.0006390827475115657, -0.00012087091454304755, -8.106198947643861e-06, -2.6702880859375e-05, -2.47955322265625e-05, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -1.025199526338838e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.001373291015625, -0.00018310546875, -0.0001163482666015625, -0.0003452301025390625, -3.4332275390625e-05, -6.866455078125e-05, -0.0007877349853515625, -4.00543212890625e-05, -1.33514404296875e-05, -1.5973992049111985e-05, -3.8743019104003906e-05, -5.090151171316393e-05, -8.106225868687034e-05, -0.00042748451232910156, -2.741813204920618e-06, -7.43865966796875e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, -1.1920928244535389e-07, -0.0002982616424560547, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -3.62396240234375e-05, -2.3841855067985307e-07, -0.00019276142120361328, -1.9073486328125e-06, -0.192779541015625, 0.0, -0.0001468658447265625, 0.0, -0.000133514404296875, -4.57763671875e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.000156402587890625, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -2.753734588623047e-05, -3.62396240234375e-05, -0.0019502639770507812, -5.125998541188892e-06, -3.814697265625e-06, -2.86102294921875e-05, -4.017353057861328e-05, -4.00543212890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.000362396240234375, -4.76837158203125e-05, -9.5367431640625e-05, -1.9073486328125e-06, -2.300739288330078e-05, 0.0, -0.000125885009765625, -6.4849853515625e-05, -0.00014400482177734375, -2.2411237296182662e-05, -0.0036258697509765625, -0.0001220703125, -0.000148773193359375, -2.288818359375e-05, -1.9073486328125e-05, -7.62939453125e-06, -9.5367431640625e-05, -3.814697265625e-06, -0.000171661376953125, -0.0034240474924445152, -1.4305104514278355e-06, -9.5367431640625e-06, -6.94659423828125, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Blessing", "Of", "Might", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Blessing", " ", "of", " ", "Might", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 69, 109]}, {"inferred_code": "", "score": -20.08226776123047, "model_output": {"_type": "Module", "body": []}, "score_history": [-4.1961669921875e-05, -6.29425048828125e-05, -20.082162857055664], "choice_history": [93, 145, 228]}, {"inferred_code": "", "score": -22.39324951171875, "model_output": {"_type": "Module", "body": [{"_type": "Template13_stmt_seq"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -6.29425048828125e-05, -1.52587890625e-05, -14.47707748413086, -7.916051864624023], "choice_history": [93, 145, 230, 109, 109]}], "index": 11}
{"beams": [{"inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -0.005137899678288704, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "BloodfenRaptor", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template12"}, {"_type": "Template7"}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0001472126314183697, -0.00013922702055424452, -1.2755313036905136e-05, -9.5367431640625e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -5.9604644775390625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-05, -2.09808349609375e-05, -1.1444091796875e-05, -0.000324249267578125, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -3.4332275390625e-05, -1.5258672647178173e-05, -9.894371032714844e-06, -2.384185791015625e-06, -3.814697265625e-06, -2.6702880859375e-05, -8.392333984375e-05, -0.00022125244140625, 0.0, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.0017833709716796875, 0.0, -0.0001697540283203125, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -7.62939453125e-06, 0.0, -0.0006160736083984375, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.4849853515625e-05, -7.62939453125e-06, -0.0001163482666015625, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.0001010894775390625, -5.53131103515625e-05, -0.0007646082667633891, -8.344646857949556e-07, -5.722034256905317e-05, 0.0, 0.0], "choice_history": [93, 145, 230, 101, 125, "Bloodfen", "Raptor", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Bloodfen", " ", "Raptor", "<EOS>", 69, 89, 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.minion_type, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -6.84896383605394, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "BloodfenRaptor", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template12"}, {"_type": "Template7"}, {"attr": "minion_type", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0001472126314183697, -0.00013922702055424452, -1.2755313036905136e-05, -9.5367431640625e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -5.9604644775390625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-05, -2.09808349609375e-05, -1.1444091796875e-05, -0.000324249267578125, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -3.4332275390625e-05, -1.5258672647178173e-05, -9.894371032714844e-06, -2.384185791015625e-06, -3.814697265625e-06, -2.6702880859375e-05, -8.392333984375e-05, -0.00022125244140625, 0.0, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -6.845439910888672, -3.814697265625e-06, -0.0003566741943359375, 0.0, -5.340576171875e-05, 0.0, 0.0, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, 0.0, -0.00055694580078125, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -6.67572021484375e-05, -7.62939453125e-06, -0.0001220703125, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.0001010894775390625, -5.340576171875e-05, -0.0007566213025711477, -8.344646857949556e-07, -5.722034256905317e-05, 0.0, 0.0], "choice_history": [93, 145, 230, 101, 125, "Bloodfen", "Raptor", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Bloodfen", " ", "Raptor", "<EOS>", 69, 89, 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "minion_type", "<EOS>", 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -7.195549586779634, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "BloodfenRaptor", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template12"}, {"_type": "Template7"}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0001472126314183697, -0.00013922702055424452, -1.2755313036905136e-05, -9.5367431640625e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -5.9604644775390625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-05, -2.09808349609375e-05, -1.1444091796875e-05, -0.000324249267578125, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -3.4332275390625e-05, -1.5258672647178173e-05, -9.894371032714844e-06, -2.384185791015625e-06, -3.814697265625e-06, -2.6702880859375e-05, -8.392333984375e-05, -0.00022125244140625, 0.0, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.0017833709716796875, 0.0, -0.0001697540283203125, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -7.62939453125e-06, 0.0, -0.0006160736083984375, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.4849853515625e-05, -7.62939453125e-06, -0.0001163482666015625, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.0001010894775390625, -5.53131103515625e-05, -7.191190242767334, 0.0, -4.4107408029958606e-05, 0.0, 0.0], "choice_history": [93, 145, 230, 101, 125, "Bloodfen", "Raptor", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Bloodfen", " ", "Raptor", "<EOS>", 69, 89, 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -8.148576477330266, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "BloodfenRaptor", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template12"}, {"_type": "Template7"}, {"attr": "EPIC", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0001472126314183697, -0.00013922702055424452, -1.2755313036905136e-05, -9.5367431640625e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -5.9604644775390625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-05, -2.09808349609375e-05, -1.1444091796875e-05, -0.000324249267578125, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -3.4332275390625e-05, -1.5258672647178173e-05, -9.894371032714844e-06, -2.384185791015625e-06, -3.814697265625e-06, -2.6702880859375e-05, -8.392333984375e-05, -0.00022125244140625, 0.0, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -8.145017623901367, -1.9073486328125e-06, -0.0003509521484375, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, 0.0, -0.000614166259765625, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.05718994140625e-05, -7.62939453125e-06, -0.0001201629638671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.0001010894775390625, -5.53131103515625e-05, -0.0007704495219513774, -8.344646857949556e-07, -5.7339551858603954e-05, 0.0, 0.0], "choice_history": [93, 145, 230, 101, 125, "Bloodfen", "Raptor", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Bloodfen", " ", "Raptor", "<EOS>", 69, 89, 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -8.202410557926328, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "BloodfenRaptor", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template12"}, {"_type": "Template7"}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0001472126314183697, -0.00013922702055424452, -1.2755313036905136e-05, -9.5367431640625e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -5.9604644775390625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-05, -2.09808349609375e-05, -1.1444091796875e-05, -8.19477367401123, -3.814697265625e-06, -0.0006046295166015625, 0.0, -3.24249267578125e-05, -1.7881249732454307e-05, -1.0013580322265625e-05, -2.622604142743512e-06, -3.814697265625e-06, -5.14984130859375e-05, -0.0001087188720703125, -0.000244140625, 0.0, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.001621246337890625, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.000186920166015625, -1.9073486328125e-06, -0.0006999969482421875, -1.71661376953125e-05, -0.0001010894775390625, -9.5367431640625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.001434326171875, -4.9591064453125e-05, -0.0017211436061188579, -4.768370445162873e-07, -0.00012457351840566844, 0.0, 0.0], "choice_history": [93, 145, 230, 101, 125, "Bloodfen", "Raptor", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Bloodfen", " ", "Raptor", "<EOS>", 69, 89, 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.HUNTER)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -8.26614902333904, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "BloodfenRaptor", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template12"}, {"_type": "Template7"}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0001472126314183697, -0.00013922702055424452, -1.2755313036905136e-05, -9.5367431640625e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -5.9604644775390625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-05, -2.09808349609375e-05, -1.1444091796875e-05, -0.000324249267578125, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -3.4332275390625e-05, -1.5258672647178173e-05, -9.894371032714844e-06, -2.384185791015625e-06, -3.814697265625e-06, -2.6702880859375e-05, -8.392333984375e-05, -0.00022125244140625, 0.0, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.0017833709716796875, 0.0, -0.0001697540283203125, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -7.62939453125e-06, 0.0, -8.261576652526855, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -0.000118255615234375, -3.814697265625e-06, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0001049041748046875, -5.14984130859375e-05, -0.0008267163066193461, -9.536738616588991e-07, -5.698192762793042e-05, 0.0, 0.0], "choice_history": [93, 145, 230, 101, 125, "Bloodfen", "Raptor", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Bloodfen", " ", "Raptor", "<EOS>", 69, 89, 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "HUNTER", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -8.637358048769443, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "BloodfenRaptor", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0001472126314183697, -0.00013922702055424452, -1.2755313036905136e-05, -9.5367431640625e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -5.9604644775390625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-05, -2.09808349609375e-05, -1.1444091796875e-05, -0.000324249267578125, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -3.4332275390625e-05, -1.5258672647178173e-05, -9.894371032714844e-06, -2.384185791015625e-06, -3.814697265625e-06, -2.6702880859375e-05, -8.392333984375e-05, -8.634075164794922, -0.0003719329833984375, 0.0, -5.340576171875e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -0.000667572021484375, 0.0, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -7.05718994140625e-05, -1.1444091796875e-05, -9.918212890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -3.62396240234375e-05, -5.7220458984375e-06, 0.0, -0.0001392364501953125, -4.76837158203125e-05, -0.0006352662458084524, -8.344646857949556e-07, -5.9604521084111184e-05, 0.0, 0.0], "choice_history": [93, 145, 230, 101, 125, "Bloodfen", "Raptor", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Bloodfen", " ", "Raptor", "<EOS>", 69, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class <UNK>Raptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -8.828666796360835, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "<UNK>Raptor", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template12"}, {"_type": "Template7"}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -3.814697265625e-06, -8.823676109313965, -0.00013922702055424452, -1.2755313036905136e-05, -9.5367431640625e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -5.9604644775390625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-05, -2.09808349609375e-05, -1.1444091796875e-05, -0.000324249267578125, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -3.4332275390625e-05, -1.5258672647178173e-05, -9.894371032714844e-06, -2.384185791015625e-06, -3.814697265625e-06, -2.6702880859375e-05, -8.392333984375e-05, -0.00022125244140625, 0.0, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.0017833709716796875, 0.0, -0.0001697540283203125, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -7.62939453125e-06, 0.0, -0.0006160736083984375, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.4849853515625e-05, -7.62939453125e-06, -0.0001163482666015625, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.0001010894775390625, -5.53131103515625e-05, -0.0007646082667633891, -8.344646857949556e-07, -5.722034256905317e-05, 0.0, 0.0], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Raptor", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Bloodfen", " ", "Raptor", "<EOS>", 69, 89, 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class Bloodfen<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -8.903536308460957, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Bloodfen<UNK>", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template12"}, {"_type": "Template7"}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0001472126314183697, -8.898537635803223, -1.2755313036905136e-05, -9.5367431640625e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -5.9604644775390625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-05, -2.09808349609375e-05, -1.1444091796875e-05, -0.000324249267578125, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -3.4332275390625e-05, -1.5258672647178173e-05, -9.894371032714844e-06, -2.384185791015625e-06, -3.814697265625e-06, -2.6702880859375e-05, -8.392333984375e-05, -0.00022125244140625, 0.0, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.0017833709716796875, 0.0, -0.0001697540283203125, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -7.62939453125e-06, 0.0, -0.0006160736083984375, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.4849853515625e-05, -7.62939453125e-06, -0.0001163482666015625, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.0001010894775390625, -5.53131103515625e-05, -0.0007646082667633891, -8.344646857949556e-07, -5.722034256905317e-05, 0.0, 0.0], "choice_history": [93, 145, 230, 101, 125, "Bloodfen", "<UNK>", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Bloodfen", " ", "Raptor", "<EOS>", 69, 89, 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST, minion_type=\n            MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -9.299925544807024, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "BloodfenRaptor", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template12"}, {"_type": "Template7"}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0001472126314183697, -0.00013922702055424452, -1.2755313036905136e-05, -9.5367431640625e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -5.9604644775390625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-05, -2.09808349609375e-05, -1.1444091796875e-05, -0.000324249267578125, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -3.4332275390625e-05, -1.5258672647178173e-05, -9.894371032714844e-06, -2.384185791015625e-06, -3.814697265625e-06, -2.6702880859375e-05, -8.392333984375e-05, -0.00022125244140625, 0.0, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.0017833709716796875, 0.0, -8.71284008026123, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.0006122589111328125, 0.0, -1.9073486328125e-06, -0.5501232147216797, 0.0, -0.0308074951171875, 0.0, -3.814697265625e-06, 0.0, -2.6702880859375e-05, 0.0, -0.001087188720703125, 0.0, -7.62939453125e-06, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -0.0001125335693359375, -1.9073486328125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -5.53131103515625e-05, -0.0009690520819276571, -1.0728830375228426e-06, -5.8769968745764345e-05, 0.0, 0.0], "choice_history": [93, 145, 230, 101, 125, "Bloodfen", "Raptor", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Bloodfen", " ", "Raptor", "<EOS>", 69, 89, 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.ROGUE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -9.516656735758033, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "BloodfenRaptor", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template12"}, {"_type": "Template7"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0001472126314183697, -0.00013922702055424452, -1.2755313036905136e-05, -9.5367431640625e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -5.9604644775390625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-05, -2.09808349609375e-05, -1.1444091796875e-05, -0.000324249267578125, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -3.4332275390625e-05, -1.5258672647178173e-05, -9.894371032714844e-06, -2.384185791015625e-06, -3.814697265625e-06, -2.6702880859375e-05, -8.392333984375e-05, -0.00022125244140625, 0.0, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -9.51321029663086, -1.9073486328125e-06, -0.0001773834228515625, 0.0, -0.0001277923583984375, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -0.0006427764892578125, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -7.43865966796875e-05, -7.62939453125e-06, -0.000118255615234375, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -9.918212890625e-05, -5.340576171875e-05, -0.0007137059583328664, -7.152555099310121e-07, -5.900848191231489e-05, 0.0, 0.0], "choice_history": [93, 145, 230, 101, 125, "Bloodfen", "Raptor", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Bloodfen", " ", "Raptor", "<EOS>", 69, 89, 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "ROGUE", "<EOS>", 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.taunt)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -9.75428889113266, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "BloodfenRaptor", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template12"}, {"_type": "Template7"}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "taunt", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0001472126314183697, -0.00013922702055424452, -1.2755313036905136e-05, -9.5367431640625e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -5.9604644775390625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-05, -2.09808349609375e-05, -1.1444091796875e-05, -0.000324249267578125, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -3.4332275390625e-05, -1.5258672647178173e-05, -9.894371032714844e-06, -2.384185791015625e-06, -3.814697265625e-06, -2.6702880859375e-05, -8.392333984375e-05, -0.00022125244140625, 0.0, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.0017833709716796875, 0.0, -0.0001697540283203125, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -7.62939453125e-06, 0.0, -9.749771118164062, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -3.24249267578125e-05, -9.5367431640625e-06, -0.00011444091796875, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -0.000102996826171875, -5.340576171875e-05, -0.0007976292399689555, -8.344646857949556e-07, -5.638589209411293e-05, 0.0, 0.0], "choice_history": [93, 145, 230, 101, 125, "Bloodfen", "Raptor", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Bloodfen", " ", "Raptor", "<EOS>", 69, 89, 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "taunt", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2, taunt=True)\n", "score": -9.932968715226536, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "BloodfenRaptor", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template12"}, {"_type": "Template7"}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template16"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0001472126314183697, -0.00013922702055424452, -1.2755313036905136e-05, -9.5367431640625e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -5.9604644775390625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-05, -2.09808349609375e-05, -1.1444091796875e-05, -0.000324249267578125, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -3.4332275390625e-05, -1.5258672647178173e-05, -9.894371032714844e-06, -2.384185791015625e-06, -3.814697265625e-06, -2.6702880859375e-05, -8.392333984375e-05, -0.00022125244140625, 0.0, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.0017833709716796875, 0.0, -0.0001697540283203125, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -7.62939453125e-06, 0.0, -0.0006160736083984375, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.4849853515625e-05, -7.62939453125e-06, -0.0001163482666015625, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -9.767095565795898, -1.9073486328125e-06, -5.7220458984375e-06, -0.001308441162109375, -4.1961669921875e-05, -4.00543212890625e-05, -0.0003604888916015625, -9.1552734375e-05, -5.91278076171875e-05, -1.9073486328125e-06, -0.15958964824676514, -1.9073486328125e-06, -0.0001125335693359375, -4.57763671875e-05, -3.743171691894531e-05, -5.960462772236497e-07, -1.52587890625e-05], "choice_history": [93, 145, 230, 101, 125, "Bloodfen", "Raptor", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Bloodfen", " ", "Raptor", "<EOS>", 69, 89, 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 72, 69, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "", "score": -20.502681732177734, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, -3.814697265625e-06, -20.50267791748047], "choice_history": [93, 145, 228]}, {"inferred_code": "", "score": -27.1622953414917, "model_output": {"_type": "Module", "body": [{"_type": "Template13_stmt_seq"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -1.33514404296875e-05, -17.612071990966797, -9.550206184387207], "choice_history": [93, 145, 230, 109, 109]}], "index": 12}
{"beams": [{"inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n", "score": -0.15323622983669338, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Bloodlust", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Template22"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"_type": "Template16"}], "_type": "Call"}}], "iter": {"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.152557373046875e-07, -1.919264832395129e-05, -1.9073486328125e-06, -0.0001163482666015625, -0.000152587890625, -1.1444091796875e-05, -2.09808349609375e-05, -1.2516970855358522e-05, 0.0, -3.814697265625e-06, -0.000244140625, -1.9073486328125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.0001010894775390625, -2.09808349609375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.311301275563892e-06, -0.0001049041748046875, -7.82012939453125e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0006510019302368164, 0.0, -4.57763671875e-05, -7.62939453125e-06, 0.0, -5.7220458984375e-06, 0.0, -6.29425048828125e-05, -0.000164031982421875, -0.000446319580078125, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -2.6941299438476562e-05, 0.0, -3.62396240234375e-05, -9.5367431640625e-06, -5.221366882324219e-05, -9.179100743494928e-06, -0.047217369079589844, -0.00038909912109375, -0.07631969451904297, -0.0013866424560546875, -0.001125335693359375, -6.4849853515625e-05, 0.0, -0.00113677978515625, -0.0005702972412109375, -1.9073486328125e-06, -0.0003528594970703125, -0.005268096923828125, -3.814697265625e-06, -8.58306884765625e-05, -0.0002956390380859375, -2.6702880859375e-05, -3.814697265625e-06, -0.0007572174072265625, -0.010380943305790424, -7.05718994140625e-05, -3.814697265625e-06, -0.005039215087890625, -1.52587890625e-05], "choice_history": [93, 145, 230, 101, 125, "Bloodlust", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Bloodlust", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 41, 15, 116, 32, "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "change_temp_attack", "<EOS>", 216, 72, 109]}, {"inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n        player.hero.change_temp_attack(3)\n", "score": -3.52342346073965, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Bloodlust", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Template22"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"_type": "Template16"}], "_type": "Call"}}], "iter": {"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}}, {"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template16"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.152557373046875e-07, -1.919264832395129e-05, -1.9073486328125e-06, -0.0001163482666015625, -0.000152587890625, -1.1444091796875e-05, -2.09808349609375e-05, -1.2516970855358522e-05, 0.0, -3.814697265625e-06, -0.000244140625, -1.9073486328125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.0001010894775390625, -2.09808349609375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.311301275563892e-06, -0.0001049041748046875, -7.82012939453125e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0006510019302368164, 0.0, -4.57763671875e-05, -7.62939453125e-06, 0.0, -5.7220458984375e-06, 0.0, -6.29425048828125e-05, -0.000164031982421875, -0.000446319580078125, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -2.6941299438476562e-05, 0.0, -3.62396240234375e-05, -9.5367431640625e-06, -5.221366882324219e-05, -9.179100743494928e-06, -3.238783836364746, -1.71661376953125e-05, -0.16804027557373047, -0.0008697509765625, -0.00040435791015625, -0.0022373199462890625, -5.7220458984375e-06, -0.000789642333984375, -0.0009794235229492188, 0.0, -0.0003757476806640625, -0.000514984130859375, -1.9073486328125e-06, -6.4849853515625e-05, -0.0004444122314453125, -4.9591064453125e-05, -1.9073486328125e-06, -0.000560760498046875, -0.0149080166593194, -7.05718994140625e-05, -3.814697265625e-06, -0.0067996978759765625, -0.001438140869140625, -0.000110626220703125, -0.0003299713134765625, -0.0001049041748046875, -4.00543212890625e-05, 0.0, -0.0543365478515625, 0.0, -0.0015392303466796875, -0.0010094314347952604, -0.00010228136670775712, -0.012599706649780273, -1.9073486328125e-06, -1.9073486328125e-06, -0.01316070556640625, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Bloodlust", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Bloodlust", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 103, 129, 41, 15, 116, 32, "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "change_temp_attack", "<EOS>", 216, 72, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "change_temp_attack", "<EOS>", 216, 72, 109]}, {"inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.cards_played > 0:\n            player.hero.change_temp_attack(3)\n        else:\n            player.hero.change_temp_attack(3)\n", "score": -4.663328542888841, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Bloodlust", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Template22"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "If", "test": {"left": {"attr": "cards_played", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Compare", "comparators": [{"_type": "Template31"}], "ops": [{"_type": "Gt"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template16"}], "_type": "Call"}}], "body": [{"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template16"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.152557373046875e-07, -1.919264832395129e-05, -1.9073486328125e-06, -0.0001163482666015625, -0.000152587890625, -1.1444091796875e-05, -2.09808349609375e-05, -1.2516970855358522e-05, 0.0, -3.814697265625e-06, -0.000244140625, -1.9073486328125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.0001010894775390625, -2.09808349609375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.311301275563892e-06, -0.0001049041748046875, -7.82012939453125e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0006510019302368164, 0.0, -4.57763671875e-05, -7.62939453125e-06, 0.0, -5.7220458984375e-06, 0.0, -6.29425048828125e-05, -0.000164031982421875, -0.000446319580078125, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -2.6941299438476562e-05, 0.0, -3.62396240234375e-05, -9.5367431640625e-06, -5.221366882324219e-05, -9.179100743494928e-06, -0.047217369079589844, -0.00038909912109375, -2.6404027938842773, -0.41767311096191406, -0.0030698776245117188, -5.7220458984375e-05, -0.0014123916625976562, 0.0, -0.0043163299560546875, -0.44363176822662354, -1.1920928244535389e-07, -4.1961669921875e-05, -0.02206897735595703, -0.000446319580078125, -0.0004100799560546875, -7.05718994140625e-05, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.000240325927734375, -3.814697265625e-06, -0.2957725524902344, 0.0, -0.0011081695556640625, -0.03303823620080948, -0.0006330683827400208, -0.027748847380280495, 0.0, -2.09808349609375e-05, -0.002613067626953125, -0.0004520416259765625, -0.0009365081787109375, -2.288818359375e-05, -0.00034332275390625, -9.5367431640625e-06, -8.7738037109375e-05, 0.0, -0.6606216430664062, 0.0, -0.0002765655517578125, -0.02112686075270176, -0.0005857698852196336, -0.02849576435983181, 0.0, -3.814697265625e-06, -0.0052051544189453125, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Bloodlust", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Bloodlust", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 105, 134, 19, 126, 15, 116, 32, "cards_played", "<EOS>", 213, 7, 216, 83, 229, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "change_temp_attack", "<EOS>", 216, 72, 229, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "change_temp_attack", "<EOS>", 216, 72, 109]}, {"inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(3)\n        player.hero.change_temp_attack(3)\n", "score": -5.432245399939347, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Bloodlust", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Template22"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template16"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template16"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.152557373046875e-07, -1.919264832395129e-05, -1.9073486328125e-06, -0.0001163482666015625, -0.000152587890625, -1.1444091796875e-05, -2.09808349609375e-05, -1.2516970855358522e-05, 0.0, -3.814697265625e-06, -0.000244140625, -1.9073486328125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.0001010894775390625, -2.09808349609375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.311301275563892e-06, -0.0001049041748046875, -7.82012939453125e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0006510019302368164, 0.0, -4.57763671875e-05, -7.62939453125e-06, 0.0, -5.7220458984375e-06, 0.0, -6.29425048828125e-05, -0.000164031982421875, -0.000446319580078125, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -2.6941299438476562e-05, 0.0, -3.62396240234375e-05, -9.5367431640625e-06, -5.221366882324219e-05, -9.179100743494928e-06, -3.238783836364746, -1.71661376953125e-05, -1.9508962631225586, -0.0001583099365234375, -0.0004405975341796875, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.01737689971923828, 0.0, -0.025003433227539062, -0.005773783195763826, -8.594712562626228e-05, -0.014821185730397701, -5.841255187988281e-06, -2.6702880859375e-05, -0.0039005279541015625, -0.046103477478027344, -6.4849853515625e-05, -0.0006656646728515625, -7.82012939453125e-05, -6.29425048828125e-05, 0.0, -0.04854774475097656, 0.0, -0.0008554458618164062, -0.0022493775468319654, -0.00011932565394090489, -0.06421196460723877, 0.0, -3.814697265625e-06, -0.009246826171875, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Bloodlust", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Bloodlust", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "change_temp_attack", "<EOS>", 216, 72, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "change_temp_attack", "<EOS>", 216, 72, 109]}, {"inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.minions < 10:\n            minion.change_temp_attack(3)\n", "score": -5.911298178068591, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Bloodlust", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Template22"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "If", "test": {"left": {"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "ops": [{"_type": "Lt"}]}, "body": [{"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"_type": "Template16"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.152557373046875e-07, -1.919264832395129e-05, -1.9073486328125e-06, -0.0001163482666015625, -0.000152587890625, -1.1444091796875e-05, -2.09808349609375e-05, -1.2516970855358522e-05, 0.0, -3.814697265625e-06, -0.000244140625, -1.9073486328125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.0001010894775390625, -2.09808349609375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.311301275563892e-06, -0.0001049041748046875, -7.82012939453125e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0006510019302368164, 0.0, -4.57763671875e-05, -7.62939453125e-06, 0.0, -5.7220458984375e-06, 0.0, -6.29425048828125e-05, -0.000164031982421875, -0.000446319580078125, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -2.6941299438476562e-05, 0.0, -3.62396240234375e-05, -9.5367431640625e-06, -5.221366882324219e-05, -9.179100743494928e-06, -0.047217369079589844, -0.00038909912109375, -2.6404027938842773, -1.5496387481689453, -0.001766204833984375, -2.288818359375e-05, -0.01804351806640625, 0.0, -0.014703750610351562, -0.9032017588615417, -9.655952453613281e-06, -6.67572021484375e-05, -0.014154434204101562, -5.53131103515625e-05, -0.2548666000366211, -4.9591064453125e-05, -0.090512715280056, -6.127357482910156e-05, -0.0031375885009765625, -0.007470130920410156, -4.57763671875e-05, -0.0002918243408203125, -1.9073486328125e-06, -0.0001201629638671875, -1.1444091796875e-05, -0.053813934326171875, -0.30614686012268066, -2.861022494471399e-06, -5.7220458984375e-06, -0.0023651123046875, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Bloodlust", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Bloodlust", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 105, 133, 19, 126, 15, 116, 32, "minions", "<EOS>", 213, 12, 216, 65, 151, "10", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "change_temp_attack", "<EOS>", 216, 72, 109]}, {"inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.minions < 10:\n            player.hero.change_temp_attack(3)\n        else:\n            player.hero.change_temp_attack(3)\n", "score": -6.046030090734348, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Bloodlust", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Template22"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "If", "test": {"left": {"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "ops": [{"_type": "Lt"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template16"}], "_type": "Call"}}], "body": [{"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template16"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.152557373046875e-07, -1.919264832395129e-05, -1.9073486328125e-06, -0.0001163482666015625, -0.000152587890625, -1.1444091796875e-05, -2.09808349609375e-05, -1.2516970855358522e-05, 0.0, -3.814697265625e-06, -0.000244140625, -1.9073486328125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.0001010894775390625, -2.09808349609375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.311301275563892e-06, -0.0001049041748046875, -7.82012939453125e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0006510019302368164, 0.0, -4.57763671875e-05, -7.62939453125e-06, 0.0, -5.7220458984375e-06, 0.0, -6.29425048828125e-05, -0.000164031982421875, -0.000446319580078125, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -2.6941299438476562e-05, 0.0, -3.62396240234375e-05, -9.5367431640625e-06, -5.221366882324219e-05, -9.179100743494928e-06, -0.047217369079589844, -0.00038909912109375, -2.6404027938842773, -0.41767311096191406, -0.0030698776245117188, -5.7220458984375e-05, -0.0014123916625976562, 0.0, -0.0043163299560546875, -1.8493071794509888, -3.814697265625e-06, -7.43865966796875e-05, -0.05053520202636719, -4.57763671875e-05, -0.22937774658203125, -5.53131103515625e-05, -0.12372800707817078, -9.465217590332031e-05, -0.0002193450927734375, -0.015301704406738281, -5.53131103515625e-05, -0.0001583099365234375, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06, -0.14205455780029297, -1.9073486328125e-06, -0.0030298233032226562, -0.08036334812641144, -0.0010735858231782913, -0.027438601478934288, -2.1457672119140625e-06, -1.9073486328125e-05, -0.001834869384765625, -0.000957489013671875, -0.0016994476318359375, -7.2479248046875e-05, -0.000644683837890625, -7.62939453125e-06, -0.000110626220703125, 0.0, -0.3376035690307617, 0.0, -0.000377655029296875, -0.02021319419145584, -0.00047758003347553313, -0.037403542548418045, 0.0, -1.9073486328125e-06, -0.0043792724609375, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Bloodlust", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Bloodlust", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 105, 134, 19, 126, 15, 116, 32, "minions", "<EOS>", 213, 12, 216, 65, 151, "10", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "change_temp_attack", "<EOS>", 216, 72, 229, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "change_temp_attack", "<EOS>", 216, 72, 109]}, {"inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(1)\n", "score": -6.094048340737572, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Bloodlust", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Template22"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"_type": "Template14"}], "_type": "Call"}}], "iter": {"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.152557373046875e-07, -1.919264832395129e-05, -1.9073486328125e-06, -0.0001163482666015625, -0.000152587890625, -1.1444091796875e-05, -2.09808349609375e-05, -1.2516970855358522e-05, 0.0, -3.814697265625e-06, -0.000244140625, -1.9073486328125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.0001010894775390625, -2.09808349609375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.311301275563892e-06, -0.0001049041748046875, -7.82012939453125e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0006510019302368164, 0.0, -4.57763671875e-05, -7.62939453125e-06, 0.0, -5.7220458984375e-06, 0.0, -6.29425048828125e-05, -0.000164031982421875, -0.000446319580078125, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -2.6941299438476562e-05, 0.0, -3.62396240234375e-05, -9.5367431640625e-06, -5.221366882324219e-05, -9.179100743494928e-06, -0.047217369079589844, -0.00038909912109375, -0.07631969451904297, -0.0013866424560546875, -0.001125335693359375, -6.4849853515625e-05, 0.0, -0.00113677978515625, -0.0005702972412109375, -1.9073486328125e-06, -0.0003528594970703125, -0.005268096923828125, -3.814697265625e-06, -8.58306884765625e-05, -0.0002956390380859375, -2.6702880859375e-05, -3.814697265625e-06, -0.0007572174072265625, -0.010380943305790424, -7.05718994140625e-05, -3.814697265625e-06, -5.945853233337402, -1.33514404296875e-05], "choice_history": [93, 145, 230, 101, 125, "Bloodlust", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Bloodlust", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 41, 15, 116, 32, "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "change_temp_attack", "<EOS>", 216, 70, 109]}, {"inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.mana < 10:\n            player.hero.change_temp_attack(3)\n        else:\n            player.hero.change_temp_attack(3)\n", "score": -6.500460132889202, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Bloodlust", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Template22"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "If", "test": {"left": {"attr": "mana", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "ops": [{"_type": "Lt"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template16"}], "_type": "Call"}}], "body": [{"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template16"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.152557373046875e-07, -1.919264832395129e-05, -1.9073486328125e-06, -0.0001163482666015625, -0.000152587890625, -1.1444091796875e-05, -2.09808349609375e-05, -1.2516970855358522e-05, 0.0, -3.814697265625e-06, -0.000244140625, -1.9073486328125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.0001010894775390625, -2.09808349609375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.311301275563892e-06, -0.0001049041748046875, -7.82012939453125e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0006510019302368164, 0.0, -4.57763671875e-05, -7.62939453125e-06, 0.0, -5.7220458984375e-06, 0.0, -6.29425048828125e-05, -0.000164031982421875, -0.000446319580078125, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -2.6941299438476562e-05, 0.0, -3.62396240234375e-05, -9.5367431640625e-06, -5.221366882324219e-05, -9.179100743494928e-06, -0.047217369079589844, -0.00038909912109375, -2.6404027938842773, -0.41767311096191406, -0.0030698776245117188, -5.7220458984375e-05, -0.0014123916625976562, 0.0, -0.0043163299560546875, -2.275662422180176, -2.0265579223632812e-06, -5.14984130859375e-05, -0.31461048126220703, -3.814697265625e-05, -0.03867149353027344, -9.5367431640625e-06, -0.08459284156560898, -5.5670738220214844e-05, -0.0001049041748046875, -0.010615348815917969, -4.00543212890625e-05, -0.0001430511474609375, -1.9073486328125e-06, -3.62396240234375e-05, -5.7220458984375e-06, -0.1297321319580078, -1.9073486328125e-06, -0.0023870468139648438, -0.0711648091673851, -0.0009939088486135006, -0.026195839047431946, -2.1457672119140625e-06, -1.9073486328125e-05, -0.0018157958984375, -0.0009021759033203125, -0.001617431640625, -6.4849853515625e-05, -0.00058746337890625, -9.5367431640625e-06, -0.0001068115234375, 0.0, -0.3603811264038086, 0.0, -0.0003643035888671875, -0.020681271329522133, -0.0005053435452282429, -0.036665040999650955, 0.0, -1.9073486328125e-06, -0.0043582916259765625, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Bloodlust", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Bloodlust", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 105, 134, 19, 126, 15, 116, 32, "mana", "<EOS>", 213, 12, 216, 65, 151, "10", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "change_temp_attack", "<EOS>", 216, 72, 229, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "change_temp_attack", "<EOS>", 216, 72, 109]}, {"inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.add_buff(Buff(<UNK>()))\n", "score": -7.044073011658838, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Bloodlust", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Template22"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "<UNK>", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}], "iter": {"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.152557373046875e-07, -1.919264832395129e-05, -1.9073486328125e-06, -0.0001163482666015625, -0.000152587890625, -1.1444091796875e-05, -2.09808349609375e-05, -1.2516970855358522e-05, 0.0, -3.814697265625e-06, -0.000244140625, -1.9073486328125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.0001010894775390625, -2.09808349609375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.311301275563892e-06, -0.0001049041748046875, -7.82012939453125e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0006510019302368164, 0.0, -4.57763671875e-05, -7.62939453125e-06, 0.0, -5.7220458984375e-06, 0.0, -6.29425048828125e-05, -0.000164031982421875, -0.000446319580078125, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -2.6941299438476562e-05, 0.0, -3.62396240234375e-05, -9.5367431640625e-06, -5.221366882324219e-05, -9.179100743494928e-06, -0.047217369079589844, -0.00038909912109375, -0.07631969451904297, -0.0013866424560546875, -0.001125335693359375, -6.4849853515625e-05, 0.0, -0.00113677978515625, -0.0005702972412109375, -1.9073486328125e-06, -0.0003528594970703125, -0.005268096923828125, -3.814697265625e-06, -8.58306884765625e-05, -0.0002956390380859375, -2.6702880859375e-05, -3.814697265625e-06, -0.0007572174072265625, -4.917421340942383, -0.0002613067626953125, -9.5367431640625e-06, -0.0006160736083984375, -7.62939453125e-06, -0.016033172607421875, -5.7220458984375e-06, -0.02556431293487549, -0.500239372253418, -0.000171661376953125, -0.5467033386230469, 0.0, -0.8809990882873535, -0.018314030021429062, 0.0], "choice_history": [93, 145, 230, 101, 125, "Bloodlust", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Bloodlust", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 41, 15, 116, 32, "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "<UNK>", "<EOS>", 109]}, {"inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.cards_played > 0:\n            player.hero.change_temp_attack(3)\n        else:\n            player.hero(3)\n", "score": -7.448445508189245, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Bloodlust", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Template22"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "If", "test": {"left": {"attr": "cards_played", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Compare", "comparators": [{"_type": "Template31"}], "ops": [{"_type": "Gt"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}}], "body": [{"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template16"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.152557373046875e-07, -1.919264832395129e-05, -1.9073486328125e-06, -0.0001163482666015625, -0.000152587890625, -1.1444091796875e-05, -2.09808349609375e-05, -1.2516970855358522e-05, 0.0, -3.814697265625e-06, -0.000244140625, -1.9073486328125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.0001010894775390625, -2.09808349609375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.311301275563892e-06, -0.0001049041748046875, -7.82012939453125e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0006510019302368164, 0.0, -4.57763671875e-05, -7.62939453125e-06, 0.0, -5.7220458984375e-06, 0.0, -6.29425048828125e-05, -0.000164031982421875, -0.000446319580078125, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -2.6941299438476562e-05, 0.0, -3.62396240234375e-05, -9.5367431640625e-06, -5.221366882324219e-05, -9.179100743494928e-06, -0.047217369079589844, -0.00038909912109375, -2.6404027938842773, -0.41767311096191406, -0.0030698776245117188, -5.7220458984375e-05, -0.0014123916625976562, 0.0, -0.0043163299560546875, -0.44363176822662354, -1.1920928244535389e-07, -4.1961669921875e-05, -0.02206897735595703, -0.000446319580078125, -0.0004100799560546875, -7.05718994140625e-05, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.000240325927734375, -3.814697265625e-06, -0.2957725524902344, 0.0, -0.0011081695556640625, -0.03303823620080948, -0.0006330683827400208, -0.027748847380280495, 0.0, -2.09808349609375e-05, -0.002613067626953125, -0.0004520416259765625, -0.0009365081787109375, -2.288818359375e-05, -0.00034332275390625, -9.5367431640625e-06, -8.7738037109375e-05, 0.0, -1.0369625091552734, -1.71370267868042, -0.04835093021392822, -3.814697265625e-06, -0.7023706436157227, -4.38690185546875e-05], "choice_history": [93, 145, 230, 101, 125, "Bloodlust", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Bloodlust", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 105, 134, 19, 126, 15, 116, 32, "cards_played", "<EOS>", 213, 7, 216, 83, 229, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "change_temp_attack", "<EOS>", 216, 72, 229, 102, 128, 18, 123, 15, 116, 32, "hero", "<EOS>", 216, 72, 109]}, {"inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.cards_played > 0:\n            player.hero.change_temp_attack(3)\n        else:\n            player.add_effect(BuffUntil(minions(), TurnEnded(player=\n                CurrentPlayer())))\n", "score": -7.873287776417776, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Bloodlust", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Template22"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "If", "test": {"left": {"attr": "cards_played", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Compare", "comparators": [{"_type": "Template31"}], "ops": [{"_type": "Gt"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "add_effect", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"func": {"id": "BuffUntil", "_type": "Name"}, "args": [{"hole0": "minions", "_type": "Template5"}, {"func": {"id": "TurnEnded", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "CurrentPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "player"}]}], "_type": "Call"}], "_type": "Call"}}], "body": [{"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template16"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.152557373046875e-07, -1.919264832395129e-05, -1.9073486328125e-06, -0.0001163482666015625, -0.000152587890625, -1.1444091796875e-05, -2.09808349609375e-05, -1.2516970855358522e-05, 0.0, -3.814697265625e-06, -0.000244140625, -1.9073486328125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.0001010894775390625, -2.09808349609375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.311301275563892e-06, -0.0001049041748046875, -7.82012939453125e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0006510019302368164, 0.0, -4.57763671875e-05, -7.62939453125e-06, 0.0, -5.7220458984375e-06, 0.0, -6.29425048828125e-05, -0.000164031982421875, -0.000446319580078125, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -2.6941299438476562e-05, 0.0, -3.62396240234375e-05, -9.5367431640625e-06, -5.221366882324219e-05, -9.179100743494928e-06, -0.047217369079589844, -0.00038909912109375, -2.6404027938842773, -0.41767311096191406, -0.0030698776245117188, -5.7220458984375e-05, -0.0014123916625976562, 0.0, -0.0043163299560546875, -0.44363176822662354, -1.1920928244535389e-07, -4.1961669921875e-05, -0.02206897735595703, -0.000446319580078125, -0.0004100799560546875, -7.05718994140625e-05, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.000240325927734375, -3.814697265625e-06, -0.2957725524902344, 0.0, -0.0011081695556640625, -0.03303823620080948, -0.0006330683827400208, -0.027748847380280495, 0.0, -2.09808349609375e-05, -0.002613067626953125, -0.0004520416259765625, -0.0009365081787109375, -2.288818359375e-05, -0.00034332275390625, -9.5367431640625e-06, -8.7738037109375e-05, 0.0, -1.0369625091552734, -0.7658519744873047, -5.7220458984375e-06, -9.5367431640625e-06, -0.04230690002441406, -0.0001277923583984375, -0.11368083953857422, -1.9073486328125e-06, -0.01978588104248047, -0.2997094392776489, -5.9604644775390625e-06, -0.004329681396484375, -0.545100212097168, -5.7220458984375e-06, -0.4581441581249237, -0.06552475690841675, -0.26973915100097656, -0.17950153350830078, -0.018441200256347656, -3.814697265625e-06, -0.05806446075439453, -0.018591880798339844, -1.9073486328125e-06, -2.47955322265625e-05, -0.000102996826171875, -0.004281044006347656, 0.0, -0.0006999969482421875, -9.5367431640625e-06, -0.02519989013671875, -6.151199340820312e-05, 0.0, 0.0], "choice_history": [93, 145, 230, 101, 125, "Bloodlust", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Bloodlust", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 105, 134, 19, 126, 15, 116, 32, "cards_played", "<EOS>", 213, 7, 216, 83, 229, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "change_temp_attack", "<EOS>", 216, 72, 229, 102, 128, 18, 123, 15, 116, 32, "add_effect", "<EOS>", 216, 58, 123, 23, 146, "Buff", "Until", "<EOS>", 217, 87, 193, "minions", "<EOS>", 58, 122, 23, 146, "Turn", "Ended", "<EOS>", 224, 205, "player", "<EOS>", 51, 193, "Current", "Player", "<EOS>", 109]}, {"inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.cards_played > 0:\n            player.hero.change_temp_attack(3)\n        else:\n            player.add_effect(BuffUntil(ChangeAttack(3), TurnEnded()))\n", "score": -8.4413374158812, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Bloodlust", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Template22"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "If", "test": {"left": {"attr": "cards_played", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Compare", "comparators": [{"_type": "Template31"}], "ops": [{"_type": "Gt"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "add_effect", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"func": {"id": "BuffUntil", "_type": "Name"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"hole0": "TurnEnded", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}], "body": [{"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template16"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.152557373046875e-07, -1.919264832395129e-05, -1.9073486328125e-06, -0.0001163482666015625, -0.000152587890625, -1.1444091796875e-05, -2.09808349609375e-05, -1.2516970855358522e-05, 0.0, -3.814697265625e-06, -0.000244140625, -1.9073486328125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.0001010894775390625, -2.09808349609375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.311301275563892e-06, -0.0001049041748046875, -7.82012939453125e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0006510019302368164, 0.0, -4.57763671875e-05, -7.62939453125e-06, 0.0, -5.7220458984375e-06, 0.0, -6.29425048828125e-05, -0.000164031982421875, -0.000446319580078125, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -2.6941299438476562e-05, 0.0, -3.62396240234375e-05, -9.5367431640625e-06, -5.221366882324219e-05, -9.179100743494928e-06, -0.047217369079589844, -0.00038909912109375, -2.6404027938842773, -0.41767311096191406, -0.0030698776245117188, -5.7220458984375e-05, -0.0014123916625976562, 0.0, -0.0043163299560546875, -0.44363176822662354, -1.1920928244535389e-07, -4.1961669921875e-05, -0.02206897735595703, -0.000446319580078125, -0.0004100799560546875, -7.05718994140625e-05, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.000240325927734375, -3.814697265625e-06, -0.2957725524902344, 0.0, -0.0011081695556640625, -0.03303823620080948, -0.0006330683827400208, -0.027748847380280495, 0.0, -2.09808349609375e-05, -0.002613067626953125, -0.0004520416259765625, -0.0009365081787109375, -2.288818359375e-05, -0.00034332275390625, -9.5367431640625e-06, -8.7738037109375e-05, 0.0, -1.0369625091552734, -0.7658519744873047, -5.7220458984375e-06, -9.5367431640625e-06, -0.04230690002441406, -0.0001277923583984375, -0.11368083953857422, -1.9073486328125e-06, -0.01978588104248047, -0.2997094392776489, -5.9604644775390625e-06, -0.004329681396484375, -0.8692970275878906, -0.002529144287109375, -0.0046329498291015625, -9.5367431640625e-06, -0.6513118743896484, -0.019472122192382812, -5.7220458984375e-06, -0.6232340335845947, -0.0410233736038208, -3.24249267578125e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Bloodlust", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Bloodlust", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 105, 134, 19, 126, 15, 116, 32, "cards_played", "<EOS>", 213, 7, 216, 83, 229, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "change_temp_attack", "<EOS>", 216, 72, 229, 102, 128, 18, 123, 15, 116, 32, "add_effect", "<EOS>", 216, 58, 123, 23, 146, "Buff", "Until", "<EOS>", 217, 58, 123, 40, 216, 72, 87, 193, "Turn", "Ended", "<EOS>", 109]}, {"inferred_code": "super().use(player, game)\n", "score": -14.68908977508545, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -14.149028778076172, -0.5400209426879883], "choice_history": [93, 145, 230, 108, 109]}, {"inferred_code": "", "score": -19.26995849609375, "model_output": {"_type": "Module", "body": []}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -19.26995277404785], "choice_history": [93, 145, 228]}, {"inferred_code": "", "score": -19.844379425048828, "model_output": {"_type": "Module", "body": [{"_type": "Template13_stmt_seq"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -13.556766510009766, -6.287572860717773], "choice_history": [93, 145, 230, 109, 109]}], "index": 13}
{"beams": [{"inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "score": -0.02525407630491827, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "BluegillWarrior", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.0003150205302517861, -3.576277322281385e-06, -8.940656698541716e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, 0.0, -3.24249267578125e-05, -2.300739288330078e-05, -2.0265579223632812e-06, -1.52587890625e-05, -1.71661376953125e-05, -3.814697265625e-05, -2.6702880859375e-05, -7.05718994140625e-05, -0.0004215240478515625, 0.0, -0.00199127197265625, -3.814697265625e-06, -5.7220458984375e-06, -3.3378546504536644e-06, -6.84255501255393e-05, -4.053113570989808e-06, 0.0, -0.00012969970703125, -3.4332275390625e-05, -9.5367431640625e-06, -0.0018863677978515625, -1.9073486328125e-06, -3.123283386230469e-05, -6.079673767089844e-06, -3.0517578125e-05, -7.62939453125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.001325845718383789, 0.0, -0.014963984489440918, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -2.1219253540039062e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.1444091796875e-05, -0.00040435791015625, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.000152587890625, -1.9073486328125e-06, -3.62396240234375e-05, -0.000164031982421875, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-05, -9.34600830078125e-05, -1.71661376953125e-05, -0.0003261566162109375, -0.000125885009765625, -0.000186920166015625, 0.0, -0.0013874768046662211, -1.33514404296875e-05, -0.0003204345703125, -3.4332275390625e-05, -0.0002508127363398671, -2.5987545086536556e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Bluegill", "Warrior", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Bluegill", " ", "Warrior", "<EOS>", 69, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 70, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "score": -4.389796560531977, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "BluegillWarrior", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "PIRATE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.0003150205302517861, -3.576277322281385e-06, -8.940656698541716e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, 0.0, -3.24249267578125e-05, -2.300739288330078e-05, -2.0265579223632812e-06, -1.52587890625e-05, -1.71661376953125e-05, -3.814697265625e-05, -2.6702880859375e-05, -7.05718994140625e-05, -0.0004215240478515625, 0.0, -0.00199127197265625, -3.814697265625e-06, -5.7220458984375e-06, -3.3378546504536644e-06, -6.84255501255393e-05, -4.053113570989808e-06, 0.0, -0.00012969970703125, -3.4332275390625e-05, -9.5367431640625e-06, -0.0018863677978515625, -1.9073486328125e-06, -3.123283386230469e-05, -6.079673767089844e-06, -3.0517578125e-05, -7.62939453125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.001325845718383789, 0.0, -4.379412651062012, -1.2040138244628906e-05, -5.7220458984375e-06, -4.76837158203125e-05, -2.3126602172851562e-05, -1.1444091796875e-05, -4.1961669921875e-05, -7.62939453125e-06, -0.0004863739013671875, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0001277923583984375, -1.9073486328125e-06, -3.4332275390625e-05, -0.0001544952392578125, -5.7220458984375e-06, -5.7220458984375e-06, -1.71661376953125e-05, -9.1552734375e-05, -1.71661376953125e-05, -0.000316619873046875, -0.000125885009765625, -0.0001964569091796875, 0.0, -0.0013846157817170024, -1.33514404296875e-05, -0.0003185272216796875, -3.4332275390625e-05, -0.00025355449179187417, -2.586833761597518e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Bluegill", "Warrior", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Bluegill", " ", "Warrior", "<EOS>", 69, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 70, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "score": -6.372163481144973, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "BluegillWarrior", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.0003150205302517861, -3.576277322281385e-06, -8.940656698541716e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, 0.0, -3.24249267578125e-05, -2.300739288330078e-05, -2.0265579223632812e-06, -1.52587890625e-05, -1.71661376953125e-05, -3.814697265625e-05, -2.6702880859375e-05, -7.05718994140625e-05, -0.0004215240478515625, 0.0, -6.312521934509277, -2.6702880859375e-05, 0.0, -1.0848020792764146e-05, -8.964520384324715e-05, -7.987019671418238e-06, -5.7220458984375e-06, -0.04266548156738281, -0.0001239776611328125, -1.52587890625e-05, -2.288818359375e-05, -7.62939453125e-05, -1.9073486328125e-06, -2.562999725341797e-05, -7.867813110351562e-06, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0008916854858398438, -1.1920928244535389e-07, -0.00922691822052002, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -1.7404556274414062e-05, -7.62939453125e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.0003757476806640625, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.000164031982421875, 0.0, -1.52587890625e-05, -0.0021686553955078125, -1.9073486328125e-06, -3.814697265625e-06, -5.14984130859375e-05, -0.00011444091796875, -2.09808349609375e-05, -0.0003185272216796875, -0.0001678466796875, -0.0001544952392578125, 0.0, -0.001135825994424522, -1.1444091796875e-05, -0.000255584716796875, -3.4332275390625e-05, -0.0002602309104986489, -2.6464400434633717e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Bluegill", "Warrior", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Bluegill", " ", "Warrior", "<EOS>", 69, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 70, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=Random.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "score": -6.9721043762892805, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "BluegillWarrior", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "Random", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.0003150205302517861, -3.576277322281385e-06, -8.940656698541716e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, 0.0, -3.24249267578125e-05, -2.300739288330078e-05, -2.0265579223632812e-06, -1.52587890625e-05, -1.71661376953125e-05, -3.814697265625e-05, -2.6702880859375e-05, -7.05718994140625e-05, -0.0004215240478515625, 0.0, -0.00199127197265625, -3.814697265625e-06, -5.7220458984375e-06, -3.3378546504536644e-06, -6.84255501255393e-05, -4.053113570989808e-06, 0.0, -0.00012969970703125, -3.4332275390625e-05, -9.5367431640625e-06, -0.0018863677978515625, -1.9073486328125e-06, -3.123283386230469e-05, -6.079673767089844e-06, -3.0517578125e-05, -7.62939453125e-06, -1.52587890625e-05, -1.9073486328125e-06, -6.95216178894043, -0.00021576881408691406, -0.010811328887939453, -1.9073486328125e-06, -3.814697265625e-06, -5.91278076171875e-05, -2.8848648071289062e-05, -1.71661376953125e-05, -3.0517578125e-05, -7.62939453125e-06, -0.00040435791015625, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -9.1552734375e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.00012969970703125, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -8.96453857421875e-05, -1.71661376953125e-05, -0.0003204345703125, -0.0001239776611328125, -0.0001983642578125, 0.0, -0.0013824700145050883, -1.33514404296875e-05, -0.000316619873046875, -3.4332275390625e-05, -0.00024926316109485924, -2.57491301454138e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Bluegill", "Warrior", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Bluegill", " ", "Warrior", "<EOS>", 69, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "Random", "<EOS>", "MURLOC", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 70, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "score": -7.4501355348384095, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "BluegillWarrior", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.0003150205302517861, -3.576277322281385e-06, -8.940656698541716e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, 0.0, -3.24249267578125e-05, -2.300739288330078e-05, -2.0265579223632812e-06, -1.52587890625e-05, -1.71661376953125e-05, -3.814697265625e-05, -2.6702880859375e-05, -7.05718994140625e-05, -0.0004215240478515625, 0.0, -0.00199127197265625, -3.814697265625e-06, -5.7220458984375e-06, -3.3378546504536644e-06, -6.84255501255393e-05, -4.053113570989808e-06, 0.0, -0.00012969970703125, -3.4332275390625e-05, -9.5367431640625e-06, -0.0018863677978515625, -1.9073486328125e-06, -3.123283386230469e-05, -6.079673767089844e-06, -3.0517578125e-05, -7.62939453125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.001325845718383789, 0.0, -7.439970016479492, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -2.110004425048828e-05, -9.5367431640625e-06, -3.24249267578125e-05, -7.62939453125e-06, -0.0003452301025390625, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -9.918212890625e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0001277923583984375, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -9.1552734375e-05, -1.71661376953125e-05, -0.0003204345703125, -0.0001239776611328125, -0.000194549560546875, 0.0, -0.0013825892237946391, -1.1444091796875e-05, -0.000316619873046875, -3.4332275390625e-05, -0.00024413726350758225, -2.562992085586302e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Bluegill", "Warrior", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Bluegill", " ", "Warrior", "<EOS>", 69, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 70, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC, minion_type\n            =MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "score": -7.9048830928986575, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "BluegillWarrior", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.0003150205302517861, -3.576277322281385e-06, -8.940656698541716e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, 0.0, -3.24249267578125e-05, -2.300739288330078e-05, -2.0265579223632812e-06, -1.52587890625e-05, -1.71661376953125e-05, -3.814697265625e-05, -2.6702880859375e-05, -7.05718994140625e-05, -0.0004215240478515625, 0.0, -0.00199127197265625, -3.814697265625e-06, -5.7220458984375e-06, -3.3378546504536644e-06, -6.84255501255393e-05, -4.053113570989808e-06, 0.0, -0.00012969970703125, -3.4332275390625e-05, -9.5367431640625e-06, -6.289804458618164, -1.9073486328125e-06, -2.4914739697123878e-05, -4.0531158447265625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0009758472442626953, -1.1920928244535389e-07, -0.010604381561279297, 0.0, -0.0001735687255859375, -1.5825715065002441, -3.814697265625e-06, -0.009375572204589844, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0004410743713378906, -1.1920928244535389e-07, -0.0038477182388305664, 0.0, -7.62939453125e-06, -8.96453857421875e-05, -2.1457672119140625e-05, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0003452301025390625, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0001678466796875, 0.0, -2.09808349609375e-05, -0.0001659393310546875, -3.814697265625e-06, -5.7220458984375e-06, -2.09808349609375e-05, -9.918212890625e-05, -1.71661376953125e-05, -0.0003376007080078125, -0.0001239776611328125, -0.000186920166015625, 0.0, -0.001386880874633789, -1.1444091796875e-05, -0.0003452301025390625, -3.24249267578125e-05, -0.00022875957074575126, -2.562992085586302e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Bluegill", "Warrior", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Bluegill", " ", "Warrior", "<EOS>", 69, 89, 88, 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 70, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, taunt=True)\n", "score": -8.072654434174183, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "BluegillWarrior", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.0003150205302517861, -3.576277322281385e-06, -8.940656698541716e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, 0.0, -3.24249267578125e-05, -2.300739288330078e-05, -2.0265579223632812e-06, -1.52587890625e-05, -1.71661376953125e-05, -3.814697265625e-05, -2.6702880859375e-05, -7.05718994140625e-05, -0.0004215240478515625, 0.0, -0.00199127197265625, -3.814697265625e-06, -5.7220458984375e-06, -3.3378546504536644e-06, -6.84255501255393e-05, -4.053113570989808e-06, 0.0, -0.00012969970703125, -3.4332275390625e-05, -9.5367431640625e-06, -0.0018863677978515625, -1.9073486328125e-06, -3.123283386230469e-05, -6.079673767089844e-06, -3.0517578125e-05, -7.62939453125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.001325845718383789, 0.0, -0.014963984489440918, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -2.1219253540039062e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.1444091796875e-05, -0.00040435791015625, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.000152587890625, -1.9073486328125e-06, -3.62396240234375e-05, -0.000164031982421875, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-05, -9.34600830078125e-05, -1.71661376953125e-05, -0.0003261566162109375, -0.000125885009765625, -0.000186920166015625, 0.0, -8.049077987670898, -2.1219253540039062e-05, -6.103515625e-05, -6.67572021484375e-05, -0.00019311779760755599, -1.2636161045520566e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Bluegill", "Warrior", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Bluegill", " ", "Warrior", "<EOS>", 69, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 70, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class <UNK>Warrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "score": -8.086281295127492, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "<UNK>Warrior", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -8.063064575195312, -4.172316494077677e-06, -9.65590606938349e-06, -3.814697265625e-06, -1.71661376953125e-05, -1.1444091796875e-05, 0.0, -4.00543212890625e-05, -3.075599670410156e-05, -2.1457672119140625e-06, -1.52587890625e-05, -1.52587890625e-05, -4.1961669921875e-05, -3.0517578125e-05, -9.5367431640625e-05, -0.00040435791015625, 0.0, -0.00023651123046875, -3.814697265625e-06, -7.62939453125e-06, -3.099436753473128e-06, -7.343229663092643e-05, -3.8146954466355965e-06, 0.0, -0.0001163482666015625, -3.0517578125e-05, -9.5367431640625e-06, -0.0019779205322265625, -1.9073486328125e-06, -3.314018249511719e-05, -6.079673767089844e-06, -3.0517578125e-05, -7.62939453125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.001310586929321289, 0.0, -0.014902830123901367, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -2.1219253540039062e-05, -1.1444091796875e-05, -1.71661376953125e-05, -1.1444091796875e-05, -0.000408172607421875, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0001506805419921875, -1.9073486328125e-06, -3.62396240234375e-05, -0.000171661376953125, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-05, -9.34600830078125e-05, -1.71661376953125e-05, -0.000324249267578125, -0.000125885009765625, -0.0001850128173828125, 0.0, -0.0013874768046662211, -1.33514404296875e-05, -0.0003204345703125, -3.4332275390625e-05, -0.0002486669982317835, -2.5987545086536556e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Warrior", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Bluegill", " ", "Warrior", "<EOS>", 69, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 70, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, divine_shield=True)\n", "score": -8.178946901045492, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "BluegillWarrior", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "divine_shield"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.0003150205302517861, -3.576277322281385e-06, -8.940656698541716e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, 0.0, -3.24249267578125e-05, -2.300739288330078e-05, -2.0265579223632812e-06, -1.52587890625e-05, -1.71661376953125e-05, -3.814697265625e-05, -2.6702880859375e-05, -7.05718994140625e-05, -0.0004215240478515625, 0.0, -0.00199127197265625, -3.814697265625e-06, -5.7220458984375e-06, -3.3378546504536644e-06, -6.84255501255393e-05, -4.053113570989808e-06, 0.0, -0.00012969970703125, -3.4332275390625e-05, -9.5367431640625e-06, -0.0018863677978515625, -1.9073486328125e-06, -3.123283386230469e-05, -6.079673767089844e-06, -3.0517578125e-05, -7.62939453125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.001325845718383789, 0.0, -0.014963984489440918, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -2.1219253540039062e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.1444091796875e-05, -0.00040435791015625, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.000152587890625, -1.9073486328125e-06, -3.62396240234375e-05, -0.000164031982421875, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-05, -9.34600830078125e-05, -1.71661376953125e-05, -0.0003261566162109375, -0.000125885009765625, -0.000186920166015625, 0.0, -8.15273380279541, -3.933906555175781e-06, -0.0011205673217773438, -0.0003032684326171875, -0.0015433821827173233, -2.0265473722247407e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Bluegill", "Warrior", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Bluegill", " ", "Warrior", "<EOS>", 69, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 70, 224, 205, "divine_shield", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "score": -8.306796915509494, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "BluegillWarrior", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.0003150205302517861, -3.576277322281385e-06, -8.940656698541716e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, 0.0, -3.24249267578125e-05, -2.300739288330078e-05, -2.0265579223632812e-06, -1.52587890625e-05, -1.71661376953125e-05, -3.814697265625e-05, -2.6702880859375e-05, -7.05718994140625e-05, -8.236977577209473, -1.33514404296875e-05, -0.06217479705810547, -3.814697265625e-06, -5.7220458984375e-06, -5.006777428206988e-06, -3.4809061617124826e-05, -7.867794920457527e-06, 0.0, -8.96453857421875e-05, -6.29425048828125e-05, -1.1444091796875e-05, 0.0, -2.09808349609375e-05, -0.0004292726516723633, -4.00543212890625e-05, -5.7220458984375e-06, -0.0001087188720703125, -0.0003070831298828125, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0012187957763671875, 0.0, -1.9073486328125e-06, -0.0001010894775390625, -7.62939453125e-06, -3.814697265625e-05, -7.62939453125e-06, -8.392333984375e-05, -0.00011444091796875, -8.0108642578125e-05, -0.0001373291015625, -0.000751495361328125, 0.0, -0.0014673469122499228, -2.47955322265625e-05, -0.0001983642578125, -9.5367431640625e-05, -0.0014386750990524888, -7.903547520982102e-05, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Bluegill", "Warrior", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Bluegill", " ", "Warrior", "<EOS>", 69, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 70, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, buffs=[Buff(Charge())])\n", "score": -8.415975152960527, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "BluegillWarrior", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Charge", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "buffs"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.0003150205302517861, -3.576277322281385e-06, -8.940656698541716e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, 0.0, -3.24249267578125e-05, -2.300739288330078e-05, -2.0265579223632812e-06, -1.52587890625e-05, -1.71661376953125e-05, -3.814697265625e-05, -2.6702880859375e-05, -7.05718994140625e-05, -0.0004215240478515625, 0.0, -0.00199127197265625, -3.814697265625e-06, -5.7220458984375e-06, -3.3378546504536644e-06, -6.84255501255393e-05, -4.053113570989808e-06, 0.0, -0.00012969970703125, -3.4332275390625e-05, -9.5367431640625e-06, -0.0018863677978515625, -1.9073486328125e-06, -3.123283386230469e-05, -6.079673767089844e-06, -3.0517578125e-05, -7.62939453125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.001325845718383789, 0.0, -0.014963984489440918, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -2.1219253540039062e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.1444091796875e-05, -0.00040435791015625, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.000152587890625, -1.9073486328125e-06, -3.62396240234375e-05, -0.000164031982421875, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-05, -9.34600830078125e-05, -1.71661376953125e-05, -0.0003261566162109375, -0.000125885009765625, -0.000186920166015625, 0.0, -7.883788108825684, 0.0, -0.025697708129882812, -0.0004329681396484375, -0.0001354217529296875, -5.53131103515625e-05, -2.6702880859375e-05, -0.009397506713867188, -9.34600830078125e-05, -0.003754854202270508, -4.0531158447265625e-06, -0.465972900390625, -0.000774383544921875, -3.814697265625e-06, -0.0018466702895238996, -0.00047587446169927716, -0.000255584716796875, -3.814697265625e-05], "choice_history": [93, 145, 230, 101, 125, "Bluegill", "Warrior", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Bluegill", " ", "Warrior", "<EOS>", 69, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 70, 224, 205, "buffs", "<EOS>", 21, 141, 217, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Charge", "<EOS>", 71, 109]}, {"inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.HUNTER)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "score": -8.676114624298862, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "BluegillWarrior", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.0003150205302517861, -3.576277322281385e-06, -8.940656698541716e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, 0.0, -3.24249267578125e-05, -2.300739288330078e-05, -2.0265579223632812e-06, -1.52587890625e-05, -1.71661376953125e-05, -3.814697265625e-05, -2.6702880859375e-05, -7.05718994140625e-05, -0.0004215240478515625, 0.0, -0.00199127197265625, -3.814697265625e-06, -5.7220458984375e-06, -3.3378546504536644e-06, -6.84255501255393e-05, -4.053113570989808e-06, 0.0, -0.00012969970703125, -3.4332275390625e-05, -9.5367431640625e-06, -0.0018863677978515625, -1.9073486328125e-06, -3.123283386230469e-05, -6.079673767089844e-06, -3.0517578125e-05, -7.62939453125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.001325845718383789, 0.0, -8.665870666503906, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -2.3365020751953125e-05, -1.1444091796875e-05, -2.09808349609375e-05, -7.62939453125e-06, -0.000324249267578125, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0001811981201171875, -1.9073486328125e-06, -4.76837158203125e-05, -0.0001621246337890625, -5.7220458984375e-06, -5.7220458984375e-06, -2.09808349609375e-05, -9.5367431640625e-05, -1.71661376953125e-05, -0.0003185272216796875, -0.000125885009765625, -0.000194549560546875, 0.0, -0.0013847349910065532, -1.33514404296875e-05, -0.000316619873046875, -3.4332275390625e-05, -0.0002493821957614273, -2.57491301454138e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Bluegill", "Warrior", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Bluegill", " ", "Warrior", "<EOS>", 69, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "HUNTER", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 70, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC, battlecry=\n            Battlecry(Damage(2), HeroSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -8.708473193329944, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "BluegillWarrior", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"func": {"id": "HeroSelector", "_type": "Name"}, "args": [{"hole0": "EnemyPlayer", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.0003150205302517861, -3.576277322281385e-06, -8.940656698541716e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, 0.0, -3.24249267578125e-05, -2.300739288330078e-05, -2.0265579223632812e-06, -1.52587890625e-05, -1.71661376953125e-05, -3.814697265625e-05, -2.6702880859375e-05, -7.05718994140625e-05, -0.0004215240478515625, 0.0, -0.00199127197265625, -3.814697265625e-06, -5.7220458984375e-06, -3.3378546504536644e-06, -6.84255501255393e-05, -4.053113570989808e-06, 0.0, -0.00012969970703125, -3.4332275390625e-05, -9.5367431640625e-06, -6.289804458618164, -1.9073486328125e-06, -2.4914739697123878e-05, -4.0531158447265625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0009758472442626953, -1.1920928244535389e-07, -0.010604381561279297, 0.0, -0.0001735687255859375, -0.43538713455200195, 0.0, -0.008058547973632812, -3.814697265625e-06, -0.0010986328125, -8.7738037109375e-05, -0.39981842041015625, -5.14984130859375e-05, -0.0017719268798828125, -5.7220458984375e-06, -1.1936286687850952, -0.0706205889582634, -8.0108642578125e-05, -0.059273719787597656, -0.0013179779052734375, -0.0008831024169921875, -0.17035770416259766, -1.9073486328125e-06, -0.037079453468322754, -3.4332275390625e-05, -1.1444091796875e-05, -0.0042667388916015625, -5.7220458984375e-06, -3.814697265625e-06, -0.005085335113108158, -0.0005182026652619243, -2.491474151611328e-05, -3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -0.0003871917724609375, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -1.1444091796875e-05, -0.013324737548828125, -4.38690185546875e-05, -2.3245762349688448e-05, -3.576278118089249e-07, -0.0001468658447265625, -3.576278118089249e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Bluegill", "Warrior", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Bluegill", " ", "Warrior", "<EOS>", 69, 89, 88, 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 69, 58, 123, 23, 146, "Hero", "Selector", "<EOS>", 216, 87, 193, "Enemy", "Player", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC, battlecry=\n            Battlecry(Summon(Charge()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -8.896302683653566, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "BluegillWarrior", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Summon", "_type": "Name"}, "args": [{"hole0": "Charge", "_type": "Template5"}], "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template5"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.0003150205302517861, -3.576277322281385e-06, -8.940656698541716e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, 0.0, -3.24249267578125e-05, -2.300739288330078e-05, -2.0265579223632812e-06, -1.52587890625e-05, -1.71661376953125e-05, -3.814697265625e-05, -2.6702880859375e-05, -7.05718994140625e-05, -0.0004215240478515625, 0.0, -0.00199127197265625, -3.814697265625e-06, -5.7220458984375e-06, -3.3378546504536644e-06, -6.84255501255393e-05, -4.053113570989808e-06, 0.0, -0.00012969970703125, -3.4332275390625e-05, -9.5367431640625e-06, -6.289804458618164, -1.9073486328125e-06, -2.4914739697123878e-05, -4.0531158447265625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0009758472442626953, -1.1920928244535389e-07, -0.010604381561279297, 0.0, -0.0001735687255859375, -0.43538713455200195, 0.0, -0.008058547973632812, -3.814697265625e-06, -0.0010986328125, -8.7738037109375e-05, -0.39981842041015625, -5.14984130859375e-05, -0.0017719268798828125, -5.7220458984375e-06, -0.9940141439437866, -0.0038289781659841537, -0.011171340942382812, -0.0001678466796875, -9.5367431640625e-06, -0.3329964578151703, -0.0018609896069392562, -0.0034332275390625, 0.0, -0.17172320187091827, -4.291534423828125e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -2.110004425048828e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0006008148193359375, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, -0.22494888305664062, -1.9073486328125e-05, -2.1815289073856547e-05, -2.3841855067985307e-07, -0.00018298625946044922, -2.3841855067985307e-07, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Bluegill", "Warrior", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Bluegill", " ", "Warrior", "<EOS>", 69, 89, 88, 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Summon", "<EOS>", 216, 87, 193, "Charge", "<EOS>", 87, 193, "Player", "Selector", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "", "score": -20.19672203063965, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -20.196714401245117], "choice_history": [93, 145, 228]}], "index": 14}
{"beams": [{"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -0.039628145702494066, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Boar", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 1, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -2.47955322265625e-05, -4.57763671875e-05, -8.7738037109375e-05, -2.09808349609375e-05, -1.0728830375228426e-06, -1.8596634618006647e-05, -1.52587890625e-05, -1.52587890625e-05, -2.09808349609375e-05, -1.1444091796875e-05, -3.24249267578125e-05, -2.706050690903794e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0002918243408203125, -1.9073486328125e-06, -2.86102294921875e-05, -0.034282684326171875, -1.52587890625e-05, -0.000560760498046875, -4.57763671875e-05, -3.814697265625e-06, -2.7656173188006505e-05, -0.00023567676544189453, -0.0009975433349609375, -0.000125885009765625, -4.57763671875e-05, -6.866455078125e-05, -1.9073486328125e-06, 0.0, -1.3470649719238281e-05, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.0011197328567504883, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -9.918212890625e-05, -0.0002460479736328125, -1.9073486328125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -0.0006335973739624023, 0.0, -1.9073486328125e-06, -0.0001125335693359375, -9.1552734375e-05, -6.127178494352847e-05, -7.152555099310121e-07, -2.6821902793017216e-05, -2.3841855067985307e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Boar", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Boar", "<EOS>", 70, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "1", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n", "score": -3.739714382097411, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Boar", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template31"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}, {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 1, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -2.47955322265625e-05, -4.57763671875e-05, -8.7738037109375e-05, -2.09808349609375e-05, -1.0728830375228426e-06, -1.8596634618006647e-05, -1.52587890625e-05, -1.52587890625e-05, -2.09808349609375e-05, -1.1444091796875e-05, -3.24249267578125e-05, -2.706050690903794e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0002918243408203125, -1.9073486328125e-06, -2.86102294921875e-05, -3.3978490829467773, -0.0001544952392578125, -0.04680919647216797, -3.24249267578125e-05, -3.814697265625e-06, -1.2278481335670222e-05, -1.1086463018727954e-05, -0.25232982635498047, -0.000202178955078125, -4.1961669921875e-05, -6.67572021484375e-05, -7.62939453125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -9.560585021972656e-05, -1.9073486328125e-06, -0.0026966333389282227, 0.0, -2.288818359375e-05, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -1.71661376953125e-05, -1.52587890625e-05, -0.0003509521484375, -5.7220458984375e-06, -3.814697265625e-06, -5.53131103515625e-05, -0.03789222240447998, 0.0, -1.71661376953125e-05, -6.103515625e-05, -6.29425048828125e-05, -5.85301240789704e-05, -4.768370445162873e-07, -2.4318444047821686e-05, -1.1920928244535389e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Boar", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 221, 66, 155, "Boar", "<EOS>", 83, 89, 88, 80, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "p", "<EOS>", 229, 110, 181, "1", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n", "score": -5.131068824111132, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Boar", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}, {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 1, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -2.47955322265625e-05, -4.57763671875e-05, -8.7738037109375e-05, -2.09808349609375e-05, -1.0728830375228426e-06, -1.8596634618006647e-05, -1.52587890625e-05, -1.52587890625e-05, -2.09808349609375e-05, -1.1444091796875e-05, -3.24249267578125e-05, -2.706050690903794e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0002918243408203125, -1.9073486328125e-06, -2.86102294921875e-05, -3.3978490829467773, -0.0001544952392578125, -0.04680919647216797, -3.24249267578125e-05, -3.814697265625e-06, -1.2278481335670222e-05, -1.1086463018727954e-05, -1.5404729843139648, -0.000240325927734375, -4.9591064453125e-05, -0.0001010894775390625, -6.103515625e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -8.022785186767578e-05, -1.9073486328125e-06, -0.0023534297943115234, 0.0, -4.76837158203125e-05, 0.0, -3.62396240234375e-05, -5.7220458984375e-06, -1.9073486328125e-05, -1.71661376953125e-05, -0.0003643035888671875, -5.7220458984375e-06, -3.814697265625e-06, -4.9591064453125e-05, -0.14026892185211182, 0.0, -7.62939453125e-06, -0.0011577606201171875, -7.05718994140625e-05, -5.1854774937964976e-05, -2.503394853192731e-06, -2.6225792680634186e-05, -1.1920928244535389e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Boar", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 221, 66, 155, "Boar", "<EOS>", 70, 89, 88, 80, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "p", "<EOS>", 229, 110, 181, "1", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n", "score": -6.660144511547799, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Boar", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 1, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -2.47955322265625e-05, -4.57763671875e-05, -8.7738037109375e-05, -2.09808349609375e-05, -1.0728830375228426e-06, -1.8596634618006647e-05, -1.52587890625e-05, -1.52587890625e-05, -2.09808349609375e-05, -1.1444091796875e-05, -3.24249267578125e-05, -2.706050690903794e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0002918243408203125, -1.9073486328125e-06, -2.86102294921875e-05, -3.3978490829467773, -0.0001544952392578125, -3.160097122192383, -1.33514404296875e-05, -1.9073486328125e-06, -2.4914430468925275e-05, -4.0411949157714844e-05, -0.029876708984375, -0.000274658203125, -5.7220458984375e-05, -6.29425048828125e-05, -6.866455078125e-05, -5.53131103515625e-05, -2.872943878173828e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0004787445068359375, -0.0001277923583984375, -9.5367431640625e-06, 0.0, -3.4332275390625e-05, -0.06960916519165039, 0.0, -2.09808349609375e-05, -0.000118255615234375, -8.7738037109375e-05, -0.00033408819581381977, -2.384185791015625e-06, -2.038461752817966e-05, -3.576278118089249e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Boar", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 220, 66, 155, "Boar", "<EOS>", 70, 89, 88, 80, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "p", "<EOS>", 229, 110, 181, "1", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -7.1531021566198945, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Boar", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template31"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 1, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -2.47955322265625e-05, -4.57763671875e-05, -8.7738037109375e-05, -2.09808349609375e-05, -1.0728830375228426e-06, -1.8596634618006647e-05, -1.52587890625e-05, -1.52587890625e-05, -2.09808349609375e-05, -1.1444091796875e-05, -3.24249267578125e-05, -2.706050690903794e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0002918243408203125, -1.9073486328125e-06, -2.86102294921875e-05, -0.034282684326171875, -1.52587890625e-05, -0.000560760498046875, -4.57763671875e-05, -3.814697265625e-06, -2.7656173188006505e-05, -0.00023567676544189453, -7.111621856689453, -0.000560760498046875, -0.00060272216796875, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, -9.775161743164062e-06, -5.841255187988281e-06, -1.9073486328125e-06, -9.5367431640625e-06, -2.47955322265625e-05, -5.7220458984375e-06, -4.1961669921875e-05, 0.0, -0.0013544559478759766, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -7.62939453125e-06, -9.5367431640625e-05, -0.0002307891845703125, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-05, -0.002266407012939453, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -0.000164031982421875, -6.937750003999099e-05, -5.960462772236497e-07, -2.4199311155825853e-05, -2.3841855067985307e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Boar", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Boar", "<EOS>", 83, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "1", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n", "score": -7.68258070599515, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Boar", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 1, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -2.47955322265625e-05, -4.57763671875e-05, -8.7738037109375e-05, -2.09808349609375e-05, -1.0728830375228426e-06, -1.8596634618006647e-05, -1.52587890625e-05, -1.52587890625e-05, -2.09808349609375e-05, -1.1444091796875e-05, -3.24249267578125e-05, -2.706050690903794e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0002918243408203125, -1.9073486328125e-06, -2.86102294921875e-05, -0.034282684326171875, -1.52587890625e-05, -0.000560760498046875, -4.57763671875e-05, -3.814697265625e-06, -2.7656173188006505e-05, -0.00023567676544189453, -0.0009975433349609375, -0.000125885009765625, -4.57763671875e-05, -6.866455078125e-05, -1.9073486328125e-06, 0.0, -1.3470649719238281e-05, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.0011197328567504883, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -9.918212890625e-05, -0.0002460479736328125, -1.9073486328125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -7.643533229827881, 0.0, -1.1444091796875e-05, -0.000110626220703125, -0.0001201629638671875, -7.807914516888559e-05, -4.768370445162873e-07, -2.694117574719712e-05, -2.3841855067985307e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Boar", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Boar", "<EOS>", 70, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "p", "<EOS>", 229, 110, 181, "1", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, MINION_TYPE.BEAST)\n\n    def create_minion(self, _):\n        return Minion(1, 1)\n", "score": -7.839776390211448, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Boar", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}, {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "_"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 1, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -2.47955322265625e-05, -4.57763671875e-05, -8.7738037109375e-05, -2.09808349609375e-05, -1.0728830375228426e-06, -1.8596634618006647e-05, -1.52587890625e-05, -1.52587890625e-05, -2.09808349609375e-05, -1.1444091796875e-05, -3.24249267578125e-05, -2.706050690903794e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0002918243408203125, -1.9073486328125e-06, -2.86102294921875e-05, -3.3978490829467773, -0.0001544952392578125, -0.04680919647216797, -3.24249267578125e-05, -3.814697265625e-06, -1.2278481335670222e-05, -1.1086463018727954e-05, -1.5404729843139648, -0.000240325927734375, -4.9591064453125e-05, -0.0001010894775390625, -6.103515625e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -8.022785186767578e-05, -1.9073486328125e-06, -0.0023534297943115234, 0.0, -4.76837158203125e-05, 0.0, -3.62396240234375e-05, -5.7220458984375e-06, -1.9073486328125e-05, -1.71661376953125e-05, -0.0003643035888671875, -5.7220458984375e-06, -3.814697265625e-06, -4.9591064453125e-05, -2.8119893074035645, -8.583032467868179e-06, -2.6702880859375e-05, -0.03803443908691406, -9.34600830078125e-05, -0.00011252739932388067, -4.768370445162873e-07, -2.56297571468167e-05, -1.1920928244535389e-07, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Boar", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 221, 66, 155, "Boar", "<EOS>", 70, 89, 88, 80, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "_", "<EOS>", 229, 110, 181, "1", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, MINION_TYPE.BEAST)\n\n    def create_minion(self, _):\n        return Minion(1, 1)\n", "score": -8.0470495169805, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Boar", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template31"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}, {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "_"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 1, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -2.47955322265625e-05, -4.57763671875e-05, -8.7738037109375e-05, -2.09808349609375e-05, -1.0728830375228426e-06, -1.8596634618006647e-05, -1.52587890625e-05, -1.52587890625e-05, -2.09808349609375e-05, -1.1444091796875e-05, -3.24249267578125e-05, -2.706050690903794e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0002918243408203125, -1.9073486328125e-06, -2.86102294921875e-05, -3.3978490829467773, -0.0001544952392578125, -0.04680919647216797, -3.24249267578125e-05, -3.814697265625e-06, -1.2278481335670222e-05, -1.1086463018727954e-05, -0.25232982635498047, -0.000202178955078125, -4.1961669921875e-05, -6.67572021484375e-05, -7.62939453125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -9.560585021972656e-05, -1.9073486328125e-06, -0.0026966333389282227, 0.0, -2.288818359375e-05, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -1.71661376953125e-05, -1.52587890625e-05, -0.0003509521484375, -5.7220458984375e-06, -3.814697265625e-06, -5.53131103515625e-05, -4.34456205368042, -9.775130820344202e-06, -2.09808349609375e-05, -0.000698089599609375, -4.00543212890625e-05, -0.0001031108622555621, -3.576278118089249e-07, -1.7404434402124025e-05, -1.1920928244535389e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Boar", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 221, 66, 155, "Boar", "<EOS>", 83, 89, 88, 80, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "_", "<EOS>", 229, 110, 181, "1", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.create_minion)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -8.187648770480308, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Boar", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "create_minion", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 1, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -2.47955322265625e-05, -4.57763671875e-05, -8.7738037109375e-05, -2.09808349609375e-05, -1.0728830375228426e-06, -1.8596634618006647e-05, -1.52587890625e-05, -1.52587890625e-05, -2.09808349609375e-05, -1.1444091796875e-05, -3.24249267578125e-05, -2.706050690903794e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0002918243408203125, -1.9073486328125e-06, -2.86102294921875e-05, -0.034282684326171875, -1.52587890625e-05, -0.000560760498046875, -4.57763671875e-05, -3.814697265625e-06, -2.7656173188006505e-05, -0.00023567676544189453, -0.0009975433349609375, -0.000125885009765625, -4.57763671875e-05, -6.866455078125e-05, -1.9073486328125e-06, 0.0, -1.3470649719238281e-05, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -8.149426460266113, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -6.29425048828125e-05, -0.0002079010009765625, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -0.00045990943908691406, 0.0, -1.9073486328125e-06, -9.5367431640625e-05, -8.0108642578125e-05, -6.651666626567021e-05, -8.344646857949556e-07, -2.5391382223460823e-05, -2.3841855067985307e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Boar", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Boar", "<EOS>", 70, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "create_minion", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "1", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, MINION_TYPE.BEAST)\n\n    def create_minion(self, Has):\n        return Minion(1, 1)\n", "score": -8.264362084067493, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Boar", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template31"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}, {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "Has"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 1, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -2.47955322265625e-05, -4.57763671875e-05, -8.7738037109375e-05, -2.09808349609375e-05, -1.0728830375228426e-06, -1.8596634618006647e-05, -1.52587890625e-05, -1.52587890625e-05, -2.09808349609375e-05, -1.1444091796875e-05, -3.24249267578125e-05, -2.706050690903794e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0002918243408203125, -1.9073486328125e-06, -2.86102294921875e-05, -3.3978490829467773, -0.0001544952392578125, -0.04680919647216797, -3.24249267578125e-05, -3.814697265625e-06, -1.2278481335670222e-05, -1.1086463018727954e-05, -0.25232982635498047, -0.000202178955078125, -4.1961669921875e-05, -6.67572021484375e-05, -7.62939453125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -9.560585021972656e-05, -1.9073486328125e-06, -0.0026966333389282227, 0.0, -2.288818359375e-05, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -1.71661376953125e-05, -1.52587890625e-05, -0.0003509521484375, -5.7220458984375e-06, -3.814697265625e-06, -5.53131103515625e-05, -4.561758518218994, -0.00013910782581660897, -8.7738037109375e-05, -0.00043487548828125, -0.0002422332763671875, -7.879434997448698e-05, -3.576278118089249e-07, -2.276875420648139e-05, -1.1920928244535389e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Boar", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 221, 66, 155, "Boar", "<EOS>", 83, 89, 88, 80, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "Has", "<EOS>", 229, 110, 181, "1", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.HUNTER)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -8.507644888754925, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Boar", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 1, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -2.47955322265625e-05, -4.57763671875e-05, -8.7738037109375e-05, -2.09808349609375e-05, -1.0728830375228426e-06, -1.8596634618006647e-05, -1.52587890625e-05, -1.52587890625e-05, -2.09808349609375e-05, -1.1444091796875e-05, -3.24249267578125e-05, -2.706050690903794e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0002918243408203125, -1.9073486328125e-06, -2.86102294921875e-05, -0.034282684326171875, -1.52587890625e-05, -0.000560760498046875, -4.57763671875e-05, -3.814697265625e-06, -2.7656173188006505e-05, -0.00023567676544189453, -0.0009975433349609375, -0.000125885009765625, -4.57763671875e-05, -6.866455078125e-05, -1.9073486328125e-06, 0.0, -1.3470649719238281e-05, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -8.469095230102539, 0.0, -2.09808349609375e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -8.20159912109375e-05, -0.0002002716064453125, -1.9073486328125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -0.0007042884826660156, 0.0, -1.9073486328125e-06, -0.0001068115234375, -0.0001010894775390625, -7.092711166478693e-05, -7.152555099310121e-07, -2.5868246666505e-05, -2.3841855067985307e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Boar", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Boar", "<EOS>", 70, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "HUNTER", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "1", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "return Card\n", "score": -13.013713479042053, "model_output": {"_type": "Module", "body": [{"_type": "Return", "value": {"id": "Card", "_type": "Name"}}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -2.47955322265625e-05, -4.57763671875e-05, -11.257467269897461, -0.09820556640625, -0.837834358215332, -0.0008392333984375, -0.8133789300918579, -0.005854606628417969, -3.0517578125e-05], "choice_history": [93, 145, 230, 107, 153, 23, 146, "Card", "<EOS>", 109]}, {"inferred_code": "return \n", "score": -14.55570673942566, "model_output": {"_type": "Module", "body": [{"_type": "Return", "value": {"id": "", "_type": "Name"}}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -2.47955322265625e-05, -4.57763671875e-05, -11.257467269897461, -0.09820556640625, -0.837834358215332, -0.0008392333984375, -2.3534696102142334, -0.0077877044677734375], "choice_history": [93, 145, 230, 107, 153, 23, 146, "<EOS>", 109]}, {"inferred_code": "super().use(player, game)\n", "score": -17.273996353149414, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -2.47955322265625e-05, -4.57763671875e-05, -11.939691543579102, -5.334201812744141], "choice_history": [93, 145, 230, 108, 109]}, {"inferred_code": "", "score": -19.127918243408203, "model_output": {"_type": "Module", "body": []}, "score_history": [-3.24249267578125e-05, -2.47955322265625e-05, -19.12786102294922], "choice_history": [93, 145, 228]}], "index": 15}
{"beams": [{"inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target, filter_func=lambda target: \n            minion.card.minion_type is MINION_TYPE.BEAST and minion.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -1.1975876912049443, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Charge", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template16"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"_type": "Template30"}}}, "_type": "Compare", "comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Is"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"_type": "Template30"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "<UNK>", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -0.00011444091796875, -9.5367431640625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.576278118089249e-07, -4.529942543740617e-06, -7.62939453125e-06, -0.0004405975341796875, -9.5367431640625e-06, -0.0001583099365234375, -9.5367431640625e-06, -0.00023472309112548828, -5.7220458984375e-06, -3.62396240234375e-05, -0.00018310546875, -4.38690185546875e-05, -0.0001983642578125, -0.000148773193359375, -4.9591064453125e-05, -0.000553131103515625, -0.0002231597900390625, -1.1444091796875e-05, -7.62939453125e-06, -1.3113011618770543e-06, -3.576278118089249e-07, -0.00031280517578125, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0008927583694458008, 0.0, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.00018310546875, -1.9073486328125e-06, -0.09944915771484375, 0.0, -0.0002498626708984375, 0.0, -9.5367431640625e-06, -2.6702880859375e-05, -0.000240325927734375, 0.0, -0.0012369155883789062, -9.5367431640625e-06, -0.00118255615234375, 0.0, -0.00010406970250187442, -7.62939453125e-06, -0.07364749908447266, -9.894371032714844e-06, -0.0025234222412109375, -0.008258819580078125, -4.1961669921875e-05, -0.0011682510375976562, -5.53131103515625e-05, -0.0004062652587890625, -0.002559661865234375, -0.0015106201171875, -0.0001010894775390625, -9.5367431640625e-06, -0.5249220132827759, -8.809565770206973e-05, -0.0005245208740234375, -0.000537872314453125, -0.002582550048828125, -0.0003509521484375, -0.0016117095947265625, -0.0001373291015625, -0.0001354217529296875, 0.0, -0.10833930969238281, -3.814697265625e-06, -0.005641937255859375, -0.005248486064374447, -8.702266313775908e-06, -0.05152962729334831, -4.172325134277344e-06, -0.000102996826171875, -0.03730964660644531, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -0.0002002716064453125, 0.0, -7.843971252441406e-05, 0.0, -0.033968448638916016, 0.0, -3.62396240234375e-05, -0.00122833251953125, -0.0036821365356445312, 0.0, -0.0013599395751953125, -0.0035665021277964115, -2.0265579223632812e-06, -9.5367431640625e-06, -6.103515625e-05, -0.0007477998733520508, -9.5367431640625e-06, -8.20159912109375e-05, -3.814697265625e-06, -0.0003528594970703125, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -1.1563301086425781e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -4.76837158203125e-05, -5.1856040954589844e-05, -0.0009593963623046875, -7.43865966796875e-05, -0.0038547515869140625, -8.7738037109375e-05, -9.34600830078125e-05, -1.33514404296875e-05, -0.00017547607421875, -1.52587890625e-05, -0.0003223419189453125, -0.015370259992778301, -2.9802276912960224e-06, -0.0001010894775390625, -0.0060405731201171875, -4.76837158203125e-05, -0.000263214111328125, -0.0001659393310546875, -0.000156402587890625, -0.0001811981201171875, -6.29425048828125e-05, -0.005794525146484375, -0.1657346487045288, 0.0, -2.288818359375e-05, -0.00176239013671875, -2.288818359375e-05, -0.0001430511474609375, -1.52587890625e-05, -0.001740097999572754, -1.9073486328125e-06, -1.33514404296875e-05, -0.0012264251708984375, -1.1444091796875e-05, -0.0075866892002522945, -0.004072131589055061, -2.47955322265625e-05], "choice_history": [93, 145, 230, 101, 125, "Charge", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Charge", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 15, 116, 41, "card", "<EOS>", "minion_type", "<EOS>", 213, 10, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 58, 121, 15, 116, 41, "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 52, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "<UNK>", "<EOS>", 109]}, {"inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target, filter_func=lambda minion: \n            minion.card.minion_type is MINION_TYPE.BEAST and minion.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -2.111971791537826, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Charge", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template16"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "minion"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"_type": "Template30"}}}, "_type": "Compare", "comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Is"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"_type": "Template30"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "<UNK>", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -0.00011444091796875, -9.5367431640625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.576278118089249e-07, -4.529942543740617e-06, -7.62939453125e-06, -0.0004405975341796875, -9.5367431640625e-06, -0.0001583099365234375, -9.5367431640625e-06, -0.00023472309112548828, -5.7220458984375e-06, -3.62396240234375e-05, -0.00018310546875, -4.38690185546875e-05, -0.0001983642578125, -0.000148773193359375, -4.9591064453125e-05, -0.000553131103515625, -0.0002231597900390625, -1.1444091796875e-05, -7.62939453125e-06, -1.3113011618770543e-06, -3.576278118089249e-07, -0.00031280517578125, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0008927583694458008, 0.0, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.00018310546875, -1.9073486328125e-06, -0.09944915771484375, 0.0, -0.0002498626708984375, 0.0, -9.5367431640625e-06, -2.6702880859375e-05, -0.000240325927734375, 0.0, -0.0012369155883789062, -9.5367431640625e-06, -0.00118255615234375, 0.0, -0.00010406970250187442, -7.62939453125e-06, -0.07364749908447266, -9.894371032714844e-06, -0.0025234222412109375, -0.008258819580078125, -4.1961669921875e-05, -0.0011682510375976562, -5.53131103515625e-05, -0.0004062652587890625, -0.002559661865234375, -0.0015106201171875, -0.0001010894775390625, -9.5367431640625e-06, -1.4440361261367798, -0.0001764297194313258, -0.0028629302978515625, -0.0010471343994140625, -0.0006999969482421875, -0.00045013427734375, -0.0029039382934570312, -0.0001201629638671875, -0.000125885009765625, 0.0, -0.0897817611694336, -3.814697265625e-06, -0.0064373016357421875, -0.005053466651588678, -8.344639354618266e-06, -0.06296128034591675, -4.172325134277344e-06, -0.0001049041748046875, -0.03785514831542969, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -0.0002040863037109375, 0.0, -7.462501525878906e-05, 0.0, -0.033487558364868164, 0.0, -3.62396240234375e-05, -0.0012340545654296875, -0.003032684326171875, 0.0, -0.0014019012451171875, -0.0034383523743599653, -2.0265579223632812e-06, -9.5367431640625e-06, -6.103515625e-05, -0.0007420778274536133, -9.5367431640625e-06, -8.20159912109375e-05, -3.814697265625e-06, -0.0003509521484375, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.1563301086425781e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -4.57763671875e-05, -5.1856040954589844e-05, -0.0009632110595703125, -7.43865966796875e-05, -0.0038547515869140625, -8.7738037109375e-05, -9.34600830078125e-05, -1.33514404296875e-05, -0.00017547607421875, -1.52587890625e-05, -0.0003223419189453125, -0.015389454551041126, -2.861018856492592e-06, -0.0001010894775390625, -0.006038665771484375, -4.76837158203125e-05, -0.000263214111328125, -0.0001659393310546875, -0.000156402587890625, -0.0001811981201171875, -6.29425048828125e-05, -0.00579833984375, -0.16576135158538818, 0.0, -2.288818359375e-05, -0.00176239013671875, -2.288818359375e-05, -0.0001430511474609375, -1.52587890625e-05, -0.001740097999572754, -1.9073486328125e-06, -1.33514404296875e-05, -0.00122833251953125, -1.1444091796875e-05, -0.007586097810417414, -0.004071894101798534, -2.47955322265625e-05], "choice_history": [93, 145, 230, 101, 125, "Charge", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Charge", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "minion", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 15, 116, 41, "card", "<EOS>", "minion_type", "<EOS>", 213, 10, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 58, 121, 15, 116, 41, "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 52, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "<UNK>", "<EOS>", 109]}, {"inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -2.634441046903021, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Charge", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template16"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "<UNK>", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -0.00011444091796875, -9.5367431640625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.576278118089249e-07, -4.529942543740617e-06, -7.62939453125e-06, -0.0004405975341796875, -9.5367431640625e-06, -0.0001583099365234375, -9.5367431640625e-06, -0.00023472309112548828, -5.7220458984375e-06, -3.62396240234375e-05, -0.00018310546875, -4.38690185546875e-05, -0.0001983642578125, -0.000148773193359375, -4.9591064453125e-05, -0.000553131103515625, -0.0002231597900390625, -1.1444091796875e-05, -7.62939453125e-06, -1.3113011618770543e-06, -3.576278118089249e-07, -0.00031280517578125, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0008927583694458008, 0.0, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.00018310546875, -1.9073486328125e-06, -2.3621292114257812, 0.0, -0.00025177001953125, 0.0, -0.0001049041748046875, -0.0001010894775390625, -0.0002117156982421875, 0.0, -0.000209808349609375, -9.5367431640625e-06, -0.0006810426712036133, -1.9073486328125e-06, -0.00016498564218636602, -5.841255187988281e-06, -0.04379856586456299, -1.0132789611816406e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.0517578125e-05, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -0.00028228759765625, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -9.655952453613281e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -3.4332275390625e-05, -7.87973403930664e-05, -0.011205673217773438, -3.814697265625e-05, -0.001399993896484375, -5.7220458984375e-05, -8.7738037109375e-05, -1.71661376953125e-05, -0.0001373291015625, -1.71661376953125e-05, -0.0003719329833984375, -0.014640472829341888, -9.65590606938349e-06, -0.00011444091796875, -0.008243560791015625, -4.57763671875e-05, -0.000225067138671875, -0.0002079010009765625, -9.5367431640625e-05, -0.00014495849609375, -1.9073486328125e-05, -0.0018939971923828125, -0.1666027307510376, 0.0, -2.09808349609375e-05, -0.0016040802001953125, -2.288818359375e-05, -0.0001239776611328125, -1.71661376953125e-05, -0.0015207529067993164, -1.9073486328125e-06, -1.33514404296875e-05, -0.0012149810791015625, -1.1444091796875e-05, -0.007931295782327652, -0.004161062650382519, -2.288818359375e-05], "choice_history": [93, 145, 230, 101, 125, "Charge", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Charge", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 52, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "<UNK>", "<EOS>", 109]}, {"inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target, filter_func=lambda character:\n            minion.card.minion_type is MINION_TYPE.BEAST and minion.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -2.860030550478541, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Charge", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template16"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "character"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"_type": "Template30"}}}, "_type": "Compare", "comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Is"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"_type": "Template30"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "<UNK>", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -0.00011444091796875, -9.5367431640625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.576278118089249e-07, -4.529942543740617e-06, -7.62939453125e-06, -0.0004405975341796875, -9.5367431640625e-06, -0.0001583099365234375, -9.5367431640625e-06, -0.00023472309112548828, -5.7220458984375e-06, -3.62396240234375e-05, -0.00018310546875, -4.38690185546875e-05, -0.0001983642578125, -0.000148773193359375, -4.9591064453125e-05, -0.000553131103515625, -0.0002231597900390625, -1.1444091796875e-05, -7.62939453125e-06, -1.3113011618770543e-06, -3.576278118089249e-07, -0.00031280517578125, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0008927583694458008, 0.0, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.00018310546875, -1.9073486328125e-06, -0.09944915771484375, 0.0, -0.0002498626708984375, 0.0, -9.5367431640625e-06, -2.6702880859375e-05, -0.000240325927734375, 0.0, -0.0012369155883789062, -9.5367431640625e-06, -0.00118255615234375, 0.0, -0.00010406970250187442, -7.62939453125e-06, -0.07364749908447266, -9.894371032714844e-06, -0.0025234222412109375, -0.008258819580078125, -4.1961669921875e-05, -0.0011682510375976562, -5.53131103515625e-05, -0.0004062652587890625, -0.002559661865234375, -0.0015106201171875, -0.0001010894775390625, -9.5367431640625e-06, -2.219153881072998, -1.8358230590820312e-05, -0.006154060363769531, -0.003475189208984375, -0.0007648468017578125, -0.001026153564453125, -0.0021343231201171875, -0.000118255615234375, -0.0001468658447265625, 0.0, -0.07113361358642578, -5.7220458984375e-06, -0.005631446838378906, -0.005460918880999088, -7.867804924899247e-06, -0.044608257710933685, -4.172325134277344e-06, -0.0001125335693359375, -0.04170989990234375, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -0.0001697540283203125, 0.0, -7.462501525878906e-05, 0.0, -0.034740567207336426, 0.0, -4.38690185546875e-05, -0.0010967254638671875, -0.002826690673828125, 0.0, -0.0014801025390625, -0.003350375685840845, -2.0265579223632812e-06, -9.5367431640625e-06, -6.103515625e-05, -0.0007535219192504883, -7.62939453125e-06, -8.0108642578125e-05, -3.814697265625e-06, -0.0003528594970703125, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.1682510375976562e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -4.57763671875e-05, -5.1856040954589844e-05, -0.0009555816650390625, -7.2479248046875e-05, -0.0038766860961914062, -8.7738037109375e-05, -9.34600830078125e-05, -1.33514404296875e-05, -0.00017547607421875, -1.52587890625e-05, -0.0003223419189453125, -0.015406858175992966, -2.861018856492592e-06, -0.0001010894775390625, -0.0060176849365234375, -4.76837158203125e-05, -0.000263214111328125, -0.0001659393310546875, -0.000156402587890625, -0.0001811981201171875, -6.4849853515625e-05, -0.0058231353759765625, -0.16586530208587646, 0.0, -2.288818359375e-05, -0.00176239013671875, -2.288818359375e-05, -0.0001430511474609375, -1.52587890625e-05, -0.0017429590225219727, -1.9073486328125e-06, -1.33514404296875e-05, -0.00122833251953125, -1.1444091796875e-05, -0.007585151121020317, -0.004071059171110392, -2.47955322265625e-05], "choice_history": [93, 145, 230, 101, 125, "Charge", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Charge", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "character", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 15, 116, 41, "card", "<EOS>", "minion_type", "<EOS>", 213, 10, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 58, 121, 15, 116, 41, "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 52, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "<UNK>", "<EOS>", 109]}, {"inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target, filter_func=lambda target: \n            minion.card.minion_type is MINION_TYPE.BEAST and minion.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.change_attack(2)\n", "score": -3.3181856167077513, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Charge", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template16"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"_type": "Template30"}}}, "_type": "Compare", "comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Is"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"_type": "Template30"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -0.00011444091796875, -9.5367431640625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.576278118089249e-07, -4.529942543740617e-06, -7.62939453125e-06, -0.0004405975341796875, -9.5367431640625e-06, -0.0001583099365234375, -9.5367431640625e-06, -0.00023472309112548828, -5.7220458984375e-06, -3.62396240234375e-05, -0.00018310546875, -4.38690185546875e-05, -0.0001983642578125, -0.000148773193359375, -4.9591064453125e-05, -0.000553131103515625, -0.0002231597900390625, -1.1444091796875e-05, -7.62939453125e-06, -1.3113011618770543e-06, -3.576278118089249e-07, -0.00031280517578125, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0008927583694458008, 0.0, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.00018310546875, -1.9073486328125e-06, -0.09944915771484375, 0.0, -0.0002498626708984375, 0.0, -9.5367431640625e-06, -2.6702880859375e-05, -0.000240325927734375, 0.0, -0.0012369155883789062, -9.5367431640625e-06, -0.00118255615234375, 0.0, -0.00010406970250187442, -7.62939453125e-06, -0.07364749908447266, -9.894371032714844e-06, -0.0025234222412109375, -0.008258819580078125, -4.1961669921875e-05, -0.0011682510375976562, -5.53131103515625e-05, -0.0004062652587890625, -0.002559661865234375, -0.0015106201171875, -0.0001010894775390625, -9.5367431640625e-06, -0.5249220132827759, -8.809565770206973e-05, -0.0005245208740234375, -0.000537872314453125, -0.002582550048828125, -0.0003509521484375, -0.0016117095947265625, -0.0001373291015625, -0.0001354217529296875, 0.0, -0.10833930969238281, -3.814697265625e-06, -0.005641937255859375, -0.005248486064374447, -8.702266313775908e-06, -0.05152962729334831, -4.172325134277344e-06, -0.000102996826171875, -0.03730964660644531, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -0.0002002716064453125, 0.0, -7.843971252441406e-05, 0.0, -0.033968448638916016, 0.0, -3.62396240234375e-05, -0.00122833251953125, -0.0036821365356445312, 0.0, -0.0013599395751953125, -0.0035665021277964115, -2.0265579223632812e-06, -9.5367431640625e-06, -6.103515625e-05, -0.0007477998733520508, -9.5367431640625e-06, -8.20159912109375e-05, -3.814697265625e-06, -0.0003528594970703125, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -1.1563301086425781e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -4.76837158203125e-05, -5.1856040954589844e-05, -0.0009593963623046875, -7.43865966796875e-05, -0.0038547515869140625, -8.7738037109375e-05, -9.34600830078125e-05, -1.33514404296875e-05, -0.00017547607421875, -1.52587890625e-05, -0.0003223419189453125, -0.015370259992778301, -2.9802276912960224e-06, -0.0001010894775390625, -0.0060405731201171875, -4.76837158203125e-05, -0.000263214111328125, -0.0001659393310546875, -0.000156402587890625, -0.0001811981201171875, -6.29425048828125e-05, -0.005794525146484375, -2.299487352371216, 0.0, -3.814697265625e-06, -0.0024394989013671875, -0.00104522705078125], "choice_history": [93, 145, 230, 101, 125, "Charge", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Charge", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 15, 116, 41, "card", "<EOS>", "minion_type", "<EOS>", 213, 10, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 58, 121, 15, 116, 41, "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 69, 109]}, {"inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: minion.\n            card.minion_type is MINION_TYPE.BEAST and minion.spell_targetable()\n            )\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -3.8526547015105734, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Charge", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template16"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"_type": "Template30"}}}, "_type": "Compare", "comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Is"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"_type": "Template30"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "<UNK>", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -0.00011444091796875, -9.5367431640625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.576278118089249e-07, -4.529942543740617e-06, -7.62939453125e-06, -0.0004405975341796875, -9.5367431640625e-06, -0.0001583099365234375, -9.5367431640625e-06, -0.00023472309112548828, -5.7220458984375e-06, -3.62396240234375e-05, -0.00018310546875, -4.38690185546875e-05, -0.0001983642578125, -0.000148773193359375, -4.9591064453125e-05, -0.000553131103515625, -0.0002231597900390625, -1.1444091796875e-05, -7.62939453125e-06, -1.3113011618770543e-06, -3.576278118089249e-07, -0.00031280517578125, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0008927583694458008, 0.0, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.00018310546875, -1.9073486328125e-06, -0.09944915771484375, 0.0, -0.0002498626708984375, 0.0, -9.5367431640625e-06, -2.6702880859375e-05, -0.000240325927734375, 0.0, -0.0012369155883789062, -9.5367431640625e-06, -0.00118255615234375, 0.0, -0.00010406970250187442, -7.62939453125e-06, -2.8072338104248047, -1.4424312212213408e-05, -0.0035238265991210938, -0.008544921875, -3.814697265625e-05, -0.0014801025390625, -6.866455078125e-05, -0.000438690185546875, -0.004344940185546875, -0.001369476318359375, -0.0001316070556640625, -1.9073486328125e-05, -0.45958781242370605, -0.00011110305058537051, -0.0005855560302734375, -0.000522613525390625, -0.002532958984375, -0.0003948211669921875, -0.001323699951171875, -0.00012969970703125, -0.000125885009765625, 0.0, -0.09543323516845703, -5.7220458984375e-06, -0.0053253173828125, -0.0054443757981061935, -8.702266313775908e-06, -0.048643212765455246, -4.172325134277344e-06, -0.0001049041748046875, -0.03650474548339844, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -0.000209808349609375, 0.0, -7.843971252441406e-05, 0.0, -0.03394973278045654, 0.0, -3.814697265625e-05, -0.0012664794921875, -0.003998756408691406, 0.0, -0.001293182373046875, -0.003621815238147974, -2.0265579223632812e-06, -9.5367431640625e-06, -6.29425048828125e-05, -0.0007544755935668945, -7.62939453125e-06, -8.20159912109375e-05, -3.814697265625e-06, -0.0003528594970703125, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -1.1563301086425781e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -4.76837158203125e-05, -5.1856040954589844e-05, -0.0009632110595703125, -7.43865966796875e-05, -0.0038461685180664062, -8.7738037109375e-05, -9.34600830078125e-05, -1.33514404296875e-05, -0.00017547607421875, -1.52587890625e-05, -0.0003223419189453125, -0.01539577730000019, -2.861018856492592e-06, -0.0001010894775390625, -0.0060253143310546875, -4.76837158203125e-05, -0.000263214111328125, -0.0001659393310546875, -0.000156402587890625, -0.0001811981201171875, -6.29425048828125e-05, -0.005809783935546875, -0.16581475734710693, 0.0, -2.288818359375e-05, -0.00176239013671875, -2.288818359375e-05, -0.0001430511474609375, -1.52587890625e-05, -0.0017410516738891602, -1.9073486328125e-06, -1.33514404296875e-05, -0.0012264251708984375, -1.1444091796875e-05, -0.007585742510855198, -0.004070940427482128, -2.47955322265625e-05], "choice_history": [93, 145, 230, 101, 125, "Charge", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Charge", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 15, 116, 41, "card", "<EOS>", "minion_type", "<EOS>", 213, 10, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 58, 121, 15, 116, 41, "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 52, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "<UNK>", "<EOS>", 109]}, {"inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target, filter_func=lambda attacker:\n            minion.card.minion_type is MINION_TYPE.BEAST and minion.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -4.1890234374093325, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Charge", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template16"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "attacker"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"_type": "Template30"}}}, "_type": "Compare", "comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Is"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"_type": "Template30"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "<UNK>", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -0.00011444091796875, -9.5367431640625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.576278118089249e-07, -4.529942543740617e-06, -7.62939453125e-06, -0.0004405975341796875, -9.5367431640625e-06, -0.0001583099365234375, -9.5367431640625e-06, -0.00023472309112548828, -5.7220458984375e-06, -3.62396240234375e-05, -0.00018310546875, -4.38690185546875e-05, -0.0001983642578125, -0.000148773193359375, -4.9591064453125e-05, -0.000553131103515625, -0.0002231597900390625, -1.1444091796875e-05, -7.62939453125e-06, -1.3113011618770543e-06, -3.576278118089249e-07, -0.00031280517578125, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0008927583694458008, 0.0, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.00018310546875, -1.9073486328125e-06, -0.09944915771484375, 0.0, -0.0002498626708984375, 0.0, -9.5367431640625e-06, -2.6702880859375e-05, -0.000240325927734375, 0.0, -0.0012369155883789062, -9.5367431640625e-06, -0.00118255615234375, 0.0, -0.00010406970250187442, -7.62939453125e-06, -0.07364749908447266, -9.894371032714844e-06, -0.0025234222412109375, -0.008258819580078125, -4.1961669921875e-05, -0.0011682510375976562, -5.53131103515625e-05, -0.0004062652587890625, -0.002559661865234375, -0.0015106201171875, -0.0001010894775390625, -9.5367431640625e-06, -3.5544495582580566, -1.049041748046875e-05, -0.008348464965820312, -0.000896453857421875, -0.0005016326904296875, -0.000484466552734375, -0.0015192031860351562, -9.1552734375e-05, -0.0001068115234375, 0.0, -0.062272071838378906, -5.7220458984375e-06, -0.0070056915283203125, -0.005671601742506027, -8.702266313775908e-06, -0.055292386561632156, -4.172325134277344e-06, -8.7738037109375e-05, -0.034030914306640625, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -0.0001773834228515625, 0.0, -7.271766662597656e-05, 0.0, -0.03434252738952637, 0.0, -3.4332275390625e-05, -0.00115203857421875, -0.0030279159545898438, 0.0, -0.0015087127685546875, -0.003547190222889185, -2.0265579223632812e-06, -9.5367431640625e-06, -6.29425048828125e-05, -0.0007315874099731445, -9.5367431640625e-06, -8.20159912109375e-05, -3.814697265625e-06, -0.000347137451171875, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.1563301086425781e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -4.57763671875e-05, -5.1856040954589844e-05, -0.0009632110595703125, -7.2479248046875e-05, -0.0038557052612304688, -8.7738037109375e-05, -9.34600830078125e-05, -1.33514404296875e-05, -0.00017547607421875, -1.52587890625e-05, -0.0003223419189453125, -0.015389098785817623, -2.861018856492592e-06, -0.0001010894775390625, -0.0060405731201171875, -4.76837158203125e-05, -0.000263214111328125, -0.0001659393310546875, -0.000156402587890625, -0.0001811981201171875, -6.29425048828125e-05, -0.005802154541015625, -0.16571462154388428, 0.0, -2.288818359375e-05, -0.0017604827880859375, -2.288818359375e-05, -0.0001430511474609375, -1.52587890625e-05, -0.0017410516738891602, -1.9073486328125e-06, -1.33514404296875e-05, -0.0012264251708984375, -1.1444091796875e-05, -0.007584796287119389, -0.00407058373093605, -2.47955322265625e-05], "choice_history": [93, 145, 230, 101, 125, "Charge", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Charge", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "attacker", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 15, 116, 41, "card", "<EOS>", "minion_type", "<EOS>", 213, 10, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 58, 121, 15, 116, 41, "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 52, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "<UNK>", "<EOS>", 109]}, {"inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target, filter_func=lambda minion: \n            minion.card.minion_type is MINION_TYPE.BEAST and minion.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.change_attack(2)\n", "score": -4.232314007526611, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Charge", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template16"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "minion"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"_type": "Template30"}}}, "_type": "Compare", "comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Is"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"_type": "Template30"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -0.00011444091796875, -9.5367431640625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.576278118089249e-07, -4.529942543740617e-06, -7.62939453125e-06, -0.0004405975341796875, -9.5367431640625e-06, -0.0001583099365234375, -9.5367431640625e-06, -0.00023472309112548828, -5.7220458984375e-06, -3.62396240234375e-05, -0.00018310546875, -4.38690185546875e-05, -0.0001983642578125, -0.000148773193359375, -4.9591064453125e-05, -0.000553131103515625, -0.0002231597900390625, -1.1444091796875e-05, -7.62939453125e-06, -1.3113011618770543e-06, -3.576278118089249e-07, -0.00031280517578125, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0008927583694458008, 0.0, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.00018310546875, -1.9073486328125e-06, -0.09944915771484375, 0.0, -0.0002498626708984375, 0.0, -9.5367431640625e-06, -2.6702880859375e-05, -0.000240325927734375, 0.0, -0.0012369155883789062, -9.5367431640625e-06, -0.00118255615234375, 0.0, -0.00010406970250187442, -7.62939453125e-06, -0.07364749908447266, -9.894371032714844e-06, -0.0025234222412109375, -0.008258819580078125, -4.1961669921875e-05, -0.0011682510375976562, -5.53131103515625e-05, -0.0004062652587890625, -0.002559661865234375, -0.0015106201171875, -0.0001010894775390625, -9.5367431640625e-06, -1.4440361261367798, -0.0001764297194313258, -0.0028629302978515625, -0.0010471343994140625, -0.0006999969482421875, -0.00045013427734375, -0.0029039382934570312, -0.0001201629638671875, -0.000125885009765625, 0.0, -0.0897817611694336, -3.814697265625e-06, -0.0064373016357421875, -0.005053466651588678, -8.344639354618266e-06, -0.06296128034591675, -4.172325134277344e-06, -0.0001049041748046875, -0.03785514831542969, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -0.0002040863037109375, 0.0, -7.462501525878906e-05, 0.0, -0.033487558364868164, 0.0, -3.62396240234375e-05, -0.0012340545654296875, -0.003032684326171875, 0.0, -0.0014019012451171875, -0.0034383523743599653, -2.0265579223632812e-06, -9.5367431640625e-06, -6.103515625e-05, -0.0007420778274536133, -9.5367431640625e-06, -8.20159912109375e-05, -3.814697265625e-06, -0.0003509521484375, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.1563301086425781e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -4.57763671875e-05, -5.1856040954589844e-05, -0.0009632110595703125, -7.43865966796875e-05, -0.0038547515869140625, -8.7738037109375e-05, -9.34600830078125e-05, -1.33514404296875e-05, -0.00017547607421875, -1.52587890625e-05, -0.0003223419189453125, -0.015389454551041126, -2.861018856492592e-06, -0.0001010894775390625, -0.006038665771484375, -4.76837158203125e-05, -0.000263214111328125, -0.0001659393310546875, -0.000156402587890625, -0.0001811981201171875, -6.29425048828125e-05, -0.00579833984375, -2.299257516860962, 0.0, -3.814697265625e-06, -0.00244140625, -0.00104522705078125], "choice_history": [93, 145, 230, 101, 125, "Charge", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Charge", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "minion", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 15, 116, 41, "card", "<EOS>", "minion_type", "<EOS>", 213, 10, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 58, 121, 15, 116, 41, "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 69, 109]}, {"inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target, filter_func=lambda target: \n            minion.card.minion_type is MINION_TYPE.BEAST and minion.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(2)\n", "score": -4.679912854409167, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Charge", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template16"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"_type": "Template30"}}}, "_type": "Compare", "comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Is"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"_type": "Template30"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -0.00011444091796875, -9.5367431640625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.576278118089249e-07, -4.529942543740617e-06, -7.62939453125e-06, -0.0004405975341796875, -9.5367431640625e-06, -0.0001583099365234375, -9.5367431640625e-06, -0.00023472309112548828, -5.7220458984375e-06, -3.62396240234375e-05, -0.00018310546875, -4.38690185546875e-05, -0.0001983642578125, -0.000148773193359375, -4.9591064453125e-05, -0.000553131103515625, -0.0002231597900390625, -1.1444091796875e-05, -7.62939453125e-06, -1.3113011618770543e-06, -3.576278118089249e-07, -0.00031280517578125, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0008927583694458008, 0.0, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.00018310546875, -1.9073486328125e-06, -0.09944915771484375, 0.0, -0.0002498626708984375, 0.0, -9.5367431640625e-06, -2.6702880859375e-05, -0.000240325927734375, 0.0, -0.0012369155883789062, -9.5367431640625e-06, -0.00118255615234375, 0.0, -0.00010406970250187442, -7.62939453125e-06, -0.07364749908447266, -9.894371032714844e-06, -0.0025234222412109375, -0.008258819580078125, -4.1961669921875e-05, -0.0011682510375976562, -5.53131103515625e-05, -0.0004062652587890625, -0.002559661865234375, -0.0015106201171875, -0.0001010894775390625, -9.5367431640625e-06, -0.5249220132827759, -8.809565770206973e-05, -0.0005245208740234375, -0.000537872314453125, -0.002582550048828125, -0.0003509521484375, -0.0016117095947265625, -0.0001373291015625, -0.0001354217529296875, 0.0, -0.10833930969238281, -3.814697265625e-06, -0.005641937255859375, -0.005248486064374447, -8.702266313775908e-06, -0.05152962729334831, -4.172325134277344e-06, -0.000102996826171875, -0.03730964660644531, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -0.0002002716064453125, 0.0, -7.843971252441406e-05, 0.0, -0.033968448638916016, 0.0, -3.62396240234375e-05, -0.00122833251953125, -0.0036821365356445312, 0.0, -0.0013599395751953125, -0.0035665021277964115, -2.0265579223632812e-06, -9.5367431640625e-06, -6.103515625e-05, -0.0007477998733520508, -9.5367431640625e-06, -8.20159912109375e-05, -3.814697265625e-06, -0.0003528594970703125, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -1.1563301086425781e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -4.76837158203125e-05, -5.1856040954589844e-05, -0.0009593963623046875, -7.43865966796875e-05, -0.0038547515869140625, -8.7738037109375e-05, -9.34600830078125e-05, -1.33514404296875e-05, -0.00017547607421875, -1.52587890625e-05, -0.0003223419189453125, -0.015370259992778301, -2.9802276912960224e-06, -0.0001010894775390625, -0.0060405731201171875, -4.76837158203125e-05, -0.000263214111328125, -0.0001659393310546875, -0.000156402587890625, -0.0001811981201171875, -6.29425048828125e-05, -0.005794525146484375, -3.6568429470062256, 0.0, -5.7220458984375e-06, -0.0063304901123046875, -0.0015239715576171875], "choice_history": [93, 145, 230, 101, 125, "Charge", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Charge", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 15, 116, 41, "card", "<EOS>", "minion_type", "<EOS>", 213, 10, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 58, 121, 15, 116, 41, "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 69, 109]}, {"inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.change_attack(2)\n", "score": -4.699532650338597, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Charge", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template16"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -0.00011444091796875, -9.5367431640625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.576278118089249e-07, -4.529942543740617e-06, -7.62939453125e-06, -0.0004405975341796875, -9.5367431640625e-06, -0.0001583099365234375, -9.5367431640625e-06, -0.00023472309112548828, -5.7220458984375e-06, -3.62396240234375e-05, -0.00018310546875, -4.38690185546875e-05, -0.0001983642578125, -0.000148773193359375, -4.9591064453125e-05, -0.000553131103515625, -0.0002231597900390625, -1.1444091796875e-05, -7.62939453125e-06, -1.3113011618770543e-06, -3.576278118089249e-07, -0.00031280517578125, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0008927583694458008, 0.0, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.00018310546875, -1.9073486328125e-06, -2.3621292114257812, 0.0, -0.00025177001953125, 0.0, -0.0001049041748046875, -0.0001010894775390625, -0.0002117156982421875, 0.0, -0.000209808349609375, -9.5367431640625e-06, -0.0006810426712036133, -1.9073486328125e-06, -0.00016498564218636602, -5.841255187988281e-06, -0.04379856586456299, -1.0132789611816406e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.0517578125e-05, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -0.00028228759765625, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -9.655952453613281e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -3.4332275390625e-05, -7.87973403930664e-05, -0.011205673217773438, -3.814697265625e-05, -0.001399993896484375, -5.7220458984375e-05, -8.7738037109375e-05, -1.71661376953125e-05, -0.0001373291015625, -1.71661376953125e-05, -0.0003719329833984375, -0.014640472829341888, -9.65590606938349e-06, -0.00011444091796875, -0.008243560791015625, -4.57763671875e-05, -0.000225067138671875, -0.0002079010009765625, -9.5367431640625e-05, -0.00014495849609375, -1.9073486328125e-05, -0.0018939971923828125, -2.2439799308776855, 0.0, -3.814697265625e-06, -0.003627777099609375, -0.0007495880126953125], "choice_history": [93, 145, 230, 101, 125, "Charge", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Charge", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 69, 109]}, {"inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda minion: minion.\n            card.minion_type is MINION_TYPE.BEAST and minion.spell_targetable()\n            )\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -4.947820037761403, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Charge", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template16"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "minion"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"_type": "Template30"}}}, "_type": "Compare", "comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Is"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"_type": "Template30"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "<UNK>", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -0.00011444091796875, -9.5367431640625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.576278118089249e-07, -4.529942543740617e-06, -7.62939453125e-06, -0.0004405975341796875, -9.5367431640625e-06, -0.0001583099365234375, -9.5367431640625e-06, -0.00023472309112548828, -5.7220458984375e-06, -3.62396240234375e-05, -0.00018310546875, -4.38690185546875e-05, -0.0001983642578125, -0.000148773193359375, -4.9591064453125e-05, -0.000553131103515625, -0.0002231597900390625, -1.1444091796875e-05, -7.62939453125e-06, -1.3113011618770543e-06, -3.576278118089249e-07, -0.00031280517578125, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0008927583694458008, 0.0, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.00018310546875, -1.9073486328125e-06, -0.09944915771484375, 0.0, -0.0002498626708984375, 0.0, -9.5367431640625e-06, -2.6702880859375e-05, -0.000240325927734375, 0.0, -0.0012369155883789062, -9.5367431640625e-06, -0.00118255615234375, 0.0, -0.00010406970250187442, -7.62939453125e-06, -2.8072338104248047, -1.4424312212213408e-05, -0.0035238265991210938, -0.008544921875, -3.814697265625e-05, -0.0014801025390625, -6.866455078125e-05, -0.000438690185546875, -0.004344940185546875, -0.001369476318359375, -0.0001316070556640625, -1.9073486328125e-05, -1.5551512241363525, -0.00022888180683366954, -0.0027647018432617188, -0.0010528564453125, -0.00066375732421875, -0.0005168914794921875, -0.0022001266479492188, -0.0001220703125, -0.00011444091796875, 0.0, -0.08168601989746094, -3.814697265625e-06, -0.006159782409667969, -0.00527641037479043, -8.463848644169047e-06, -0.05999916419386864, -4.172325134277344e-06, -0.0001068115234375, -0.037001609802246094, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -0.000213623046875, 0.0, -7.462501525878906e-05, 0.0, -0.03350245952606201, 0.0, -3.62396240234375e-05, -0.0012836456298828125, -0.0033502578735351562, 0.0, -0.0013179779052734375, -0.003518580226227641, -2.0265579223632812e-06, -9.5367431640625e-06, -6.29425048828125e-05, -0.0007544755935668945, -7.62939453125e-06, -8.20159912109375e-05, -3.814697265625e-06, -0.0003509521484375, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.1563301086425781e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -4.57763671875e-05, -5.1856040954589844e-05, -0.0009670257568359375, -7.43865966796875e-05, -0.0038471221923828125, -8.7738037109375e-05, -9.34600830078125e-05, -1.33514404296875e-05, -0.00017547607421875, -1.52587890625e-05, -0.0003223419189453125, -0.015413064509630203, -2.861018856492592e-06, -0.0001010894775390625, -0.0060214996337890625, -4.76837158203125e-05, -0.000263214111328125, -0.0001659393310546875, -0.000156402587890625, -0.0001811981201171875, -6.4849853515625e-05, -0.0058155059814453125, -0.16584718227386475, 0.0, -2.288818359375e-05, -0.00176239013671875, -2.288818359375e-05, -0.0001430511474609375, -1.52587890625e-05, -0.0017410516738891602, -1.9073486328125e-06, -1.33514404296875e-05, -0.0012264251708984375, -1.1444091796875e-05, -0.007585032843053341, -0.004070702940225601, -2.47955322265625e-05], "choice_history": [93, 145, 230, 101, 125, "Charge", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Charge", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "minion", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 15, 116, 41, "card", "<EOS>", "minion_type", "<EOS>", 213, 10, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 58, 121, 15, 116, 41, "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 52, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "<UNK>", "<EOS>", 109]}, {"inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target, filter_func=lambda character:\n            minion.card.minion_type is MINION_TYPE.BEAST and minion.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.change_attack(2)\n", "score": -4.979594442496591, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Charge", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template16"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "character"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"_type": "Template30"}}}, "_type": "Compare", "comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Is"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"_type": "Template30"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -0.00011444091796875, -9.5367431640625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.576278118089249e-07, -4.529942543740617e-06, -7.62939453125e-06, -0.0004405975341796875, -9.5367431640625e-06, -0.0001583099365234375, -9.5367431640625e-06, -0.00023472309112548828, -5.7220458984375e-06, -3.62396240234375e-05, -0.00018310546875, -4.38690185546875e-05, -0.0001983642578125, -0.000148773193359375, -4.9591064453125e-05, -0.000553131103515625, -0.0002231597900390625, -1.1444091796875e-05, -7.62939453125e-06, -1.3113011618770543e-06, -3.576278118089249e-07, -0.00031280517578125, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0008927583694458008, 0.0, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.00018310546875, -1.9073486328125e-06, -0.09944915771484375, 0.0, -0.0002498626708984375, 0.0, -9.5367431640625e-06, -2.6702880859375e-05, -0.000240325927734375, 0.0, -0.0012369155883789062, -9.5367431640625e-06, -0.00118255615234375, 0.0, -0.00010406970250187442, -7.62939453125e-06, -0.07364749908447266, -9.894371032714844e-06, -0.0025234222412109375, -0.008258819580078125, -4.1961669921875e-05, -0.0011682510375976562, -5.53131103515625e-05, -0.0004062652587890625, -0.002559661865234375, -0.0015106201171875, -0.0001010894775390625, -9.5367431640625e-06, -2.219153881072998, -1.8358230590820312e-05, -0.006154060363769531, -0.003475189208984375, -0.0007648468017578125, -0.001026153564453125, -0.0021343231201171875, -0.000118255615234375, -0.0001468658447265625, 0.0, -0.07113361358642578, -5.7220458984375e-06, -0.005631446838378906, -0.005460918880999088, -7.867804924899247e-06, -0.044608257710933685, -4.172325134277344e-06, -0.0001125335693359375, -0.04170989990234375, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -0.0001697540283203125, 0.0, -7.462501525878906e-05, 0.0, -0.034740567207336426, 0.0, -4.38690185546875e-05, -0.0010967254638671875, -0.002826690673828125, 0.0, -0.0014801025390625, -0.003350375685840845, -2.0265579223632812e-06, -9.5367431640625e-06, -6.103515625e-05, -0.0007535219192504883, -7.62939453125e-06, -8.0108642578125e-05, -3.814697265625e-06, -0.0003528594970703125, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.1682510375976562e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -4.57763671875e-05, -5.1856040954589844e-05, -0.0009555816650390625, -7.2479248046875e-05, -0.0038766860961914062, -8.7738037109375e-05, -9.34600830078125e-05, -1.33514404296875e-05, -0.00017547607421875, -1.52587890625e-05, -0.0003223419189453125, -0.015406858175992966, -2.861018856492592e-06, -0.0001010894775390625, -0.0060176849365234375, -4.76837158203125e-05, -0.000263214111328125, -0.0001659393310546875, -0.000156402587890625, -0.0001811981201171875, -6.4849853515625e-05, -0.0058231353759765625, -2.2985880374908447, 0.0, -3.814697265625e-06, -0.002437591552734375, -0.00104522705078125], "choice_history": [93, 145, 230, 101, 125, "Charge", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Charge", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "character", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 15, 116, 41, "card", "<EOS>", "minion_type", "<EOS>", 213, 10, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 58, 121, 15, 116, 41, "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 69, 109]}, {"inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target, filter_func=lambda target: \n            target.health != self.target.calculate_attack() and minion.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -5.141847466440652, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Charge", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template16"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_friendly_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"_type": "Template30"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "<UNK>", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -0.00011444091796875, -9.5367431640625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.576278118089249e-07, -4.529942543740617e-06, -7.62939453125e-06, -0.0004405975341796875, -9.5367431640625e-06, -0.0001583099365234375, -9.5367431640625e-06, -0.00023472309112548828, -5.7220458984375e-06, -3.62396240234375e-05, -0.00018310546875, -4.38690185546875e-05, -0.0001983642578125, -0.000148773193359375, -4.9591064453125e-05, -0.000553131103515625, -0.0002231597900390625, -1.1444091796875e-05, -7.62939453125e-06, -1.3113011618770543e-06, -3.576278118089249e-07, -0.00031280517578125, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0008927583694458008, 0.0, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.00018310546875, -1.9073486328125e-06, -0.09944915771484375, 0.0, -0.0002498626708984375, 0.0, -9.5367431640625e-06, -2.6702880859375e-05, -0.000240325927734375, 0.0, -0.0012369155883789062, -9.5367431640625e-06, -0.00118255615234375, 0.0, -0.00010406970250187442, -7.62939453125e-06, -0.07364749908447266, -9.894371032714844e-06, -0.0025234222412109375, -0.008258819580078125, -4.1961669921875e-05, -0.0011682510375976562, -5.53131103515625e-05, -0.0004062652587890625, -0.002559661865234375, -0.0015106201171875, -0.0001010894775390625, -9.5367431640625e-06, -0.5249220132827759, -8.809565770206973e-05, -0.0005245208740234375, -0.000537872314453125, -0.002582550048828125, -0.0003509521484375, -0.0016117095947265625, -0.0001373291015625, -0.0001354217529296875, 0.0, -2.3077688217163086, -1.9073486328125e-06, -0.2635234296321869, -0.00015783251728862524, -0.056079111993312836, -3.576278118089249e-07, -3.0517578125e-05, -0.24969959259033203, -9.5367431640625e-06, -0.056023597717285156, -0.0006313323974609375, -0.00710296630859375, 0.0, -0.6733112335205078, -0.3172168731689453, -4.76837158203125e-05, -0.12384223937988281, -0.000102996826171875, -0.001251220703125, 0.0, -0.06017780303955078, -0.08377373218536377, -4.0531158447265625e-06, -0.0001430511474609375, -0.0002002716064453125, -0.001690983772277832, -1.1444091796875e-05, -4.38690185546875e-05, -1.9073486328125e-06, -0.0004425048828125, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.3709068298339844e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -8.022785186767578e-05, -1.990795135498047e-05, -0.006154060363769531, -0.0001068115234375, -0.005253791809082031, -7.62939453125e-05, -0.0001049041748046875, -1.33514404296875e-05, -0.0001811981201171875, -1.52587890625e-05, -0.000331878662109375, -0.020774299278855324, -1.4305104514278355e-06, -8.58306884765625e-05, -0.00505828857421875, -5.7220458984375e-05, -0.000339508056640625, -0.0001506805419921875, -0.00014495849609375, -0.0001888275146484375, -6.67572021484375e-05, -0.006481170654296875, -0.14857447147369385, 0.0, -2.288818359375e-05, -0.00183868408203125, -2.288818359375e-05, -0.000152587890625, -1.52587890625e-05, -0.0018515586853027344, -1.9073486328125e-06, -1.33514404296875e-05, -0.0012035369873046875, -1.33514404296875e-05, -0.007402445189654827, -0.004018628038465977, -2.47955322265625e-05], "choice_history": [93, 145, 230, 101, 125, "Charge", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Charge", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 14, 216, 58, 121, 15, 116, 52, "calculate_attack", "<EOS>", 58, 121, 15, 116, 41, "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 52, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "<UNK>", "<EOS>", 109]}, {"inferred_code": "super().use(player, game)\n", "score": -16.872735023498535, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -0.00011444091796875, -9.5367431640625e-06, -14.480358123779297, -2.3922300338745117], "choice_history": [93, 145, 230, 108, 109]}, {"inferred_code": "", "score": -20.822338104248047, "model_output": {"_type": "Module", "body": []}, "score_history": [-2.288818359375e-05, -0.00011444091796875, -20.822200775146484], "choice_history": [93, 145, 228]}], "index": 16}
{"beams": [{"inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -0.00402057845951731, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "ChillwindYeti", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template20"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 4, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0013675870141014457, -0.00012718822108581662, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -0.0002651214599609375, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -9.5367431640625e-06, -3.814697265625e-05, -0.000217437744140625, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -1.1444091796875e-05, -1.0371163625677582e-05, -1.382827485940652e-05, -2.0265579223632812e-06, 0.0, -4.1961669921875e-05, -4.38690185546875e-05, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001430511474609375, -4.00543212890625e-05, -1.33514404296875e-05, -7.62939453125e-06, -8.344650268554688e-06, -1.3709068298339844e-05, 0.0, -0.000255584716796875, -4.57763671875e-05, -0.0004670115886256099, -4.6491513785440475e-06, -0.0006653543096035719, -1.5497195136049413e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Chillwind", "Yeti", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Chillwind", " ", "Yeti", "<EOS>", 76, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "4", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class <UNK>Yeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -6.598105776937359, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "<UNK>Yeti", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template20"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 4, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -6.595452785491943, -0.00012718822108581662, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -0.0002651214599609375, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -9.5367431640625e-06, -3.814697265625e-05, -0.000217437744140625, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -1.1444091796875e-05, -1.0371163625677582e-05, -1.382827485940652e-05, -2.0265579223632812e-06, 0.0, -4.1961669921875e-05, -4.38690185546875e-05, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001430511474609375, -4.00543212890625e-05, -1.33514404296875e-05, -7.62939453125e-06, -8.344650268554688e-06, -1.3709068298339844e-05, 0.0, -0.000255584716796875, -4.57763671875e-05, -0.0004670115886256099, -4.6491513785440475e-06, -0.0006653543096035719, -1.5497195136049413e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Yeti", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Chillwind", " ", "Yeti", "<EOS>", 76, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "4", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 4)\n", "score": -7.370830256957333, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "ChillwindYeti", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template20"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 4, "hole0": 4, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0013675870141014457, -0.00012718822108581662, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -0.0002651214599609375, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -9.5367431640625e-06, -3.814697265625e-05, -0.000217437744140625, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -1.1444091796875e-05, -1.0371163625677582e-05, -1.382827485940652e-05, -2.0265579223632812e-06, 0.0, -4.1961669921875e-05, -4.38690185546875e-05, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001430511474609375, -4.00543212890625e-05, -1.33514404296875e-05, -7.62939453125e-06, -8.344650268554688e-06, -1.3709068298339844e-05, 0.0, -0.000255584716796875, -4.57763671875e-05, -0.0004670115886256099, -4.6491513785440475e-06, -7.36747407913208, -2.503394853192731e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Chillwind", "Yeti", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Chillwind", " ", "Yeti", "<EOS>", 76, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "4", "<EOS>", "4", "<EOS>", 109]}, {"inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(5, 5)\n", "score": -8.009039054101777, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "ChillwindYeti", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template20"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 5, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0013675870141014457, -0.00012718822108581662, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -0.0002651214599609375, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -9.5367431640625e-06, -3.814697265625e-05, -0.000217437744140625, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -1.1444091796875e-05, -1.0371163625677582e-05, -1.382827485940652e-05, -2.0265579223632812e-06, 0.0, -4.1961669921875e-05, -4.38690185546875e-05, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001430511474609375, -4.00543212890625e-05, -1.33514404296875e-05, -7.62939453125e-06, -8.344650268554688e-06, -1.3709068298339844e-05, 0.0, -0.000255584716796875, -4.57763671875e-05, -8.005861282348633, -3.933898824470816e-06, -0.0002896783989854157, -2.145764938177308e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Chillwind", "Yeti", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Chillwind", " ", "Yeti", "<EOS>", 76, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "5", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -8.499332264957047, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "ChillwindYeti", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template20"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 4, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0013675870141014457, -0.00012718822108581662, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -0.0002651214599609375, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -9.5367431640625e-06, -3.814697265625e-05, -8.454483985900879, -1.9073486328125e-06, -0.000278472900390625, -1.9073486328125e-06, -9.5367431640625e-06, -7.867782187531702e-06, -1.5020368664409034e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -4.9591064453125e-05, -2.47955322265625e-05, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.033321499824523926, 0.0, -3.814697265625e-06, 0.0, -0.00018310546875, 0.0, -2.09808349609375e-05, 0.0, -0.0077201128005981445, 0.0, 0.0, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.43865966796875e-05, -3.4332275390625e-05, -5.7220458984375e-06, -3.814697265625e-06, -9.655952453613281e-06, -1.728534698486328e-05, -1.9073486328125e-06, -7.43865966796875e-05, -7.62939453125e-05, -0.0005012663314118981, -2.9802276912960224e-06, -0.0004888323019258678, -2.3841830625315197e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Chillwind", "Yeti", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Chillwind", " ", "Yeti", "<EOS>", 76, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "4", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class Chillwind<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -8.978593485726492, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Chillwind<UNK>", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template20"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 4, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0013675870141014457, -8.974823951721191, -2.443764969939366e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0001163482666015625, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-05, -0.000217437744140625, -1.9073486328125e-06, -7.2479248046875e-05, 0.0, -1.1444091796875e-05, -1.0371163625677582e-05, -1.3709065569855738e-05, -2.0265579223632812e-06, 0.0, -4.1961669921875e-05, -4.38690185546875e-05, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.0001506805419921875, -4.00543212890625e-05, -1.33514404296875e-05, -7.62939453125e-06, -6.4373016357421875e-06, -1.1801719665527344e-05, 0.0, -0.0002613067626953125, -4.76837158203125e-05, -0.00047142189578153193, -4.768360213347478e-06, -0.0006614233134314418, -1.5497195136049413e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Chillwind", "<UNK>", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Chillwind", " ", "Yeti", "<EOS>", 76, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "4", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score": -8.994198451410057, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "ChillwindYeti", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template20"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0013675870141014457, -0.00012718822108581662, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -0.0002651214599609375, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -9.5367431640625e-06, -3.814697265625e-05, -0.000217437744140625, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -1.1444091796875e-05, -1.0371163625677582e-05, -1.382827485940652e-05, -2.0265579223632812e-06, 0.0, -4.1961669921875e-05, -4.38690185546875e-05, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001430511474609375, -4.00543212890625e-05, -1.33514404296875e-05, -7.62939453125e-06, -8.344650268554688e-06, -1.3709068298339844e-05, 0.0, -0.000255584716796875, -4.57763671875e-05, -8.991167068481445, -1.1920922133867862e-06, -0.00014495849609375, -3.218649908376392e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Chillwind", "Yeti", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Chillwind", " ", "Yeti", "<EOS>", 76, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5, windfury=True)\n", "score": -9.08142090834371, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "ChillwindYeti", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template20"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template20"}, {"_type": "Template22"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "windfury"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0013675870141014457, -0.00012718822108581662, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -0.0002651214599609375, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -9.5367431640625e-06, -3.814697265625e-05, -0.000217437744140625, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -1.1444091796875e-05, -1.0371163625677582e-05, -1.382827485940652e-05, -2.0265579223632812e-06, 0.0, -4.1961669921875e-05, -4.38690185546875e-05, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001430511474609375, -4.00543212890625e-05, -1.33514404296875e-05, -7.62939453125e-06, -8.344650268554688e-06, -1.3709068298339844e-05, 0.0, -8.655535697937012, -1.9073486328125e-06, -0.00022125244140625, -8.20159912109375e-05, -0.0003032684326171875, -7.2479248046875e-05, -0.0001506805419921875, -6.866455078125e-05, -0.0015621185302734375, -0.0004711151123046875, -0.4194856882095337, 0.0, -0.000152587890625, -0.0007190704345703125, -9.775161743164062e-06, -1.1920928244535389e-07, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Chillwind", "Yeti", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Chillwind", " ", "Yeti", "<EOS>", 76, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 76, 77, 224, 205, "windfury", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -9.589938485159337, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "ChillwindYeti", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template20"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 4, "_type": "Template3"}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 4, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0013675870141014457, -0.00012718822108581662, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -8.342851638793945, -5.91278076171875e-05, 0.0, -2.0265579223632812e-06, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, -2.47955322265625e-05, -0.0001621246337890625, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -1.1444091796875e-05, -1.0251955245621502e-05, -1.39474832394626e-05, -2.0265579223632812e-06, 0.0, -4.1961669921875e-05, -4.38690185546875e-05, -1.33514404296875e-05, -9.1552734375e-05, -3.814697265625e-06, -0.002162933349609375, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.0003204345703125, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -6.4373016357421875e-06, -9.775161743164062e-06, 0.0, -0.0002841949462890625, -4.57763671875e-05, -0.0004947927081957459, -2.264974000354414e-06, -0.0006287696305662394, -1.0728830375228426e-06, -1.1575584411621094, -0.000209808349609375, -0.06708860397338867, -1.9073468138230965e-06, -0.0002117156982421875, -9.5367431640625e-06, -0.01396942138671875, -7.62939453125e-05, -1.9073486328125e-05, -3.814697265625e-06, -7.772437675157562e-05, -6.198883056640625e-06, 0.0, -0.0005168914794921875, -9.34600830078125e-05, -0.0005271052941679955, -2.7418097943154862e-06, -0.0005732548306696117, -1.4305104514278355e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Chillwind", "Yeti", "<EOS>", 216, 68, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Chillwind", " ", "Yeti", "<EOS>", 76, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "4", "<EOS>", "5", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "4", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -10.109863112546691, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "ChillwindYeti", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template20"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 4, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0013675870141014457, -0.00012718822108581662, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -0.0002651214599609375, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -9.5367431640625e-06, -3.814697265625e-05, -0.000217437744140625, -1.9073486328125e-06, -9.76630973815918, -0.017734527587890625, -1.9073486328125e-05, -5.9008554671891034e-05, -2.6702851755544543e-05, -1.3470649719238281e-05, 0.0, -0.0006084442138671875, -0.3215065002441406, -0.000213623046875, -1.9073486328125e-05, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -7.05718994140625e-05, -1.52587890625e-05, -2.86102294921875e-05, -9.5367431640625e-06, -1.609325408935547e-05, -5.841255187988281e-06, 0.0, -7.2479248046875e-05, -3.24249267578125e-05, -0.0003947995137423277, -2.264974000354414e-06, -0.0005532125942409039, -2.861022494471399e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Chillwind", "Yeti", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 217, 66, 155, "Chillwind", " ", "Yeti", "<EOS>", 76, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "4", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -10.112614298712856, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "ChillwindYeti", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template20"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 4, "_type": "Template3"}]}, {"_type": "Template13_stmt_seq"}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0013675870141014457, -0.00012718822108581662, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -8.342851638793945, -5.91278076171875e-05, 0.0, -2.0265579223632812e-06, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, -2.47955322265625e-05, -0.0001621246337890625, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -1.1444091796875e-05, -1.0251955245621502e-05, -1.39474832394626e-05, -2.0265579223632812e-06, 0.0, -4.1961669921875e-05, -4.38690185546875e-05, -1.33514404296875e-05, -9.1552734375e-05, -3.814697265625e-06, -0.002162933349609375, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.0003204345703125, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -6.4373016357421875e-06, -9.775161743164062e-06, 0.0, -0.0002841949462890625, -4.57763671875e-05, -0.0004947927081957459, -2.264974000354414e-06, -0.0006287696305662394, -1.0728830375228426e-06, -1.7635908126831055, -3.24249267578125e-05], "choice_history": [93, 145, 230, 101, 125, "Chillwind", "Yeti", "<EOS>", 216, 68, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Chillwind", " ", "Yeti", "<EOS>", 76, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "4", "<EOS>", "5", "<EOS>", 109, 109]}, {"inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player, game):\n        return Minion(4, 5, taunt=True)\n", "score": -11.019873509775827, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "ChillwindYeti", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template20"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template20"}, {"_type": "Template22"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0013675870141014457, -0.00012718822108581662, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -0.0002651214599609375, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -9.5367431640625e-06, -3.814697265625e-05, -0.000217437744140625, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -1.1444091796875e-05, -1.0371163625677582e-05, -1.382827485940652e-05, -2.0265579223632812e-06, 0.0, -4.1961669921875e-05, -4.38690185546875e-05, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -10.044235229492188, -0.0003814697265625, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.007331967353820801, -3.099440846199286e-06, -0.003078460693359375, -0.005738258361816406, -1.1444091796875e-05, -0.17818450927734375, -0.0027561187744140625, -0.00061798095703125, -3.4332275390625e-05, -5.7220458984375e-05, -0.000133514404296875, -0.001880645751953125, -0.0001544952392578125, -0.7724602222442627, 0.0, -7.2479248046875e-05, -0.0003185272216796875, -5.9604644775390625e-06, -1.1920928244535389e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Chillwind", "Yeti", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Chillwind", " ", "Yeti", "<EOS>", 76, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 76, 77, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n    <UNK> = [<UNK>(3), Buff(Chillwind())]\n", "score": -13.938523054334496, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "ChillwindYeti", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template20"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 4, "_type": "Template3"}]}, {"_type": "Assign", "value": {"_type": "List", "elts": [{"func": {"id": "<UNK>", "_type": "Name"}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Chillwind", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}, {"_type": "Template15_expr_seq"}]}, "targets": [{"id": "<UNK>", "_type": "Name"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0013675870141014457, -0.00012718822108581662, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -8.342851638793945, -5.91278076171875e-05, 0.0, -2.0265579223632812e-06, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, -2.47955322265625e-05, -0.0001621246337890625, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -1.1444091796875e-05, -1.0251955245621502e-05, -1.39474832394626e-05, -2.0265579223632812e-06, 0.0, -4.1961669921875e-05, -4.38690185546875e-05, -1.33514404296875e-05, -9.1552734375e-05, -3.814697265625e-06, -0.002162933349609375, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.0003204345703125, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -6.4373016357421875e-06, -9.775161743164062e-06, 0.0, -0.0002841949462890625, -4.57763671875e-05, -0.0004947927081957459, -2.264974000354414e-06, -0.0006287696305662394, -1.0728830375228426e-06, -1.017709732055664, -0.053597450256347656, -9.5367431640625e-06, -0.0050716400146484375, -3.814697265625e-06, -0.08641964942216873, -0.0005582288722507656, -0.21533203125, -0.0035619735717773438, -0.5999765396118164, -0.00144195556640625, -0.016017913818359375, -0.02960205078125, 0.0, -0.20483553409576416, -9.775071521289647e-05, -0.011697769165039062, -1.0908660888671875, -0.22858905792236328, -0.0009899139404296875, -0.3740062713623047, 0.0, -0.8861513137817383, 0.0, -3.814697265625e-06, -0.2285022735595703, -0.0001354217529296875, -0.010211256332695484, -0.4900243580341339, -0.004909515380859375, -0.029209136962890625, 0.0], "choice_history": [93, 145, 230, 101, 125, "Chillwind", "Yeti", "<EOS>", 216, 68, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Chillwind", " ", "Yeti", "<EOS>", 76, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "4", "<EOS>", "5", "<EOS>", 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 21, 141, 219, 58, 123, 23, 146, "<UNK>", "<EOS>", 216, 72, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Chillwind", "<EOS>", 71, 71, 109]}, {"inferred_code": "", "score": -19.890186309814453, "model_output": {"_type": "Module", "body": []}, "score_history": [-3.814697265625e-06, 0.0, -19.890182495117188], "choice_history": [93, 145, 228]}, {"inferred_code": "", "score": -25.52780246734619, "model_output": {"_type": "Module", "body": [{"_type": "Template13_stmt_seq"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -2.6702880859375e-05, -17.857736587524414, -7.670035362243652], "choice_history": [93, 145, 230, 109, 109]}], "index": 17}
{"beams": [{"inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n", "score": -0.6675088272768264, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Claw", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Claw"}, {"_type": "Template14"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_armor", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -2.288818359375e-05, -1.1920928244535389e-07, -4.768371127283899e-06, -2.288818359375e-05, -0.0002689361572265625, -3.62396240234375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.811981201171875e-05, -1.52587890625e-05, -1.9073486328125e-05, -0.0004367828369140625, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.001399993896484375, -2.288818359375e-05, -4.57763671875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.168244216387393e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.0005487203598022461, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, 0.0, -0.00017368793487548828, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.0011301040649414062, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.0003838539123535156, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -4.029273986816406e-05, -2.145764938177308e-06, -0.000888824462890625, -0.000270843505859375, -0.0001850128173828125, -9.1552734375e-05, -9.918212890625e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.000270843505859375, -2.86102294921875e-05, -0.3668088912963867, -0.0014567882753908634, -0.0006460926379077137, -0.05538185313344002, -1.9073486328125e-06, -3.814697265625e-06, -0.003204345703125, -2.288818359375e-05, -1.9073486328125e-06, -0.000213623046875, -0.00058746337890625, -3.0517578125e-05, -1.9073486328125e-06, -6.103515625e-05, -1.1444091796875e-05, -0.001270294189453125, -0.0019178417278453708, -0.002154107904061675, -0.18761825561523438, 0.0, -1.33514404296875e-05, -0.03930091857910156, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Claw", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Claw", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "change_temp_attack", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "increase_armor", "<EOS>", 216, 69, 109]}, {"inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n", "score": -2.3491666184145217, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Claw", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Claw"}, {"_type": "Template14"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -2.288818359375e-05, -1.1920928244535389e-07, -4.768371127283899e-06, -2.288818359375e-05, -0.0002689361572265625, -3.62396240234375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.811981201171875e-05, -1.52587890625e-05, -1.9073486328125e-05, -0.0004367828369140625, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.001399993896484375, -2.288818359375e-05, -4.57763671875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.168244216387393e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.0005487203598022461, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, 0.0, -0.00017368793487548828, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.0011301040649414062, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.0003838539123535156, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -4.029273986816406e-05, -2.145764938177308e-06, -0.000888824462890625, -0.000270843505859375, -0.0001850128173828125, -9.1552734375e-05, -9.918212890625e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.000270843505859375, -2.86102294921875e-05, -0.3668088912963867, -0.0014567882753908634, -0.0006460926379077137, -0.05538185313344002, -1.9073486328125e-06, -3.814697265625e-06, -0.003204345703125, -2.288818359375e-05, -1.9073486328125e-06, -0.000213623046875, -0.00058746337890625, -3.0517578125e-05, -1.9073486328125e-06, -6.103515625e-05, -1.1444091796875e-05, -0.001270294189453125, -0.0019178417278453708, -0.002154107904061675, -1.9037704467773438, 0.0, -2.86102294921875e-05, -0.004791259765625, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Claw", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Claw", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "change_temp_attack", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "change_temp_attack", "<EOS>", 216, 69, 109]}, {"inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor.change_temp_attack(2)\n        player.hero.increase_armor(2)\n", "score": -2.3919780257656313, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Claw", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Claw"}, {"_type": "Template14"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "increase_armor", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_armor", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -2.288818359375e-05, -1.1920928244535389e-07, -4.768371127283899e-06, -2.288818359375e-05, -0.0002689361572265625, -3.62396240234375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.811981201171875e-05, -1.52587890625e-05, -1.9073486328125e-05, -0.0004367828369140625, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.001399993896484375, -2.288818359375e-05, -4.57763671875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.168244216387393e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.0005487203598022461, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, 0.0, -0.00017368793487548828, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.0011301040649414062, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.0003838539123535156, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -4.029273986816406e-05, -2.145764938177308e-06, -0.000888824462890625, -0.000270843505859375, -0.0001850128173828125, -9.1552734375e-05, -9.918212890625e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.000270843505859375, -2.86102294921875e-05, -1.1834230422973633, -3.814697265625e-06, -0.0025682449340820312, -0.004267018288373947, -0.00033508677734062076, -0.6451512575149536, -3.814689989667386e-06, -0.3370457589626312, -1.3470649719238281e-05, -2.288818359375e-05, -0.0028629302978515625, -2.47955322265625e-05, -1.9073486328125e-06, -0.0002803802490234375, -0.0013294219970703125, -3.4332275390625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -0.0013523101806640625, -0.001942516304552555, -0.001614569453522563, -0.16916275024414062, 0.0, -1.33514404296875e-05, -0.03366374969482422, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Claw", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Claw", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 32, "hero", "<EOS>", "increase_armor", "<EOS>", "change_temp_attack", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "increase_armor", "<EOS>", 216, 69, 109]}, {"inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.hero.increase_armor(2)\n", "score": -3.7890224744205554, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Claw", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Claw"}, {"_type": "Template14"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "increase_armor", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_armor", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -2.288818359375e-05, -1.1920928244535389e-07, -4.768371127283899e-06, -2.288818359375e-05, -0.0002689361572265625, -3.62396240234375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.811981201171875e-05, -1.52587890625e-05, -1.9073486328125e-05, -0.0004367828369140625, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.001399993896484375, -2.288818359375e-05, -4.57763671875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.168244216387393e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.0005487203598022461, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, 0.0, -0.00017368793487548828, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.0011301040649414062, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.0003838539123535156, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -4.029273986816406e-05, -2.145764938177308e-06, -0.000888824462890625, -0.000270843505859375, -0.0001850128173828125, -9.1552734375e-05, -9.918212890625e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.000270843505859375, -2.86102294921875e-05, -0.3668088912963867, -0.0014567882753908634, -0.0006460926379077137, -3.067831039428711, -2.0265579223632812e-06, -1.1444091796875e-05, -0.009563446044921875, -1.9073486328125e-05, -3.814697265625e-06, -0.0003070831298828125, -0.03669929504394531, -4.38690185546875e-05, -3.814697265625e-06, -5.340576171875e-05, -1.33514404296875e-05, -0.0020656585693359375, -0.001550436019897461, -0.0010290143545717, -0.2626802921295166, 0.0, -9.5367431640625e-06, -0.031424522399902344, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Claw", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Claw", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "increase_armor", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "increase_armor", "<EOS>", 216, 69, 109]}, {"inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(4)\n", "score": -3.9193360672670607, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Claw", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Claw"}, {"_type": "Template14"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_armor", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -2.288818359375e-05, -1.1920928244535389e-07, -4.768371127283899e-06, -2.288818359375e-05, -0.0002689361572265625, -3.62396240234375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.811981201171875e-05, -1.52587890625e-05, -1.9073486328125e-05, -0.0004367828369140625, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.001399993896484375, -2.288818359375e-05, -4.57763671875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.168244216387393e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.0005487203598022461, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, 0.0, -0.00017368793487548828, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.0011301040649414062, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.0003838539123535156, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -4.029273986816406e-05, -2.145764938177308e-06, -0.000888824462890625, -0.000270843505859375, -0.0001850128173828125, -9.1552734375e-05, -9.918212890625e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.000270843505859375, -2.86102294921875e-05, -0.3668088912963867, -0.0014567882753908634, -0.0006460926379077137, -0.05538185313344002, -1.9073486328125e-06, -3.814697265625e-06, -0.003204345703125, -2.288818359375e-05, -1.9073486328125e-06, -0.000213623046875, -0.00058746337890625, -3.0517578125e-05, -1.9073486328125e-06, -6.103515625e-05, -1.1444091796875e-05, -0.001270294189453125, -0.0019178417278453708, -0.002154107904061675, -0.18761825561523438, 0.0, -1.33514404296875e-05, -3.291088104248047, -4.1961669921875e-05], "choice_history": [93, 145, 230, 101, 125, "Claw", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Claw", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "change_temp_attack", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "increase_armor", "<EOS>", 216, 76, 109]}, {"inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n", "score": -4.2233006957485415, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Claw", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Claw"}, {"_type": "Template14"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "increase_armor", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -2.288818359375e-05, -1.1920928244535389e-07, -4.768371127283899e-06, -2.288818359375e-05, -0.0002689361572265625, -3.62396240234375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.811981201171875e-05, -1.52587890625e-05, -1.9073486328125e-05, -0.0004367828369140625, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.001399993896484375, -2.288818359375e-05, -4.57763671875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.168244216387393e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.0005487203598022461, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, 0.0, -0.00017368793487548828, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.0011301040649414062, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.0003838539123535156, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -4.029273986816406e-05, -2.145764938177308e-06, -0.000888824462890625, -0.000270843505859375, -0.0001850128173828125, -9.1552734375e-05, -9.918212890625e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.000270843505859375, -2.86102294921875e-05, -1.1834230422973633, -3.814697265625e-06, -0.0025682449340820312, -0.004267018288373947, -0.00033508677734062076, -0.6451512575149536, -3.814689989667386e-06, -0.3370457589626312, -1.3470649719238281e-05, -2.288818359375e-05, -0.0028629302978515625, -2.47955322265625e-05, -1.9073486328125e-06, -0.0002803802490234375, -0.0013294219970703125, -3.4332275390625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -0.0013523101806640625, -0.001942516304552555, -0.001614569453522563, -2.0297298431396484, 0.0, -2.86102294921875e-05, -0.0044040679931640625, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Claw", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Claw", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 32, "hero", "<EOS>", "increase_armor", "<EOS>", "change_temp_attack", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "change_temp_attack", "<EOS>", 216, 69, 109]}, {"inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack.change_temp_attack(2)\n        player.hero.increase_armor(2)\n", "score": -4.2753802169917705, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Claw", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Claw"}, {"_type": "Template14"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_armor", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -2.288818359375e-05, -1.1920928244535389e-07, -4.768371127283899e-06, -2.288818359375e-05, -0.0002689361572265625, -3.62396240234375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.811981201171875e-05, -1.52587890625e-05, -1.9073486328125e-05, -0.0004367828369140625, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.001399993896484375, -2.288818359375e-05, -4.57763671875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.168244216387393e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.0005487203598022461, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, 0.0, -0.00017368793487548828, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.0011301040649414062, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.0003838539123535156, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -4.029273986816406e-05, -2.145764938177308e-06, -0.000888824462890625, -0.000270843505859375, -0.0001850128173828125, -9.1552734375e-05, -9.918212890625e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.000270843505859375, -2.86102294921875e-05, -1.1834230422973633, -3.814697265625e-06, -0.0025682449340820312, -0.004267018288373947, -0.00033508677734062076, -2.2449634075164795, -3.576278118089249e-07, -0.5982170701026917, -7.748603820800781e-06, -1.1444091796875e-05, -0.0034313201904296875, -2.288818359375e-05, -1.9073486328125e-06, -0.00025177001953125, -0.0006160736083984375, -3.0517578125e-05, -1.9073486328125e-06, -7.05718994140625e-05, -9.5367431640625e-06, -0.001178741455078125, -0.0018606212688609958, -0.002741207368671894, -0.18080413341522217, 0.0, -1.1444091796875e-05, -0.043750762939453125, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Claw", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Claw", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 32, "hero", "<EOS>", "change_temp_attack", "<EOS>", "change_temp_attack", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "increase_armor", "<EOS>", 216, 69, 109]}, {"inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor.increase_armor(2)\n        player.hero.increase_armor(2)\n", "score": -4.448075325295569, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Claw", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Claw"}, {"_type": "Template14"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "increase_armor", "_type": "Attribute", "value": {"attr": "increase_armor", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_armor", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -2.288818359375e-05, -1.1920928244535389e-07, -4.768371127283899e-06, -2.288818359375e-05, -0.0002689361572265625, -3.62396240234375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.811981201171875e-05, -1.52587890625e-05, -1.9073486328125e-05, -0.0004367828369140625, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.001399993896484375, -2.288818359375e-05, -4.57763671875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.168244216387393e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.0005487203598022461, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, 0.0, -0.00017368793487548828, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.0011301040649414062, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.0003838539123535156, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -4.029273986816406e-05, -2.145764938177308e-06, -0.000888824462890625, -0.000270843505859375, -0.0001850128173828125, -9.1552734375e-05, -9.918212890625e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.000270843505859375, -2.86102294921875e-05, -1.1834230422973633, -3.814697265625e-06, -0.0025682449340820312, -0.004267018288373947, -0.00033508677734062076, -0.6451512575149536, -3.814689989667386e-06, -2.0016512870788574, -5.7220458984375e-06, -0.0001354217529296875, -0.007479667663574219, -1.33514404296875e-05, -3.814697265625e-06, -0.0003814697265625, -0.13669204711914062, -5.53131103515625e-05, -1.9073486328125e-06, -8.0108642578125e-05, -3.814697265625e-06, -0.00130462646484375, -0.005327702034264803, -0.00044190880726091564, -0.4400606155395508, 0.0, -1.1444091796875e-05, -0.011873245239257812, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Claw", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Claw", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 32, "hero", "<EOS>", "increase_armor", "<EOS>", "increase_armor", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "increase_armor", "<EOS>", 216, 69, 109]}, {"inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.current_player.change_temp_attack(2)\n        player.hero.increase_armor(2)\n", "score": -4.496571094245148, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Claw", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Claw"}, {"_type": "Template14"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_armor", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -2.288818359375e-05, -1.1920928244535389e-07, -4.768371127283899e-06, -2.288818359375e-05, -0.0002689361572265625, -3.62396240234375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.811981201171875e-05, -1.52587890625e-05, -1.9073486328125e-05, -0.0004367828369140625, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.001399993896484375, -2.288818359375e-05, -4.57763671875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.168244216387393e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.0005487203598022461, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, 0.0, -0.00017368793487548828, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.0011301040649414062, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.0003838539123535156, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -4.029273986816406e-05, -2.145764938177308e-06, -0.000888824462890625, -0.000270843505859375, -0.0001850128173828125, -9.1552734375e-05, -9.918212890625e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.000270843505859375, -2.86102294921875e-05, -1.1834230422973633, -3.814697265625e-06, -0.0025682449340820312, -0.004267018288373947, -0.00033508677734062076, -2.0196616649627686, -5.125993993715383e-06, -1.063779354095459, -7.748603820800781e-06, -0.0002079010009765625, -0.005130767822265625, -2.47955322265625e-05, -3.814697265625e-06, -0.0002117156982421875, -0.0005626678466796875, -3.24249267578125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.0014057159423828125, -0.0018836266826838255, -0.001503109117038548, -0.1725912094116211, 0.0, -1.33514404296875e-05, -0.03209400177001953, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Claw", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Claw", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 32, "hero", "<EOS>", "current_player", "<EOS>", "change_temp_attack", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "increase_armor", "<EOS>", 216, 69, 109]}, {"inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor.append(2)\n        player.hero.increase_armor(2)\n", "score": -4.6927428548897225, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Claw", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Claw"}, {"_type": "Template14"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"attr": "increase_armor", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_armor", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -2.288818359375e-05, -1.1920928244535389e-07, -4.768371127283899e-06, -2.288818359375e-05, -0.0002689361572265625, -3.62396240234375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.811981201171875e-05, -1.52587890625e-05, -1.9073486328125e-05, -0.0004367828369140625, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.001399993896484375, -2.288818359375e-05, -4.57763671875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.168244216387393e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.0005487203598022461, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, 0.0, -0.00017368793487548828, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.0011301040649414062, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.0003838539123535156, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -4.029273986816406e-05, -2.145764938177308e-06, -0.000888824462890625, -0.000270843505859375, -0.0001850128173828125, -9.1552734375e-05, -9.918212890625e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.000270843505859375, -2.86102294921875e-05, -1.1834230422973633, -3.814697265625e-06, -0.0025682449340820312, -0.004267018288373947, -0.00033508677734062076, -0.6451512575149536, -3.814689989667386e-06, -2.28057861328125, 0.0, -0.000812530517578125, -0.14368057250976562, -1.33514404296875e-05, -3.814697265625e-06, -0.0002899169921875, -0.016277313232421875, -3.24249267578125e-05, -1.9073486328125e-06, -5.7220458984375e-05, -5.7220458984375e-06, -0.0019245147705078125, -0.0040204524993896484, -0.00044059750507585704, -0.38801395893096924, 0.0, -1.33514404296875e-05, -0.014024734497070312, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Claw", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Claw", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 32, "hero", "<EOS>", "increase_armor", "<EOS>", "append", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "increase_armor", "<EOS>", 216, 69, 109]}, {"inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor.increase_armor(2)\n        player.hero.change_temp_attack(2)\n", "score": -5.091687233254554, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Claw", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Claw"}, {"_type": "Template14"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "increase_armor", "_type": "Attribute", "value": {"attr": "increase_armor", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -2.288818359375e-05, -1.1920928244535389e-07, -4.768371127283899e-06, -2.288818359375e-05, -0.0002689361572265625, -3.62396240234375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.811981201171875e-05, -1.52587890625e-05, -1.9073486328125e-05, -0.0004367828369140625, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.001399993896484375, -2.288818359375e-05, -4.57763671875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.168244216387393e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.0005487203598022461, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, 0.0, -0.00017368793487548828, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.0011301040649414062, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.0003838539123535156, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -4.029273986816406e-05, -2.145764938177308e-06, -0.000888824462890625, -0.000270843505859375, -0.0001850128173828125, -9.1552734375e-05, -9.918212890625e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.000270843505859375, -2.86102294921875e-05, -1.1834230422973633, -3.814697265625e-06, -0.0025682449340820312, -0.004267018288373947, -0.00033508677734062076, -0.6451512575149536, -3.814689989667386e-06, -2.0016512870788574, -5.7220458984375e-06, -0.0001354217529296875, -0.007479667663574219, -1.33514404296875e-05, -3.814697265625e-06, -0.0003814697265625, -0.13669204711914062, -5.53131103515625e-05, -1.9073486328125e-06, -8.0108642578125e-05, -3.814697265625e-06, -0.00130462646484375, -0.005327702034264803, -0.00044190880726091564, -1.090794563293457, 0.0, -1.52587890625e-05, -0.0047473907470703125, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Claw", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Claw", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 32, "hero", "<EOS>", "increase_armor", "<EOS>", "increase_armor", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "change_temp_attack", "<EOS>", 216, 69, 109]}, {"inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack.increase_armor(2)\n        player.hero.increase_armor(2)\n", "score": -5.225665480351317, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Claw", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Claw"}, {"_type": "Template14"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "increase_armor", "_type": "Attribute", "value": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_armor", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -2.288818359375e-05, -1.1920928244535389e-07, -4.768371127283899e-06, -2.288818359375e-05, -0.0002689361572265625, -3.62396240234375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.811981201171875e-05, -1.52587890625e-05, -1.9073486328125e-05, -0.0004367828369140625, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.001399993896484375, -2.288818359375e-05, -4.57763671875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.168244216387393e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.0005487203598022461, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, 0.0, -0.00017368793487548828, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.0011301040649414062, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.0003838539123535156, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -4.029273986816406e-05, -2.145764938177308e-06, -0.000888824462890625, -0.000270843505859375, -0.0001850128173828125, -9.1552734375e-05, -9.918212890625e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.000270843505859375, -2.86102294921875e-05, -1.1834230422973633, -3.814697265625e-06, -0.0025682449340820312, -0.004267018288373947, -0.00033508677734062076, -2.2449634075164795, -3.576278118089249e-07, -1.4544602632522583, -2.0265579223632812e-06, -2.6702880859375e-05, -0.014896392822265625, -1.71661376953125e-05, -1.9073486328125e-06, -0.00038909912109375, -0.06109428405761719, -4.00543212890625e-05, -1.9073486328125e-06, -5.7220458984375e-05, -7.62939453125e-06, -0.00128173828125, -0.0017597679980099201, -0.0011695617577061057, -0.21868884563446045, 0.0, -1.1444091796875e-05, -0.02939891815185547, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Claw", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Claw", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 32, "hero", "<EOS>", "change_temp_attack", "<EOS>", "increase_armor", "<EOS>", 216, 69, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "increase_armor", "<EOS>", 216, 69, 109]}, {"inferred_code": "super().use(player, game)\n", "score": -15.445204734802246, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -14.647863388061523, -0.7973318099975586], "choice_history": [93, 145, 230, 108, 109]}, {"inferred_code": "", "score": -19.22987174987793, "model_output": {"_type": "Module", "body": [{"_type": "Template13_stmt_seq"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -7.62939453125e-06, -15.304319381713867, -3.9255428314208984], "choice_history": [93, 145, 230, 109, 109]}, {"inferred_code": "", "score": -20.813678741455078, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, 0.0, -20.813676834106445], "choice_history": [93, 145, 228]}], "index": 18}
{"beams": [{"inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -0.4473013317164458, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Cleave", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Template12"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "minions", "_type": "Name"}]}, {"target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "minions", "_type": "Name"}], "_type": "Call"}, "targets": [{"_type": "Template30"}]}, {"_type": "Expr", "value": {"func": {"attr": "remove", "_type": "Attribute", "value": {"id": "minions", "_type": "Name"}}, "args": [{"_type": "Template30"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Template31"}, {"_type": "Template12"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template12"}], "ops": [{"_type": "GtE"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.9073486328125e-06, -0.0002002716064453125, -5.7220458984375e-05, -5.7220458984375e-06, -8.106226232484914e-06, -2.1457672119140625e-06, -3.814697265625e-06, -0.0002536773681640625, -0.0296783447265625, -1.71661376953125e-05, 0.0, -2.861022494471399e-06, 0.0, -5.7220458984375e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.008317947387695312, -6.67572021484375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.0265574676159304e-06, -1.52587890625e-05, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, 0.0, 0.0, -5.841253368998878e-06, 0.0, -0.0007935762405395508, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -4.38690185546875e-05, -5.14984130859375e-05, 0.0, -6.866455078125e-05, -5.7220458984375e-06, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.384185791015625e-06, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -9.000301361083984e-05, -1.6689286894688848e-06, -0.0013790130615234375, -0.000423431396484375, -0.0002460479736328125, -1.9073486328125e-05, -8.392333984375e-05, -0.00035858154296875, -2.47955322265625e-05, -0.0007708152406848967, -5.0305148761253804e-05, -0.0007448196411132812, -2.288818359375e-05, -3.4332275390625e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -0.0006253243191167712, -1.9073486328125e-06, -0.000563502311706543, 0.0, -5.7220458984375e-05, -0.000102996826171875, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.000354766845703125, -1.9073486328125e-06, -7.832050323486328e-05, 0.0, -0.0007593631744384766, -1.1920928244535389e-07, -0.00014459784142673016, -1.8358225133852102e-05, -0.05728340148925781, -4.1961669921875e-05, -0.0028896331787109375, -8.0108642578125e-05, -0.004118077456951141, -2.3841855067985307e-07, -0.00060272216796875, -1.1444091796875e-05, -5.91278076171875e-05, -1.9073486328125e-06, -0.0018189967377111316, -2.1934454707661644e-05, -0.000274658203125, -0.000118255615234375, -0.0007867813110351562, -0.00214385986328125, -0.00043487548828125, -7.62939453125e-05, -0.000377655029296875, -0.0013971328735351562, -0.0002498626708984375, -0.00011444091796875, -0.0001010894775390625, -3.814697265625e-06, -0.0001373291015625, -1.71661376953125e-05, -0.0012393640354275703, 0.0, -0.0029996633529663086, 0.0, -1.52587890625e-05, -0.0022602081298828125, -0.00011444091796875, -0.008967030793428421, -1.0728830375228426e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.0008392333984375, -6.67572021484375e-05, 0.0, -0.004097938537597656, -2.86102294921875e-05, -0.0017286483198404312, -1.9073468138230965e-06, -0.019632963463664055, -2.3245811462402344e-05, -9.5367431640625e-06, -0.005324363708496094, -2.47955322265625e-05, -7.62939453125e-06, -7.62939453125e-06, -0.0017185211181640625, -9.5367431640625e-06, 0.0, -0.0012531280517578125, -0.00027310551377013326, -1.3112959095451515e-05, -5.7220458984375e-06, -1.1444091796875e-05, -9.1552734375e-05, -1.9073486328125e-06, 0.0, -7.82012939453125e-05, -0.00011634825932560489, -1.1920928244535389e-07, -1.9073486328125e-06, -0.2210226058959961, -0.000278472900390625, -0.0007381439208984375, -0.0014591217041015625, -0.002284407615661621, -0.001773834228515625, -5.7220458984375e-06, -3.814697265625e-06, -0.00012969970703125, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -8.106231689453125e-06, 0.0, 0.0, -1.9073486328125e-06, -4.899501436739229e-05, -1.5497195136049413e-06, -0.00327301025390625, -0.001171112060546875, -5.53131103515625e-05, -0.0038614273071289062, -0.00018310546875, -0.002361297607421875, -0.0002231597900390625, -0.0002384185791015625, -7.2479248046875e-05, -2.09808349609375e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -0.0001344678457826376, -5.14984130859375e-05, -0.000820159912109375, 0.0, -1.52587890625e-05, -0.0001735687255859375, -0.0037937164306640625, -1.9073486328125e-05, -6.818750262027606e-05, 0.0, -0.009509086608886719, -0.000209808349609375, -0.00127410888671875, -1.9073486328125e-06, -6.866455078125e-05, -1.9073486328125e-06, -0.00042887526797130704, -2.503394853192731e-06, -1.9073486328125e-06, -0.0009212493896484375, -2.288818359375e-05, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.00035130977630615234, 0.0, -0.00042188167572021484, -2.3841855067985307e-07, -0.00016210554167628288, -2.622604142743512e-06, -4.38690185546875e-05, -0.01746654510498047, -6.866455078125e-05, -0.0008182525634765625, -9.72747802734375e-05], "choice_history": [93, 145, 230, 101, 125, "Cleave", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Cleave", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "minions", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 103, 129, 23, 146, "i", "<EOS>", 18, 123, 23, 146, "range", "<EOS>", 217, 83, 69, 231, 98, 115, 216, 82, 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "minions", "<EOS>", "remove", "<EOS>", 216, 82, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 213, 8, 216, 69, 109]}, {"inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -1.8952481179168643, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Cleave", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Template12"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "minions", "_type": "Name"}]}, {"target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "minions", "_type": "Name"}], "_type": "Call"}, "targets": [{"_type": "Template30"}]}, {"_type": "Expr", "value": {"func": {"attr": "remove", "_type": "Attribute", "value": {"id": "minions", "_type": "Name"}}, "args": [{"_type": "Template30"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Template31"}, {"_type": "Template12"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template12"}], "ops": [{"_type": "GtE"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.9073486328125e-06, -0.0002002716064453125, -5.7220458984375e-05, -5.7220458984375e-06, -8.106226232484914e-06, -2.1457672119140625e-06, -3.814697265625e-06, -0.0002536773681640625, -0.0296783447265625, -1.71661376953125e-05, 0.0, -2.861022494471399e-06, 0.0, -5.7220458984375e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.008317947387695312, -6.67572021484375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.0265574676159304e-06, -1.52587890625e-05, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, 0.0, 0.0, -5.841253368998878e-06, 0.0, -0.0007935762405395508, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -4.38690185546875e-05, -5.14984130859375e-05, 0.0, -6.866455078125e-05, -5.7220458984375e-06, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.384185791015625e-06, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -9.000301361083984e-05, -1.6689286894688848e-06, -0.0013790130615234375, -0.000423431396484375, -0.0002460479736328125, -1.9073486328125e-05, -8.392333984375e-05, -0.00035858154296875, -2.47955322265625e-05, -0.0007708152406848967, -5.0305148761253804e-05, -0.0007448196411132812, -2.288818359375e-05, -3.4332275390625e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -0.0006253243191167712, -1.9073486328125e-06, -0.000563502311706543, 0.0, -5.7220458984375e-05, -0.000102996826171875, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.000354766845703125, -1.9073486328125e-06, -7.832050323486328e-05, 0.0, -0.0007593631744384766, -1.1920928244535389e-07, -0.00014459784142673016, -1.8358225133852102e-05, -0.05728340148925781, -4.1961669921875e-05, -0.0028896331787109375, -8.0108642578125e-05, -0.004118077456951141, -2.3841855067985307e-07, -0.00060272216796875, -1.1444091796875e-05, -5.91278076171875e-05, -1.9073486328125e-06, -0.0018189967377111316, -2.1934454707661644e-05, -0.000274658203125, -0.000118255615234375, -0.0007867813110351562, -0.00214385986328125, -0.00043487548828125, -7.62939453125e-05, -0.000377655029296875, -0.0013971328735351562, -0.0002498626708984375, -0.00011444091796875, -0.0001010894775390625, -3.814697265625e-06, -0.0001373291015625, -1.71661376953125e-05, -0.0012393640354275703, 0.0, -0.0029996633529663086, 0.0, -1.52587890625e-05, -0.0022602081298828125, -0.00011444091796875, -0.008967030793428421, -1.0728830375228426e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.0008392333984375, -6.67572021484375e-05, 0.0, -0.004097938537597656, -2.86102294921875e-05, -0.0017286483198404312, -1.9073468138230965e-06, -0.019632963463664055, -2.3245811462402344e-05, -9.5367431640625e-06, -0.005324363708496094, -2.47955322265625e-05, -7.62939453125e-06, -7.62939453125e-06, -0.0017185211181640625, -9.5367431640625e-06, 0.0, -0.0012531280517578125, -0.00027310551377013326, -1.3112959095451515e-05, -5.7220458984375e-06, -1.1444091796875e-05, -9.1552734375e-05, -1.9073486328125e-06, 0.0, -7.82012939453125e-05, -0.00011634825932560489, -1.1920928244535389e-07, -1.9073486328125e-06, -1.6724328994750977, -4.1961669921875e-05, -0.0020313262939453125, -0.0003147125244140625, -0.0009156465530395508, -0.0008087158203125, -5.7220458984375e-06, -3.814697265625e-06, -0.000148773193359375, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -7.987022399902344e-06, 0.0, 0.0, -1.9073486328125e-06, -6.127356755314395e-05, -1.4305104514278355e-06, -0.0024394989013671875, -0.001232147216796875, -5.7220458984375e-05, -0.0038967132568359375, -0.0001811981201171875, -0.0023746490478515625, -0.000263214111328125, -0.0002269744873046875, -6.67572021484375e-05, -2.288818359375e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -0.0001314876280957833, -5.14984130859375e-05, -0.0007953643798828125, 0.0, -1.33514404296875e-05, -0.0001697540283203125, -0.0037479400634765625, -1.9073486328125e-05, -6.771067273803055e-05, 0.0, -0.009387969970703125, -0.000186920166015625, -0.001224517822265625, -1.9073486328125e-06, -6.866455078125e-05, -1.9073486328125e-06, -0.0004312587552703917, -2.503394853192731e-06, -1.9073486328125e-06, -0.0009202957153320312, -2.47955322265625e-05, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.00035130977630615234, 0.0, -0.00041997432708740234, -2.3841855067985307e-07, -0.00016210554167628288, -2.622604142743512e-06, -4.38690185546875e-05, -0.01735687255859375, -6.67572021484375e-05, -0.000823974609375, -9.918212890625e-05], "choice_history": [93, 145, 230, 101, 125, "Cleave", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Cleave", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "minions", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 103, 129, 23, 146, "i", "<EOS>", 18, 123, 23, 146, "range", "<EOS>", 217, 83, 69, 231, 98, 115, 216, 82, 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "minions", "<EOS>", "remove", "<EOS>", 216, 82, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 213, 8, 216, 69, 109]}, {"inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n", "score": -4.137245389739704, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Cleave", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Template12"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "minions", "_type": "Name"}]}, {"target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "minions", "_type": "Name"}], "_type": "Call"}, "targets": [{"_type": "Template30"}]}, {"_type": "Expr", "value": {"func": {"attr": "remove", "_type": "Attribute", "value": {"id": "minions", "_type": "Name"}}, "args": [{"_type": "Template30"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Template31"}, {"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.9073486328125e-06, -0.0002002716064453125, -5.7220458984375e-05, -5.7220458984375e-06, -8.106226232484914e-06, -2.1457672119140625e-06, -3.814697265625e-06, -0.0002536773681640625, -3.5363569259643555, -3.0517578125e-05, -5.7220458984375e-06, -2.264974000354414e-06, -2.0265579223632812e-06, 0.0, -0.0002155303955078125, -1.52587890625e-05, -8.58306884765625e-05, 0.0, -0.2294445037841797, -5.53131103515625e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, -1.4305113609225373e-06, -1.1444091796875e-05, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, 0.0, 0.0, -5.7220440794480965e-06, 0.0, -0.0008126497268676758, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -2.6702880859375e-05, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -5.340576171875e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.503394853192731e-06, 0.0, -1.52587890625e-05, -7.62939453125e-06, -9.250640141544864e-05, -1.7881377516459906e-06, -0.0014438629150390625, -0.00037384033203125, -0.000263214111328125, -1.71661376953125e-05, -8.20159912109375e-05, -0.0003414154052734375, -2.86102294921875e-05, -0.0008243186748586595, -4.446415914571844e-05, -0.0007143020629882812, -2.47955322265625e-05, -3.62396240234375e-05, 0.0, -9.34600830078125e-05, -1.9073486328125e-06, -0.0006055403500795364, -1.9073486328125e-06, -0.000548243522644043, 0.0, -5.7220458984375e-05, -0.0001010894775390625, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0003795623779296875, -1.9073486328125e-06, -7.832050323486328e-05, 0.0, -0.0007669925689697266, -1.1920928244535389e-07, -0.0001445976085960865, -1.8358225133852102e-05, -0.07247734069824219, -6.29425048828125e-05, -0.0039539337158203125, -9.5367431640625e-05, -0.004378786776214838, -2.3841855067985307e-07, -0.0005893707275390625, -1.1444091796875e-05, -5.91278076171875e-05, -1.9073486328125e-06, -0.0018447425682097673, -2.3841803340474144e-05, -0.000255584716796875, -0.000118255615234375, -0.0008029937744140625, -0.0021543502807617188, -0.0004444122314453125, -7.62939453125e-05, -0.0003795623779296875, -0.0014095306396484375, -0.000247955322265625, -0.0001163482666015625, -0.000102996826171875, -3.814697265625e-06, -0.0001373291015625, -1.71661376953125e-05, -0.0012232741573825479, 0.0, -0.002973794937133789, 0.0, -1.52587890625e-05, -0.0022640228271484375, -0.00011444091796875, -0.009026866406202316, -1.0728830375228426e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.0008392333984375, -6.67572021484375e-05, 0.0, -0.0040988922119140625, -2.86102294921875e-05, -0.0017319816397503018, -1.9073468138230965e-06, -0.01964118890464306, -2.3245811462402344e-05, -9.5367431640625e-06, -0.0053253173828125, -2.47955322265625e-05, -7.62939453125e-06, -7.62939453125e-06, -0.0017242431640625, -9.5367431640625e-06, 0.0, -0.0012569427490234375, -0.00027322472305968404, -1.3112959095451515e-05, -5.7220458984375e-06, -1.1444091796875e-05, -9.1552734375e-05, -1.9073486328125e-06, 0.0, -8.0108642578125e-05, -0.00011634825932560489, -1.1920928244535389e-07, -1.9073486328125e-06, -0.2212696075439453, -0.000278472900390625, -1.71661376953125e-05], "choice_history": [93, 145, 230, 101, 125, "Cleave", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Cleave", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "minions", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 103, 129, 23, 146, "i", "<EOS>", 18, 123, 23, 146, "range", "<EOS>", 217, 83, 69, 231, 98, 115, 216, 82, 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "minions", "<EOS>", "remove", "<EOS>", 216, 82, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        minions.remove(minion)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -4.67900323477982, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Cleave", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Template12"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "minions", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "remove", "_type": "Attribute", "value": {"id": "minions", "_type": "Name"}}, "args": [{"_type": "Template30"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template12"}], "ops": [{"_type": "GtE"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.9073486328125e-06, -0.0002002716064453125, -5.7220458984375e-05, -5.7220458984375e-06, -8.106226232484914e-06, -2.1457672119140625e-06, -3.814697265625e-06, -0.0002536773681640625, -0.0296783447265625, -1.71661376953125e-05, 0.0, -2.861022494471399e-06, 0.0, -5.7220458984375e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.008317947387695312, -6.67572021484375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.0265574676159304e-06, -1.52587890625e-05, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, 0.0, 0.0, -5.841253368998878e-06, 0.0, -0.0007935762405395508, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -4.38690185546875e-05, -5.14984130859375e-05, 0.0, -6.866455078125e-05, -5.7220458984375e-06, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.384185791015625e-06, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -9.000301361083984e-05, -1.6689286894688848e-06, -0.0013790130615234375, -0.000423431396484375, -0.0002460479736328125, -1.9073486328125e-05, -8.392333984375e-05, -0.00035858154296875, -2.47955322265625e-05, -0.0007708152406848967, -5.0305148761253804e-05, -0.0007448196411132812, -2.288818359375e-05, -3.4332275390625e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -0.0006253243191167712, -1.9073486328125e-06, -0.000563502311706543, 0.0, -5.7220458984375e-05, -0.000102996826171875, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.000354766845703125, -1.9073486328125e-06, -7.832050323486328e-05, 0.0, -0.0007593631744384766, -1.1920928244535389e-07, -0.00014459784142673016, -1.8358225133852102e-05, -2.904465675354004, -9.5367431640625e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, 0.0, -0.35370349884033203, -0.0001239776611328125, -1.2147340774536133, -2.3841855067985307e-07, -0.07414984703063965, -9.775161743164062e-06, -1.33514404296875e-05, -0.004047393798828125, -0.0071353912353515625, -5.7220458984375e-06, -0.0006638765335083008, -1.9073486328125e-05, -2.288818359375e-05, -3.814697265625e-06, -0.000171661376953125, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -4.0531158447265625e-06, 0.0, 0.0, -9.5367431640625e-06, -5.233287447481416e-05, -1.311301275563892e-06, -0.02601909637451172, -0.0016994476318359375, -4.76837158203125e-05, -0.0034694671630859375, -0.0001678466796875, -0.0028820037841796875, -0.0001316070556640625, -0.000247955322265625, -6.103515625e-05, -2.09808349609375e-05, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -0.0001235005329363048, -5.7220458984375e-05, -0.0008029937744140625, 0.0, -1.33514404296875e-05, -0.000171661376953125, -0.0035228729248046875, -1.71661376953125e-05, -7.069084676913917e-05, 0.0, -0.01007080078125, -0.00032806396484375, -0.0013427734375, -1.9073486328125e-06, -6.866455078125e-05, -1.9073486328125e-06, -0.00046104472130537033, -2.503394853192731e-06, -1.9073486328125e-06, -0.0009107589721679688, -2.288818359375e-05, -2.288818359375e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0003477334976196289, 0.0, -0.00043141841888427734, -2.3841855067985307e-07, -0.0001642485149204731, -2.622604142743512e-06, -4.57763671875e-05, -0.017915725708007812, -7.2479248046875e-05, -0.000823974609375, -9.5367431640625e-05], "choice_history": [93, 145, 230, 101, 125, "Cleave", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Cleave", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "minions", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "minions", "<EOS>", "remove", "<EOS>", 216, 82, 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 213, 8, 216, 69, 109]}, {"inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(5), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -5.1457023019194565, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Cleave", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Template12"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "minions", "_type": "Name"}]}, {"target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "minions", "_type": "Name"}], "_type": "Call"}, "targets": [{"_type": "Template30"}]}, {"_type": "Expr", "value": {"func": {"attr": "remove", "_type": "Attribute", "value": {"id": "minions", "_type": "Name"}}, "args": [{"_type": "Template30"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Template31"}, {"_type": "Template12"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template12"}], "ops": [{"_type": "GtE"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.9073486328125e-06, -0.0002002716064453125, -5.7220458984375e-05, -5.7220458984375e-06, -8.106226232484914e-06, -2.1457672119140625e-06, -3.814697265625e-06, -0.0002536773681640625, -0.0296783447265625, -1.71661376953125e-05, 0.0, -2.861022494471399e-06, 0.0, -5.7220458984375e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.008317947387695312, -6.67572021484375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.0265574676159304e-06, -1.52587890625e-05, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, 0.0, 0.0, -5.841253368998878e-06, 0.0, -0.0007935762405395508, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -4.38690185546875e-05, -5.14984130859375e-05, 0.0, -6.866455078125e-05, -5.7220458984375e-06, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.384185791015625e-06, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -9.000301361083984e-05, -1.6689286894688848e-06, -0.0013790130615234375, -0.000423431396484375, -0.0002460479736328125, -1.9073486328125e-05, -8.392333984375e-05, -0.00035858154296875, -2.47955322265625e-05, -0.0007708152406848967, -5.0305148761253804e-05, -0.0007448196411132812, -2.288818359375e-05, -3.4332275390625e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -0.0006253243191167712, -1.9073486328125e-06, -0.000563502311706543, 0.0, -5.7220458984375e-05, -0.000102996826171875, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.000354766845703125, -1.9073486328125e-06, -7.832050323486328e-05, 0.0, -0.0007593631744384766, -1.1920928244535389e-07, -0.00014459784142673016, -1.8358225133852102e-05, -0.05728340148925781, -4.1961669921875e-05, -0.0028896331787109375, -8.0108642578125e-05, -0.004118077456951141, -2.3841855067985307e-07, -0.00060272216796875, -1.1444091796875e-05, -5.91278076171875e-05, -1.9073486328125e-06, -0.0018189967377111316, -2.1934454707661644e-05, -0.000274658203125, -0.000118255615234375, -0.0007867813110351562, -0.00214385986328125, -0.00043487548828125, -7.62939453125e-05, -0.000377655029296875, -0.0013971328735351562, -0.0002498626708984375, -0.00011444091796875, -0.0001010894775390625, -3.814697265625e-06, -0.0001373291015625, -1.71661376953125e-05, -0.0012393640354275703, 0.0, -0.0029996633529663086, 0.0, -1.52587890625e-05, -0.0022602081298828125, -0.00011444091796875, -0.008967030793428421, -1.0728830375228426e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.0008392333984375, -6.67572021484375e-05, 0.0, -0.004097938537597656, -2.86102294921875e-05, -0.0017286483198404312, -1.9073468138230965e-06, -0.019632963463664055, -2.3245811462402344e-05, -9.5367431640625e-06, -0.005324363708496094, -2.47955322265625e-05, -7.62939453125e-06, -7.62939453125e-06, -0.0017185211181640625, -9.5367431640625e-06, 0.0, -0.0012531280517578125, -0.00027310551377013326, -1.3112959095451515e-05, -5.7220458984375e-06, -1.1444091796875e-05, -9.1552734375e-05, -1.9073486328125e-06, 0.0, -7.82012939453125e-05, -0.00011634825932560489, -1.1920928244535389e-07, -1.9073486328125e-06, -4.923995018005371, -9.5367431640625e-05, -0.00115966796875, -0.0002155303955078125, -0.0008153915405273438, -0.0003833770751953125, -1.9073486328125e-06, -1.9073486328125e-06, -0.000148773193359375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -5.9604644775390625e-06, 0.0, 0.0, -1.9073486328125e-06, -4.971026646671817e-05, -1.4305104514278355e-06, -0.0036449432373046875, -0.001110076904296875, -5.53131103515625e-05, -0.0034666061401367188, -0.000179290771484375, -0.0023860931396484375, -0.000217437744140625, -0.0002269744873046875, -6.103515625e-05, -2.288818359375e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -0.00013542153465095907, -5.14984130859375e-05, -0.0007953643798828125, 0.0, -1.33514404296875e-05, -0.0001697540283203125, -0.0037832260131835938, -1.9073486328125e-05, -6.85451232129708e-05, 0.0, -0.009139060974121094, -0.0001811981201171875, -0.001132965087890625, -1.9073486328125e-06, -6.67572021484375e-05, -1.9073486328125e-06, -0.00043375923996791244, -2.503394853192731e-06, -1.9073486328125e-06, -0.000926971435546875, -2.47955322265625e-05, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.00035130977630615234, 0.0, -0.00042188167572021484, -2.3841855067985307e-07, -0.00016401242464780807, -2.622604142743512e-06, -4.38690185546875e-05, -0.01739501953125, -6.4849853515625e-05, -0.00083160400390625, -9.918212890625e-05], "choice_history": [93, 145, 230, 101, 125, "Cleave", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Cleave", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "minions", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 103, 129, 23, 146, "i", "<EOS>", 18, 123, 23, 146, "range", "<EOS>", 217, 83, 69, 231, 98, 115, 216, 82, 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "minions", "<EOS>", "remove", "<EOS>", 216, 82, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 213, 8, 216, 69, 109]}, {"inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -5.264287080021255, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Cleave", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Template12"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "minions", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "extend", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template12"}], "ops": [{"_type": "GtE"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.9073486328125e-06, -0.0002002716064453125, -5.7220458984375e-05, -5.7220458984375e-06, -8.106226232484914e-06, -2.1457672119140625e-06, -3.814697265625e-06, -0.0002536773681640625, -0.0296783447265625, -1.71661376953125e-05, 0.0, -2.861022494471399e-06, 0.0, -5.7220458984375e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.008317947387695312, -6.67572021484375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.0265574676159304e-06, -1.52587890625e-05, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, 0.0, 0.0, -5.841253368998878e-06, 0.0, -0.0007935762405395508, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -4.38690185546875e-05, -5.14984130859375e-05, 0.0, -6.866455078125e-05, -5.7220458984375e-06, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.384185791015625e-06, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -9.000301361083984e-05, -1.6689286894688848e-06, -0.0013790130615234375, -0.000423431396484375, -0.0002460479736328125, -1.9073486328125e-05, -8.392333984375e-05, -0.00035858154296875, -2.47955322265625e-05, -0.0007708152406848967, -5.0305148761253804e-05, -0.0007448196411132812, -2.288818359375e-05, -3.4332275390625e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -0.0006253243191167712, -1.9073486328125e-06, -0.000563502311706543, 0.0, -5.7220458984375e-05, -0.000102996826171875, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.000354766845703125, -1.9073486328125e-06, -7.832050323486328e-05, 0.0, -0.0007593631744384766, -1.1920928244535389e-07, -0.00014459784142673016, -1.8358225133852102e-05, -2.904465675354004, -9.5367431640625e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, 0.0, -0.35370349884033203, -0.0001239776611328125, -0.41658490896224976, -1.9073468138230965e-06, -0.7642475366592407, -8.106231689453125e-06, -3.62396240234375e-05, -0.027062416076660156, -7.62939453125e-06, -0.029608726501464844, -5.7220458984375e-06, -0.00043487548828125, -3.814697265625e-06, -2.3126571250031702e-05, 0.0, -0.6083258390426636, -5.5670738220214844e-05, -0.04419184476137161, -7.402896881103516e-05, -0.0061359405517578125, -5.7220458984375e-06, -0.0014395713806152344, -9.34600830078125e-05, 0.0, 0.0, -0.0003108978271484375, -3.814697265625e-06, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, 0.0, -1.9073486328125e-06, -4.565715789794922e-05, -1.0728830375228426e-06, -0.01651763916015625, -0.0015735626220703125, -0.0001163482666015625, -0.0023345947265625, -0.0001049041748046875, -0.00194549560546875, -0.0001678466796875, -0.0001506805419921875, -3.24249267578125e-05, -3.814697265625e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -0.00013196456711739302, -4.9591064453125e-05, -0.00083160400390625, 0.0, -1.52587890625e-05, -0.000171661376953125, -0.004126548767089844, -2.09808349609375e-05, -6.747229781467468e-05, 0.0, -0.009190559387207031, -0.0004215240478515625, -0.0014514923095703125, -1.9073486328125e-06, -7.43865966796875e-05, -1.9073486328125e-06, -0.00040253045153804123, -2.503394853192731e-06, -1.9073486328125e-06, -0.0009069442749023438, -2.288818359375e-05, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.00035881996154785156, 0.0, -0.00041413307189941406, -2.3841855067985307e-07, -0.00016186852008104324, -2.622604142743512e-06, -4.76837158203125e-05, -0.017446517944335938, -7.2479248046875e-05, -0.000789642333984375, -0.0001010894775390625], "choice_history": [93, 145, 230, 101, 125, "Cleave", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Cleave", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "minions", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "extend", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 213, 8, 216, 69, 109]}, {"inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) > 2\n", "score": -5.283550683217911, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Cleave", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Template12"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "minions", "_type": "Name"}]}, {"target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "minions", "_type": "Name"}], "_type": "Call"}, "targets": [{"_type": "Template30"}]}, {"_type": "Expr", "value": {"func": {"attr": "remove", "_type": "Attribute", "value": {"id": "minions", "_type": "Name"}}, "args": [{"_type": "Template30"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Template31"}, {"_type": "Template12"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template12"}], "ops": [{"_type": "Gt"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.9073486328125e-06, -0.0002002716064453125, -5.7220458984375e-05, -5.7220458984375e-06, -8.106226232484914e-06, -2.1457672119140625e-06, -3.814697265625e-06, -0.0002536773681640625, -0.0296783447265625, -1.71661376953125e-05, 0.0, -2.861022494471399e-06, 0.0, -5.7220458984375e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.008317947387695312, -6.67572021484375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.0265574676159304e-06, -1.52587890625e-05, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, 0.0, 0.0, -5.841253368998878e-06, 0.0, -0.0007935762405395508, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -4.38690185546875e-05, -5.14984130859375e-05, 0.0, -6.866455078125e-05, -5.7220458984375e-06, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.384185791015625e-06, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -9.000301361083984e-05, -1.6689286894688848e-06, -0.0013790130615234375, -0.000423431396484375, -0.0002460479736328125, -1.9073486328125e-05, -8.392333984375e-05, -0.00035858154296875, -2.47955322265625e-05, -0.0007708152406848967, -5.0305148761253804e-05, -0.0007448196411132812, -2.288818359375e-05, -3.4332275390625e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -0.0006253243191167712, -1.9073486328125e-06, -0.000563502311706543, 0.0, -5.7220458984375e-05, -0.000102996826171875, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.000354766845703125, -1.9073486328125e-06, -7.832050323486328e-05, 0.0, -0.0007593631744384766, -1.1920928244535389e-07, -0.00014459784142673016, -1.8358225133852102e-05, -0.05728340148925781, -4.1961669921875e-05, -0.0028896331787109375, -8.0108642578125e-05, -0.004118077456951141, -2.3841855067985307e-07, -0.00060272216796875, -1.1444091796875e-05, -5.91278076171875e-05, -1.9073486328125e-06, -0.0018189967377111316, -2.1934454707661644e-05, -0.000274658203125, -0.000118255615234375, -0.0007867813110351562, -0.00214385986328125, -0.00043487548828125, -7.62939453125e-05, -0.000377655029296875, -0.0013971328735351562, -0.0002498626708984375, -0.00011444091796875, -0.0001010894775390625, -3.814697265625e-06, -0.0001373291015625, -1.71661376953125e-05, -0.0012393640354275703, 0.0, -0.0029996633529663086, 0.0, -1.52587890625e-05, -0.0022602081298828125, -0.00011444091796875, -0.008967030793428421, -1.0728830375228426e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.0008392333984375, -6.67572021484375e-05, 0.0, -0.004097938537597656, -2.86102294921875e-05, -0.0017286483198404312, -1.9073468138230965e-06, -0.019632963463664055, -2.3245811462402344e-05, -9.5367431640625e-06, -0.005324363708496094, -2.47955322265625e-05, -7.62939453125e-06, -7.62939453125e-06, -0.0017185211181640625, -9.5367431640625e-06, 0.0, -0.0012531280517578125, -0.00027310551377013326, -1.3112959095451515e-05, -5.7220458984375e-06, -1.1444091796875e-05, -9.1552734375e-05, -1.9073486328125e-06, 0.0, -7.82012939453125e-05, -0.00011634825932560489, -1.1920928244535389e-07, -1.9073486328125e-06, -0.2210226058959961, -0.000278472900390625, -0.0007381439208984375, -0.0014591217041015625, -0.002284407615661621, -0.001773834228515625, -5.7220458984375e-06, -3.814697265625e-06, -0.00012969970703125, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -8.106231689453125e-06, 0.0, 0.0, -1.9073486328125e-06, -4.899501436739229e-05, -1.5497195136049413e-06, -0.00327301025390625, -0.001171112060546875, -5.53131103515625e-05, -0.0038614273071289062, -0.00018310546875, -0.002361297607421875, -0.0002231597900390625, -0.0002384185791015625, -7.2479248046875e-05, -2.09808349609375e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -0.0001344678457826376, -5.14984130859375e-05, -0.000820159912109375, 0.0, -1.52587890625e-05, -0.0001735687255859375, -0.0037937164306640625, -1.9073486328125e-05, -6.818750262027606e-05, 0.0, -0.009509086608886719, -0.000209808349609375, -0.00127410888671875, -1.9073486328125e-06, -6.866455078125e-05, -1.9073486328125e-06, -0.00042887526797130704, -2.503394853192731e-06, -1.9073486328125e-06, -0.0009212493896484375, -2.288818359375e-05, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.00035130977630615234, 0.0, -0.00042188167572021484, -2.3841855067985307e-07, -0.00016210554167628288, -2.622604142743512e-06, -4.38690185546875e-05, -4.559861183166504, -7.62939453125e-06, -0.2946748733520508, -0.000156402587890625], "choice_history": [93, 145, 230, 101, 125, "Cleave", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Cleave", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "minions", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 103, 129, 23, 146, "i", "<EOS>", 18, 123, 23, 146, "range", "<EOS>", 217, 83, 69, 231, 98, 115, 216, 82, 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "minions", "<EOS>", "remove", "<EOS>", 216, 82, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 213, 7, 216, 69, 109]}, {"inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        targets.append(game.other_player.hero)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -5.5655414898741, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Cleave", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Template12"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "minions", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template12"}], "ops": [{"_type": "GtE"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.9073486328125e-06, -0.0002002716064453125, -5.7220458984375e-05, -5.7220458984375e-06, -8.106226232484914e-06, -2.1457672119140625e-06, -3.814697265625e-06, -0.0002536773681640625, -0.0296783447265625, -1.71661376953125e-05, 0.0, -2.861022494471399e-06, 0.0, -5.7220458984375e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.008317947387695312, -6.67572021484375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.0265574676159304e-06, -1.52587890625e-05, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, 0.0, 0.0, -5.841253368998878e-06, 0.0, -0.0007935762405395508, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -4.38690185546875e-05, -5.14984130859375e-05, 0.0, -6.866455078125e-05, -5.7220458984375e-06, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.384185791015625e-06, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -9.000301361083984e-05, -1.6689286894688848e-06, -0.0013790130615234375, -0.000423431396484375, -0.0002460479736328125, -1.9073486328125e-05, -8.392333984375e-05, -0.00035858154296875, -2.47955322265625e-05, -0.0007708152406848967, -5.0305148761253804e-05, -0.0007448196411132812, -2.288818359375e-05, -3.4332275390625e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -0.0006253243191167712, -1.9073486328125e-06, -0.000563502311706543, 0.0, -5.7220458984375e-05, -0.000102996826171875, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.000354766845703125, -1.9073486328125e-06, -7.832050323486328e-05, 0.0, -0.0007593631744384766, -1.1920928244535389e-07, -0.00014459784142673016, -1.8358225133852102e-05, -2.904465675354004, -9.5367431640625e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, 0.0, -0.35370349884033203, -0.0001239776611328125, -0.41658490896224976, -1.9073468138230965e-06, -1.051355004310608, 0.0, -0.0004596710205078125, -0.10947132110595703, -1.9073486328125e-06, -7.2479248046875e-05, -3.814697265625e-06, -0.0014514923095703125, -9.5367431640625e-06, -1.5139577953959815e-05, 0.0, -0.11011075973510742, -6.4373016357421875e-06, -0.46172359585762024, -7.176397048169747e-05, -0.0004291534423828125, -5.7220458984375e-06, -0.010935425758361816, -0.000110626220703125, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006246566772460938, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -2.1457672119140625e-06, 0.0, 0.0, -9.5367431640625e-06, -3.3736228942871094e-05, -1.0728830375228426e-06, -0.05346107482910156, -0.0012454986572265625, -0.000125885009765625, -0.0023183822631835938, -0.0001125335693359375, -0.0019245147705078125, -0.000148773193359375, -0.0001811981201171875, -3.24249267578125e-05, -3.4332275390625e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -0.00013315666001290083, -5.14984130859375e-05, -0.0008087158203125, 0.0, -1.52587890625e-05, -0.0001659393310546875, -0.003505706787109375, -1.71661376953125e-05, -7.03333062119782e-05, 0.0, -0.0094757080078125, -0.0004138946533203125, -0.001544952392578125, -1.9073486328125e-06, -6.866455078125e-05, -1.9073486328125e-06, -0.0004140909877605736, -2.503394853192731e-06, -1.9073486328125e-06, -0.0009145736694335938, -2.47955322265625e-05, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.00035321712493896484, 0.0, -0.00042378902435302734, -2.3841855067985307e-07, -0.00016401289030909538, -2.622604142743512e-06, -4.76837158203125e-05, -0.01756000518798828, -7.05718994140625e-05, -0.0008029937744140625, -9.918212890625e-05], "choice_history": [93, 145, 230, 101, 125, "Cleave", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Cleave", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "minions", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 213, 8, 216, 69, 109]}, {"inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n", "score": -5.587120267669391, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Cleave", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Template12"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "minions", "_type": "Name"}]}, {"target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "minions", "_type": "Name"}], "_type": "Call"}, "targets": [{"_type": "Template30"}]}, {"_type": "Expr", "value": {"func": {"attr": "remove", "_type": "Attribute", "value": {"id": "minions", "_type": "Name"}}, "args": [{"_type": "Template30"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Template31"}, {"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.9073486328125e-06, -0.0002002716064453125, -5.7220458984375e-05, -5.7220458984375e-06, -8.106226232484914e-06, -2.1457672119140625e-06, -3.814697265625e-06, -0.0002536773681640625, -3.5363569259643555, -3.0517578125e-05, -5.7220458984375e-06, -2.264974000354414e-06, -2.0265579223632812e-06, 0.0, -0.0002155303955078125, -1.52587890625e-05, -8.58306884765625e-05, 0.0, -0.2294445037841797, -5.53131103515625e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, -1.4305113609225373e-06, -1.1444091796875e-05, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, 0.0, 0.0, -5.7220440794480965e-06, 0.0, -0.0008126497268676758, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -2.6702880859375e-05, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -5.340576171875e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.503394853192731e-06, 0.0, -1.52587890625e-05, -7.62939453125e-06, -9.250640141544864e-05, -1.7881377516459906e-06, -0.0014438629150390625, -0.00037384033203125, -0.000263214111328125, -1.71661376953125e-05, -8.20159912109375e-05, -0.0003414154052734375, -2.86102294921875e-05, -0.0008243186748586595, -4.446415914571844e-05, -0.0007143020629882812, -2.47955322265625e-05, -3.62396240234375e-05, 0.0, -9.34600830078125e-05, -1.9073486328125e-06, -0.0006055403500795364, -1.9073486328125e-06, -0.000548243522644043, 0.0, -5.7220458984375e-05, -0.0001010894775390625, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0003795623779296875, -1.9073486328125e-06, -7.832050323486328e-05, 0.0, -0.0007669925689697266, -1.1920928244535389e-07, -0.0001445976085960865, -1.8358225133852102e-05, -0.07247734069824219, -6.29425048828125e-05, -0.0039539337158203125, -9.5367431640625e-05, -0.004378786776214838, -2.3841855067985307e-07, -0.0005893707275390625, -1.1444091796875e-05, -5.91278076171875e-05, -1.9073486328125e-06, -0.0018447425682097673, -2.3841803340474144e-05, -0.000255584716796875, -0.000118255615234375, -0.0008029937744140625, -0.0021543502807617188, -0.0004444122314453125, -7.62939453125e-05, -0.0003795623779296875, -0.0014095306396484375, -0.000247955322265625, -0.0001163482666015625, -0.000102996826171875, -3.814697265625e-06, -0.0001373291015625, -1.71661376953125e-05, -0.0012232741573825479, 0.0, -0.002973794937133789, 0.0, -1.52587890625e-05, -0.0022640228271484375, -0.00011444091796875, -0.009026866406202316, -1.0728830375228426e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.0008392333984375, -6.67572021484375e-05, 0.0, -0.0040988922119140625, -2.86102294921875e-05, -0.0017319816397503018, -1.9073468138230965e-06, -0.01964118890464306, -2.3245811462402344e-05, -9.5367431640625e-06, -0.0053253173828125, -2.47955322265625e-05, -7.62939453125e-06, -7.62939453125e-06, -0.0017242431640625, -9.5367431640625e-06, 0.0, -0.0012569427490234375, -0.00027322472305968404, -1.3112959095451515e-05, -5.7220458984375e-06, -1.1444091796875e-05, -9.1552734375e-05, -1.9073486328125e-06, 0.0, -8.0108642578125e-05, -0.00011634825932560489, -1.1920928244535389e-07, -1.9073486328125e-06, -1.671396255493164, -4.1961669921875e-05, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Cleave", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Cleave", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "minions", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 103, 129, 23, 146, "i", "<EOS>", 18, 123, 23, 146, "range", "<EOS>", 217, 83, 69, 231, 98, 115, 216, 82, 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "minions", "<EOS>", "remove", "<EOS>", 216, 82, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 109]}, {"inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(targets)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -5.596488707617183, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Cleave", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Template12"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "minions", "_type": "Name"}]}, {"target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "targets", "_type": "Name"}], "_type": "Call"}, "targets": [{"_type": "Template30"}]}, {"_type": "Expr", "value": {"func": {"attr": "remove", "_type": "Attribute", "value": {"id": "minions", "_type": "Name"}}, "args": [{"_type": "Template30"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Template31"}, {"_type": "Template12"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template12"}], "ops": [{"_type": "GtE"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.9073486328125e-06, -0.0002002716064453125, -5.7220458984375e-05, -5.7220458984375e-06, -8.106226232484914e-06, -2.1457672119140625e-06, -3.814697265625e-06, -0.0002536773681640625, -0.0296783447265625, -1.71661376953125e-05, 0.0, -2.861022494471399e-06, 0.0, -5.7220458984375e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.008317947387695312, -6.67572021484375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.0265574676159304e-06, -1.52587890625e-05, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, 0.0, 0.0, -5.841253368998878e-06, 0.0, -0.0007935762405395508, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -4.38690185546875e-05, -5.14984130859375e-05, 0.0, -6.866455078125e-05, -5.7220458984375e-06, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.384185791015625e-06, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -9.000301361083984e-05, -1.6689286894688848e-06, -0.0013790130615234375, -0.000423431396484375, -0.0002460479736328125, -1.9073486328125e-05, -8.392333984375e-05, -0.00035858154296875, -2.47955322265625e-05, -0.0007708152406848967, -5.0305148761253804e-05, -0.0007448196411132812, -2.288818359375e-05, -3.4332275390625e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -0.0006253243191167712, -1.9073486328125e-06, -0.000563502311706543, 0.0, -5.7220458984375e-05, -0.000102996826171875, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.000354766845703125, -1.9073486328125e-06, -7.832050323486328e-05, 0.0, -0.0007593631744384766, -1.1920928244535389e-07, -0.00014459784142673016, -1.8358225133852102e-05, -0.05728340148925781, -4.1961669921875e-05, -0.0028896331787109375, -8.0108642578125e-05, -0.004118077456951141, -2.3841855067985307e-07, -0.00060272216796875, -1.1444091796875e-05, -5.91278076171875e-05, -1.9073486328125e-06, -0.0018189967377111316, -2.1934454707661644e-05, -0.000274658203125, -0.000118255615234375, -0.0007867813110351562, -0.00214385986328125, -0.00043487548828125, -7.62939453125e-05, -0.000377655029296875, -0.0013971328735351562, -0.0002498626708984375, -0.00011444091796875, -0.0001010894775390625, -3.814697265625e-06, -0.0001373291015625, -1.71661376953125e-05, -0.0012393640354275703, 0.0, -0.0029996633529663086, 0.0, -1.52587890625e-05, -0.0022602081298828125, -0.00011444091796875, -5.156032562255859, -1.1920922133867862e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001277923583984375, -9.5367431640625e-06, 0.0, -0.0026569366455078125, -7.62939453125e-06, -0.001836065435782075, -1.0728830375228426e-06, -0.02629619464278221, -8.225440979003906e-06, -5.7220458984375e-06, -0.004215240478515625, -2.6702880859375e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.000972747802734375, -9.5367431640625e-06, 0.0, -0.0014591217041015625, -0.00029313316917978227, -1.2159294783486985e-05, -3.814697265625e-06, -1.33514404296875e-05, -7.2479248046875e-05, -1.9073486328125e-06, 0.0, -7.43865966796875e-05, -0.00011658667790470645, -1.1920928244535389e-07, -1.9073486328125e-06, -0.22002696990966797, -0.00026702880859375, -0.000751495361328125, -0.00146484375, -0.0023196935653686523, -0.0017566680908203125, -5.7220458984375e-06, -3.814697265625e-06, -0.00012969970703125, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -8.106231689453125e-06, 0.0, 0.0, -1.9073486328125e-06, -4.911422001896426e-05, -1.5497195136049413e-06, -0.0034027099609375, -0.0011692047119140625, -5.53131103515625e-05, -0.0038585662841796875, -0.00018310546875, -0.002376556396484375, -0.0002231597900390625, -0.000240325927734375, -7.2479248046875e-05, -2.09808349609375e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -0.00013458704052027315, -5.14984130859375e-05, -0.000820159912109375, 0.0, -1.52587890625e-05, -0.0001735687255859375, -0.0037975311279296875, -1.9073486328125e-05, -6.818750262027606e-05, 0.0, -0.009558677673339844, -0.0002117156982421875, -0.00127410888671875, -1.9073486328125e-06, -6.866455078125e-05, -1.9073486328125e-06, -0.0004293519596103579, -2.503394853192731e-06, -1.9073486328125e-06, -0.0009212493896484375, -2.288818359375e-05, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.00035130977630615234, 0.0, -0.00042188167572021484, -2.3841855067985307e-07, -0.0001619867980480194, -2.622604142743512e-06, -4.38690185546875e-05, -0.017477035522460938, -6.866455078125e-05, -0.00081634521484375, -9.72747802734375e-05], "choice_history": [93, 145, 230, 101, 125, "Cleave", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Cleave", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "minions", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 103, 129, 23, 146, "i", "<EOS>", 18, 123, 23, 146, "range", "<EOS>", 217, 83, 69, 231, 98, 115, 216, 82, 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "targets", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "minions", "<EOS>", "remove", "<EOS>", 216, 82, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 213, 8, 216, 69, 109]}, {"inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        game.other_player.hero.minions(minion)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -5.794718360166954, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Cleave", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Template12"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "minions", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "minions", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"_type": "Template30"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template12"}], "ops": [{"_type": "GtE"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.9073486328125e-06, -0.0002002716064453125, -5.7220458984375e-05, -5.7220458984375e-06, -8.106226232484914e-06, -2.1457672119140625e-06, -3.814697265625e-06, -0.0002536773681640625, -0.0296783447265625, -1.71661376953125e-05, 0.0, -2.861022494471399e-06, 0.0, -5.7220458984375e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.008317947387695312, -6.67572021484375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.0265574676159304e-06, -1.52587890625e-05, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, 0.0, 0.0, -5.841253368998878e-06, 0.0, -0.0007935762405395508, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -4.38690185546875e-05, -5.14984130859375e-05, 0.0, -6.866455078125e-05, -5.7220458984375e-06, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.384185791015625e-06, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -9.000301361083984e-05, -1.6689286894688848e-06, -0.0013790130615234375, -0.000423431396484375, -0.0002460479736328125, -1.9073486328125e-05, -8.392333984375e-05, -0.00035858154296875, -2.47955322265625e-05, -0.0007708152406848967, -5.0305148761253804e-05, -0.0007448196411132812, -2.288818359375e-05, -3.4332275390625e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -0.0006253243191167712, -1.9073486328125e-06, -0.000563502311706543, 0.0, -5.7220458984375e-05, -0.000102996826171875, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.000354766845703125, -1.9073486328125e-06, -7.832050323486328e-05, 0.0, -0.0007593631744384766, -1.1920928244535389e-07, -0.00014459784142673016, -1.8358225133852102e-05, -2.904465675354004, -9.5367431640625e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, 0.0, -1.3806781768798828, 0.0, -0.3921070098876953, 0.0, -0.008222579956054688, 0.0, -0.000191090366570279, -1.1920928244535389e-07, -0.020689714699983597, -5.55504702788312e-05, -0.7103894948959351, -0.0005791970179416239, -0.03534010425209999, -3.576278118089249e-07, -3.62396240234375e-05, -0.20018959045410156, -0.006435394287109375, -1.9073486328125e-06, -0.0025178194046020508, -2.47955322265625e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.000278472900390625, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -4.0531158447265625e-06, 0.0, 0.0, -9.5367431640625e-06, -6.258487701416016e-05, -7.152555099310121e-07, -0.0388031005859375, -0.0023059844970703125, -6.29425048828125e-05, -0.0033721923828125, -0.0001354217529296875, -0.0024547576904296875, -0.0001010894775390625, -0.0002498626708984375, -5.340576171875e-05, -2.09808349609375e-05, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -0.00011992429062956944, -5.7220458984375e-05, -0.000896453857421875, 0.0, -1.52587890625e-05, -0.0001697540283203125, -0.0034284591674804688, -1.9073486328125e-05, -6.878354179207236e-05, 0.0, -0.009794235229492188, -0.0003833770751953125, -0.00144195556640625, -1.9073486328125e-06, -7.05718994140625e-05, -1.9073486328125e-06, -0.00045234343269839883, -2.503394853192731e-06, -1.9073486328125e-06, -0.0008993148803710938, -2.47955322265625e-05, -2.288818359375e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0003495216369628906, 0.0, -0.00043141841888427734, -2.3841855067985307e-07, -0.00016603665426373482, -2.622604142743512e-06, -4.57763671875e-05, -0.017978668212890625, -7.2479248046875e-05, -0.00081634521484375, -9.34600830078125e-05], "choice_history": [93, 145, 230, 101, 125, "Cleave", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Cleave", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "minions", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "minions", "<EOS>", 216, 82, 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 213, 8, 216, 69, 109]}, {"inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -6.047833259831393, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Cleave", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Template12"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "minions", "_type": "Name"}]}, {"target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "minions", "_type": "Name"}], "_type": "Call"}, "targets": [{"_type": "Template30"}]}, {"_type": "Expr", "value": {"func": {"attr": "remove", "_type": "Attribute", "value": {"id": "minions", "_type": "Name"}}, "args": [{"_type": "Template30"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Template31"}, {"_type": "Template12"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template12"}], "ops": [{"_type": "GtE"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.9073486328125e-06, -0.0002002716064453125, -5.7220458984375e-05, -5.7220458984375e-06, -8.106226232484914e-06, -2.1457672119140625e-06, -3.814697265625e-06, -0.0002536773681640625, -0.0296783447265625, -1.71661376953125e-05, 0.0, -2.861022494471399e-06, 0.0, -5.7220458984375e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -4.812305450439453, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -4.887569048150908e-06, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -7.033347174001392e-06, 0.0, -0.0013142824172973633, 0.0, -1.33514404296875e-05, -0.000171661376953125, -1.9073486328125e-06, -0.0004444122314453125, -1.9073486328125e-06, -5.91278076171875e-05, -4.57763671875e-05, -0.0009441375732421875, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.00173187255859375, 0.0, -0.00012803077697753906, -3.814697265625e-06, -0.6924393177032471, -7.271765298355604e-06, -0.0015468597412109375, 0.0, -0.08456826210021973, 0.0, 0.0, 0.0, -9.1552734375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.0265579223632812e-06, 0.0, 0.0, -1.9073486328125e-06, -1.4185905456542969e-05, -1.5497195136049413e-06, -0.0024013519287109375, -0.0001983642578125, -0.00051116943359375, -1.9073486328125e-05, -1.1444091796875e-05, -0.0006961822509765625, -0.000415802001953125, -0.0021681683138012886, -9.536697689327411e-06, -0.0003871917724609375, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.000255584716796875, -1.9073486328125e-06, -0.00042604224290698767, -1.9073486328125e-06, -0.0003495216369628906, 0.0, -8.0108642578125e-05, -8.58306884765625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0008716583251953125, -1.9073486328125e-06, -8.213520050048828e-05, 0.0, -0.0008718967437744141, -1.1920928244535389e-07, -0.00015198916662484407, -1.8477434423402883e-05, -0.06902313232421875, -3.0517578125e-05, -0.0025768280029296875, -6.67572021484375e-05, -0.004121654666960239, -2.3841855067985307e-07, -0.000461578369140625, -1.1444091796875e-05, -6.866455078125e-05, -1.9073486328125e-06, -0.0014579533599317074, -2.8371767257340252e-05, -0.000301361083984375, -0.000125885009765625, -0.0008153915405273438, -0.0024633407592773438, -0.0004444122314453125, -7.43865966796875e-05, -0.0003814697265625, -0.0013608932495117188, -0.0002288818359375, -0.0001163482666015625, -8.96453857421875e-05, -3.814697265625e-06, -0.000141143798828125, -1.71661376953125e-05, -0.0012937179999426007, 0.0, -0.0029947757720947266, 0.0, -1.52587890625e-05, -0.0022449493408203125, -0.0001125335693359375, -0.009025134146213531, -1.0728830375228426e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.0008411407470703125, -7.05718994140625e-05, 0.0, -0.003958702087402344, -2.86102294921875e-05, -0.0017336560413241386, -1.9073468138230965e-06, -0.019602332264184952, -2.3245811462402344e-05, -9.5367431640625e-06, -0.0053348541259765625, -2.47955322265625e-05, -7.62939453125e-06, -7.62939453125e-06, -0.001720428466796875, -9.5367431640625e-06, 0.0, -0.0012664794921875, -0.00027227113605476916, -1.3112959095451515e-05, -5.7220458984375e-06, -1.1444091796875e-05, -9.1552734375e-05, -1.9073486328125e-06, 0.0, -7.82012939453125e-05, -0.0001162290500360541, -1.1920928244535389e-07, -1.9073486328125e-06, -0.22096824645996094, -0.000278472900390625, -0.00074005126953125, -0.0014591217041015625, -0.002284407615661621, -0.001773834228515625, -5.7220458984375e-06, -3.814697265625e-06, -0.00012969970703125, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -8.106231689453125e-06, 0.0, 0.0, -1.9073486328125e-06, -4.899501436739229e-05, -1.5497195136049413e-06, -0.0032711029052734375, -0.001171112060546875, -5.53131103515625e-05, -0.0038604736328125, -0.00018310546875, -0.002361297607421875, -0.0002231597900390625, -0.0002384185791015625, -7.2479248046875e-05, -2.09808349609375e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -0.0001344678457826376, -5.14984130859375e-05, -0.000820159912109375, 0.0, -1.52587890625e-05, -0.0001735687255859375, -0.0037937164306640625, -1.9073486328125e-05, -6.818750262027606e-05, 0.0, -0.009510040283203125, -0.000209808349609375, -0.00127410888671875, -1.9073486328125e-06, -6.866455078125e-05, -1.9073486328125e-06, -0.00042887526797130704, -2.503394853192731e-06, -1.9073486328125e-06, -0.0009212493896484375, -2.288818359375e-05, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.00035130977630615234, 0.0, -0.00042188167572021484, -2.3841855067985307e-07, -0.0001619867980480194, -2.622604142743512e-06, -4.38690185546875e-05, -0.01746654510498047, -6.866455078125e-05, -0.0008182525634765625, -9.72747802734375e-05], "choice_history": [93, 145, 230, 101, 125, "Cleave", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Cleave", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "minions", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 103, 129, 23, 146, "i", "<EOS>", 18, 123, 23, 146, "range", "<EOS>", 217, 83, 69, 231, 98, 115, 216, 82, 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "minions", "<EOS>", "remove", "<EOS>", 216, 82, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 213, 8, 216, 69, 109]}, {"inferred_code": "minions.<UNK>(2)\n", "score": -12.57670131325721, "model_output": {"_type": "Module", "body": [{"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "minions", "_type": "Name"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.9073486328125e-06, -0.0002002716064453125, -10.244400978088379, -0.2386798858642578, -0.0001239776611328125, -0.062371253967285156, -0.011129379272460938, -0.17996978759765625, -0.3457050323486328, -0.00023651123046875, -0.22068515419960022, -1.1920928244535389e-07, -0.6455572843551636, 0.0, -0.035816192626953125, -0.5918045043945312, -1.9073486328125e-06], "choice_history": [93, 145, 230, 102, 128, 18, 123, 15, 116, 23, 146, "minions", "<EOS>", "<UNK>", "<EOS>", 216, 69, 109]}, {"inferred_code": "super().use(player, game)\n", "score": -16.627408981323242, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.71661376953125e-05, -1.9073486328125e-06, -0.0002002716064453125, -11.699776649475098, -4.927412986755371], "choice_history": [93, 145, 230, 108, 109]}, {"inferred_code": "", "score": -18.328264236450195, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.71661376953125e-05, -1.9073486328125e-06, -18.328245162963867], "choice_history": [93, 145, 228]}], "index": 19}
{"beams": [{"inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "score": -0.20596772605630775, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Consecration", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -6.103515625e-05, -2.09808349609375e-05, -0.0002498626708984375, -0.0001316070556640625, -1.8596649169921875e-05, -4.172316494077677e-06, -3.0517578125e-05, -0.0001888275146484375, -5.14984130859375e-05, -1.71661376953125e-05, 0.0, -1.81197356141638e-05, 0.0, -0.000133514404296875, -1.52587890625e-05, -6.67572021484375e-05, -0.0007991790771484375, 0.0, -0.0847320556640625, -3.0517578125e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -8.96453857421875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, 0.0, -5.841255187988281e-06, -2.0265579223632812e-06, -0.0004432201385498047, -5.7220458984375e-06, -3.4332275390625e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -8.0108642578125e-05, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00012600421905517578, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.00032210344215855, -2.253034290333744e-05, -0.00479888916015625, -0.0001888275146484375, -0.00043487548828125, -0.0007724761962890625, -0.0001354217529296875, -0.00045680999755859375, -0.0002994537353515625, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.0022486448287963867, -1.9073486328125e-06, -0.0008890628814697266, 0.0, -0.0001392364501953125, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.0002117156982421875, -5.7220458984375e-06, -0.00030517578125, 0.0, -0.0007457733154296875, 0.0, -0.000748395686969161, -2.7060508728027344e-05, -0.0001697540283203125, -0.012950897216796875, 0.0, -8.0108642578125e-05, -3.24249267578125e-05, -1.33514404296875e-05, 0.0, -0.0001430511474609375, -0.0005207881331443787, -2.1457672119140625e-06, -0.0002079010009765625, -1.71661376953125e-05, -2.288818359375e-05, -1.71661376953125e-05, 0.0, -0.0001506805419921875, -0.00031936168670654297, 0.0, -5.7220458984375e-06, -0.000408172607421875, -0.0002593994140625, -0.015773773193359375, -3.814697265625e-06, -0.000354766845703125, -0.0005855560302734375, -1.9073486328125e-06, 0.0, -0.0003376007080078125, -5.7220458984375e-06, -0.000415802001953125, -9.5367431640625e-06, -0.030129432678222656, -2.86102294921875e-05, -0.0003205537796020508, 0.0, -0.0027891346253454685, -2.0265579223632812e-06, -0.023776525631546974, -3.576272320060525e-06, -0.010922661051154137, 0.0, -2.86102294921875e-05, -0.0004749298095703125, -0.0003528594970703125, -1.1444091796875e-05, -4.00543212890625e-05, -0.0015316009521484375, -0.0010542869567871094, -1.1920928244535389e-07, -5.7220458984375e-05, -0.0007839202880859375, -0.0003337860107421875, -9.5367431640625e-06], "choice_history": [93, 145, 230, 101, 125, "Consecration", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Consecration", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -3.371052264215905, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Consecration", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -6.103515625e-05, -2.09808349609375e-05, -0.0002498626708984375, -0.0001316070556640625, -1.8596649169921875e-05, -4.172316494077677e-06, -3.0517578125e-05, -0.0001888275146484375, -5.14984130859375e-05, -1.71661376953125e-05, 0.0, -1.81197356141638e-05, 0.0, -0.000133514404296875, -1.52587890625e-05, -6.67572021484375e-05, -0.0007991790771484375, 0.0, -2.5133228302001953, -0.0002002716064453125, -1.52587890625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -6.365774606820196e-05, -2.0265579223632812e-06, -5.91278076171875e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, 0.0, -1.1563301086425781e-05, -1.9073486328125e-06, -0.0006757974624633789, -5.7220458984375e-06, -4.38690185546875e-05, -0.0001811981201171875, 0.0, -2.6702880859375e-05, 0.0, -1.71661376953125e-05, -1.1444091796875e-05, -0.0008525848388671875, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.00090789794921875, 0.0, -0.0001773834228515625, -1.9073486328125e-06, -0.018313884735107422, -5.9604644775390625e-06, -0.0016231536865234375, -1.71661376953125e-05, -8.392333984375e-05, -1.52587890625e-05, 0.0, 0.0, -0.000179290771484375, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -3.814697265625e-06, 0.0, -0.00017654895782470703, -7.152555099310121e-07, -0.8155946731567383, -9.5367431640625e-06, -0.0015869140625, -4.00543212890625e-05, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -0.011699676513671875, -4.00534991058521e-05, -2.622604142743512e-06, -3.62396240234375e-05, -0.0013475418090820312, -2.288818359375e-05, -7.62939453125e-06, 0.0, -9.918212890625e-05, -0.0004421472258400172, 0.0, -5.7220458984375e-06, -0.0011005401611328125, -6.29425048828125e-05, -1.1444091796875e-05], "choice_history": [93, 145, 230, 101, 125, "Consecration", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Consecration", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "score": -3.4456051079725327, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Consecration", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -6.103515625e-05, -2.09808349609375e-05, -0.0002498626708984375, -0.0001316070556640625, -1.8596649169921875e-05, -4.172316494077677e-06, -3.0517578125e-05, -0.0001888275146484375, -5.14984130859375e-05, -1.71661376953125e-05, 0.0, -1.81197356141638e-05, 0.0, -0.000133514404296875, -1.52587890625e-05, -6.67572021484375e-05, -0.0007991790771484375, 0.0, -2.5133228302001953, -0.0002002716064453125, -1.52587890625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -6.365774606820196e-05, -2.0265579223632812e-06, -5.91278076171875e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, 0.0, -1.1563301086425781e-05, -1.9073486328125e-06, -0.0006757974624633789, -5.7220458984375e-06, -4.38690185546875e-05, -0.0001811981201171875, 0.0, -2.6702880859375e-05, 0.0, -1.71661376953125e-05, -1.1444091796875e-05, -0.0008525848388671875, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.00090789794921875, 0.0, -0.0001773834228515625, -1.9073486328125e-06, -0.018313884735107422, -5.9604644775390625e-06, -0.0016231536865234375, -1.71661376953125e-05, -8.392333984375e-05, -1.52587890625e-05, 0.0, 0.0, -0.000179290771484375, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -3.814697265625e-06, 0.0, -0.00017654895782470703, -7.152555099310121e-07, -0.6369752883911133, -9.5367431640625e-06, -0.18634510040283203, -1.71661376953125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.015087127685546875, -6.103322812123224e-05, -3.576278118089249e-07, -4.76837158203125e-05, -0.005795478820800781, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -0.0004444122314453125, -0.0002394913899479434, 0.0, -7.62939453125e-06, -0.001010894775390625, -3.4332275390625e-05, -0.00104522705078125, -7.62939453125e-06, -0.0003795623779296875, -0.0001277923583984375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002880096435546875, -5.7220458984375e-06, -0.0004558563232421875, -1.1444091796875e-05, -0.01921367645263672, -1.1444091796875e-05, -0.0006409883499145508, 0.0, -0.0032148209866136312, -2.0265579223632812e-06, -0.019388321787118912, -5.006777428206988e-06, -0.012682996690273285, 0.0, -2.6702880859375e-05, -0.00031280517578125, -0.0002651214599609375, -1.1444091796875e-05, -4.00543212890625e-05, -0.0005893707275390625, -0.0007280110730789602, -1.1920928244535389e-07, -4.38690185546875e-05, -0.00080108642578125, -0.000270843505859375, -7.62939453125e-06], "choice_history": [93, 145, 230, 101, 125, "Consecration", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Consecration", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage.damage(player.effective_spell_damage(\n            2), self)\n", "score": -4.718727345817108, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Consecration", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -6.103515625e-05, -2.09808349609375e-05, -0.0002498626708984375, -0.0001316070556640625, -1.8596649169921875e-05, -4.172316494077677e-06, -3.0517578125e-05, -0.0001888275146484375, -5.14984130859375e-05, -1.71661376953125e-05, 0.0, -1.81197356141638e-05, 0.0, -0.000133514404296875, -1.52587890625e-05, -6.67572021484375e-05, -0.0007991790771484375, 0.0, -0.0847320556640625, -3.0517578125e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -8.96453857421875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, 0.0, -5.841255187988281e-06, -2.0265579223632812e-06, -0.0004432201385498047, -5.7220458984375e-06, -3.4332275390625e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -8.0108642578125e-05, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00012600421905517578, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.00032210344215855, -2.253034290333744e-05, -0.00479888916015625, -0.0001888275146484375, -0.00043487548828125, -0.0007724761962890625, -0.0001354217529296875, -0.00045680999755859375, -0.0002994537353515625, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.0022486448287963867, -1.9073486328125e-06, -0.0008890628814697266, 0.0, -0.0001392364501953125, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.0002117156982421875, -5.7220458984375e-06, -0.00030517578125, 0.0, -0.0007457733154296875, 0.0, -0.000748395686969161, -2.7060508728027344e-05, -0.0001697540283203125, -0.012950897216796875, 0.0, -8.0108642578125e-05, -3.24249267578125e-05, -1.33514404296875e-05, 0.0, -0.0001430511474609375, -0.0005207881331443787, -2.1457672119140625e-06, -0.0002079010009765625, -1.71661376953125e-05, -2.288818359375e-05, -1.71661376953125e-05, 0.0, -0.0001506805419921875, -0.00031936168670654297, 0.0, -5.7220458984375e-06, -0.000408172607421875, -0.0002593994140625, -0.015773773193359375, -3.814697265625e-06, -0.000354766845703125, -0.0005855560302734375, -1.9073486328125e-06, 0.0, -0.0003376007080078125, -5.7220458984375e-06, -0.000415802001953125, -9.5367431640625e-06, -3.8112878799438477, -1.52587890625e-05, -0.009766578674316406, -3.62396240234375e-05, -0.00016057491302490234, 0.0, -0.008002620190382004, -2.0265579223632812e-06, -0.01719772070646286, -1.4424220353248529e-05, -0.3292776942253113, 0.0, -0.4024379253387451, 0.0, -3.4332275390625e-05, -0.00045013427734375, -0.0001277923583984375, -4.00543212890625e-05, -5.91278076171875e-05, -0.00145721435546875, -0.004029989242553711, -1.1920928244535389e-07, -8.58306884765625e-05, -0.000675201416015625, -0.0002384185791015625, -1.33514404296875e-05], "choice_history": [93, 145, 230, 101, 125, "Consecration", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Consecration", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.damage(player.effective_spell_damage(2), self)\n", "score": -5.087649993009563, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Consecration", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -6.103515625e-05, -2.09808349609375e-05, -0.0002498626708984375, -0.0001316070556640625, -1.8596649169921875e-05, -4.172316494077677e-06, -3.0517578125e-05, -0.0001888275146484375, -5.14984130859375e-05, -1.71661376953125e-05, 0.0, -1.81197356141638e-05, 0.0, -0.000133514404296875, -1.52587890625e-05, -6.67572021484375e-05, -0.0007991790771484375, 0.0, -0.0847320556640625, -3.0517578125e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -8.96453857421875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, 0.0, -5.841255187988281e-06, -2.0265579223632812e-06, -0.0004432201385498047, -5.7220458984375e-06, -3.4332275390625e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -8.0108642578125e-05, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00012600421905517578, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.00032210344215855, -2.253034290333744e-05, -0.00479888916015625, -0.0001888275146484375, -0.00043487548828125, -0.0007724761962890625, -0.0001354217529296875, -0.00045680999755859375, -0.0002994537353515625, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.0022486448287963867, -1.9073486328125e-06, -0.0008890628814697266, 0.0, -0.0001392364501953125, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.0002117156982421875, -5.7220458984375e-06, -0.00030517578125, 0.0, -0.0007457733154296875, 0.0, -0.000748395686969161, -2.7060508728027344e-05, -0.0001697540283203125, -0.012950897216796875, 0.0, -8.0108642578125e-05, -3.24249267578125e-05, -1.33514404296875e-05, 0.0, -0.0001430511474609375, -0.0005207881331443787, -2.1457672119140625e-06, -0.0002079010009765625, -1.71661376953125e-05, -2.288818359375e-05, -1.71661376953125e-05, 0.0, -0.0001506805419921875, -0.00031936168670654297, 0.0, -5.7220458984375e-06, -0.000408172607421875, -0.0002593994140625, -4.215663909912109, -0.007328033447265625, -6.29425048828125e-05, -0.0012903213500976562, 0.0, -0.3850269317626953, -0.042172789573669434, 0.0, -6.4849853515625e-05, -0.0029344558715820312, 0.0, -8.20159912109375e-05, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -0.04916954040527344, -0.26520034670829773, -7.62939453125e-06, -0.000507354736328125, -8.96453857421875e-05, -7.62939453125e-05, -7.62939453125e-06, 0.0, -0.0004444122314453125, -0.0007941722869873047, 0.0, -1.33514404296875e-05, -0.0004558563232421875, -0.000362396240234375, -3.24249267578125e-05], "choice_history": [93, 145, 230, 101, 125, "Consecration", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Consecration", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 103, 129, 41, 15, 116, 32, "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.draw.<UNK>(2, self)\n", "score": -5.121820213149924, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Consecration", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "draw", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"_type": "Template12"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -6.103515625e-05, -2.09808349609375e-05, -0.0002498626708984375, -0.0001316070556640625, -1.8596649169921875e-05, -4.172316494077677e-06, -3.0517578125e-05, -0.0001888275146484375, -5.14984130859375e-05, -1.71661376953125e-05, 0.0, -1.81197356141638e-05, 0.0, -0.000133514404296875, -1.52587890625e-05, -6.67572021484375e-05, -0.0007991790771484375, 0.0, -0.0847320556640625, -3.0517578125e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -8.96453857421875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, 0.0, -5.841255187988281e-06, -2.0265579223632812e-06, -0.0004432201385498047, -5.7220458984375e-06, -3.4332275390625e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -8.0108642578125e-05, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00012600421905517578, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.00032210344215855, -2.253034290333744e-05, -0.00479888916015625, -0.0001888275146484375, -0.00043487548828125, -0.0007724761962890625, -0.0001354217529296875, -0.00045680999755859375, -0.0002994537353515625, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.0022486448287963867, -1.9073486328125e-06, -0.0008890628814697266, 0.0, -0.0001392364501953125, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.0002117156982421875, -5.7220458984375e-06, -0.00030517578125, 0.0, -0.0007457733154296875, 0.0, -0.000748395686969161, -2.7060508728027344e-05, -0.0001697540283203125, -0.012950897216796875, 0.0, -8.0108642578125e-05, -3.24249267578125e-05, -1.33514404296875e-05, 0.0, -0.0001430511474609375, -0.0005207881331443787, -2.1457672119140625e-06, -0.0002079010009765625, -1.71661376953125e-05, -2.288818359375e-05, -1.71661376953125e-05, 0.0, -0.0001506805419921875, -0.00031936168670654297, 0.0, -5.7220458984375e-06, -0.000408172607421875, -0.0002593994140625, -0.015773773193359375, -3.814697265625e-06, -0.000354766845703125, -0.0005855560302734375, -1.9073486328125e-06, 0.0, -0.0003376007080078125, -5.7220458984375e-06, -0.000415802001953125, -9.5367431640625e-06, -0.030129432678222656, -2.86102294921875e-05, -0.0003205537796020508, 0.0, -0.0027891346253454685, -2.0265579223632812e-06, -4.343751430511475, -1.1920928244535389e-07, -0.20027868449687958, -1.9073486328125e-06, -0.002315521240234375, -0.39586353302001953, -0.012997627258300781, -2.47955322265625e-05], "choice_history": [93, 145, 230, 101, 125, "Consecration", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Consecration", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>", "<UNK>", "<EOS>", 217, 69, 74, 109]}, {"inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "score": -5.145233710685936, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Consecration", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -6.103515625e-05, -2.09808349609375e-05, -0.0002498626708984375, -0.0001316070556640625, -1.8596649169921875e-05, -4.172316494077677e-06, -3.0517578125e-05, -0.0001888275146484375, -5.14984130859375e-05, -1.71661376953125e-05, 0.0, -1.81197356141638e-05, 0.0, -0.000133514404296875, -1.52587890625e-05, -6.67572021484375e-05, -0.0007991790771484375, 0.0, -2.5133228302001953, -0.0002002716064453125, -1.52587890625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -6.365774606820196e-05, -2.0265579223632812e-06, -5.91278076171875e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, 0.0, -1.1563301086425781e-05, -1.9073486328125e-06, -0.0006757974624633789, -5.7220458984375e-06, -4.38690185546875e-05, -0.0001811981201171875, 0.0, -2.6702880859375e-05, 0.0, -1.71661376953125e-05, -1.1444091796875e-05, -0.0008525848388671875, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.00090789794921875, 0.0, -0.0001773834228515625, -1.9073486328125e-06, -0.018313884735107422, -5.9604644775390625e-06, -0.0016231536865234375, -1.71661376953125e-05, -8.392333984375e-05, -1.52587890625e-05, 0.0, 0.0, -0.000179290771484375, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -3.814697265625e-06, 0.0, -0.00017654895782470703, -7.152555099310121e-07, -0.6369752883911133, -9.5367431640625e-06, -1.8542966842651367, -9.5367431640625e-06, -2.6702880859375e-05, -0.0010175704956054688, -9.5367431640625e-05, -0.0004863739013671875, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -0.0024132728576660156, -1.9073486328125e-06, -0.0006009340286254883, 0.0, -0.000102996826171875, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.0003566741943359375, -5.7220458984375e-06, -0.0003414154052734375, 0.0, -0.00069427490234375, 0.0, -0.0007572172326035798, -3.0875205993652344e-05, -0.0001888275146484375, -0.0140533447265625, 0.0, -0.0001659393310546875, -4.57763671875e-05, -1.33514404296875e-05, 0.0, -0.00011444091796875, -0.00045693080755881965, -2.2649765014648438e-06, -0.000213623046875, -1.52587890625e-05, -2.288818359375e-05, -1.71661376953125e-05, 0.0, -0.00016021728515625, -0.00037288665771484375, 0.0, -5.7220458984375e-06, -0.000408172607421875, -0.000274658203125, -0.011585235595703125, -3.814697265625e-06, -0.0004634857177734375, -0.000423431396484375, -1.9073486328125e-06, 0.0, -0.000347137451171875, -3.814697265625e-06, -0.0003604888916015625, -9.5367431640625e-06, -0.035729408264160156, -3.0517578125e-05, -0.0003529787063598633, 0.0, -0.002645726315677166, -2.0265579223632812e-06, -0.02405722066760063, -3.3378546504536644e-06, -0.010768306441605091, 0.0, -2.6702880859375e-05, -0.0005054473876953125, -0.00034332275390625, -1.1444091796875e-05, -4.00543212890625e-05, -0.0015239715576171875, -0.0011116266250610352, -1.1920928244535389e-07, -5.7220458984375e-05, -0.00078582763671875, -0.0003376007080078125, -9.5367431640625e-06], "choice_history": [93, 145, 230, 101, 125, "Consecration", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Consecration", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in game.other_player.hero:\n            minion.damage(player.effective_spell_damage(2), self)\n", "score": -5.951972215778817, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Consecration", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -6.103515625e-05, -2.09808349609375e-05, -0.0002498626708984375, -0.0001316070556640625, -1.8596649169921875e-05, -4.172316494077677e-06, -3.0517578125e-05, -0.0001888275146484375, -5.14984130859375e-05, -1.71661376953125e-05, 0.0, -1.81197356141638e-05, 0.0, -0.000133514404296875, -1.52587890625e-05, -6.67572021484375e-05, -0.0007991790771484375, 0.0, -0.0847320556640625, -3.0517578125e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -8.96453857421875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, 0.0, -5.841255187988281e-06, -2.0265579223632812e-06, -0.0004432201385498047, -5.7220458984375e-06, -3.4332275390625e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -8.0108642578125e-05, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00012600421905517578, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.00032210344215855, -2.253034290333744e-05, -0.00479888916015625, -0.0001888275146484375, -0.00043487548828125, -0.0007724761962890625, -0.0001354217529296875, -0.00045680999755859375, -0.0002994537353515625, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.0022486448287963867, -1.9073486328125e-06, -0.0008890628814697266, 0.0, -0.0001392364501953125, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.0002117156982421875, -5.7220458984375e-06, -0.00030517578125, 0.0, -0.0007457733154296875, 0.0, -0.000748395686969161, -2.7060508728027344e-05, -0.0001697540283203125, -0.012950897216796875, 0.0, -8.0108642578125e-05, -3.24249267578125e-05, -1.33514404296875e-05, 0.0, -0.0001430511474609375, -0.0005207881331443787, -2.1457672119140625e-06, -0.0002079010009765625, -1.71661376953125e-05, -2.288818359375e-05, -1.71661376953125e-05, 0.0, -0.0001506805419921875, -0.00031936168670654297, 0.0, -5.7220458984375e-06, -0.000408172607421875, -0.0002593994140625, -4.215663909912109, -0.007328033447265625, -6.29425048828125e-05, -0.0012903213500976562, 0.0, -1.1830730438232422, -9.5367431640625e-06, -0.001605987548828125, -7.62939453125e-06, -0.0020732879638671875, 0.0, -0.015032529830932617, 0.0, -0.13724678754806519, -1.1920928244535389e-07, -0.0010595321655273438, -0.028833389282226562, -1.9073486328125e-06, -0.0008068084716796875, -2.288818359375e-05, -3.814697265625e-06, 0.0, -0.12116336822509766, -0.11867279559373856, -1.9073486328125e-06, -0.00025177001953125, -7.2479248046875e-05, -4.76837158203125e-05, -9.5367431640625e-06, 0.0, -0.0002880096435546875, -0.0006307363510131836, 0.0, -1.1444091796875e-05, -0.0004730224609375, -0.000362396240234375, -3.62396240234375e-05], "choice_history": [93, 145, 230, 101, 125, "Consecration", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Consecration", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 103, 129, 41, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage.<UNK>(2, self)\n", "score": -6.028725738875892, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Consecration", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}}, "args": [{"_type": "Template12"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -6.103515625e-05, -2.09808349609375e-05, -0.0002498626708984375, -0.0001316070556640625, -1.8596649169921875e-05, -4.172316494077677e-06, -3.0517578125e-05, -0.0001888275146484375, -5.14984130859375e-05, -1.71661376953125e-05, 0.0, -1.81197356141638e-05, 0.0, -0.000133514404296875, -1.52587890625e-05, -6.67572021484375e-05, -0.0007991790771484375, 0.0, -0.0847320556640625, -3.0517578125e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -8.96453857421875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, 0.0, -5.841255187988281e-06, -2.0265579223632812e-06, -0.0004432201385498047, -5.7220458984375e-06, -3.4332275390625e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -8.0108642578125e-05, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00012600421905517578, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.00032210344215855, -2.253034290333744e-05, -0.00479888916015625, -0.0001888275146484375, -0.00043487548828125, -0.0007724761962890625, -0.0001354217529296875, -0.00045680999755859375, -0.0002994537353515625, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.0022486448287963867, -1.9073486328125e-06, -0.0008890628814697266, 0.0, -0.0001392364501953125, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.0002117156982421875, -5.7220458984375e-06, -0.00030517578125, 0.0, -0.0007457733154296875, 0.0, -0.000748395686969161, -2.7060508728027344e-05, -0.0001697540283203125, -0.012950897216796875, 0.0, -8.0108642578125e-05, -3.24249267578125e-05, -1.33514404296875e-05, 0.0, -0.0001430511474609375, -0.0005207881331443787, -2.1457672119140625e-06, -0.0002079010009765625, -1.71661376953125e-05, -2.288818359375e-05, -1.71661376953125e-05, 0.0, -0.0001506805419921875, -0.00031936168670654297, 0.0, -5.7220458984375e-06, -0.000408172607421875, -0.0002593994140625, -0.015773773193359375, -3.814697265625e-06, -0.000354766845703125, -0.0005855560302734375, -1.9073486328125e-06, 0.0, -0.0003376007080078125, -5.7220458984375e-06, -0.000415802001953125, -9.5367431640625e-06, -3.8112878799438477, -1.52587890625e-05, -0.009766578674316406, -3.62396240234375e-05, -0.00016057491302490234, 0.0, -0.008002620190382004, -2.0265579223632812e-06, -0.01719772070646286, -1.4424220353248529e-05, -0.3292776942253113, 0.0, -1.5729374885559082, -1.9073486328125e-06, -0.0001430511474609375, -0.1415700912475586, -0.00496673583984375, -2.86102294921875e-05], "choice_history": [93, 145, 230, 101, 125, "Consecration", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Consecration", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", "<UNK>", "<EOS>", 217, 69, 74, 109]}, {"inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.<UNK>(2, self)\n", "score": -6.24163622768674, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Consecration", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"_type": "Template12"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -6.103515625e-05, -2.09808349609375e-05, -0.0002498626708984375, -0.0001316070556640625, -1.8596649169921875e-05, -4.172316494077677e-06, -3.0517578125e-05, -0.0001888275146484375, -5.14984130859375e-05, -1.71661376953125e-05, 0.0, -1.81197356141638e-05, 0.0, -0.000133514404296875, -1.52587890625e-05, -6.67572021484375e-05, -0.0007991790771484375, 0.0, -0.0847320556640625, -3.0517578125e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -8.96453857421875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, 0.0, -5.841255187988281e-06, -2.0265579223632812e-06, -0.0004432201385498047, -5.7220458984375e-06, -3.4332275390625e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -8.0108642578125e-05, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00012600421905517578, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.00032210344215855, -2.253034290333744e-05, -0.00479888916015625, -0.0001888275146484375, -0.00043487548828125, -0.0007724761962890625, -0.0001354217529296875, -0.00045680999755859375, -0.0002994537353515625, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.0022486448287963867, -1.9073486328125e-06, -0.0008890628814697266, 0.0, -0.0001392364501953125, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.0002117156982421875, -5.7220458984375e-06, -0.00030517578125, 0.0, -0.0007457733154296875, 0.0, -0.000748395686969161, -2.7060508728027344e-05, -0.0001697540283203125, -0.012950897216796875, 0.0, -8.0108642578125e-05, -3.24249267578125e-05, -1.33514404296875e-05, 0.0, -0.0001430511474609375, -0.0005207881331443787, -2.1457672119140625e-06, -0.0002079010009765625, -1.71661376953125e-05, -2.288818359375e-05, -1.71661376953125e-05, 0.0, -0.0001506805419921875, -0.00031936168670654297, 0.0, -5.7220458984375e-06, -0.000408172607421875, -0.0002593994140625, -0.015773773193359375, -3.814697265625e-06, -0.000354766845703125, -0.0005855560302734375, -1.9073486328125e-06, 0.0, -0.0003376007080078125, -5.7220458984375e-06, -0.000415802001953125, -9.5367431640625e-06, -0.030129432678222656, -2.86102294921875e-05, -0.0003205537796020508, 0.0, -0.0027891346253454685, -2.0265579223632812e-06, -0.023776525631546974, -3.576272320060525e-06, -5.307651519775391, -1.9073486328125e-06, -0.012731552124023438, -0.7213172912597656, -0.0095367431640625, -3.0517578125e-05], "choice_history": [93, 145, 230, 101, 125, "Consecration", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Consecration", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "<UNK>", "<EOS>", 217, 69, 74, 109]}, {"inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            if minion.card.minion_type > 0:\n                minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "score": -6.389368431269126, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Consecration", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "If", "test": {"left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"_type": "Template30"}}}, "_type": "Compare", "comparators": [{"_type": "Template31"}], "ops": [{"_type": "Gt"}]}, "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -6.103515625e-05, -2.09808349609375e-05, -0.0002498626708984375, -0.0001316070556640625, -1.8596649169921875e-05, -4.172316494077677e-06, -3.0517578125e-05, -0.0001888275146484375, -5.14984130859375e-05, -1.71661376953125e-05, 0.0, -1.81197356141638e-05, 0.0, -0.000133514404296875, -1.52587890625e-05, -6.67572021484375e-05, -0.0007991790771484375, 0.0, -0.0847320556640625, -3.0517578125e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -8.96453857421875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, 0.0, -5.841255187988281e-06, -2.0265579223632812e-06, -0.0004432201385498047, -5.7220458984375e-06, -3.4332275390625e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -8.0108642578125e-05, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00012600421905517578, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.00032210344215855, -2.253034290333744e-05, -0.00479888916015625, -0.0001888275146484375, -0.00043487548828125, -0.0007724761962890625, -0.0001354217529296875, -0.00045680999755859375, -0.0002994537353515625, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.0022486448287963867, -1.9073486328125e-06, -0.0008890628814697266, 0.0, -0.0001392364501953125, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.0002117156982421875, -5.7220458984375e-06, -0.00030517578125, 0.0, -0.0007457733154296875, 0.0, -0.000748395686969161, -2.7060508728027344e-05, -0.0001697540283203125, -4.417562484741211, -0.11295223236083984, -0.014838218688964844, -0.00019073486328125, -0.07979965209960938, -2.86102294921875e-05, -0.0003910064697265625, 0.0, -0.06247711181640625, -0.029877103865146637, -3.576278118089249e-07, -0.006982563994824886, -4.768370445162873e-07, -3.0517578125e-05, -0.17515182495117188, -3.814697265625e-06, -1.2966136932373047, -0.0004024505615234375, -0.0030193328857421875, -0.0045375823974609375, -1.9073486328125e-06, -6.866455078125e-05, -2.288818359375e-05, 0.0, -0.00099945068359375, -0.000637841469142586, -1.9073468138230965e-06, -0.0001239776611328125, -2.09808349609375e-05, -2.288818359375e-05, -1.1444091796875e-05, 0.0, -4.57763671875e-05, -0.00038433074951171875, -1.9073486328125e-06, -7.62939453125e-06, -0.0012187957763671875, -0.0001125335693359375, -0.013271331787109375, -3.814697265625e-06, -0.0003032684326171875, -0.0003604888916015625, -1.9073486328125e-06, 0.0, -0.000476837158203125, -1.1444091796875e-05, -0.000518798828125, -1.71661376953125e-05, -0.034515380859375, -2.86102294921875e-05, -0.00022721290588378906, 0.0, -0.0027111636009067297, -2.1457672119140625e-06, -0.018965866416692734, -9.417489309271332e-06, -0.006513372529298067, 0.0, -2.86102294921875e-05, -0.00023651123046875, -0.000133514404296875, -1.33514404296875e-05, -5.340576171875e-05, -0.00031280517578125, -0.0002704858488868922, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0009174346923828125, -0.00019073486328125, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Consecration", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Consecration", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 105, 133, 19, 126, 15, 116, 15, 116, 41, "card", "<EOS>", "minion_type", "<EOS>", 213, 7, 216, 83, 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n", "score": -6.7860879213480985, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Consecration", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -6.103515625e-05, -2.09808349609375e-05, -0.0002498626708984375, -0.0001316070556640625, -1.8596649169921875e-05, -4.172316494077677e-06, -3.0517578125e-05, -0.0001888275146484375, -5.14984130859375e-05, -1.71661376953125e-05, 0.0, -1.81197356141638e-05, 0.0, -0.000133514404296875, -1.52587890625e-05, -6.67572021484375e-05, -0.0007991790771484375, 0.0, -0.0847320556640625, -3.0517578125e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -8.96453857421875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, 0.0, -5.841255187988281e-06, -2.0265579223632812e-06, -0.0004432201385498047, -5.7220458984375e-06, -3.4332275390625e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -8.0108642578125e-05, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00012600421905517578, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.00032210344215855, -2.253034290333744e-05, -6.607194900512695, -0.0001621246337890625, -0.02929401397705078, -2.86102294921875e-05, -0.023548126220703125, -0.006275177001953125, -0.0004673004150390625, -0.00067901611328125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.005327939987182617, 0.0, -0.001871347427368164, 0.0, -0.000152587890625, -3.24249267578125e-05, 0.0, -3.814697265625e-06, 0.0, -0.0001678466796875, -5.7220458984375e-06, -0.000316619873046875, 0.0, -0.000736236572265625, 0.0, -0.0007945296238176525, -2.8967857360839844e-05, -0.0010738372802734375, -0.017691612243652344, 0.0, -0.0001049041748046875, -3.62396240234375e-05, -1.33514404296875e-05, 0.0, -0.000133514404296875, -0.0005701102199964225, -2.1457672119140625e-06, -0.0002040863037109375, -1.52587890625e-05, -2.09808349609375e-05, -1.52587890625e-05, 0.0, -0.000141143798828125, -0.00032329559326171875, 0.0, -5.7220458984375e-06, -0.00042724609375, -0.0002651214599609375, -2.6702880859375e-05], "choice_history": [93, 145, 230, 101, 125, "Consecration", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Consecration", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN, CARD_RARITY.\n    COMMON, False)\n", "score": -11.593481421470642, "model_output": {"_type": "Module", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call"}}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -6.103515625e-05, -2.09808349609375e-05, -9.66436767578125, -0.2347126007080078, -6.67572021484375e-05, -0.005710601806640625, -1.5597467422485352, -0.05760002136230469, -0.013674736022949219, -4.38690185546875e-05, -0.04441690444946289, -0.0001239776611328125, -0.00051116943359375, -0.002964019775390625, 0.0, -2.47955322265625e-05, 0.0, -0.0003604888916015625, 0.0, -0.0087050199508667, 0.0, -0.000164031982421875, -0.0001468658447265625, -5.340576171875e-05], "choice_history": [93, 145, 230, 102, 128, 18, 123, 50, 220, 66, 155, "Consecration", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 80, 109]}, {"inferred_code": "super().use(player, game)\n", "score": -13.919293403625488, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -6.103515625e-05, -2.09808349609375e-05, -10.998817443847656, -2.9203882217407227], "choice_history": [93, 145, 230, 108, 109]}, {"inferred_code": "", "score": -20.120731353759766, "model_output": {"_type": "Module", "body": []}, "score_history": [-5.7220458984375e-06, -6.103515625e-05, -20.120664596557617], "choice_history": [93, 145, 228]}], "index": 20}
{"beams": [{"inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "score": -0.007007552495451819, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "CoreHound", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Template24"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 9, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004789874074049294, -4.851709309150465e-05, -1.311301275563892e-06, -5.7220458984375e-06, -3.814697265625e-05, -1.52587890625e-05, 0.0, -8.96453857421875e-05, -2.1457672119140625e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001201629638671875, -3.814697265625e-06, -5.340576171875e-05, -0.0009593963623046875, 0.0, -0.000110626220703125, -5.7220458984375e-06, -9.5367431640625e-06, -1.2993727978027891e-05, -6.735257193213329e-05, -3.6954863844584906e-06, -1.9073486328125e-06, -0.0006046295166015625, -9.34600830078125e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -2.682209014892578e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.0013314485549926758, 0.0, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -3.24249267578125e-05, -2.6702880859375e-05, -0.000186920166015625, 0.0, -7.62939453125e-06, -0.0001354217529296875, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.91278076171875e-05, -4.57763671875e-05, -0.0009980914182960987, -7.152555099310121e-07, -0.0012437094701454043, -1.311301275563892e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Core", "Hound", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Core", " ", "Hound", "<EOS>", 79, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "9", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 9)\n", "score": -6.733827783993547, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "CoreHound", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Template24"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 9, "hole0": 9, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004789874074049294, -4.851709309150465e-05, -1.311301275563892e-06, -5.7220458984375e-06, -3.814697265625e-05, -1.52587890625e-05, 0.0, -8.96453857421875e-05, -2.1457672119140625e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001201629638671875, -3.814697265625e-06, -5.340576171875e-05, -0.0009593963623046875, 0.0, -0.000110626220703125, -5.7220458984375e-06, -9.5367431640625e-06, -1.2993727978027891e-05, -6.735257193213329e-05, -3.6954863844584906e-06, -1.9073486328125e-06, -0.0006046295166015625, -9.34600830078125e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -2.682209014892578e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.0013314485549926758, 0.0, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -3.24249267578125e-05, -2.6702880859375e-05, -0.000186920166015625, 0.0, -7.62939453125e-06, -0.0001354217529296875, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.91278076171875e-05, -4.57763671875e-05, -0.0009980914182960987, -7.152555099310121e-07, -6.728056907653809, -8.34461570775602e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Core", "Hound", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Core", " ", "Hound", "<EOS>", 79, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "9", "<EOS>", "9", "<EOS>", 109]}, {"inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "score": -7.024500026436385, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "CoreHound", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Template24"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 9, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004789874074049294, -4.851709309150465e-05, -1.311301275563892e-06, -5.7220458984375e-06, -3.814697265625e-05, -1.52587890625e-05, 0.0, -8.96453857421875e-05, -2.1457672119140625e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001201629638671875, -3.814697265625e-06, -5.340576171875e-05, -6.991472244262695, -9.5367431640625e-06, -0.000736236572265625, -7.62939453125e-06, -2.47955322265625e-05, -1.6331539882230572e-05, -6.961713370401412e-05, -3.8146954466355965e-06, -2.0265579223632812e-06, -0.0005779266357421875, -9.918212890625e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -0.000423431396484375, -1.1444091796875e-05, -1.33514404296875e-05, -0.0001163482666015625, -8.96453857421875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -9.655952453613281e-06, -5.7220458984375e-06, 0.0, -0.0005035400390625, -4.00543212890625e-05, -0.0009439203422516584, -2.264974000354414e-06, -0.028377285227179527, -1.0728830375228426e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Core", "Hound", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Core", " ", "Hound", "<EOS>", 79, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "9", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(5, 5)\n", "score": -7.287739398486224, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "CoreHound", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Template24"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 5, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004789874074049294, -4.851709309150465e-05, -1.311301275563892e-06, -5.7220458984375e-06, -3.814697265625e-05, -1.52587890625e-05, 0.0, -8.96453857421875e-05, -2.1457672119140625e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001201629638671875, -3.814697265625e-06, -5.340576171875e-05, -0.0009593963623046875, 0.0, -0.000110626220703125, -5.7220458984375e-06, -9.5367431640625e-06, -1.2993727978027891e-05, -6.735257193213329e-05, -3.6954863844584906e-06, -1.9073486328125e-06, -0.0006046295166015625, -9.34600830078125e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -2.682209014892578e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.0013314485549926758, 0.0, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -3.24249267578125e-05, -2.6702880859375e-05, -0.000186920166015625, 0.0, -7.62939453125e-06, -0.0001354217529296875, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.91278076171875e-05, -4.57763671875e-05, -7.281422138214111, -1.5497195136049413e-06, -0.0015486476477235556, -3.3378546504536644e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Core", "Hound", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Core", " ", "Hound", "<EOS>", 79, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "5", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class <UNK>Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "score": -7.650997439838392, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "<UNK>Hound", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Template24"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 9, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.6441779136657715, -0.0002315968304174021, -2.3841855067985307e-07, -1.9073486328125e-06, -5.340576171875e-05, -1.52587890625e-05, 0.0, -0.0001735687255859375, -4.0531158447265625e-06, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001010894775390625, -3.814697265625e-06, -4.76837158203125e-05, -0.0010128021240234375, 0.0, -6.29425048828125e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.3351351299206726e-05, -6.806779856560752e-05, -3.8146954466355965e-06, -1.9073486328125e-06, -0.0006160736083984375, -8.96453857421875e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -2.682209014892578e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.0013295412063598633, 0.0, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -3.814697265625e-06, -3.814697265625e-05, -2.86102294921875e-05, -0.000186920166015625, 0.0, -7.62939453125e-06, -0.00012969970703125, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -6.103515625e-05, -4.57763671875e-05, -0.001001426368020475, -7.152555099310121e-07, -0.0012565839570015669, -1.311301275563892e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Hound", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Core", " ", "Hound", "<EOS>", 79, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "9", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 9, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "score": -7.73601034546391, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "CoreHound", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Num", "n": 9}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 9, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004789874074049294, -4.851709309150465e-05, -1.311301275563892e-06, -5.7220458984375e-06, -3.814697265625e-05, -1.52587890625e-05, 0.0, -8.96453857421875e-05, -2.1457672119140625e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001201629638671875, -3.814697265625e-06, -5.340576171875e-05, -0.0009593963623046875, 0.0, -0.000110626220703125, -5.7220458984375e-06, -9.5367431640625e-06, -1.2993727978027891e-05, -6.735257193213329e-05, -3.6954863844584906e-06, -1.9073486328125e-06, -7.609560966491699, -3.24249267578125e-05, -0.0018243228551000357, -2.8371459848131053e-05, -0.11529254913330078, -0.002819061279296875, -0.000339508056640625, 0.0, -5.364418029785156e-05, -7.867813110351562e-06, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -0.0011540651321411133, -1.9073486328125e-06, 0.0, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -4.1961669921875e-05, -4.00543212890625e-05, -0.0001697540283203125, 0.0, -7.62939453125e-06, -0.0001316070556640625, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.91278076171875e-05, -4.38690185546875e-05, -0.0009147800737991929, -7.152555099310121e-07, -0.0012867441400885582, -1.311301275563892e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Core", "Hound", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Core", " ", "Hound", "<EOS>", 65, 151, "9", "<EOS>", 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "9", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "score": -8.089152882409394, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "CoreHound", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Template24"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 9, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004789874074049294, -4.851709309150465e-05, -1.311301275563892e-06, -5.7220458984375e-06, -3.814697265625e-05, -1.52587890625e-05, 0.0, -8.96453857421875e-05, -2.1457672119140625e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001201629638671875, -3.814697265625e-06, -5.340576171875e-05, -0.0009593963623046875, 0.0, -0.000110626220703125, -5.7220458984375e-06, -9.5367431640625e-06, -1.2993727978027891e-05, -6.735257193213329e-05, -3.6954863844584906e-06, -1.9073486328125e-06, -0.0006046295166015625, -9.34600830078125e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -2.682209014892578e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -8.083576202392578, 0.0, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -0.0001697540283203125, 0.0, -7.62939453125e-06, -0.00011444091796875, -9.5367431640625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -6.103515625e-05, -5.14984130859375e-05, -0.001051493571139872, -7.152555099310121e-07, -0.0011670581297948956, -1.4305104514278355e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Core", "Hound", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Core", " ", "Hound", "<EOS>", 79, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "9", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.HUNTER)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "score": -8.372014504925573, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "CoreHound", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Template24"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 9, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004789874074049294, -4.851709309150465e-05, -1.311301275563892e-06, -5.7220458984375e-06, -3.814697265625e-05, -1.52587890625e-05, 0.0, -8.96453857421875e-05, -2.1457672119140625e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001201629638671875, -3.814697265625e-06, -5.340576171875e-05, -0.0009593963623046875, 0.0, -0.000110626220703125, -5.7220458984375e-06, -9.5367431640625e-06, -1.2993727978027891e-05, -6.735257193213329e-05, -3.6954863844584906e-06, -1.9073486328125e-06, -0.0006046295166015625, -9.34600830078125e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -2.682209014892578e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -8.366473197937012, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.0001392364501953125, 0.0, -7.62939453125e-06, -0.000133514404296875, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -5.7220458984375e-05, -4.00543212890625e-05, -0.0009565157815814018, -7.152555099310121e-07, -0.0012305967975407839, -1.311301275563892e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Core", "Hound", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Core", " ", "Hound", "<EOS>", 79, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "HUNTER", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "9", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.create_minion)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "score": -8.410191395621041, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "CoreHound", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Template24"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "create_minion", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 9, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004789874074049294, -4.851709309150465e-05, -1.311301275563892e-06, -5.7220458984375e-06, -3.814697265625e-05, -1.52587890625e-05, 0.0, -8.96453857421875e-05, -2.1457672119140625e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001201629638671875, -3.814697265625e-06, -5.340576171875e-05, -0.0009593963623046875, 0.0, -0.000110626220703125, -5.7220458984375e-06, -9.5367431640625e-06, -1.2993727978027891e-05, -6.735257193213329e-05, -3.6954863844584906e-06, -1.9073486328125e-06, -0.0006046295166015625, -9.34600830078125e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -2.682209014892578e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -8.404632568359375, 0.0, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.71661376953125e-05, -0.000148773193359375, 0.0, -9.5367431640625e-06, -0.0001316070556640625, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -5.91278076171875e-05, -4.00543212890625e-05, -0.000977254705503583, -7.152555099310121e-07, -0.0012331001926213503, -1.311301275563892e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Core", "Hound", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Core", " ", "Hound", "<EOS>", 79, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "create_minion", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "9", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -8.577923314013105, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "CoreHound", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Template24"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 4, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004789874074049294, -4.851709309150465e-05, -1.311301275563892e-06, -5.7220458984375e-06, -3.814697265625e-05, -1.52587890625e-05, 0.0, -8.96453857421875e-05, -2.1457672119140625e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001201629638671875, -3.814697265625e-06, -5.340576171875e-05, -0.0009593963623046875, 0.0, -0.000110626220703125, -5.7220458984375e-06, -9.5367431640625e-06, -1.2993727978027891e-05, -6.735257193213329e-05, -3.6954863844584906e-06, -1.9073486328125e-06, -0.0006046295166015625, -9.34600830078125e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -2.682209014892578e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.0013314485549926758, 0.0, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -3.24249267578125e-05, -2.6702880859375e-05, -0.000186920166015625, 0.0, -7.62939453125e-06, -0.0001354217529296875, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.91278076171875e-05, -4.57763671875e-05, -8.569765090942383, -2.145764938177308e-06, -0.003390683326870203, -1.6689286894688848e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Core", "Hound", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Core", " ", "Hound", "<EOS>", 79, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "4", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score": -9.097487929113242, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "CoreHound", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Template24"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004789874074049294, -4.851709309150465e-05, -1.311301275563892e-06, -5.7220458984375e-06, -3.814697265625e-05, -1.52587890625e-05, 0.0, -8.96453857421875e-05, -2.1457672119140625e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001201629638671875, -3.814697265625e-06, -5.340576171875e-05, -0.0009593963623046875, 0.0, -0.000110626220703125, -5.7220458984375e-06, -9.5367431640625e-06, -1.2993727978027891e-05, -6.735257193213329e-05, -3.6954863844584906e-06, -1.9073486328125e-06, -0.0006046295166015625, -9.34600830078125e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -2.682209014892578e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.0013314485549926758, 0.0, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -3.24249267578125e-05, -2.6702880859375e-05, -0.000186920166015625, 0.0, -7.62939453125e-06, -0.0001354217529296875, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.91278076171875e-05, -4.57763671875e-05, -9.091476440429688, -3.576278118089249e-07, -0.0012465715408325195, -8.344646857949556e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Core", "Hound", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Core", " ", "Hound", "<EOS>", 79, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.taunt)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "score": -9.170547929078566, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "CoreHound", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Template24"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "taunt", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 9, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004789874074049294, -4.851709309150465e-05, -1.311301275563892e-06, -5.7220458984375e-06, -3.814697265625e-05, -1.52587890625e-05, 0.0, -8.96453857421875e-05, -2.1457672119140625e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001201629638671875, -3.814697265625e-06, -5.340576171875e-05, -0.0009593963623046875, 0.0, -0.000110626220703125, -5.7220458984375e-06, -9.5367431640625e-06, -1.2993727978027891e-05, -6.735257193213329e-05, -3.6954863844584906e-06, -1.9073486328125e-06, -0.0006046295166015625, -9.34600830078125e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -2.682209014892578e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -9.164981842041016, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -1.52587890625e-05, -0.0001583099365234375, 0.0, -7.62939453125e-06, -0.0001201629638671875, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -6.103515625e-05, -4.38690185546875e-05, -0.0010139591759070754, -7.152555099310121e-07, -0.0012093775440007448, -1.311301275563892e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Core", "Hound", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Core", " ", "Hound", "<EOS>", 79, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "taunt", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "9", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "score": -9.367976231723219, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "CoreHound", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Template24"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 9, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004789874074049294, -4.851709309150465e-05, -1.311301275563892e-06, -5.7220458984375e-06, -3.814697265625e-05, -1.52587890625e-05, 0.0, -8.96453857421875e-05, -2.1457672119140625e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001201629638671875, -3.814697265625e-06, -5.340576171875e-05, -0.0009593963623046875, 0.0, -9.319700241088867, -2.09808349609375e-05, -5.7220458984375e-06, -2.1576855942839757e-05, -5.769706331193447e-05, -9.059905096364673e-06, -1.33514404296875e-05, -0.039981842041015625, -0.001117706298828125, -2.288818359375e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.445148468017578e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0013676881790161133, 0.0, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.58306884765625e-05, -0.000179290771484375, 0.0, -9.5367431640625e-06, -0.0003757476806640625, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.38690185546875e-05, -5.14984130859375e-05, -0.0012336182408034801, -1.1920922133867862e-06, -0.0016744130989536643, -8.344646857949556e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Core", "Hound", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Core", " ", "Hound", "<EOS>", 79, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "9", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "", "score": -19.10519027709961, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, 0.0, -19.10519027709961], "choice_history": [93, 145, 228]}, {"inferred_code": "", "score": -23.19968891143799, "model_output": {"_type": "Module", "body": [{"_type": "Template13_stmt_seq"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -2.288818359375e-05, -16.67984962463379, -6.5198163986206055], "choice_history": [93, 145, 230, 109, 109]}], "index": 21}
{"beams": [{"inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n", "score": -1.1338026652556152, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Corruption", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template14"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "add_effect", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"_type": "Template33"}, "args": [{"func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "player"}]}, {"func": {"_type": "Template32"}, "args": [{"hole0": "Kill", "_type": "Template5"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, 0.0, -1.33514404296875e-05, -2.288818359375e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.0503957784967497e-05, -1.9073486328125e-06, -0.0001087188720703125, -0.060112953186035156, -3.4332275390625e-05, -1.9073486328125e-06, -7.748603820800781e-06, -7.62939453125e-06, -7.62939453125e-06, -2.86102294921875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.000110626220703125, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.4305012882687151e-05, -5.7220458984375e-06, -7.62939453125e-05, -3.0517578125e-05, 0.0, 0.0, 0.0, -9.5367431640625e-06, 0.0, -0.00020647048950195312, -1.9073486328125e-06, -9.34600830078125e-05, -0.003772735595703125, -1.9073486328125e-06, -0.0007410049438476562, -7.62939453125e-06, -9.5367431640625e-06, -2.6702880859375e-05, -5.53131103515625e-05, -3.62396240234375e-05, -5.7220458984375e-05, 0.0, -0.0003147125244140625, -1.9073486328125e-06, -0.00029206275939941406, -2.86102294921875e-05, -0.010154008865356445, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.43865966796875e-05, 0.0, -0.000244140625, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.9383630752563477, -3.814697265625e-06, -0.00421142578125, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -8.0108642578125e-05, -0.060839176177978516, -7.62939453125e-06, -0.002635955810546875, -0.0001163482666015625, -0.0006275177001953125, -0.0020704269409179688, -2.288818359375e-05, -0.00061798095703125, -0.001399993896484375, -0.00046825408935546875, -0.000568389892578125, -0.0015337467193603516, -0.007883071899414062, 0.0, -0.000102996826171875, -0.0012340545654296875, -0.0009622573852539062, 0.0, -0.0001678466796875, -7.62939453125e-06, -0.008839130401611328, -0.0009069442749023438, 0.0, -1.71661376953125e-05, -1.9073486328125e-05, -0.0003681182861328125, -6.67572021484375e-05, -0.0017452239990234375, -8.96453857421875e-05, -0.012156380340456963, -1.5497207641601562e-05, -0.0084075927734375, -5.7220458984375e-06, -0.0003070831298828125, -7.62939453125e-06, 0.0, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Corruption", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Corruption", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "add_effect", "<EOS>", 216, 58, 123, 44, 217, 58, 122, 23, 146, "Turn", "Started", "<EOS>", 224, 205, "player", "<EOS>", 51, 193, "Enemy", "Player", "<EOS>", 58, 123, 43, 217, 87, 193, "Kill", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 109]}, {"inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n        self.target.change_attack(4)\n", "score": -1.5114669966023655, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Corruption", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template14"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "add_effect", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"_type": "Template33"}, "args": [{"func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "player"}]}, {"func": {"_type": "Template32"}, "args": [{"hole0": "Kill", "_type": "Template5"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, 0.0, -1.33514404296875e-05, -2.288818359375e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.0503957784967497e-05, -1.9073486328125e-06, -0.0001087188720703125, -0.060112953186035156, -3.4332275390625e-05, -1.9073486328125e-06, -7.748603820800781e-06, -7.62939453125e-06, -7.62939453125e-06, -2.86102294921875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.000110626220703125, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.4305012882687151e-05, -5.7220458984375e-06, -7.62939453125e-05, -3.0517578125e-05, 0.0, 0.0, 0.0, -9.5367431640625e-06, 0.0, -0.00020647048950195312, -1.9073486328125e-06, -9.34600830078125e-05, -0.003772735595703125, -1.9073486328125e-06, -0.0007410049438476562, -7.62939453125e-06, -9.5367431640625e-06, -2.6702880859375e-05, -5.53131103515625e-05, -3.62396240234375e-05, -5.7220458984375e-05, 0.0, -0.0003147125244140625, -1.9073486328125e-06, -0.00029206275939941406, -2.86102294921875e-05, -0.010154008865356445, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.43865966796875e-05, 0.0, -0.000244140625, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.5068883895874023, -1.52587890625e-05, -0.28470802307128906, 0.0, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.000247955322265625, -0.05280196666717529, -1.9073486328125e-06, -0.0023136138916015625, -0.0001049041748046875, -0.0007419586181640625, -0.0020780563354492188, -2.47955322265625e-05, -0.0002994537353515625, -0.001773834228515625, -0.0004634857177734375, -0.000514984130859375, -0.001848459243774414, -0.0075168609619140625, 0.0, -0.0001125335693359375, -0.001476287841796875, -0.001010894775390625, 0.0, -0.000194549560546875, -7.62939453125e-06, -0.006815433502197266, -0.0008697509765625, 0.0, -1.71661376953125e-05, -2.09808349609375e-05, -0.0004291534423828125, -7.2479248046875e-05, -0.0015773773193359375, -8.392333984375e-05, -0.01190747506916523, -1.5497207641601562e-05, -0.00829315185546875, -5.7220458984375e-06, -0.00029754638671875, -7.62939453125e-06, 0.0, -0.0008296966552734375, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0074443817138671875, -0.42839181423187256, -1.9073486328125e-06, -1.9073486328125e-06, -0.102294921875, -2.47955322265625e-05], "choice_history": [93, 145, 230, 101, 125, "Corruption", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Corruption", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "add_effect", "<EOS>", 216, 58, 123, 44, 217, 58, 122, 23, 146, "Turn", "Started", "<EOS>", 224, 205, "player", "<EOS>", 51, 193, "Enemy", "Player", "<EOS>", 58, 123, 43, 217, 87, 193, "Kill", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 76, 109]}, {"inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n", "score": -2.217699078701088, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Corruption", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template14"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "add_effect", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"_type": "Template33"}, "args": [{"func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "player"}]}, {"func": {"_type": "Template32"}, "args": [{"hole0": "Kill", "_type": "Template5"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "add_effect", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"_type": "Template33"}, "args": [{"func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "player"}]}, {"func": {"_type": "Template32"}, "args": [{"hole0": "Kill", "_type": "Template5"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, 0.0, -1.33514404296875e-05, -2.288818359375e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.0503957784967497e-05, -1.9073486328125e-06, -0.0001087188720703125, -0.060112953186035156, -3.4332275390625e-05, -1.9073486328125e-06, -7.748603820800781e-06, -7.62939453125e-06, -7.62939453125e-06, -2.86102294921875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.000110626220703125, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.4305012882687151e-05, -5.7220458984375e-06, -7.62939453125e-05, -3.0517578125e-05, 0.0, 0.0, 0.0, -9.5367431640625e-06, 0.0, -0.00020647048950195312, -1.9073486328125e-06, -9.34600830078125e-05, -0.003772735595703125, -1.9073486328125e-06, -0.0007410049438476562, -7.62939453125e-06, -9.5367431640625e-06, -2.6702880859375e-05, -5.53131103515625e-05, -3.62396240234375e-05, -5.7220458984375e-05, 0.0, -0.0003147125244140625, -1.9073486328125e-06, -0.00029206275939941406, -2.86102294921875e-05, -0.010154008865356445, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.43865966796875e-05, 0.0, -0.000244140625, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.5068883895874023, -1.52587890625e-05, -0.28470802307128906, 0.0, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.000247955322265625, -0.05280196666717529, -1.9073486328125e-06, -0.0023136138916015625, -0.0001049041748046875, -0.0007419586181640625, -0.0020780563354492188, -2.47955322265625e-05, -0.0002994537353515625, -0.001773834228515625, -0.0004634857177734375, -0.000514984130859375, -0.001848459243774414, -0.0075168609619140625, 0.0, -0.0001125335693359375, -0.001476287841796875, -0.001010894775390625, 0.0, -0.000194549560546875, -7.62939453125e-06, -0.006815433502197266, -0.0008697509765625, 0.0, -1.71661376953125e-05, -2.09808349609375e-05, -0.0004291534423828125, -7.2479248046875e-05, -0.0015773773193359375, -8.392333984375e-05, -0.01190747506916523, -1.5497207641601562e-05, -0.00829315185546875, -5.7220458984375e-06, -0.00029754638671875, -7.62939453125e-06, 0.0, -0.0008296966552734375, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0074443817138671875, -1.1768888235092163, -1.9073486328125e-06, -0.000209808349609375, -0.000278472900390625, -0.00164794921875, -0.0072002410888671875, -1.33514404296875e-05, -0.0002498626708984375, -0.001018524169921875, -0.0003032684326171875, -4.38690185546875e-05, -0.001178741455078125, -0.008815765380859375, 0.0, -0.0003032684326171875, -7.43865966796875e-05, -0.0019683837890625, 0.0, -7.05718994140625e-05, -3.814697265625e-06, -0.013305306434631348, -0.0007381439208984375, 0.0, -3.0517578125e-05, -2.09808349609375e-05, -0.0005931854248046875, -8.0108642578125e-05, -0.001010894775390625, -7.05718994140625e-05, -0.01207948848605156, -1.3470649719238281e-05, -0.008428573608398438, -5.7220458984375e-06, -0.0002899169921875, -7.62939453125e-06, 0.0, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Corruption", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Corruption", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "add_effect", "<EOS>", 216, 58, 123, 44, 217, 58, 122, 23, 146, "Turn", "Started", "<EOS>", 224, 205, "player", "<EOS>", 51, 193, "Enemy", "Player", "<EOS>", 58, 123, 43, 217, 87, 193, "Kill", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "add_effect", "<EOS>", 216, 58, 123, 44, 217, 58, 122, 23, 146, "Turn", "Started", "<EOS>", 224, 205, "player", "<EOS>", 51, 193, "Enemy", "Player", "<EOS>", 58, 123, 43, 217, 87, 193, "Kill", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 109]}, {"inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n        self.target.change_attack(3)\n", "score": -4.022352235249826, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Corruption", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template14"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "add_effect", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"_type": "Template33"}, "args": [{"func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "player"}]}, {"func": {"_type": "Template32"}, "args": [{"hole0": "Kill", "_type": "Template5"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template16"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, 0.0, -1.33514404296875e-05, -2.288818359375e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.0503957784967497e-05, -1.9073486328125e-06, -0.0001087188720703125, -0.060112953186035156, -3.4332275390625e-05, -1.9073486328125e-06, -7.748603820800781e-06, -7.62939453125e-06, -7.62939453125e-06, -2.86102294921875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.000110626220703125, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.4305012882687151e-05, -5.7220458984375e-06, -7.62939453125e-05, -3.0517578125e-05, 0.0, 0.0, 0.0, -9.5367431640625e-06, 0.0, -0.00020647048950195312, -1.9073486328125e-06, -9.34600830078125e-05, -0.003772735595703125, -1.9073486328125e-06, -0.0007410049438476562, -7.62939453125e-06, -9.5367431640625e-06, -2.6702880859375e-05, -5.53131103515625e-05, -3.62396240234375e-05, -5.7220458984375e-05, 0.0, -0.0003147125244140625, -1.9073486328125e-06, -0.00029206275939941406, -2.86102294921875e-05, -0.010154008865356445, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.43865966796875e-05, 0.0, -0.000244140625, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.5068883895874023, -1.52587890625e-05, -0.28470802307128906, 0.0, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.000247955322265625, -0.05280196666717529, -1.9073486328125e-06, -0.0023136138916015625, -0.0001049041748046875, -0.0007419586181640625, -0.0020780563354492188, -2.47955322265625e-05, -0.0002994537353515625, -0.001773834228515625, -0.0004634857177734375, -0.000514984130859375, -0.001848459243774414, -0.0075168609619140625, 0.0, -0.0001125335693359375, -0.001476287841796875, -0.001010894775390625, 0.0, -0.000194549560546875, -7.62939453125e-06, -0.006815433502197266, -0.0008697509765625, 0.0, -1.71661376953125e-05, -2.09808349609375e-05, -0.0004291534423828125, -7.2479248046875e-05, -0.0015773773193359375, -8.392333984375e-05, -0.01190747506916523, -1.5497207641601562e-05, -0.00829315185546875, -5.7220458984375e-06, -0.00029754638671875, -7.62939453125e-06, 0.0, -0.0008296966552734375, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0074443817138671875, -0.42839181423187256, -1.9073486328125e-06, -1.9073486328125e-06, -2.6132030487060547, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Corruption", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Corruption", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "add_effect", "<EOS>", 216, 58, 123, 44, 217, 58, 122, 23, 146, "Turn", "Started", "<EOS>", 224, 205, "player", "<EOS>", 51, 193, "Enemy", "Player", "<EOS>", 58, 123, 43, 217, 87, 193, "Kill", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 72, 109]}, {"inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n", "score": -4.308120737683538, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Corruption", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template14"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "add_effect", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"_type": "Template33"}, "args": [{"func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "player"}]}, {"func": {"_type": "Template32"}, "args": [{"hole0": "Kill", "_type": "Template5"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "add_effect", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"_type": "Template33"}, "args": [{"func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "player"}]}, {"func": {"_type": "Template32"}, "args": [{"hole0": "Kill", "_type": "Template5"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, 0.0, -1.33514404296875e-05, -2.288818359375e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.0503957784967497e-05, -1.9073486328125e-06, -0.0001087188720703125, -2.87772274017334, -3.814697265625e-05, 0.0, -3.7670135498046875e-05, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002384185791015625, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.0967194612021558e-05, -3.814697265625e-06, -6.103515625e-05, -2.09808349609375e-05, 0.0, 0.0, 0.0, -9.5367431640625e-06, 0.0, -0.00020456314086914062, -1.9073486328125e-06, -9.34600830078125e-05, -0.00238037109375, -1.9073486328125e-06, -0.00079345703125, -5.7220458984375e-06, -1.1444091796875e-05, -2.86102294921875e-05, -5.340576171875e-05, -4.38690185546875e-05, -5.91278076171875e-05, 0.0, -0.0002918243408203125, -1.9073486328125e-06, -0.00031304359436035156, -2.86102294921875e-05, -0.010297060012817383, -5.7220458984375e-06, -0.000148773193359375, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -5.91278076171875e-05, 0.0, -0.0001983642578125, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.1279315948486328, -3.814697265625e-06, -0.0042285919189453125, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -8.7738037109375e-05, -0.06085705757141113, -7.62939453125e-06, -0.0033893585205078125, -0.0001163482666015625, -0.0005645751953125, -0.0018320083618164062, -2.288818359375e-05, -0.0005970001220703125, -0.0014286041259765625, -0.00046539306640625, -0.0005512237548828125, -0.0014879703521728516, -0.007902145385742188, 0.0, -0.000102996826171875, -0.0008678436279296875, -0.0009660720825195312, 0.0, -0.0001659393310546875, -7.62939453125e-06, -0.008606433868408203, -0.0008916854858398438, 0.0, -1.71661376953125e-05, -1.9073486328125e-05, -0.0003681182861328125, -6.67572021484375e-05, -0.0017490386962890625, -8.7738037109375e-05, -0.012172711081802845, -1.5497207641601562e-05, -0.0084228515625, -5.7220458984375e-06, -0.000308990478515625, -7.62939453125e-06, 0.0, -0.0001678466796875, -7.62939453125e-06, -0.0046443939208984375, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001373291015625, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.039272308349609375, -5.7220458984375e-06, -8.392333984375e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -3.4332275390625e-05, 0.0, -8.58306884765625e-05, -0.0670400857925415, -7.62939453125e-06, -0.00251007080078125, -9.918212890625e-05, -0.000492095947265625, -0.0015974044799804688, -1.9073486328125e-05, -0.00067138671875, -0.001384735107421875, -0.000457763671875, -0.0004558563232421875, -0.0011675357818603516, -0.008836746215820312, 0.0, -8.58306884765625e-05, -0.0004329681396484375, -0.00092315673828125, 0.0, -0.000118255615234375, -7.62939453125e-06, -0.012944817543029785, -0.000797271728515625, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -0.0002899169921875, -5.91278076171875e-05, -0.001861572265625, -8.96453857421875e-05, -0.012515304610133171, -1.5497207641601562e-05, -0.008520126342773438, -5.7220458984375e-06, -0.00031280517578125, -7.62939453125e-06, 0.0, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Corruption", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Corruption", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "add_effect", "<EOS>", 216, 58, 123, 44, 217, 58, 122, 23, 146, "Turn", "Started", "<EOS>", 224, 205, "player", "<EOS>", 51, 193, "Enemy", "Player", "<EOS>", 58, 123, 43, 217, 87, 193, "Kill", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "add_effect", "<EOS>", 216, 58, 123, 44, 217, 58, 122, 23, 146, "Turn", "Started", "<EOS>", 224, 205, "player", "<EOS>", 51, 193, "Enemy", "Player", "<EOS>", 58, 123, 43, 217, 87, 193, "Kill", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 109]}, {"inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -4.427044749118039, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Corruption", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template14"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, 0.0, -1.33514404296875e-05, -2.288818359375e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.0503957784967497e-05, -1.9073486328125e-06, -0.0001087188720703125, -0.060112953186035156, -3.4332275390625e-05, -1.9073486328125e-06, -7.748603820800781e-06, -7.62939453125e-06, -7.62939453125e-06, -2.86102294921875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.000110626220703125, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.4305012882687151e-05, -5.7220458984375e-06, -7.62939453125e-05, -3.0517578125e-05, 0.0, 0.0, 0.0, -9.5367431640625e-06, 0.0, -0.00020647048950195312, -1.9073486328125e-06, -9.34600830078125e-05, -0.003772735595703125, -1.9073486328125e-06, -0.0007410049438476562, -7.62939453125e-06, -9.5367431640625e-06, -2.6702880859375e-05, -5.53131103515625e-05, -3.62396240234375e-05, -5.7220458984375e-05, 0.0, -0.0003147125244140625, -1.9073486328125e-06, -0.00029206275939941406, -2.86102294921875e-05, -0.010154008865356445, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.43865966796875e-05, 0.0, -0.000244140625, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.9383630752563477, -3.814697265625e-06, -0.00421142578125, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -8.0108642578125e-05, -3.392305374145508, 0.0, -0.000125885009765625, -0.015030860900878906, 0.0], "choice_history": [93, 145, 230, 101, 125, "Corruption", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Corruption", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 109]}, {"inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n        self.target.change_attack(4)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -4.936384336922828, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Corruption", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template14"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "add_effect", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"_type": "Template33"}, "args": [{"func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "player"}]}, {"func": {"_type": "Template32"}, "args": [{"hole0": "Kill", "_type": "Template5"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template24"}], "ops": [{"_type": "Lt"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, 0.0, -1.33514404296875e-05, -2.288818359375e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.0503957784967497e-05, -1.9073486328125e-06, -0.0001087188720703125, -2.87772274017334, -3.814697265625e-05, 0.0, -3.7670135498046875e-05, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002384185791015625, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.0967194612021558e-05, -3.814697265625e-06, -6.103515625e-05, -2.09808349609375e-05, 0.0, 0.0, 0.0, -9.5367431640625e-06, 0.0, -0.00020456314086914062, -1.9073486328125e-06, -9.34600830078125e-05, -0.00238037109375, -1.9073486328125e-06, -0.00079345703125, -5.7220458984375e-06, -1.1444091796875e-05, -2.86102294921875e-05, -5.340576171875e-05, -4.38690185546875e-05, -5.91278076171875e-05, 0.0, -0.0002918243408203125, -1.9073486328125e-06, -0.00031304359436035156, -2.86102294921875e-05, -0.010297060012817383, -5.7220458984375e-06, -0.000148773193359375, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -5.91278076171875e-05, 0.0, -0.0001983642578125, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.40680503845214844, -2.288818359375e-05, -0.6631526947021484, 0.0, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002498626708984375, -0.05612790584564209, -1.9073486328125e-06, -0.0025119781494140625, -0.0001049041748046875, -0.0007343292236328125, -0.0019807815551757812, -2.47955322265625e-05, -0.000293731689453125, -0.0017833709716796875, -0.00047206878662109375, -0.0005035400390625, -0.0018160343170166016, -0.0075054168701171875, 0.0, -0.0001125335693359375, -0.00136566162109375, -0.00101470947265625, 0.0, -0.00019073486328125, -7.62939453125e-06, -0.006948947906494141, -0.0008649826049804688, 0.0, -1.71661376953125e-05, -2.09808349609375e-05, -0.000431060791015625, -7.2479248046875e-05, -0.0015583038330078125, -8.392333984375e-05, -0.011874811723828316, -1.5497207641601562e-05, -0.00830078125, -5.7220458984375e-06, -0.00029754638671875, -7.62939453125e-06, 0.0, -0.0011692047119140625, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0072422027587890625, -0.4159187078475952, -1.9073486328125e-06, -1.9073486328125e-06, -0.10549640655517578, -0.016460418701171875, -8.96453857421875e-05, -0.005779266357421875, -1.9073486328125e-06, -0.0001010894775390625, -5.7220458984375e-06, -0.0003337860107421875, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -0.000774383544921875, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-05, 0.0, -0.23944950103759766, -0.005215644836425781, -0.00017547607421875, -0.000743865966796875, -0.0001373291015625, -0.000274658203125, -0.0067234039306640625, -0.0017871856689453125, -4.76837158203125e-05, -5.91278076171875e-05, -1.1444091796875e-05, -6.67572021484375e-05, -3.814697265625e-06, -6.246566772460938e-05, -1.9073486328125e-05, -0.002185821533203125, 0.0, -0.000301361083984375, -0.000331878662109375, -0.005612373352050781, -5.7220458984375e-06, -0.00021564960479736328, 0.0, -0.017830848693847656, -0.0020694732666015625, -0.0014963150024414062, -6.29425048828125e-05, -0.000102996826171875, -2.6702880859375e-05, -0.00013494491577148438, -3.62396240234375e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -0.023740768432617188, -0.001738429069519043, -1.9073486328125e-06, -0.0001392364501953125, -0.0001583099365234375, -2.09808349609375e-05, -0.00113677978515625, 0.0], "choice_history": [93, 145, 230, 101, 125, "Corruption", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Corruption", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "add_effect", "<EOS>", 216, 58, 123, 44, 217, 58, 122, 23, 146, "Turn", "Started", "<EOS>", 224, 205, "player", "<EOS>", 51, 193, "Enemy", "Player", "<EOS>", 58, 123, 43, 217, 87, 193, "Kill", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 76, 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 213, 12, 216, 79, 109]}, {"inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n        self.target.add_buff(Buff(Frozen()))\n", "score": -5.209751708436642, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Corruption", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template14"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "add_effect", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"_type": "Template33"}, "args": [{"func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "player"}]}, {"func": {"_type": "Template32"}, "args": [{"hole0": "Kill", "_type": "Template5"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Frozen", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, 0.0, -1.33514404296875e-05, -2.288818359375e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.0503957784967497e-05, -1.9073486328125e-06, -0.0001087188720703125, -0.060112953186035156, -3.4332275390625e-05, -1.9073486328125e-06, -7.748603820800781e-06, -7.62939453125e-06, -7.62939453125e-06, -2.86102294921875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.000110626220703125, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.4305012882687151e-05, -5.7220458984375e-06, -7.62939453125e-05, -3.0517578125e-05, 0.0, 0.0, 0.0, -9.5367431640625e-06, 0.0, -0.00020647048950195312, -1.9073486328125e-06, -9.34600830078125e-05, -0.003772735595703125, -1.9073486328125e-06, -0.0007410049438476562, -7.62939453125e-06, -9.5367431640625e-06, -2.6702880859375e-05, -5.53131103515625e-05, -3.62396240234375e-05, -5.7220458984375e-05, 0.0, -0.0003147125244140625, -1.9073486328125e-06, -0.00029206275939941406, -2.86102294921875e-05, -0.010154008865356445, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.43865966796875e-05, 0.0, -0.000244140625, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.5068883895874023, -1.52587890625e-05, -0.28470802307128906, 0.0, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.000247955322265625, -0.05280196666717529, -1.9073486328125e-06, -0.0023136138916015625, -0.0001049041748046875, -0.0007419586181640625, -0.0020780563354492188, -2.47955322265625e-05, -0.0002994537353515625, -0.001773834228515625, -0.0004634857177734375, -0.000514984130859375, -0.001848459243774414, -0.0075168609619140625, 0.0, -0.0001125335693359375, -0.001476287841796875, -0.001010894775390625, 0.0, -0.000194549560546875, -7.62939453125e-06, -0.006815433502197266, -0.0008697509765625, 0.0, -1.71661376953125e-05, -2.09808349609375e-05, -0.0004291534423828125, -7.2479248046875e-05, -0.0015773773193359375, -8.392333984375e-05, -0.01190747506916523, -1.5497207641601562e-05, -0.00829315185546875, -5.7220458984375e-06, -0.00029754638671875, -7.62939453125e-06, 0.0, -0.0008296966552734375, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0074443817138671875, -3.8005287647247314, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -0.000133514404296875, -0.0009250640869140625, -3.814697265625e-06, -0.0033712387084960938, -0.0001964569091796875, -1.9073486328125e-06, -0.014997482299804688, -1.9073486328125e-06, -0.4086103141307831, -0.000193353887880221, 0.0], "choice_history": [93, 145, 230, 101, 125, "Corruption", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Corruption", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "add_effect", "<EOS>", 216, 58, 123, 44, 217, 58, 122, 23, 146, "Turn", "Started", "<EOS>", 224, 205, "player", "<EOS>", 51, 193, "Enemy", "Player", "<EOS>", 58, 123, 43, 217, 87, 193, "Kill", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Frozen", "<EOS>", 109]}, {"inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - 1\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n", "score": -5.26054740124161, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Corruption", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template14"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"left": {"attr": "health", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "BinOp", "right": {"_type": "Template14"}, "op": {"_type": "Sub"}}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "add_effect", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"_type": "Template33"}, "args": [{"func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "player"}]}, {"func": {"_type": "Template32"}, "args": [{"hole0": "Kill", "_type": "Template5"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, 0.0, -1.33514404296875e-05, -2.288818359375e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.0503957784967497e-05, -1.9073486328125e-06, -0.0001087188720703125, -0.060112953186035156, -3.4332275390625e-05, -1.9073486328125e-06, -7.748603820800781e-06, -7.62939453125e-06, -7.62939453125e-06, -2.86102294921875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.000110626220703125, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.4305012882687151e-05, -5.7220458984375e-06, -7.62939453125e-05, -3.0517578125e-05, 0.0, 0.0, 0.0, -9.5367431640625e-06, 0.0, -0.00020647048950195312, -1.9073486328125e-06, -9.34600830078125e-05, -0.003772735595703125, -1.9073486328125e-06, -0.0007410049438476562, -7.62939453125e-06, -9.5367431640625e-06, -2.6702880859375e-05, -5.53131103515625e-05, -3.62396240234375e-05, -5.7220458984375e-05, 0.0, -0.0003147125244140625, -1.9073486328125e-06, -0.00029206275939941406, -2.86102294921875e-05, -0.010154008865356445, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.43865966796875e-05, 0.0, -0.000244140625, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.5068883895874023, -1.52587890625e-05, -1.4006872177124023, -7.62939453125e-06, -7.62939453125e-06, -0.0006923675537109375, 0.0, -0.071319580078125, -8.058547973632812e-05, -0.17142581939697266, -0.0034332275390625, -0.4823179244995117, 0.0, -0.043567657470703125, -0.574444055557251, -1.9073486328125e-06, -0.0034847259521484375, -1.451547622680664, -0.1345233917236328, 0.0, -1.9073486328125e-06, -0.10672378540039062, -1.9073486328125e-06, -1.9073486328125e-06, -0.0007495880126953125, -0.1790553331375122, -1.9073486328125e-06, -0.0005321502685546875, -0.0001354217529296875, -0.00067138671875, -0.0011272430419921875, -3.0517578125e-05, -0.00023651123046875, -0.0016994476318359375, -0.000522613525390625, -0.0001964569091796875, -0.0013304948806762695, -0.007958412170410156, 0.0, -9.72747802734375e-05, -0.0002002716064453125, -0.001125335693359375, 0.0, -0.0001049041748046875, -5.7220458984375e-06, -0.012738823890686035, -0.0008182525634765625, 0.0, -2.09808349609375e-05, -1.71661376953125e-05, -0.0003643035888671875, -6.67572021484375e-05, -0.0015392303466796875, -7.82012939453125e-05, -0.012122156098484993, -1.3589859008789062e-05, -0.008600234985351562, -5.7220458984375e-06, -0.0003204345703125, -7.62939453125e-06, 0.0, 0.0], "choice_history": [93, 145, 230, 101, 125, "Corruption", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Corruption", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 16, 118, 15, 116, 52, "health", "<EOS>", 95, 28, 102, 128, 18, 123, 15, 116, 52, "add_effect", "<EOS>", 216, 58, 123, 44, 217, 58, 122, 23, 146, "Turn", "Started", "<EOS>", 224, 205, "player", "<EOS>", 51, 193, "Enemy", "Player", "<EOS>", 58, 123, 43, 217, 87, 193, "Kill", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 109]}, {"inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n", "score": -5.515671276387337, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Corruption", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template14"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "add_effect", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"_type": "Template33"}, "args": [{"func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "player"}]}, {"func": {"_type": "Template32"}, "args": [{"hole0": "Kill", "_type": "Template5"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "add_effect", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"_type": "Template33"}, "args": [{"func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "player"}]}, {"func": {"_type": "Template32"}, "args": [{"hole0": "Kill", "_type": "Template5"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "add_effect", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"_type": "Template33"}, "args": [{"func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "player"}]}, {"func": {"_type": "Template32"}, "args": [{"hole0": "Kill", "_type": "Template5"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, 0.0, -1.33514404296875e-05, -2.288818359375e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.0503957784967497e-05, -1.9073486328125e-06, -0.0001087188720703125, -2.87772274017334, -3.814697265625e-05, 0.0, -3.7670135498046875e-05, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002384185791015625, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.0967194612021558e-05, -3.814697265625e-06, -6.103515625e-05, -2.09808349609375e-05, 0.0, 0.0, 0.0, -9.5367431640625e-06, 0.0, -0.00020456314086914062, -1.9073486328125e-06, -9.34600830078125e-05, -0.00238037109375, -1.9073486328125e-06, -0.00079345703125, -5.7220458984375e-06, -1.1444091796875e-05, -2.86102294921875e-05, -5.340576171875e-05, -4.38690185546875e-05, -5.91278076171875e-05, 0.0, -0.0002918243408203125, -1.9073486328125e-06, -0.00031304359436035156, -2.86102294921875e-05, -0.010297060012817383, -5.7220458984375e-06, -0.000148773193359375, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -5.91278076171875e-05, 0.0, -0.0001983642578125, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.40680503845214844, -2.288818359375e-05, -0.6631526947021484, 0.0, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002498626708984375, -0.05612790584564209, -1.9073486328125e-06, -0.0025119781494140625, -0.0001049041748046875, -0.0007343292236328125, -0.0019807815551757812, -2.47955322265625e-05, -0.000293731689453125, -0.0017833709716796875, -0.00047206878662109375, -0.0005035400390625, -0.0018160343170166016, -0.0075054168701171875, 0.0, -0.0001125335693359375, -0.00136566162109375, -0.00101470947265625, 0.0, -0.00019073486328125, -7.62939453125e-06, -0.006948947906494141, -0.0008649826049804688, 0.0, -1.71661376953125e-05, -2.09808349609375e-05, -0.000431060791015625, -7.2479248046875e-05, -0.0015583038330078125, -8.392333984375e-05, -0.011874811723828316, -1.5497207641601562e-05, -0.00830078125, -5.7220458984375e-06, -0.00029754638671875, -7.62939453125e-06, 0.0, -0.0011692047119140625, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0072422027587890625, -1.2001270055770874, -1.9073486328125e-06, -0.0002002716064453125, -0.000270843505859375, -0.0016841888427734375, -0.007554054260253906, -1.52587890625e-05, -0.000247955322265625, -0.0010089874267578125, -0.0003032684326171875, -4.38690185546875e-05, -0.001186370849609375, -0.008833885192871094, 0.0, -0.0002994537353515625, -7.43865966796875e-05, -0.001983642578125, 0.0, -7.05718994140625e-05, -3.814697265625e-06, -0.013332009315490723, -0.0007343292236328125, 0.0, -3.0517578125e-05, -2.09808349609375e-05, -0.0005893707275390625, -8.0108642578125e-05, -0.00101470947265625, -7.05718994140625e-05, -0.012076150625944138, -1.3470649719238281e-05, -0.0084381103515625, -5.7220458984375e-06, -0.0002899169921875, -7.62939453125e-06, 0.0, -0.00019073486328125, -7.62939453125e-06, -0.0037441253662109375, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.000141143798828125, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.04651165008544922, -5.7220458984375e-06, -7.62939453125e-05, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -3.4332275390625e-05, 0.0, -8.7738037109375e-05, -0.06717813014984131, -7.62939453125e-06, -0.00252532958984375, -9.5367431640625e-05, -0.000484466552734375, -0.0015783309936523438, -1.9073486328125e-05, -0.0006809234619140625, -0.0013980865478515625, -0.000457763671875, -0.000453948974609375, -0.001119852066040039, -0.009059906005859375, 0.0, -8.392333984375e-05, -0.0003528594970703125, -0.0009202957153320312, 0.0, -0.0001087188720703125, -7.62939453125e-06, -0.013836503028869629, -0.0007762908935546875, 0.0, -1.9073486328125e-05, -1.52587890625e-05, -0.0002765655517578125, -5.91278076171875e-05, -0.0018749237060546875, -8.7738037109375e-05, -0.01259648334234953, -1.5497207641601562e-05, -0.008544921875, -5.7220458984375e-06, -0.0003147125244140625, -7.62939453125e-06, 0.0, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Corruption", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Corruption", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "add_effect", "<EOS>", 216, 58, 123, 44, 217, 58, 122, 23, 146, "Turn", "Started", "<EOS>", 224, 205, "player", "<EOS>", 51, 193, "Enemy", "Player", "<EOS>", 58, 123, 43, 217, 87, 193, "Kill", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "add_effect", "<EOS>", 216, 58, 123, 44, 217, 58, 122, 23, 146, "Turn", "Started", "<EOS>", 224, 205, "player", "<EOS>", 51, 193, "Enemy", "Player", "<EOS>", 58, 123, 43, 217, 87, 193, "Kill", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "add_effect", "<EOS>", 216, 58, 123, 44, 217, 58, 122, 23, 146, "Turn", "Started", "<EOS>", 224, 205, "player", "<EOS>", 51, 193, "Enemy", "Player", "<EOS>", 58, 123, 43, 217, 87, 193, "Kill", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 109]}, {"inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n        self.target.change_attack(5)\n", "score": -6.130929009846994, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Corruption", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template14"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "add_effect", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"_type": "Template33"}, "args": [{"func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "player"}]}, {"func": {"_type": "Template32"}, "args": [{"hole0": "Kill", "_type": "Template5"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template22"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, 0.0, -1.33514404296875e-05, -2.288818359375e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.0503957784967497e-05, -1.9073486328125e-06, -0.0001087188720703125, -0.060112953186035156, -3.4332275390625e-05, -1.9073486328125e-06, -7.748603820800781e-06, -7.62939453125e-06, -7.62939453125e-06, -2.86102294921875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.000110626220703125, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.4305012882687151e-05, -5.7220458984375e-06, -7.62939453125e-05, -3.0517578125e-05, 0.0, 0.0, 0.0, -9.5367431640625e-06, 0.0, -0.00020647048950195312, -1.9073486328125e-06, -9.34600830078125e-05, -0.003772735595703125, -1.9073486328125e-06, -0.0007410049438476562, -7.62939453125e-06, -9.5367431640625e-06, -2.6702880859375e-05, -5.53131103515625e-05, -3.62396240234375e-05, -5.7220458984375e-05, 0.0, -0.0003147125244140625, -1.9073486328125e-06, -0.00029206275939941406, -2.86102294921875e-05, -0.010154008865356445, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.43865966796875e-05, 0.0, -0.000244140625, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.5068883895874023, -1.52587890625e-05, -0.28470802307128906, 0.0, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.000247955322265625, -0.05280196666717529, -1.9073486328125e-06, -0.0023136138916015625, -0.0001049041748046875, -0.0007419586181640625, -0.0020780563354492188, -2.47955322265625e-05, -0.0002994537353515625, -0.001773834228515625, -0.0004634857177734375, -0.000514984130859375, -0.001848459243774414, -0.0075168609619140625, 0.0, -0.0001125335693359375, -0.001476287841796875, -0.001010894775390625, 0.0, -0.000194549560546875, -7.62939453125e-06, -0.006815433502197266, -0.0008697509765625, 0.0, -1.71661376953125e-05, -2.09808349609375e-05, -0.0004291534423828125, -7.2479248046875e-05, -0.0015773773193359375, -8.392333984375e-05, -0.01190747506916523, -1.5497207641601562e-05, -0.00829315185546875, -5.7220458984375e-06, -0.00029754638671875, -7.62939453125e-06, 0.0, -0.0008296966552734375, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0074443817138671875, -0.42839181423187256, -1.9073486328125e-06, -1.9073486328125e-06, -4.721772193908691, -9.5367431640625e-06], "choice_history": [93, 145, 230, 101, 125, "Corruption", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Corruption", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "add_effect", "<EOS>", 216, 58, 123, 44, 217, 58, 122, 23, 146, "Turn", "Started", "<EOS>", 224, 205, "player", "<EOS>", 51, 193, "Enemy", "Player", "<EOS>", 58, 123, 43, 217, 87, 193, "Kill", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 77, 109]}, {"inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n        self.target.change_attack(4)\n\n    def can_use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n", "score": -6.322937747363511, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Corruption", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template14"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "add_effect", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"_type": "Template33"}, "args": [{"func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "player"}]}, {"func": {"_type": "Template32"}, "args": [{"hole0": "Kill", "_type": "Template5"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "add_effect", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"_type": "Template33"}, "args": [{"func": {"id": "TurnStarted", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "player"}]}, {"func": {"_type": "Template32"}, "args": [{"hole0": "Kill", "_type": "Template5"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, 0.0, -1.33514404296875e-05, -2.288818359375e-05, -3.814697265625e-06, -2.3841855067985307e-07, -2.0503957784967497e-05, -1.9073486328125e-06, -0.0001087188720703125, -2.87772274017334, -3.814697265625e-05, 0.0, -3.7670135498046875e-05, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002384185791015625, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.0967194612021558e-05, -3.814697265625e-06, -6.103515625e-05, -2.09808349609375e-05, 0.0, 0.0, 0.0, -9.5367431640625e-06, 0.0, -0.00020456314086914062, -1.9073486328125e-06, -9.34600830078125e-05, -0.00238037109375, -1.9073486328125e-06, -0.00079345703125, -5.7220458984375e-06, -1.1444091796875e-05, -2.86102294921875e-05, -5.340576171875e-05, -4.38690185546875e-05, -5.91278076171875e-05, 0.0, -0.0002918243408203125, -1.9073486328125e-06, -0.00031304359436035156, -2.86102294921875e-05, -0.010297060012817383, -5.7220458984375e-06, -0.000148773193359375, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -5.91278076171875e-05, 0.0, -0.0001983642578125, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.40680503845214844, -2.288818359375e-05, -0.6631526947021484, 0.0, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002498626708984375, -0.05612790584564209, -1.9073486328125e-06, -0.0025119781494140625, -0.0001049041748046875, -0.0007343292236328125, -0.0019807815551757812, -2.47955322265625e-05, -0.000293731689453125, -0.0017833709716796875, -0.00047206878662109375, -0.0005035400390625, -0.0018160343170166016, -0.0075054168701171875, 0.0, -0.0001125335693359375, -0.00136566162109375, -0.00101470947265625, 0.0, -0.00019073486328125, -7.62939453125e-06, -0.006948947906494141, -0.0008649826049804688, 0.0, -1.71661376953125e-05, -2.09808349609375e-05, -0.000431060791015625, -7.2479248046875e-05, -0.0015583038330078125, -8.392333984375e-05, -0.011874811723828316, -1.5497207641601562e-05, -0.00830078125, -5.7220458984375e-06, -0.00029754638671875, -7.62939453125e-06, 0.0, -0.0011692047119140625, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0072422027587890625, -0.4159187078475952, -1.9073486328125e-06, -1.9073486328125e-06, -0.10549640655517578, -0.016460418701171875, -8.96453857421875e-05, -0.005779266357421875, -1.9073486328125e-06, -0.0001010894775390625, -5.7220458984375e-06, -0.0003337860107421875, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -0.000774383544921875, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-05, 0.0, -1.576791763305664, -9.5367431640625e-06, -0.0005130767822265625, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-05, 0.0, -7.82012939453125e-05, -0.06647467613220215, -7.62939453125e-06, -0.0022945404052734375, -0.0001373291015625, -0.0005245208740234375, -0.0019731521606445312, -2.09808349609375e-05, -0.00060272216796875, -0.0013427734375, -0.00048542022705078125, -0.0004730224609375, -0.0013391971588134766, -0.008385658264160156, 0.0, -9.5367431640625e-05, -0.0004444122314453125, -0.0009393692016601562, 0.0, -0.000125885009765625, -7.62939453125e-06, -0.011150836944580078, -0.0008516311645507812, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -0.0003185272216796875, -6.29425048828125e-05, -0.0018177032470703125, -8.96453857421875e-05, -0.012405280023813248, -1.5497207641601562e-05, -0.008501052856445312, -5.7220458984375e-06, -0.0003147125244140625, -7.62939453125e-06, 0.0, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Corruption", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Corruption", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "add_effect", "<EOS>", 216, 58, 123, 44, 217, 58, 122, 23, 146, "Turn", "Started", "<EOS>", 224, 205, "player", "<EOS>", 51, 193, "Enemy", "Player", "<EOS>", 58, 123, 43, 217, 87, 193, "Kill", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 76, 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "add_effect", "<EOS>", 216, 58, 123, 44, 217, 58, 122, 23, 146, "Turn", "Started", "<EOS>", 224, 205, "player", "<EOS>", 51, 193, "Enemy", "Player", "<EOS>", 58, 123, 43, 217, 87, 193, "Kill", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 109]}, {"inferred_code": "", "score": -11.383633613586426, "model_output": {"_type": "Module", "body": [{"_type": "Template13_stmt_seq"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, 0.0, -1.33514404296875e-05, -11.184462547302246, -0.1991100311279297], "choice_history": [93, 145, 230, 109, 109]}, {"inferred_code": "super().use(player, game)\n", "score": -13.575021743774414, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, 0.0, -1.33514404296875e-05, -13.552103042602539, -0.022857666015625], "choice_history": [93, 145, 230, 108, 109]}, {"inferred_code": "", "score": -20.769397735595703, "model_output": {"_type": "Module", "body": []}, "score_history": [-4.76837158203125e-05, 0.0, -20.769350051879883], "choice_history": [93, 145, 228]}], "index": 22}
{"beams": [{"inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "score": -0.006194233786537495, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DalaranMage", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"value": {"_type": "Template14"}, "_type": "keyword", "arg": "spell_damage"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.1444091796875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -9.775113539944869e-06, -1.0609570381348021e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -8.392333984375e-05, -2.288818359375e-05, 0.0, -8.392333984375e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.50339189733495e-06, -8.225440979003906e-06, -3.814697265625e-06, -2.3841855067985307e-07, -0.0002574920654296875, -1.71661376953125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.00011646747589111328, 0.0, -1.33514404296875e-05, -3.62396240234375e-05, -0.000370025634765625, -7.62939453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.00012969970703125, 0.0, -0.0002460479736328125, -4.76837158203125e-05, -9.5367431640625e-06, -7.82012939453125e-05, -1.9073486328125e-05, -0.000152587890625, -4.76837158203125e-05, -0.0001373291015625, -7.62939453125e-05, -0.0003814697265625, -5.53131103515625e-05, -0.0031833648681640625, 0.0, -0.0001983642578125, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dalaran", "Mage", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Dalaran", " ", "Mage", "<EOS>", 72, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 76, 224, 205, "spell_damage", "<EOS>", 28, 109]}, {"inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, Card=1)\n", "score": -7.261172413718178, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DalaranMage", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"value": {"_type": "Template14"}, "_type": "keyword", "arg": "Card"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.1444091796875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -9.775113539944869e-06, -1.0609570381348021e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -8.392333984375e-05, -2.288818359375e-05, 0.0, -8.392333984375e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.50339189733495e-06, -8.225440979003906e-06, -3.814697265625e-06, -2.3841855067985307e-07, -0.0002574920654296875, -1.71661376953125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.00011646747589111328, 0.0, -1.33514404296875e-05, -3.62396240234375e-05, -0.000370025634765625, -7.62939453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.00012969970703125, 0.0, -0.0002460479736328125, -4.76837158203125e-05, -9.5367431640625e-06, -7.82012939453125e-05, -1.9073486328125e-05, -0.000152587890625, -4.76837158203125e-05, -0.0001373291015625, -7.62939453125e-05, -0.0003814697265625, -5.53131103515625e-05, -7.243647575378418, -2.6702880859375e-05, -0.014685630798339844, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dalaran", "Mage", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Dalaran", " ", "Mage", "<EOS>", 72, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 76, 224, 205, "Card", "<EOS>", 28, 109]}, {"inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1, spell_damage=1)\n", "score": -8.086025953185036, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DalaranMage", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"value": {"_type": "Template14"}, "_type": "keyword", "arg": "spell_damage"}, {"value": {"_type": "Template14"}, "_type": "keyword", "arg": "spell_damage"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.1444091796875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -9.775113539944869e-06, -1.0609570381348021e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -8.392333984375e-05, -2.288818359375e-05, 0.0, -8.392333984375e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.50339189733495e-06, -8.225440979003906e-06, -3.814697265625e-06, -2.3841855067985307e-07, -0.0002574920654296875, -1.71661376953125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.00011646747589111328, 0.0, -1.33514404296875e-05, -3.62396240234375e-05, -0.000370025634765625, -7.62939453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.00012969970703125, 0.0, -0.0002460479736328125, -4.76837158203125e-05, -9.5367431640625e-06, -7.82012939453125e-05, -1.9073486328125e-05, -0.000152587890625, -4.76837158203125e-05, -0.0001373291015625, -7.62939453125e-05, -7.934313774108887, -0.00063323974609375, -0.0036231279373168945, -1.9073486328125e-06, -0.000209808349609375, -2.09808349609375e-05, -0.14439725875854492, 0.0, -0.0004482269287109375, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Dalaran", "Mage", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Dalaran", " ", "Mage", "<EOS>", 72, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 76, 225, 205, "spell_damage", "<EOS>", 28, 205, "spell_damage", "<EOS>", 28, 109]}, {"inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "score": -8.481207966696694, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DalaranMage", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template28"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"value": {"_type": "Template14"}, "_type": "keyword", "arg": "spell_damage"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.1444091796875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -9.775113539944869e-06, -1.0609570381348021e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -8.392333984375e-05, -2.288818359375e-05, 0.0, -8.392333984375e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.50339189733495e-06, -8.225440979003906e-06, -3.814697265625e-06, -2.3841855067985307e-07, -8.474949836730957, -9.5367431640625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.33514404296875e-05, -2.47955322265625e-05, -0.0002689361572265625, -7.2479248046875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-05, 0.0, -0.000759124755859375, -4.38690185546875e-05, -9.5367431640625e-06, -7.82012939453125e-05, -1.9073486328125e-05, -0.0001506805419921875, -4.76837158203125e-05, -0.000133514404296875, -7.62939453125e-05, -0.0003795623779296875, -5.340576171875e-05, -0.003182530403137207, 0.0, -0.0001964569091796875, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dalaran", "Mage", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Dalaran", " ", "Mage", "<EOS>", 81, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 76, 224, 205, "spell_damage", "<EOS>", 28, 109]}, {"inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, taunt=True)\n", "score": -8.678324937603314, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DalaranMage", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.1444091796875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -9.775113539944869e-06, -1.0609570381348021e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -8.392333984375e-05, -2.288818359375e-05, 0.0, -8.392333984375e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.50339189733495e-06, -8.225440979003906e-06, -3.814697265625e-06, -2.3841855067985307e-07, -0.0002574920654296875, -1.71661376953125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.00011646747589111328, 0.0, -1.33514404296875e-05, -3.62396240234375e-05, -0.000370025634765625, -7.62939453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.00012969970703125, 0.0, -0.0002460479736328125, -4.76837158203125e-05, -9.5367431640625e-06, -7.82012939453125e-05, -1.9073486328125e-05, -0.000152587890625, -4.76837158203125e-05, -0.0001373291015625, -7.62939453125e-05, -0.0003814697265625, -5.53131103515625e-05, -8.65912914276123, 0.0, -0.01612567901611328, -0.000179290771484375, -7.772434764774516e-05, -5.960462772236497e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dalaran", "Mage", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Dalaran", " ", "Mage", "<EOS>", 72, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 76, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, stealth=True)\n", "score": -8.678475856177862, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DalaranMage", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "stealth"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.1444091796875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -9.775113539944869e-06, -1.0609570381348021e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -8.392333984375e-05, -2.288818359375e-05, 0.0, -8.392333984375e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.50339189733495e-06, -8.225440979003906e-06, -3.814697265625e-06, -2.3841855067985307e-07, -0.0002574920654296875, -1.71661376953125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.00011646747589111328, 0.0, -1.33514404296875e-05, -3.62396240234375e-05, -0.000370025634765625, -7.62939453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.00012969970703125, 0.0, -0.0002460479736328125, -4.76837158203125e-05, -9.5367431640625e-06, -7.82012939453125e-05, -1.9073486328125e-05, -0.000152587890625, -4.76837158203125e-05, -0.0001373291015625, -7.62939453125e-05, -0.0003814697265625, -5.53131103515625e-05, -8.5912446975708, -3.814697265625e-06, -0.08403682708740234, -0.000209808349609375, -0.00016713092918507755, -1.0728830375228426e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dalaran", "Mage", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Dalaran", " ", "Mage", "<EOS>", 72, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 76, 224, 205, "stealth", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(MinionDied(), ActionTag(Give(\n            ChangeHealth(1)), MinionSelector(condition=IsMinion())))])\n", "score": -9.443143008991193, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DalaranMage", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"hole0": "MinionDied", "_type": "Template5"}, {"func": {"_type": "Template32"}, "args": [{"func": {"_type": "Template25"}, "args": [{"func": {"id": "ChangeHealth", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "_type": "Call", "keywords": [{"value": {"hole0": "IsMinion", "_type": "Template5"}, "_type": "keyword", "arg": "condition"}]}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.1444091796875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -9.775113539944869e-06, -1.0609570381348021e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -8.392333984375e-05, -2.288818359375e-05, 0.0, -8.392333984375e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.50339189733495e-06, -8.225440979003906e-06, -3.814697265625e-06, -2.3841855067985307e-07, -0.0002574920654296875, -1.71661376953125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.00011646747589111328, 0.0, -1.33514404296875e-05, -3.62396240234375e-05, -0.000370025634765625, -7.62939453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.00012969970703125, 0.0, -0.0002460479736328125, -4.76837158203125e-05, -9.5367431640625e-06, -7.82012939453125e-05, -1.9073486328125e-05, -0.000152587890625, -4.76837158203125e-05, -0.0001373291015625, -7.62939453125e-05, -0.0003814697265625, -5.53131103515625e-05, -6.695146560668945, 0.0, -0.0075969696044921875, -5.7220458984375e-06, -9.1552734375e-05, -0.0002231597900390625, -2.288818359375e-05, -0.033005714416503906, -6.67572021484375e-05, -0.05350494384765625, -0.0014629364013671875, -0.8589805364608765, -0.10172486305236816, -2.8848335205111653e-05, -8.7738037109375e-05, -0.00034332275390625, -5.14984130859375e-05, -0.000133514404296875, -0.00014495849609375, -1.71661376953125e-05, -0.5662879943847656, -9.5367431640625e-06, -0.0037841796875, -0.000156402587890625, -0.00392913818359375, 0.0, -0.06759965419769287, -0.0005819797515869141, 0.0, -0.0003566741943359375, -0.0002689361572265625, -0.0056858062744140625, -0.0053272247314453125, -0.11182403564453125, -0.5731544494628906, -5.7220458984375e-06, -0.009680867195129395, -5.53131103515625e-05, -0.07477378845214844, 0.0, -0.26162850856781006, -0.0004582397814374417, -0.0020422935485839844, -7.62939453125e-05, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Dalaran", "Mage", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Dalaran", " ", "Mage", "<EOS>", 72, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 76, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 87, 193, "Minion", "Died", "<EOS>", 58, 123, 43, 217, 58, 123, 37, 216, 58, 123, 23, 146, "Change", "Health", "<EOS>", 216, 70, 58, 122, 38, 224, 205, "condition", "<EOS>", 51, 193, "Is", "Minion", "<EOS>", 71, 109]}, {"inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(MinionDied(), ActionTag(Give(\n            ChangeHealth(1)), MinionSelector(condition=Null, players=\n            BothPlayer())))])\n", "score": -9.60421715634353, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DalaranMage", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"hole0": "MinionDied", "_type": "Template5"}, {"func": {"_type": "Template32"}, "args": [{"func": {"_type": "Template25"}, "args": [{"func": {"id": "ChangeHealth", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}, {"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}]}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.1444091796875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -9.775113539944869e-06, -1.0609570381348021e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -8.392333984375e-05, -2.288818359375e-05, 0.0, -8.392333984375e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.50339189733495e-06, -8.225440979003906e-06, -3.814697265625e-06, -2.3841855067985307e-07, -0.0002574920654296875, -1.71661376953125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.00011646747589111328, 0.0, -1.33514404296875e-05, -3.62396240234375e-05, -0.000370025634765625, -7.62939453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.00012969970703125, 0.0, -0.0002460479736328125, -4.76837158203125e-05, -9.5367431640625e-06, -7.82012939453125e-05, -1.9073486328125e-05, -0.000152587890625, -4.76837158203125e-05, -0.0001373291015625, -7.62939453125e-05, -0.0003814697265625, -5.53131103515625e-05, -6.695146560668945, 0.0, -0.0075969696044921875, -5.7220458984375e-06, -9.1552734375e-05, -0.0002231597900390625, -2.288818359375e-05, -0.033005714416503906, -6.67572021484375e-05, -0.05350494384765625, -0.0014629364013671875, -0.8589805364608765, -0.10172486305236816, -2.8848335205111653e-05, -8.7738037109375e-05, -0.00034332275390625, -5.14984130859375e-05, -0.000133514404296875, -0.00014495849609375, -1.71661376953125e-05, -0.5662879943847656, -9.5367431640625e-06, -0.0037841796875, -0.000156402587890625, -0.00392913818359375, 0.0, -0.06759965419769287, -0.0005819797515869141, 0.0, -0.0003566741943359375, -0.0002689361572265625, -0.0056858062744140625, -0.0053272247314453125, -0.11182403564453125, -0.8510236740112305, -1.71661376953125e-05, -0.0113755464553833, -0.0005664825439453125, -0.19495201110839844, -0.0009021759033203125, -0.0032176971435546875, -5.91278076171875e-05, -5.14984130859375e-05, -0.0072176456451416016, 0.0, -0.0001811981201171875, 0.0, -0.012595519423484802, -4.0292736230185255e-05, 0.0, -0.000751495361328125, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Dalaran", "Mage", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Dalaran", " ", "Mage", "<EOS>", 72, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 76, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 87, 193, "Minion", "Died", "<EOS>", 58, 123, 43, 217, 58, 123, 37, 216, 58, 123, 23, 146, "Change", "Health", "<EOS>", 216, 70, 58, 122, 38, 225, 205, "condition", "<EOS>", 24, 148, "Null", "<EOS>", 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 71, 109]}, {"inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=5)\n", "score": -9.771547436606362, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DalaranMage", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"value": {"_type": "Template22"}, "_type": "keyword", "arg": "spell_damage"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.1444091796875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -9.775113539944869e-06, -1.0609570381348021e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -8.392333984375e-05, -2.288818359375e-05, 0.0, -8.392333984375e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.50339189733495e-06, -8.225440979003906e-06, -3.814697265625e-06, -2.3841855067985307e-07, -0.0002574920654296875, -1.71661376953125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.00011646747589111328, 0.0, -1.33514404296875e-05, -3.62396240234375e-05, -0.000370025634765625, -7.62939453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.00012969970703125, 0.0, -0.0002460479736328125, -4.76837158203125e-05, -9.5367431640625e-06, -7.82012939453125e-05, -1.9073486328125e-05, -0.000152587890625, -4.76837158203125e-05, -0.0001373291015625, -7.62939453125e-05, -0.0003814697265625, -5.53131103515625e-05, -0.0031833648681640625, 0.0, -9.765549659729004, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Dalaran", "Mage", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Dalaran", " ", "Mage", "<EOS>", 72, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 76, 224, 205, "spell_damage", "<EOS>", 35, 109]}, {"inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, minions=True)\n", "score": -9.833146689154738, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DalaranMage", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "minions"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.1444091796875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -9.775113539944869e-06, -1.0609570381348021e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -8.392333984375e-05, -2.288818359375e-05, 0.0, -8.392333984375e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.50339189733495e-06, -8.225440979003906e-06, -3.814697265625e-06, -2.3841855067985307e-07, -0.0002574920654296875, -1.71661376953125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.00011646747589111328, 0.0, -1.33514404296875e-05, -3.62396240234375e-05, -0.000370025634765625, -7.62939453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.00012969970703125, 0.0, -0.0002460479736328125, -4.76837158203125e-05, -9.5367431640625e-06, -7.82012939453125e-05, -1.9073486328125e-05, -0.000152587890625, -4.76837158203125e-05, -0.0001373291015625, -7.62939453125e-05, -0.0003814697265625, -5.53131103515625e-05, -9.718043327331543, 0.0, -0.11202716827392578, -0.00019073486328125, -7.17619332135655e-05, -1.1920922133867862e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dalaran", "Mage", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Dalaran", " ", "Mage", "<EOS>", 72, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 76, 224, 205, "minions", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, buffs=1)\n", "score": -9.985488057028725, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DalaranMage", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"value": {"_type": "Template14"}, "_type": "keyword", "arg": "buffs"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.1444091796875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -9.775113539944869e-06, -1.0609570381348021e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -8.392333984375e-05, -2.288818359375e-05, 0.0, -8.392333984375e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.50339189733495e-06, -8.225440979003906e-06, -3.814697265625e-06, -2.3841855067985307e-07, -0.0002574920654296875, -1.71661376953125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.00011646747589111328, 0.0, -1.33514404296875e-05, -3.62396240234375e-05, -0.000370025634765625, -7.62939453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.00012969970703125, 0.0, -0.0002460479736328125, -4.76837158203125e-05, -9.5367431640625e-06, -7.82012939453125e-05, -1.9073486328125e-05, -0.000152587890625, -4.76837158203125e-05, -0.0001373291015625, -7.62939453125e-05, -0.0003814697265625, -5.53131103515625e-05, -9.28432846069336, 0.0, -0.6983432769775391, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Dalaran", "Mage", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Dalaran", " ", "Mage", "<EOS>", 72, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 76, 224, 205, "buffs", "<EOS>", 28, 109]}, {"inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, charge=True)\n", "score": -10.1470501419765, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DalaranMage", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.1444091796875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -9.775113539944869e-06, -1.0609570381348021e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -8.392333984375e-05, -2.288818359375e-05, 0.0, -8.392333984375e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.50339189733495e-06, -8.225440979003906e-06, -3.814697265625e-06, -2.3841855067985307e-07, -0.0002574920654296875, -1.71661376953125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.00011646747589111328, 0.0, -1.33514404296875e-05, -3.62396240234375e-05, -0.000370025634765625, -7.62939453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.00012969970703125, 0.0, -0.0002460479736328125, -4.76837158203125e-05, -9.5367431640625e-06, -7.82012939453125e-05, -1.9073486328125e-05, -0.000152587890625, -4.76837158203125e-05, -0.0001373291015625, -7.62939453125e-05, -0.0003814697265625, -5.53131103515625e-05, -9.995635986328125, -1.9073486328125e-06, -0.14837646484375, -9.918212890625e-05, -0.00012350062024779618, -5.960462772236497e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dalaran", "Mage", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Dalaran", " ", "Mage", "<EOS>", 72, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 76, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(MinionDied(), ActionTag(Heal(1),\n            CharacterSelector(players=EnemyPlayer(), condition=Null)))])\n", "score": -10.224225341743896, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DalaranMage", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"hole0": "MinionDied", "_type": "Template5"}, {"func": {"_type": "Template32"}, "args": [{"func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}]}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.1444091796875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -9.775113539944869e-06, -1.0609570381348021e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -8.392333984375e-05, -2.288818359375e-05, 0.0, -8.392333984375e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.50339189733495e-06, -8.225440979003906e-06, -3.814697265625e-06, -2.3841855067985307e-07, -0.0002574920654296875, -1.71661376953125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.00011646747589111328, 0.0, -1.33514404296875e-05, -3.62396240234375e-05, -0.000370025634765625, -7.62939453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.00012969970703125, 0.0, -0.0002460479736328125, -4.76837158203125e-05, -9.5367431640625e-06, -7.82012939453125e-05, -1.9073486328125e-05, -0.000152587890625, -4.76837158203125e-05, -0.0001373291015625, -7.62939453125e-05, -0.0003814697265625, -5.53131103515625e-05, -6.695146560668945, 0.0, -0.0075969696044921875, -5.7220458984375e-06, -9.1552734375e-05, -0.0002231597900390625, -2.288818359375e-05, -0.033005714416503906, -6.67572021484375e-05, -0.05350494384765625, -0.0014629364013671875, -0.8589805364608765, -0.10172486305236816, -2.8848335205111653e-05, -8.7738037109375e-05, -0.00034332275390625, -5.14984130859375e-05, -0.000133514404296875, -0.00014495849609375, -1.71661376953125e-05, -0.8447132110595703, -3.814697265625e-06, -0.14669859409332275, -4.911411815555766e-05, -3.814697265625e-05, -0.017307281494140625, -0.05185699462890625, -0.0003528594970703125, -0.2064046859741211, -7.62939453125e-06, -0.03439676761627197, -5.4001808166503906e-05, 0.0, -0.27105140686035156, -4.57763671875e-05, -0.305461049079895, 0.0, -2.47955322265625e-05, 0.0, -0.3563447594642639, -9.775161743164062e-06, -3.814697265625e-06, -0.0007610321044921875, -0.2070150375366211, -5.7220458984375e-06, -0.02478790283203125, -0.0007991790771484375, -0.0004215240478515625, -1.9073486328125e-06, -0.000156402587890625, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dalaran", "Mage", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Dalaran", " ", "Mage", "<EOS>", 72, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 76, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 87, 193, "Minion", "Died", "<EOS>", 58, 123, 43, 217, 58, 123, 23, 146, "Heal", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Enemy", "Player", "<EOS>", 205, "condition", "<EOS>", 24, 148, "Null", "<EOS>", 71, 109]}, {"inferred_code": "", "score": -20.66618537902832, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, -1.1444091796875e-05, -20.666173934936523], "choice_history": [93, 145, 228]}, {"inferred_code": "", "score": -22.145548820495605, "model_output": {"_type": "Module", "body": [{"_type": "Template13_stmt_seq"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.1444091796875e-05, -1.1444091796875e-05, -15.211585998535156, -6.9339399337768555], "choice_history": [93, 145, 230, 109, 109]}], "index": 23}
{"beams": [{"inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n", "score": -0.48755109152601506, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "DivineSpirit", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template12"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"attr": "health", "_type": "Attribute", "value": {"_type": "Template8"}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -3.2186508178710938e-06, -7.152555099310121e-07, 0.0, -1.1444091796875e-05, -6.4849853515625e-05, -0.0029582977294921875, -7.62939453125e-06, 0.0, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -0.000301361083984375, -2.6702880859375e-05, -3.62396240234375e-05, -0.000431060791015625, -1.9073486328125e-06, -0.0062198638916015625, -3.814697265625e-06, -1.9073486328125e-06, -3.647804260253906e-05, -0.00010621508408803493, -6.0080299590481445e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.14984130859375e-05, 0.0, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.00010228157043457031, -1.9073486328125e-06, -7.05718994140625e-05, -0.005229949951171875, 0.0, -0.0001087188720703125, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -4.00543212890625e-05, -2.09808349609375e-05, -3.24249267578125e-05, 0.0, -5.340576171875e-05, 0.0, -4.00543212890625e-05, -0.0001316070556640625, -0.00048279762268066406, -7.832050323486328e-05, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0003032684326171875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.0002079010009765625, -1.1920928244535389e-07, -0.4412984848022461, -3.0517578125e-05, -0.0007038116455078125, -0.00016021728515625, -7.05718994140625e-05, -3.0517578125e-05, -9.5367431640625e-06, 0.0, -0.0008182525634765625, -0.012949705123901367, -1.9073486328125e-06, 0.0, -0.00225067138671875, 0.0, -0.0022678375244140625, -0.009510040283203125, 0.0, -5.53131103515625e-05], "choice_history": [93, 145, 230, 101, 125, "Divine", "Spirit", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Divine", " ", "Spirit", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 55, 116, 52, "health", "<EOS>", 109]}, {"inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        temp_attack = self.target.calculate_attack()\n        temp_attack = self.target.calculate_attack()\n        <UNK> = self.target.health\n", "score": -4.430640540837871, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "DivineSpirit", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template12"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}, "targets": [{"id": "temp_attack", "_type": "Name"}]}, {"_type": "Assign", "value": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}, "targets": [{"id": "temp_attack", "_type": "Name"}]}, {"_type": "Assign", "value": {"attr": "health", "_type": "Attribute", "value": {"_type": "Template8"}}, "targets": [{"id": "<UNK>", "_type": "Name"}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -3.2186508178710938e-06, -7.152555099310121e-07, 0.0, -1.1444091796875e-05, -6.4849853515625e-05, -0.0029582977294921875, -7.62939453125e-06, 0.0, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -0.000301361083984375, -2.6702880859375e-05, -3.62396240234375e-05, -0.000431060791015625, -1.9073486328125e-06, -0.0062198638916015625, -3.814697265625e-06, -1.9073486328125e-06, -3.647804260253906e-05, -0.00010621508408803493, -6.0080299590481445e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.14984130859375e-05, 0.0, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.00010228157043457031, -1.9073486328125e-06, -7.05718994140625e-05, -0.005229949951171875, 0.0, -0.0001087188720703125, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -4.00543212890625e-05, -2.09808349609375e-05, -3.24249267578125e-05, 0.0, -5.340576171875e-05, 0.0, -4.00543212890625e-05, -0.0001316070556640625, -0.00048279762268066406, -7.832050323486328e-05, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0003032684326171875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.0002079010009765625, -1.1920928244535389e-07, -1.0724754333496094, -0.0001392364501953125, -0.0015888214111328125, -3.4332275390625e-05, -9.5367431640625e-06, -8.96453857421875e-05, -2.288818359375e-05, -0.1749889850616455, -4.768370445162873e-07, -0.010989189147949219, -0.09945487976074219, -2.6702880859375e-05, -3.0517578125e-05, -0.011053085327148438, -0.007954714819788933, -1.9073486328125e-06, -0.00921630859375, -8.20159912109375e-05, -1.71661376953125e-05, -0.002239227294921875, -3.814697265625e-06, -1.758594274520874, 0.0, -0.8578720092773438, -0.03824043273925781, -7.62939453125e-06, -5.340576171875e-05, -0.024557113647460938, -0.00773521838709712, -3.814697265625e-06, -0.01219940185546875, -0.000202178955078125, -2.47955322265625e-05, -0.0054073333740234375, -3.814697265625e-06, -0.2378082275390625, -1.0728830375228426e-06, -0.013109207153320312, 0.0, -8.0108642578125e-05, -0.06588077545166016, -1.9073486328125e-06, -0.00104522705078125], "choice_history": [93, 145, 230, 101, 125, "Divine", "Spirit", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Divine", " ", "Spirit", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "temp_attack", "<EOS>", 18, 121, 15, 116, 52, "calculate_attack", "<EOS>", 98, 115, 216, 63, 146, "temp_attack", "<EOS>", 18, 121, 15, 116, 52, "calculate_attack", "<EOS>", 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 15, 116, 52, "health", "<EOS>", 109]}, {"inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        temp_attack = self.target.calculate_attack()\n        <UNK> = self.target.health\n        if temp_attack == 0:\n            self.target.die(Null)\n        else:\n            self.target.increase_health(self.target.health)\n            self.target.increase_health(self.target.health)\n", "score": -5.0863440598369465, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "DivineSpirit", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template12"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}, "targets": [{"id": "temp_attack", "_type": "Name"}]}, {"_type": "Assign", "value": {"attr": "health", "_type": "Attribute", "value": {"_type": "Template8"}}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "If", "test": {"left": {"id": "temp_attack", "_type": "Name"}, "_type": "Compare", "comparators": [{"_type": "Template31"}], "ops": [{"_type": "Eq"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"attr": "health", "_type": "Attribute", "value": {"_type": "Template8"}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"attr": "health", "_type": "Attribute", "value": {"_type": "Template8"}}], "_type": "Call"}}], "body": [{"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -3.2186508178710938e-06, -7.152555099310121e-07, 0.0, -1.1444091796875e-05, -6.4849853515625e-05, -0.0029582977294921875, -7.62939453125e-06, 0.0, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -0.000301361083984375, -2.6702880859375e-05, -3.62396240234375e-05, -0.000431060791015625, -1.9073486328125e-06, -0.0062198638916015625, -3.814697265625e-06, -1.9073486328125e-06, -3.647804260253906e-05, -0.00010621508408803493, -6.0080299590481445e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.14984130859375e-05, 0.0, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.00010228157043457031, -1.9073486328125e-06, -7.05718994140625e-05, -0.005229949951171875, 0.0, -0.0001087188720703125, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -4.00543212890625e-05, -2.09808349609375e-05, -3.24249267578125e-05, 0.0, -5.340576171875e-05, 0.0, -4.00543212890625e-05, -0.0001316070556640625, -0.00048279762268066406, -7.832050323486328e-05, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0003032684326171875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.0002079010009765625, -1.1920928244535389e-07, -1.0724754333496094, -0.0001392364501953125, -0.0015888214111328125, -3.4332275390625e-05, -9.5367431640625e-06, -8.96453857421875e-05, -2.288818359375e-05, -0.1749889850616455, -4.768370445162873e-07, -0.010989189147949219, -0.09945487976074219, -2.6702880859375e-05, -3.0517578125e-05, -0.011053085327148438, -0.007954714819788933, -1.9073486328125e-06, -0.00921630859375, -8.20159912109375e-05, -1.71661376953125e-05, -0.002239227294921875, -3.814697265625e-06, -0.31735706329345703, -9.536738616588991e-07, -0.013905525207519531, 0.0, -7.82012939453125e-05, -0.07301115989685059, -1.9073486328125e-06, -0.004291534423828125, -0.0013751983642578125, -0.00466156005859375, -0.0002346038818359375, -0.000278472900390625, -1.9073486328125e-06, -0.14777898788452148, -7.390969585685525e-06, -0.00246429443359375, -0.2955474853515625, -1.9073486328125e-06, -0.02672290802001953, -0.00011444091796875, -0.0006313323974609375, -6.67572021484375e-05, -5.14984130859375e-05, -0.001262664794921875, -5.7220458984375e-06, 0.0, -0.0001316070556640625, -0.6541785597801208, -7.987022399902344e-06, -9.5367431640625e-06, -0.012302398681640625, -7.05718994140625e-05, -2.7894973754882812e-05, -1.9073486328125e-06, -0.1814899444580078, -0.0001697540283203125, -2.09808349609375e-05, -0.0002841949462890625, -0.14769363403320312, -0.00012969970703125, 0.0, -0.0002288818359375, -0.6133550405502319, -1.9073486328125e-06, 0.0, -0.07227897644042969, -1.9073486328125e-06, -0.03944873809814453, -0.025528311729431152, -9.5367431640625e-06, -0.08596420288085938, -5.91278076171875e-05, -6.67572021484375e-05, -0.007221221923828125, -1.9073486328125e-05, 0.0, -0.021715164184570312, -0.5115880966186523, -1.9073486328125e-06, 0.0, -0.37238597869873047, -1.9073486328125e-06, -0.014952659606933594, -0.02730703353881836, -9.5367431640625e-06, -1.33514404296875e-05], "choice_history": [93, 145, 230, 101, 125, "Divine", "Spirit", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Divine", " ", "Spirit", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "temp_attack", "<EOS>", 18, 121, 15, 116, 52, "calculate_attack", "<EOS>", 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 15, 116, 52, "health", "<EOS>", 105, 134, 19, 126, 23, 146, "temp_attack", "<EOS>", 213, 6, 216, 83, 229, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 64, 148, "Null", "<EOS>", 230, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 55, 116, 52, "health", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 55, 116, 52, "health", "<EOS>", 109]}, {"inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n", "score": -5.363291621055154, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "DivineSpirit", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template12"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"attr": "health", "_type": "Attribute", "value": {"_type": "Template8"}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -3.2186508178710938e-06, -7.152555099310121e-07, 0.0, -1.1444091796875e-05, -6.4849853515625e-05, -0.0029582977294921875, -7.62939453125e-06, 0.0, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -0.000301361083984375, -2.6702880859375e-05, -3.62396240234375e-05, -0.000431060791015625, -1.9073486328125e-06, -5.1608171463012695, -1.9073486328125e-06, 0.0, -8.428096771240234e-05, -0.00010740751895355061, -8.487691229674965e-05, -0.0002614259719848633, -0.0004863739013671875, -4.1961669921875e-05, 0.0, 0.0, 0.0, -5.53131103515625e-05, 0.0, -9.739398956298828e-05, 0.0, -0.000110626220703125, -0.011941909790039062, -3.0517578125e-05, 0.0, -9.72747802734375e-05, 0.0, -7.62939453125e-06, -4.57763671875e-05, -1.1444091796875e-05, -2.86102294921875e-05, -2.86102294921875e-05, 0.0, -3.0517578125e-05, 0.0, -0.0001220703125, -2.86102294921875e-05, -0.0005781650543212891, -6.496906280517578e-05, -2.288818359375e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.000301361083984375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -6.29425048828125e-05, -1.1920928244535389e-07, -0.15421581268310547, -5.91278076171875e-05, -0.000652313232421875, -0.0001621246337890625, -6.866455078125e-05, -3.0517578125e-05, -9.5367431640625e-06, 0.0, -0.0007724761962890625, -0.01369178295135498, -1.9073486328125e-06, 0.0, -0.0022878646850585938, 0.0, -0.0022945404052734375, -0.009527206420898438, 0.0, -5.53131103515625e-05], "choice_history": [93, 145, 230, 101, 125, "Divine", "Spirit", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Divine", " ", "Spirit", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 88, 80, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 55, 116, 52, "health", "<EOS>", 109]}, {"inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        temp_attack = self.target.calculate_attack()\n        <UNK> = self.target.health\n        if temp_attack == 0:\n            self.target.die(Null)\n        else:\n            self.target.die(Null)\n", "score": -5.439000573289476, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "DivineSpirit", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template12"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}, "targets": [{"id": "temp_attack", "_type": "Name"}]}, {"_type": "Assign", "value": {"attr": "health", "_type": "Attribute", "value": {"_type": "Template8"}}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "If", "test": {"left": {"id": "temp_attack", "_type": "Name"}, "_type": "Compare", "comparators": [{"_type": "Template31"}], "ops": [{"_type": "Eq"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call"}}], "body": [{"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -3.2186508178710938e-06, -7.152555099310121e-07, 0.0, -1.1444091796875e-05, -6.4849853515625e-05, -0.0029582977294921875, -7.62939453125e-06, 0.0, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -0.000301361083984375, -2.6702880859375e-05, -3.62396240234375e-05, -0.000431060791015625, -1.9073486328125e-06, -0.0062198638916015625, -3.814697265625e-06, -1.9073486328125e-06, -3.647804260253906e-05, -0.00010621508408803493, -6.0080299590481445e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.14984130859375e-05, 0.0, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.00010228157043457031, -1.9073486328125e-06, -7.05718994140625e-05, -0.005229949951171875, 0.0, -0.0001087188720703125, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -4.00543212890625e-05, -2.09808349609375e-05, -3.24249267578125e-05, 0.0, -5.340576171875e-05, 0.0, -4.00543212890625e-05, -0.0001316070556640625, -0.00048279762268066406, -7.832050323486328e-05, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0003032684326171875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.0002079010009765625, -1.1920928244535389e-07, -1.0724754333496094, -0.0001392364501953125, -0.0015888214111328125, -3.4332275390625e-05, -9.5367431640625e-06, -8.96453857421875e-05, -2.288818359375e-05, -0.1749889850616455, -4.768370445162873e-07, -0.010989189147949219, -0.09945487976074219, -2.6702880859375e-05, -3.0517578125e-05, -0.011053085327148438, -0.007954714819788933, -1.9073486328125e-06, -0.00921630859375, -8.20159912109375e-05, -1.71661376953125e-05, -0.002239227294921875, -3.814697265625e-06, -0.31735706329345703, -9.536738616588991e-07, -0.013905525207519531, 0.0, -7.82012939453125e-05, -0.07301115989685059, -1.9073486328125e-06, -0.004291534423828125, -0.0013751983642578125, -0.00466156005859375, -0.0002346038818359375, -0.000278472900390625, -1.9073486328125e-06, -0.14777898788452148, -7.390969585685525e-06, -0.00246429443359375, -0.2955474853515625, -1.9073486328125e-06, -0.02672290802001953, -0.00011444091796875, -0.0006313323974609375, -6.67572021484375e-05, -5.14984130859375e-05, -0.001262664794921875, -5.7220458984375e-06, 0.0, -0.0001316070556640625, -0.6541785597801208, -7.987022399902344e-06, -9.5367431640625e-06, -0.012302398681640625, -7.05718994140625e-05, -2.7894973754882812e-05, -1.9073486328125e-06, -1.7982730865478516, -7.62939453125e-06, -3.814697265625e-06, -1.52587890625e-05, -0.17067337036132812, -1.33514404296875e-05, 0.0, -0.0004978179931640625, -0.4839842617511749, -2.574920654296875e-05, -1.9073486328125e-06, -0.02088451385498047, -8.96453857421875e-05, -0.00012600421905517578, -7.62939453125e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Divine", "Spirit", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Divine", " ", "Spirit", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "temp_attack", "<EOS>", 18, 121, 15, 116, 52, "calculate_attack", "<EOS>", 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 15, 116, 52, "health", "<EOS>", 105, 134, 19, 126, 23, 146, "temp_attack", "<EOS>", 213, 6, 216, 83, 229, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 64, 148, "Null", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 64, 148, "Null", "<EOS>", 109]}, {"inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        temp_attack = self.target.calculate_attack()\n        <UNK> = self.target.health\n        if temp_attack == 0:\n            self.target.die(Null)\n        else:\n            self.target.die(Null)\n            self.target.<UNK>()\n", "score": -5.613027271163546, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "DivineSpirit", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template12"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}, "targets": [{"id": "temp_attack", "_type": "Name"}]}, {"_type": "Assign", "value": {"attr": "health", "_type": "Attribute", "value": {"_type": "Template8"}}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "If", "test": {"left": {"id": "temp_attack", "_type": "Name"}, "_type": "Compare", "comparators": [{"_type": "Template31"}], "ops": [{"_type": "Eq"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}}], "body": [{"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -3.2186508178710938e-06, -7.152555099310121e-07, 0.0, -1.1444091796875e-05, -6.4849853515625e-05, -0.0029582977294921875, -7.62939453125e-06, 0.0, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -0.000301361083984375, -2.6702880859375e-05, -3.62396240234375e-05, -0.000431060791015625, -1.9073486328125e-06, -0.0062198638916015625, -3.814697265625e-06, -1.9073486328125e-06, -3.647804260253906e-05, -0.00010621508408803493, -6.0080299590481445e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.14984130859375e-05, 0.0, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.00010228157043457031, -1.9073486328125e-06, -7.05718994140625e-05, -0.005229949951171875, 0.0, -0.0001087188720703125, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -4.00543212890625e-05, -2.09808349609375e-05, -3.24249267578125e-05, 0.0, -5.340576171875e-05, 0.0, -4.00543212890625e-05, -0.0001316070556640625, -0.00048279762268066406, -7.832050323486328e-05, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0003032684326171875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.0002079010009765625, -1.1920928244535389e-07, -1.0724754333496094, -0.0001392364501953125, -0.0015888214111328125, -3.4332275390625e-05, -9.5367431640625e-06, -8.96453857421875e-05, -2.288818359375e-05, -0.1749889850616455, -4.768370445162873e-07, -0.010989189147949219, -0.09945487976074219, -2.6702880859375e-05, -3.0517578125e-05, -0.011053085327148438, -0.007954714819788933, -1.9073486328125e-06, -0.00921630859375, -8.20159912109375e-05, -1.71661376953125e-05, -0.002239227294921875, -3.814697265625e-06, -0.31735706329345703, -9.536738616588991e-07, -0.013905525207519531, 0.0, -7.82012939453125e-05, -0.07301115989685059, -1.9073486328125e-06, -0.004291534423828125, -0.0013751983642578125, -0.00466156005859375, -0.0002346038818359375, -0.000278472900390625, -1.9073486328125e-06, -0.14777898788452148, -7.390969585685525e-06, -0.00246429443359375, -0.2955474853515625, -1.9073486328125e-06, -0.02672290802001953, -0.00011444091796875, -0.0006313323974609375, -6.67572021484375e-05, -5.14984130859375e-05, -0.001262664794921875, -5.7220458984375e-06, 0.0, -0.0001316070556640625, -0.6541785597801208, -7.987022399902344e-06, -9.5367431640625e-06, -0.012302398681640625, -7.05718994140625e-05, -2.7894973754882812e-05, -1.9073486328125e-06, -0.1814899444580078, -0.0001697540283203125, -2.09808349609375e-05, -0.0002841949462890625, -0.14769363403320312, -0.00012969970703125, 0.0, -0.0002288818359375, -1.7534373998641968, -7.748603820800781e-06, -1.9073486328125e-06, -0.08811283111572266, -0.0001277923583984375, -0.0002117156982421875, -7.62939453125e-06, -8.0108642578125e-05, -9.72747802734375e-05, -0.003322601318359375, -0.04203033447265625, -5.7220458984375e-06, 0.0, -0.25638484954833984, -0.174780011177063, 0.0, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Divine", "Spirit", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Divine", " ", "Spirit", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "temp_attack", "<EOS>", 18, 121, 15, 116, 52, "calculate_attack", "<EOS>", 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 15, 116, 52, "health", "<EOS>", 105, 134, 19, 126, 23, 146, "temp_attack", "<EOS>", 213, 6, 216, 83, 229, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 64, 148, "Null", "<EOS>", 230, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 64, 148, "Null", "<EOS>", 102, 128, 18, 121, 15, 116, 52, "<UNK>", "<EOS>", 109]}, {"inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.increase_health)\n", "score": -5.718362687442763, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "DivineSpirit", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template12"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -3.2186508178710938e-06, -7.152555099310121e-07, 0.0, -1.1444091796875e-05, -6.4849853515625e-05, -0.0029582977294921875, -7.62939453125e-06, 0.0, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -0.000301361083984375, -2.6702880859375e-05, -3.62396240234375e-05, -0.000431060791015625, -1.9073486328125e-06, -0.0062198638916015625, -3.814697265625e-06, -1.9073486328125e-06, -3.647804260253906e-05, -0.00010621508408803493, -6.0080299590481445e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.14984130859375e-05, 0.0, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.00010228157043457031, -1.9073486328125e-06, -7.05718994140625e-05, -0.005229949951171875, 0.0, -0.0001087188720703125, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -4.00543212890625e-05, -2.09808349609375e-05, -3.24249267578125e-05, 0.0, -5.340576171875e-05, 0.0, -4.00543212890625e-05, -0.0001316070556640625, -0.00048279762268066406, -7.832050323486328e-05, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0003032684326171875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.0002079010009765625, -1.1920928244535389e-07, -0.4412984848022461, -3.0517578125e-05, -0.0007038116455078125, -0.00016021728515625, -7.05718994140625e-05, -3.0517578125e-05, -9.5367431640625e-06, 0.0, -0.0008182525634765625, -0.012949705123901367, -1.9073486328125e-06, 0.0, -0.00225067138671875, 0.0, -0.0022678375244140625, -5.240182399749756, -3.814697265625e-06, -0.00019073486328125], "choice_history": [93, 145, 230, 101, 125, "Divine", "Spirit", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Divine", " ", "Spirit", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 55, 116, 52, "increase_health", "<EOS>", 109]}, {"inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        temp_attack = self.target.calculate_attack()\n        <UNK> = self.target.health\n        if temp_attack == 0:\n            self.target.die(Null)\n        else:\n            self.target.set_health_to(temp_attack)\n            self.target.increase_health(self.target.health)\n", "score": -5.757550295722567, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "DivineSpirit", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template12"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}, "targets": [{"id": "temp_attack", "_type": "Name"}]}, {"_type": "Assign", "value": {"attr": "health", "_type": "Attribute", "value": {"_type": "Template8"}}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "If", "test": {"left": {"id": "temp_attack", "_type": "Name"}, "_type": "Compare", "comparators": [{"_type": "Template31"}], "ops": [{"_type": "Eq"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "set_health_to", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"id": "temp_attack", "_type": "Name"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"attr": "health", "_type": "Attribute", "value": {"_type": "Template8"}}], "_type": "Call"}}], "body": [{"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -3.2186508178710938e-06, -7.152555099310121e-07, 0.0, -1.1444091796875e-05, -6.4849853515625e-05, -0.0029582977294921875, -7.62939453125e-06, 0.0, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -0.000301361083984375, -2.6702880859375e-05, -3.62396240234375e-05, -0.000431060791015625, -1.9073486328125e-06, -0.0062198638916015625, -3.814697265625e-06, -1.9073486328125e-06, -3.647804260253906e-05, -0.00010621508408803493, -6.0080299590481445e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.14984130859375e-05, 0.0, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.00010228157043457031, -1.9073486328125e-06, -7.05718994140625e-05, -0.005229949951171875, 0.0, -0.0001087188720703125, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -4.00543212890625e-05, -2.09808349609375e-05, -3.24249267578125e-05, 0.0, -5.340576171875e-05, 0.0, -4.00543212890625e-05, -0.0001316070556640625, -0.00048279762268066406, -7.832050323486328e-05, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0003032684326171875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.0002079010009765625, -1.1920928244535389e-07, -1.0724754333496094, -0.0001392364501953125, -0.0015888214111328125, -3.4332275390625e-05, -9.5367431640625e-06, -8.96453857421875e-05, -2.288818359375e-05, -0.1749889850616455, -4.768370445162873e-07, -0.010989189147949219, -0.09945487976074219, -2.6702880859375e-05, -3.0517578125e-05, -0.011053085327148438, -0.007954714819788933, -1.9073486328125e-06, -0.00921630859375, -8.20159912109375e-05, -1.71661376953125e-05, -0.002239227294921875, -3.814697265625e-06, -0.31735706329345703, -9.536738616588991e-07, -0.013905525207519531, 0.0, -7.82012939453125e-05, -0.07301115989685059, -1.9073486328125e-06, -0.004291534423828125, -0.0013751983642578125, -0.00466156005859375, -0.0002346038818359375, -0.000278472900390625, -1.9073486328125e-06, -0.14777898788452148, -7.390969585685525e-06, -0.00246429443359375, -0.2955474853515625, -1.9073486328125e-06, -0.02672290802001953, -0.00011444091796875, -0.0006313323974609375, -6.67572021484375e-05, -5.14984130859375e-05, -0.001262664794921875, -5.7220458984375e-06, 0.0, -0.0001316070556640625, -0.6541785597801208, -7.987022399902344e-06, -9.5367431640625e-06, -0.012302398681640625, -7.05718994140625e-05, -2.7894973754882812e-05, -1.9073486328125e-06, -0.1814899444580078, -0.0001697540283203125, -2.09808349609375e-05, -0.0002841949462890625, -0.14769363403320312, -0.00012969970703125, 0.0, -0.0002288818359375, -1.6651109457015991, -1.9073486328125e-06, 0.0, -0.008205413818359375, -1.9073486328125e-06, -0.47077107429504395, 0.0, -9.918212890625e-05, -4.00543212890625e-05, -0.00069427490234375, -0.051815032958984375, -3.814697265625e-06, 0.0, -0.0030307769775390625, -0.18459224700927734, -1.9073486328125e-06, 0.0, -0.0070056915283203125, 0.0, -0.041698455810546875, -0.030041098594665527, -1.9073486328125e-06, -2.09808349609375e-05], "choice_history": [93, 145, 230, 101, 125, "Divine", "Spirit", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Divine", " ", "Spirit", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "temp_attack", "<EOS>", 18, 121, 15, 116, 52, "calculate_attack", "<EOS>", 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 15, 116, 52, "health", "<EOS>", 105, 134, 19, 126, 23, 146, "temp_attack", "<EOS>", 213, 6, 216, 83, 229, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 64, 148, "Null", "<EOS>", 230, 102, 128, 18, 123, 15, 116, 52, "set_health_to", "<EOS>", 216, 63, 146, "temp_attack", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 55, 116, 52, "health", "<EOS>", 109]}, {"inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self.target.health)\n", "score": -5.8490821107368305, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "DivineSpirit", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template12"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"attr": "health", "_type": "Attribute", "value": {"_type": "Template8"}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -3.2186508178710938e-06, -7.152555099310121e-07, 0.0, -1.1444091796875e-05, -6.4849853515625e-05, -0.0029582977294921875, -7.62939453125e-06, 0.0, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -0.000301361083984375, -2.6702880859375e-05, -3.62396240234375e-05, -0.000431060791015625, -1.9073486328125e-06, -0.0062198638916015625, -3.814697265625e-06, -1.9073486328125e-06, -3.647804260253906e-05, -0.00010621508408803493, -6.0080299590481445e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.14984130859375e-05, 0.0, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.00010228157043457031, -1.9073486328125e-06, -7.05718994140625e-05, -0.005229949951171875, 0.0, -0.0001087188720703125, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -4.00543212890625e-05, -2.09808349609375e-05, -3.24249267578125e-05, 0.0, -5.340576171875e-05, 0.0, -4.00543212890625e-05, -0.0001316070556640625, -0.00048279762268066406, -7.832050323486328e-05, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0003032684326171875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.0002079010009765625, -1.1920928244535389e-07, -0.4412984848022461, -3.0517578125e-05, -0.0007038116455078125, -0.00016021728515625, -7.05718994140625e-05, -3.0517578125e-05, -9.5367431640625e-06, 0.0, -0.0008182525634765625, -5.346371173858643, 0.0, 0.0, -0.032428741455078125, 0.0, -0.0009517669677734375, -0.008749961853027344, 0.0, -6.4849853515625e-05], "choice_history": [93, 145, 230, 101, 125, "Divine", "Spirit", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Divine", " ", "Spirit", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 55, 116, 52, "health", "<EOS>", 109]}, {"inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        temp_attack = self.target.calculate_attack()\n        <UNK> = self.target.health\n        if temp_attack == 0:\n            self.target.die(Null)\n        else:\n            self.target.increase_health(self.target.health)\n            self.target.set_health_to(temp_attack)\n", "score": -5.867978629005037, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "DivineSpirit", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template12"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}, "targets": [{"id": "temp_attack", "_type": "Name"}]}, {"_type": "Assign", "value": {"attr": "health", "_type": "Attribute", "value": {"_type": "Template8"}}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "If", "test": {"left": {"id": "temp_attack", "_type": "Name"}, "_type": "Compare", "comparators": [{"_type": "Template31"}], "ops": [{"_type": "Eq"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"attr": "health", "_type": "Attribute", "value": {"_type": "Template8"}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "set_health_to", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"id": "temp_attack", "_type": "Name"}], "_type": "Call"}}], "body": [{"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -3.2186508178710938e-06, -7.152555099310121e-07, 0.0, -1.1444091796875e-05, -6.4849853515625e-05, -0.0029582977294921875, -7.62939453125e-06, 0.0, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -0.000301361083984375, -2.6702880859375e-05, -3.62396240234375e-05, -0.000431060791015625, -1.9073486328125e-06, -0.0062198638916015625, -3.814697265625e-06, -1.9073486328125e-06, -3.647804260253906e-05, -0.00010621508408803493, -6.0080299590481445e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.14984130859375e-05, 0.0, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.00010228157043457031, -1.9073486328125e-06, -7.05718994140625e-05, -0.005229949951171875, 0.0, -0.0001087188720703125, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -4.00543212890625e-05, -2.09808349609375e-05, -3.24249267578125e-05, 0.0, -5.340576171875e-05, 0.0, -4.00543212890625e-05, -0.0001316070556640625, -0.00048279762268066406, -7.832050323486328e-05, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0003032684326171875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.0002079010009765625, -1.1920928244535389e-07, -1.0724754333496094, -0.0001392364501953125, -0.0015888214111328125, -3.4332275390625e-05, -9.5367431640625e-06, -8.96453857421875e-05, -2.288818359375e-05, -0.1749889850616455, -4.768370445162873e-07, -0.010989189147949219, -0.09945487976074219, -2.6702880859375e-05, -3.0517578125e-05, -0.011053085327148438, -0.007954714819788933, -1.9073486328125e-06, -0.00921630859375, -8.20159912109375e-05, -1.71661376953125e-05, -0.002239227294921875, -3.814697265625e-06, -0.31735706329345703, -9.536738616588991e-07, -0.013905525207519531, 0.0, -7.82012939453125e-05, -0.07301115989685059, -1.9073486328125e-06, -0.004291534423828125, -0.0013751983642578125, -0.00466156005859375, -0.0002346038818359375, -0.000278472900390625, -1.9073486328125e-06, -0.14777898788452148, -7.390969585685525e-06, -0.00246429443359375, -0.2955474853515625, -1.9073486328125e-06, -0.02672290802001953, -0.00011444091796875, -0.0006313323974609375, -6.67572021484375e-05, -5.14984130859375e-05, -0.001262664794921875, -5.7220458984375e-06, 0.0, -0.0001316070556640625, -0.6541785597801208, -7.987022399902344e-06, -9.5367431640625e-06, -0.012302398681640625, -7.05718994140625e-05, -2.7894973754882812e-05, -1.9073486328125e-06, -0.1814899444580078, -0.0001697540283203125, -2.09808349609375e-05, -0.0002841949462890625, -0.14769363403320312, -0.00012969970703125, 0.0, -0.0002288818359375, -0.6133550405502319, -1.9073486328125e-06, 0.0, -0.07227897644042969, -1.9073486328125e-06, -0.03944873809814453, -0.025528311729431152, -9.5367431640625e-06, -0.08596420288085938, -5.91278076171875e-05, -6.67572021484375e-05, -0.007221221923828125, -1.9073486328125e-05, 0.0, -0.021715164184570312, -1.3880424499511719, -1.9073486328125e-06, 0.0, -0.0014972686767578125, 0.0, -0.3183457851409912, 0.0, -7.62939453125e-06], "choice_history": [93, 145, 230, 101, 125, "Divine", "Spirit", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Divine", " ", "Spirit", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "temp_attack", "<EOS>", 18, 121, 15, 116, 52, "calculate_attack", "<EOS>", 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 15, 116, 52, "health", "<EOS>", 105, 134, 19, 126, 23, 146, "temp_attack", "<EOS>", 213, 6, 216, 83, 229, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 64, 148, "Null", "<EOS>", 230, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 55, 116, 52, "health", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "set_health_to", "<EOS>", 216, 63, 146, "temp_attack", "<EOS>", 109]}, {"inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        temp_attack = self.target.calculate_attack()\n        <UNK> = self.target.health\n        if temp_attack == 0:\n            self.target.die(Null)\n        else:\n            self.target.increase_health(self.target.health)\n            self.target.increase_health(<UNK>)\n", "score": -6.3459834421538375, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "DivineSpirit", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template12"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}, "targets": [{"id": "temp_attack", "_type": "Name"}]}, {"_type": "Assign", "value": {"attr": "health", "_type": "Attribute", "value": {"_type": "Template8"}}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "If", "test": {"left": {"id": "temp_attack", "_type": "Name"}, "_type": "Compare", "comparators": [{"_type": "Template31"}], "ops": [{"_type": "Eq"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"attr": "health", "_type": "Attribute", "value": {"_type": "Template8"}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}}], "body": [{"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -3.2186508178710938e-06, -7.152555099310121e-07, 0.0, -1.1444091796875e-05, -6.4849853515625e-05, -0.0029582977294921875, -7.62939453125e-06, 0.0, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -0.000301361083984375, -2.6702880859375e-05, -3.62396240234375e-05, -0.000431060791015625, -1.9073486328125e-06, -0.0062198638916015625, -3.814697265625e-06, -1.9073486328125e-06, -3.647804260253906e-05, -0.00010621508408803493, -6.0080299590481445e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.14984130859375e-05, 0.0, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.00010228157043457031, -1.9073486328125e-06, -7.05718994140625e-05, -0.005229949951171875, 0.0, -0.0001087188720703125, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -4.00543212890625e-05, -2.09808349609375e-05, -3.24249267578125e-05, 0.0, -5.340576171875e-05, 0.0, -4.00543212890625e-05, -0.0001316070556640625, -0.00048279762268066406, -7.832050323486328e-05, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0003032684326171875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.0002079010009765625, -1.1920928244535389e-07, -1.0724754333496094, -0.0001392364501953125, -0.0015888214111328125, -3.4332275390625e-05, -9.5367431640625e-06, -8.96453857421875e-05, -2.288818359375e-05, -0.1749889850616455, -4.768370445162873e-07, -0.010989189147949219, -0.09945487976074219, -2.6702880859375e-05, -3.0517578125e-05, -0.011053085327148438, -0.007954714819788933, -1.9073486328125e-06, -0.00921630859375, -8.20159912109375e-05, -1.71661376953125e-05, -0.002239227294921875, -3.814697265625e-06, -0.31735706329345703, -9.536738616588991e-07, -0.013905525207519531, 0.0, -7.82012939453125e-05, -0.07301115989685059, -1.9073486328125e-06, -0.004291534423828125, -0.0013751983642578125, -0.00466156005859375, -0.0002346038818359375, -0.000278472900390625, -1.9073486328125e-06, -0.14777898788452148, -7.390969585685525e-06, -0.00246429443359375, -0.2955474853515625, -1.9073486328125e-06, -0.02672290802001953, -0.00011444091796875, -0.0006313323974609375, -6.67572021484375e-05, -5.14984130859375e-05, -0.001262664794921875, -5.7220458984375e-06, 0.0, -0.0001316070556640625, -0.6541785597801208, -7.987022399902344e-06, -9.5367431640625e-06, -0.012302398681640625, -7.05718994140625e-05, -2.7894973754882812e-05, -1.9073486328125e-06, -0.1814899444580078, -0.0001697540283203125, -2.09808349609375e-05, -0.0002841949462890625, -0.14769363403320312, -0.00012969970703125, 0.0, -0.0002288818359375, -0.6133550405502319, -1.9073486328125e-06, 0.0, -0.07227897644042969, -1.9073486328125e-06, -0.03944873809814453, -0.025528311729431152, -9.5367431640625e-06, -0.08596420288085938, -5.91278076171875e-05, -6.67572021484375e-05, -0.007221221923828125, -1.9073486328125e-05, 0.0, -0.021715164184570312, -0.5115880966186523, -1.9073486328125e-06, 0.0, -1.2316045761108398, -3.814697265625e-06, -0.44268620014190674, -1.1444046322139911e-05, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Divine", "Spirit", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Divine", " ", "Spirit", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "temp_attack", "<EOS>", 18, 121, 15, 116, 52, "calculate_attack", "<EOS>", 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 15, 116, 52, "health", "<EOS>", 105, 134, 19, 126, 23, 146, "temp_attack", "<EOS>", 213, 6, 216, 83, 229, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 64, 148, "Null", "<EOS>", 230, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 55, 116, 52, "health", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 63, 146, "<UNK>", "<EOS>", 109]}, {"inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        temp_attack = self.target.calculate_attack()\n        <UNK> = self.target.health\n        if temp_attack is Null:\n            self.target.die(Null)\n        else:\n            self.target.set_health_to(temp_attack)\n            self.target.increase_health(self.target.health)\n", "score": -6.767252203353664, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "DivineSpirit", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template12"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}, "targets": [{"id": "temp_attack", "_type": "Name"}]}, {"_type": "Assign", "value": {"attr": "health", "_type": "Attribute", "value": {"_type": "Template8"}}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "If", "test": {"left": {"id": "temp_attack", "_type": "Name"}, "_type": "Compare", "comparators": [{"_type": "NameConstant", "value": "Null"}], "ops": [{"_type": "Is"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "set_health_to", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"id": "temp_attack", "_type": "Name"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"attr": "health", "_type": "Attribute", "value": {"_type": "Template8"}}], "_type": "Call"}}], "body": [{"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -3.2186508178710938e-06, -7.152555099310121e-07, 0.0, -1.1444091796875e-05, -6.4849853515625e-05, -0.0029582977294921875, -7.62939453125e-06, 0.0, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -0.000301361083984375, -2.6702880859375e-05, -3.62396240234375e-05, -0.000431060791015625, -1.9073486328125e-06, -0.0062198638916015625, -3.814697265625e-06, -1.9073486328125e-06, -3.647804260253906e-05, -0.00010621508408803493, -6.0080299590481445e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.14984130859375e-05, 0.0, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.00010228157043457031, -1.9073486328125e-06, -7.05718994140625e-05, -0.005229949951171875, 0.0, -0.0001087188720703125, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -4.00543212890625e-05, -2.09808349609375e-05, -3.24249267578125e-05, 0.0, -5.340576171875e-05, 0.0, -4.00543212890625e-05, -0.0001316070556640625, -0.00048279762268066406, -7.832050323486328e-05, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0003032684326171875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.0002079010009765625, -1.1920928244535389e-07, -1.0724754333496094, -0.0001392364501953125, -0.0015888214111328125, -3.4332275390625e-05, -9.5367431640625e-06, -8.96453857421875e-05, -2.288818359375e-05, -0.1749889850616455, -4.768370445162873e-07, -0.010989189147949219, -0.09945487976074219, -2.6702880859375e-05, -3.0517578125e-05, -0.011053085327148438, -0.007954714819788933, -1.9073486328125e-06, -0.00921630859375, -8.20159912109375e-05, -1.71661376953125e-05, -0.002239227294921875, -3.814697265625e-06, -0.31735706329345703, -9.536738616588991e-07, -0.013905525207519531, 0.0, -7.82012939453125e-05, -0.07301115989685059, -1.9073486328125e-06, -0.004291534423828125, -0.0013751983642578125, -0.00466156005859375, -0.0002346038818359375, -0.000278472900390625, -1.9073486328125e-06, -0.14777898788452148, -7.390969585685525e-06, -0.00246429443359375, -1.5836362838745117, -5.7220458984375e-06, -1.1639299392700195, -0.0002651214599609375, -3.5524364648154005e-05, 0.0, -0.013675689697265625, -0.000102996826171875, -3.814697265625e-06, -2.09808349609375e-05, -0.000934600830078125, -0.0001087188720703125, 0.0, -0.0005245208740234375, -0.15876305103302002, -3.933906555175781e-06, -1.9073486328125e-06, -0.03241920471191406, -0.0001010894775390625, -6.306171417236328e-05, -3.814697265625e-06, -0.036167144775390625, -0.000194549560546875, -1.52587890625e-05, -0.000202178955078125, -0.06740188598632812, -0.000408172607421875, 0.0, -0.003192901611328125, -1.1674453020095825, -1.9073486328125e-06, 0.0, -0.0023660659790039062, -1.9073486328125e-06, -0.3091390132904053, 0.0, -0.000152587890625, -4.57763671875e-05, -0.000865936279296875, -0.013566970825195312, -9.5367431640625e-06, 0.0, -0.01094818115234375, -0.15244603157043457, -3.814697265625e-06, 0.0, -0.0028810501098632812, 0.0, -0.049376487731933594, -0.022535324096679688, -5.7220458984375e-06, -1.71661376953125e-05], "choice_history": [93, 145, 230, 101, 125, "Divine", "Spirit", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Divine", " ", "Spirit", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "temp_attack", "<EOS>", 18, 121, 15, 116, 52, "calculate_attack", "<EOS>", 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 15, 116, 52, "health", "<EOS>", 105, 134, 19, 126, 23, 146, "temp_attack", "<EOS>", 213, 10, 216, 64, 148, "Null", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 64, 148, "Null", "<EOS>", 230, 102, 128, 18, 123, 15, 116, 52, "set_health_to", "<EOS>", 216, 63, 146, "temp_attack", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 55, 116, 52, "health", "<EOS>", 109]}, {"inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        temp_attack = self.target.calculate_attack()\n        <UNK> = self.target.health\n        if temp_attack is Null:\n            self.target.die(Null)\n        else:\n            self.target.increase_health(self.target.health)\n            self.target.increase_health(self.target.health)\n", "score": -7.145056601890346, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "DivineSpirit", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template12"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}, "targets": [{"id": "temp_attack", "_type": "Name"}]}, {"_type": "Assign", "value": {"attr": "health", "_type": "Attribute", "value": {"_type": "Template8"}}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "If", "test": {"left": {"id": "temp_attack", "_type": "Name"}, "_type": "Compare", "comparators": [{"_type": "NameConstant", "value": "Null"}], "ops": [{"_type": "Is"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"attr": "health", "_type": "Attribute", "value": {"_type": "Template8"}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"attr": "health", "_type": "Attribute", "value": {"_type": "Template8"}}], "_type": "Call"}}], "body": [{"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -3.2186508178710938e-06, -7.152555099310121e-07, 0.0, -1.1444091796875e-05, -6.4849853515625e-05, -0.0029582977294921875, -7.62939453125e-06, 0.0, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -0.000301361083984375, -2.6702880859375e-05, -3.62396240234375e-05, -0.000431060791015625, -1.9073486328125e-06, -0.0062198638916015625, -3.814697265625e-06, -1.9073486328125e-06, -3.647804260253906e-05, -0.00010621508408803493, -6.0080299590481445e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.14984130859375e-05, 0.0, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.00010228157043457031, -1.9073486328125e-06, -7.05718994140625e-05, -0.005229949951171875, 0.0, -0.0001087188720703125, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -4.00543212890625e-05, -2.09808349609375e-05, -3.24249267578125e-05, 0.0, -5.340576171875e-05, 0.0, -4.00543212890625e-05, -0.0001316070556640625, -0.00048279762268066406, -7.832050323486328e-05, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0003032684326171875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.0002079010009765625, -1.1920928244535389e-07, -1.0724754333496094, -0.0001392364501953125, -0.0015888214111328125, -3.4332275390625e-05, -9.5367431640625e-06, -8.96453857421875e-05, -2.288818359375e-05, -0.1749889850616455, -4.768370445162873e-07, -0.010989189147949219, -0.09945487976074219, -2.6702880859375e-05, -3.0517578125e-05, -0.011053085327148438, -0.007954714819788933, -1.9073486328125e-06, -0.00921630859375, -8.20159912109375e-05, -1.71661376953125e-05, -0.002239227294921875, -3.814697265625e-06, -0.31735706329345703, -9.536738616588991e-07, -0.013905525207519531, 0.0, -7.82012939453125e-05, -0.07301115989685059, -1.9073486328125e-06, -0.004291534423828125, -0.0013751983642578125, -0.00466156005859375, -0.0002346038818359375, -0.000278472900390625, -1.9073486328125e-06, -0.14777898788452148, -7.390969585685525e-06, -0.00246429443359375, -1.5836362838745117, -5.7220458984375e-06, -1.1639299392700195, -0.0002651214599609375, -3.5524364648154005e-05, 0.0, -0.013675689697265625, -0.000102996826171875, -3.814697265625e-06, -2.09808349609375e-05, -0.000934600830078125, -0.0001087188720703125, 0.0, -0.0005245208740234375, -0.15876305103302002, -3.933906555175781e-06, -1.9073486328125e-06, -0.03241920471191406, -0.0001010894775390625, -6.306171417236328e-05, -3.814697265625e-06, -0.036167144775390625, -0.000194549560546875, -1.52587890625e-05, -0.000202178955078125, -0.06740188598632812, -0.000408172607421875, 0.0, -0.003192901611328125, -0.6509495973587036, -1.9073486328125e-06, 0.0, -0.1705760955810547, -1.9073486328125e-06, -0.014861106872558594, -0.016727089881896973, -2.09808349609375e-05, -0.23938369750976562, -0.0001087188720703125, -0.0001125335693359375, -0.01126861572265625, -2.288818359375e-05, 0.0, -0.01593017578125, -0.5605146884918213, -1.9073486328125e-06, 0.0, -0.37532615661621094, -1.9073486328125e-06, -0.032235145568847656, -0.021535634994506836, -1.71661376953125e-05, -1.52587890625e-05], "choice_history": [93, 145, 230, 101, 125, "Divine", "Spirit", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Divine", " ", "Spirit", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "temp_attack", "<EOS>", 18, 121, 15, 116, 52, "calculate_attack", "<EOS>", 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 15, 116, 52, "health", "<EOS>", 105, 134, 19, 126, 23, 146, "temp_attack", "<EOS>", 213, 10, 216, 64, 148, "Null", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 64, 148, "Null", "<EOS>", 230, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 55, 116, 52, "health", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 55, 116, 52, "health", "<EOS>", 109]}, {"inferred_code": "super().use(player, game)\n", "score": -20.829822540283203, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -5.7220458984375e-06, -1.9073486328125e-06, -15.28012466430664, -5.549690246582031], "choice_history": [93, 145, 230, 108, 109]}, {"inferred_code": "", "score": -21.73224639892578, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, -5.7220458984375e-06, -21.732240676879883], "choice_history": [93, 145, 228]}], "index": 24}
{"beams": [{"inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -0.028792479317729658, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DragonlingMechanic", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template20"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Summon", "_type": "Name"}, "args": [{"hole0": "MechanicalDragonling", "_type": "Template5"}], "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template5"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 4, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.329813186312094e-05, -1.3828206647303887e-05, -3.755028956220485e-05, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -2.3841855067985307e-07, 0.0, 0.0, -0.000247955322265625, -4.57763671875e-05, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, -1.0967194612021558e-05, -1.7285339708905667e-05, -3.814697265625e-06, -1.9073486328125e-06, -8.392333984375e-05, -0.0003795623779296875, -1.33514404296875e-05, -0.0001735687255859375, -1.33514404296875e-05, -0.0003930330276489258, -1.9073486328125e-06, -0.0007038116455078125, -1.33514404296875e-05, -0.0001373291015625, -3.0517578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -3.24249267578125e-05, -5.7220458984375e-06, -0.011970698833465576, -0.0007203620043583214, -0.0002002716064453125, -4.57763671875e-05, -1.71661376953125e-05, -0.004853365942835808, -0.0070218476466834545, -1.1086402082582936e-05, -0.000995635986328125, 0.0, -6.794924956921022e-06, -3.254413604736328e-05, -1.9073486328125e-06, 0.0, 0.0, -1.3470649719238281e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0001277923583984375, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.990795135498047e-05, 0.0, -1.9073486328125e-06, -5.14984130859375e-05, -1.1444091796875e-05, -2.741813204920618e-06, 0.0, -9.5367431640625e-06, -4.768370445162873e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dragonling", "Mechanic", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Dragonling", " ", "Mechanic", "<EOS>", 76, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Summon", "<EOS>", 216, 87, 193, "Mechanical", "Dragonling", "<EOS>", 87, 193, "Player", "Selector", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "4", "<EOS>", 109]}, {"inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalMechanic()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -5.134423822703269, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DragonlingMechanic", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template20"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Summon", "_type": "Name"}, "args": [{"hole0": "MechanicalMechanic", "_type": "Template5"}], "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template5"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 4, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.329813186312094e-05, -1.3828206647303887e-05, -3.755028956220485e-05, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -2.3841855067985307e-07, 0.0, 0.0, -0.000247955322265625, -4.57763671875e-05, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, -1.0967194612021558e-05, -1.7285339708905667e-05, -3.814697265625e-06, -1.9073486328125e-06, -8.392333984375e-05, -0.0003795623779296875, -1.33514404296875e-05, -0.0001735687255859375, -1.33514404296875e-05, -0.0003930330276489258, -1.9073486328125e-06, -0.0007038116455078125, -1.33514404296875e-05, -0.0001373291015625, -3.0517578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -3.24249267578125e-05, -5.7220458984375e-06, -0.011970698833465576, -0.0007203620043583214, -0.0002002716064453125, -4.57763671875e-05, -1.71661376953125e-05, -0.004853365942835808, -5.111277103424072, -0.0009205888491123915, -0.0014476776123046875, -7.62939453125e-06, -7.987019671418238e-06, -4.208087921142578e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.3470649719238281e-05, 0.0, -7.62939453125e-06, 0.0, -0.0001239776611328125, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.990795135498047e-05, 0.0, -1.9073486328125e-06, -5.14984130859375e-05, -1.1444091796875e-05, -2.741813204920618e-06, 0.0, -9.5367431640625e-06, -4.768370445162873e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dragonling", "Mechanic", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Dragonling", " ", "Mechanic", "<EOS>", 76, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Summon", "<EOS>", 216, 87, 193, "Mechanical", "Mechanic", "<EOS>", 87, 193, "Player", "Selector", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "4", "<EOS>", 109]}, {"inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(Dragonling()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -5.7863960603893645, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DragonlingMechanic", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template20"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Summon", "_type": "Name"}, "args": [{"hole0": "Dragonling", "_type": "Template5"}], "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template5"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 4, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.329813186312094e-05, -1.3828206647303887e-05, -3.755028956220485e-05, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -2.3841855067985307e-07, 0.0, 0.0, -0.000247955322265625, -4.57763671875e-05, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, -1.0967194612021558e-05, -1.7285339708905667e-05, -3.814697265625e-06, -1.9073486328125e-06, -8.392333984375e-05, -0.0003795623779296875, -1.33514404296875e-05, -0.0001735687255859375, -1.33514404296875e-05, -0.0003930330276489258, -1.9073486328125e-06, -0.0007038116455078125, -1.33514404296875e-05, -0.0001373291015625, -3.0517578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -3.24249267578125e-05, -5.7220458984375e-06, -0.011970698833465576, -0.0007203620043583214, -0.0002002716064453125, -4.57763671875e-05, -1.71661376953125e-05, -5.507751941680908, -0.25239264965057373, -0.01023101806640625, 0.0, -0.0001330342493019998, -2.193450927734375e-05, -1.9073486328125e-06, 0.0, 0.0, -1.3470649719238281e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0001220703125, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.990795135498047e-05, 0.0, -1.9073486328125e-06, -5.340576171875e-05, -1.1444091796875e-05, -2.741813204920618e-06, 0.0, -9.5367431640625e-06, -4.768370445162873e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dragonling", "Mechanic", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Dragonling", " ", "Mechanic", "<EOS>", 76, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Summon", "<EOS>", 216, 87, 193, "Dragonling", "<EOS>", 87, 193, "Player", "Selector", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "4", "<EOS>", 109]}, {"inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(<UNK>Mechanical(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -6.138917144373721, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DragonlingMechanic", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template20"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "<UNK>Mechanical", "_type": "Name"}, "args": [{"hole0": "MechanicalDragonling", "_type": "Template5"}], "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template5"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 4, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.329813186312094e-05, -1.3828206647303887e-05, -3.755028956220485e-05, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -2.3841855067985307e-07, 0.0, 0.0, -0.000247955322265625, -4.57763671875e-05, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, -1.0967194612021558e-05, -1.7285339708905667e-05, -3.814697265625e-06, -1.9073486328125e-06, -8.392333984375e-05, -0.0003795623779296875, -1.33514404296875e-05, -0.0001735687255859375, -1.33514404296875e-05, -0.0003930330276489258, -1.9073486328125e-06, -0.0007038116455078125, -1.33514404296875e-05, -0.0001373291015625, -3.0517578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -3.24249267578125e-05, -5.7220458984375e-06, -4.693930149078369, -0.6817894577980042, -0.19484952092170715, -3.814697265625e-06, -0.5444803237915039, 0.0, -0.009782493114471436, -0.01065018679946661, -7.271740287251305e-06, -0.0004634857177734375, 0.0, -8.940691259340383e-06, -2.682209014892578e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.3589859008789062e-05, 0.0, -9.5367431640625e-06, 0.0, -0.000133514404296875, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.990795135498047e-05, 0.0, -1.9073486328125e-06, -5.14984130859375e-05, -1.1444091796875e-05, -2.741813204920618e-06, 0.0, -9.5367431640625e-06, -4.768370445162873e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dragonling", "Mechanic", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Dragonling", " ", "Mechanic", "<EOS>", 76, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "<UNK>", "Mechanical", "<EOS>", 216, 87, 193, "Mechanical", "Dragonling", "<EOS>", 87, 193, "Player", "Selector", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "4", "<EOS>", 109]}, {"inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(AddCard(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -6.713507981538299, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DragonlingMechanic", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template20"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "AddCard", "_type": "Name"}, "args": [{"hole0": "MechanicalDragonling", "_type": "Template5"}], "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template5"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 4, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.329813186312094e-05, -1.3828206647303887e-05, -3.755028956220485e-05, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -2.3841855067985307e-07, 0.0, 0.0, -0.000247955322265625, -4.57763671875e-05, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, -1.0967194612021558e-05, -1.7285339708905667e-05, -3.814697265625e-06, -1.9073486328125e-06, -8.392333984375e-05, -0.0003795623779296875, -1.33514404296875e-05, -0.0001735687255859375, -1.33514404296875e-05, -0.0003930330276489258, -1.9073486328125e-06, -0.0007038116455078125, -1.33514404296875e-05, -0.0001373291015625, -3.0517578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -3.24249267578125e-05, -5.7220458984375e-06, -6.076511859893799, -0.0010445367079228163, -1.3589810805569869e-05, -0.013502120971679688, -0.5957784652709961, -3.814697265625e-06, -0.009580668061971664, -0.013140929862856865, -1.823885577323381e-05, -0.000965118408203125, 0.0, -1.4305111108114943e-05, -1.728534698486328e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.3589859008789062e-05, 0.0, -9.5367431640625e-06, 0.0, -0.000125885009765625, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.990795135498047e-05, 0.0, -1.9073486328125e-06, -5.14984130859375e-05, -1.1444091796875e-05, -2.741813204920618e-06, 0.0, -9.5367431640625e-06, -4.768370445162873e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dragonling", "Mechanic", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Dragonling", " ", "Mechanic", "<EOS>", 76, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Add", "Card", "<EOS>", 216, 87, 193, "Mechanical", "Dragonling", "<EOS>", 87, 193, "Player", "Selector", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "4", "<EOS>", 109]}, {"inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(<UNK>(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -6.793986378714948, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DragonlingMechanic", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template20"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "<UNK>", "_type": "Name"}, "args": [{"hole0": "MechanicalDragonling", "_type": "Template5"}], "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template5"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 4, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.329813186312094e-05, -1.3828206647303887e-05, -3.755028956220485e-05, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -2.3841855067985307e-07, 0.0, 0.0, -0.000247955322265625, -4.57763671875e-05, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, -1.0967194612021558e-05, -1.7285339708905667e-05, -3.814697265625e-06, -1.9073486328125e-06, -8.392333984375e-05, -0.0003795623779296875, -1.33514404296875e-05, -0.0001735687255859375, -1.33514404296875e-05, -0.0003930330276489258, -1.9073486328125e-06, -0.0007038116455078125, -1.33514404296875e-05, -0.0001373291015625, -3.0517578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -3.24249267578125e-05, -5.7220458984375e-06, -4.693930149078369, -1.544804334640503, -2.6702880859375e-05, -0.535151481628418, 0.0, -0.005567242857068777, -0.010489951819181442, -2.9802276912960224e-06, -0.0010509490966796875, 0.0, -7.390974587906385e-06, -3.063678741455078e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.3470649719238281e-05, 0.0, -9.5367431640625e-06, 0.0, -0.000133514404296875, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.990795135498047e-05, 0.0, -1.9073486328125e-06, -5.14984130859375e-05, -1.1444091796875e-05, -2.741813204920618e-06, 0.0, -9.5367431640625e-06, -4.768370445162873e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dragonling", "Mechanic", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Dragonling", " ", "Mechanic", "<EOS>", 76, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "<UNK>", "<EOS>", 216, 87, 193, "Mechanical", "Dragonling", "<EOS>", 87, 193, "Player", "Selector", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "4", "<EOS>", 109]}, {"inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -7.170950667247183, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DragonlingMechanic", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template20"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Summon", "_type": "Name"}, "args": [{"hole0": "MechanicalDragonling", "_type": "Template5"}], "_type": "Call"}, {"func": {"id": "PlayerSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 4, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.329813186312094e-05, -1.3828206647303887e-05, -3.755028956220485e-05, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -2.3841855067985307e-07, 0.0, 0.0, -0.000247955322265625, -4.57763671875e-05, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, -1.0967194612021558e-05, -1.7285339708905667e-05, -3.814697265625e-06, -1.9073486328125e-06, -8.392333984375e-05, -0.0003795623779296875, -1.33514404296875e-05, -0.0001735687255859375, -1.33514404296875e-05, -0.0003930330276489258, -1.9073486328125e-06, -0.0007038116455078125, -1.33514404296875e-05, -0.0001373291015625, -3.0517578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -3.24249267578125e-05, -5.7220458984375e-06, -0.011970698833465576, -0.0007203620043583214, -0.0002002716064453125, -4.57763671875e-05, -1.71661376953125e-05, -0.004853365942835808, -0.0070218476466834545, -1.1086402082582936e-05, -7.060677528381348, -5.7220458984375e-05, -0.0050373077392578125, 0.0, -0.005581855773925781, -5.7220458984375e-06, -1.1444091796875e-05, -0.006122589111328125, -1.9073486328125e-06, -0.0007420778274536133, 0.0, -1.52587890625e-05, 0.0, -0.06491199880838394, -1.072883515007561e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.919269561767578e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0001277923583984375, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.777576446533203e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-05, -1.33514404296875e-05, -2.861022494471399e-06, 0.0, -9.5367431640625e-06, -4.768370445162873e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dragonling", "Mechanic", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Dragonling", " ", "Mechanic", "<EOS>", 76, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Summon", "<EOS>", 216, 87, 193, "Mechanical", "Dragonling", "<EOS>", 58, 122, 23, 146, "Player", "Selector", "<EOS>", 224, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "4", "<EOS>", 109]}, {"inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            DragonlingMechanic()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -7.4586815231762955, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DragonlingMechanic", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template20"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Summon", "_type": "Name"}, "args": [{"hole0": "DragonlingMechanic", "_type": "Template5"}], "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template5"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 4, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.329813186312094e-05, -1.3828206647303887e-05, -3.755028956220485e-05, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -2.3841855067985307e-07, 0.0, 0.0, -0.000247955322265625, -4.57763671875e-05, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, -1.0967194612021558e-05, -1.7285339708905667e-05, -3.814697265625e-06, -1.9073486328125e-06, -8.392333984375e-05, -0.0003795623779296875, -1.33514404296875e-05, -0.0001735687255859375, -1.33514404296875e-05, -0.0003930330276489258, -1.9073486328125e-06, -0.0007038116455078125, -1.33514404296875e-05, -0.0001373291015625, -3.0517578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -3.24249267578125e-05, -5.7220458984375e-06, -0.011970698833465576, -0.0007203620043583214, -0.0002002716064453125, -4.57763671875e-05, -1.71661376953125e-05, -5.507751941680908, -1.9264472723007202, -0.002448699902743101, -0.0061187744140625, -3.814697265625e-06, -7.152556463552173e-06, -3.266334533691406e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.3470649719238281e-05, 0.0, -7.62939453125e-06, 0.0, -0.0001277923583984375, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.990795135498047e-05, 0.0, -1.9073486328125e-06, -5.14984130859375e-05, -1.1444091796875e-05, -2.741813204920618e-06, 0.0, -9.5367431640625e-06, -4.768370445162873e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dragonling", "Mechanic", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Dragonling", " ", "Mechanic", "<EOS>", 76, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Summon", "<EOS>", 216, 87, 193, "Dragonling", "Mechanic", "<EOS>", 87, 193, "Player", "Selector", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "4", "<EOS>", 109]}, {"inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(<UNK>Mechanical(\n            CardQuery(conditions=[IsWeapon()])), PlayerSelector(players=\n            BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -7.504372346756412, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DragonlingMechanic", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template20"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "<UNK>Mechanical", "_type": "Name"}, "args": [{"func": {"_type": "Template35"}, "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"hole0": "IsWeapon", "_type": "Template5"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "conditions"}]}], "_type": "Call"}, {"func": {"id": "PlayerSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 4, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.329813186312094e-05, -1.3828206647303887e-05, -3.755028956220485e-05, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -2.3841855067985307e-07, 0.0, 0.0, -0.000247955322265625, -4.57763671875e-05, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, -1.0967194612021558e-05, -1.7285339708905667e-05, -3.814697265625e-06, -1.9073486328125e-06, -8.392333984375e-05, -0.0003795623779296875, -1.33514404296875e-05, -0.0001735687255859375, -1.33514404296875e-05, -0.0003930330276489258, -1.9073486328125e-06, -0.0007038116455078125, -1.33514404296875e-05, -0.0001373291015625, -3.0517578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -3.24249267578125e-05, -5.7220458984375e-06, -4.693930149078369, -0.6817894577980042, -0.19484952092170715, -3.814697265625e-06, -0.8865995407104492, -0.04268455505371094, -0.011373519897460938, -0.20214271545410156, -1.1444091796875e-05, -0.03406798467040062, -1.7762184143066406e-05, -0.004299163818359375, -0.0004119873046875, -0.1599264144897461, -0.41306591033935547, 0.0, -0.009033861570060253, -0.037573255598545074, -9.715516353026032e-05, -0.0004100799560546875, -0.0024204254150390625, -0.0006504058837890625, -0.002361297607421875, 0.0, -0.016472220420837402, -5.7220458984375e-06, -9.5367431640625e-06, -0.06379508972167969, -1.9073486328125e-06, -0.00023663043975830078, 0.0, -1.9073486328125e-05, 0.0, -0.04316882789134979, -1.0371208190917969e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.110004425048828e-05, 0.0, -9.5367431640625e-06, 0.0, -0.000125885009765625, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.586841583251953e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-05, -1.33514404296875e-05, -2.861022494471399e-06, 0.0, -9.5367431640625e-06, -4.768370445162873e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dragonling", "Mechanic", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Dragonling", " ", "Mechanic", "<EOS>", 76, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "<UNK>", "Mechanical", "<EOS>", 216, 58, 122, 46, 224, 205, "conditions", "<EOS>", 21, 141, 217, 87, 193, "Is", "Weapon", "<EOS>", 71, 58, 122, 23, 146, "Player", "Selector", "<EOS>", 224, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "4", "<EOS>", 109]}, {"inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalMechanical()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -7.524764103606998, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DragonlingMechanic", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template20"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Summon", "_type": "Name"}, "args": [{"hole0": "MechanicalMechanical", "_type": "Template5"}], "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template5"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 4, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.329813186312094e-05, -1.3828206647303887e-05, -3.755028956220485e-05, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -2.3841855067985307e-07, 0.0, 0.0, -0.000247955322265625, -4.57763671875e-05, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, -1.0967194612021558e-05, -1.7285339708905667e-05, -3.814697265625e-06, -1.9073486328125e-06, -8.392333984375e-05, -0.0003795623779296875, -1.33514404296875e-05, -0.0001735687255859375, -1.33514404296875e-05, -0.0003930330276489258, -1.9073486328125e-06, -0.0007038116455078125, -1.33514404296875e-05, -0.0001373291015625, -3.0517578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -3.24249267578125e-05, -5.7220458984375e-06, -0.011970698833465576, -0.0007203620043583214, -0.0002002716064453125, -4.57763671875e-05, -1.71661376953125e-05, -0.004853365942835808, -7.415491104125977, -0.08804965764284134, -0.000400543212890625, -1.9073486328125e-06, -3.123278293060139e-05, -6.508827209472656e-05, -1.9073486328125e-06, 0.0, 0.0, -1.3470649719238281e-05, 0.0, -7.62939453125e-06, 0.0, -0.0001277923583984375, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.990795135498047e-05, 0.0, -1.9073486328125e-06, -5.340576171875e-05, -1.1444091796875e-05, -2.741813204920618e-06, 0.0, -9.5367431640625e-06, -4.768370445162873e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dragonling", "Mechanic", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Dragonling", " ", "Mechanic", "<EOS>", 76, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Summon", "<EOS>", 216, 87, 193, "Mechanical", "Mechanical", "<EOS>", 87, 193, "Player", "Selector", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "4", "<EOS>", 109]}, {"inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(2/1Mechanic()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -8.01589655114762, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DragonlingMechanic", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template20"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Summon", "_type": "Name"}, "args": [{"hole0": "2/1Mechanic", "_type": "Template5"}], "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template5"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 4, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.329813186312094e-05, -1.3828206647303887e-05, -3.755028956220485e-05, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -2.3841855067985307e-07, 0.0, 0.0, -0.000247955322265625, -4.57763671875e-05, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, -1.0967194612021558e-05, -1.7285339708905667e-05, -3.814697265625e-06, -1.9073486328125e-06, -8.392333984375e-05, -0.0003795623779296875, -1.33514404296875e-05, -0.0001735687255859375, -1.33514404296875e-05, -0.0003930330276489258, -1.9073486328125e-06, -0.0007038116455078125, -1.33514404296875e-05, -0.0001373291015625, -3.0517578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -3.24249267578125e-05, -5.7220458984375e-06, -0.011970698833465576, -0.0007203620043583214, -0.0002002716064453125, -4.57763671875e-05, -1.71661376953125e-05, -7.227301597595215, -0.2110181748867035, -0.16717801988124847, -0.39449310302734375, 0.0, -1.1205666851310525e-05, -2.3245811462402344e-05, -1.9073486328125e-06, 0.0, 0.0, -1.537799835205078e-05, 0.0, -5.7220458984375e-06, 0.0, -0.00012969970703125, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.990795135498047e-05, 0.0, -1.9073486328125e-06, -5.340576171875e-05, -1.1444091796875e-05, -2.741813204920618e-06, 0.0, -9.5367431640625e-06, -4.768370445162873e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dragonling", "Mechanic", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Dragonling", " ", "Mechanic", "<EOS>", 76, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Summon", "<EOS>", 216, 87, 193, "2/1", "Mechanic", "<EOS>", 87, 193, "Player", "Selector", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "4", "<EOS>", 109]}, {"inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(AddCard(CardQuery(\n            conditions=[IsWeapon()])), PlayerSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -8.247479650277768, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DragonlingMechanic", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template20"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "AddCard", "_type": "Name"}, "args": [{"func": {"_type": "Template35"}, "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"hole0": "IsWeapon", "_type": "Template5"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "conditions"}]}], "_type": "Call"}, {"func": {"id": "PlayerSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 4, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.329813186312094e-05, -1.3828206647303887e-05, -3.755028956220485e-05, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -2.3841855067985307e-07, 0.0, 0.0, -0.000247955322265625, -4.57763671875e-05, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, -1.0967194612021558e-05, -1.7285339708905667e-05, -3.814697265625e-06, -1.9073486328125e-06, -8.392333984375e-05, -0.0003795623779296875, -1.33514404296875e-05, -0.0001735687255859375, -1.33514404296875e-05, -0.0003930330276489258, -1.9073486328125e-06, -0.0007038116455078125, -1.33514404296875e-05, -0.0001373291015625, -3.0517578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -3.24249267578125e-05, -5.7220458984375e-06, -6.076511859893799, -0.0010445367079228163, -1.3589810805569869e-05, -0.013502120971679688, -0.8137197494506836, -1.33514404296875e-05, -0.0013580322265625, -0.3949394226074219, -1.71661376953125e-05, -0.13618803024291992, -2.562999725341797e-05, -0.00209808349609375, -0.000274658203125, -0.041886329650878906, -0.5866603851318359, 0.0, -0.0061035193502902985, -0.050072215497493744, -0.00011408270802348852, -0.000396728515625, -0.00199127197265625, -0.000659942626953125, -0.001773834228515625, 0.0, -0.015209555625915527, -5.7220458984375e-06, -1.1444091796875e-05, -0.05546760559082031, -1.9073486328125e-06, -0.00022709369659423828, 0.0, -1.9073486328125e-05, 0.0, -0.04423169791698456, -1.0371208190917969e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.110004425048828e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0001239776611328125, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.586841583251953e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-05, -1.33514404296875e-05, -2.861022494471399e-06, 0.0, -9.5367431640625e-06, -4.768370445162873e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dragonling", "Mechanic", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Dragonling", " ", "Mechanic", "<EOS>", 76, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Add", "Card", "<EOS>", 216, 58, 122, 46, 224, 205, "conditions", "<EOS>", 21, 141, 217, 87, 193, "Is", "Weapon", "<EOS>", 71, 58, 122, 23, 146, "Player", "Selector", "<EOS>", 224, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "4", "<EOS>", 109]}, {"inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(<UNK>Mechanical(\n            CardQuery(conditions=[IsWeapon()])), PlayerSelector(players=\n            BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -10.615913463364762, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DragonlingMechanic", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template20"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "<UNK>Mechanical", "_type": "Name"}, "args": [{"func": {"_type": "Template35"}, "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"hole0": "IsWeapon", "_type": "Template5"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "conditions"}]}], "_type": "Call"}, {"func": {"id": "PlayerSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 4, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.329813186312094e-05, -1.3828206647303887e-05, -3.755028956220485e-05, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -2.3841855067985307e-07, 0.0, 0.0, -0.000247955322265625, -4.57763671875e-05, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, -1.0967194612021558e-05, -1.7285339708905667e-05, -3.814697265625e-06, -1.9073486328125e-06, -8.392333984375e-05, -0.0003795623779296875, -1.33514404296875e-05, -0.0001735687255859375, -1.33514404296875e-05, -0.0003930330276489258, -1.9073486328125e-06, -0.0007038116455078125, -1.33514404296875e-05, -0.0001373291015625, -3.0517578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -3.24249267578125e-05, -5.7220458984375e-06, -4.693930149078369, -0.6817894577980042, -0.19484952092170715, -3.814697265625e-06, -0.8865995407104492, -0.04268455505371094, -0.011373519897460938, -0.20214271545410156, -1.1444091796875e-05, -0.03406798467040062, -1.7762184143066406e-05, -0.004299163818359375, -0.0004119873046875, -0.1599264144897461, -0.41306591033935547, 0.0, -0.009033861570060253, -0.037573255598545074, -9.715516353026032e-05, -0.0004100799560546875, -0.0024204254150390625, -0.0006504058837890625, -0.002361297607421875, 0.0, -0.016472220420837402, -5.7220458984375e-06, -9.5367431640625e-06, -2.934840202331543, -0.0001239776611328125, -8.0108642578125e-05, 0.0, -5.340576171875e-05, 0.0, -0.26695743203163147, -1.3232229321147315e-05, 0.0, -5.7220458984375e-06, -0.000179290771484375, -3.814697265625e-06, -0.0002536773681640625, -1.9073486328125e-06, -0.01626632548868656, -2.0265579223632812e-05, 0.0, 0.0, 0.0, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001087188720703125, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.1948089599609375e-05, 0.0, -1.9073486328125e-06, -6.103515625e-05, -1.1444091796875e-05, -2.861022494471399e-06, 0.0, -9.5367431640625e-06, -4.768370445162873e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dragonling", "Mechanic", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Dragonling", " ", "Mechanic", "<EOS>", 76, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "<UNK>", "Mechanical", "<EOS>", 216, 58, 122, 46, 224, 205, "conditions", "<EOS>", 21, 141, 217, 87, 193, "Is", "Weapon", "<EOS>", 71, 58, 122, 23, 146, "Player", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "4", "<EOS>", 109]}, {"inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4, effects=[Effect(Character<UNK>(player=\n            EnemyPlayer()), ActionTag(AddCard(CardQuery(conditions=[IsType(\n            MINION_TYPE.BEAST)])), PlayerSelector()))])\n", "score": -15.085594348386536, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DragonlingMechanic", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template20"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Summon", "_type": "Name"}, "args": [{"hole0": "MechanicalDragonling", "_type": "Template5"}], "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template5"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"func": {"id": "Character<UNK>", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "player"}]}, {"func": {"_type": "Template32"}, "args": [{"func": {"id": "AddCard", "_type": "Name"}, "args": [{"func": {"_type": "Template35"}, "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template37"}, "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "conditions"}]}], "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.329813186312094e-05, -1.3828206647303887e-05, -3.755028956220485e-05, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -2.3841855067985307e-07, 0.0, 0.0, -0.000247955322265625, -4.57763671875e-05, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, -1.0967194612021558e-05, -1.7285339708905667e-05, -3.814697265625e-06, -1.9073486328125e-06, -8.392333984375e-05, -0.0003795623779296875, -1.33514404296875e-05, -0.0001735687255859375, -1.33514404296875e-05, -0.0003930330276489258, -1.9073486328125e-06, -0.0007038116455078125, -1.33514404296875e-05, -0.0001373291015625, -3.0517578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -3.24249267578125e-05, -5.7220458984375e-06, -0.011970698833465576, -0.0007203620043583214, -0.0002002716064453125, -4.57763671875e-05, -1.71661376953125e-05, -0.004853365942835808, -0.0070218476466834545, -1.1086402082582936e-05, -0.000995635986328125, 0.0, -6.794924956921022e-06, -3.254413604736328e-05, -1.9073486328125e-06, 0.0, 0.0, -1.3470649719238281e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0001277923583984375, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.990795135498047e-05, 0.0, -1.9073486328125e-06, -10.135014533996582, -1.9073486328125e-06, -0.0001049041748046875, -0.0002002716064453125, -0.0001220703125, -2.47955322265625e-05, -0.0001659393310546875, -8.58306884765625e-05, -5.53131103515625e-05, 0.0, -0.4523707628250122, 0.0, -1.52587890625e-05, -7.62939453125e-06, -4.9591064453125e-05, -3.24249267578125e-05, -1.1444091796875e-05, -0.000225067138671875, -2.6702880859375e-05, -0.2792224884033203, -0.0031032562255859375, -3.814697265625e-06, -1.9073486328125e-06, -0.4223244786262512, -0.6569371223449707, -0.00020752736600115895, -0.02625274658203125, -7.62939453125e-06, -0.3822222948074341, 0.0, -0.000213623046875, 0.0, -0.15022078156471252, -2.5272369384765625e-05, 0.0, -5.7220458984375e-05, -7.62939453125e-06, -0.0006771087646484375, -2.09808349609375e-05, -0.0050811767578125, -5.340576171875e-05, -1.71661376953125e-05, 0.0, -0.5788148641586304, -0.0003453492827247828, -3.933906555175781e-06, -0.007884979248046875, -0.1116647720336914, -5.340576171875e-05, -0.0015048980712890625, -0.1937103271484375, -5.7220458984375e-06, -0.32923364639282227, -6.198883056640625e-05, -0.008366584777832031, -0.0002918243408203125, -0.014407157897949219, -0.4896373748779297, -5.7220458984375e-06, -0.4814319610595703, -0.000919342041015625, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00010645375004969537, -3.576278118089249e-07, -0.3214613199234009, -1.9073486328125e-06, -0.000957489013671875, -7.2479248046875e-05, 0.0, -0.0006890295771881938, -4.971027374267578e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Dragonling", "Mechanic", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Dragonling", " ", "Mechanic", "<EOS>", 76, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Summon", "<EOS>", 216, 87, 193, "Mechanical", "Dragonling", "<EOS>", 87, 193, "Player", "Selector", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 76, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 58, 122, 23, 146, "Character", "<UNK>", "<EOS>", 224, 205, "player", "<EOS>", 51, 193, "Enemy", "Player", "<EOS>", 58, 123, 43, 217, 58, 123, 23, 146, "Add", "Card", "<EOS>", 216, 58, 122, 46, 224, 205, "conditions", "<EOS>", 21, 141, 217, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 87, 193, "Player", "Selector", "<EOS>", 71, 109]}, {"inferred_code": "", "score": -20.538503646850586, "model_output": {"_type": "Module", "body": []}, "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -20.538496017456055], "choice_history": [93, 145, 228]}], "index": 25}
{"beams": [{"inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "score": -0.19867098940835604, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "DrainLife", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template16"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -7.82012939453125e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -9.476707055000588e-05, -7.152555099310121e-07, -5.7220458984375e-06, -0.000164031982421875, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -1.1563283806026448e-05, -4.780292510986328e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -3.0517578125e-05, -2.6702880859375e-05, -0.0004024505615234375, -2.09808349609375e-05, -4.38690185546875e-05, -6.67572021484375e-05, -7.62939453125e-06, -6.162936188047752e-05, -1.800060272216797e-05, -4.70866471005138e-05, -7.152555099310121e-07, -0.0001068115234375, -2.6702880859375e-05, 0.0, 0.0, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.00015735626220703125, 0.0, -2.6702880859375e-05, 0.0, 0.0, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -7.62939453125e-05, -3.814697265625e-06, -0.025360107421875, -1.9073486328125e-06, -0.000102996826171875, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.00011467933654785156, -3.814697265625e-06, -0.0012847185134887695, -1.33514404296875e-05, -0.0011467933654785156, -1.9073486328125e-05, -0.00022125244140625, -3.0517578125e-05, -4.9591064453125e-05, -6.866455078125e-05, -3.814697265625e-06, 0.0, -0.0003604888916015625, 0.0, -0.0001773834228515625, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -2.372264862060547e-05, -8.344646857949556e-07, -0.0008640289306640625, -0.0001468658447265625, -9.5367431640625e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -0.0010890960693359375, -5.44773974979762e-05, -8.106231689453125e-06, -1.1444091796875e-05, -0.00011444091796875, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, -0.038266539573669434, 0.0, -3.814697265625e-06, -0.0010433197021484375, -0.00012969970703125, -0.000152587890625, -3.814697265625e-06, -1.33514404296875e-05, -3.24249267578125e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -0.011046409606933594, -0.0010346026392653584, -6.437291176553117e-06, -0.10187593102455139, 0.0, -0.00115203857421875, -1.71661376953125e-05, -1.33514404296875e-05, -2.288818359375e-05, 0.0, -0.0002593994140625, -0.007167577277868986, -1.6331669030478224e-05, -6.29425048828125e-05, -0.0029582977294921875, -1.9073486328125e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Drain", "Life", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Drain", " ", "Life", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.change_temp_attack(2)\n", "score": -2.96020207465358, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "DrainLife", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template16"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -7.82012939453125e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -9.476707055000588e-05, -7.152555099310121e-07, -5.7220458984375e-06, -0.000164031982421875, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -1.1563283806026448e-05, -4.780292510986328e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -3.0517578125e-05, -2.6702880859375e-05, -0.0004024505615234375, -2.09808349609375e-05, -4.38690185546875e-05, -6.67572021484375e-05, -7.62939453125e-06, -6.162936188047752e-05, -1.800060272216797e-05, -4.70866471005138e-05, -7.152555099310121e-07, -0.0001068115234375, -2.6702880859375e-05, 0.0, 0.0, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.00015735626220703125, 0.0, -2.6702880859375e-05, 0.0, 0.0, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -7.62939453125e-05, -3.814697265625e-06, -0.025360107421875, -1.9073486328125e-06, -0.000102996826171875, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.00011467933654785156, -3.814697265625e-06, -0.0012847185134887695, -1.33514404296875e-05, -0.0011467933654785156, -1.9073486328125e-05, -0.00022125244140625, -3.0517578125e-05, -4.9591064453125e-05, -6.866455078125e-05, -3.814697265625e-06, 0.0, -0.0003604888916015625, 0.0, -0.0001773834228515625, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -2.372264862060547e-05, -8.344646857949556e-07, -0.0008640289306640625, -0.0001468658447265625, -9.5367431640625e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -0.0010890960693359375, -5.44773974979762e-05, -8.106231689453125e-06, -1.1444091796875e-05, -0.00011444091796875, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, -0.038266539573669434, 0.0, -3.814697265625e-06, -0.0010433197021484375, -0.00012969970703125, -0.000152587890625, -3.814697265625e-06, -1.33514404296875e-05, -3.24249267578125e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -0.011046409606933594, -0.0010346026392653584, -6.437291176553117e-06, -2.8737075328826904, 0.0, -1.9073486328125e-06, -0.0012989044189453125, -8.7738037109375e-05], "choice_history": [93, 145, 230, 101, 125, "Drain", "Life", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Drain", " ", "Life", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "change_temp_attack", "<EOS>", 216, 69, 109]}, {"inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_heal_power(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "score": -3.489054939863074, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "DrainLife", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template16"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -7.82012939453125e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -9.476707055000588e-05, -7.152555099310121e-07, -5.7220458984375e-06, -0.000164031982421875, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -1.1563283806026448e-05, -4.780292510986328e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -3.0517578125e-05, -2.6702880859375e-05, -0.0004024505615234375, -2.09808349609375e-05, -4.38690185546875e-05, -6.67572021484375e-05, -7.62939453125e-06, -6.162936188047752e-05, -1.800060272216797e-05, -4.70866471005138e-05, -7.152555099310121e-07, -0.0001068115234375, -2.6702880859375e-05, 0.0, 0.0, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.00015735626220703125, 0.0, -2.6702880859375e-05, 0.0, 0.0, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -7.62939453125e-05, -3.814697265625e-06, -0.025360107421875, -1.9073486328125e-06, -0.000102996826171875, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.00011467933654785156, -3.814697265625e-06, -0.0012847185134887695, -1.33514404296875e-05, -0.0011467933654785156, -1.9073486328125e-05, -0.00022125244140625, -3.0517578125e-05, -4.9591064453125e-05, -6.866455078125e-05, -3.814697265625e-06, 0.0, -0.0003604888916015625, 0.0, -0.0001773834228515625, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -2.372264862060547e-05, -8.344646857949556e-07, -0.0008640289306640625, -0.0001468658447265625, -9.5367431640625e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -0.0010890960693359375, -5.44773974979762e-05, -8.106231689453125e-06, -1.1444091796875e-05, -0.00011444091796875, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, -3.310603380203247, -1.1920928244535389e-07, -1.52587890625e-05, -0.01708984375, -2.6702880859375e-05, -9.5367431640625e-05, -7.62939453125e-06, -9.5367431640625e-06, -5.91278076171875e-05, -1.9073486328125e-06, 0.0, -9.34600830078125e-05, 0.0, -0.009878158569335938, -0.001014814479276538, -7.152543730626348e-06, -0.10499994456768036, 0.0, -0.0013904571533203125, -1.71661376953125e-05, -1.33514404296875e-05, -2.288818359375e-05, 0.0, -0.000247955322265625, -0.007103561889380217, -1.6331669030478224e-05, -6.29425048828125e-05, -0.00296783447265625, -1.9073486328125e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Drain", "Life", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Drain", " ", "Life", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.increase_armor(2)\n", "score": -4.094703293449356, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "DrainLife", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template16"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_armor", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -7.82012939453125e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -9.476707055000588e-05, -7.152555099310121e-07, -5.7220458984375e-06, -0.000164031982421875, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -1.1563283806026448e-05, -4.780292510986328e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -3.0517578125e-05, -2.6702880859375e-05, -0.0004024505615234375, -2.09808349609375e-05, -4.38690185546875e-05, -6.67572021484375e-05, -7.62939453125e-06, -6.162936188047752e-05, -1.800060272216797e-05, -4.70866471005138e-05, -7.152555099310121e-07, -0.0001068115234375, -2.6702880859375e-05, 0.0, 0.0, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.00015735626220703125, 0.0, -2.6702880859375e-05, 0.0, 0.0, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -7.62939453125e-05, -3.814697265625e-06, -0.025360107421875, -1.9073486328125e-06, -0.000102996826171875, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.00011467933654785156, -3.814697265625e-06, -0.0012847185134887695, -1.33514404296875e-05, -0.0011467933654785156, -1.9073486328125e-05, -0.00022125244140625, -3.0517578125e-05, -4.9591064453125e-05, -6.866455078125e-05, -3.814697265625e-06, 0.0, -0.0003604888916015625, 0.0, -0.0001773834228515625, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -2.372264862060547e-05, -8.344646857949556e-07, -0.0008640289306640625, -0.0001468658447265625, -9.5367431640625e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -0.0010890960693359375, -5.44773974979762e-05, -8.106231689453125e-06, -1.1444091796875e-05, -0.00011444091796875, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, -0.038266539573669434, 0.0, -3.814697265625e-06, -0.0010433197021484375, -0.00012969970703125, -0.000152587890625, -3.814697265625e-06, -1.33514404296875e-05, -3.24249267578125e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -0.011046409606933594, -0.0010346026392653584, -6.437291176553117e-06, -4.007932186126709, 0.0, -4.00543212890625e-05, -0.0014400482177734375, -0.0001850128173828125], "choice_history": [93, 145, 230, 101, 125, "Drain", "Life", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Drain", " ", "Life", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "increase_armor", "<EOS>", 216, 69, 109]}, {"inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, filter_func=lambda character: character.card\n            .minion_type == MINION_TYPE.DEMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "score": -4.379726872794095, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "DrainLife", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template16"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "character"}], "_type": "arguments"}, "_type": "Lambda", "body": {"left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "character", "_type": "Name"}}}, "_type": "Compare", "comparators": [{"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Eq"}]}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -7.82012939453125e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -9.476707055000588e-05, -7.152555099310121e-07, -5.7220458984375e-06, -0.000164031982421875, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -1.1563283806026448e-05, -4.780292510986328e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -3.0517578125e-05, -2.6702880859375e-05, -0.0004024505615234375, -2.09808349609375e-05, -4.38690185546875e-05, -6.67572021484375e-05, -7.62939453125e-06, -6.162936188047752e-05, -1.800060272216797e-05, -4.70866471005138e-05, -7.152555099310121e-07, -0.0001068115234375, -2.6702880859375e-05, 0.0, 0.0, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.00015735626220703125, 0.0, -2.6702880859375e-05, 0.0, 0.0, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -7.62939453125e-05, -3.814697265625e-06, -3.694716453552246, 0.0, -4.00543212890625e-05, 0.0, -1.1444091796875e-05, -3.24249267578125e-05, -6.29425048828125e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.00024437904357910156, -1.9073486328125e-06, -0.001516580581665039, -9.5367431640625e-06, -0.0013244152069091797, -1.33514404296875e-05, -0.0007781982421875, -0.07486248016357422, -1.9073486328125e-06, -0.009319305419921875, -0.0008029937744140625, -0.0002079010009765625, -2.09808349609375e-05, -0.001453399658203125, -0.00020599365234375, -1.33514404296875e-05, -0.03334701061248779, -9.560585021972656e-05, -0.009120941162109375, -2.47955322265625e-05, -9.34600830078125e-05, 0.0, -0.0005741119384765625, 0.0, -0.0002155303955078125, 0.0, -0.044127922505140305, -9.655952453613281e-06, -0.0351564884185791, -7.152555099310121e-07, -0.0021075010299682617, -0.0002613067626953125, -0.0001163482666015625, -0.29324817657470703, -3.0517578125e-05, -3.814697265625e-06, 0.0, -0.0001964569091796875, -8.58306884765625e-05, -0.00043559071491472423, 0.0, -0.008430719375610352, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.000263214111328125, -1.33514404296875e-05, -2.288818359375e-05, 0.0, -0.000274658203125, 0.0, -4.38690185546875e-05, -1.33514404296875e-05, -1.9073486328125e-05, 0.0, -0.0002193450927734375, -1.1444091796875e-05, -3.910064697265625e-05, -7.152555099310121e-07, -0.0007495880126953125, -0.000133514404296875, -1.33514404296875e-05, -1.52587890625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -0.0016613006591796875, -4.506021650740877e-05, -6.318092346191406e-06, -1.1444091796875e-05, -0.0001125335693359375, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -8.392333984375e-05, -0.036124587059020996, 0.0, -3.814697265625e-06, -0.0010547637939453125, -0.0001316070556640625, -0.0001926422119140625, -3.814697265625e-06, -1.33514404296875e-05, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -0.010507583618164062, -0.0010464026127010584, -6.437291176553117e-06, -0.1000012457370758, 0.0, -0.00112152099609375, -1.71661376953125e-05, -1.33514404296875e-05, -2.288818359375e-05, 0.0, -0.0002574920654296875, -0.007163762580603361, -1.6331669030478224e-05, -6.29425048828125e-05, -0.002964019775390625, -1.9073486328125e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Drain", "Life", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Drain", " ", "Life", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "character", "<EOS>", 19, 126, 15, 116, 15, 116, 23, 146, "character", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 213, 6, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.heal(player.effective_heal_power(2), self)\n", "score": -5.3213043312102855, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "DrainLife", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template16"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -7.82012939453125e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -9.476707055000588e-05, -7.152555099310121e-07, -5.7220458984375e-06, -0.000164031982421875, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -1.1563283806026448e-05, -4.780292510986328e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -3.0517578125e-05, -2.6702880859375e-05, -0.0004024505615234375, -2.09808349609375e-05, -4.38690185546875e-05, -6.67572021484375e-05, -7.62939453125e-06, -6.162936188047752e-05, -1.800060272216797e-05, -4.70866471005138e-05, -7.152555099310121e-07, -0.0001068115234375, -2.6702880859375e-05, 0.0, 0.0, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.00015735626220703125, 0.0, -2.6702880859375e-05, 0.0, 0.0, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -7.62939453125e-05, -3.814697265625e-06, -0.025360107421875, -1.9073486328125e-06, -0.000102996826171875, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.00011467933654785156, -3.814697265625e-06, -0.0012847185134887695, -1.33514404296875e-05, -0.0011467933654785156, -1.9073486328125e-05, -0.00022125244140625, -3.0517578125e-05, -4.9591064453125e-05, -6.866455078125e-05, -3.814697265625e-06, 0.0, -0.0003604888916015625, 0.0, -0.0001773834228515625, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -2.372264862060547e-05, -8.344646857949556e-07, -0.0008640289306640625, -0.0001468658447265625, -9.5367431640625e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -0.0010890960693359375, -5.44773974979762e-05, -8.106231689453125e-06, -1.1444091796875e-05, -0.00011444091796875, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, -0.038266539573669434, 0.0, -3.814697265625e-06, -0.0010433197021484375, -0.00012969970703125, -0.000152587890625, -3.814697265625e-06, -1.33514404296875e-05, -3.24249267578125e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -4.548409461975098, -1.52587890625e-05, -0.04474830627441406, -2.09808349609375e-05, -0.00015151500701904297, 0.0, -0.008602289482951164, -1.1324854312988464e-05, -0.007458090782165527, -0.00014196871779859066, -0.6254469156265259, -2.0265579223632812e-06, -1.52587890625e-05, -2.47955322265625e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000202178955078125, -0.010816454887390137, -2.622604142743512e-06, -4.1961669921875e-05, -0.00208282470703125, -7.62939453125e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Drain", "Life", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Drain", " ", "Life", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, filter_func=lambda character: character.card\n            .minion_type is MINION_TYPE.DEMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "score": -5.839431510095892, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "DrainLife", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template16"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "character"}], "_type": "arguments"}, "_type": "Lambda", "body": {"left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "character", "_type": "Name"}}}, "_type": "Compare", "comparators": [{"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Is"}]}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -7.82012939453125e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -9.476707055000588e-05, -7.152555099310121e-07, -5.7220458984375e-06, -0.000164031982421875, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -1.1563283806026448e-05, -4.780292510986328e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -3.0517578125e-05, -2.6702880859375e-05, -0.0004024505615234375, -2.09808349609375e-05, -4.38690185546875e-05, -6.67572021484375e-05, -7.62939453125e-06, -6.162936188047752e-05, -1.800060272216797e-05, -4.70866471005138e-05, -7.152555099310121e-07, -0.0001068115234375, -2.6702880859375e-05, 0.0, 0.0, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.00015735626220703125, 0.0, -2.6702880859375e-05, 0.0, 0.0, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -7.62939453125e-05, -3.814697265625e-06, -3.694716453552246, 0.0, -4.00543212890625e-05, 0.0, -1.1444091796875e-05, -3.24249267578125e-05, -6.29425048828125e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.00024437904357910156, -1.9073486328125e-06, -0.001516580581665039, -9.5367431640625e-06, -0.0013244152069091797, -1.33514404296875e-05, -0.0007781982421875, -0.07486248016357422, -1.9073486328125e-06, -0.009319305419921875, -0.0008029937744140625, -0.0002079010009765625, -2.09808349609375e-05, -0.001453399658203125, -0.00020599365234375, -1.33514404296875e-05, -0.03334701061248779, -9.560585021972656e-05, -0.009120941162109375, -2.47955322265625e-05, -9.34600830078125e-05, 0.0, -0.0005741119384765625, 0.0, -0.0002155303955078125, 0.0, -0.044127922505140305, -9.655952453613281e-06, -0.0351564884185791, -7.152555099310121e-07, -0.0021075010299682617, -0.0002613067626953125, -0.0001163482666015625, -1.7518854141235352, -0.0005245208740234375, 0.0, 0.0, -0.0003643035888671875, -1.1444091796875e-05, -0.0008187288185581565, 0.0, -0.008638262748718262, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -0.0001678466796875, -1.1444091796875e-05, -3.4332275390625e-05, 0.0, -0.000278472900390625, 0.0, -3.4332275390625e-05, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.0002193450927734375, -9.5367431640625e-06, -3.719329833984375e-05, -8.344646857949556e-07, -0.0007457733154296875, -0.0001277923583984375, -1.52587890625e-05, -1.52587890625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -0.0015735626220703125, -4.553703183773905e-05, -8.225440979003906e-06, -1.1444091796875e-05, -0.0001125335693359375, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -8.392333984375e-05, -0.03598153591156006, 0.0, -3.814697265625e-06, -0.0010528564453125, -0.0001316070556640625, -0.00019073486328125, -3.814697265625e-06, -1.33514404296875e-05, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -0.010477066040039062, -0.0010511713335290551, -6.437291176553117e-06, -0.1002667248249054, 0.0, -0.0011234283447265625, -1.71661376953125e-05, -1.33514404296875e-05, -2.288818359375e-05, 0.0, -0.0002574920654296875, -0.007165550719946623, -1.6331669030478224e-05, -6.29425048828125e-05, -0.002964019775390625, -1.9073486328125e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Drain", "Life", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Drain", " ", "Life", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "character", "<EOS>", 19, 126, 15, 116, 15, 116, 23, 146, "character", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 213, 10, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_heal_power(2), self)\n", "score": -5.8693646291760615, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "DrainLife", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template16"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -7.82012939453125e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -9.476707055000588e-05, -7.152555099310121e-07, -5.7220458984375e-06, -0.000164031982421875, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -1.1563283806026448e-05, -4.780292510986328e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -3.0517578125e-05, -2.6702880859375e-05, -0.0004024505615234375, -2.09808349609375e-05, -4.38690185546875e-05, -6.67572021484375e-05, -7.62939453125e-06, -6.162936188047752e-05, -1.800060272216797e-05, -4.70866471005138e-05, -7.152555099310121e-07, -0.0001068115234375, -2.6702880859375e-05, 0.0, 0.0, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.00015735626220703125, 0.0, -2.6702880859375e-05, 0.0, 0.0, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -7.62939453125e-05, -3.814697265625e-06, -0.025360107421875, -1.9073486328125e-06, -0.000102996826171875, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.00011467933654785156, -3.814697265625e-06, -0.0012847185134887695, -1.33514404296875e-05, -0.0011467933654785156, -1.9073486328125e-05, -0.00022125244140625, -3.0517578125e-05, -4.9591064453125e-05, -6.866455078125e-05, -3.814697265625e-06, 0.0, -0.0003604888916015625, 0.0, -0.0001773834228515625, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -2.372264862060547e-05, -8.344646857949556e-07, -0.0008640289306640625, -0.0001468658447265625, -9.5367431640625e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -0.0010890960693359375, -5.44773974979762e-05, -8.106231689453125e-06, -1.1444091796875e-05, -0.00011444091796875, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, -0.038266539573669434, 0.0, -3.814697265625e-06, -0.0010433197021484375, -0.00012969970703125, -0.000152587890625, -3.814697265625e-06, -1.33514404296875e-05, -3.24249267578125e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -4.548409461975098, -1.52587890625e-05, -0.04474830627441406, -2.09808349609375e-05, -0.00015151500701904297, 0.0, -0.008602289482951164, -1.1324854312988464e-05, -0.007458090782165527, -0.00014196871779859066, -1.1654863357543945, 0.0, -3.814697265625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.0002918243408203125, -0.018635153770446777, -4.649161837733118e-06, -4.9591064453125e-05, -0.002170562744140625, -0.0001087188720703125, 0.0], "choice_history": [93, 145, 230, 101, 125, "Drain", "Life", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Drain", " ", "Life", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.add_buff(Buff(Frozen()))\n", "score": -5.9045972887399785, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "DrainLife", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template16"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Frozen", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -7.82012939453125e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -9.476707055000588e-05, -7.152555099310121e-07, -5.7220458984375e-06, -0.000164031982421875, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -1.1563283806026448e-05, -4.780292510986328e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -3.0517578125e-05, -2.6702880859375e-05, -0.0004024505615234375, -2.09808349609375e-05, -4.38690185546875e-05, -6.67572021484375e-05, -7.62939453125e-06, -6.162936188047752e-05, -1.800060272216797e-05, -4.70866471005138e-05, -7.152555099310121e-07, -0.0001068115234375, -2.6702880859375e-05, 0.0, 0.0, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.00015735626220703125, 0.0, -2.6702880859375e-05, 0.0, 0.0, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -7.62939453125e-05, -3.814697265625e-06, -0.025360107421875, -1.9073486328125e-06, -0.000102996826171875, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.00011467933654785156, -3.814697265625e-06, -0.0012847185134887695, -1.33514404296875e-05, -0.0011467933654785156, -1.9073486328125e-05, -0.00022125244140625, -3.0517578125e-05, -4.9591064453125e-05, -6.866455078125e-05, -3.814697265625e-06, 0.0, -0.0003604888916015625, 0.0, -0.0001773834228515625, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -2.372264862060547e-05, -8.344646857949556e-07, -0.0008640289306640625, -0.0001468658447265625, -9.5367431640625e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -0.0010890960693359375, -5.44773974979762e-05, -8.106231689453125e-06, -1.1444091796875e-05, -0.00011444091796875, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, -0.038266539573669434, 0.0, -3.814697265625e-06, -0.0010433197021484375, -0.00012969970703125, -0.000152587890625, -3.814697265625e-06, -1.33514404296875e-05, -3.24249267578125e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -0.011046409606933594, -0.0010346026392653584, -6.437291176553117e-06, -5.553057670593262, 0.0, -1.1444091796875e-05, -0.019397735595703125, -2.47955322265625e-05, -0.013324737548828125, -0.0001125335693359375, -0.07171797752380371, -1.9073486328125e-06, -0.0001678466796875, -0.03755474090576172, -1.9073486328125e-06, -0.12359324097633362, -0.0005190370138734579, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Drain", "Life", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Drain", " ", "Life", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Frozen", "<EOS>", 109]}, {"inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.change_attack(2)\n", "score": -6.040831661827042, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "DrainLife", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template16"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -7.82012939453125e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -9.476707055000588e-05, -7.152555099310121e-07, -5.7220458984375e-06, -0.000164031982421875, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -1.1563283806026448e-05, -4.780292510986328e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -3.0517578125e-05, -2.6702880859375e-05, -0.0004024505615234375, -2.09808349609375e-05, -4.38690185546875e-05, -6.67572021484375e-05, -7.62939453125e-06, -6.162936188047752e-05, -1.800060272216797e-05, -4.70866471005138e-05, -7.152555099310121e-07, -0.0001068115234375, -2.6702880859375e-05, 0.0, 0.0, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.00015735626220703125, 0.0, -2.6702880859375e-05, 0.0, 0.0, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -7.62939453125e-05, -3.814697265625e-06, -0.025360107421875, -1.9073486328125e-06, -0.000102996826171875, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.00011467933654785156, -3.814697265625e-06, -0.0012847185134887695, -1.33514404296875e-05, -0.0011467933654785156, -1.9073486328125e-05, -0.00022125244140625, -3.0517578125e-05, -4.9591064453125e-05, -6.866455078125e-05, -3.814697265625e-06, 0.0, -0.0003604888916015625, 0.0, -0.0001773834228515625, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -2.372264862060547e-05, -8.344646857949556e-07, -0.0008640289306640625, -0.0001468658447265625, -9.5367431640625e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -0.0010890960693359375, -5.44773974979762e-05, -8.106231689453125e-06, -1.1444091796875e-05, -0.00011444091796875, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, -0.038266539573669434, 0.0, -3.814697265625e-06, -0.0010433197021484375, -0.00012969970703125, -0.000152587890625, -3.814697265625e-06, -1.33514404296875e-05, -3.24249267578125e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -0.011046409606933594, -0.0010346026392653584, -6.437291176553117e-06, -5.954886436462402, 0.0, -4.9591064453125e-05, -0.0007724761962890625, -1.71661376953125e-05], "choice_history": [93, 145, 230, 101, 125, "Drain", "Life", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Drain", " ", "Life", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "change_attack", "<EOS>", 216, 69, 109]}, {"inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_heal_power(2), self)\n        player.hero.change_temp_attack(2)\n", "score": -6.180715180624922, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "DrainLife", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template16"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -7.82012939453125e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -9.476707055000588e-05, -7.152555099310121e-07, -5.7220458984375e-06, -0.000164031982421875, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -1.1563283806026448e-05, -4.780292510986328e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -3.0517578125e-05, -2.6702880859375e-05, -0.0004024505615234375, -2.09808349609375e-05, -4.38690185546875e-05, -6.67572021484375e-05, -7.62939453125e-06, -6.162936188047752e-05, -1.800060272216797e-05, -4.70866471005138e-05, -7.152555099310121e-07, -0.0001068115234375, -2.6702880859375e-05, 0.0, 0.0, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.00015735626220703125, 0.0, -2.6702880859375e-05, 0.0, 0.0, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -7.62939453125e-05, -3.814697265625e-06, -0.025360107421875, -1.9073486328125e-06, -0.000102996826171875, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.00011467933654785156, -3.814697265625e-06, -0.0012847185134887695, -1.33514404296875e-05, -0.0011467933654785156, -1.9073486328125e-05, -0.00022125244140625, -3.0517578125e-05, -4.9591064453125e-05, -6.866455078125e-05, -3.814697265625e-06, 0.0, -0.0003604888916015625, 0.0, -0.0001773834228515625, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -2.372264862060547e-05, -8.344646857949556e-07, -0.0008640289306640625, -0.0001468658447265625, -9.5367431640625e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -0.0010890960693359375, -5.44773974979762e-05, -8.106231689453125e-06, -1.1444091796875e-05, -0.00011444091796875, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, -3.310603380203247, -1.1920928244535389e-07, -1.52587890625e-05, -0.01708984375, -2.6702880859375e-05, -9.5367431640625e-05, -7.62939453125e-06, -9.5367431640625e-06, -5.91278076171875e-05, -1.9073486328125e-06, 0.0, -9.34600830078125e-05, 0.0, -0.009878158569335938, -0.001014814479276538, -7.152543730626348e-06, -2.807068347930908, 0.0, -1.9073486328125e-06, -0.00136566162109375, -8.58306884765625e-05], "choice_history": [93, 145, 230, 101, 125, "Drain", "Life", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Drain", " ", "Life", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "change_temp_attack", "<EOS>", 216, 69, 109]}, {"inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.increase_health(2)\n", "score": -6.62535533965297, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "DrainLife", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template16"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -7.82012939453125e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -9.476707055000588e-05, -7.152555099310121e-07, -5.7220458984375e-06, -0.000164031982421875, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -1.1563283806026448e-05, -4.780292510986328e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -3.0517578125e-05, -2.6702880859375e-05, -0.0004024505615234375, -2.09808349609375e-05, -4.38690185546875e-05, -6.67572021484375e-05, -7.62939453125e-06, -6.162936188047752e-05, -1.800060272216797e-05, -4.70866471005138e-05, -7.152555099310121e-07, -0.0001068115234375, -2.6702880859375e-05, 0.0, 0.0, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.00015735626220703125, 0.0, -2.6702880859375e-05, 0.0, 0.0, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -7.62939453125e-05, -3.814697265625e-06, -0.025360107421875, -1.9073486328125e-06, -0.000102996826171875, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.00011467933654785156, -3.814697265625e-06, -0.0012847185134887695, -1.33514404296875e-05, -0.0011467933654785156, -1.9073486328125e-05, -0.00022125244140625, -3.0517578125e-05, -4.9591064453125e-05, -6.866455078125e-05, -3.814697265625e-06, 0.0, -0.0003604888916015625, 0.0, -0.0001773834228515625, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -2.372264862060547e-05, -8.344646857949556e-07, -0.0008640289306640625, -0.0001468658447265625, -9.5367431640625e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -0.0010890960693359375, -5.44773974979762e-05, -8.106231689453125e-06, -1.1444091796875e-05, -0.00011444091796875, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, -0.038266539573669434, 0.0, -3.814697265625e-06, -0.0010433197021484375, -0.00012969970703125, -0.000152587890625, -3.814697265625e-06, -1.33514404296875e-05, -3.24249267578125e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -0.011046409606933594, -0.0010346026392653584, -6.437291176553117e-06, -6.5395073890686035, 0.0, -0.0002498626708984375, -0.0004787445068359375, -1.33514404296875e-05], "choice_history": [93, 145, 230, 101, 125, "Drain", "Life", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Drain", " ", "Life", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "increase_health", "<EOS>", 216, 69, 109]}, {"inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.append(2)\n", "score": -6.684038735038712, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "DrainLife", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template16"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -7.82012939453125e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -9.476707055000588e-05, -7.152555099310121e-07, -5.7220458984375e-06, -0.000164031982421875, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -1.1563283806026448e-05, -4.780292510986328e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -3.0517578125e-05, -2.6702880859375e-05, -0.0004024505615234375, -2.09808349609375e-05, -4.38690185546875e-05, -6.67572021484375e-05, -7.62939453125e-06, -6.162936188047752e-05, -1.800060272216797e-05, -4.70866471005138e-05, -7.152555099310121e-07, -0.0001068115234375, -2.6702880859375e-05, 0.0, 0.0, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.00015735626220703125, 0.0, -2.6702880859375e-05, 0.0, 0.0, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -7.62939453125e-05, -3.814697265625e-06, -0.025360107421875, -1.9073486328125e-06, -0.000102996826171875, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.00011467933654785156, -3.814697265625e-06, -0.0012847185134887695, -1.33514404296875e-05, -0.0011467933654785156, -1.9073486328125e-05, -0.00022125244140625, -3.0517578125e-05, -4.9591064453125e-05, -6.866455078125e-05, -3.814697265625e-06, 0.0, -0.0003604888916015625, 0.0, -0.0001773834228515625, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -2.372264862060547e-05, -8.344646857949556e-07, -0.0008640289306640625, -0.0001468658447265625, -9.5367431640625e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -0.0010890960693359375, -5.44773974979762e-05, -8.106231689453125e-06, -1.1444091796875e-05, -0.00011444091796875, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, -0.038266539573669434, 0.0, -3.814697265625e-06, -0.0010433197021484375, -0.00012969970703125, -0.000152587890625, -3.814697265625e-06, -1.33514404296875e-05, -3.24249267578125e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -0.011046409606933594, -0.0010346026392653584, -6.437291176553117e-06, -6.41174840927124, 0.0, -1.9073486328125e-05, -0.18700504302978516, -0.00016021728515625], "choice_history": [93, 145, 230, 101, 125, "Drain", "Life", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Drain", " ", "Life", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "append", "<EOS>", 216, 69, 109]}, {"inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -8.260416258752002, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "DrainLife", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template16"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -7.82012939453125e-05, -2.6702880859375e-05, -1.7881390022012056e-06, -9.476707055000588e-05, -7.152555099310121e-07, -5.7220458984375e-06, -0.000164031982421875, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -1.1563283806026448e-05, -4.780292510986328e-05, -9.5367431640625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -3.0517578125e-05, -2.6702880859375e-05, -0.0004024505615234375, -2.09808349609375e-05, -4.38690185546875e-05, -6.67572021484375e-05, -7.62939453125e-06, -6.162936188047752e-05, -1.800060272216797e-05, -4.70866471005138e-05, -7.152555099310121e-07, -0.0001068115234375, -2.6702880859375e-05, 0.0, 0.0, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.00015735626220703125, 0.0, -2.6702880859375e-05, 0.0, 0.0, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -7.62939453125e-05, -3.814697265625e-06, -0.025360107421875, -1.9073486328125e-06, -0.000102996826171875, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -7.43865966796875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.00011467933654785156, -3.814697265625e-06, -0.0012847185134887695, -1.33514404296875e-05, -0.0011467933654785156, -1.9073486328125e-05, -0.00022125244140625, -3.0517578125e-05, -4.9591064453125e-05, -6.866455078125e-05, -3.814697265625e-06, 0.0, -0.0003604888916015625, 0.0, -0.0001773834228515625, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -2.372264862060547e-05, -8.344646857949556e-07, -8.022696495056152, -7.2479248046875e-05, -0.000244140625, -9.5367431640625e-05, -0.000118255615234375, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -0.0030384063720703125, -8.391998562728986e-05, -6.198883056640625e-06, -2.288818359375e-05, -3.0517578125e-05, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -9.1552734375e-05, -0.2017977237701416, 0.0, -3.814697265625e-06, -0.0011081695556640625, -0.0001316070556640625, 0.0], "choice_history": [93, 145, 230, 101, 125, "Drain", "Life", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Drain", " ", "Life", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "", "score": -20.359094619750977, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -20.35909080505371], "choice_history": [93, 145, 228]}], "index": 26}
{"beams": [{"inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -0.060996056288388445, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DreadInfernal", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template28"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 6, "hole0": 6, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, -2.09808349609375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.00010501786891836673, -5.197408972890116e-05, -5.960462772236497e-07, -3.814697265625e-06, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.1920922133867862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.43865966796875e-05, -9.34600830078125e-05, -0.0013294219970703125, -0.000698089599609375, -0.0001239776611328125, -2.47955322265625e-05, -3.814697265625e-06, -3.62396240234375e-05, -6.866455078125e-05, -8.821448318485636e-06, -2.9444672691170126e-05, -2.503394853192731e-06, -5.7220458984375e-06, -0.000457763671875, -0.000141143798828125, 0.0, 0.0, -1.9073486328125e-06, -3.254413604736328e-05, -2.0265579223632812e-06, -0.00010383129119873047, -1.9073486328125e-06, -4.57763671875e-05, -0.00038909912109375, -9.5367431640625e-06, -4.220008850097656e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00022125244140625, 0.0, -0.0022194385528564453, -7.62939453125e-06, -0.0002880096435546875, -0.0014019012451171875, 0.0, -0.03472328186035156, -1.33514404296875e-05, -7.43865966796875e-05, -3.814697265625e-06, -0.002185821533203125, -0.000579833984375, -5.91278076171875e-05, 0.0, -0.00024032240617088974, -1.0132769602932967e-05, -0.000335693359375, -0.00193023681640625, -9.5367431640625e-05, -2.288818359375e-05, -0.0018558502197265625, 0.0, -0.00789940357208252, -0.00019097328186035156, 0.0, -0.0013980865478515625, -1.33514404296875e-05, -0.000438690185546875, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -0.00011229513620492071, -5.91278076171875e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -3.445148468017578e-05, 0.0, -1.9073486328125e-06, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, -6.67572021484375e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -8.58306884765625e-05, -2.6702880859375e-05, -2.407998363196384e-05, -6.079655122448457e-06, -0.00012756523210555315, -1.7881377516459906e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dread", "Infernal", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Dread", " ", "Infernal", "<EOS>", 81, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 88, 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 224, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "6", "<EOS>", "6", "<EOS>", 109]}, {"inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=(\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())), -1))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -3.8558769917931883, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DreadInfernal", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template28"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"_type": "Tuple", "elts": [{"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}]}], "_type": "Call"}, {"_type": "UnaryOp", "operand": {"_type": "Template14"}, "op": {"_type": "USub"}}]}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 6, "hole0": 6, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, -2.09808349609375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.00010501786891836673, -5.197408972890116e-05, -5.960462772236497e-07, -3.814697265625e-06, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.1920922133867862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.43865966796875e-05, -9.34600830078125e-05, -0.0013294219970703125, -0.000698089599609375, -0.0001239776611328125, -2.47955322265625e-05, -3.814697265625e-06, -3.62396240234375e-05, -6.866455078125e-05, -8.821448318485636e-06, -2.9444672691170126e-05, -2.503394853192731e-06, -5.7220458984375e-06, -0.000457763671875, -0.000141143798828125, 0.0, 0.0, -1.9073486328125e-06, -3.254413604736328e-05, -2.0265579223632812e-06, -0.00010383129119873047, -1.9073486328125e-06, -4.57763671875e-05, -0.00038909912109375, -9.5367431640625e-06, -4.220008850097656e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00022125244140625, 0.0, -0.0022194385528564453, -7.62939453125e-06, -0.0002880096435546875, -0.0014019012451171875, 0.0, -3.509157180786133, -0.04735374450683594, -9.34600830078125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -0.04908561706542969, -1.9073486328125e-06, -0.0744333267211914, -0.01633739471435547, -4.00543212890625e-05, 0.0, -0.0006592910503968596, -4.386900400277227e-05, -0.0012912750244140625, -0.03686332702636719, -9.918212890625e-05, -2.6702880859375e-05, -0.0013561248779296875, 0.0, -0.0072335004806518555, -0.00021004676818847656, 0.0, -0.0016431808471679688, -1.71661376953125e-05, -0.0004749298095703125, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -0.00011050699686165899, -5.91278076171875e-05, 0.0, -0.06367015838623047, -0.0001316070556640625, -0.0007114410400390625, -0.03491497039794922, -0.000995635986328125, -5.7220458984375e-06, -0.00018310546875, -1.1920928244535389e-07, -3.814697265625e-06, -1.9073486328125e-06, -7.2479248046875e-05, -7.62939453125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -6.67572021484375e-05, -2.47955322265625e-05, -1.4424218534259126e-05, -5.8412379075889476e-06, -0.00010050582932308316, -2.0265558760002023e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dread", "Infernal", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Dread", " ", "Infernal", "<EOS>", 81, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 88, 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 205, "battlecry", "<EOS>", 53, 198, 217, 58, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 224, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 92, 200, 112, 28, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "6", "<EOS>", "6", "<EOS>", 109]}, {"inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), HeroSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -5.1277377612037185, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DreadInfernal", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template28"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "HeroSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 6, "hole0": 6, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, -2.09808349609375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.00010501786891836673, -5.197408972890116e-05, -5.960462772236497e-07, -3.814697265625e-06, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.1920922133867862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.43865966796875e-05, -9.34600830078125e-05, -0.0013294219970703125, -0.000698089599609375, -0.0001239776611328125, -2.47955322265625e-05, -3.814697265625e-06, -3.62396240234375e-05, -6.866455078125e-05, -8.821448318485636e-06, -2.9444672691170126e-05, -2.503394853192731e-06, -5.7220458984375e-06, -0.000457763671875, -0.000141143798828125, 0.0, 0.0, -1.9073486328125e-06, -3.254413604736328e-05, -2.0265579223632812e-06, -0.00010383129119873047, -1.9073486328125e-06, -4.57763671875e-05, -0.00038909912109375, -9.5367431640625e-06, -4.220008850097656e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00022125244140625, 0.0, -0.0022194385528564453, -7.62939453125e-06, -0.0002880096435546875, -0.0014019012451171875, 0.0, -0.03472328186035156, -1.33514404296875e-05, -7.43865966796875e-05, -3.814697265625e-06, -0.002185821533203125, -0.000579833984375, -5.91278076171875e-05, 0.0, -0.00024032240617088974, -1.0132769602932967e-05, -0.000335693359375, -0.00193023681640625, -9.5367431640625e-05, -2.288818359375e-05, -0.0018558502197265625, 0.0, -5.074459075927734, -0.0008411407470703125, 0.0, -1.52587890625e-05, -1.1444091796875e-05, -0.0013027191162109375, 0.0, -7.2479248046875e-05, -3.814697265625e-06, -0.00011503695714054629, -5.53131103515625e-05, 0.0, -1.33514404296875e-05, 0.0, -3.445148468017578e-05, 0.0, -1.9073486328125e-06, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, -7.2479248046875e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -8.58306884765625e-05, -2.6702880859375e-05, -2.4199189283535816e-05, -6.079655122448457e-06, -0.00012959176092408597, -1.7881377516459906e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dread", "Infernal", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Dread", " ", "Infernal", "<EOS>", 81, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 88, 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Hero", "Selector", "<EOS>", 224, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "6", "<EOS>", "6", "<EOS>", 109]}, {"inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=(\n            Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -6.823510174023227, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DreadInfernal", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template28"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"_type": "Tuple", "elts": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}]}]}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 6, "hole0": 6, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, -2.09808349609375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.00010501786891836673, -5.197408972890116e-05, -5.960462772236497e-07, -3.814697265625e-06, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.1920922133867862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.43865966796875e-05, -9.34600830078125e-05, -0.0013294219970703125, -0.000698089599609375, -0.0001239776611328125, -2.47955322265625e-05, -3.814697265625e-06, -3.62396240234375e-05, -6.866455078125e-05, -8.821448318485636e-06, -2.9444672691170126e-05, -2.503394853192731e-06, -5.7220458984375e-06, -0.000457763671875, -0.000141143798828125, 0.0, 0.0, -1.9073486328125e-06, -3.254413604736328e-05, -2.0265579223632812e-06, -0.00010383129119873047, -1.9073486328125e-06, -4.57763671875e-05, -0.00038909912109375, -9.5367431640625e-06, -4.220008850097656e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00022125244140625, 0.0, -0.0022194385528564453, -7.62939453125e-06, -0.0002880096435546875, -0.0014019012451171875, 0.0, -3.509157180786133, -0.04735374450683594, -9.34600830078125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -3.117363929748535, -3.814697265625e-06, -0.10162031650543213, -5.960462772236497e-07, -0.001560211181640625, -0.0018157958984375, -6.866455078125e-05, -0.000545501708984375, -0.005463600158691406, 0.0, -0.02606356143951416, -0.002236008644104004, 0.0, -0.0005474090576171875, -7.62939453125e-06, -0.000637054443359375, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -0.00010991088493028656, -5.91278076171875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -4.589557647705078e-05, 0.0, -1.9073486328125e-06, 0.0, -6.866455078125e-05, -5.7220458984375e-06, -6.866455078125e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -8.7738037109375e-05, -2.6702880859375e-05, -2.4318396754097193e-05, -5.960446742392378e-06, -0.0001245848834514618, -1.7881377516459906e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dread", "Infernal", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Dread", " ", "Infernal", "<EOS>", 81, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 88, 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 205, "battlecry", "<EOS>", 53, 198, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 224, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "6", "<EOS>", "6", "<EOS>", 109]}, {"inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(5), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -6.985091090967728, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DreadInfernal", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template28"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 6, "hole0": 6, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, -2.09808349609375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.00010501786891836673, -5.197408972890116e-05, -5.960462772236497e-07, -3.814697265625e-06, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.1920922133867862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.43865966796875e-05, -9.34600830078125e-05, -0.0013294219970703125, -0.000698089599609375, -0.0001239776611328125, -2.47955322265625e-05, -3.814697265625e-06, -3.62396240234375e-05, -6.866455078125e-05, -8.821448318485636e-06, -2.9444672691170126e-05, -2.503394853192731e-06, -5.7220458984375e-06, -0.000457763671875, -0.000141143798828125, 0.0, 0.0, -1.9073486328125e-06, -3.254413604736328e-05, -2.0265579223632812e-06, -0.00010383129119873047, -1.9073486328125e-06, -4.57763671875e-05, -0.00038909912109375, -9.5367431640625e-06, -4.220008850097656e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00022125244140625, 0.0, -0.0022194385528564453, -7.62939453125e-06, -0.0002880096435546875, -0.0014019012451171875, 0.0, -0.03472328186035156, -1.33514404296875e-05, -7.43865966796875e-05, -3.814697265625e-06, -0.002185821533203125, -0.000579833984375, -5.91278076171875e-05, 0.0, -0.00024032240617088974, -1.0132769602932967e-05, -0.000335693359375, -6.648775100708008, -0.27910423278808594, -0.000247955322265625, -0.0004749298095703125, 0.0, -0.007338762283325195, -0.00021564960479736328, 0.0, -0.0012788772583007812, -1.1444091796875e-05, -0.00042724609375, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.00011432169412728399, -5.91278076171875e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -5.352497100830078e-05, 0.0, -3.814697265625e-06, 0.0, -6.4849853515625e-05, -7.62939453125e-06, -0.0001125335693359375, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -8.96453857421875e-05, -2.6702880859375e-05, -2.5510458726785146e-05, -6.079655122448457e-06, -0.00011540600098669529, -1.7881377516459906e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dread", "Infernal", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Dread", " ", "Infernal", "<EOS>", 81, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 88, 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 77, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 224, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "6", "<EOS>", "6", "<EOS>", 109]}, {"inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=(\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())),\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer()))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -7.040160843176466, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DreadInfernal", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template28"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"_type": "Tuple", "elts": [{"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}]}], "_type": "Call"}, {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}]}], "_type": "Call"}]}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 6, "hole0": 6, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, -2.09808349609375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.00010501786891836673, -5.197408972890116e-05, -5.960462772236497e-07, -3.814697265625e-06, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.1920922133867862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.43865966796875e-05, -9.34600830078125e-05, -0.0013294219970703125, -0.000698089599609375, -0.0001239776611328125, -2.47955322265625e-05, -3.814697265625e-06, -3.62396240234375e-05, -6.866455078125e-05, -8.821448318485636e-06, -2.9444672691170126e-05, -2.503394853192731e-06, -5.7220458984375e-06, -0.000457763671875, -0.000141143798828125, 0.0, 0.0, -1.9073486328125e-06, -3.254413604736328e-05, -2.0265579223632812e-06, -0.00010383129119873047, -1.9073486328125e-06, -4.57763671875e-05, -0.00038909912109375, -9.5367431640625e-06, -4.220008850097656e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00022125244140625, 0.0, -0.0022194385528564453, -7.62939453125e-06, -0.0002880096435546875, -0.0014019012451171875, 0.0, -3.509157180786133, -0.04735374450683594, -9.34600830078125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -0.04908561706542969, -1.9073486328125e-06, -0.0744333267211914, -0.01633739471435547, -4.00543212890625e-05, 0.0, -0.0006592910503968596, -4.386900400277227e-05, -0.0012912750244140625, -0.03686332702636719, -9.918212890625e-05, -2.6702880859375e-05, -0.0013561248779296875, 0.0, -0.0072335004806518555, -0.00021004676818847656, 0.0, -0.0016431808471679688, -1.71661376953125e-05, -0.0004749298095703125, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -0.00011050699686165899, -5.91278076171875e-05, 0.0, -2.8662548065185547, -0.014079093933105469, -0.0003814697265625, -3.814697265625e-06, -0.12871837615966797, -0.031256675720214844, -0.0002918243408203125, 0.0, -0.005205631256103516, -0.0005192756652832031, -0.00057220458984375, -0.22077560424804688, -0.000736236572265625, -4.00543212890625e-05, -0.0006542205810546875, 0.0, -0.009879350662231445, -0.00014126300811767578, 0.0, -0.00458526611328125, -1.33514404296875e-05, -0.000453948974609375, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.00012505054473876953, -5.91278076171875e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -5.53131103515625e-05, -3.814697265625e-06, -8.392333984375e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -8.392333984375e-05, -2.6702880859375e-05, -2.5272047423641197e-05, -6.318072337307967e-06, -0.00012673089804593474, -1.9073468138230965e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dread", "Infernal", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Dread", " ", "Infernal", "<EOS>", 81, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 88, 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 205, "battlecry", "<EOS>", 53, 198, 217, 58, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 224, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 58, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 224, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "6", "<EOS>", "6", "<EOS>", 109]}, {"inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.Enemy, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -7.0833988157097, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DreadInfernal", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template28"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "Enemy", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 6, "hole0": 6, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, -2.09808349609375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.00010501786891836673, -5.197408972890116e-05, -5.960462772236497e-07, -3.814697265625e-06, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.1920922133867862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.43865966796875e-05, -9.34600830078125e-05, -0.0013294219970703125, -0.000698089599609375, -0.0001239776611328125, -2.47955322265625e-05, -3.814697265625e-06, -3.62396240234375e-05, -6.866455078125e-05, -8.821448318485636e-06, -2.9444672691170126e-05, -2.503394853192731e-06, -5.7220458984375e-06, -0.000457763671875, -0.000141143798828125, 0.0, 0.0, -1.9073486328125e-06, -3.254413604736328e-05, -2.0265579223632812e-06, -0.00010383129119873047, -1.9073486328125e-06, -4.57763671875e-05, -0.00038909912109375, -9.5367431640625e-06, -4.220008850097656e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00022125244140625, 0.0, -7.026108741760254, 0.0, -0.00079345703125, -0.0028600692749023438, 0.0, -0.03023242950439453, -7.62939453125e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.00304412841796875, -0.000522613525390625, -5.53131103515625e-05, 0.0, -0.00028621405363082886, -1.2397729733493179e-05, -0.0004024505615234375, -0.0027370452880859375, -7.43865966796875e-05, -2.47955322265625e-05, -0.0015344619750976562, 0.0, -0.007629275321960449, -0.00018715858459472656, 0.0, -0.0013761520385742188, -1.33514404296875e-05, -0.0004329681396484375, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -0.00011229513620492071, -5.91278076171875e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -3.445148468017578e-05, 0.0, -1.9073486328125e-06, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, -6.67572021484375e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -8.58306884765625e-05, -2.6702880859375e-05, -2.407998363196384e-05, -6.079655122448457e-06, -0.00012756523210555315, -1.7881377516459906e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dread", "Infernal", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Dread", " ", "Infernal", "<EOS>", 81, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 88, 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "Enemy", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 224, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "6", "<EOS>", "6", "<EOS>", 109]}, {"inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), MinionSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -7.196454168060029, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DreadInfernal", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template28"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 6, "hole0": 6, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, -2.09808349609375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.00010501786891836673, -5.197408972890116e-05, -5.960462772236497e-07, -3.814697265625e-06, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.1920922133867862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.43865966796875e-05, -9.34600830078125e-05, -0.0013294219970703125, -0.000698089599609375, -0.0001239776611328125, -2.47955322265625e-05, -3.814697265625e-06, -3.62396240234375e-05, -6.866455078125e-05, -8.821448318485636e-06, -2.9444672691170126e-05, -2.503394853192731e-06, -5.7220458984375e-06, -0.000457763671875, -0.000141143798828125, 0.0, 0.0, -1.9073486328125e-06, -3.254413604736328e-05, -2.0265579223632812e-06, -0.00010383129119873047, -1.9073486328125e-06, -4.57763671875e-05, -0.00038909912109375, -9.5367431640625e-06, -4.220008850097656e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00022125244140625, 0.0, -0.0022194385528564453, -7.62939453125e-06, -0.0002880096435546875, -0.0014019012451171875, 0.0, -0.03472328186035156, -1.33514404296875e-05, -7.43865966796875e-05, -3.814697265625e-06, -0.002185821533203125, -0.000579833984375, -5.91278076171875e-05, 0.0, -0.00024032240617088974, -1.0132769602932967e-05, -0.000335693359375, -0.00193023681640625, -9.5367431640625e-05, -2.288818359375e-05, -0.0018558502197265625, 0.0, -7.075037479400635, -0.06931781768798828, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00098419189453125, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -0.00011694430577335879, -6.29425048828125e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -4.208087921142578e-05, 0.0, -1.9073486328125e-06, 0.0, -6.67572021484375e-05, -5.7220458984375e-06, -6.866455078125e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -8.58306884765625e-05, -2.6702880859375e-05, -2.3483951736125164e-05, -5.8412379075889476e-06, -0.00012947256618645042, -1.7881377516459906e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dread", "Infernal", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Dread", " ", "Infernal", "<EOS>", 81, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 88, 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Minion", "Selector", "<EOS>", 224, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "6", "<EOS>", "6", "<EOS>", 109]}, {"inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), MinionSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -7.218901276917734, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DreadInfernal", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template28"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 6, "hole0": 6, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, -2.09808349609375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.00010501786891836673, -5.197408972890116e-05, -5.960462772236497e-07, -3.814697265625e-06, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.1920922133867862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.43865966796875e-05, -9.34600830078125e-05, -0.0013294219970703125, -0.000698089599609375, -0.0001239776611328125, -2.47955322265625e-05, -3.814697265625e-06, -3.62396240234375e-05, -6.866455078125e-05, -8.821448318485636e-06, -2.9444672691170126e-05, -2.503394853192731e-06, -5.7220458984375e-06, -0.000457763671875, -0.000141143798828125, 0.0, 0.0, -1.9073486328125e-06, -3.254413604736328e-05, -2.0265579223632812e-06, -0.00010383129119873047, -1.9073486328125e-06, -4.57763671875e-05, -0.00038909912109375, -9.5367431640625e-06, -4.220008850097656e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00022125244140625, 0.0, -0.0022194385528564453, -7.62939453125e-06, -0.0002880096435546875, -0.0014019012451171875, 0.0, -0.03472328186035156, -1.33514404296875e-05, -7.43865966796875e-05, -3.814697265625e-06, -0.002185821533203125, -0.000579833984375, -5.91278076171875e-05, 0.0, -0.00024032240617088974, -1.0132769602932967e-05, -0.000335693359375, -0.00193023681640625, -9.5367431640625e-05, -2.288818359375e-05, -6.872955322265625, -0.2718324661254883, -0.0001354217529296875, -0.014607429504394531, 0.0, -0.009687423706054688, -1.9073486328125e-06, -0.00023651123046875, -0.0004634857177734375, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, 0.0, -6.103515625e-05, -5.7220458984375e-06, -5.53131103515625e-05, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -8.392333984375e-05, -2.6702880859375e-05, -2.7536963898455724e-05, -6.794906312279636e-06, -0.00012208132829982787, -2.0265558760002023e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dread", "Infernal", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Dread", " ", "Infernal", "<EOS>", 81, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 88, 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 38, 224, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "6", "<EOS>", "6", "<EOS>", 109]}, {"inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=(\n            Battlecry(Damage(2), CharacterSelector(players=BothPlayer())), -1))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -7.67424912267375, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DreadInfernal", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template28"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"_type": "Tuple", "elts": [{"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}]}], "_type": "Call"}, {"_type": "UnaryOp", "operand": {"_type": "Template14"}, "op": {"_type": "USub"}}]}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 6, "hole0": 6, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, -2.09808349609375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.00010501786891836673, -5.197408972890116e-05, -5.960462772236497e-07, -3.814697265625e-06, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.1920922133867862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.43865966796875e-05, -9.34600830078125e-05, -0.0013294219970703125, -0.000698089599609375, -0.0001239776611328125, -2.47955322265625e-05, -3.814697265625e-06, -3.62396240234375e-05, -6.866455078125e-05, -8.821448318485636e-06, -2.9444672691170126e-05, -2.503394853192731e-06, -5.7220458984375e-06, -0.000457763671875, -0.000141143798828125, 0.0, 0.0, -1.9073486328125e-06, -3.254413604736328e-05, -2.0265579223632812e-06, -0.00010383129119873047, -1.9073486328125e-06, -4.57763671875e-05, -0.00038909912109375, -9.5367431640625e-06, -4.220008850097656e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00022125244140625, 0.0, -0.0022194385528564453, -7.62939453125e-06, -0.0002880096435546875, -0.0014019012451171875, 0.0, -3.509157180786133, -0.04735374450683594, -9.34600830078125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -0.04908561706542969, -1.9073486328125e-06, -0.0744333267211914, -0.01633739471435547, -4.00543212890625e-05, 0.0, -0.0006592910503968596, -4.386900400277227e-05, -0.0012912750244140625, -3.8149871826171875, -1.33514404296875e-05, -0.005780220031738281, -4.1961669921875e-05, 0.0, -0.026508092880249023, -0.00034546852111816406, 0.0, -0.0011491775512695312, -1.71661376953125e-05, -0.0005207061767578125, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -0.0001097917411243543, -6.103515625e-05, 0.0, -0.07387256622314453, -0.0001068115234375, -0.0007457733154296875, -0.04168987274169922, -0.0008525848388671875, -7.62939453125e-06, -0.000244140625, -1.1920928244535389e-07, -7.62939453125e-06, -1.9073486328125e-06, -7.82012939453125e-05, -7.62939453125e-06, -4.57763671875e-05, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, -6.866455078125e-05, -2.6702880859375e-05, -1.3947387742518913e-05, -5.8412379075889476e-06, -9.168482210952789e-05, -2.0265558760002023e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dread", "Infernal", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Dread", " ", "Infernal", "<EOS>", 81, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 88, 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 205, "battlecry", "<EOS>", 53, 198, 217, 58, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 69, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 224, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 92, 200, 112, 28, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "6", "<EOS>", "6", "<EOS>", 109]}, {"inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry([Damage(1), CharacterSelector(players=BothPlayer())], -1)\n            )\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -8.038119199533924, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DreadInfernal", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template28"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"_type": "List", "elts": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}]}]}, {"_type": "UnaryOp", "operand": {"_type": "Template14"}, "op": {"_type": "USub"}}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 6, "hole0": 6, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, -2.09808349609375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.00010501786891836673, -5.197408972890116e-05, -5.960462772236497e-07, -3.814697265625e-06, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.1920922133867862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.43865966796875e-05, -9.34600830078125e-05, -0.0013294219970703125, -0.000698089599609375, -0.0001239776611328125, -2.47955322265625e-05, -3.814697265625e-06, -3.62396240234375e-05, -6.866455078125e-05, -8.821448318485636e-06, -2.9444672691170126e-05, -2.503394853192731e-06, -5.7220458984375e-06, -0.000457763671875, -0.000141143798828125, 0.0, 0.0, -1.9073486328125e-06, -3.254413604736328e-05, -2.0265579223632812e-06, -0.00010383129119873047, -1.9073486328125e-06, -4.57763671875e-05, -0.00038909912109375, -9.5367431640625e-06, -4.220008850097656e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00022125244140625, 0.0, -0.0022194385528564453, -7.62939453125e-06, -0.0002880096435546875, -0.0014019012451171875, 0.0, -0.03472328186035156, -1.33514404296875e-05, -7.43865966796875e-05, -3.814697265625e-06, -7.123796463012695, -0.0005130767822265625, -0.13920211791992188, -0.0011444091796875, -0.0036106109619140625, -0.004421234130859375, 0.0, -0.00021529024525079876, -0.00022685513249598444, -0.0004367828369140625, -0.0041980743408203125, -0.004612922668457031, -0.000789642333984375, -0.0033712387084960938, 0.0, -0.007399797439575195, -0.00016224384307861328, 0.0, -0.0011034011840820312, -2.47955322265625e-05, -0.0004482269287109375, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.00010955332254525274, -6.103515625e-05, 0.0, -0.5950384140014648, -0.000152587890625, -0.0029172897338867188, -0.0994110107421875, -0.0009517669677734375, -7.62939453125e-06, -0.000274658203125, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -8.0108642578125e-05, -1.1444091796875e-05, -4.76837158203125e-05, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -1.33514404296875e-05, -6.29425048828125e-05, -2.47955322265625e-05, -1.6927573597058654e-05, -6.079655122448457e-06, -0.00010861110058613122, -2.0265558760002023e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dread", "Infernal", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Dread", " ", "Infernal", "<EOS>", 81, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 88, 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 61, 141, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 224, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 92, 200, 112, 28, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "6", "<EOS>", "6", "<EOS>", 109]}, {"inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=(\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())),\n            Battlecry(Damage(2), CharacterSelector(players=BothPlayer()))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -8.454104253668277, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DreadInfernal", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template28"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"_type": "Tuple", "elts": [{"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}]}], "_type": "Call"}, {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}]}], "_type": "Call"}]}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 6, "hole0": 6, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, -2.09808349609375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.00010501786891836673, -5.197408972890116e-05, -5.960462772236497e-07, -3.814697265625e-06, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.1920922133867862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.43865966796875e-05, -9.34600830078125e-05, -0.0013294219970703125, -0.000698089599609375, -0.0001239776611328125, -2.47955322265625e-05, -3.814697265625e-06, -3.62396240234375e-05, -6.866455078125e-05, -8.821448318485636e-06, -2.9444672691170126e-05, -2.503394853192731e-06, -5.7220458984375e-06, -0.000457763671875, -0.000141143798828125, 0.0, 0.0, -1.9073486328125e-06, -3.254413604736328e-05, -2.0265579223632812e-06, -0.00010383129119873047, -1.9073486328125e-06, -4.57763671875e-05, -0.00038909912109375, -9.5367431640625e-06, -4.220008850097656e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00022125244140625, 0.0, -0.0022194385528564453, -7.62939453125e-06, -0.0002880096435546875, -0.0014019012451171875, 0.0, -3.509157180786133, -0.04735374450683594, -9.34600830078125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -0.04908561706542969, -1.9073486328125e-06, -0.0744333267211914, -0.01633739471435547, -4.00543212890625e-05, 0.0, -0.0006592910503968596, -4.386900400277227e-05, -0.0012912750244140625, -0.03686332702636719, -9.918212890625e-05, -2.6702880859375e-05, -0.0013561248779296875, 0.0, -0.0072335004806518555, -0.00021004676818847656, 0.0, -0.0016431808471679688, -1.71661376953125e-05, -0.0004749298095703125, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -0.00011050699686165899, -5.91278076171875e-05, 0.0, -2.8662548065185547, -0.014079093933105469, -0.0003814697265625, -3.814697265625e-06, -0.12871837615966797, -0.031256675720214844, -0.0002918243408203125, 0.0, -0.005205631256103516, -0.0005192756652832031, -0.00057220458984375, -1.6231346130371094, -0.0002155303955078125, -0.0025730133056640625, -4.38690185546875e-05, 0.0, -0.0199357271194458, -0.0001888275146484375, 0.0, -0.00439453125, -1.9073486328125e-05, -0.00063323974609375, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -0.00012111663090763614, -5.91278076171875e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -9.5367431640625e-06, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -0.0001373291015625, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -8.96453857421875e-05, -2.86102294921875e-05, -2.598728497105185e-05, -6.198863957251888e-06, -0.00011326084495522082, -1.9073468138230965e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dread", "Infernal", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Dread", " ", "Infernal", "<EOS>", 81, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 88, 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 205, "battlecry", "<EOS>", 53, 198, 217, 58, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 224, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 58, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 69, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 224, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "6", "<EOS>", "6", "<EOS>", 109]}, {"inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=RandomPicker(3))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -8.739286189662664, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "DreadInfernal", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template28"}, {"attr": "WARLOCK", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"func": {"id": "RandomPicker", "_type": "Name"}, "args": [{"_type": "Template16"}], "_type": "Call"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 6, "hole0": 6, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, -2.09808349609375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.00010501786891836673, -5.197408972890116e-05, -5.960462772236497e-07, -3.814697265625e-06, -2.47955322265625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.1920922133867862e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.43865966796875e-05, -9.34600830078125e-05, -0.0013294219970703125, -0.000698089599609375, -0.0001239776611328125, -2.47955322265625e-05, -3.814697265625e-06, -3.62396240234375e-05, -6.866455078125e-05, -8.821448318485636e-06, -2.9444672691170126e-05, -2.503394853192731e-06, -5.7220458984375e-06, -0.000457763671875, -0.000141143798828125, 0.0, 0.0, -1.9073486328125e-06, -3.254413604736328e-05, -2.0265579223632812e-06, -0.00010383129119873047, -1.9073486328125e-06, -4.57763671875e-05, -0.00038909912109375, -9.5367431640625e-06, -4.220008850097656e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00022125244140625, 0.0, -0.0022194385528564453, -7.62939453125e-06, -0.0002880096435546875, -0.0014019012451171875, 0.0, -0.03472328186035156, -1.33514404296875e-05, -7.43865966796875e-05, -3.814697265625e-06, -0.002185821533203125, -0.000579833984375, -5.91278076171875e-05, 0.0, -0.00024032240617088974, -1.0132769602932967e-05, -0.000335693359375, -0.00193023681640625, -9.5367431640625e-05, -2.288818359375e-05, -0.0018558502197265625, 0.0, -0.00789940357208252, -0.00019097328186035156, 0.0, -7.105841636657715, -1.33514404296875e-05, -0.000293731689453125, -1.9073486328125e-06, -9.918212890625e-05, -3.814697265625e-06, -0.0001640317204874009, -7.82012939453125e-05, 0.0, -3.814697265625e-06, -0.004086494445800781, -3.814697265625e-06, -0.056941986083984375, -0.000591278076171875, -0.0040836334228515625, -9.5367431640625e-06, -0.9965448379516602, -0.0012111663818359375, -7.62939453125e-06, -0.00016021728515625, -0.5055150985717773, -0.0004749298095703125, -0.0008697509765625, -0.0030099153518676758, -2.0265579223632812e-06, -3.814697265625e-06, -3.814697265625e-06, -0.000400543212890625, -4.00543212890625e-05, -4.76837158203125e-05, -2.09808349609375e-05, -1.33514404296875e-05, 0.0, -1.9073486328125e-05, -0.000118255615234375, -4.1961669921875e-05, -2.18150598811917e-05, -6.079655122448457e-06, -7.535642362199724e-05, -1.311301275563892e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Dread", "Infernal", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Dread", " ", "Infernal", "<EOS>", 81, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 88, 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 18, 123, 23, 146, "Random", "Picker", "<EOS>", 216, 72, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "6", "<EOS>", "6", "<EOS>", 109]}, {"inferred_code": "", "score": -20.292537689208984, "model_output": {"_type": "Module", "body": []}, "score_history": [-4.76837158203125e-05, -2.09808349609375e-05, -20.292469024658203], "choice_history": [93, 145, 228]}, {"inferred_code": "super().use(player, game)\n", "score": -24.66276454925537, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.76837158203125e-05, -2.09808349609375e-05, -9.5367431640625e-06, -15.757722854614258, -8.904963493347168], "choice_history": [93, 145, 230, 108, 109]}], "index": 27}
{"beams": [{"inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -0.0748871231514272, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "ElvenArcher", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 1, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -7.62939453125e-06, -4.0411134250462055e-05, -3.6954811548639555e-06, -7.986990567587782e-06, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-06, -7.62939453125e-06, -5.960462772236497e-07, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.0002002716064453125, -6.103515625e-05, -0.000171661376953125, -6.29425048828125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.4185829968482722e-05, -1.263618378288811e-05, -2.503394853192731e-06, -1.9073486328125e-06, -4.57763671875e-05, -3.0517578125e-05, -2.47955322265625e-05, -0.06261634826660156, -4.00543212890625e-05, -0.0023633241653442383, 0.0, -1.52587890625e-05, -0.0003147125244140625, -0.0003833770751953125, -7.62939453125e-06, -0.0014495849609375, -4.9591064453125e-05, -5.53131103515625e-05, 0.0, -0.00014114059740677476, -0.00018166079826187342, -3.62396240234375e-05, -0.0004100799560546875, -0.000110626220703125, -9.34600830078125e-05, -1.52587890625e-05, 0.0, -0.0008373260498046875, -0.0003911256790161133, 0.0, -0.0001049041748046875, -5.7220458984375e-06, -0.0006084442138671875, -1.9073486328125e-06, -7.43865966796875e-05, -1.9073486328125e-06, -0.0005587154300883412, -0.0002709627151489258, -3.814697265625e-06, -0.000431060791015625, -0.000396728515625, -9.5367431640625e-06, -6.67572021484375e-05, -7.62939453125e-06, -0.00021469593048095703, -0.00010216236114501953, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, 0.0, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -1.0251998901367188e-05, 0.0, -7.62939453125e-06, -6.103515625e-05, -2.288818359375e-05, -6.437280717364047e-06, -3.3378546504536644e-06, -0.0014228855725377798, -8.344646857949556e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Elven", "Archer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Elven", " ", "Archer", "<EOS>", 70, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "1", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -2.906348484920443, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "ElvenArcher", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 1, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -7.62939453125e-06, -4.0411134250462055e-05, -3.6954811548639555e-06, -7.986990567587782e-06, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-06, -7.62939453125e-06, -5.960462772236497e-07, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.0002002716064453125, -6.103515625e-05, -0.000171661376953125, -6.29425048828125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.4185829968482722e-05, -1.263618378288811e-05, -2.503394853192731e-06, -1.9073486328125e-06, -4.57763671875e-05, -3.0517578125e-05, -2.47955322265625e-05, -2.8565196990966797, -1.9073486328125e-06, -0.0010538101196289062, -1.71661376953125e-05, -0.00012969970703125, 0.0, -0.018087387084960938, 0.0, -0.000408172607421875, 0.0, -0.0028511283453553915, 0.0, -7.62939453125e-06, -0.0063915252685546875, -1.9073486328125e-06, -7.62939453125e-05, -1.33514404296875e-05, -0.0003509521484375, -3.814697265625e-06, -0.00844573974609375, -6.866455078125e-05, -9.1552734375e-05, 0.0, -0.0005937335663475096, -0.0003715247439686209, -0.00014495849609375, -0.00322723388671875, -5.7220458984375e-06, -0.0009555816650390625, -3.0517578125e-05, 0.0, -0.00044083595275878906, -0.0008774995803833008, 0.0, -0.0005035400390625, -3.814697265625e-06, -0.00026702880859375, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -0.00031101208878681064, -0.000453948974609375, -9.5367431640625e-06, -0.000202178955078125, -0.0002422332763671875, -2.288818359375e-05, -7.82012939453125e-05, -3.814697265625e-06, -0.0003974437713623047, -9.417533874511719e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.52587890625e-05, 0.0, 0.0, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -1.0251998901367188e-05, 0.0, -7.62939453125e-06, -6.103515625e-05, -2.288818359375e-05, -6.556489552167477e-06, -3.3378546504536644e-06, -0.001415733015164733, -8.344646857949556e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Elven", "Archer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Elven", " ", "Archer", "<EOS>", 70, 89, 88, 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "1", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, combo=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -6.369675119076135, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "ElvenArcher", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "combo"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 1, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -7.62939453125e-06, -4.0411134250462055e-05, -3.6954811548639555e-06, -7.986990567587782e-06, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-06, -7.62939453125e-06, -5.960462772236497e-07, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.0002002716064453125, -6.103515625e-05, -0.000171661376953125, -6.29425048828125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.4185829968482722e-05, -1.263618378288811e-05, -2.503394853192731e-06, -1.9073486328125e-06, -4.57763671875e-05, -3.0517578125e-05, -2.47955322265625e-05, -0.06261634826660156, -4.00543212890625e-05, -6.295969009399414, 0.0, -2.86102294921875e-05, -0.0007686614990234375, -0.0004940032958984375, -5.7220458984375e-06, -0.0019130706787109375, -4.38690185546875e-05, -7.05718994140625e-05, 0.0, -0.00016474224685225636, -0.00019310254720039666, -4.76837158203125e-05, -0.0005435943603515625, -0.0001087188720703125, -9.72747802734375e-05, -1.52587890625e-05, 0.0, -0.0007534027099609375, -0.0003720521926879883, 0.0, -0.000118255615234375, -3.814697265625e-06, -0.000476837158203125, -1.9073486328125e-06, -7.43865966796875e-05, -1.9073486328125e-06, -0.0005751634016633034, -0.0003739595413208008, -1.9073486328125e-06, -0.000484466552734375, -0.0003814697265625, -9.5367431640625e-06, -7.2479248046875e-05, -7.62939453125e-06, -0.00023174285888671875, -0.00010013580322265625, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, 0.0, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -1.0132789611816406e-05, 0.0, -7.62939453125e-06, -6.103515625e-05, -2.288818359375e-05, -6.437280717364047e-06, -3.3378546504536644e-06, -0.0014191900845617056, -8.344646857949556e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Elven", "Archer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Elven", " ", "Archer", "<EOS>", 70, 89, 88, 224, 205, "combo", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "1", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 0)\n", "score": -7.16531058443212, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "ElvenArcher", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 0, "hole0": 1, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -7.62939453125e-06, -4.0411134250462055e-05, -3.6954811548639555e-06, -7.986990567587782e-06, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-06, -7.62939453125e-06, -5.960462772236497e-07, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.0002002716064453125, -6.103515625e-05, -0.000171661376953125, -6.29425048828125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.4185829968482722e-05, -1.263618378288811e-05, -2.503394853192731e-06, -1.9073486328125e-06, -4.57763671875e-05, -3.0517578125e-05, -2.47955322265625e-05, -0.06261634826660156, -4.00543212890625e-05, -0.0023633241653442383, 0.0, -1.52587890625e-05, -0.0003147125244140625, -0.0003833770751953125, -7.62939453125e-06, -0.0014495849609375, -4.9591064453125e-05, -5.53131103515625e-05, 0.0, -0.00014114059740677476, -0.00018166079826187342, -3.62396240234375e-05, -0.0004100799560546875, -0.000110626220703125, -9.34600830078125e-05, -1.52587890625e-05, 0.0, -0.0008373260498046875, -0.0003911256790161133, 0.0, -0.0001049041748046875, -5.7220458984375e-06, -0.0006084442138671875, -1.9073486328125e-06, -7.43865966796875e-05, -1.9073486328125e-06, -0.0005587154300883412, -0.0002709627151489258, -3.814697265625e-06, -0.000431060791015625, -0.000396728515625, -9.5367431640625e-06, -6.67572021484375e-05, -7.62939453125e-06, -0.00021469593048095703, -0.00010216236114501953, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, 0.0, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -1.0251998901367188e-05, 0.0, -7.62939453125e-06, -6.103515625e-05, -2.288818359375e-05, -6.437280717364047e-06, -3.3378546504536644e-06, -7.091843128204346, -4.053113570989808e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Elven", "Archer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Elven", " ", "Archer", "<EOS>", 70, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "1", "<EOS>", "Archer", "<EOS>", 109]}, {"inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>.<UNK>,\n            battlecry=Battlecry(Damage(1), CharacterSelector(players=\n            BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -7.526223009396915, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "ElvenArcher", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 1, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -7.62939453125e-06, -4.0411134250462055e-05, -3.6954811548639555e-06, -7.986990567587782e-06, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-06, -7.62939453125e-06, -5.960462772236497e-07, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.0002002716064453125, -6.103515625e-05, -0.000171661376953125, -6.29425048828125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.4185829968482722e-05, -1.263618378288811e-05, -2.503394853192731e-06, -1.9073486328125e-06, -4.57763671875e-05, -3.0517578125e-05, -2.47955322265625e-05, -2.8565196990966797, -1.9073486328125e-06, -0.0010538101196289062, -1.71661376953125e-05, -0.00012969970703125, 0.0, -4.026074409484863, 0.0, -1.9073486328125e-06, 0.0, -0.025468826293945312, 0.0, -0.0052689313888549805, 0.0, -0.03536050766706467, -3.933906555175781e-06, -5.7220458984375e-06, -0.5473272800445557, 0.0, -0.0008029937744140625, -1.33514404296875e-05, -0.0015544891357421875, -5.7220458984375e-06, -0.015020370483398438, -7.43865966796875e-05, -8.20159912109375e-05, 0.0, -0.0005909865722060204, -0.0003712858015205711, -0.0001239776611328125, -0.002582550048828125, -5.7220458984375e-06, -0.00125885009765625, -3.0517578125e-05, 0.0, -0.00040459632873535156, -0.0008698701858520508, 0.0, -0.000499725341796875, -3.814697265625e-06, -0.000270843505859375, -1.9073486328125e-06, -7.43865966796875e-05, -1.9073486328125e-06, -0.00031089328695088625, -0.0004787445068359375, -9.5367431640625e-06, -0.0001983642578125, -0.000244140625, -2.288818359375e-05, -7.82012939453125e-05, -3.814697265625e-06, -0.0003936290740966797, -9.417533874511719e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.52587890625e-05, 0.0, 0.0, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -1.0251998901367188e-05, 0.0, -7.62939453125e-06, -6.103515625e-05, -2.288818359375e-05, -6.556489552167477e-06, -3.3378546504536644e-06, -0.001415733015164733, -8.344646857949556e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Elven", "Archer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Elven", " ", "Archer", "<EOS>", 70, 89, 88, 225, 205, "minion_type", "<EOS>", 15, 116, 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "<UNK>", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "1", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -7.693885468677479, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "ElvenArcher", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"hole0": "Damage", "_type": "Template5"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 1, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -7.62939453125e-06, -4.0411134250462055e-05, -3.6954811548639555e-06, -7.986990567587782e-06, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-06, -7.62939453125e-06, -5.960462772236497e-07, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.0002002716064453125, -6.103515625e-05, -0.000171661376953125, -6.29425048828125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.4185829968482722e-05, -1.263618378288811e-05, -2.503394853192731e-06, -1.9073486328125e-06, -4.57763671875e-05, -3.0517578125e-05, -2.47955322265625e-05, -0.06261634826660156, -4.00543212890625e-05, -0.0023633241653442383, 0.0, -1.52587890625e-05, -0.0003147125244140625, -0.0003833770751953125, -7.62939453125e-06, -7.12106990814209, -0.006572723388671875, -0.4177432954311371, -0.058041151612997055, -3.4332275390625e-05, -0.00152587890625, -0.011026382446289062, 0.0, -0.0068416595458984375, -9.918212890625e-05, 0.0, -0.000118255615234375, -3.814697265625e-06, -0.0002536773681640625, 0.0, -4.38690185546875e-05, -5.7220458984375e-06, -0.0007413569255732, -0.0003529787063598633, -1.9073486328125e-06, -0.0001888275146484375, -0.0005340576171875, -5.7220458984375e-06, -7.05718994140625e-05, -9.5367431640625e-06, -0.00019562244415283203, -0.00010776519775390625, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, 0.0, 0.0, -6.29425048828125e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -1.0251998901367188e-05, 0.0, -7.62939453125e-06, -6.103515625e-05, -2.288818359375e-05, -6.437280717364047e-06, -3.3378546504536644e-06, -0.001450423034839332, -8.344646857949556e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Elven", "Archer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Elven", " ", "Archer", "<EOS>", 70, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 87, 193, "Damage", "<EOS>", 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "1", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 0)\n", "score": -7.887930594808097, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "ElvenArcher", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 0, "hole0": 1, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -7.62939453125e-06, -4.0411134250462055e-05, -3.6954811548639555e-06, -7.986990567587782e-06, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-06, -7.62939453125e-06, -5.960462772236497e-07, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.0002002716064453125, -6.103515625e-05, -0.000171661376953125, -6.29425048828125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.4185829968482722e-05, -1.263618378288811e-05, -2.503394853192731e-06, -1.9073486328125e-06, -4.57763671875e-05, -3.0517578125e-05, -2.47955322265625e-05, -0.06261634826660156, -4.00543212890625e-05, -0.0023633241653442383, 0.0, -1.52587890625e-05, -0.0003147125244140625, -0.0003833770751953125, -7.62939453125e-06, -0.0014495849609375, -4.9591064453125e-05, -5.53131103515625e-05, 0.0, -0.00014114059740677476, -0.00018166079826187342, -3.62396240234375e-05, -0.0004100799560546875, -0.000110626220703125, -9.34600830078125e-05, -1.52587890625e-05, 0.0, -0.0008373260498046875, -0.0003911256790161133, 0.0, -0.0001049041748046875, -5.7220458984375e-06, -0.0006084442138671875, -1.9073486328125e-06, -7.43865966796875e-05, -1.9073486328125e-06, -0.0005587154300883412, -0.0002709627151489258, -3.814697265625e-06, -0.000431060791015625, -0.000396728515625, -9.5367431640625e-06, -6.67572021484375e-05, -7.62939453125e-06, -0.00021469593048095703, -0.00010216236114501953, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, 0.0, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -1.0251998901367188e-05, 0.0, -7.62939453125e-06, -6.103515625e-05, -2.288818359375e-05, -6.437280717364047e-06, -3.3378546504536644e-06, -7.814463138580322, -4.053113570989808e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Elven", "Archer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Elven", " ", "Archer", "<EOS>", 70, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "1", "<EOS>", "Elven", "<EOS>", 109]}, {"inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1), HeroSelector\n            (players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -7.9652181635198644, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "ElvenArcher", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "HeroSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 1, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -7.62939453125e-06, -4.0411134250462055e-05, -3.6954811548639555e-06, -7.986990567587782e-06, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-06, -7.62939453125e-06, -5.960462772236497e-07, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.0002002716064453125, -6.103515625e-05, -0.000171661376953125, -6.29425048828125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.4185829968482722e-05, -1.263618378288811e-05, -2.503394853192731e-06, -1.9073486328125e-06, -4.57763671875e-05, -3.0517578125e-05, -2.47955322265625e-05, -0.06261634826660156, -4.00543212890625e-05, -0.0023633241653442383, 0.0, -1.52587890625e-05, -0.0003147125244140625, -0.0003833770751953125, -7.62939453125e-06, -0.0014495849609375, -4.9591064453125e-05, -5.53131103515625e-05, 0.0, -0.00014114059740677476, -0.00018166079826187342, -3.62396240234375e-05, -0.0004100799560546875, -0.000110626220703125, -9.34600830078125e-05, -1.52587890625e-05, 0.0, -7.889212608337402, -7.62939453125e-05, 0.0, -0.0009555816650390625, -3.0517578125e-05, -0.0019779205322265625, -1.9073486328125e-06, -5.53131103515625e-05, -1.9073486328125e-06, -0.0005595603724941611, -0.0003663301467895508, -3.814697265625e-06, -0.000362396240234375, -0.0004100799560546875, -9.5367431640625e-06, -6.67572021484375e-05, -7.62939453125e-06, -0.00021457672119140625, -0.00010013580322265625, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-05, 0.0, 0.0, 0.0, -5.53131103515625e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -1.0251998901367188e-05, 0.0, -7.62939453125e-06, -6.103515625e-05, -2.288818359375e-05, -6.556489552167477e-06, -3.4570634852570947e-06, -0.0014228855725377798, -8.344646857949556e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Elven", "Archer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Elven", " ", "Archer", "<EOS>", 70, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Hero", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "1", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(damage(), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -8.003627180705905, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "ElvenArcher", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"hole0": "damage", "_type": "Template5"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 1, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -7.62939453125e-06, -4.0411134250462055e-05, -3.6954811548639555e-06, -7.986990567587782e-06, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-06, -7.62939453125e-06, -5.960462772236497e-07, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.0002002716064453125, -6.103515625e-05, -0.000171661376953125, -6.29425048828125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.4185829968482722e-05, -1.263618378288811e-05, -2.503394853192731e-06, -1.9073486328125e-06, -4.57763671875e-05, -3.0517578125e-05, -2.47955322265625e-05, -2.8565196990966797, -1.9073486328125e-06, -0.0010538101196289062, -1.71661376953125e-05, -0.00012969970703125, 0.0, -0.018087387084960938, 0.0, -0.000408172607421875, 0.0, -0.0028511283453553915, 0.0, -7.62939453125e-06, -0.0063915252685546875, -1.9073486328125e-06, -7.62939453125e-05, -1.33514404296875e-05, -0.0003509521484375, -3.814697265625e-06, -4.834253311157227, -2.09808349609375e-05, -0.101577989757061, -0.01477576233446598, -5.7220458984375e-06, -0.0001850128173828125, -0.14086341857910156, 0.0, -0.016402602195739746, -0.0013866424560546875, 0.0, -0.003360748291015625, -7.62939453125e-06, -0.000274658203125, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00043952002306468785, -0.0005359649658203125, -9.5367431640625e-06, -0.00023651123046875, -0.0002460479736328125, -1.71661376953125e-05, -5.7220458984375e-05, -5.7220458984375e-06, -0.00033462047576904297, -0.00011146068572998047, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.52587890625e-05, 0.0, 0.0, 0.0, -6.67572021484375e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -8.344650268554688e-06, 0.0, -7.62939453125e-06, -6.4849853515625e-05, -2.288818359375e-05, -6.6756979322235566e-06, -3.3378546504536644e-06, -0.0014447009889408946, -8.344646857949556e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Elven", "Archer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Elven", " ", "Archer", "<EOS>", 70, 89, 88, 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 87, 193, "damage", "<EOS>", 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "1", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1), CardSelector\n            (players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -8.300340848817712, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "ElvenArcher", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CardSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 1, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -7.62939453125e-06, -4.0411134250462055e-05, -3.6954811548639555e-06, -7.986990567587782e-06, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-06, -7.62939453125e-06, -5.960462772236497e-07, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.0002002716064453125, -6.103515625e-05, -0.000171661376953125, -6.29425048828125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.4185829968482722e-05, -1.263618378288811e-05, -2.503394853192731e-06, -1.9073486328125e-06, -4.57763671875e-05, -3.0517578125e-05, -2.47955322265625e-05, -0.06261634826660156, -4.00543212890625e-05, -0.0023633241653442383, 0.0, -1.52587890625e-05, -0.0003147125244140625, -0.0003833770751953125, -7.62939453125e-06, -0.0014495849609375, -4.9591064453125e-05, -5.53131103515625e-05, 0.0, -0.00014114059740677476, -0.00018166079826187342, -3.62396240234375e-05, -0.0004100799560546875, -0.000110626220703125, -9.34600830078125e-05, -1.52587890625e-05, 0.0, -8.22269058227539, -4.00543212890625e-05, 0.0, -0.0010623931884765625, -9.5367431640625e-06, -0.003536224365234375, -1.9073486328125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -0.0007139171939343214, -0.00045037269592285156, -1.9073486328125e-06, -0.0001983642578125, -0.00038909912109375, -5.7220458984375e-06, -6.29425048828125e-05, -7.62939453125e-06, -0.0001939535140991211, -0.00010609626770019531, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-05, 0.0, 0.0, 0.0, -5.53131103515625e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -1.0251998901367188e-05, 0.0, -7.62939453125e-06, -6.103515625e-05, -2.288818359375e-05, -6.556489552167477e-06, -3.3378546504536644e-06, -0.0014191900845617056, -8.344646857949556e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Elven", "Archer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Elven", " ", "Archer", "<EOS>", 70, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Card", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "1", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothBoth(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -8.576255645677236, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "ElvenArcher", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothBoth", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 1, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -7.62939453125e-06, -4.0411134250462055e-05, -3.6954811548639555e-06, -7.986990567587782e-06, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-06, -7.62939453125e-06, -5.960462772236497e-07, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.0002002716064453125, -6.103515625e-05, -0.000171661376953125, -6.29425048828125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.4185829968482722e-05, -1.263618378288811e-05, -2.503394853192731e-06, -1.9073486328125e-06, -4.57763671875e-05, -3.0517578125e-05, -2.47955322265625e-05, -0.06261634826660156, -4.00543212890625e-05, -0.0023633241653442383, 0.0, -1.52587890625e-05, -0.0003147125244140625, -0.0003833770751953125, -7.62939453125e-06, -0.0014495849609375, -4.9591064453125e-05, -5.53131103515625e-05, 0.0, -0.00014114059740677476, -0.00018166079826187342, -3.62396240234375e-05, -0.0004100799560546875, -0.000110626220703125, -9.34600830078125e-05, -1.52587890625e-05, 0.0, -0.0008373260498046875, -0.0003911256790161133, 0.0, -0.0001049041748046875, -5.7220458984375e-06, -0.0006084442138671875, -1.9073486328125e-06, -7.43865966796875e-05, -1.9073486328125e-06, -0.0005587154300883412, -8.459031105041504, -0.03874015808105469, -8.0108642578125e-05, -0.0045833587646484375, 0.0, -8.96453857421875e-05, -5.7220458984375e-06, -0.00026166439056396484, -6.759166717529297e-05, 0.0, -3.814697265625e-06, 0.0, -2.47955322265625e-05, 0.0, 0.0, 0.0, -5.91278076171875e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -1.0251998901367188e-05, 0.0, -7.62939453125e-06, -6.29425048828125e-05, -2.47955322265625e-05, -6.6756979322235566e-06, -3.4570634852570947e-06, -0.0014178786659613252, -8.344646857949556e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Elven", "Archer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Elven", " ", "Archer", "<EOS>", 70, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Both", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "1", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Deathrattle(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -8.596539241256039, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "ElvenArcher", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"id": "Deathrattle", "_type": "Name"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 1, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -7.62939453125e-06, -4.0411134250462055e-05, -3.6954811548639555e-06, -7.986990567587782e-06, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-06, -7.62939453125e-06, -5.960462772236497e-07, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.0002002716064453125, -6.103515625e-05, -0.000171661376953125, -6.29425048828125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.4185829968482722e-05, -1.263618378288811e-05, -2.503394853192731e-06, -1.9073486328125e-06, -4.57763671875e-05, -3.0517578125e-05, -2.47955322265625e-05, -0.06261634826660156, -4.00543212890625e-05, -0.0023633241653442383, 0.0, -1.52587890625e-05, -0.0003147125244140625, -8.477309226989746, -0.01181793212890625, -0.007557629607617855, -5.745744056184776e-05, -0.0010890960693359375, -0.026247024536132812, -4.57763671875e-05, -0.0001239776611328125, 0.0, -5.9008452808484435e-05, -2.6464318580110557e-05, -4.9591064453125e-05, -0.0003032684326171875, -0.000171661376953125, -6.67572021484375e-05, -4.1961669921875e-05, 0.0, -0.0005855560302734375, -0.000423431396484375, 0.0, -0.00016021728515625, -9.5367431640625e-06, -0.0001373291015625, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -0.0006301227258518338, -0.0005894899368286133, -3.814697265625e-06, -0.0003681182861328125, -0.0002803802490234375, -9.5367431640625e-06, -7.82012939453125e-05, -5.7220458984375e-06, -0.00026035308837890625, -0.00010764598846435547, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, 0.0, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -1.0251998901367188e-05, 0.0, -7.62939453125e-06, -6.103515625e-05, -2.288818359375e-05, -6.437280717364047e-06, -3.3378546504536644e-06, -0.0014194285031408072, -8.344646857949556e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Elven", "Archer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Elven", " ", "Archer", "<EOS>", 70, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 23, 146, "Deathrattle", "<EOS>", 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "1", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 0)\n", "score": -8.686938368209155, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "ElvenArcher", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 0, "hole0": 1, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -7.62939453125e-06, -4.0411134250462055e-05, -3.6954811548639555e-06, -7.986990567587782e-06, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-06, -7.62939453125e-06, -5.960462772236497e-07, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.0002002716064453125, -6.103515625e-05, -0.000171661376953125, -6.29425048828125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.4185829968482722e-05, -1.263618378288811e-05, -2.503394853192731e-06, -1.9073486328125e-06, -4.57763671875e-05, -3.0517578125e-05, -2.47955322265625e-05, -0.06261634826660156, -4.00543212890625e-05, -0.0023633241653442383, 0.0, -1.52587890625e-05, -0.0003147125244140625, -0.0003833770751953125, -7.62939453125e-06, -0.0014495849609375, -4.9591064453125e-05, -5.53131103515625e-05, 0.0, -0.00014114059740677476, -0.00018166079826187342, -3.62396240234375e-05, -0.0004100799560546875, -0.000110626220703125, -9.34600830078125e-05, -1.52587890625e-05, 0.0, -0.0008373260498046875, -0.0003911256790161133, 0.0, -0.0001049041748046875, -5.7220458984375e-06, -0.0006084442138671875, -1.9073486328125e-06, -7.43865966796875e-05, -1.9073486328125e-06, -0.0005587154300883412, -0.0002709627151489258, -3.814697265625e-06, -0.000431060791015625, -0.000396728515625, -9.5367431640625e-06, -6.67572021484375e-05, -7.62939453125e-06, -0.00021469593048095703, -0.00010216236114501953, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, 0.0, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -1.0251998901367188e-05, 0.0, -7.62939453125e-06, -6.103515625e-05, -2.288818359375e-05, -6.437280717364047e-06, -3.3378546504536644e-06, -8.613473892211914, -1.0728830375228426e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Elven", "Archer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Elven", " ", "Archer", "<EOS>", 70, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "1", "<EOS>", "damage", "<EOS>", 109]}, {"inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>.<UNK>, overload=1\n            )\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -8.751146251230118, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "ElvenArcher", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"_type": "Template14"}, "_type": "keyword", "arg": "overload"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 1, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -7.62939453125e-06, -4.0411134250462055e-05, -3.6954811548639555e-06, -7.986990567587782e-06, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-06, -7.62939453125e-06, -5.960462772236497e-07, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.0002002716064453125, -6.103515625e-05, -0.000171661376953125, -6.29425048828125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.4185829968482722e-05, -1.263618378288811e-05, -2.503394853192731e-06, -1.9073486328125e-06, -4.57763671875e-05, -3.0517578125e-05, -2.47955322265625e-05, -2.8565196990966797, -1.9073486328125e-06, -0.0010538101196289062, -1.71661376953125e-05, -0.00012969970703125, 0.0, -4.026074409484863, 0.0, -1.9073486328125e-06, 0.0, -0.025468826293945312, 0.0, -0.0052689313888549805, 0.0, -0.03536050766706467, -3.933906555175781e-06, -5.7220458984375e-06, -1.4289963245391846, -6.794917680963408e-06, -0.12334823608398438, -0.0002002716064453125, -1.9073486328125e-06, -0.008291244506835938, -1.1920928244535389e-07, 0.0, 0.0, -0.00014495849609375, -7.62939453125e-06, -6.67572021484375e-05, -1.9073486328125e-06, -9.894371032714844e-06, 0.0, -4.76837158203125e-05, -0.23772430419921875, -0.0001068115234375, -2.8490614567999728e-05, -8.702239938429557e-06, -0.0013773472746834159, -5.960462772236497e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Elven", "Archer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Elven", " ", "Archer", "<EOS>", 70, 89, 88, 225, 205, "minion_type", "<EOS>", 15, 116, 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "<UNK>", "<EOS>", 205, "overload", "<EOS>", 28, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "1", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "", "score": -20.102293014526367, "model_output": {"_type": "Module", "body": []}, "score_history": [-2.09808349609375e-05, -5.7220458984375e-06, -20.102266311645508], "choice_history": [93, 145, 228]}], "index": 28}
{"beams": [{"inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "score": -0.12663605096531683, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ExcessMana", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Template31"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -0.000164031982421875, -3.0517578125e-05, -1.9073486328125e-05, -2.6225699912174605e-05, -1.1563301086425781e-05, -0.000439552211901173, -1.71661376953125e-05, -8.20159912109375e-05, -0.00014495849609375, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -0.00019073486328125, -0.0015697479248046875, -0.009515762329101562, -2.47955322265625e-05, 0.0, -0.00019168847938999534, -0.00013482122449204326, -2.1576879589702003e-05, -0.0003358125686645508, -0.000286102294921875, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0008492469787597656, -1.9073486328125e-06, -0.0003490447998046875, -0.0004940032958984375, -1.33514404296875e-05, -0.0001544952392578125, -0.0002728700637817383, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.0036487579345703125, -0.0001659393310546875, -7.62939453125e-06, 0.0, -0.0019303560256958008, 0.0, -1.9073486328125e-06, -0.000385284423828125, -0.00011682510375976562, 0.0, -0.08597087860107422, -0.0002346038818359375, -0.014993667602539062, -0.000988006591796875, -0.0001125335693359375, -0.001163482666015625, -7.62939453125e-06, 0.0, -0.000308990478515625, -0.0010315179824829102, -7.62939453125e-06, -9.5367431640625e-06], "choice_history": [93, 145, 230, 101, 125, "Excess", "Mana", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 220, 66, 155, "Excess", " ", "Mana", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 88, 80, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n        player.draw()\n", "score": -3.7784549224634247, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ExcessMana", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Template31"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -0.000164031982421875, -3.0517578125e-05, -1.9073486328125e-05, -2.6225699912174605e-05, -1.1563301086425781e-05, -0.000439552211901173, -1.71661376953125e-05, -8.20159912109375e-05, -0.00014495849609375, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -0.00019073486328125, -0.0015697479248046875, -0.009515762329101562, -2.47955322265625e-05, 0.0, -0.00019168847938999534, -0.00013482122449204326, -2.1576879589702003e-05, -0.0003358125686645508, -0.000286102294921875, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0008492469787597656, -1.9073486328125e-06, -0.0003490447998046875, -0.0004940032958984375, -1.33514404296875e-05, -0.0001544952392578125, -0.0002728700637817383, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.0036487579345703125, -0.0001659393310546875, -7.62939453125e-06, 0.0, -0.0019303560256958008, 0.0, -1.9073486328125e-06, -0.000385284423828125, -0.00011682510375976562, 0.0, -3.4493837356567383, -0.008320808410644531, -0.012111663818359375, -9.918212890625e-05, -7.62939453125e-06, -0.00366973876953125, -7.62939453125e-06, -3.814697265625e-06, -0.0002765655517578125, -0.0009559392929077148, -1.52587890625e-05, -0.000347137451171875, -1.52587890625e-05, -5.91278076171875e-05, -0.2805061340332031, 0.0, -1.71661376953125e-05, -0.0002231597900390625, -0.0006064176559448242, -1.33514404296875e-05, -7.62939453125e-06], "choice_history": [93, 145, 230, 101, 125, "Excess", "Mana", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 220, 66, 155, "Excess", " ", "Mana", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 88, 80, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n        player.draw()\n        player.draw()\n", "score": -4.4357619512338715, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ExcessMana", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Template31"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -0.000164031982421875, -3.0517578125e-05, -1.9073486328125e-05, -2.6225699912174605e-05, -1.1563301086425781e-05, -0.000439552211901173, -1.71661376953125e-05, -8.20159912109375e-05, -0.00014495849609375, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -0.00019073486328125, -0.0015697479248046875, -0.009515762329101562, -2.47955322265625e-05, 0.0, -0.00019168847938999534, -0.00013482122449204326, -2.1576879589702003e-05, -0.0003358125686645508, -0.000286102294921875, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0008492469787597656, -1.9073486328125e-06, -0.0003490447998046875, -0.0004940032958984375, -1.33514404296875e-05, -0.0001544952392578125, -0.0002728700637817383, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.0036487579345703125, -0.0001659393310546875, -7.62939453125e-06, 0.0, -0.0019303560256958008, 0.0, -1.9073486328125e-06, -0.000385284423828125, -0.00011682510375976562, 0.0, -3.4152002334594727, -0.3194599151611328, -0.5999088287353516, -1.9073486328125e-06, -1.33514404296875e-05, -0.018842697143554688, -1.9073486328125e-06, 0.0, -0.0004901885986328125, -0.0012340545654296875, -3.814697265625e-06, -0.02178668975830078, -3.814697265625e-06, -6.866455078125e-05, -0.010320663452148438, 0.0, -1.52587890625e-05, -0.00060272216796875, -0.0004495382308959961, -2.288818359375e-05, -0.008565902709960938, -3.814697265625e-06, -0.0001316070556640625, -0.0159454345703125, 0.0, -2.288818359375e-05, -0.0004138946533203125, -0.0004189014434814453, -2.09808349609375e-05, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Excess", "Mana", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 220, 66, 155, "Excess", " ", "Mana", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 88, 80, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.mana < 10:\n            player.mana += 1\n", "score": -5.356799617733486, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ExcessMana", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Template31"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "If", "test": {"left": {"attr": "mana", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "ops": [{"_type": "Lt"}]}, "body": [{"target": {"attr": "mana", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "AugAssign", "value": {"_type": "Template14"}, "op": {"_type": "Add"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -0.000164031982421875, -3.0517578125e-05, -1.9073486328125e-05, -2.6225699912174605e-05, -1.1563301086425781e-05, -0.000439552211901173, -1.71661376953125e-05, -8.20159912109375e-05, -0.00014495849609375, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -0.00019073486328125, -0.0015697479248046875, -0.009515762329101562, -2.47955322265625e-05, 0.0, -0.00019168847938999534, -0.00013482122449204326, -2.1576879589702003e-05, -0.0003358125686645508, -0.000286102294921875, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0008492469787597656, -1.9073486328125e-06, -0.0003490447998046875, -0.0004940032958984375, -1.33514404296875e-05, -0.0001544952392578125, -0.0002728700637817383, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.0036487579345703125, -0.0001659393310546875, -7.62939453125e-06, 0.0, -0.0019303560256958008, 0.0, -1.9073486328125e-06, -0.000385284423828125, -0.00011682510375976562, 0.0, -0.08597087860107422, -0.0002346038818359375, -4.235248565673828, -0.5468530654907227, -0.006522178649902344, -3.814697265625e-06, -0.1983013153076172, 0.0, -0.0004177093505859375, -0.12267445772886276, -1.2159347534179688e-05, -3.24249267578125e-05, -0.005429267883300781, -3.814697265625e-06, -0.008017539978027344, -0.0010004043579101562, -0.015137463808059692, -0.0019963979721069336, -7.2479248046875e-05, -0.022951126098632812, -0.0002079010009765625, -0.00107574462890625, -1.9073486328125e-06, -0.0033779144287109375, -0.07534787058830261, -0.00011277198791503906, -0.0022821426391601562, -0.0017004013061523438, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Excess", "Mana", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 220, 66, 155, "Excess", " ", "Mana", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 88, 80, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 105, 133, 19, 126, 15, 116, 32, "mana", "<EOS>", 213, 12, 216, 65, 151, "10", "<EOS>", 229, 99, 117, 15, 116, 32, "mana", "<EOS>", 94, 28, 109]}, {"inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n        player.<UNK>('card_drawn', reduce_cost)\n", "score": -5.716487787987717, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ExcessMana", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Template31"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Str", "s": "card_drawn"}, {"id": "reduce_cost", "_type": "Name"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -0.000164031982421875, -3.0517578125e-05, -1.9073486328125e-05, -2.6225699912174605e-05, -1.1563301086425781e-05, -0.000439552211901173, -1.71661376953125e-05, -8.20159912109375e-05, -0.00014495849609375, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -0.00019073486328125, -0.0015697479248046875, -0.009515762329101562, -2.47955322265625e-05, 0.0, -0.00019168847938999534, -0.00013482122449204326, -2.1576879589702003e-05, -0.0003358125686645508, -0.000286102294921875, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0008492469787597656, -1.9073486328125e-06, -0.0003490447998046875, -0.0004940032958984375, -1.33514404296875e-05, -0.0001544952392578125, -0.0002728700637817383, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.0036487579345703125, -0.0001659393310546875, -7.62939453125e-06, 0.0, -0.0019303560256958008, 0.0, -1.9073486328125e-06, -0.000385284423828125, -0.00011682510375976562, 0.0, -3.4493837356567383, -0.008320808410644531, -0.012111663818359375, -9.918212890625e-05, -7.62939453125e-06, -0.00366973876953125, -7.62939453125e-06, -3.814697265625e-06, -0.0002765655517578125, -0.0009559392929077148, -1.52587890625e-05, -0.000347137451171875, -1.52587890625e-05, -5.91278076171875e-05, -1.4164237976074219, -1.9073486328125e-06, -3.814697265625e-06, -0.6171703338623047, -0.00976705551147461, -6.747245788574219e-05, -0.0139923095703125, -0.0023450851440429688, -0.000202178955078125, -0.004258990287780762, -4.00543212890625e-05, -0.0164642333984375, -0.000152587890625, -0.13851308822631836, -3.814697265625e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Excess", "Mana", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 220, 66, 155, "Excess", " ", "Mana", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 88, 80, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 102, 128, 18, 123, 15, 116, 32, "<UNK>", "<EOS>", 217, 66, 155, "card_drawn", "<EOS>", 63, 146, "reduce_cost", "<EOS>", 109]}, {"inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.mana < 10:\n            player.mana += 1\n        else:\n            player.<UNK>('card_drawn', reduce_cost)\n            player.draw()\n", "score": -6.24048283351658, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ExcessMana", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Template31"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "If", "test": {"left": {"attr": "mana", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Compare", "comparators": [{"_type": "Num", "n": 10}], "ops": [{"_type": "Lt"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Str", "s": "card_drawn"}, {"id": "reduce_cost", "_type": "Name"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}], "body": [{"target": {"attr": "mana", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "AugAssign", "value": {"_type": "Template14"}, "op": {"_type": "Add"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -0.000164031982421875, -3.0517578125e-05, -1.9073486328125e-05, -2.6225699912174605e-05, -1.1563301086425781e-05, -0.000439552211901173, -1.71661376953125e-05, -8.20159912109375e-05, -0.00014495849609375, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -0.00019073486328125, -0.0015697479248046875, -0.009515762329101562, -2.47955322265625e-05, 0.0, -0.00019168847938999534, -0.00013482122449204326, -2.1576879589702003e-05, -0.0003358125686645508, -0.000286102294921875, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0008492469787597656, -1.9073486328125e-06, -0.0003490447998046875, -0.0004940032958984375, -1.33514404296875e-05, -0.0001544952392578125, -0.0002728700637817383, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.0036487579345703125, -0.0001659393310546875, -7.62939453125e-06, 0.0, -0.0019303560256958008, 0.0, -1.9073486328125e-06, -0.000385284423828125, -0.00011682510375976562, 0.0, -0.08597087860107422, -0.0002346038818359375, -4.235248565673828, -0.901158332824707, -0.07708930969238281, -5.7220458984375e-06, -0.15609073638916016, -1.1444091796875e-05, -0.0005168914794921875, -0.37341833114624023, -3.933906555175781e-06, -7.05718994140625e-05, -0.013561248779296875, -1.9073486328125e-06, -0.0053882598876953125, -0.0010118484497070312, -0.018893208354711533, -0.002759099006652832, -4.00543212890625e-05, -0.009715080261230469, -0.00048828125, -0.000499725341796875, -1.9073486328125e-06, -0.00026702880859375, -0.10129658877849579, -0.0001747608184814453, -0.0027332305908203125, -0.0018062591552734375, -0.007285118103027344, -8.0108642578125e-05, -0.0001850128173828125, -0.000255584716796875, -0.008923530578613281, 0.0, 0.0, -0.05930519104003906, -0.027891986072063446, -4.541869566310197e-05, -0.022859573364257812, -0.0002574920654296875, -0.0010509490966796875, -0.0055114030838012695, -0.0001354217529296875, -0.017632484436035156, -0.0003070831298828125, -0.057315826416015625, -9.5367431640625e-06, -0.0004405975341796875, -4.00543212890625e-05, -0.0019397735595703125, -0.0071010589599609375, -2.47955322265625e-05, 0.0, -0.010966300964355469, -0.000613093376159668, -3.62396240234375e-05, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Excess", "Mana", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 220, 66, 155, "Excess", " ", "Mana", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 88, 80, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 105, 134, 19, 126, 15, 116, 32, "mana", "<EOS>", 213, 12, 216, 65, 151, "10", "<EOS>", 229, 99, 117, 15, 116, 32, "mana", "<EOS>", 94, 28, 230, 102, 128, 18, 123, 15, 116, 32, "<UNK>", "<EOS>", 217, 66, 155, "card_drawn", "<EOS>", 63, 146, "reduce_cost", "<EOS>", 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n        player.hand.append(ExcessMana())\n", "score": -7.608596867270535, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ExcessMana", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Template31"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"attr": "hand", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"hole0": "ExcessMana", "_type": "Template5"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -0.000164031982421875, -3.0517578125e-05, -1.9073486328125e-05, -2.6225699912174605e-05, -1.1563301086425781e-05, -0.000439552211901173, -1.71661376953125e-05, -8.20159912109375e-05, -0.00014495849609375, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -0.00019073486328125, -0.0015697479248046875, -0.009515762329101562, -2.47955322265625e-05, 0.0, -0.00019168847938999534, -0.00013482122449204326, -2.1576879589702003e-05, -0.0003358125686645508, -0.000286102294921875, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0008492469787597656, -1.9073486328125e-06, -0.0003490447998046875, -0.0004940032958984375, -1.33514404296875e-05, -0.0001544952392578125, -0.0002728700637817383, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.0036487579345703125, -0.0001659393310546875, -7.62939453125e-06, 0.0, -0.0019303560256958008, 0.0, -1.9073486328125e-06, -0.000385284423828125, -0.00011682510375976562, 0.0, -3.4493837356567383, -0.008320808410644531, -0.012111663818359375, -9.918212890625e-05, -7.62939453125e-06, -0.00366973876953125, -7.62939453125e-06, -3.814697265625e-06, -0.0002765655517578125, -0.0009559392929077148, -1.52587890625e-05, -0.000347137451171875, -1.52587890625e-05, -5.91278076171875e-05, -1.4164237976074219, -1.9073486328125e-06, -3.814697265625e-06, -0.8116369247436523, -3.814697265625e-06, -0.0001316070556640625, -0.14138533174991608, -5.435943239717744e-05, -0.018198370933532715, 0.0, -2.09808349609375e-05, -1.3481473922729492, -5.7220458984375e-06, -0.22877192497253418, -0.1442023664712906, -0.0025274883955717087, 0.0], "choice_history": [93, 145, 230, 101, 125, "Excess", "Mana", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 220, 66, 155, "Excess", " ", "Mana", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 88, 80, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 102, 128, 18, 123, 15, 116, 15, 116, 32, "hand", "<EOS>", "append", "<EOS>", 216, 87, 193, "Excess", "Mana", "<EOS>", 109]}, {"inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n        player.hand.append(card)\n", "score": -8.065602936170762, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ExcessMana", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Template31"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"attr": "hand", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"id": "card", "_type": "Name"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -0.000164031982421875, -3.0517578125e-05, -1.9073486328125e-05, -2.6225699912174605e-05, -1.1563301086425781e-05, -0.000439552211901173, -1.71661376953125e-05, -8.20159912109375e-05, -0.00014495849609375, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -0.00019073486328125, -0.0015697479248046875, -0.009515762329101562, -2.47955322265625e-05, 0.0, -0.00019168847938999534, -0.00013482122449204326, -2.1576879589702003e-05, -0.0003358125686645508, -0.000286102294921875, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0008492469787597656, -1.9073486328125e-06, -0.0003490447998046875, -0.0004940032958984375, -1.33514404296875e-05, -0.0001544952392578125, -0.0002728700637817383, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.0036487579345703125, -0.0001659393310546875, -7.62939453125e-06, 0.0, -0.0019303560256958008, 0.0, -1.9073486328125e-06, -0.000385284423828125, -0.00011682510375976562, 0.0, -3.4493837356567383, -0.008320808410644531, -0.012111663818359375, -9.918212890625e-05, -7.62939453125e-06, -0.00366973876953125, -7.62939453125e-06, -3.814697265625e-06, -0.0002765655517578125, -0.0009559392929077148, -1.52587890625e-05, -0.000347137451171875, -1.52587890625e-05, -5.91278076171875e-05, -1.4164237976074219, -1.9073486328125e-06, -3.814697265625e-06, -0.8116369247436523, -3.814697265625e-06, -0.0001316070556640625, -0.14138533174991608, -5.435943239717744e-05, -0.018198370933532715, 0.0, -2.09808349609375e-05, -1.1979141235351562, -0.0001430511474609375, -0.9826037883758545, 0.0, 0.0], "choice_history": [93, 145, 230, 101, 125, "Excess", "Mana", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 220, 66, 155, "Excess", " ", "Mana", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 88, 80, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 102, 128, 18, 123, 15, 116, 15, 116, 32, "hand", "<EOS>", "append", "<EOS>", 216, 63, 146, "card", "<EOS>", 109]}, {"inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        player.<UNK>('card_drawn', reduce_cost)\n", "score": -8.076739124213418, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ExcessMana", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Str", "s": "card_drawn"}, {"id": "reduce_cost", "_type": "Name"}], "_type": "Call"}}]}, {"_type": "Template13_stmt_seq"}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -0.000164031982421875, -3.0517578125e-05, -1.9073486328125e-05, -2.6225699912174605e-05, -1.1563301086425781e-05, -0.000439552211901173, -1.71661376953125e-05, -8.20159912109375e-05, -0.00014495849609375, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -0.00019073486328125, -6.462105751037598, -0.0001373291015625, -0.10529804229736328, -0.022435171529650688, -3.4451466490281746e-05, -0.0005283355712890625, -0.0001430511474609375, -0.000293731689453125, -0.03329626843333244, -0.0016508102416992188, -0.005316734313964844, -0.0004024505615234375, -0.5723919868469238, -3.814697265625e-06, -0.8714189529418945, 0.0], "choice_history": [93, 145, 230, 101, 125, "Excess", "Mana", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 15, 116, 32, "<UNK>", "<EOS>", 217, 66, 155, "card_drawn", "<EOS>", 63, 146, "reduce_cost", "<EOS>", 109, 109]}, {"inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.cards.minions.<UNK>()\n        player.hand[-1].player = player\n        player.trigger('card_drawn', reduce_cost)\n", "score": -8.607529360699118, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ExcessMana", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Template31"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Call"}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Assign", "value": {"_type": "Template19"}, "targets": [{"attr": "player", "_type": "Attribute", "value": {"_type": "Subscript", "value": {"attr": "hand", "_type": "Attribute", "value": {"_type": "Template19"}}, "slice": {"_type": "Index", "value": {"_type": "UnaryOp", "operand": {"_type": "Template14"}, "op": {"_type": "USub"}}}}}]}, {"_type": "Expr", "value": {"func": {"attr": "trigger", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Str", "s": "card_drawn"}, {"id": "reduce_cost", "_type": "Name"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -0.000164031982421875, -3.0517578125e-05, -1.9073486328125e-05, -2.6225699912174605e-05, -1.1563301086425781e-05, -0.000439552211901173, -1.71661376953125e-05, -8.20159912109375e-05, -0.00014495849609375, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -0.00019073486328125, -0.0015697479248046875, -0.009515762329101562, -2.47955322265625e-05, 0.0, -0.00019168847938999534, -0.00013482122449204326, -2.1576879589702003e-05, -0.0003358125686645508, -0.000286102294921875, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0008492469787597656, -1.9073486328125e-06, -0.0003490447998046875, -0.0004940032958984375, -1.33514404296875e-05, -0.0001544952392578125, -0.0002728700637817383, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.0036487579345703125, -0.0001659393310546875, -7.62939453125e-06, 0.0, -0.0019303560256958008, 0.0, -1.9073486328125e-06, -0.000385284423828125, -0.00011682510375976562, 0.0, -3.4152002334594727, -0.3194599151611328, -0.7993154525756836, -2.6702880859375e-05, -1.1444091796875e-05, -0.0010089874267578125, -1.9073486328125e-06, -0.7415992021560669, -1.811964830267243e-05, -0.5226030349731445, -0.002239227294921875, -8.392333984375e-05, -1.33514404296875e-05, -0.003204345703125, 0.0, -0.004042625427246094, 0.0, -0.3551921844482422, -1.1444091796875e-05, -0.0002722739882301539, -5.841255187988281e-06, -0.0037448792718350887, -1.5974044799804688e-05, -0.29897475242614746, -0.00557398796081543, -0.09307010471820831, -0.015809016302227974, -0.2477264404296875, -4.1961669921875e-05, -1.33514404296875e-05, -0.8405113220214844, -3.814697265625e-06, -0.0668191909790039, -0.0005016326904296875, -9.72747802734375e-05, 0.0, -0.001033782958984375, -0.013404002413153648, -1.9073486328125e-06, -0.011780738830566406, -0.002666473388671875, -0.006922721862792969, -0.0007076263427734375, -0.001613616943359375, -0.00016021728515625, -0.0020230954978615046, -3.814697265625e-06, -0.016780853271484375, -0.000274658203125, -5.7220458984375e-06, -2.47955322265625e-05, -0.4472827911376953, -8.7738037109375e-05, 0.0, -0.04626750946044922, -0.013208270072937012, 0.0, -6.4849853515625e-05, -2.6702880859375e-05, -0.0001316070556640625, -0.00833284854888916, -6.29425048828125e-05, -0.17626571655273438, -0.0011997222900390625, -0.09816551208496094, -7.62939453125e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Excess", "Mana", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 220, 66, 155, "Excess", " ", "Mana", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 88, 80, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 18, 121, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", 98, 115, 216, 55, 116, 26, 157, 15, 116, 32, "hand", "<EOS>", 96, 137, 54, 200, 112, 28, "player", "<EOS>", 32, 102, 128, 18, 123, 15, 116, 32, "trigger", "<EOS>", 217, 66, 155, "card_drawn", "<EOS>", 63, 146, "reduce_cost", "<EOS>", 109]}, {"inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        player.<UNK>('card_drawn', mirror)\n", "score": -9.321905425940713, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ExcessMana", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Str", "s": "card_drawn"}, {"id": "mirror", "_type": "Name"}], "_type": "Call"}}]}, {"_type": "Template13_stmt_seq"}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -0.000164031982421875, -3.0517578125e-05, -1.9073486328125e-05, -2.6225699912174605e-05, -1.1563301086425781e-05, -0.000439552211901173, -1.71661376953125e-05, -8.20159912109375e-05, -0.00014495849609375, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -0.00019073486328125, -6.462105751037598, -0.0001373291015625, -0.10529804229736328, -0.022435171529650688, -3.4451466490281746e-05, -0.0005283355712890625, -0.0001430511474609375, -0.000293731689453125, -0.03329626843333244, -0.0016508102416992188, -0.005316734313964844, -0.0004024505615234375, -2.374086380004883, -1.9073486328125e-06, -0.3148927688598633, 0.0], "choice_history": [93, 145, 230, 101, 125, "Excess", "Mana", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 15, 116, 32, "<UNK>", "<EOS>", 217, 66, 155, "card_drawn", "<EOS>", 63, 146, "mirror", "<EOS>", 109, 109]}, {"inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n\n        def reduce_cost(card):\n            if (target is card.minion_type and card.minion_type ==\n                MINION_TYPE.TOTEM):\n                card.add_buff(Buff(ManaChange(-3)))\n        super().use(player, game)\n        player.draw()\n        player.draw()\n", "score": -10.22562730810131, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ExcessMana", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Template31"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"args": {"args": [{"_type": "arg", "arg": "card"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "reduce_cost", "body": [{"_type": "If", "test": {"values": [{"left": {"id": "target", "_type": "Name"}, "_type": "Compare", "comparators": [{"attr": "minion_type", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}], "ops": [{"_type": "Is"}]}, {"left": {"attr": "minion_type", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}, "_type": "Compare", "comparators": [{"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Eq"}]}], "_type": "BoolOp", "op": {"_type": "And"}}, "body": [{"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"id": "card", "_type": "Name"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"func": {"id": "ManaChange", "_type": "Name"}, "args": [{"_type": "UnaryOp", "operand": {"_type": "Template16"}, "op": {"_type": "USub"}}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -0.000164031982421875, -3.0517578125e-05, -1.9073486328125e-05, -2.6225699912174605e-05, -1.1563301086425781e-05, -0.000439552211901173, -1.71661376953125e-05, -8.20159912109375e-05, -0.00014495849609375, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -0.00019073486328125, -0.0015697479248046875, -0.009515762329101562, -2.47955322265625e-05, 0.0, -0.00019168847938999534, -0.00013482122449204326, -2.1576879589702003e-05, -0.0003358125686645508, -0.000286102294921875, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0008492469787597656, -1.9073486328125e-06, -0.0003490447998046875, -0.0004940032958984375, -1.33514404296875e-05, -0.0001544952392578125, -0.0002728700637817383, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.0036487579345703125, -0.0001659393310546875, -7.62939453125e-06, 0.0, -0.0019303560256958008, 0.0, -1.9073486328125e-06, -0.000385284423828125, -0.00011682510375976562, 0.0, -3.4152002334594727, -1.3364267349243164, -0.0002422332763671875, -0.020458579063415527, -0.00017547607421875, -7.43865966796875e-05, -9.34600830078125e-05, -0.010743141174316406, -0.001739501953125, -7.62939453125e-06, -0.3470280170440674, -2.3841855067985307e-07, -0.0004215240478515625, -0.06786155700683594, -0.0007648468017578125, -0.20296192169189453, -0.00176239013671875, -4.1961669921875e-05, -0.0004634857177734375, -0.04972076416015625, -4.9591064453125e-05, -0.10297203063964844, 0.0, -0.3346102237701416, -1.9073486328125e-06, -6.29425048828125e-05, -0.6927366256713867, -7.62939453125e-06, -0.0020627975463867188, 0.0, -0.43950748443603516, 0.0, -0.4533494710922241, -2.3841855067985307e-07, -0.16528047621250153, -3.933906555175781e-06, -0.2061328887939453, -2.86102294921875e-05, -0.014527320861816406, 0.0, -0.020288467407226562, 0.0, -0.10603547096252441, -1.5497195136049413e-06, -0.19520467519760132, -1.5497207641601562e-05, -3.24249267578125e-05, -0.012195587158203125, -5.7220458984375e-05, -0.0001087188720703125, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.04692792892456055, 0.0, -0.31343162059783936, -2.682209014892578e-05, -0.01891803741455078, -0.018100738525390625, -1.9073486328125e-06, -3.0517578125e-05, -0.0046100616455078125, -2.6702880859375e-05, 0.0, -0.0071392059326171875, 0.0, -0.4505445063114166, -1.5497195136049413e-06, -0.5334298610687256, -1.33514404296875e-05, -1.9073486328125e-06, -0.0008754730224609375, -3.4332275390625e-05, -0.000217437744140625, 0.0, -0.2662925720214844, -1.9073486328125e-06, -5.7220458984375e-06, -0.05748462677001953, -0.000209808349609375, -0.000698089599609375, -1.9073486328125e-06, -0.02934575080871582, -0.0002853870391845703, -7.62939453125e-06, -0.001445770263671875, -0.0028123855590820312, -0.0011463165283203125, -0.0003910064697265625, -0.12588882446289062, -0.0074329376220703125, -0.0061168670654296875, -1.1444091796875e-05, -0.0025358200073242188, -0.04163551330566406, -0.0028314590454101562, -0.0001201629638671875, -5.53131103515625e-05, -0.013297793455421925, -4.00543212890625e-05, -0.009670257568359375, -9.5367431640625e-06, -0.00043487548828125, -0.035866737365722656, -5.7220458984375e-06, -1.9073486328125e-05, -7.43865966796875e-05, -0.0014287233352661133, -0.00020599365234375, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Excess", "Mana", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 220, 66, 155, "Excess", " ", "Mana", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 88, 80, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 104, 130, "reduce_cost", "<EOS>", 3, 203, 209, 1, 202, "card", "<EOS>", 229, 105, 133, 17, 119, 4, 217, 59, 126, 23, 146, "target", "<EOS>", 213, 10, 216, 55, 116, 23, 146, "card", "<EOS>", "minion_type", "<EOS>", 59, 126, 15, 116, 23, 146, "card", "<EOS>", "minion_type", "<EOS>", 213, 6, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 23, 146, "card", "<EOS>", "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 58, 123, 23, 146, "Mana", "Change", "<EOS>", 216, 92, 200, 112, 30, 108, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        player.draw()\n", "score": -10.611615066625745, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ExcessMana", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}, {"_type": "Template13_stmt_seq"}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -0.000164031982421875, -3.0517578125e-05, -1.9073486328125e-05, -2.6225699912174605e-05, -1.1563301086425781e-05, -0.000439552211901173, -1.71661376953125e-05, -8.20159912109375e-05, -0.00014495849609375, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -8.768136024475098, -0.01474761962890625, -8.392333984375e-05, -0.003589630126953125, -0.061670638620853424, -0.00048351287841796875, -1.7617740631103516, -3.814697265625e-05], "choice_history": [93, 145, 230, 101, 125, "Excess", "Mana", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109, 109]}, {"inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.cards.minions.<UNK>()\n        player.hand[-1].player = player\n        player.trigger('card_drawn', hearthbreaker.cards.minions.<UNK>.\n            WorthlessImp())\n", "score": -11.439465901246876, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "ExcessMana", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Template31"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, "_type": "Call"}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Assign", "value": {"_type": "Template19"}, "targets": [{"attr": "player", "_type": "Attribute", "value": {"_type": "Subscript", "value": {"attr": "hand", "_type": "Attribute", "value": {"_type": "Template19"}}, "slice": {"_type": "Index", "value": {"_type": "UnaryOp", "operand": {"_type": "Template14"}, "op": {"_type": "USub"}}}}}]}, {"_type": "Expr", "value": {"func": {"attr": "trigger", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Str", "s": "card_drawn"}, {"func": {"attr": "WorthlessImp", "_type": "Attribute", "value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -0.000164031982421875, -3.0517578125e-05, -1.9073486328125e-05, -2.6225699912174605e-05, -1.1563301086425781e-05, -0.000439552211901173, -1.71661376953125e-05, -8.20159912109375e-05, -0.00014495849609375, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -0.00019073486328125, -0.0015697479248046875, -0.009515762329101562, -2.47955322265625e-05, 0.0, -0.00019168847938999534, -0.00013482122449204326, -2.1576879589702003e-05, -0.0003358125686645508, -0.000286102294921875, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0008492469787597656, -1.9073486328125e-06, -0.0003490447998046875, -0.0004940032958984375, -1.33514404296875e-05, -0.0001544952392578125, -0.0002728700637817383, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.0036487579345703125, -0.0001659393310546875, -7.62939453125e-06, 0.0, -0.0019303560256958008, 0.0, -1.9073486328125e-06, -0.000385284423828125, -0.00011682510375976562, 0.0, -3.4152002334594727, -0.3194599151611328, -0.7993154525756836, -2.6702880859375e-05, -1.1444091796875e-05, -0.0010089874267578125, -1.9073486328125e-06, -0.7415992021560669, -1.811964830267243e-05, -0.5226030349731445, -0.002239227294921875, -8.392333984375e-05, -1.33514404296875e-05, -0.003204345703125, 0.0, -0.004042625427246094, 0.0, -0.3551921844482422, -1.1444091796875e-05, -0.0002722739882301539, -5.841255187988281e-06, -0.0037448792718350887, -1.5974044799804688e-05, -0.29897475242614746, -0.00557398796081543, -0.09307010471820831, -0.015809016302227974, -0.2477264404296875, -4.1961669921875e-05, -1.33514404296875e-05, -0.8405113220214844, -3.814697265625e-06, -0.0668191909790039, -0.0005016326904296875, -9.72747802734375e-05, 0.0, -0.001033782958984375, -0.013404002413153648, -1.9073486328125e-06, -0.011780738830566406, -0.002666473388671875, -0.006922721862792969, -0.0007076263427734375, -0.001613616943359375, -0.00016021728515625, -0.0020230954978615046, -3.814697265625e-06, -0.016780853271484375, -0.000274658203125, -5.7220458984375e-06, -2.47955322265625e-05, -0.4472827911376953, -8.7738037109375e-05, 0.0, -0.04626750946044922, -0.013208270072937012, 0.0, -6.4849853515625e-05, -2.6702880859375e-05, -0.0001316070556640625, -0.00833284854888916, -6.29425048828125e-05, -1.8821640014648438, -0.010003089904785156, -0.014866828918457031, 0.0, -0.012239456176757812, 0.0, -0.01841449737548828, 0.0, -0.039936065673828125, 0.0, -0.04932975769042969, -1.9073486328125e-06, -0.0024296045303344727, -1.5497207641601562e-05, -0.004158047493547201, -5.9604644775390625e-06, -0.012586233206093311, -0.001821279525756836, -0.08659986406564713, -0.00023257732391357422, -0.8275688886642456, -0.14267706871032715, -0.0025206804275512695, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Excess", "Mana", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 220, 66, 155, "Excess", " ", "Mana", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 88, 80, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 18, 121, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", 98, 115, 216, 55, 116, 26, 157, 15, 116, 32, "hand", "<EOS>", 96, 137, 54, 200, 112, 28, "player", "<EOS>", 32, 102, 128, 18, 123, 15, 116, 32, "trigger", "<EOS>", 217, 66, 155, "card_drawn", "<EOS>", 58, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Worthless", "Imp", "<EOS>", 109]}, {"inferred_code": "", "score": -17.73859977722168, "model_output": {"_type": "Module", "body": []}, "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -17.738555908203125], "choice_history": [93, 145, 228]}], "index": 29}
{"beams": [{"inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -0.5716668269742229, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Execute", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template14"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -4.0531076592742465e-06, -7.62939453125e-06, -7.05718994140625e-05, -0.000274658203125, -1.71661376953125e-05, 0.0, -9.059880540007725e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0002574920654296875, -0.0001773834228515625, -5.91278076171875e-05, -7.62939453125e-06, -0.000194549560546875, -6.103515625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -2.8609820219571702e-05, -5.7220458984375e-06, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0023691654205322266, 0.0, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0002002716064453125, -3.814697265625e-06, -0.0025501251220703125, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001621246337890625, -3.4332275390625e-05, -7.43865966796875e-05, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06, -0.012537956237792969, -5.841255187988281e-06, -0.0001201629638671875, -0.006724357604980469, -1.9073486328125e-06, -0.000335693359375, -6.4849853515625e-05, -1.33514404296875e-05, -6.4849853515625e-05, -0.0003814697265625, -9.1552734375e-05, -5.14984130859375e-05, -0.010830283164978027, -2.0265579223632812e-06, -0.0005207061767578125, -0.0012264251708984375, -7.2479248046875e-05, -4.57763671875e-05, -0.0034189224243164062, -0.00012969970703125, -0.00075531005859375, 0.0, -9.5367431640625e-06, 0.0, -0.003488898044452071, -4.0292736230185255e-05, -0.0006446788320317864, 0.0, -0.005146026611328125, -0.02160358428955078, -3.814697265625e-05, -0.0006732940673828125, -0.0001621246337890625, -0.00012969970703125, 0.0, -3.4332275390625e-05, 0.0, -0.0003718137741088867, -1.5497207641601562e-05, -0.01831172965466976, -5.7220458984375e-06, -3.0517578125e-05, -7.43865966796875e-05, -6.103515625e-05, 0.0, -0.0004062652587890625, 0.0, -0.0010330677032470703, -8.618831634521484e-05, -0.010285121388733387, -4.220008850097656e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.00018703937530517578, 0.0, -1.9073486328125e-06, 0.0, -0.0007686614990234375, -3.814697265625e-06, -1.9073486328125e-06, -1.52587890625e-05, -6.67572021484375e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -2.6702880859375e-05, -4.410743713378906e-06, -0.45932960510253906, -0.00011444091796875, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.00066375732421875, -1.71661376953125e-05, 0.0, -0.00026702880859375, -0.0010888805845752358, -1.0609622222546022e-05, -0.000396728515625, -0.0014276504516601562, 0.0], "choice_history": [93, 145, 230, 101, 125, "Execute", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Execute", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 14, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 109]}, {"inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        game.other_player.draw()\n", "score": -1.581829690276635, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Execute", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template14"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -4.0531076592742465e-06, -7.62939453125e-06, -7.05718994140625e-05, -0.000274658203125, -1.71661376953125e-05, 0.0, -9.059880540007725e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0002574920654296875, -0.0001773834228515625, -5.91278076171875e-05, -7.62939453125e-06, -0.000194549560546875, -6.103515625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -2.8609820219571702e-05, -5.7220458984375e-06, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0023691654205322266, 0.0, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0002002716064453125, -3.814697265625e-06, -0.0025501251220703125, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001621246337890625, -3.4332275390625e-05, -7.43865966796875e-05, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06, -0.012537956237792969, -5.841255187988281e-06, -0.0001201629638671875, -0.006724357604980469, -1.9073486328125e-06, -0.000335693359375, -6.4849853515625e-05, -1.33514404296875e-05, -6.4849853515625e-05, -0.0003814697265625, -9.1552734375e-05, -5.14984130859375e-05, -0.010830283164978027, -2.0265579223632812e-06, -0.0005207061767578125, -0.0012264251708984375, -7.2479248046875e-05, -4.57763671875e-05, -0.0034189224243164062, -0.00012969970703125, -0.00075531005859375, 0.0, -9.5367431640625e-06, 0.0, -0.003488898044452071, -4.0292736230185255e-05, -0.0006446788320317864, 0.0, -0.005146026611328125, -0.02160358428955078, -3.814697265625e-05, -0.0006732940673828125, -0.0001621246337890625, -0.00012969970703125, 0.0, -3.4332275390625e-05, 0.0, -0.0003718137741088867, -1.5497207641601562e-05, -0.01831172965466976, -5.7220458984375e-06, -3.0517578125e-05, -7.43865966796875e-05, -6.103515625e-05, 0.0, -0.0004062652587890625, 0.0, -0.0010330677032470703, -8.618831634521484e-05, -0.010285121388733387, -4.220008850097656e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.00018703937530517578, 0.0, -1.9073486328125e-06, 0.0, -0.0007686614990234375, -3.814697265625e-06, -1.9073486328125e-06, -1.52587890625e-05, -6.67572021484375e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -2.6702880859375e-05, -4.410743713378906e-06, -1.3509740829467773, -8.96453857421875e-05, -0.00045013427734375, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001125335693359375, -5.7220458984375e-06, 0.0, -0.0003948211669921875, -0.0025724899023771286, -2.861022494471399e-06, -0.0005435943603515625, -0.011515617370605469, -1.71661376953125e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.036739349365234375, -1.9073486328125e-06, 0.0, -0.007821083068847656, 0.0, -0.03429412841796875, -1.9073486328125e-06, -0.0004425048828125, 0.0, -0.022737622261047363, -7.62939453125e-06, -0.004715783521533012, -1.71661376953125e-05, -2.288818359375e-05], "choice_history": [93, 145, 230, 101, 125, "Execute", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Execute", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 14, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 102, 128, 18, 121, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>", 109]}, {"inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        game.other_player.draw()\n        game.other_player.draw()\n", "score": -3.0639350946466664, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Execute", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template14"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -4.0531076592742465e-06, -7.62939453125e-06, -7.05718994140625e-05, -0.000274658203125, -1.71661376953125e-05, 0.0, -9.059880540007725e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0002574920654296875, -0.0001773834228515625, -5.91278076171875e-05, -7.62939453125e-06, -0.000194549560546875, -6.103515625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -2.8609820219571702e-05, -5.7220458984375e-06, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0023691654205322266, 0.0, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0002002716064453125, -3.814697265625e-06, -0.0025501251220703125, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001621246337890625, -3.4332275390625e-05, -7.43865966796875e-05, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06, -0.012537956237792969, -5.841255187988281e-06, -0.0001201629638671875, -0.006724357604980469, -1.9073486328125e-06, -0.000335693359375, -6.4849853515625e-05, -1.33514404296875e-05, -6.4849853515625e-05, -0.0003814697265625, -9.1552734375e-05, -5.14984130859375e-05, -0.010830283164978027, -2.0265579223632812e-06, -0.0005207061767578125, -0.0012264251708984375, -7.2479248046875e-05, -4.57763671875e-05, -0.0034189224243164062, -0.00012969970703125, -0.00075531005859375, 0.0, -9.5367431640625e-06, 0.0, -0.003488898044452071, -4.0292736230185255e-05, -0.0006446788320317864, 0.0, -0.005146026611328125, -0.02160358428955078, -3.814697265625e-05, -0.0006732940673828125, -0.0001621246337890625, -0.00012969970703125, 0.0, -3.4332275390625e-05, 0.0, -0.0003718137741088867, -1.5497207641601562e-05, -0.01831172965466976, -5.7220458984375e-06, -3.0517578125e-05, -7.43865966796875e-05, -6.103515625e-05, 0.0, -0.0004062652587890625, 0.0, -0.0010330677032470703, -8.618831634521484e-05, -0.010285121388733387, -4.220008850097656e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.00018703937530517578, 0.0, -1.9073486328125e-06, 0.0, -0.0007686614990234375, -3.814697265625e-06, -1.9073486328125e-06, -1.52587890625e-05, -6.67572021484375e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -2.6702880859375e-05, -4.410743713378906e-06, -2.4882211685180664, -0.0003147125244140625, -0.0035419464111328125, -1.9073486328125e-06, -1.52587890625e-05, -0.000202178955078125, -4.00543212890625e-05, 0.0, -0.00299835205078125, -0.001667852746322751, -7.510183422709815e-06, -0.000316619873046875, -0.0008325576782226562, -6.67572021484375e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.00550079345703125, -3.814697265625e-06, 0.0, -0.19758224487304688, 0.0, -0.006745338439941406, 0.0, -0.000640869140625, 0.0, -0.0175858736038208, -7.62939453125e-06, -0.004599792417138815, -5.7220458984375e-06, -8.0108642578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.014324188232421875, -3.814697265625e-06, 0.0, -0.17796993255615234, 0.0, -0.012935638427734375, 0.0, -0.0011034011840820312, 0.0, -0.013846397399902344, -5.7220458984375e-06, -0.004383552353829145, -3.814697265625e-06, -3.0517578125e-05], "choice_history": [93, 145, 230, 101, 125, "Execute", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Execute", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 14, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 102, 128, 18, 121, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>", 102, 128, 18, 121, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>", 109]}, {"inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.spell_targetable() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -4.844565142659093, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Execute", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template14"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -4.0531076592742465e-06, -7.62939453125e-06, -7.05718994140625e-05, -0.000274658203125, -1.71661376953125e-05, 0.0, -9.059880540007725e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0002574920654296875, -0.0001773834228515625, -5.91278076171875e-05, -7.62939453125e-06, -0.000194549560546875, -6.103515625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -2.8609820219571702e-05, -5.7220458984375e-06, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0023691654205322266, 0.0, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0002002716064453125, -3.814697265625e-06, -0.0025501251220703125, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001621246337890625, -3.4332275390625e-05, -7.43865966796875e-05, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06, -0.012537956237792969, -5.841255187988281e-06, -0.0001201629638671875, -0.006724357604980469, -1.9073486328125e-06, -0.000335693359375, -6.4849853515625e-05, -1.33514404296875e-05, -6.4849853515625e-05, -0.0003814697265625, -9.1552734375e-05, -5.14984130859375e-05, -0.010830283164978027, -2.0265579223632812e-06, -0.0005207061767578125, -0.0012264251708984375, -7.2479248046875e-05, -4.57763671875e-05, -0.0034189224243164062, -0.00012969970703125, -0.00075531005859375, 0.0, -9.5367431640625e-06, 0.0, -0.003488898044452071, -4.0292736230185255e-05, -0.0006446788320317864, 0.0, -0.005146026611328125, -0.02160358428955078, -3.814697265625e-05, -0.0006732940673828125, -0.0001621246337890625, -0.00012969970703125, 0.0, -3.4332275390625e-05, 0.0, -0.0003718137741088867, -1.5497207641601562e-05, -4.160040855407715, -5.364418029785156e-05, -0.002429962158203125, -9.72747802734375e-05, -8.392333984375e-05, 0.0, -0.000179290771484375, 0.0, -0.0011169910430908203, -9.751319885253906e-05, -0.02144167758524418, -2.3126602172851562e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.00020992755889892578, 0.0, -1.9073486328125e-06, 0.0, -0.0008907318115234375, -3.814697265625e-06, 0.0, -1.52587890625e-05, -6.67572021484375e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -2.6702880859375e-05, -4.410743713378906e-06, -0.576848030090332, -0.000110626220703125, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.000667572021484375, -1.71661376953125e-05, 0.0, -0.000263214111328125, -0.0010996022028848529, -1.0609622222546022e-05, -0.0003910064697265625, -0.0014333724975585938, 0.0], "choice_history": [93, 145, 230, 101, 125, "Execute", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Execute", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 14, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 109]}, {"inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        game.other_player.draw()\n        game.check_delayed()\n", "score": -5.2308039121735135, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Execute", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template14"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "check_delayed", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -4.0531076592742465e-06, -7.62939453125e-06, -7.05718994140625e-05, -0.000274658203125, -1.71661376953125e-05, 0.0, -9.059880540007725e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0002574920654296875, -0.0001773834228515625, -5.91278076171875e-05, -7.62939453125e-06, -0.000194549560546875, -6.103515625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -2.8609820219571702e-05, -5.7220458984375e-06, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0023691654205322266, 0.0, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0002002716064453125, -3.814697265625e-06, -0.0025501251220703125, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001621246337890625, -3.4332275390625e-05, -7.43865966796875e-05, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06, -0.012537956237792969, -5.841255187988281e-06, -0.0001201629638671875, -0.006724357604980469, -1.9073486328125e-06, -0.000335693359375, -6.4849853515625e-05, -1.33514404296875e-05, -6.4849853515625e-05, -0.0003814697265625, -9.1552734375e-05, -5.14984130859375e-05, -0.010830283164978027, -2.0265579223632812e-06, -0.0005207061767578125, -0.0012264251708984375, -7.2479248046875e-05, -4.57763671875e-05, -0.0034189224243164062, -0.00012969970703125, -0.00075531005859375, 0.0, -9.5367431640625e-06, 0.0, -0.003488898044452071, -4.0292736230185255e-05, -0.0006446788320317864, 0.0, -0.005146026611328125, -0.02160358428955078, -3.814697265625e-05, -0.0006732940673828125, -0.0001621246337890625, -0.00012969970703125, 0.0, -3.4332275390625e-05, 0.0, -0.0003718137741088867, -1.5497207641601562e-05, -0.01831172965466976, -5.7220458984375e-06, -3.0517578125e-05, -7.43865966796875e-05, -6.103515625e-05, 0.0, -0.0004062652587890625, 0.0, -0.0010330677032470703, -8.618831634521484e-05, -0.010285121388733387, -4.220008850097656e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.00018703937530517578, 0.0, -1.9073486328125e-06, 0.0, -0.0007686614990234375, -3.814697265625e-06, -1.9073486328125e-06, -1.52587890625e-05, -6.67572021484375e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -2.6702880859375e-05, -4.410743713378906e-06, -2.4882211685180664, -0.0003147125244140625, -0.0035419464111328125, -1.9073486328125e-06, -1.52587890625e-05, -0.000202178955078125, -4.00543212890625e-05, 0.0, -0.00299835205078125, -0.001667852746322751, -7.510183422709815e-06, -0.000316619873046875, -0.0008325576782226562, -6.67572021484375e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.00550079345703125, -3.814697265625e-06, 0.0, -0.19758224487304688, 0.0, -0.006745338439941406, 0.0, -0.000640869140625, 0.0, -0.0175858736038208, -7.62939453125e-06, -0.004599792417138815, -5.7220458984375e-06, -8.0108642578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.014324188232421875, -3.814697265625e-06, 0.0, -1.8357324600219727, -1.9073486328125e-06, -0.5356721878051758, 0.0, -0.005737423896789551, -3.814697265625e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Execute", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Execute", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 14, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 102, 128, 18, 121, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>", 102, 128, 18, 121, 15, 116, 23, 146, "game", "<EOS>", "check_delayed", "<EOS>", 109]}, {"inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        game.check_delayed()\n        game.other_player.draw()\n", "score": -5.369001208938215, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Execute", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template14"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "check_delayed", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -4.0531076592742465e-06, -7.62939453125e-06, -7.05718994140625e-05, -0.000274658203125, -1.71661376953125e-05, 0.0, -9.059880540007725e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0002574920654296875, -0.0001773834228515625, -5.91278076171875e-05, -7.62939453125e-06, -0.000194549560546875, -6.103515625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -2.8609820219571702e-05, -5.7220458984375e-06, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0023691654205322266, 0.0, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0002002716064453125, -3.814697265625e-06, -0.0025501251220703125, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001621246337890625, -3.4332275390625e-05, -7.43865966796875e-05, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06, -0.012537956237792969, -5.841255187988281e-06, -0.0001201629638671875, -0.006724357604980469, -1.9073486328125e-06, -0.000335693359375, -6.4849853515625e-05, -1.33514404296875e-05, -6.4849853515625e-05, -0.0003814697265625, -9.1552734375e-05, -5.14984130859375e-05, -0.010830283164978027, -2.0265579223632812e-06, -0.0005207061767578125, -0.0012264251708984375, -7.2479248046875e-05, -4.57763671875e-05, -0.0034189224243164062, -0.00012969970703125, -0.00075531005859375, 0.0, -9.5367431640625e-06, 0.0, -0.003488898044452071, -4.0292736230185255e-05, -0.0006446788320317864, 0.0, -0.005146026611328125, -0.02160358428955078, -3.814697265625e-05, -0.0006732940673828125, -0.0001621246337890625, -0.00012969970703125, 0.0, -3.4332275390625e-05, 0.0, -0.0003718137741088867, -1.5497207641601562e-05, -0.01831172965466976, -5.7220458984375e-06, -3.0517578125e-05, -7.43865966796875e-05, -6.103515625e-05, 0.0, -0.0004062652587890625, 0.0, -0.0010330677032470703, -8.618831634521484e-05, -0.010285121388733387, -4.220008850097656e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.00018703937530517578, 0.0, -1.9073486328125e-06, 0.0, -0.0007686614990234375, -3.814697265625e-06, -1.9073486328125e-06, -1.52587890625e-05, -6.67572021484375e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -2.6702880859375e-05, -4.410743713378906e-06, -2.4882211685180664, -0.0003147125244140625, -0.0035419464111328125, -1.9073486328125e-06, -1.52587890625e-05, -0.000202178955078125, -4.00543212890625e-05, 0.0, -0.00299835205078125, -0.001667852746322751, -7.510183422709815e-06, -0.000316619873046875, -0.0008325576782226562, -6.67572021484375e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.00550079345703125, -3.814697265625e-06, 0.0, -1.7303180694580078, -1.71661376953125e-05, -0.4515657424926758, 0.0, -0.008571028709411621, -7.62939453125e-06, -0.0005397796630859375, -1.9073486328125e-06, -1.9073486328125e-06, -0.4629640579223633, 0.0, 0.0, -0.01878833770751953, 0.0, -0.062081336975097656, 0.0, -0.0011548995971679688, 0.0, -0.01199638843536377, -5.7220458984375e-06, -0.00887999590486288, -3.814697265625e-06, -2.6702880859375e-05], "choice_history": [93, 145, 230, 101, 125, "Execute", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Execute", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 14, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 102, 128, 18, 121, 15, 116, 23, 146, "game", "<EOS>", "check_delayed", "<EOS>", 102, 128, 18, 121, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>", 109]}, {"inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n", "score": -5.441422815453478, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Execute", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template14"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template14"}], "ops": [{"_type": "GtE"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -4.0531076592742465e-06, -7.62939453125e-06, -7.05718994140625e-05, -0.000274658203125, -1.71661376953125e-05, 0.0, -9.059880540007725e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0002574920654296875, -0.0001773834228515625, -5.91278076171875e-05, -7.62939453125e-06, -0.000194549560546875, -6.103515625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -2.8609820219571702e-05, -5.7220458984375e-06, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0023691654205322266, 0.0, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0002002716064453125, -3.814697265625e-06, -0.0025501251220703125, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001621246337890625, -3.4332275390625e-05, -7.43865966796875e-05, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06, -0.012537956237792969, -5.841255187988281e-06, -0.0001201629638671875, -0.006724357604980469, -1.9073486328125e-06, -0.000335693359375, -6.4849853515625e-05, -1.33514404296875e-05, -6.4849853515625e-05, -0.0003814697265625, -9.1552734375e-05, -5.14984130859375e-05, -0.010830283164978027, -2.0265579223632812e-06, -0.0005207061767578125, -0.0012264251708984375, -7.2479248046875e-05, -4.57763671875e-05, -0.0034189224243164062, -0.00012969970703125, -0.00075531005859375, 0.0, -9.5367431640625e-06, 0.0, -0.003488898044452071, -4.0292736230185255e-05, -0.0006446788320317864, 0.0, -0.005146026611328125, -0.02160358428955078, -3.814697265625e-05, -0.0006732940673828125, -0.0001621246337890625, -0.00012969970703125, 0.0, -3.4332275390625e-05, 0.0, -0.0003718137741088867, -1.5497207641601562e-05, -0.01831172965466976, -5.7220458984375e-06, -3.0517578125e-05, -7.43865966796875e-05, -6.103515625e-05, 0.0, -0.0004062652587890625, 0.0, -0.0010330677032470703, -8.618831634521484e-05, -0.010285121388733387, -4.220008850097656e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.00018703937530517578, 0.0, -1.9073486328125e-06, 0.0, -0.0007686614990234375, -3.814697265625e-06, -1.9073486328125e-06, -1.52587890625e-05, -6.67572021484375e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -2.6702880859375e-05, -4.410743713378906e-06, -5.171205997467041, -0.06269550323486328, -0.0003204345703125, -0.002735137939453125, -0.0012569427490234375, -0.007434844970703125, -2.09808349609375e-05, -0.0030765533447265625, -3.24249267578125e-05, -0.00714111328125, -1.71661376953125e-05, -0.0019235610961914062, -2.288818359375e-05, -9.226799011230469e-05, -1.9073486328125e-05, -0.000530242919921875, 0.0, -4.00543212890625e-05, -0.0001220703125, -0.0018053054809570312, -5.7220458984375e-06, -0.0005017518997192383, 0.0, -0.011616706848144531, -0.010251998901367188, -0.029671669006347656, -0.00017547607421875, -0.000125885009765625, -5.7220458984375e-05, -0.002355217933654785, -2.503394853192731e-06, -1.9073486328125e-06, -0.002101898193359375, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -0.000179290771484375, 0.0, -0.0016956329345703125, -1.9073486328125e-06, -0.0020542144775390625, 0.0, -0.0016359371365979314, -2.0265579223632812e-06, -8.7738037109375e-05, -0.006000518798828125, -0.0001316070556640625, -0.0036554336547851562, -0.0002155303955078125], "choice_history": [93, 145, 230, 101, 125, "Execute", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Execute", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 14, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 213, 8, 216, 70, 109]}, {"inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -5.4871004681481, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Execute", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template14"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "Eq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -4.0531076592742465e-06, -7.62939453125e-06, -7.05718994140625e-05, -0.000274658203125, -1.71661376953125e-05, 0.0, -9.059880540007725e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0002574920654296875, -0.0001773834228515625, -5.91278076171875e-05, -7.62939453125e-06, -0.000194549560546875, -6.103515625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -2.8609820219571702e-05, -5.7220458984375e-06, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0023691654205322266, 0.0, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0002002716064453125, -3.814697265625e-06, -0.0025501251220703125, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001621246337890625, -3.4332275390625e-05, -7.43865966796875e-05, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06, -0.012537956237792969, -5.841255187988281e-06, -0.0001201629638671875, -0.006724357604980469, -1.9073486328125e-06, -0.000335693359375, -6.4849853515625e-05, -1.33514404296875e-05, -6.4849853515625e-05, -0.0003814697265625, -9.1552734375e-05, -5.14984130859375e-05, -0.010830283164978027, -2.0265579223632812e-06, -0.0005207061767578125, -0.0012264251708984375, -7.2479248046875e-05, -4.57763671875e-05, -0.0034189224243164062, -0.00012969970703125, -0.00075531005859375, 0.0, -9.5367431640625e-06, 0.0, -0.003488898044452071, -4.0292736230185255e-05, -0.0006446788320317864, 0.0, -0.005146026611328125, -4.940858840942383, -1.52587890625e-05, -0.0014162063598632812, -0.00012969970703125, -0.0002498626708984375, 0.0, -1.9073486328125e-05, 0.0, -0.00034737586975097656, -1.728534698486328e-05, -0.02144717052578926, -5.7220458984375e-06, -4.1961669921875e-05, -7.62939453125e-05, -6.103515625e-05, 0.0, -0.0004291534423828125, 0.0, -0.0010502338409423828, -8.618831634521484e-05, -0.009332756511867046, -4.220008850097656e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.00016796588897705078, 0.0, -1.9073486328125e-06, 0.0, -0.0007572174072265625, -3.814697265625e-06, -1.9073486328125e-06, -1.52587890625e-05, -6.67572021484375e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -2.6702880859375e-05, -4.410743713378906e-06, -0.4525299072265625, -0.00011444091796875, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.0006656646728515625, -1.71661376953125e-05, 0.0, -0.00026702880859375, -0.0010892378631979227, -1.2516970855358522e-05, -0.000396728515625, -0.0014257431030273438, 0.0], "choice_history": [93, 145, 230, 101, 125, "Execute", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Execute", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 6, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 109]}, {"inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health < target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -5.667042233384535, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Execute", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template14"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "Lt"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -4.0531076592742465e-06, -7.62939453125e-06, -7.05718994140625e-05, -0.000274658203125, -1.71661376953125e-05, 0.0, -9.059880540007725e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0002574920654296875, -0.0001773834228515625, -5.91278076171875e-05, -7.62939453125e-06, -0.000194549560546875, -6.103515625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -2.8609820219571702e-05, -5.7220458984375e-06, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0023691654205322266, 0.0, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0002002716064453125, -3.814697265625e-06, -0.0025501251220703125, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001621246337890625, -3.4332275390625e-05, -7.43865966796875e-05, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06, -0.012537956237792969, -5.841255187988281e-06, -0.0001201629638671875, -0.006724357604980469, -1.9073486328125e-06, -0.000335693359375, -6.4849853515625e-05, -1.33514404296875e-05, -6.4849853515625e-05, -0.0003814697265625, -9.1552734375e-05, -5.14984130859375e-05, -0.010830283164978027, -2.0265579223632812e-06, -0.0005207061767578125, -0.0012264251708984375, -7.2479248046875e-05, -4.57763671875e-05, -0.0034189224243164062, -0.00012969970703125, -0.00075531005859375, 0.0, -9.5367431640625e-06, 0.0, -0.003488898044452071, -4.0292736230185255e-05, -0.0006446788320317864, 0.0, -0.005146026611328125, -5.1090288162231445, -0.0002460479736328125, -0.0017786026000976562, -0.0002155303955078125, -0.00020599365234375, 0.0, -2.09808349609375e-05, 0.0, -0.000434637040598318, -1.7523765563964844e-05, -0.01677452214062214, -7.62939453125e-06, -4.38690185546875e-05, -7.2479248046875e-05, -5.53131103515625e-05, 0.0, -0.0003204345703125, 0.0, -0.001088857650756836, -0.00010526180267333984, -0.010436986573040485, -4.2319297790527344e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.00019276142120361328, 0.0, -1.9073486328125e-06, 0.0, -0.00077056884765625, -3.814697265625e-06, -1.9073486328125e-06, -1.52587890625e-05, -6.67572021484375e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -2.6702880859375e-05, -4.410743713378906e-06, -0.46717071533203125, -0.0001125335693359375, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.00066375732421875, -1.71661376953125e-05, 0.0, -0.00026702880859375, -0.001090190839022398, -1.0609622222546022e-05, -0.000396728515625, -0.0014238357543945312, 0.0], "choice_history": [93, 145, 230, 101, 125, "Execute", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Execute", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 12, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 109]}, {"inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        game.check_delayed.draw()\n", "score": -5.712905446900976, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Execute", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template14"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"attr": "check_delayed", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -4.0531076592742465e-06, -7.62939453125e-06, -7.05718994140625e-05, -0.000274658203125, -1.71661376953125e-05, 0.0, -9.059880540007725e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0002574920654296875, -0.0001773834228515625, -5.91278076171875e-05, -7.62939453125e-06, -0.000194549560546875, -6.103515625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -2.8609820219571702e-05, -5.7220458984375e-06, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0023691654205322266, 0.0, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0002002716064453125, -3.814697265625e-06, -0.0025501251220703125, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001621246337890625, -3.4332275390625e-05, -7.43865966796875e-05, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06, -0.012537956237792969, -5.841255187988281e-06, -0.0001201629638671875, -0.006724357604980469, -1.9073486328125e-06, -0.000335693359375, -6.4849853515625e-05, -1.33514404296875e-05, -6.4849853515625e-05, -0.0003814697265625, -9.1552734375e-05, -5.14984130859375e-05, -0.010830283164978027, -2.0265579223632812e-06, -0.0005207061767578125, -0.0012264251708984375, -7.2479248046875e-05, -4.57763671875e-05, -0.0034189224243164062, -0.00012969970703125, -0.00075531005859375, 0.0, -9.5367431640625e-06, 0.0, -0.003488898044452071, -4.0292736230185255e-05, -0.0006446788320317864, 0.0, -0.005146026611328125, -0.02160358428955078, -3.814697265625e-05, -0.0006732940673828125, -0.0001621246337890625, -0.00012969970703125, 0.0, -3.4332275390625e-05, 0.0, -0.0003718137741088867, -1.5497207641601562e-05, -0.01831172965466976, -5.7220458984375e-06, -3.0517578125e-05, -7.43865966796875e-05, -6.103515625e-05, 0.0, -0.0004062652587890625, 0.0, -0.0010330677032470703, -8.618831634521484e-05, -0.010285121388733387, -4.220008850097656e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.00018703937530517578, 0.0, -1.9073486328125e-06, 0.0, -0.0007686614990234375, -3.814697265625e-06, -1.9073486328125e-06, -1.52587890625e-05, -6.67572021484375e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -2.6702880859375e-05, -4.410743713378906e-06, -1.3509740829467773, -8.96453857421875e-05, -0.00045013427734375, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001125335693359375, -5.7220458984375e-06, 0.0, -0.0003948211669921875, -0.0025724899023771286, -2.861022494471399e-06, -0.0005435943603515625, -0.011515617370605469, -1.71661376953125e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.036739349365234375, -1.9073486328125e-06, 0.0, -0.007821083068847656, 0.0, -0.03429412841796875, -1.9073486328125e-06, -0.0004425048828125, 0.0, -3.9732847213745117, -5.7220458984375e-06, -0.18523681163787842, -3.814697265625e-05, -1.1444091796875e-05], "choice_history": [93, 145, 230, 101, 125, "Execute", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Execute", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 14, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 102, 128, 18, 121, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "check_delayed", "<EOS>", "draw", "<EOS>", 109]}, {"inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.<UNK>, filter_func=\n            lambda target: target.health != target.calculate_max_health() and\n            target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -5.795688750997186, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Execute", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template14"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -4.0531076592742465e-06, -7.62939453125e-06, -7.05718994140625e-05, -0.000274658203125, -1.71661376953125e-05, 0.0, -9.059880540007725e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0002574920654296875, -0.0001773834228515625, -5.91278076171875e-05, -7.62939453125e-06, -0.000194549560546875, -6.103515625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -2.8609820219571702e-05, -5.7220458984375e-06, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0023691654205322266, 0.0, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0002002716064453125, -3.814697265625e-06, -0.0025501251220703125, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001621246337890625, -3.4332275390625e-05, -7.43865966796875e-05, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06, -5.248991966247559, -9.5367431640625e-06, -0.0018978118896484375, -0.005511283874511719, -2.6702880859375e-05, -0.0001659393310546875, -5.340576171875e-05, -1.71661376953125e-05, -0.0001201629638671875, -0.0003604888916015625, -9.918212890625e-05, -3.4332275390625e-05, -0.01138150691986084, -2.0265579223632812e-06, -0.0004425048828125, -0.0016689300537109375, -8.0108642578125e-05, -3.814697265625e-05, -0.00344085693359375, -0.0001316070556640625, -0.000705718994140625, 0.0, -5.7220458984375e-06, 0.0, -0.00213980651460588, -3.361701965332031e-05, -0.0005861487588845193, 0.0, -0.005252838134765625, -0.022008895874023438, -3.62396240234375e-05, -0.000576019287109375, -0.0001926422119140625, -0.000133514404296875, 0.0, -3.0517578125e-05, 0.0, -0.00034546852111816406, -1.3470649719238281e-05, -0.01931249536573887, -3.814697265625e-06, -3.24249267578125e-05, -0.0001239776611328125, -8.0108642578125e-05, 0.0, -0.0005054473876953125, 0.0, -0.0010552406311035156, -7.843971252441406e-05, -0.007265913300216198, -3.266334533691406e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.00012791156768798828, 0.0, -3.814697265625e-06, 0.0, -0.000732421875, -3.814697265625e-06, 0.0, -1.52587890625e-05, -5.340576171875e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -2.6702880859375e-05, -4.410743713378906e-06, -0.44852161407470703, -0.0001163482666015625, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.00066375732421875, -1.71661376953125e-05, 0.0, -0.000270843505859375, -0.0010872130515053868, -1.2516970855358522e-05, -0.000396728515625, -0.001422882080078125, 0.0], "choice_history": [93, 145, 230, 101, 125, "Execute", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Execute", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 14, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 109]}, {"inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -6.337846983708886, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Execute", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template14"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_enemy_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -4.0531076592742465e-06, -7.62939453125e-06, -7.05718994140625e-05, -0.000274658203125, -1.71661376953125e-05, 0.0, -9.059880540007725e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0002574920654296875, -0.0001773834228515625, -5.91278076171875e-05, -7.62939453125e-06, -0.000194549560546875, -6.103515625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -2.8609820219571702e-05, -5.7220458984375e-06, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0023691654205322266, 0.0, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0002002716064453125, -3.814697265625e-06, -6.109793663024902, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -7.62939453125e-05, -7.43865966796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.0002288818359375, -1.9073486328125e-06, -9.1552734375e-05, -5.7220458984375e-06, -0.021753430366516113, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -0.0004596710205078125, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.826618194580078e-05, -4.5299530029296875e-06, -0.19712448120117188, -0.000102996826171875, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, -0.00064849853515625, -1.52587890625e-05, 0.0, -0.000240325927734375, -0.0011207954958081245, -1.215934389620088e-05, -0.00042724609375, -0.001285552978515625, 0.0], "choice_history": [93, 145, 230, 101, 125, "Execute", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Execute", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 109]}, {"inferred_code": "super().use(player, game)\n", "score": -13.046692848205566, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -11.821893692016602, -1.2247610092163086], "choice_history": [93, 145, 230, 108, 109]}, {"inferred_code": "", "score": -14.997493743896484, "model_output": {"_type": "Module", "body": [{"_type": "Template13_stmt_seq"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -13.041409492492676, -1.9560461044311523], "choice_history": [93, 145, 230, 109, 109]}, {"inferred_code": "", "score": -21.852338790893555, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.1444091796875e-05, -2.47955322265625e-05, -21.85230255126953], "choice_history": [93, 145, 228]}], "index": 30}
{"beams": [{"inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "score": -0.18418597802019576, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FanOfKnives", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Fan of Knives"}, {"_type": "Template16"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, -6.29425048828125e-05, -0.0003871917724609375, -0.0002754580636974424, -0.002227660734206438, -3.480863233562559e-05, -2.992108420585282e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.000370025634765625, -1.9073486328125e-06, -3.814697265625e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -2.86102294921875e-05, -0.0001010894775390625, 0.0, -0.0002689361572265625, -0.0015926361083984375, -0.00011444091796875, -1.52587890625e-05, -7.62939453125e-06, -4.231909042573534e-05, -2.09808349609375e-05, -1.7404556274414062e-05, -4.041194551973604e-05, -0.0006788969039916992, -8.7738037109375e-05, -0.0005588531494140625, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00013267993927001953, -1.9073486328125e-06, -4.00543212890625e-05, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002288818359375, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -1.5497207641601562e-05, 0.0, -3.0517578125e-05, -2.09808349609375e-05, -0.00012028217315673828, -5.125998541188892e-06, -0.1369953155517578, -2.288818359375e-05, -0.0041599273681640625, -0.00046539306640625, -5.340576171875e-05, -0.0013408660888671875, -0.000507354736328125, -7.62939453125e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -0.0005728006362915039, -2.09808349609375e-05, -0.0001316070556640625, 0.0, -8.96453857421875e-05, -0.000110626220703125, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -7.62939453125e-05, 0.0, -0.0006198883056640625, 0.0, -0.0004162787226960063, -1.71661376953125e-05, -0.000110626220703125, -9.918212890625e-05, -1.9073486328125e-06, -3.0517578125e-05, -0.008619308471679688, -2.09808349609375e-05, 0.0, -4.38690185546875e-05, -0.00042179785668849945, -2.0265579223632812e-06, -1.33514404296875e-05, -2.09808349609375e-05, -1.71661376953125e-05, -0.00011444091796875, -1.9073486328125e-06, -6.866455078125e-05, -0.00030028820037841797, 0.0, -1.1444091796875e-05, -0.0004863739013671875, -0.000339508056640625, -0.000545501708984375, -1.52587890625e-05, -0.0007534027099609375, -0.0004520416259765625, -5.7220458984375e-06, 0.0, -0.01700115203857422, -0.0011197328567504883, 0.0, -3.4332275390625e-05], "choice_history": [93, 145, 230, 101, 125, "Fan", "Of", "Knives", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Fan", " ", "of", " ", "Knives", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "score": -2.6176144884907444, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FanOfKnives", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Fan of Knives"}, {"_type": "Template16"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, -6.29425048828125e-05, -0.0003871917724609375, -0.0002754580636974424, -0.002227660734206438, -3.480863233562559e-05, -2.992108420585282e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.000370025634765625, -1.9073486328125e-06, -3.814697265625e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -2.86102294921875e-05, -0.0001010894775390625, 0.0, -0.0002689361572265625, -0.0015926361083984375, -0.00011444091796875, -1.52587890625e-05, -7.62939453125e-06, -4.231909042573534e-05, -2.09808349609375e-05, -1.7404556274414062e-05, -4.041194551973604e-05, -0.0006788969039916992, -8.7738037109375e-05, -0.0005588531494140625, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00013267993927001953, -1.9073486328125e-06, -4.00543212890625e-05, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002288818359375, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -1.5497207641601562e-05, 0.0, -3.0517578125e-05, -2.09808349609375e-05, -0.00012028217315673828, -5.125998541188892e-06, -2.527947425842285, -0.000141143798828125, -0.01044464111328125, -0.0001049041748046875, -0.0002803802490234375, -0.05514240264892578, -0.0014934539794921875, -0.000110626220703125, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -0.0009005069732666016, -2.288818359375e-05, -0.000133514404296875, 0.0, -5.91278076171875e-05, -0.000179290771484375, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -7.43865966796875e-05, 0.0, -0.00066375732421875, 0.0, -0.0004134175833314657, -1.52587890625e-05, -0.000148773193359375, -0.0001659393310546875, -1.9073486328125e-06, -3.24249267578125e-05, -0.00937652587890625, -2.47955322265625e-05, 0.0, -3.814697265625e-05, -0.00045730688725598156, -2.0265579223632812e-06, -1.1444091796875e-05, -2.09808349609375e-05, -1.9073486328125e-05, -0.0001163482666015625, -1.9073486328125e-06, -6.866455078125e-05, -0.00028502941131591797, 0.0, -1.1444091796875e-05, -0.0004940032958984375, -0.0003528594970703125, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Fan", "Of", "Knives", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Fan", " ", "of", " ", "Knives", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 109]}, {"inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(1), self)\n", "score": -4.212346987034884, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FanOfKnives", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Fan of Knives"}, {"_type": "Template16"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "extend", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"id": "targets", "_type": "Name"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, -6.29425048828125e-05, -0.0003871917724609375, -0.0002754580636974424, -0.002227660734206438, -3.480863233562559e-05, -2.992108420585282e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.000370025634765625, -1.9073486328125e-06, -3.814697265625e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -2.86102294921875e-05, -0.0001010894775390625, 0.0, -0.0002689361572265625, -0.0015926361083984375, -0.00011444091796875, -1.52587890625e-05, -7.62939453125e-06, -4.231909042573534e-05, -2.09808349609375e-05, -1.7404556274414062e-05, -4.041194551973604e-05, -0.0006788969039916992, -8.7738037109375e-05, -0.0005588531494140625, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00013267993927001953, -1.9073486328125e-06, -4.00543212890625e-05, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002288818359375, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -1.5497207641601562e-05, 0.0, -3.0517578125e-05, -2.09808349609375e-05, -0.00012028217315673828, -5.125998541188892e-06, -3.1263179779052734, -0.00022125244140625, -0.0037832260131835938, -9.1552734375e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0002155303955078125, -0.00041956035420298576, -1.1920928244535389e-07, -0.0012340545654296875, -0.000225067138671875, -0.0001583099365234375, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -0.001040339469909668, -1.1444091796875e-05, -6.306171417236328e-05, 0.0, -0.000514984130859375, -0.0001125335693359375, -9.5367431640625e-06, -0.0002498626708984375, 0.0, -1.52587890625e-05, -1.1444091796875e-05, -0.0001220703125, 0.0, -0.00048065185546875, 0.0, -0.0003707405412569642, -1.9073486328125e-06, -7.62939453125e-06, -0.0001392364501953125, -4.9591064453125e-05, -0.008350372314453125, -1.52587890625e-05, 0.0, -0.00223541259765625, -1.9073486328125e-06, -0.023590873926877975, -5.960462772236497e-07, -0.015320287086069584, -2.6702880859375e-05, -5.7220458984375e-06, -0.000209808349609375, -5.7220458984375e-06, -0.009366989135742188, -1.9073486328125e-06, -3.24249267578125e-05, -4.57763671875e-05, -1.7046926586772315e-05, 0.0, -0.025142431259155273, -4.589557647705078e-05, -0.08665919303894043, -9.167194366455078e-05, -0.8654413223266602, -0.0005950927734375, -0.0006313323974609375, -0.0020694732666015625, -5.7220458984375e-06, -0.0005346536636352539, -2.0265579223632812e-06, -4.1961669921875e-05, -0.0033512115478515625, -1.9073486328125e-06, -1.9073486328125e-06, -0.0035648345947265625, -2.86102294921875e-05, 0.0, -3.24249267578125e-05, -0.00016545777907595038, -2.622604142743512e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.52587890625e-05, -6.103515625e-05, 0.0, -7.62939453125e-05, -0.000681757926940918, -2.1457672119140625e-06, -3.814697265625e-06, -0.019872665405273438, -0.000293731689453125, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Fan", "Of", "Knives", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Fan", " ", "of", " ", "Knives", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "extend", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 103, 129, 41, 23, 146, "targets", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 109]}, {"inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        targets.extend(game.current_player.minions)\n", "score": -4.660293018667794, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FanOfKnives", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Fan of Knives"}, {"_type": "Template16"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "extend", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "extend", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, -6.29425048828125e-05, -0.0003871917724609375, -0.0002754580636974424, -0.002227660734206438, -3.480863233562559e-05, -2.992108420585282e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.000370025634765625, -1.9073486328125e-06, -3.814697265625e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -2.86102294921875e-05, -0.0001010894775390625, 0.0, -0.0002689361572265625, -0.0015926361083984375, -0.00011444091796875, -1.52587890625e-05, -7.62939453125e-06, -4.231909042573534e-05, -2.09808349609375e-05, -1.7404556274414062e-05, -4.041194551973604e-05, -0.0006788969039916992, -8.7738037109375e-05, -0.0005588531494140625, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00013267993927001953, -1.9073486328125e-06, -4.00543212890625e-05, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002288818359375, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -1.5497207641601562e-05, 0.0, -3.0517578125e-05, -2.09808349609375e-05, -0.00012028217315673828, -5.125998541188892e-06, -3.1263179779052734, -0.00022125244140625, -0.0037832260131835938, -9.1552734375e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0002155303955078125, -0.00041956035420298576, -1.1920928244535389e-07, -0.0012340545654296875, -0.000225067138671875, -0.0001583099365234375, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -0.001040339469909668, -1.1444091796875e-05, -6.306171417236328e-05, 0.0, -0.000514984130859375, -0.0001125335693359375, -9.5367431640625e-06, -0.0002498626708984375, 0.0, -1.52587890625e-05, -1.1444091796875e-05, -0.0001220703125, 0.0, -0.00048065185546875, 0.0, -0.0003707405412569642, -1.9073486328125e-06, -7.62939453125e-06, -0.0001392364501953125, -4.9591064453125e-05, -0.008350372314453125, -1.52587890625e-05, 0.0, -0.00223541259765625, -1.9073486328125e-06, -0.023590873926877975, -5.960462772236497e-07, -0.015320287086069584, -2.6702880859375e-05, -5.7220458984375e-06, -0.000209808349609375, -5.7220458984375e-06, -0.009366989135742188, -1.9073486328125e-06, -3.24249267578125e-05, -4.57763671875e-05, -1.7046926586772315e-05, 0.0, -0.025142431259155273, -4.589557647705078e-05, -0.08665919303894043, -9.167194366455078e-05, -0.9125823974609375, -0.00022125244140625, -5.91278076171875e-05, -0.08578777313232422, -3.4332275390625e-05, 0.0, -0.003955841064453125, -1.9073486328125e-06, -0.11722399294376373, -1.7881377516459906e-06, -0.09619218111038208, -1.728534698486328e-05, -5.7220458984375e-06, -0.000118255615234375, -9.5367431640625e-06, -0.009584426879882812, -1.9073486328125e-06, -3.4332275390625e-05, -5.7220458984375e-05, -1.7166135876323096e-05, 0.0, -0.025689244270324707, -3.826618194580078e-05, -0.09372341632843018, -9.834766387939453e-05, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Fan", "Of", "Knives", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Fan", " ", "of", " ", "Knives", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "extend", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "extend", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 109]}, {"inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        super().reveal()\n", "score": -4.74175285809406, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FanOfKnives", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Fan of Knives"}, {"_type": "Template16"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "reveal", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, -6.29425048828125e-05, -0.0003871917724609375, -0.0002754580636974424, -0.002227660734206438, -3.480863233562559e-05, -2.992108420585282e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.000370025634765625, -1.9073486328125e-06, -3.814697265625e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -2.86102294921875e-05, -0.0001010894775390625, 0.0, -0.0002689361572265625, -0.0015926361083984375, -0.00011444091796875, -1.52587890625e-05, -7.62939453125e-06, -4.231909042573534e-05, -2.09808349609375e-05, -1.7404556274414062e-05, -4.041194551973604e-05, -0.0006788969039916992, -8.7738037109375e-05, -0.0005588531494140625, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00013267993927001953, -1.9073486328125e-06, -4.00543212890625e-05, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002288818359375, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -1.5497207641601562e-05, 0.0, -3.0517578125e-05, -2.09808349609375e-05, -0.00012028217315673828, -5.125998541188892e-06, -0.1369953155517578, -2.288818359375e-05, -0.0041599273681640625, -0.00046539306640625, -5.340576171875e-05, -0.0013408660888671875, -0.000507354736328125, -7.62939453125e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -0.0005728006362915039, -2.09808349609375e-05, -0.0001316070556640625, 0.0, -8.96453857421875e-05, -0.000110626220703125, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -7.62939453125e-05, 0.0, -0.0006198883056640625, 0.0, -0.0004162787226960063, -1.71661376953125e-05, -0.000110626220703125, -9.918212890625e-05, -1.9073486328125e-06, -3.0517578125e-05, -0.008619308471679688, -2.09808349609375e-05, 0.0, -4.38690185546875e-05, -0.00042179785668849945, -2.0265579223632812e-06, -1.33514404296875e-05, -2.09808349609375e-05, -1.71661376953125e-05, -0.00011444091796875, -1.9073486328125e-06, -6.866455078125e-05, -0.00030028820037841797, 0.0, -1.1444091796875e-05, -0.0004863739013671875, -0.000339508056640625, -0.000545501708984375, -1.52587890625e-05, -0.0007534027099609375, -0.0004520416259765625, -5.7220458984375e-06, 0.0, -4.186078071594238, -0.0003204345703125, -0.00028347858460620046, -0.000324249267578125, -0.3887101411819458, -3.814697265625e-06, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Fan", "Of", "Knives", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Fan", " ", "of", " ", "Knives", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 102, 128, 18, 121, 15, 116, 51, 193, "super", "<EOS>", "reveal", "<EOS>", 109]}, {"inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(1), self)\n", "score": -5.6616893084669755, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FanOfKnives", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Fan of Knives"}, {"_type": "Template16"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, -6.29425048828125e-05, -0.0003871917724609375, -0.0002754580636974424, -0.002227660734206438, -3.480863233562559e-05, -2.992108420585282e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.000370025634765625, -1.9073486328125e-06, -3.814697265625e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -2.86102294921875e-05, -0.0001010894775390625, 0.0, -0.0002689361572265625, -0.0015926361083984375, -0.00011444091796875, -1.52587890625e-05, -7.62939453125e-06, -4.231909042573534e-05, -2.09808349609375e-05, -1.7404556274414062e-05, -4.041194551973604e-05, -0.0006788969039916992, -8.7738037109375e-05, -0.0005588531494140625, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00013267993927001953, -1.9073486328125e-06, -4.00543212890625e-05, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002288818359375, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -1.5497207641601562e-05, 0.0, -3.0517578125e-05, -2.09808349609375e-05, -0.00012028217315673828, -5.125998541188892e-06, -2.527947425842285, -0.000141143798828125, -0.01044464111328125, -0.0001049041748046875, -0.0002803802490234375, -2.94649600982666, -1.9073486328125e-06, -0.014627456665039062, 0.0, -0.0001049041748046875, 0.0, -0.0014190673828125, 0.0, -0.09788143634796143, 0.0, -0.0032018425408750772, 0.0, -5.14984130859375e-05, -3.0517578125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.048938751220703125, -1.9073486328125e-05, 0.0, -3.814697265625e-05, -0.0007727803895249963, -1.9073486328125e-06, -9.5367431640625e-06, -2.09808349609375e-05, -2.288818359375e-05, -0.00019073486328125, -1.9073486328125e-06, -7.43865966796875e-05, -0.00025200843811035156, 0.0, -1.33514404296875e-05, -0.0005321502685546875, -0.0002727508544921875, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Fan", "Of", "Knives", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Fan", " ", "of", " ", "Knives", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 41, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 109]}, {"inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "score": -6.554511778168035, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FanOfKnives", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Fan of Knives"}, {"_type": "Template16"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, -6.29425048828125e-05, -0.0003871917724609375, -0.0002754580636974424, -0.002227660734206438, -3.480863233562559e-05, -2.992108420585282e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.000370025634765625, -1.9073486328125e-06, -3.814697265625e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -2.86102294921875e-05, -0.0001010894775390625, 0.0, -0.0002689361572265625, -0.0015926361083984375, -0.00011444091796875, -1.52587890625e-05, -7.62939453125e-06, -4.231909042573534e-05, -2.09808349609375e-05, -1.7404556274414062e-05, -4.041194551973604e-05, -0.0006788969039916992, -8.7738037109375e-05, -0.0005588531494140625, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00013267993927001953, -1.9073486328125e-06, -4.00543212890625e-05, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002288818359375, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -1.5497207641601562e-05, 0.0, -3.0517578125e-05, -2.09808349609375e-05, -0.00012028217315673828, -5.125998541188892e-06, -0.1369953155517578, -2.288818359375e-05, -6.382900238037109, -0.005957603454589844, -0.0006008148193359375, -3.0517578125e-05, -0.0051403045654296875, -0.0004444122314453125, -7.05718994140625e-05, 0.0, -8.20159912109375e-05, -1.9073486328125e-06, -0.0006721019744873047, -2.288818359375e-05, -0.0001373291015625, 0.0, -9.34600830078125e-05, -0.0001125335693359375, -1.9073486328125e-05, -5.7220458984375e-06, 0.0, -2.86102294921875e-05, -7.62939453125e-06, -7.82012939453125e-05, 0.0, -0.000640869140625, 0.0, -0.000418066862039268, -1.71661376953125e-05, -9.1552734375e-05, -0.0001087188720703125, -1.9073486328125e-06, -3.62396240234375e-05, -0.010145187377929688, -2.09808349609375e-05, 0.0, -4.38690185546875e-05, -0.0004302581073716283, -2.0265579223632812e-06, -1.33514404296875e-05, -2.09808349609375e-05, -1.71661376953125e-05, -0.0001163482666015625, -1.9073486328125e-06, -6.866455078125e-05, -0.00030982494354248047, 0.0, -1.1444091796875e-05, -0.0004825592041015625, -0.0003376007080078125, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Fan", "Of", "Knives", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Fan", " ", "of", " ", "Knives", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 109]}, {"inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        if player.hero.health <= 0:\n            minion.damage(player.effective_spell_damage(1), self)\n        else:\n            player.draw()\n", "score": -6.591014829923772, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FanOfKnives", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Fan of Knives"}, {"_type": "Template16"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "extend", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "If", "test": {"left": {"attr": "health", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "_type": "Compare", "comparators": [{"_type": "Num", "n": 0}], "ops": [{"_type": "LtE"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}], "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, -6.29425048828125e-05, -0.0003871917724609375, -0.0002754580636974424, -0.002227660734206438, -3.480863233562559e-05, -2.992108420585282e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.000370025634765625, -1.9073486328125e-06, -3.814697265625e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -2.86102294921875e-05, -0.0001010894775390625, 0.0, -0.0002689361572265625, -0.0015926361083984375, -0.00011444091796875, -1.52587890625e-05, -7.62939453125e-06, -4.231909042573534e-05, -2.09808349609375e-05, -1.7404556274414062e-05, -4.041194551973604e-05, -0.0006788969039916992, -8.7738037109375e-05, -0.0005588531494140625, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00013267993927001953, -1.9073486328125e-06, -4.00543212890625e-05, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002288818359375, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -1.5497207641601562e-05, 0.0, -3.0517578125e-05, -2.09808349609375e-05, -0.00012028217315673828, -5.125998541188892e-06, -3.1263179779052734, -0.00022125244140625, -0.0037832260131835938, -9.1552734375e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0002155303955078125, -0.00041956035420298576, -1.1920928244535389e-07, -0.0012340545654296875, -0.000225067138671875, -0.0001583099365234375, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -0.001040339469909668, -1.1444091796875e-05, -6.306171417236328e-05, 0.0, -0.000514984130859375, -0.0001125335693359375, -9.5367431640625e-06, -0.0002498626708984375, 0.0, -1.52587890625e-05, -1.1444091796875e-05, -0.0001220703125, 0.0, -0.00048065185546875, 0.0, -0.0003707405412569642, -1.9073486328125e-06, -7.62939453125e-06, -0.0001392364501953125, -4.9591064453125e-05, -0.008350372314453125, -1.52587890625e-05, 0.0, -0.00223541259765625, -1.9073486328125e-06, -0.023590873926877975, -5.960462772236497e-07, -0.015320287086069584, -2.6702880859375e-05, -5.7220458984375e-06, -0.000209808349609375, -5.7220458984375e-06, -0.009366989135742188, -1.9073486328125e-06, -3.24249267578125e-05, -4.57763671875e-05, -1.7046926586772315e-05, 0.0, -0.025142431259155273, -4.589557647705078e-05, -0.08665919303894043, -9.167194366455078e-05, -1.7702217102050781, -0.007083892822265625, -0.001064300537109375, -1.52587890625e-05, -0.03684520721435547, -2.09808349609375e-05, -0.0009136199951171875, -1.9073486328125e-06, -0.016272544860839844, -0.008485885336995125, -1.22785213534371e-05, -0.3148980140686035, -2.0265579223632812e-06, -1.9073486328125e-05, -0.23321247100830078, -0.000164031982421875, -0.014220237731933594, -0.01346588134765625, -0.03411916643381119, -9.858606063062325e-05, -4.57763671875e-05, -0.0047740936279296875, -1.9073486328125e-06, -2.09808349609375e-05, -0.49376392364501953, -5.7220458984375e-06, 0.0, -0.08167648315429688, -0.0004936474142596126, -3.576278118089249e-07, -1.71661376953125e-05, -5.340576171875e-05, -2.288818359375e-05, -2.86102294921875e-05, 0.0, -5.14984130859375e-05, -0.00032722949981689453, -2.1457672119140625e-06, -5.7220458984375e-06, -0.03130149841308594, -0.0004711151123046875, -5.53131103515625e-05, -0.1866598129272461, -1.33514404296875e-05, -0.0001201629638671875, -0.0057659149169921875, -3.814697265625e-06, 0.0, -0.018601417541503906, -0.0006358581013046205, -4.291534423828125e-06, -0.000118255615234375], "choice_history": [93, 145, 230, 101, 125, "Fan", "Of", "Knives", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Fan", " ", "of", " ", "Knives", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "extend", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 105, 134, 19, 126, 15, 116, 15, 116, 32, "hero", "<EOS>", "health", "<EOS>", 213, 13, 216, 65, 151, "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 229, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        minion.damage(player.effective_spell_damage(1), self)\n", "score": -6.928651133816402, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FanOfKnives", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}, {"_type": "Template13_stmt_seq"}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, -6.29425048828125e-05, -0.0003871917724609375, -0.0002754580636974424, -0.002227660734206438, -3.480863233562559e-05, -2.992108420585282e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.000370025634765625, -1.9073486328125e-06, -3.814697265625e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -2.86102294921875e-05, -0.0001010894775390625, 0.0, -0.0002689361572265625, -6.459307670593262, -0.001506805419921875, -0.20596885681152344, -0.018876392394304276, -2.1457672119140625e-06, -0.033721923828125, -0.00220489501953125, -0.0003814697265625, -0.0012054443359375, -1.9073486328125e-05, -7.05718994140625e-05, -0.00047445291420444846, -3.3378591979271732e-06, -9.5367431640625e-06, -0.012247085571289062, -0.00023651123046875, -0.1885051727294922, -2.288818359375e-05], "choice_history": [93, 145, 230, 101, 125, "Fan", "Of", "Knives", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 109, 109]}, {"inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "score": -7.061551086133932, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FanOfKnives", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Fan of Knives"}, {"_type": "Template16"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, -6.29425048828125e-05, -0.0003871917724609375, -0.0002754580636974424, -0.002227660734206438, -3.480863233562559e-05, -2.992108420585282e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.000370025634765625, -1.9073486328125e-06, -3.814697265625e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -2.86102294921875e-05, -0.0001010894775390625, 0.0, -0.0002689361572265625, -0.0015926361083984375, -0.00011444091796875, -1.52587890625e-05, -7.62939453125e-06, -4.231909042573534e-05, -2.09808349609375e-05, -1.7404556274414062e-05, -4.041194551973604e-05, -0.0006788969039916992, -8.7738037109375e-05, -0.0005588531494140625, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00013267993927001953, -1.9073486328125e-06, -4.00543212890625e-05, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002288818359375, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -1.5497207641601562e-05, 0.0, -3.0517578125e-05, -2.09808349609375e-05, -0.00012028217315673828, -5.125998541188892e-06, -0.1369953155517578, -2.288818359375e-05, -0.0041599273681640625, -0.00046539306640625, -5.340576171875e-05, -6.8438310623168945, -1.9073486328125e-06, -0.012151718139648438, 0.0, -0.0003871917724609375, 0.0, -0.0020208358764648438, 0.0, -0.014118313789367676, 0.0, -0.0020178556442260742, 0.0, -6.29425048828125e-05, -1.52587890625e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.018621444702148438, -1.71661376953125e-05, 0.0, -4.00543212890625e-05, -0.000652225106023252, -2.0265579223632812e-06, -9.5367431640625e-06, -2.09808349609375e-05, -1.9073486328125e-05, -0.0001659393310546875, -1.9073486328125e-06, -7.43865966796875e-05, -0.00027501583099365234, 0.0, -1.33514404296875e-05, -0.00049591064453125, -0.0002651214599609375, -0.0005550384521484375, -1.52587890625e-05, -0.000804901123046875, -0.0004558563232421875, -3.814697265625e-06, 0.0, -0.013796806335449219, -0.0011140108108520508, 0.0, -3.4332275390625e-05], "choice_history": [93, 145, 230, 101, 125, "Fan", "Of", "Knives", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Fan", " ", "of", " ", "Knives", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 103, 129, 41, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage()\n        minion.<UNK>()\n", "score": -7.39397228322423, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FanOfKnives", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Fan of Knives"}, {"_type": "Template16"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template30"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, -6.29425048828125e-05, -0.0003871917724609375, -0.0002754580636974424, -0.002227660734206438, -3.480863233562559e-05, -2.992108420585282e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.000370025634765625, -1.9073486328125e-06, -3.814697265625e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -2.86102294921875e-05, -0.0001010894775390625, 0.0, -0.0002689361572265625, -0.0015926361083984375, -0.00011444091796875, -1.52587890625e-05, -7.62939453125e-06, -4.231909042573534e-05, -2.09808349609375e-05, -1.7404556274414062e-05, -4.041194551973604e-05, -0.0006788969039916992, -8.7738037109375e-05, -0.0005588531494140625, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00013267993927001953, -1.9073486328125e-06, -4.00543212890625e-05, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002288818359375, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -1.5497207641601562e-05, 0.0, -3.0517578125e-05, -2.09808349609375e-05, -0.00012028217315673828, -5.125998541188892e-06, -0.1369953155517578, -2.288818359375e-05, -0.0041599273681640625, -0.00046539306640625, -5.340576171875e-05, -0.0013408660888671875, -0.000507354736328125, -7.62939453125e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -0.0005728006362915039, -2.09808349609375e-05, -0.0001316070556640625, 0.0, -8.96453857421875e-05, -0.000110626220703125, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -7.62939453125e-05, 0.0, -0.0006198883056640625, 0.0, -0.0004162787226960063, -1.71661376953125e-05, -0.000110626220703125, -9.918212890625e-05, -1.9073486328125e-06, -3.0517578125e-05, -4.843508720397949, -1.52587890625e-05, 0.0, -0.00011444091796875, -1.3240545988082886, -3.814697265625e-06, -0.18269634246826172, -8.7738037109375e-05, -0.0001392364501953125, -0.6927909851074219, -4.1961669921875e-05, 0.0, -0.013072967529296875, -0.18354932963848114, -3.814697265625e-06, -0.0001163482666015625], "choice_history": [93, 145, 230, 101, 125, "Fan", "Of", "Knives", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Fan", " ", "of", " ", "Knives", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 121, 15, 116, 41, "damage", "<EOS>", 102, 128, 18, 121, 15, 116, 41, "<UNK>", "<EOS>", 109]}, {"inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.<UNK>()\n        minion.<UNK>()\n", "score": -7.636373659590845, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FanOfKnives", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Fan of Knives"}, {"_type": "Template16"}, {"attr": "ROGUE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template30"}}, "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template30"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, -6.29425048828125e-05, -0.0003871917724609375, -0.0002754580636974424, -0.002227660734206438, -3.480863233562559e-05, -2.992108420585282e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.000370025634765625, -1.9073486328125e-06, -3.814697265625e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -2.86102294921875e-05, -0.0001010894775390625, 0.0, -0.0002689361572265625, -0.0015926361083984375, -0.00011444091796875, -1.52587890625e-05, -7.62939453125e-06, -4.231909042573534e-05, -2.09808349609375e-05, -1.7404556274414062e-05, -4.041194551973604e-05, -0.0006788969039916992, -8.7738037109375e-05, -0.0005588531494140625, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00013267993927001953, -1.9073486328125e-06, -4.00543212890625e-05, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002288818359375, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -1.5497207641601562e-05, 0.0, -3.0517578125e-05, -2.09808349609375e-05, -0.00012028217315673828, -5.125998541188892e-06, -0.1369953155517578, -2.288818359375e-05, -0.0041599273681640625, -0.00046539306640625, -5.340576171875e-05, -0.0013408660888671875, -0.000507354736328125, -7.62939453125e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -0.0005728006362915039, -2.09808349609375e-05, -0.0001316070556640625, 0.0, -8.96453857421875e-05, -0.000110626220703125, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -7.62939453125e-05, 0.0, -0.0006198883056640625, 0.0, -0.0004162787226960063, -1.71661376953125e-05, -0.000110626220703125, -9.918212890625e-05, -1.9073486328125e-06, -3.0517578125e-05, -4.843508720397949, -1.52587890625e-05, 0.0, -0.00011444091796875, -0.44470059871673584, -5.7220458984375e-06, -0.021366119384765625, -4.1961669921875e-05, -5.53131103515625e-05, -1.4076366424560547, -1.33514404296875e-05, 0.0, -0.080902099609375, -0.684177577495575, -1.9073486328125e-06, -5.7220458984375e-05], "choice_history": [93, 145, 230, 101, 125, "Fan", "Of", "Knives", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Fan", " ", "of", " ", "Knives", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 121, 15, 116, 41, "<UNK>", "<EOS>", 102, 128, 18, 121, 15, 116, 41, "<UNK>", "<EOS>", 109]}, {"inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__.damage(player.effective_spell_damage(1), self)\n", "score": -8.619804883521283, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FanOfKnives", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template4"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}, {"_type": "Template13_stmt_seq"}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, -6.29425048828125e-05, -0.0003871917724609375, -0.0002754580636974424, -0.002227660734206438, -3.480863233562559e-05, -2.992108420585282e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.000370025634765625, -1.9073486328125e-06, -3.814697265625e-06, -6.79492904964718e-06, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -2.86102294921875e-05, -0.0001010894775390625, 0.0, -0.0002689361572265625, -6.459307670593262, -0.001506805419921875, -1.9759187698364258, -0.0012176668969914317, -0.008638739585876465, -0.0651092529296875, -0.008481025695800781, -0.0013446807861328125, -0.014492988586425781, -2.288818359375e-05, -8.20159912109375e-05, -0.0005331038846634328, -6.31808916295995e-06, -9.5367431640625e-06, -0.01395416259765625, -0.0002918243408203125, -0.06496047973632812, -4.00543212890625e-05], "choice_history": [93, 145, 230, 101, 125, "Fan", "Of", "Knives", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 15, 116, 50, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 109, 109]}, {"inferred_code": "", "score": -19.678142547607422, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -19.678133010864258], "choice_history": [93, 145, 228]}, {"inferred_code": "", "score": -24.104476928710938, "model_output": {"_type": "Module", "body": [{"_type": "Template13_stmt_seq"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, -15.2863187789917, -8.818120002746582], "choice_history": [93, 145, 230, 109, 109]}], "index": 31}
{"beams": [{"inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -0.030333944953724767, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Fireball", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template20"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -2.288818359375e-05, -0.000156402587890625, -0.000156402587890625, -3.4332275390625e-05, -3.766986264963634e-05, -5.960462772236497e-07, -3.0517578125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.0003070831298828125, -3.743115303223021e-05, -1.9073486328125e-06, -0.00018310546875, -9.5367431640625e-06, -7.82012939453125e-05, -6.67572021484375e-05, -3.814697265625e-06, -0.000362396240234375, -3.814697265625e-05, -1.1444091796875e-05, -8.392333984375e-05, -1.9073486328125e-06, -2.336486431886442e-05, -7.62939453125e-06, -8.392333984375e-05, -0.00035858154296875, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, 0.0, -0.00015962122415658087, 0.0, -0.0001163482666015625, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -0.00014138221740722656, -1.9073486328125e-06, -0.016984939575195312, 0.0, -0.0007114410400390625, 0.0, -3.814697265625e-06, -0.0001068115234375, -2.09808349609375e-05, -8.0108642578125e-05, -4.38690185546875e-05, 0.0, -8.20159912109375e-05, -1.9073486328125e-06, -0.0001125335693359375, -1.9073486328125e-06, -0.0005996226682327688, -3.933906555175781e-06, -1.9073486328125e-05, -7.62939453125e-06, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0002269744873046875, 0.0, -5.7220458984375e-06, 0.0, -8.463859558105469e-06, 0.0, -1.71661376953125e-05, -0.00054168701171875, -4.5180182496551424e-05, -4.291525328881107e-06, -0.0023651123046875, -6.4849853515625e-05, -3.4332275390625e-05, -1.9073486328125e-05, -3.4332275390625e-05, -0.00020599365234375, -1.9073486328125e-05, 0.0, -0.0001277923583984375, -1.1920922133867862e-06, -0.0007508496637456119, -3.814697265625e-06, -6.4849853515625e-05, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -5.14984130859375e-05, -0.00011754035949707031, -4.768370445162873e-07, -1.33514404296875e-05, -0.0037212371826171875, -0.0002899169921875, 0.0], "choice_history": [93, 145, 230, 101, 125, "Fireball", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Fireball", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 81, 74, 109]}, {"inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -5.18194467512842, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Fireball", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template20"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"_type": "Template12"}, "_type": "keyword", "arg": "overload"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -2.288818359375e-05, -0.000156402587890625, -0.000156402587890625, -3.4332275390625e-05, -3.766986264963634e-05, -5.960462772236497e-07, -3.0517578125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.0003070831298828125, -3.743115303223021e-05, -1.9073486328125e-06, -0.00018310546875, -9.5367431640625e-06, -7.82012939453125e-05, -6.67572021484375e-05, -3.814697265625e-06, -0.000362396240234375, -3.814697265625e-05, -1.1444091796875e-05, -8.392333984375e-05, -1.9073486328125e-06, -2.336486431886442e-05, -7.62939453125e-06, -8.392333984375e-05, -0.00035858154296875, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, 0.0, -0.00015962122415658087, 0.0, -0.0001163482666015625, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -0.00014138221740722656, -1.9073486328125e-06, -4.089686393737793, 0.0, -0.0001354217529296875, 0.0, -1.9073486328125e-06, -8.96453857421875e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.0001087188720703125, 0.0, -0.0001735687255859375, 0.0, -0.00022900104522705078, -1.9073486328125e-06, -0.0011793369194492698, -2.2649765014648438e-06, -5.7220458984375e-06, -0.4447154998779297, 0.0, -0.6080169677734375, -0.022330284118652344, -0.00055694580078125, -0.004848480224609375, 0.0, -1.9073486328125e-06, 0.0, -0.0001659393310546875, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.0371208190917969e-05, 0.0, -9.5367431640625e-06, -0.0001811981201171875, -6.175003363750875e-05, -9.179073458653875e-06, -0.001346588134765625, -7.62939453125e-05, -3.814697265625e-05, -1.9073486328125e-05, -2.288818359375e-05, -0.000209808349609375, -2.6702880859375e-05, 0.0, -0.0001068115234375, -1.9073468138230965e-06, -0.0004968135617673397, -3.814697265625e-06, -5.91278076171875e-05, -6.67572021484375e-05, -5.7220458984375e-06, 0.0, -5.14984130859375e-05, -0.0001157522201538086, -5.960462772236497e-07, -1.33514404296875e-05, -0.0036602020263671875, -0.0003337860107421875, 0.0], "choice_history": [93, 145, 230, 101, 125, "Fireball", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Fireball", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "overload", "<EOS>", 27, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 81, 74, 109]}, {"inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -5.530781478329345, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Fireball", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template20"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"_type": "Template14"}, "_type": "keyword", "arg": "overload"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -2.288818359375e-05, -0.000156402587890625, -0.000156402587890625, -3.4332275390625e-05, -3.766986264963634e-05, -5.960462772236497e-07, -3.0517578125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.0003070831298828125, -3.743115303223021e-05, -1.9073486328125e-06, -0.00018310546875, -9.5367431640625e-06, -7.82012939453125e-05, -6.67572021484375e-05, -3.814697265625e-06, -0.000362396240234375, -3.814697265625e-05, -1.1444091796875e-05, -8.392333984375e-05, -1.9073486328125e-06, -2.336486431886442e-05, -7.62939453125e-06, -8.392333984375e-05, -0.00035858154296875, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, 0.0, -0.00015962122415658087, 0.0, -0.0001163482666015625, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -0.00014138221740722656, -1.9073486328125e-06, -4.089686393737793, 0.0, -0.0001354217529296875, 0.0, -1.9073486328125e-06, -8.96453857421875e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.0001087188720703125, 0.0, -0.0001735687255859375, 0.0, -0.00022900104522705078, -1.9073486328125e-06, -0.0011793369194492698, -2.2649765014648438e-06, -5.7220458984375e-06, -0.4447154998779297, 0.0, -0.9754648208618164, -0.002300262451171875, -0.0001354217529296875, -0.0066204071044921875, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.000202178955078125, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -8.106231689453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001506805419921875, -6.949846283532679e-05, -1.168244216387393e-05, -0.001293182373046875, -4.38690185546875e-05, -4.1961669921875e-05, -2.288818359375e-05, -2.288818359375e-05, -0.000118255615234375, -2.09808349609375e-05, 0.0, -0.0001010894775390625, -1.5497195136049413e-06, -0.000704619160387665, -3.814697265625e-06, -5.14984130859375e-05, -5.53131103515625e-05, -3.814697265625e-06, 0.0, -5.14984130859375e-05, -0.0001195669174194336, -5.960462772236497e-07, -1.52587890625e-05, -0.003711700439453125, -0.000308990478515625, 0.0], "choice_history": [93, 145, 230, 101, 125, "Fireball", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Fireball", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "overload", "<EOS>", 28, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 81, 74, 109]}, {"inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(4), self)\n", "score": -6.51941246668224, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Fireball", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template20"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template20"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -2.288818359375e-05, -0.000156402587890625, -0.000156402587890625, -3.4332275390625e-05, -3.766986264963634e-05, -5.960462772236497e-07, -3.0517578125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.0003070831298828125, -3.743115303223021e-05, -1.9073486328125e-06, -0.00018310546875, -9.5367431640625e-06, -7.82012939453125e-05, -6.67572021484375e-05, -3.814697265625e-06, -0.000362396240234375, -3.814697265625e-05, -1.1444091796875e-05, -8.392333984375e-05, -1.9073486328125e-06, -2.336486431886442e-05, -7.62939453125e-06, -8.392333984375e-05, -0.00035858154296875, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, 0.0, -0.00015962122415658087, 0.0, -0.0001163482666015625, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -0.00014138221740722656, -1.9073486328125e-06, -0.016984939575195312, 0.0, -0.0007114410400390625, 0.0, -3.814697265625e-06, -0.0001068115234375, -2.09808349609375e-05, -8.0108642578125e-05, -4.38690185546875e-05, 0.0, -8.20159912109375e-05, -1.9073486328125e-06, -0.0001125335693359375, -1.9073486328125e-06, -0.0005996226682327688, -3.933906555175781e-06, -1.9073486328125e-05, -7.62939453125e-06, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0002269744873046875, 0.0, -5.7220458984375e-06, 0.0, -8.463859558105469e-06, 0.0, -1.71661376953125e-05, -0.00054168701171875, -4.5180182496551424e-05, -4.291525328881107e-06, -0.0023651123046875, -6.4849853515625e-05, -3.4332275390625e-05, -1.9073486328125e-05, -3.4332275390625e-05, -0.00020599365234375, -1.9073486328125e-05, 0.0, -0.0001277923583984375, -1.1920922133867862e-06, -0.0007508496637456119, -3.814697265625e-06, -6.4849853515625e-05, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -5.14984130859375e-05, -0.00011754035949707031, -4.768370445162873e-07, -1.33514404296875e-05, -6.492998123168945, -9.1552734375e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Fireball", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Fireball", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 76, 74, 109]}, {"inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n        player.draw()\n", "score": -6.66935419466509, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Fireball", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template20"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -2.288818359375e-05, -0.000156402587890625, -0.000156402587890625, -3.4332275390625e-05, -3.766986264963634e-05, -5.960462772236497e-07, -3.0517578125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.0003070831298828125, -3.743115303223021e-05, -1.9073486328125e-06, -0.00018310546875, -9.5367431640625e-06, -7.82012939453125e-05, -6.67572021484375e-05, -3.814697265625e-06, -0.000362396240234375, -3.814697265625e-05, -1.1444091796875e-05, -8.392333984375e-05, -1.9073486328125e-06, -2.336486431886442e-05, -7.62939453125e-06, -8.392333984375e-05, -0.00035858154296875, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, 0.0, -0.00015962122415658087, 0.0, -0.0001163482666015625, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -0.00014138221740722656, -1.9073486328125e-06, -0.016984939575195312, 0.0, -0.0007114410400390625, 0.0, -3.814697265625e-06, -0.0001068115234375, -2.09808349609375e-05, -8.0108642578125e-05, -4.38690185546875e-05, 0.0, -8.20159912109375e-05, -1.9073486328125e-06, -0.0001125335693359375, -1.9073486328125e-06, -0.0005996226682327688, -3.933906555175781e-06, -1.9073486328125e-05, -7.62939453125e-06, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0002269744873046875, 0.0, -5.7220458984375e-06, 0.0, -8.463859558105469e-06, 0.0, -1.71661376953125e-05, -0.00054168701171875, -4.5180182496551424e-05, -4.291525328881107e-06, -6.540757179260254, -0.0002002716064453125, -4.76837158203125e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001678466796875, -2.264974000354414e-06, -0.00012909917859360576, -3.814697265625e-06, -0.0001277923583984375, -7.43865966796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -9.775161743164062e-05, -4.768370445162873e-07, -1.9073486328125e-05, -0.00323486328125, -0.000247955322265625, -2.86102294921875e-05, -1.33514404296875e-05, -0.0001201629638671875, -0.002010345458984375, -1.52587890625e-05, -1.9073486328125e-06, -0.07717418670654297, -0.022356629371643066, -2.3841855067985307e-07, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Fireball", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Fireball", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 81, 74, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n", "score": -6.721435972846791, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Fireball", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template20"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -2.288818359375e-05, -0.000156402587890625, -0.000156402587890625, -3.4332275390625e-05, -3.766986264963634e-05, -5.960462772236497e-07, -3.0517578125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.0003070831298828125, -3.743115303223021e-05, -1.9073486328125e-06, -0.00018310546875, -9.5367431640625e-06, -7.82012939453125e-05, -6.67572021484375e-05, -3.814697265625e-06, -0.000362396240234375, -3.814697265625e-05, -1.1444091796875e-05, -8.392333984375e-05, -1.9073486328125e-06, -2.336486431886442e-05, -7.62939453125e-06, -8.392333984375e-05, -0.00035858154296875, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, 0.0, -0.00015962122415658087, 0.0, -0.0001163482666015625, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -0.00014138221740722656, -1.9073486328125e-06, -0.016984939575195312, 0.0, -0.0007114410400390625, 0.0, -3.814697265625e-06, -0.0001068115234375, -2.09808349609375e-05, -8.0108642578125e-05, -4.38690185546875e-05, 0.0, -8.20159912109375e-05, -1.9073486328125e-06, -0.0001125335693359375, -1.9073486328125e-06, -0.0005996226682327688, -3.933906555175781e-06, -1.9073486328125e-05, -7.62939453125e-06, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0002269744873046875, 0.0, -5.7220458984375e-06, 0.0, -8.463859558105469e-06, 0.0, -1.71661376953125e-05, -0.00054168701171875, -4.5180182496551424e-05, -4.291525328881107e-06, -0.0023651123046875, -6.4849853515625e-05, -3.4332275390625e-05, -1.9073486328125e-05, -3.4332275390625e-05, -0.00020599365234375, -1.9073486328125e-05, 0.0, -0.0001277923583984375, -1.1920922133867862e-06, -0.0007508496637456119, -3.814697265625e-06, -6.4849853515625e-05, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -5.14984130859375e-05, -0.00011754035949707031, -4.768370445162873e-07, -1.33514404296875e-05, -6.69503116607666, -8.20159912109375e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Fireball", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Fireball", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 109]}, {"inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damagedamage(player.effective_spell_damage(6), self)\n", "score": -7.481423944999676, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Fireball", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template20"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damagedamage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -2.288818359375e-05, -0.000156402587890625, -0.000156402587890625, -3.4332275390625e-05, -3.766986264963634e-05, -5.960462772236497e-07, -3.0517578125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.0003070831298828125, -3.743115303223021e-05, -1.9073486328125e-06, -0.00018310546875, -9.5367431640625e-06, -7.82012939453125e-05, -6.67572021484375e-05, -3.814697265625e-06, -0.000362396240234375, -3.814697265625e-05, -1.1444091796875e-05, -8.392333984375e-05, -1.9073486328125e-06, -2.336486431886442e-05, -7.62939453125e-06, -8.392333984375e-05, -0.00035858154296875, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, 0.0, -0.00015962122415658087, 0.0, -0.0001163482666015625, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -0.00014138221740722656, -1.9073486328125e-06, -0.016984939575195312, 0.0, -0.0007114410400390625, 0.0, -3.814697265625e-06, -0.0001068115234375, -2.09808349609375e-05, -8.0108642578125e-05, -4.38690185546875e-05, 0.0, -8.20159912109375e-05, -1.9073486328125e-06, -0.0001125335693359375, -1.9073486328125e-06, -0.0005996226682327688, -3.933906555175781e-06, -1.9073486328125e-05, -7.62939453125e-06, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0002269744873046875, 0.0, -5.7220458984375e-06, 0.0, -8.463859558105469e-06, 0.0, -1.71661376953125e-05, -0.00054168701171875, -4.5180182496551424e-05, -4.291525328881107e-06, -0.0023651123046875, -6.4849853515625e-05, -3.4332275390625e-05, -1.9073486328125e-05, -3.4332275390625e-05, -0.00020599365234375, -1.9073486328125e-05, 0.0, -0.0001277923583984375, -1.1920922133867862e-06, -7.451115131378174, -0.000993104767985642, -7.62939453125e-06, -3.62396240234375e-05, -8.96453857421875e-05, -1.9073486328125e-06, 0.0, -6.103515625e-05, -9.238719940185547e-05, -4.768370445162873e-07, -2.47955322265625e-05, -0.0035533905029296875, -0.0001983642578125, 0.0], "choice_history": [93, 145, 230, 101, 125, "Fireball", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Fireball", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 81, 74, 109]}, {"inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(5), self)\n", "score": -7.595742651618764, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Fireball", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template20"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -2.288818359375e-05, -0.000156402587890625, -0.000156402587890625, -3.4332275390625e-05, -3.766986264963634e-05, -5.960462772236497e-07, -3.0517578125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.0003070831298828125, -3.743115303223021e-05, -1.9073486328125e-06, -0.00018310546875, -9.5367431640625e-06, -7.82012939453125e-05, -6.67572021484375e-05, -3.814697265625e-06, -0.000362396240234375, -3.814697265625e-05, -1.1444091796875e-05, -8.392333984375e-05, -1.9073486328125e-06, -2.336486431886442e-05, -7.62939453125e-06, -8.392333984375e-05, -0.00035858154296875, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, 0.0, -0.00015962122415658087, 0.0, -0.0001163482666015625, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -0.00014138221740722656, -1.9073486328125e-06, -0.016984939575195312, 0.0, -0.0007114410400390625, 0.0, -3.814697265625e-06, -0.0001068115234375, -2.09808349609375e-05, -8.0108642578125e-05, -4.38690185546875e-05, 0.0, -8.20159912109375e-05, -1.9073486328125e-06, -0.0001125335693359375, -1.9073486328125e-06, -0.0005996226682327688, -3.933906555175781e-06, -1.9073486328125e-05, -7.62939453125e-06, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0002269744873046875, 0.0, -5.7220458984375e-06, 0.0, -8.463859558105469e-06, 0.0, -1.71661376953125e-05, -0.00054168701171875, -4.5180182496551424e-05, -4.291525328881107e-06, -0.0023651123046875, -6.4849853515625e-05, -3.4332275390625e-05, -1.9073486328125e-05, -3.4332275390625e-05, -0.00020599365234375, -1.9073486328125e-05, 0.0, -0.0001277923583984375, -1.1920922133867862e-06, -0.0007508496637456119, -3.814697265625e-06, -6.4849853515625e-05, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -5.14984130859375e-05, -0.00011754035949707031, -4.768370445162873e-07, -1.33514404296875e-05, -7.569110870361328, -0.0003070831298828125, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Fireball", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Fireball", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 109]}, {"inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, combo=Battlecry(Damage(6), HeroSelector()))\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -7.959681431898389, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Fireball", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template20"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template5"}], "_type": "Call"}, "_type": "keyword", "arg": "combo"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -2.288818359375e-05, -0.000156402587890625, -0.000156402587890625, -3.4332275390625e-05, -3.766986264963634e-05, -5.960462772236497e-07, -3.0517578125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.0003070831298828125, -3.743115303223021e-05, -1.9073486328125e-06, -0.00018310546875, -9.5367431640625e-06, -7.82012939453125e-05, -6.67572021484375e-05, -3.814697265625e-06, -0.000362396240234375, -3.814697265625e-05, -1.1444091796875e-05, -8.392333984375e-05, -1.9073486328125e-06, -2.336486431886442e-05, -7.62939453125e-06, -8.392333984375e-05, -0.00035858154296875, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, 0.0, -0.00015962122415658087, 0.0, -0.0001163482666015625, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -0.00014138221740722656, -1.9073486328125e-06, -0.016984939575195312, 0.0, -7.70359992980957, 0.0, -0.15577983856201172, -1.9073486328125e-05, -0.0035686492919921875, -2.6702880859375e-05, -0.0003376007080078125, -0.000102996826171875, -3.4332275390625e-05, -1.9073486328125e-06, -4.148481821175665e-05, -2.503394853192731e-06, -1.9073486328125e-06, -0.04483509063720703, -0.0017223358154296875, -5.7220458984375e-06, -0.02249729633331299, -0.0001468658447265625, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -0.000217437744140625, 0.0, -1.9073486328125e-06, 0.0, -9.72747802734375e-05, 0.0, -9.5367431640625e-06, 0.0, -6.318092346191406e-06, 0.0, -1.52587890625e-05, -9.918212890625e-05, -8.392201561946422e-05, -6.198863957251888e-06, -0.0009021759033203125, -0.0004215240478515625, -2.47955322265625e-05, -1.52587890625e-05, -2.86102294921875e-05, -0.0002040863037109375, -2.09808349609375e-05, 0.0, -0.0001220703125, -1.5497195136049413e-06, -0.0005975195090286434, -3.814697265625e-06, -7.05718994140625e-05, -6.67572021484375e-05, -5.7220458984375e-06, 0.0, -5.14984130859375e-05, -0.00011754035949707031, -5.960462772236497e-07, -1.33514404296875e-05, -0.0037078857421875, -0.0003070831298828125, 0.0], "choice_history": [93, 145, 230, 101, 125, "Fireball", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Fireball", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "combo", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 81, 87, 193, "Hero", "Selector", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 81, 74, 109]}, {"inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target,\n            hero=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -8.12083736012113, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Fireball", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template20"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "hero"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -2.288818359375e-05, -0.000156402587890625, -0.000156402587890625, -3.4332275390625e-05, -3.766986264963634e-05, -5.960462772236497e-07, -3.0517578125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.0003070831298828125, -3.743115303223021e-05, -1.9073486328125e-06, -0.00018310546875, -9.5367431640625e-06, -7.82012939453125e-05, -6.67572021484375e-05, -3.814697265625e-06, -0.000362396240234375, -3.814697265625e-05, -1.1444091796875e-05, -8.392333984375e-05, -1.9073486328125e-06, -2.336486431886442e-05, -7.62939453125e-06, -8.392333984375e-05, -0.00035858154296875, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, 0.0, -0.00015962122415658087, 0.0, -0.0001163482666015625, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -0.00014138221740722656, -1.9073486328125e-06, -4.089686393737793, 0.0, -0.0001354217529296875, 0.0, -1.9073486328125e-06, -8.96453857421875e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.0001087188720703125, 0.0, -0.0001735687255859375, 0.0, -0.00022900104522705078, -1.9073486328125e-06, -0.0011793369194492698, -2.2649765014648438e-06, -5.7220458984375e-06, -3.9986515045166016, -0.0001354217529296875, -0.015287399291992188, -1.9073486328125e-06, -0.0002288818359375, 0.0, -0.0002803802490234375, 0.0, -0.0006542205810546875, -3.814697265625e-06, -0.0006754398345947266, 0.0, -0.0011008972069248557, -2.622604142743512e-06, -2.6702880859375e-05, -5.7220458984375e-06, -6.103515625e-05, -1.9073486328125e-06, 0.0, 0.0, -0.000316619873046875, 0.0, -5.7220458984375e-06, 0.0, -1.060962586052483e-05, 0.0, -9.5367431640625e-06, -0.0003414154052734375, -3.8266116462182254e-05, -3.576272320060525e-06, -0.002857208251953125, -1.9073486328125e-05, -4.38690185546875e-05, -2.288818359375e-05, -3.4332275390625e-05, -8.20159912109375e-05, -1.52587890625e-05, 0.0, -0.0001125335693359375, -9.536738616588991e-07, -0.0010875778971239924, -3.814697265625e-06, -6.103515625e-05, -6.4849853515625e-05, -3.814697265625e-06, 0.0, -5.14984130859375e-05, -0.00011944770812988281, -4.768370445162873e-07, -1.52587890625e-05, -0.0037479400634765625, -0.000286102294921875, 0.0], "choice_history": [93, 145, 230, 101, 125, "Fireball", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Fireball", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "hero", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 81, 74, 109]}, {"inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -8.17559499803184, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Fireball", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template20"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -2.288818359375e-05, -0.000156402587890625, -0.000156402587890625, -3.4332275390625e-05, -3.766986264963634e-05, -5.960462772236497e-07, -3.0517578125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.0003070831298828125, -3.743115303223021e-05, -1.9073486328125e-06, -0.00018310546875, -9.5367431640625e-06, -7.82012939453125e-05, -6.67572021484375e-05, -3.814697265625e-06, -8.057079315185547, -3.814697265625e-06, -2.6702880859375e-05, -3.24249267578125e-05, -3.814697265625e-06, -1.77621805050876e-05, -9.5367431640625e-06, -4.00543212890625e-05, -0.0004024505615234375, 0.0, -5.7220458984375e-06, 0.0, -0.000110626220703125, 0.0, -0.00010764596663648263, -1.9073486328125e-06, -0.000179290771484375, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -0.00013554096221923828, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001430511474609375, -1.9073486328125e-06, 0.0, 0.0, -0.0001239776611328125, 0.0, -1.9073486328125e-06, 0.0, -8.940695806813892e-06, 0.0, -2.47955322265625e-05, -0.00066375732421875, -4.970996087649837e-05, -4.768360213347478e-06, -0.034317970275878906, -3.814697265625e-05, -0.07526874542236328, -8.392333984375e-05, -1.1444091796875e-05, -0.0003757476806640625, -2.288818359375e-05, 0.0, -0.0004100799560546875, -2.264974000354414e-06, -0.0003972786944359541, -3.814697265625e-06, -5.7220458984375e-05, -7.05718994140625e-05, -5.7220458984375e-06, 0.0, -6.4849853515625e-05, -0.00011777877807617188, -7.152555099310121e-07, -1.52587890625e-05, -0.003528594970703125, -0.0003490447998046875, 0.0], "choice_history": [93, 145, 230, 101, 125, "Fireball", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Fireball", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 81, 74, 109]}, {"inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target,\n            buffs=[Buff(Frozen())])\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -8.181335823354623, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Fireball", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template20"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"_type": "List", "elts": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Frozen", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "buffs"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -2.288818359375e-05, -0.000156402587890625, -0.000156402587890625, -3.4332275390625e-05, -3.766986264963634e-05, -5.960462772236497e-07, -3.0517578125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.0003070831298828125, -3.743115303223021e-05, -1.9073486328125e-06, -0.00018310546875, -9.5367431640625e-06, -7.82012939453125e-05, -6.67572021484375e-05, -3.814697265625e-06, -0.000362396240234375, -3.814697265625e-05, -1.1444091796875e-05, -8.392333984375e-05, -1.9073486328125e-06, -2.336486431886442e-05, -7.62939453125e-06, -8.392333984375e-05, -0.00035858154296875, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, 0.0, -0.00015962122415658087, 0.0, -0.0001163482666015625, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -0.00014138221740722656, -1.9073486328125e-06, -4.089686393737793, 0.0, -0.0001354217529296875, 0.0, -1.9073486328125e-06, -8.96453857421875e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.0001087188720703125, 0.0, -0.0001735687255859375, 0.0, -0.00022900104522705078, -1.9073486328125e-06, -0.0011793369194492698, -2.2649765014648438e-06, -5.7220458984375e-06, -1.6170778274536133, 0.0, -0.04143333435058594, -0.014537811279296875, -0.000293731689453125, -0.00017547607421875, -5.91278076171875e-05, -0.04414653778076172, 0.0, -0.0011873245239257812, -1.1920928244535389e-07, -0.0057621002197265625, -1.4043197631835938, -1.1444091796875e-05, -0.9379093647003174, -4.8160363803617656e-05, -0.0003604888916015625, -0.00103759765625, -1.71661376953125e-05, -0.01091766357421875, 0.0, 0.0, 0.0, -0.0001506805419921875, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -6.079673767089844e-06, 0.0, -1.9073486328125e-05, -0.0001430511474609375, -3.8146827137097716e-05, -5.960446742392378e-06, -0.001743316650390625, -0.000102996826171875, -4.00543212890625e-05, -1.9073486328125e-05, -2.47955322265625e-05, -0.0002155303955078125, -2.288818359375e-05, 0.0, -0.000125885009765625, -1.5497195136049413e-06, -0.0006576961022801697, -3.814697265625e-06, -6.29425048828125e-05, -6.103515625e-05, -5.7220458984375e-06, 0.0, -5.340576171875e-05, -0.0001176595687866211, -5.960462772236497e-07, -1.33514404296875e-05, -0.0036830902099609375, -0.0003337860107421875, 0.0], "choice_history": [93, 145, 230, 101, 125, "Fireball", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Fireball", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "buffs", "<EOS>", 21, 141, 217, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Frozen", "<EOS>", 71, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 81, 74, 109]}, {"inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target,\n            buffs=[Buff(ManaChange(Count(DeadMinionSelector(players=\n            BothPlayer())), -1))])\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -8.258281015339087, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Fireball", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template20"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"_type": "List", "elts": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"func": {"id": "ManaChange", "_type": "Name"}, "args": [{"func": {"id": "Count", "_type": "Name"}, "args": [{"func": {"id": "DeadMinionSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}]}], "_type": "Call"}, {"_type": "UnaryOp", "operand": {"_type": "Template14"}, "op": {"_type": "USub"}}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "buffs"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -2.288818359375e-05, -0.000156402587890625, -0.000156402587890625, -3.4332275390625e-05, -3.766986264963634e-05, -5.960462772236497e-07, -3.0517578125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.0003070831298828125, -3.743115303223021e-05, -1.9073486328125e-06, -0.00018310546875, -9.5367431640625e-06, -7.82012939453125e-05, -6.67572021484375e-05, -3.814697265625e-06, -0.000362396240234375, -3.814697265625e-05, -1.1444091796875e-05, -8.392333984375e-05, -1.9073486328125e-06, -2.336486431886442e-05, -7.62939453125e-06, -8.392333984375e-05, -0.00035858154296875, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, 0.0, -0.00015962122415658087, 0.0, -0.0001163482666015625, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -0.00014138221740722656, -1.9073486328125e-06, -4.089686393737793, 0.0, -0.0001354217529296875, 0.0, -1.9073486328125e-06, -8.96453857421875e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.0001087188720703125, 0.0, -0.0001735687255859375, 0.0, -0.00022900104522705078, -1.9073486328125e-06, -0.0011793369194492698, -2.2649765014648438e-06, -5.7220458984375e-06, -1.6170778274536133, 0.0, -0.04143333435058594, -0.014537811279296875, -0.000293731689453125, -0.00017547607421875, -5.91278076171875e-05, -0.04414653778076172, 0.0, -0.0011873245239257812, -1.1920928244535389e-07, -0.0057621002197265625, -0.2818450927734375, -0.0009059906005859375, -0.00302886962890625, 0.0, -0.09977138042449951, -0.01767265796661377, -0.012986183166503906, -0.06767463684082031, -0.020392417907714844, -0.0041370391845703125, -0.000545501708984375, -1.9073486328125e-06, -0.4958641529083252, -0.0004820823378395289, -8.96453857421875e-05, -0.7013273239135742, -0.0021839141845703125, -8.7738037109375e-05, 0.0, -0.32890236377716064, -0.09185099601745605, -0.003139495849609375, -0.0009021759033203125, -0.2540140151977539, -1.9073486328125e-05, -0.002086639404296875, 0.0, -8.20159912109375e-05, -3.814697265625e-06, -0.0003281815443187952, -0.00011086463928222656, 0.0, -0.0004062652587890625, -0.0027790069580078125, -0.000568389892578125, -0.007134437561035156, -0.0021572113037109375, -0.01389312744140625, -1.33514404296875e-05, -0.013428688049316406, 0.0, -1.9073486328125e-06, 0.0, -0.0002307891845703125, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.5974044799804688e-05, 0.0, -3.814697265625e-06, -5.91278076171875e-05, -6.687568384222686e-05, -1.2874520507466514e-05, -0.0010280609130859375, -0.0017185211181640625, -1.71661376953125e-05, -1.71661376953125e-05, -2.86102294921875e-05, -0.000141143798828125, -2.288818359375e-05, 0.0, -8.7738037109375e-05, -1.6689286894688848e-06, -0.0006585390074178576, -3.814697265625e-06, -6.4849853515625e-05, -7.2479248046875e-05, -5.7220458984375e-06, 0.0, -5.14984130859375e-05, -0.00011754035949707031, -5.960462772236497e-07, -1.52587890625e-05, -0.003627777099609375, -0.000335693359375, 0.0], "choice_history": [93, 145, 230, 101, 125, "Fireball", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Fireball", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "buffs", "<EOS>", 21, 141, 217, 58, 123, 23, 146, "Buff", "<EOS>", 216, 58, 123, 23, 146, "Mana", "Change", "<EOS>", 217, 58, 123, 23, 146, "Count", "<EOS>", 216, 58, 122, 23, 146, "Dead", "Minion", "Selector", "<EOS>", 224, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 92, 200, 112, 28, 71, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 81, 74, 109]}, {"inferred_code": "super().use(player, game)\n", "score": -15.977124214172363, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -2.288818359375e-05, -0.000156402587890625, -11.834954261779785, -4.1419830322265625], "choice_history": [93, 145, 230, 108, 109]}, {"inferred_code": "", "score": -17.72406578063965, "model_output": {"_type": "Module", "body": []}, "score_history": [-7.62939453125e-06, -2.288818359375e-05, -17.724035263061523], "choice_history": [93, 145, 228]}], "index": 32}
{"beams": [{"inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n", "score": -0.11737097303181798, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Flamestrike", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Flamestrike"}, {"_type": "Template24"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template20"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -5.340576171875e-05, -0.00014495849609375, -0.000812530517578125, -0.0001468658447265625, -6.866356852697209e-05, -4.768370445162873e-07, -4.9591064453125e-05, -4.9591064453125e-05, -0.0004119873046875, -1.71661376953125e-05, -1.33514404296875e-05, -3.7550900742644444e-05, -1.9073486328125e-06, -0.0006313323974609375, -2.288818359375e-05, -0.000247955322265625, -0.0010776519775390625, 0.0, -0.0001201629638671875, -0.00324249267578125, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -1.7523765563964844e-05, -1.7762184143066406e-05, -0.0004482269287109375, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.000244140625, 0.0, -7.092952728271484e-05, -5.7220458984375e-06, -0.000194549560546875, -2.288818359375e-05, -1.9073486328125e-06, -0.000148773193359375, -1.9073486328125e-06, -5.7220458984375e-06, -9.918212890625e-05, -0.00077056884765625, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, -2.09808349609375e-05, -0.000751495361328125, -1.1920928244535389e-07, -0.009840011596679688, -0.001422882080078125, -0.0002288818359375, -5.53131103515625e-05, -9.72747802734375e-05, -0.06383800506591797, -0.000347137451171875, -1.52587890625e-05, 0.0, -8.58306884765625e-05, -3.814697265625e-06, -0.0012359619140625, -1.71661376953125e-05, -0.000186920166015625, 0.0, -7.82012939453125e-05, -0.00017547607421875, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0002593994140625, 0.0, -0.0018310546875, 0.0, -0.0004215240478515625, -2.09808349609375e-05, -0.00017547607421875, -0.00022125244140625, -5.7220458984375e-06, -1.71661376953125e-05, -0.0004024505615234375, -9.5367431640625e-06, 0.0, -0.000301361083984375, -0.0008313765283674002, -1.9073486328125e-06, -3.814697265625e-06, -4.76837158203125e-05, -2.6702880859375e-05, -5.91278076171875e-05, 0.0, -4.1961669921875e-05, -0.00017762184143066406, 0.0, -3.4332275390625e-05, -0.024688720703125, -2.86102294921875e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Flamestrike", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Flamestrike", "<EOS>", 79, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 76, 74, 109]}, {"inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(4), self)\n", "score": -2.937795420566424, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Flamestrike", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Flamestrike"}, {"_type": "Template24"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template20"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -5.340576171875e-05, -0.00014495849609375, -0.000812530517578125, -0.0001468658447265625, -6.866356852697209e-05, -4.768370445162873e-07, -4.9591064453125e-05, -4.9591064453125e-05, -0.0004119873046875, -1.71661376953125e-05, -1.33514404296875e-05, -3.7550900742644444e-05, -1.9073486328125e-06, -0.0006313323974609375, -2.288818359375e-05, -0.000247955322265625, -0.0010776519775390625, 0.0, -0.0001201629638671875, -0.00324249267578125, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -1.7523765563964844e-05, -1.7762184143066406e-05, -0.0004482269287109375, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.000244140625, 0.0, -7.092952728271484e-05, -5.7220458984375e-06, -0.000194549560546875, -2.288818359375e-05, -1.9073486328125e-06, -0.000148773193359375, -1.9073486328125e-06, -5.7220458984375e-06, -9.918212890625e-05, -0.00077056884765625, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, -2.09808349609375e-05, -0.000751495361328125, -1.1920928244535389e-07, -0.009840011596679688, -0.001422882080078125, -0.0002288818359375, -5.53131103515625e-05, -9.72747802734375e-05, -2.8340816497802734, 0.0, -0.0009593963623046875, 0.0, -0.0001354217529296875, -1.9073486328125e-06, -0.011645317077636719, 0.0, -0.03549396991729736, 0.0, -0.0021610260009765625, -1.9073486328125e-06, -0.00019073486328125, -0.0001468658447265625, -5.7220458984375e-06, -4.9591064453125e-05, -0.0024662017822265625, -7.62939453125e-06, 0.0, -0.0002346038818359375, -0.001999995205551386, -3.814697265625e-06, -1.9073486328125e-06, -4.57763671875e-05, -2.6702880859375e-05, -6.103515625e-05, 0.0, -4.76837158203125e-05, -0.00012409687042236328, 0.0, -3.24249267578125e-05, -0.026109695434570312, -2.6702880859375e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Flamestrike", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Flamestrike", "<EOS>", 79, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 41, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 76, 74, 109]}, {"inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(6), self)\n", "score": -3.951087365548908, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Flamestrike", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Flamestrike"}, {"_type": "Template24"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -5.340576171875e-05, -0.00014495849609375, -0.000812530517578125, -0.0001468658447265625, -6.866356852697209e-05, -4.768370445162873e-07, -4.9591064453125e-05, -4.9591064453125e-05, -0.0004119873046875, -1.71661376953125e-05, -1.33514404296875e-05, -3.7550900742644444e-05, -1.9073486328125e-06, -0.0006313323974609375, -2.288818359375e-05, -0.000247955322265625, -0.0010776519775390625, 0.0, -0.0001201629638671875, -0.00324249267578125, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -1.7523765563964844e-05, -1.7762184143066406e-05, -0.0004482269287109375, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.000244140625, 0.0, -7.092952728271484e-05, -5.7220458984375e-06, -0.000194549560546875, -2.288818359375e-05, -1.9073486328125e-06, -0.000148773193359375, -1.9073486328125e-06, -5.7220458984375e-06, -9.918212890625e-05, -0.00077056884765625, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, -2.09808349609375e-05, -0.000751495361328125, -1.1920928244535389e-07, -0.009840011596679688, -0.001422882080078125, -0.0002288818359375, -5.53131103515625e-05, -9.72747802734375e-05, -0.06383800506591797, -0.000347137451171875, -1.52587890625e-05, 0.0, -8.58306884765625e-05, -3.814697265625e-06, -0.0012359619140625, -1.71661376953125e-05, -0.000186920166015625, 0.0, -7.82012939453125e-05, -0.00017547607421875, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0002593994140625, 0.0, -0.0018310546875, 0.0, -0.0004215240478515625, -2.09808349609375e-05, -0.00017547607421875, -0.00022125244140625, -5.7220458984375e-06, -1.71661376953125e-05, -0.0004024505615234375, -9.5367431640625e-06, 0.0, -0.000301361083984375, -0.0008313765283674002, -1.9073486328125e-06, -3.814697265625e-06, -4.76837158203125e-05, -2.6702880859375e-05, -5.91278076171875e-05, 0.0, -4.1961669921875e-05, -0.00017762184143066406, 0.0, -3.4332275390625e-05, -3.8584280014038086, -5.7220458984375e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Flamestrike", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Flamestrike", "<EOS>", 79, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 81, 74, 109]}, {"inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(4), self)\n", "score": -6.061709233583393, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Flamestrike", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Flamestrike"}, {"_type": "Template24"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "extend", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template20"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"id": "targets", "_type": "Name"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -5.340576171875e-05, -0.00014495849609375, -0.000812530517578125, -0.0001468658447265625, -6.866356852697209e-05, -4.768370445162873e-07, -4.9591064453125e-05, -4.9591064453125e-05, -0.0004119873046875, -1.71661376953125e-05, -1.33514404296875e-05, -3.7550900742644444e-05, -1.9073486328125e-06, -0.0006313323974609375, -2.288818359375e-05, -0.000247955322265625, -0.0010776519775390625, 0.0, -0.0001201629638671875, -0.00324249267578125, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -1.7523765563964844e-05, -1.7762184143066406e-05, -0.0004482269287109375, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.000244140625, 0.0, -7.092952728271484e-05, -5.7220458984375e-06, -0.000194549560546875, -2.288818359375e-05, -1.9073486328125e-06, -0.000148773193359375, -1.9073486328125e-06, -5.7220458984375e-06, -9.918212890625e-05, -0.00077056884765625, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, -2.09808349609375e-05, -0.000751495361328125, -1.1920928244535389e-07, -5.797920227050781, -0.0002193450927734375, -0.000469207763671875, -0.0006580352783203125, -2.86102294921875e-05, -4.57763671875e-05, -0.000431060791015625, -0.00025105453096330166, -2.3841855067985307e-07, -0.000274658203125, -0.00023651123046875, -0.0001239776611328125, 0.0, -2.86102294921875e-05, 0.0, -0.00044345855712890625, -2.288818359375e-05, -0.00015652179718017578, -1.9073486328125e-06, -0.000274658203125, -0.00016021728515625, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0003604888916015625, -1.9073486328125e-06, -0.0006476640701293945, 0.0, -0.0001015663001453504, -3.814697265625e-06, -3.4332275390625e-05, -0.0001544952392578125, -4.57763671875e-05, -0.000209808349609375, -1.1444091796875e-05, -1.9073486328125e-06, -0.003631591796875, -1.9073486328125e-06, -0.0005910259205847979, -1.7881377516459906e-06, -0.008575880900025368, -2.384185791015625e-05, -3.814697265625e-06, -0.0011806488037109375, 0.0, -0.0076427459716796875, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.00013554096221923828, -1.52587890625e-05, -0.12150943279266357, -0.000118255615234375, -0.004384040832519531, -0.0005590915679931641, -0.025135040283203125, -0.000217437744140625, -0.0002460479736328125, -0.0049839019775390625, -1.9073486328125e-05, -0.00033843517303466797, -4.172325134277344e-06, -6.103515625e-05, -0.029186248779296875, -1.9073486328125e-06, -1.9073486328125e-06, -5.53131103515625e-05, -1.1444091796875e-05, 0.0, -5.14984130859375e-05, -0.0004893533186987042, -1.9073486328125e-06, -3.814697265625e-06, -2.86102294921875e-05, -3.62396240234375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -4.57763671875e-05, -0.00018072128295898438, 0.0, -1.33514404296875e-05, -0.03866863250732422, -4.38690185546875e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Flamestrike", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Flamestrike", "<EOS>", 79, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "extend", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 103, 129, 41, 23, 146, "targets", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 76, 74, 109]}, {"inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        minion.damage(player.effective_spell_damage(4), self)\n", "score": -6.148221163002177, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Flamestrike", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template20"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}, {"_type": "Template13_stmt_seq"}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -5.340576171875e-05, -0.00014495849609375, -0.000812530517578125, -0.0001468658447265625, -6.866356852697209e-05, -4.768370445162873e-07, -4.9591064453125e-05, -4.9591064453125e-05, -0.0004119873046875, -1.71661376953125e-05, -1.33514404296875e-05, -3.7550900742644444e-05, -1.9073486328125e-06, -0.0006313323974609375, -2.288818359375e-05, -0.000247955322265625, -0.0010776519775390625, 0.0, -0.0001201629638671875, -5.76271915435791, -0.0005092620849609375, -0.08640861511230469, -0.011670856736600399, -4.649161837733118e-06, -0.0056209564208984375, -8.0108642578125e-05, -0.000881195068359375, -7.2479248046875e-05, -3.814697265625e-06, -7.82012939453125e-05, -0.0003248453140258789, 0.0, -2.6702880859375e-05, -0.013671875, -4.38690185546875e-05, -0.2621774673461914, 0.0], "choice_history": [93, 145, 230, 101, 125, "Flamestrike", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 76, 74, 109, 109]}, {"inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n        game.other_player.draw.<UNK>()\n", "score": -6.378211598766818, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Flamestrike", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Flamestrike"}, {"_type": "Template24"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template20"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "draw", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -5.340576171875e-05, -0.00014495849609375, -0.000812530517578125, -0.0001468658447265625, -6.866356852697209e-05, -4.768370445162873e-07, -4.9591064453125e-05, -4.9591064453125e-05, -0.0004119873046875, -1.71661376953125e-05, -1.33514404296875e-05, -3.7550900742644444e-05, -1.9073486328125e-06, -0.0006313323974609375, -2.288818359375e-05, -0.000247955322265625, -0.0010776519775390625, 0.0, -0.0001201629638671875, -0.00324249267578125, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -1.7523765563964844e-05, -1.7762184143066406e-05, -0.0004482269287109375, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.000244140625, 0.0, -7.092952728271484e-05, -5.7220458984375e-06, -0.000194549560546875, -2.288818359375e-05, -1.9073486328125e-06, -0.000148773193359375, -1.9073486328125e-06, -5.7220458984375e-06, -9.918212890625e-05, -0.00077056884765625, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, -2.09808349609375e-05, -0.000751495361328125, -1.1920928244535389e-07, -5.17181396484375, -7.2479248046875e-05, -0.007390022277832031, -0.0012073516845703125, -0.0002956390380859375, -0.00119781494140625, -0.0002727508544921875, -6.29425048828125e-05, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -0.0006351470947265625, -1.71661376953125e-05, -0.000324249267578125, 0.0, -8.392333984375e-05, -0.0001373291015625, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0002593994140625, 0.0, -0.0015878677368164062, 0.0, -0.0004119873046875, -2.288818359375e-05, -0.000125885009765625, -0.0001239776611328125, -5.7220458984375e-06, -1.9073486328125e-05, -0.0003604888916015625, -1.1444091796875e-05, 0.0, -0.0002880096435546875, -0.0007074945606291294, -3.814697265625e-06, -3.814697265625e-06, -4.1961669921875e-05, -2.47955322265625e-05, -6.4849853515625e-05, 0.0, -4.38690185546875e-05, -0.00019860267639160156, 0.0, -3.24249267578125e-05, -0.023305892944335938, -2.86102294921875e-05, -0.045932769775390625, -5.7220458984375e-06, -0.000171661376953125, -0.04273033142089844, -1.9073486328125e-06, 0.0, -0.04491615295410156, 0.0, -0.36765289306640625, -9.5367431640625e-06, -0.0007781982421875, 0.0, -0.00037097930908203125, 0.0, -0.0032749176025390625, -1.9073486328125e-06, -0.6486890316009521, -5.7220458984375e-06, -0.002130503300577402, -0.0001481771469116211, -4.1961669921875e-05], "choice_history": [93, 145, 230, 101, 125, "Flamestrike", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Flamestrike", "<EOS>", 79, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 76, 74, 102, 128, 18, 121, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>", "<UNK>", "<EOS>", 109]}, {"inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(6), self)\n", "score": -6.703151484409197, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Flamestrike", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Flamestrike"}, {"_type": "Template24"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -5.340576171875e-05, -0.00014495849609375, -0.000812530517578125, -0.0001468658447265625, -6.866356852697209e-05, -4.768370445162873e-07, -4.9591064453125e-05, -4.9591064453125e-05, -0.0004119873046875, -1.71661376953125e-05, -1.33514404296875e-05, -3.7550900742644444e-05, -1.9073486328125e-06, -0.0006313323974609375, -2.288818359375e-05, -0.000247955322265625, -0.0010776519775390625, 0.0, -0.0001201629638671875, -0.00324249267578125, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -1.7523765563964844e-05, -1.7762184143066406e-05, -0.0004482269287109375, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.000244140625, 0.0, -7.092952728271484e-05, -5.7220458984375e-06, -0.000194549560546875, -2.288818359375e-05, -1.9073486328125e-06, -0.000148773193359375, -1.9073486328125e-06, -5.7220458984375e-06, -9.918212890625e-05, -0.00077056884765625, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, -2.09808349609375e-05, -0.000751495361328125, -1.1920928244535389e-07, -0.009840011596679688, -0.001422882080078125, -0.0002288818359375, -5.53131103515625e-05, -9.72747802734375e-05, -2.8340816497802734, 0.0, -0.0009593963623046875, 0.0, -0.0001354217529296875, -1.9073486328125e-06, -0.011645317077636719, 0.0, -0.03549396991729736, 0.0, -0.0021610260009765625, -1.9073486328125e-06, -0.00019073486328125, -0.0001468658447265625, -5.7220458984375e-06, -4.9591064453125e-05, -0.0024662017822265625, -7.62939453125e-06, 0.0, -0.0002346038818359375, -0.001999995205551386, -3.814697265625e-06, -1.9073486328125e-06, -4.57763671875e-05, -2.6702880859375e-05, -6.103515625e-05, 0.0, -4.76837158203125e-05, -0.00012409687042236328, 0.0, -3.24249267578125e-05, -3.7914867401123047, -5.7220458984375e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Flamestrike", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Flamestrike", "<EOS>", 79, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 41, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 81, 74, 109]}, {"inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in minion:\n            minion.damage(player.effective_spell_damage(4), self)\n", "score": -6.8819404318163535, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Flamestrike", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Flamestrike"}, {"_type": "Template24"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template20"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"_type": "Template30"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -5.340576171875e-05, -0.00014495849609375, -0.000812530517578125, -0.0001468658447265625, -6.866356852697209e-05, -4.768370445162873e-07, -4.9591064453125e-05, -4.9591064453125e-05, -0.0004119873046875, -1.71661376953125e-05, -1.33514404296875e-05, -3.7550900742644444e-05, -1.9073486328125e-06, -0.0006313323974609375, -2.288818359375e-05, -0.000247955322265625, -0.0010776519775390625, 0.0, -0.0001201629638671875, -0.00324249267578125, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -1.7523765563964844e-05, -1.7762184143066406e-05, -0.0004482269287109375, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.000244140625, 0.0, -7.092952728271484e-05, -5.7220458984375e-06, -0.000194549560546875, -2.288818359375e-05, -1.9073486328125e-06, -0.000148773193359375, -1.9073486328125e-06, -5.7220458984375e-06, -9.918212890625e-05, -0.00077056884765625, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, -2.09808349609375e-05, -0.000751495361328125, -1.1920928244535389e-07, -0.009840011596679688, -0.001422882080078125, -0.0002288818359375, -5.53131103515625e-05, -9.72747802734375e-05, -6.28109884262085, -0.016279220581054688, -0.5203962326049805, -0.007863998413085938, -1.9073486328125e-06, -1.71661376953125e-05, -1.71661376953125e-05, 0.0, -0.0039653778076171875, -0.005071231164038181, -2.0265579223632812e-06, -3.814697265625e-06, -0.00890350341796875, -1.71661376953125e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0002613067626953125, -0.000263214111328125, 0.0, -4.1961669921875e-05, -0.015951156616210938, -3.24249267578125e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Flamestrike", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Flamestrike", "<EOS>", 79, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 41, 41, 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 76, 74, 109]}, {"inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n", "score": -8.128926156943514, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Flamestrike", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Flamestrike"}, {"_type": "Template24"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -5.340576171875e-05, -0.00014495849609375, -0.000812530517578125, -0.0001468658447265625, -6.866356852697209e-05, -4.768370445162873e-07, -4.9591064453125e-05, -4.9591064453125e-05, -0.0004119873046875, -1.71661376953125e-05, -1.33514404296875e-05, -3.7550900742644444e-05, -1.9073486328125e-06, -0.0006313323974609375, -2.288818359375e-05, -0.000247955322265625, -0.0010776519775390625, 0.0, -0.0001201629638671875, -0.00324249267578125, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -1.7523765563964844e-05, -1.7762184143066406e-05, -0.0004482269287109375, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.000244140625, 0.0, -7.092952728271484e-05, -5.7220458984375e-06, -0.000194549560546875, -2.288818359375e-05, -1.9073486328125e-06, -0.000148773193359375, -1.9073486328125e-06, -5.7220458984375e-06, -9.918212890625e-05, -0.00077056884765625, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, -2.09808349609375e-05, -0.000751495361328125, -1.1920928244535389e-07, -7.729389667510986, -0.27803707122802734, -0.11141014099121094], "choice_history": [93, 145, 230, 101, 125, "Flamestrike", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Flamestrike", "<EOS>", 79, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 108, 109]}, {"inferred_code": "game.other_player.hero.damage(player.effective_spell_damage(4), self)\n", "score": -9.337332126327965, "model_output": {"_type": "Module", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template20"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -5.340576171875e-05, -0.00014495849609375, -7.496509552001953, -0.04059314727783203, -0.001003265380859375, -0.01894378662109375, -0.0020847320556640625, -0.00017547607421875, -0.4298086166381836, -9.5367431640625e-06, -0.042140960693359375, -1.9073486328125e-06, -0.0010547637939453125, -1.9073486328125e-05, -0.018597006797790527, 0.0, -0.0013778209686279297, 0.0, -0.3979533910751343, -0.00011944455764023587, -0.8709062337875366, 0.0, -1.9073486328125e-06, -0.00017547607421875, -0.0001068115234375, -5.14984130859375e-05, 0.0, -0.00026702880859375, -0.00022912025451660156, 0.0, -4.00543212890625e-05, -0.014925003051757812, -1.9073486328125e-05, 0.0], "choice_history": [93, 145, 230, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 76, 74, 109]}, {"inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__.damage(player.effective_spell_damage(4), self)\n", "score": -9.51120637419433, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Flamestrike", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template4"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template20"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}, {"_type": "Template13_stmt_seq"}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -5.340576171875e-05, -0.00014495849609375, -0.000812530517578125, -0.0001468658447265625, -6.866356852697209e-05, -4.768370445162873e-07, -4.9591064453125e-05, -4.9591064453125e-05, -0.0004119873046875, -1.71661376953125e-05, -1.33514404296875e-05, -3.7550900742644444e-05, -1.9073486328125e-06, -0.0006313323974609375, -2.288818359375e-05, -0.000247955322265625, -0.0010776519775390625, 0.0, -0.0001201629638671875, -5.76271915435791, -0.0005092620849609375, -3.531137466430664, -0.012744532898068428, -3.862357698380947e-05, -0.017030715942382812, -0.000453948974609375, -0.002445220947265625, -0.0002574920654296875, -3.814697265625e-06, -9.34600830078125e-05, -0.00029730796813964844, 0.0, -3.0517578125e-05, -0.012689590454101562, -4.1961669921875e-05, -0.16678619384765625, 0.0], "choice_history": [93, 145, 230, 101, 125, "Flamestrike", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 15, 116, 50, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 76, 74, 109, 109]}, {"inferred_code": "minion.add_buff(Buff(Frozen()))\n", "score": -9.794377565383911, "model_output": {"_type": "Module", "body": [{"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Frozen", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -5.340576171875e-05, -0.00014495849609375, -7.496509552001953, -0.04059314727783203, -0.001003265380859375, -0.01894378662109375, -0.0020847320556640625, -0.00017547607421875, -1.7173786163330078, -0.2450104057788849, -9.894371032714844e-06, -0.13225173950195312, -0.00188446044921875, -1.33514404296875e-05, -0.0018253326416015625, 0.0, -0.12633419036865234, 0.0, -2.86102294921875e-05, -0.001789093017578125, -7.62939453125e-06, -0.008269518613815308, -4.7326087951660156e-05, 0.0], "choice_history": [93, 145, 230, 102, 128, 18, 123, 15, 116, 41, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Frozen", "<EOS>", 109]}, {"inferred_code": "game.other_player.hero.minions(minion)\n", "score": -10.284919199177239, "model_output": {"_type": "Module", "body": [{"_type": "Expr", "value": {"func": {"attr": "minions", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"_type": "Template30"}], "_type": "Call"}}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -5.340576171875e-05, -0.00014495849609375, -7.496509552001953, -0.04059314727783203, -0.001003265380859375, -0.01894378662109375, -0.0020847320556640625, -0.00017547607421875, -0.4298086166381836, -9.5367431640625e-06, -0.042140960693359375, -1.9073486328125e-06, -0.0010547637939453125, -1.9073486328125e-05, -0.018597006797790527, 0.0, -0.0013778209686279297, 0.0, -0.3979533910751343, -0.00011944455764023587, -0.8299080729484558, -1.9073486328125e-06, -0.011241912841796875, -0.9931497573852539, -7.62939453125e-06], "choice_history": [93, 145, 230, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "minions", "<EOS>", 216, 82, 109]}, {"inferred_code": "super().use(player, game)\n", "score": -12.321709632873535, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -5.340576171875e-05, -0.00014495849609375, -9.611832618713379, -2.7096595764160156], "choice_history": [93, 145, 230, 108, 109]}, {"inferred_code": "", "score": -18.19141960144043, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-05, -5.340576171875e-05, -18.191347122192383], "choice_history": [93, 145, 228]}], "index": 33}
{"beams": [{"inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(1), MinionSelector(\n            Adjacent()))])\n", "score": -0.27612781440757317, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "FlametongueTotem", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template12"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"hole0": "Adjacent", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -4.9591064453125e-05, -5.7220458984375e-06, -2.992108420585282e-05, -2.074220174108632e-05, -5.006777428206988e-06, -1.9073486328125e-06, -4.76837158203125e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-05, -2.9325485229492188e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, -8.0108642578125e-05, -3.814697265625e-05, -0.0006122589111328125, -0.0001125335693359375, -5.7220458984375e-06, -3.0517578125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -1.168244216387393e-05, -1.3709068298339844e-05, -7.271765298355604e-06, 0.0, -0.0001678466796875, -0.0003528594970703125, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0005981922149658203, 0.0, -0.0006958246231079102, 0.0, -0.000152587890625, -0.001102447509765625, -1.9073486328125e-06, -0.0013931989669799805, -3.933906555175781e-06, -0.0001926422119140625, -1.71661376953125e-05, -3.814697265625e-06, -5.91278076171875e-05, -0.0004063844680786133, -1.33514404296875e-05, -0.0015276670455932617, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -7.62939453125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -8.20159912109375e-05, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0010089874267578125, -1.9073486328125e-06, -0.0003070831298828125, -2.86102294921875e-05, -7.62939453125e-06, -8.7738037109375e-05, -1.1444091796875e-05, -0.0001583099365234375, -7.62939453125e-06, -0.00041961669921875, -8.20159912109375e-05, -0.0001277923583984375, 0.0, -0.0009739398374222219, 0.0, -0.00020599365234375, -5.7220458984375e-06, -3.62396240234375e-05, -0.00014495849609375, -7.62939453125e-06, -0.0001506805419921875, -0.000629425048828125, -1.9073486328125e-06, -4.00543212890625e-05, -0.00103759765625, -2.288818359375e-05, -0.24974918365478516, -0.0027523040771484375, -0.0005092620849609375, -0.0008907318115234375, -6.67572021484375e-05, -0.003383636474609375, -1.9073486328125e-06, -0.004797697067260742, -0.00010180469689657912, -0.00012969970703125, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Flametongue", "Totem", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Flametongue", " ", "Totem", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 72, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 58, 123, 38, 216, 87, 193, "Adjacent", "<EOS>", 71, 109]}, {"inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n", "score": -1.5709374240664147, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "FlametongueTotem", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template12"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"hole0": "Adjacent", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -4.9591064453125e-05, -5.7220458984375e-06, -2.992108420585282e-05, -2.074220174108632e-05, -5.006777428206988e-06, -1.9073486328125e-06, -4.76837158203125e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-05, -2.9325485229492188e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, -8.0108642578125e-05, -3.814697265625e-05, -0.0006122589111328125, -0.0001125335693359375, -5.7220458984375e-06, -3.0517578125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -1.168244216387393e-05, -1.3709068298339844e-05, -7.271765298355604e-06, 0.0, -0.0001678466796875, -0.0003528594970703125, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0005981922149658203, 0.0, -0.0006958246231079102, 0.0, -0.000152587890625, -0.001102447509765625, -1.9073486328125e-06, -0.0013931989669799805, -3.933906555175781e-06, -0.0001926422119140625, -1.71661376953125e-05, -3.814697265625e-06, -5.91278076171875e-05, -0.0004063844680786133, -1.33514404296875e-05, -0.0015276670455932617, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -7.62939453125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -8.20159912109375e-05, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0010089874267578125, -1.9073486328125e-06, -0.0003070831298828125, -2.86102294921875e-05, -7.62939453125e-06, -8.7738037109375e-05, -1.1444091796875e-05, -0.0001583099365234375, -7.62939453125e-06, -0.00041961669921875, -8.20159912109375e-05, -0.0001277923583984375, 0.0, -0.0009739398374222219, 0.0, -0.00020599365234375, -5.7220458984375e-06, -3.62396240234375e-05, -0.00014495849609375, -7.62939453125e-06, -0.0001506805419921875, -0.000629425048828125, -1.9073486328125e-06, -4.00543212890625e-05, -0.00103759765625, -2.288818359375e-05, -1.5183038711547852, -0.0003490447998046875, -0.0005702972412109375, -0.0029888153076171875, -5.53131103515625e-05, -0.029183387756347656, -3.814697265625e-06, -0.005478769540786743, -0.00010097023914568126, -0.00016021728515625, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Flametongue", "Totem", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Flametongue", " ", "Totem", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 72, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 69, 58, 123, 38, 216, 87, 193, "Adjacent", "<EOS>", 71, 109]}, {"inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            IsType(MINION_TYPE.MECH)))])\n", "score": -5.402762169321704, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "FlametongueTotem", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template12"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -4.9591064453125e-05, -5.7220458984375e-06, -2.992108420585282e-05, -2.074220174108632e-05, -5.006777428206988e-06, -1.9073486328125e-06, -4.76837158203125e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-05, -2.9325485229492188e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, -8.0108642578125e-05, -3.814697265625e-05, -0.0006122589111328125, -0.0001125335693359375, -5.7220458984375e-06, -3.0517578125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -1.168244216387393e-05, -1.3709068298339844e-05, -7.271765298355604e-06, 0.0, -0.0001678466796875, -0.0003528594970703125, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0005981922149658203, 0.0, -0.0006958246231079102, 0.0, -0.000152587890625, -0.001102447509765625, -1.9073486328125e-06, -0.0013931989669799805, -3.933906555175781e-06, -0.0001926422119140625, -1.71661376953125e-05, -3.814697265625e-06, -5.91278076171875e-05, -0.0004063844680786133, -1.33514404296875e-05, -0.0015276670455932617, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -7.62939453125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -8.20159912109375e-05, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0010089874267578125, -1.9073486328125e-06, -0.0003070831298828125, -2.86102294921875e-05, -7.62939453125e-06, -8.7738037109375e-05, -1.1444091796875e-05, -0.0001583099365234375, -7.62939453125e-06, -0.00041961669921875, -8.20159912109375e-05, -0.0001277923583984375, 0.0, -0.0009739398374222219, 0.0, -0.00020599365234375, -5.7220458984375e-06, -3.62396240234375e-05, -0.00014495849609375, -7.62939453125e-06, -0.0001506805419921875, -0.000629425048828125, -1.9073486328125e-06, -4.00543212890625e-05, -0.00103759765625, -2.288818359375e-05, -1.5183038711547852, -0.0003490447998046875, -0.0005702972412109375, -0.0029888153076171875, -5.53131103515625e-05, -3.703807830810547, -0.00025177001953125, -0.0012073516845703125, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.114532470703125, -1.9073486328125e-06, -0.00010549579747021198, -0.0008053779019974172, -0.04556858539581299, 0.0, -0.000431060791015625, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Flametongue", "Totem", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Flametongue", " ", "Totem", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 72, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 69, 58, 123, 38, 216, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 71, 109]}, {"inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MECH)))])\n", "score": -6.320023177955136, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "FlametongueTotem", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template12"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -4.9591064453125e-05, -5.7220458984375e-06, -2.992108420585282e-05, -2.074220174108632e-05, -5.006777428206988e-06, -1.9073486328125e-06, -4.76837158203125e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-05, -2.9325485229492188e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, -8.0108642578125e-05, -3.814697265625e-05, -0.0006122589111328125, -0.0001125335693359375, -5.7220458984375e-06, -3.0517578125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -1.168244216387393e-05, -1.3709068298339844e-05, -7.271765298355604e-06, 0.0, -0.0001678466796875, -0.0003528594970703125, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0005981922149658203, 0.0, -0.0006958246231079102, 0.0, -0.000152587890625, -0.001102447509765625, -1.9073486328125e-06, -0.0013931989669799805, -3.933906555175781e-06, -0.0001926422119140625, -1.71661376953125e-05, -3.814697265625e-06, -5.91278076171875e-05, -0.0004063844680786133, -1.33514404296875e-05, -0.0015276670455932617, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -7.62939453125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -8.20159912109375e-05, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0010089874267578125, -1.9073486328125e-06, -0.0003070831298828125, -2.86102294921875e-05, -7.62939453125e-06, -8.7738037109375e-05, -1.1444091796875e-05, -0.0001583099365234375, -7.62939453125e-06, -0.00041961669921875, -8.20159912109375e-05, -0.0001277923583984375, 0.0, -0.0009739398374222219, 0.0, -0.00020599365234375, -5.7220458984375e-06, -3.62396240234375e-05, -0.00014495849609375, -7.62939453125e-06, -0.0001506805419921875, -0.000629425048828125, -1.9073486328125e-06, -4.00543212890625e-05, -0.00103759765625, -2.288818359375e-05, -0.24974918365478516, -0.0027523040771484375, -0.0005092620849609375, -0.0008907318115234375, -6.67572021484375e-05, -5.876607894897461, -0.0002346038818359375, -0.0005931854248046875, -2.47955322265625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.12234306335449219, -1.9073486328125e-06, -3.0040444471524097e-05, -0.0027173757553100586, -0.04929757118225098, 0.0, -0.0004425048828125, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Flametongue", "Totem", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Flametongue", " ", "Totem", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 72, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 58, 123, 38, 216, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 71, 109]}, {"inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(1), MinionSelector())])\n", "score": -6.5527051977092015, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "FlametongueTotem", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template12"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"hole0": "MinionSelector", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -4.9591064453125e-05, -5.7220458984375e-06, -2.992108420585282e-05, -2.074220174108632e-05, -5.006777428206988e-06, -1.9073486328125e-06, -4.76837158203125e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-05, -2.9325485229492188e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, -8.0108642578125e-05, -3.814697265625e-05, -0.0006122589111328125, -0.0001125335693359375, -5.7220458984375e-06, -3.0517578125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -1.168244216387393e-05, -1.3709068298339844e-05, -7.271765298355604e-06, 0.0, -0.0001678466796875, -0.0003528594970703125, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0005981922149658203, 0.0, -0.0006958246231079102, 0.0, -0.000152587890625, -0.001102447509765625, -1.9073486328125e-06, -0.0013931989669799805, -3.933906555175781e-06, -0.0001926422119140625, -1.71661376953125e-05, -3.814697265625e-06, -5.91278076171875e-05, -0.0004063844680786133, -1.33514404296875e-05, -0.0015276670455932617, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -7.62939453125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -8.20159912109375e-05, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0010089874267578125, -1.9073486328125e-06, -0.0003070831298828125, -2.86102294921875e-05, -7.62939453125e-06, -8.7738037109375e-05, -1.1444091796875e-05, -0.0001583099365234375, -7.62939453125e-06, -0.00041961669921875, -8.20159912109375e-05, -0.0001277923583984375, 0.0, -0.0009739398374222219, 0.0, -0.00020599365234375, -5.7220458984375e-06, -3.62396240234375e-05, -0.00014495849609375, -7.62939453125e-06, -0.0001506805419921875, -0.000629425048828125, -1.9073486328125e-06, -4.00543212890625e-05, -0.00103759765625, -2.288818359375e-05, -0.24974918365478516, -5.923537254333496, -1.52587890625e-05, -0.36292722821235657, -0.00018322466348763555, 0.0, -0.0025463104248046875, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Flametongue", "Totem", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Flametongue", " ", "Totem", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 72, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 87, 193, "Minion", "Selector", "<EOS>", 71, 109]}, {"inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(ChangeAttack(1)),\n            MinionSelector(Adjacent()))])\n", "score": -7.41522620519163, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "FlametongueTotem", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template12"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"hole0": "Adjacent", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -4.9591064453125e-05, -5.7220458984375e-06, -2.992108420585282e-05, -2.074220174108632e-05, -5.006777428206988e-06, -1.9073486328125e-06, -4.76837158203125e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-05, -2.9325485229492188e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, -8.0108642578125e-05, -3.814697265625e-05, -0.0006122589111328125, -0.0001125335693359375, -5.7220458984375e-06, -3.0517578125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -1.168244216387393e-05, -1.3709068298339844e-05, -7.271765298355604e-06, 0.0, -0.0001678466796875, -0.0003528594970703125, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0005981922149658203, 0.0, -0.0006958246231079102, 0.0, -0.000152587890625, -0.001102447509765625, -1.9073486328125e-06, -0.0013931989669799805, -3.933906555175781e-06, -0.0001926422119140625, -1.71661376953125e-05, -3.814697265625e-06, -5.91278076171875e-05, -0.0004063844680786133, -1.33514404296875e-05, -0.0015276670455932617, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -7.62939453125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -8.20159912109375e-05, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0010089874267578125, -1.9073486328125e-06, -0.0003070831298828125, -2.86102294921875e-05, -7.62939453125e-06, -8.7738037109375e-05, -1.1444091796875e-05, -0.0001583099365234375, -7.62939453125e-06, -0.00041961669921875, -8.20159912109375e-05, -0.0001277923583984375, 0.0, -0.0009739398374222219, 0.0, -0.00020599365234375, -5.7220458984375e-06, -3.62396240234375e-05, -0.00014495849609375, -7.62939453125e-06, -0.0001506805419921875, -0.000629425048828125, -1.9073486328125e-06, -4.00543212890625e-05, -0.00103759765625, -2.288818359375e-05, -7.228870391845703, -1.1444091796875e-05, -0.04913902282714844, -9.5367431640625e-06, -0.07812309265136719, -0.031108856201171875, -0.0003871917724609375, -0.006693840026855469, -3.814697265625e-05, -0.00385284423828125, -3.814697265625e-06, -0.0029833167791366577, -0.00016450863040518016, -9.72747802734375e-05, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Flametongue", "Totem", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Flametongue", " ", "Totem", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 72, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 58, 123, 40, 216, 70, 58, 123, 38, 216, 87, 193, "Adjacent", "<EOS>", 71, 109]}, {"inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(Give(ChangeAttack(1)),\n            MinionSelector(Adjacent()))])\n", "score": -7.452292322266203, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "FlametongueTotem", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template12"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template25"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"hole0": "Adjacent", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -4.9591064453125e-05, -5.7220458984375e-06, -2.992108420585282e-05, -2.074220174108632e-05, -5.006777428206988e-06, -1.9073486328125e-06, -4.76837158203125e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-05, -2.9325485229492188e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, -8.0108642578125e-05, -3.814697265625e-05, -0.0006122589111328125, -0.0001125335693359375, -5.7220458984375e-06, -3.0517578125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -1.168244216387393e-05, -1.3709068298339844e-05, -7.271765298355604e-06, 0.0, -0.0001678466796875, -0.0003528594970703125, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0005981922149658203, 0.0, -0.0006958246231079102, 0.0, -0.000152587890625, -0.001102447509765625, -1.9073486328125e-06, -0.0013931989669799805, -3.933906555175781e-06, -0.0001926422119140625, -1.71661376953125e-05, -3.814697265625e-06, -5.91278076171875e-05, -0.0004063844680786133, -1.33514404296875e-05, -0.0015276670455932617, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -7.62939453125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -8.20159912109375e-05, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0010089874267578125, -1.9073486328125e-06, -0.0003070831298828125, -2.86102294921875e-05, -7.62939453125e-06, -8.7738037109375e-05, -1.1444091796875e-05, -0.0001583099365234375, -7.62939453125e-06, -0.00041961669921875, -8.20159912109375e-05, -0.0001277923583984375, 0.0, -0.0009739398374222219, 0.0, -0.00020599365234375, -5.7220458984375e-06, -3.62396240234375e-05, -0.00014495849609375, -7.62939453125e-06, -0.0001506805419921875, -0.000629425048828125, -1.9073486328125e-06, -4.00543212890625e-05, -7.214211463928223, -5.7220458984375e-06, -0.00041961669921875, -7.62939453125e-06, -0.01152801513671875, -7.62939453125e-06, -0.1831188201904297, -0.016078948974609375, -0.000255584716796875, -0.0020236968994140625, -3.814697265625e-05, -0.005878448486328125, -9.5367431640625e-06, -0.0058078765869140625, -9.286399290431291e-05, -0.0001239776611328125, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Flametongue", "Totem", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Flametongue", " ", "Totem", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 72, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 37, 216, 58, 123, 40, 216, 70, 58, 123, 38, 216, 87, 193, "Adjacent", "<EOS>", 71, 109]}, {"inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(1), WeaponSelector())])\n", "score": -7.461693643684612, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "FlametongueTotem", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template12"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"hole0": "WeaponSelector", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -4.9591064453125e-05, -5.7220458984375e-06, -2.992108420585282e-05, -2.074220174108632e-05, -5.006777428206988e-06, -1.9073486328125e-06, -4.76837158203125e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-05, -2.9325485229492188e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, -8.0108642578125e-05, -3.814697265625e-05, -0.0006122589111328125, -0.0001125335693359375, -5.7220458984375e-06, -3.0517578125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -1.168244216387393e-05, -1.3709068298339844e-05, -7.271765298355604e-06, 0.0, -0.0001678466796875, -0.0003528594970703125, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0005981922149658203, 0.0, -0.0006958246231079102, 0.0, -0.000152587890625, -0.001102447509765625, -1.9073486328125e-06, -0.0013931989669799805, -3.933906555175781e-06, -0.0001926422119140625, -1.71661376953125e-05, -3.814697265625e-06, -5.91278076171875e-05, -0.0004063844680786133, -1.33514404296875e-05, -0.0015276670455932617, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -7.62939453125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -8.20159912109375e-05, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0010089874267578125, -1.9073486328125e-06, -0.0003070831298828125, -2.86102294921875e-05, -7.62939453125e-06, -8.7738037109375e-05, -1.1444091796875e-05, -0.0001583099365234375, -7.62939453125e-06, -0.00041961669921875, -8.20159912109375e-05, -0.0001277923583984375, 0.0, -0.0009739398374222219, 0.0, -0.00020599365234375, -5.7220458984375e-06, -3.62396240234375e-05, -0.00014495849609375, -7.62939453125e-06, -0.0001506805419921875, -0.000629425048828125, -1.9073486328125e-06, -4.00543212890625e-05, -0.00103759765625, -2.288818359375e-05, -0.24974918365478516, -5.923537254333496, -1.52587890625e-05, -1.268622875213623, -1.9907914975192398e-05, 0.0, -0.0060024261474609375, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Flametongue", "Totem", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Flametongue", " ", "Totem", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 72, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 87, 193, "Weapon", "Selector", "<EOS>", 71, 109]}, {"inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(1), MinionSelector(\n            MinionHasAdjacent()))])\n", "score": -7.506689950021155, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "FlametongueTotem", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template12"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"hole0": "MinionHasAdjacent", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -4.9591064453125e-05, -5.7220458984375e-06, -2.992108420585282e-05, -2.074220174108632e-05, -5.006777428206988e-06, -1.9073486328125e-06, -4.76837158203125e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-05, -2.9325485229492188e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, -8.0108642578125e-05, -3.814697265625e-05, -0.0006122589111328125, -0.0001125335693359375, -5.7220458984375e-06, -3.0517578125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -1.168244216387393e-05, -1.3709068298339844e-05, -7.271765298355604e-06, 0.0, -0.0001678466796875, -0.0003528594970703125, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0005981922149658203, 0.0, -0.0006958246231079102, 0.0, -0.000152587890625, -0.001102447509765625, -1.9073486328125e-06, -0.0013931989669799805, -3.933906555175781e-06, -0.0001926422119140625, -1.71661376953125e-05, -3.814697265625e-06, -5.91278076171875e-05, -0.0004063844680786133, -1.33514404296875e-05, -0.0015276670455932617, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -7.62939453125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -8.20159912109375e-05, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0010089874267578125, -1.9073486328125e-06, -0.0003070831298828125, -2.86102294921875e-05, -7.62939453125e-06, -8.7738037109375e-05, -1.1444091796875e-05, -0.0001583099365234375, -7.62939453125e-06, -0.00041961669921875, -8.20159912109375e-05, -0.0001277923583984375, 0.0, -0.0009739398374222219, 0.0, -0.00020599365234375, -5.7220458984375e-06, -3.62396240234375e-05, -0.00014495849609375, -7.62939453125e-06, -0.0001506805419921875, -0.000629425048828125, -1.9073486328125e-06, -4.00543212890625e-05, -0.00103759765625, -2.288818359375e-05, -0.24974918365478516, -0.0027523040771484375, -0.0005092620849609375, -0.0008907318115234375, -6.67572021484375e-05, -0.003383636474609375, -1.9073486328125e-06, -6.810058116912842, -0.24776029586791992, -0.17737047374248505, 0.0, -0.00040435791015625, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Flametongue", "Totem", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Flametongue", " ", "Totem", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 72, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 58, 123, 38, 216, 87, 193, "Minion", "Has", "Adjacent", "<EOS>", 71, 109]}, {"inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(1), MinionSelector(\n            WeaponSelector()))])\n", "score": -7.564929238649256, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "FlametongueTotem", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template12"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"hole0": "WeaponSelector", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -4.9591064453125e-05, -5.7220458984375e-06, -2.992108420585282e-05, -2.074220174108632e-05, -5.006777428206988e-06, -1.9073486328125e-06, -4.76837158203125e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-05, -2.9325485229492188e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, -8.0108642578125e-05, -3.814697265625e-05, -0.0006122589111328125, -0.0001125335693359375, -5.7220458984375e-06, -3.0517578125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -1.168244216387393e-05, -1.3709068298339844e-05, -7.271765298355604e-06, 0.0, -0.0001678466796875, -0.0003528594970703125, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0005981922149658203, 0.0, -0.0006958246231079102, 0.0, -0.000152587890625, -0.001102447509765625, -1.9073486328125e-06, -0.0013931989669799805, -3.933906555175781e-06, -0.0001926422119140625, -1.71661376953125e-05, -3.814697265625e-06, -5.91278076171875e-05, -0.0004063844680786133, -1.33514404296875e-05, -0.0015276670455932617, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -7.62939453125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -8.20159912109375e-05, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0010089874267578125, -1.9073486328125e-06, -0.0003070831298828125, -2.86102294921875e-05, -7.62939453125e-06, -8.7738037109375e-05, -1.1444091796875e-05, -0.0001583099365234375, -7.62939453125e-06, -0.00041961669921875, -8.20159912109375e-05, -0.0001277923583984375, 0.0, -0.0009739398374222219, 0.0, -0.00020599365234375, -5.7220458984375e-06, -3.62396240234375e-05, -0.00014495849609375, -7.62939453125e-06, -0.0001506805419921875, -0.000629425048828125, -1.9073486328125e-06, -4.00543212890625e-05, -0.00103759765625, -2.288818359375e-05, -0.24974918365478516, -0.0027523040771484375, -0.0005092620849609375, -0.0008907318115234375, -6.67572021484375e-05, -0.003383636474609375, -1.9073486328125e-06, -7.16850471496582, -0.1229093000292778, 0.0, -0.002410888671875, -9.5367431640625e-06], "choice_history": [93, 145, 230, 101, 125, "Flametongue", "Totem", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Flametongue", " ", "Totem", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 72, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 58, 123, 38, 216, 87, 193, "Weapon", "Selector", "<EOS>", 71, 109]}, {"inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsMinion()))])\n", "score": -8.111650942953474, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "FlametongueTotem", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template12"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"hole0": "IsMinion", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -4.9591064453125e-05, -5.7220458984375e-06, -2.992108420585282e-05, -2.074220174108632e-05, -5.006777428206988e-06, -1.9073486328125e-06, -4.76837158203125e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-05, -2.9325485229492188e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, -8.0108642578125e-05, -3.814697265625e-05, -0.0006122589111328125, -0.0001125335693359375, -5.7220458984375e-06, -3.0517578125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -1.168244216387393e-05, -1.3709068298339844e-05, -7.271765298355604e-06, 0.0, -0.0001678466796875, -0.0003528594970703125, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0005981922149658203, 0.0, -0.0006958246231079102, 0.0, -0.000152587890625, -0.001102447509765625, -1.9073486328125e-06, -0.0013931989669799805, -3.933906555175781e-06, -0.0001926422119140625, -1.71661376953125e-05, -3.814697265625e-06, -5.91278076171875e-05, -0.0004063844680786133, -1.33514404296875e-05, -0.0015276670455932617, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -7.62939453125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -8.20159912109375e-05, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0010089874267578125, -1.9073486328125e-06, -0.0003070831298828125, -2.86102294921875e-05, -7.62939453125e-06, -8.7738037109375e-05, -1.1444091796875e-05, -0.0001583099365234375, -7.62939453125e-06, -0.00041961669921875, -8.20159912109375e-05, -0.0001277923583984375, 0.0, -0.0009739398374222219, 0.0, -0.00020599365234375, -5.7220458984375e-06, -3.62396240234375e-05, -0.00014495849609375, -7.62939453125e-06, -0.0001506805419921875, -0.000629425048828125, -1.9073486328125e-06, -4.00543212890625e-05, -0.00103759765625, -2.288818359375e-05, -0.24974918365478516, -0.0027523040771484375, -0.0005092620849609375, -0.0008907318115234375, -6.67572021484375e-05, -0.003383636474609375, -1.9073486328125e-06, -7.045318126678467, -0.7743479013442993, -0.02071082592010498, -0.0001735687255859375, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Flametongue", "Totem", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Flametongue", " ", "Totem", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 72, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 58, 123, 38, 216, 87, 193, "Is", "Minion", "<EOS>", 71, 109]}, {"inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, taunt=True)\n", "score": -8.3914542188827, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "FlametongueTotem", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template12"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -4.9591064453125e-05, -5.7220458984375e-06, -2.992108420585282e-05, -2.074220174108632e-05, -5.006777428206988e-06, -1.9073486328125e-06, -4.76837158203125e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-05, -2.9325485229492188e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, -8.0108642578125e-05, -3.814697265625e-05, -0.0006122589111328125, -0.0001125335693359375, -5.7220458984375e-06, -3.0517578125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -1.168244216387393e-05, -1.3709068298339844e-05, -7.271765298355604e-06, 0.0, -0.0001678466796875, -0.0003528594970703125, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0005981922149658203, 0.0, -0.0006958246231079102, 0.0, -0.000152587890625, -0.001102447509765625, -1.9073486328125e-06, -0.0013931989669799805, -3.933906555175781e-06, -0.0001926422119140625, -1.71661376953125e-05, -3.814697265625e-06, -5.91278076171875e-05, -0.0004063844680786133, -1.33514404296875e-05, -0.0015276670455932617, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -7.62939453125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -8.20159912109375e-05, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0010089874267578125, -1.9073486328125e-06, -0.0003070831298828125, -2.86102294921875e-05, -7.62939453125e-06, -8.7738037109375e-05, -1.1444091796875e-05, -0.0001583099365234375, -7.62939453125e-06, -0.00041961669921875, -8.20159912109375e-05, -0.0001277923583984375, 0.0, -8.37912654876709, -1.9073486328125e-06, -0.0017604827880859375, -4.1961669921875e-05, -2.5033763449755497e-05, -1.4305111108114943e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Flametongue", "Totem", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Flametongue", " ", "Totem", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 72, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, spell_targetable=False)\n", "score": -8.416661023349207, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "FlametongueTotem", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template12"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "Template27"}, "_type": "keyword", "arg": "spell_targetable"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -4.9591064453125e-05, -5.7220458984375e-06, -2.992108420585282e-05, -2.074220174108632e-05, -5.006777428206988e-06, -1.9073486328125e-06, -4.76837158203125e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-05, -2.9325485229492188e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, -8.0108642578125e-05, -3.814697265625e-05, -0.0006122589111328125, -0.0001125335693359375, -5.7220458984375e-06, -3.0517578125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -1.168244216387393e-05, -1.3709068298339844e-05, -7.271765298355604e-06, 0.0, -0.0001678466796875, -0.0003528594970703125, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0005981922149658203, 0.0, -0.0006958246231079102, 0.0, -0.000152587890625, -0.001102447509765625, -1.9073486328125e-06, -0.0013931989669799805, -3.933906555175781e-06, -0.0001926422119140625, -1.71661376953125e-05, -3.814697265625e-06, -5.91278076171875e-05, -0.0004063844680786133, -1.33514404296875e-05, -0.0015276670455932617, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -7.62939453125e-06, -6.29425048828125e-05, -3.4332275390625e-05, -8.20159912109375e-05, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0010089874267578125, -1.9073486328125e-06, -0.0003070831298828125, -2.86102294921875e-05, -7.62939453125e-06, -8.7738037109375e-05, -1.1444091796875e-05, -0.0001583099365234375, -7.62939453125e-06, -0.00041961669921875, -8.20159912109375e-05, -0.0001277923583984375, 0.0, -8.247394561767578, -2.384185791015625e-06, -0.15877437591552734, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Flametongue", "Totem", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Flametongue", " ", "Totem", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 72, 224, 205, "spell_targetable", "<EOS>", 39, 109]}, {"inferred_code": "super().use(player, game)\n", "score": -19.62242603302002, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -13.225342750549316, -6.397045135498047], "choice_history": [93, 145, 230, 108, 109]}, {"inferred_code": "", "score": -20.401865005493164, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -20.401844024658203], "choice_history": [93, 145, 228]}], "index": 34}
{"beams": [{"inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n", "score": -0.0643334364320367, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Frog", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template31"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -5.53131103515625e-05, -3.814697265625e-06, -5.7220458984375e-06, -5.960462772236497e-07, -7.676865061512217e-05, -7.62939453125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.000148773193359375, -1.811981201171875e-05, -3.814697265625e-06, -5.7220458984375e-06, -3.62396240234375e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.4849853515625e-05, -0.00070953369140625, -1.9073486328125e-06, -0.0024662017822265625, -1.52587890625e-05, -3.814697265625e-06, -9.536697689327411e-06, -1.33514404296875e-05, -0.00040435791015625, -0.000171661376953125, -0.0001811981201171875, -1.52587890625e-05, -3.814697265625e-06, 0.0, -6.0319896874716505e-05, -2.3245811462402344e-05, -3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.000908970832824707, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.24249267578125e-05, -1.1444091796875e-05, -1.33514404296875e-05, -0.0001277923583984375, -0.0001678466796875, -1.9073486328125e-06, 0.0, 0.0, -0.051756978034973145, 0.0, -9.5367431640625e-06, -0.0003376007080078125, -3.814697265625e-06, -0.000102996826171875, -0.0002002716064453125, -0.000301361083984375, -5.7220458984375e-06, -0.00164794921875, -0.0007762908935546875, -4.57763671875e-05, 0.0, -0.0030908584594726562, -5.7220458984375e-06, -5.7220458984375e-05, -2.6702880859375e-05, -4.565693961922079e-05, -9.179073458653875e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frog", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Frog", "<EOS>", 83, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "p", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 70, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n", "score": -3.0716037725586034, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Frog", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template31"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -5.53131103515625e-05, -3.814697265625e-06, -5.7220458984375e-06, -5.960462772236497e-07, -7.676865061512217e-05, -7.62939453125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.000148773193359375, -1.811981201171875e-05, -3.814697265625e-06, -5.7220458984375e-06, -3.62396240234375e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.4849853515625e-05, -0.00070953369140625, -1.9073486328125e-06, -0.0024662017822265625, -1.52587890625e-05, -3.814697265625e-06, -9.536697689327411e-06, -1.33514404296875e-05, -0.00040435791015625, -0.000171661376953125, -0.0001811981201171875, -1.52587890625e-05, -3.814697265625e-06, 0.0, -6.0319896874716505e-05, -2.3245811462402344e-05, -3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.000908970832824707, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.24249267578125e-05, -1.1444091796875e-05, -1.33514404296875e-05, -0.0001277923583984375, -0.0001678466796875, -1.9073486328125e-06, 0.0, 0.0, -3.0600194931030273, 0.0, -3.814697265625e-06, -0.0003681182861328125, -1.9073486328125e-06, -3.814697265625e-05, -9.34600830078125e-05, -0.0002574920654296875, -7.62939453125e-06, -0.0015716552734375, -0.0006313323974609375, -5.14984130859375e-05, 0.0, -0.0025093555450439453, -5.841255187988281e-06, -5.14984130859375e-05, -2.6702880859375e-05, -4.66105921077542e-05, -9.417489309271332e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frog", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Frog", "<EOS>", 83, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 70, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n", "score": -6.851020929924772, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Frog", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template31"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -5.53131103515625e-05, -3.814697265625e-06, -5.7220458984375e-06, -5.960462772236497e-07, -7.676865061512217e-05, -7.62939453125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.000148773193359375, -1.811981201171875e-05, -3.814697265625e-06, -5.7220458984375e-06, -3.62396240234375e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.4849853515625e-05, -0.00070953369140625, -1.9073486328125e-06, -6.697957992553711, -1.1444091796875e-05, 0.0, -2.622600959512056e-06, -2.3841855067985307e-07, -0.03907966613769531, -2.86102294921875e-05, -3.62396240234375e-05, -0.000270843505859375, 0.0, -2.1457672119140625e-05, -9.655952453613281e-06, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.0010781288146972656, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -8.392333984375e-05, -1.52587890625e-05, -4.9591064453125e-05, -7.43865966796875e-05, -0.0001354217529296875, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.10652923583984375, 0.0, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-05, -1.71661376953125e-05, -0.00022125244140625, -1.9073486328125e-06, -0.0012493133544921875, -0.00032806396484375, -7.43865966796875e-05, 0.0, -0.0022677183151245117, -7.748603820800781e-06, -4.9591064453125e-05, -2.288818359375e-05, -4.100789374206215e-05, -8.4638240878121e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frog", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Frog", "<EOS>", 83, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 70, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1, taunt=True)\n", "score": -6.905916926903785, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Frog", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template31"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -5.53131103515625e-05, -3.814697265625e-06, -5.7220458984375e-06, -5.960462772236497e-07, -7.676865061512217e-05, -7.62939453125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.000148773193359375, -1.811981201171875e-05, -3.814697265625e-06, -5.7220458984375e-06, -3.62396240234375e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.4849853515625e-05, -0.00070953369140625, -1.9073486328125e-06, -0.0024662017822265625, -1.52587890625e-05, -3.814697265625e-06, -9.536697689327411e-06, -1.33514404296875e-05, -0.00040435791015625, -0.000171661376953125, -0.0001811981201171875, -1.52587890625e-05, -3.814697265625e-06, 0.0, -6.0319896874716505e-05, -2.3245811462402344e-05, -3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.000908970832824707, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.24249267578125e-05, -1.1444091796875e-05, -1.33514404296875e-05, -0.0001277923583984375, -0.0001678466796875, -1.9073486328125e-06, 0.0, 0.0, -0.051756978034973145, 0.0, -9.5367431640625e-06, -0.0003376007080078125, -3.814697265625e-06, -0.000102996826171875, -0.0002002716064453125, -0.000301361083984375, -5.7220458984375e-06, -6.830384254455566, -0.012890815734863281, -7.43865966796875e-05, 0.0, -0.0038079023361206055, -3.814697265625e-06, -5.14984130859375e-05, -3.0517578125e-05, -3.6358716897666454e-05, -9.298280929215252e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frog", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Frog", "<EOS>", 83, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "p", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 70, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, charge=True)\n", "score": -7.077765700968769, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Frog", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template31"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -5.53131103515625e-05, -3.814697265625e-06, -5.7220458984375e-06, -5.960462772236497e-07, -7.676865061512217e-05, -7.62939453125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.000148773193359375, -1.811981201171875e-05, -3.814697265625e-06, -5.7220458984375e-06, -3.62396240234375e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.4849853515625e-05, -0.00070953369140625, -1.9073486328125e-06, -0.0024662017822265625, -1.52587890625e-05, -3.814697265625e-06, -9.536697689327411e-06, -1.33514404296875e-05, -0.00040435791015625, -0.000171661376953125, -0.0001811981201171875, -1.52587890625e-05, -3.814697265625e-06, 0.0, -6.0319896874716505e-05, -2.3245811462402344e-05, -3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.000908970832824707, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.24249267578125e-05, -1.1444091796875e-05, -1.33514404296875e-05, -0.0001277923583984375, -0.0001678466796875, -1.9073486328125e-06, 0.0, 0.0, -0.051756978034973145, 0.0, -9.5367431640625e-06, -0.0003376007080078125, -3.814697265625e-06, -0.000102996826171875, -0.0002002716064453125, -0.000301361083984375, -5.7220458984375e-06, -0.00164794921875, -0.0007762908935546875, -4.57763671875e-05, 0.0, -7.016363143920898, -7.62939453125e-06, -0.000209808349609375, -3.4332275390625e-05, -4.982943573850207e-05, -2.861018856492592e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frog", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Frog", "<EOS>", 83, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "p", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 70, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, Count):\n        return Minion(0, 1, taunt=True)\n", "score": -7.157000420040106, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Frog", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template31"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "Count"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -5.53131103515625e-05, -3.814697265625e-06, -5.7220458984375e-06, -5.960462772236497e-07, -7.676865061512217e-05, -7.62939453125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.000148773193359375, -1.811981201171875e-05, -3.814697265625e-06, -5.7220458984375e-06, -3.62396240234375e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.4849853515625e-05, -0.00070953369140625, -1.9073486328125e-06, -0.0024662017822265625, -1.52587890625e-05, -3.814697265625e-06, -9.536697689327411e-06, -1.33514404296875e-05, -0.00040435791015625, -0.000171661376953125, -0.0001811981201171875, -1.52587890625e-05, -3.814697265625e-06, 0.0, -6.0319896874716505e-05, -2.3245811462402344e-05, -3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.000908970832824707, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.24249267578125e-05, -1.1444091796875e-05, -1.33514404296875e-05, -0.0001277923583984375, -0.0001678466796875, -1.9073486328125e-06, 0.0, 0.0, -7.143596172332764, -1.2159347534179688e-05, -4.57763671875e-05, -0.000301361083984375, -3.814697265625e-06, -0.00012969970703125, -0.000392913818359375, -0.00028228759765625, -5.7220458984375e-06, -0.0015926361083984375, -0.00107574462890625, -4.38690185546875e-05, 0.0, -0.003462076187133789, -3.933906555175781e-06, -5.91278076171875e-05, -2.86102294921875e-05, -4.553773396764882e-05, -9.179073458653875e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frog", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Frog", "<EOS>", 83, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "Count", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 70, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n", "score": -7.605342624018533, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Frog", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template31"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}, {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -5.53131103515625e-05, -3.814697265625e-06, -5.7220458984375e-06, -5.960462772236497e-07, -7.676865061512217e-05, -7.62939453125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.000148773193359375, -1.811981201171875e-05, -3.814697265625e-06, -5.7220458984375e-06, -3.62396240234375e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.4849853515625e-05, -7.558320045471191, -9.5367431640625e-06, -0.01652240753173828, -3.814697265625e-05, -1.1444091796875e-05, -5.245195097813848e-06, -2.0265579223632812e-06, -0.0020084381103515625, -0.0001888275146484375, -7.62939453125e-05, -0.0001163482666015625, -0.00011444091796875, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00012087821960449219, -3.814697265625e-06, -0.0031527280807495117, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -7.43865966796875e-05, -1.52587890625e-05, -3.0517578125e-05, -2.86102294921875e-05, -0.0002765655517578125, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.0176161527633667, 0.0, -7.62939453125e-06, -8.392333984375e-05, -3.814697265625e-06, -5.53131103515625e-05, -4.00543212890625e-05, -0.000186920166015625, -2.6702880859375e-05, -0.000980377197265625, -0.00020599365234375, -0.000141143798828125, 0.0, -0.004132747650146484, -1.9073486328125e-05, -4.57763671875e-05, -4.00543212890625e-05, -4.982911923434585e-05, -1.1205629562027752e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frog", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 221, 66, 155, "Frog", "<EOS>", 83, 89, 88, 80, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "p", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 70, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, Has):\n        return Minion(0, 1, taunt=True)\n", "score": -7.799313185029689, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Frog", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template31"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "Has"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -5.53131103515625e-05, -3.814697265625e-06, -5.7220458984375e-06, -5.960462772236497e-07, -7.676865061512217e-05, -7.62939453125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.000148773193359375, -1.811981201171875e-05, -3.814697265625e-06, -5.7220458984375e-06, -3.62396240234375e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.4849853515625e-05, -0.00070953369140625, -1.9073486328125e-06, -0.0024662017822265625, -1.52587890625e-05, -3.814697265625e-06, -9.536697689327411e-06, -1.33514404296875e-05, -0.00040435791015625, -0.000171661376953125, -0.0001811981201171875, -1.52587890625e-05, -3.814697265625e-06, 0.0, -6.0319896874716505e-05, -2.3245811462402344e-05, -3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.000908970832824707, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.24249267578125e-05, -1.1444091796875e-05, -1.33514404296875e-05, -0.0001277923583984375, -0.0001678466796875, -1.9073486328125e-06, 0.0, 0.0, -7.786440372467041, -1.4662729881820269e-05, -2.86102294921875e-05, -0.0001201629638671875, -3.814697265625e-06, -0.000141143798828125, -0.000194549560546875, -0.0002727508544921875, -5.7220458984375e-06, -0.0019931793212890625, -0.000942230224609375, -4.38690185546875e-05, 0.0, -0.0030525922775268555, -5.841255187988281e-06, -5.53131103515625e-05, -2.86102294921875e-05, -5.0544407713459805e-05, -9.417489309271332e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frog", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Frog", "<EOS>", 83, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "Has", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 70, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, spell_targetable=True)\n", "score": -7.829053995266634, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Frog", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template31"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "spell_targetable"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -5.53131103515625e-05, -3.814697265625e-06, -5.7220458984375e-06, -5.960462772236497e-07, -7.676865061512217e-05, -7.62939453125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.000148773193359375, -1.811981201171875e-05, -3.814697265625e-06, -5.7220458984375e-06, -3.62396240234375e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.4849853515625e-05, -0.00070953369140625, -1.9073486328125e-06, -0.0024662017822265625, -1.52587890625e-05, -3.814697265625e-06, -9.536697689327411e-06, -1.33514404296875e-05, -0.00040435791015625, -0.000171661376953125, -0.0001811981201171875, -1.52587890625e-05, -3.814697265625e-06, 0.0, -6.0319896874716505e-05, -2.3245811462402344e-05, -3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.000908970832824707, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.24249267578125e-05, -1.1444091796875e-05, -1.33514404296875e-05, -0.0001277923583984375, -0.0001678466796875, -1.9073486328125e-06, 0.0, 0.0, -0.051756978034973145, 0.0, -9.5367431640625e-06, -0.0003376007080078125, -3.814697265625e-06, -0.000102996826171875, -0.0002002716064453125, -0.000301361083984375, -5.7220458984375e-06, -0.00164794921875, -0.0007762908935546875, -4.57763671875e-05, 0.0, -7.6040544509887695, -2.0265579223632812e-06, -0.1636810302734375, -0.0001468658447265625, -5.00674796057865e-05, -2.1457548427861184e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frog", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Frog", "<EOS>", 83, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "p", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 70, 224, 205, "spell_targetable", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1,  =True)\n", "score": -8.03699660935473, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Frog", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template31"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": " "}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -5.53131103515625e-05, -3.814697265625e-06, -5.7220458984375e-06, -5.960462772236497e-07, -7.676865061512217e-05, -7.62939453125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.000148773193359375, -1.811981201171875e-05, -3.814697265625e-06, -5.7220458984375e-06, -3.62396240234375e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.4849853515625e-05, -0.00070953369140625, -1.9073486328125e-06, -0.0024662017822265625, -1.52587890625e-05, -3.814697265625e-06, -9.536697689327411e-06, -1.33514404296875e-05, -0.00040435791015625, -0.000171661376953125, -0.0001811981201171875, -1.52587890625e-05, -3.814697265625e-06, 0.0, -6.0319896874716505e-05, -2.3245811462402344e-05, -3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.000908970832824707, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.24249267578125e-05, -1.1444091796875e-05, -1.33514404296875e-05, -0.0001277923583984375, -0.0001678466796875, -1.9073486328125e-06, 0.0, 0.0, -0.051756978034973145, 0.0, -9.5367431640625e-06, -0.0003376007080078125, -3.814697265625e-06, -0.000102996826171875, -0.0002002716064453125, -0.000301361083984375, -5.7220458984375e-06, -0.00164794921875, -0.0007762908935546875, -4.57763671875e-05, 0.0, -7.8916544914245605, -0.0051429360173642635, -0.07891654968261719, -0.0001010894775390625, -6.532653060276061e-05, -1.811964830267243e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frog", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Frog", "<EOS>", 83, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "p", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 70, 224, 205, " ", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 5, taunt=True)\n", "score": -8.132976529478412, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Frog", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template31"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template22"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -5.53131103515625e-05, -3.814697265625e-06, -5.7220458984375e-06, -5.960462772236497e-07, -7.676865061512217e-05, -7.62939453125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.000148773193359375, -1.811981201171875e-05, -3.814697265625e-06, -5.7220458984375e-06, -3.62396240234375e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.4849853515625e-05, -0.00070953369140625, -1.9073486328125e-06, -0.0024662017822265625, -1.52587890625e-05, -3.814697265625e-06, -9.536697689327411e-06, -1.33514404296875e-05, -0.00040435791015625, -0.000171661376953125, -0.0001811981201171875, -1.52587890625e-05, -3.814697265625e-06, 0.0, -6.0319896874716505e-05, -2.3245811462402344e-05, -3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.000908970832824707, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.24249267578125e-05, -1.1444091796875e-05, -1.33514404296875e-05, -0.0001277923583984375, -0.0001678466796875, -1.9073486328125e-06, 0.0, 0.0, -0.051756978034973145, 0.0, -9.5367431640625e-06, -0.0003376007080078125, -3.814697265625e-06, -0.000102996826171875, -0.0002002716064453125, -0.000301361083984375, -5.7220458984375e-06, -0.00164794921875, -8.071198463439941, -0.0001220703125, 0.0, -0.0012732741888612509, -5.841255187988281e-06, -3.24249267578125e-05, -3.4332275390625e-05, -2.3364969820249826e-05, -1.0728796951298136e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frog", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Frog", "<EOS>", 83, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "p", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 77, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, windfury=True)\n", "score": -8.268399951404547, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Frog", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template31"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "windfury"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -5.53131103515625e-05, -3.814697265625e-06, -5.7220458984375e-06, -5.960462772236497e-07, -7.676865061512217e-05, -7.62939453125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.000148773193359375, -1.811981201171875e-05, -3.814697265625e-06, -5.7220458984375e-06, -3.62396240234375e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.4849853515625e-05, -0.00070953369140625, -1.9073486328125e-06, -0.0024662017822265625, -1.52587890625e-05, -3.814697265625e-06, -9.536697689327411e-06, -1.33514404296875e-05, -0.00040435791015625, -0.000171661376953125, -0.0001811981201171875, -1.52587890625e-05, -3.814697265625e-06, 0.0, -6.0319896874716505e-05, -2.3245811462402344e-05, -3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.000908970832824707, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.24249267578125e-05, -1.1444091796875e-05, -1.33514404296875e-05, -0.0001277923583984375, -0.0001678466796875, -1.9073486328125e-06, 0.0, 0.0, -0.051756978034973145, 0.0, -9.5367431640625e-06, -0.0003376007080078125, -3.814697265625e-06, -0.000102996826171875, -0.0002002716064453125, -0.000301361083984375, -5.7220458984375e-06, -0.00164794921875, -0.0007762908935546875, -4.57763671875e-05, 0.0, -8.207101821899414, -3.814697265625e-06, -7.82012939453125e-05, -5.7220458984375e-05, -4.899481064057909e-05, -1.1801670552813448e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frog", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Frog", "<EOS>", 83, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "p", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 70, 224, 205, "windfury", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1)\n", "score": -9.086345193583043, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Frog", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template31"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 0, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -5.53131103515625e-05, -3.814697265625e-06, -5.7220458984375e-06, -5.960462772236497e-07, -7.676865061512217e-05, -7.62939453125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.000148773193359375, -1.811981201171875e-05, -3.814697265625e-06, -5.7220458984375e-06, -3.62396240234375e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.4849853515625e-05, -0.00070953369140625, -1.9073486328125e-06, -0.0024662017822265625, -1.52587890625e-05, -3.814697265625e-06, -9.536697689327411e-06, -1.33514404296875e-05, -0.00040435791015625, -0.000171661376953125, -0.0001811981201171875, -1.52587890625e-05, -3.814697265625e-06, 0.0, -6.0319896874716505e-05, -2.3245811462402344e-05, -3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.000908970832824707, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.24249267578125e-05, -1.1444091796875e-05, -1.33514404296875e-05, -0.0001277923583984375, -0.0001678466796875, -1.9073486328125e-06, 0.0, 0.0, -0.051756978034973145, 0.0, -9.5367431640625e-06, -8.22374439239502, -0.0004215240478515625, -0.04262518882751465, -5.960462772236497e-07, -0.7618718147277832, -3.4570634852570947e-06, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Frog", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Frog", "<EOS>", 83, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "p", "<EOS>", 229, 110, 181, "0", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "", "score": -18.869321823120117, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, 0.0, -18.869319915771484], "choice_history": [93, 145, 228]}, {"inferred_code": "super().use(player, game)\n", "score": -19.420416831970215, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -5.53131103515625e-05, -15.756484985351562, -3.663874626159668], "choice_history": [93, 145, 230, 108, 109]}], "index": 35}
{"beams": [{"inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Frozen()))\n", "score": -0.1608726676823835, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FrostNova", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frost Nova"}, {"_type": "Template16"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Frozen", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}], "iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -0.000576019287109375, -2.09808349609375e-05, -2.09808349609375e-05, -9.5367431640625e-06, -1.1205610462639015e-05, -5.125993993715383e-06, -4.768370445162873e-07, -5.7220458984375e-06, -3.814697265625e-05, -0.0032939910888671875, -3.814697265625e-06, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001354217529296875, 0.0, -7.43865966796875e-05, -0.0003948211669921875, -2.6702880859375e-05, -9.5367431640625e-06, -1.52587890625e-05, -6.079655122448457e-06, -2.384184699621983e-05, -2.503394853192731e-06, -1.9073486328125e-06, -0.0001392364501953125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -9.012222290039062e-05, -1.1444091796875e-05, -0.0001010894775390625, -5.7220458984375e-06, -3.814697265625e-06, -6.866455078125e-05, 0.0, -8.0108642578125e-05, -3.24249267578125e-05, -0.0004138946533203125, -5.14984130859375e-05, 0.0, 0.0, -2.86102294921875e-05, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-06, -0.02707958221435547, -0.0002346038818359375, -0.0008087158203125, -0.0002002716064453125, -0.0007114410400390625, -0.0058536529541015625, 0.0, -0.000591278076171875, 0.0, -3.0517578125e-05, 0.0, -0.0021085739135742188, -1.9073486328125e-06, -0.01795673370361328, 0.0, -0.0005092620849609375, -1.9073486328125e-06, -0.0004100799560546875, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-05, -0.03958320617675781, -2.288818359375e-05, 0.0, -0.000736236572265625, -0.04812321066856384, -5.7220458984375e-06, -2.09808349609375e-05, -0.0001392364501953125, -7.62939453125e-06, -0.0003509521484375, 0.0, -0.0035257339477539062, 0.0, -3.814697265625e-06, -0.0001735687255859375, 0.0, -0.005660057067871094, -7.355188427027315e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frost", "Nova", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Frost", " ", "Nova", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 41, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Frozen", "<EOS>", 109]}, {"inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.<UNK>()\n", "score": -3.3416782616587852, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FrostNova", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frost Nova"}, {"_type": "Template16"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template30"}}, "_type": "Call"}}], "iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -0.000576019287109375, -2.09808349609375e-05, -2.09808349609375e-05, -9.5367431640625e-06, -1.1205610462639015e-05, -5.125993993715383e-06, -4.768370445162873e-07, -5.7220458984375e-06, -3.814697265625e-05, -0.0032939910888671875, -3.814697265625e-06, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001354217529296875, 0.0, -7.43865966796875e-05, -0.0003948211669921875, -2.6702880859375e-05, -9.5367431640625e-06, -1.52587890625e-05, -6.079655122448457e-06, -2.384184699621983e-05, -2.503394853192731e-06, -1.9073486328125e-06, -0.0001392364501953125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -9.012222290039062e-05, -1.1444091796875e-05, -0.0001010894775390625, -5.7220458984375e-06, -3.814697265625e-06, -6.866455078125e-05, 0.0, -8.0108642578125e-05, -3.24249267578125e-05, -0.0004138946533203125, -5.14984130859375e-05, 0.0, 0.0, -2.86102294921875e-05, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-06, -0.02707958221435547, -0.0002346038818359375, -0.0008087158203125, -0.0002002716064453125, -0.0007114410400390625, -0.0058536529541015625, 0.0, -0.000591278076171875, 0.0, -3.0517578125e-05, 0.0, -0.0021085739135742188, -1.9073486328125e-06, -0.01795673370361328, 0.0, -0.0005092620849609375, -1.9073486328125e-06, -0.0004100799560546875, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.271304130554199, -1.9073486328125e-06, 0.0, -7.43865966796875e-05, -0.007850050926208496, 0.0, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Frost", "Nova", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Frost", " ", "Nova", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 41, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 121, 15, 116, 41, "<UNK>", "<EOS>", 109]}, {"inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.die(self)\n", "score": -4.809500574967501, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FrostNova", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frost Nova"}, {"_type": "Template16"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}], "iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -0.000576019287109375, -2.09808349609375e-05, -2.09808349609375e-05, -9.5367431640625e-06, -1.1205610462639015e-05, -5.125993993715383e-06, -4.768370445162873e-07, -5.7220458984375e-06, -3.814697265625e-05, -0.0032939910888671875, -3.814697265625e-06, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001354217529296875, 0.0, -7.43865966796875e-05, -0.0003948211669921875, -2.6702880859375e-05, -9.5367431640625e-06, -1.52587890625e-05, -6.079655122448457e-06, -2.384184699621983e-05, -2.503394853192731e-06, -1.9073486328125e-06, -0.0001392364501953125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -9.012222290039062e-05, -1.1444091796875e-05, -0.0001010894775390625, -5.7220458984375e-06, -3.814697265625e-06, -6.866455078125e-05, 0.0, -8.0108642578125e-05, -3.24249267578125e-05, -0.0004138946533203125, -5.14984130859375e-05, 0.0, 0.0, -2.86102294921875e-05, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-06, -0.02707958221435547, -0.0002346038818359375, -0.0008087158203125, -0.0002002716064453125, -0.0007114410400390625, -0.0058536529541015625, 0.0, -0.000591278076171875, 0.0, -3.0517578125e-05, 0.0, -0.0021085739135742188, -1.9073486328125e-06, -0.01795673370361328, 0.0, -0.0005092620849609375, -1.9073486328125e-06, -0.0004100799560546875, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-05, -0.03958320617675781, -2.288818359375e-05, 0.0, -0.000736236572265625, -4.703632831573486, -5.841255187988281e-06, -0.00012969970703125, -0.0029439926147460938, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frost", "Nova", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Frost", " ", "Nova", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 41, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "die", "<EOS>", 216, 74, 109]}, {"inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.<UNK>(self)\n", "score": -5.138527870080111, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FrostNova", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frost Nova"}, {"_type": "Template16"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}], "iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -0.000576019287109375, -2.09808349609375e-05, -2.09808349609375e-05, -9.5367431640625e-06, -1.1205610462639015e-05, -5.125993993715383e-06, -4.768370445162873e-07, -5.7220458984375e-06, -3.814697265625e-05, -0.0032939910888671875, -3.814697265625e-06, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001354217529296875, 0.0, -7.43865966796875e-05, -0.0003948211669921875, -2.6702880859375e-05, -9.5367431640625e-06, -1.52587890625e-05, -6.079655122448457e-06, -2.384184699621983e-05, -2.503394853192731e-06, -1.9073486328125e-06, -0.0001392364501953125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -9.012222290039062e-05, -1.1444091796875e-05, -0.0001010894775390625, -5.7220458984375e-06, -3.814697265625e-06, -6.866455078125e-05, 0.0, -8.0108642578125e-05, -3.24249267578125e-05, -0.0004138946533203125, -5.14984130859375e-05, 0.0, 0.0, -2.86102294921875e-05, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-06, -0.02707958221435547, -0.0002346038818359375, -0.0008087158203125, -0.0002002716064453125, -0.0007114410400390625, -0.0058536529541015625, 0.0, -0.000591278076171875, 0.0, -3.0517578125e-05, 0.0, -0.0021085739135742188, -1.9073486328125e-06, -0.01795673370361328, 0.0, -0.0005092620849609375, -1.9073486328125e-06, -0.0004100799560546875, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-05, -0.03958320617675781, -2.288818359375e-05, 0.0, -0.000736236572265625, -3.8819873332977295, -1.33514404296875e-05, -0.16483402252197266, -0.9889049530029297, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frost", "Nova", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Frost", " ", "Nova", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 41, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "<UNK>", "<EOS>", 216, 74, 109]}, {"inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.add_buff(Buff(Frozen()))\n", "score": -5.3404017373360375, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FrostNova", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frost Nova"}, {"_type": "Template16"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Frozen", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -0.000576019287109375, -2.09808349609375e-05, -2.09808349609375e-05, -9.5367431640625e-06, -1.1205610462639015e-05, -5.125993993715383e-06, -4.768370445162873e-07, -5.7220458984375e-06, -3.814697265625e-05, -0.0032939910888671875, -3.814697265625e-06, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001354217529296875, 0.0, -7.43865966796875e-05, -0.0003948211669921875, -2.6702880859375e-05, -9.5367431640625e-06, -1.52587890625e-05, -6.079655122448457e-06, -2.384184699621983e-05, -2.503394853192731e-06, -1.9073486328125e-06, -0.0001392364501953125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -9.012222290039062e-05, -1.1444091796875e-05, -0.0001010894775390625, -5.7220458984375e-06, -3.814697265625e-06, -6.866455078125e-05, 0.0, -8.0108642578125e-05, -3.24249267578125e-05, -0.0004138946533203125, -5.14984130859375e-05, 0.0, 0.0, -2.86102294921875e-05, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-06, -0.02707958221435547, -0.0002346038818359375, -0.0008087158203125, -0.0002002716064453125, -0.0007114410400390625, -5.183163642883301, -0.031177520751953125, -7.62939453125e-06, 0.0, -6.29425048828125e-05, -1.52587890625e-05, -0.001338958740234375, -0.0001373291015625, -0.0003814697265625, 0.0, -7.2479248046875e-05, -0.0001888275146484375, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.0002231597900390625, -1.9073486328125e-06, -0.0067901611328125, 0.0, -0.0005741119384765625, -3.814697265625e-06, -0.000247955322265625, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.00415802001953125, -1.71661376953125e-05, 0.0, -0.00067901611328125, -0.06672713160514832, -7.748603820800781e-06, -9.5367431640625e-06, -0.000186920166015625, -7.62939453125e-06, -0.0003147125244140625, 0.0, -0.003612518310546875, 0.0, -3.814697265625e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.005021810065954924, -9.202858927892521e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frost", "Nova", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Frost", " ", "Nova", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Frozen", "<EOS>", 109]}, {"inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.Nova(Buff(Frozen()))\n", "score": -5.387796399434706, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FrostNova", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frost Nova"}, {"_type": "Template16"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "Nova", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Frozen", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}], "iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -0.000576019287109375, -2.09808349609375e-05, -2.09808349609375e-05, -9.5367431640625e-06, -1.1205610462639015e-05, -5.125993993715383e-06, -4.768370445162873e-07, -5.7220458984375e-06, -3.814697265625e-05, -0.0032939910888671875, -3.814697265625e-06, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001354217529296875, 0.0, -7.43865966796875e-05, -0.0003948211669921875, -2.6702880859375e-05, -9.5367431640625e-06, -1.52587890625e-05, -6.079655122448457e-06, -2.384184699621983e-05, -2.503394853192731e-06, -1.9073486328125e-06, -0.0001392364501953125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -9.012222290039062e-05, -1.1444091796875e-05, -0.0001010894775390625, -5.7220458984375e-06, -3.814697265625e-06, -6.866455078125e-05, 0.0, -8.0108642578125e-05, -3.24249267578125e-05, -0.0004138946533203125, -5.14984130859375e-05, 0.0, 0.0, -2.86102294921875e-05, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-06, -0.02707958221435547, -0.0002346038818359375, -0.0008087158203125, -0.0002002716064453125, -0.0007114410400390625, -0.0058536529541015625, 0.0, -0.000591278076171875, 0.0, -3.0517578125e-05, 0.0, -0.0021085739135742188, -1.9073486328125e-06, -0.01795673370361328, 0.0, -0.0005092620849609375, -1.9073486328125e-06, -0.0004100799560546875, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-05, -0.03958320617675781, -2.288818359375e-05, 0.0, -0.000736236572265625, -4.901475429534912, -0.0001558065414428711, -4.57763671875e-05, -0.3641672134399414, -5.340576171875e-05, -0.0008335113525390625, 0.0, -0.016142845153808594, 0.0, -1.9073486328125e-06, -0.000213623046875, -1.9073486328125e-06, -0.0018382056150585413, -7.855810690671206e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frost", "Nova", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Frost", " ", "Nova", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 41, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "Nova", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Frozen", "<EOS>", 109]}, {"inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.<UNK>.minions:\n            minion.add_buff(Buff(Frozen()))\n", "score": -5.620550380645113, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FrostNova", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frost Nova"}, {"_type": "Template16"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Frozen", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}], "iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -0.000576019287109375, -2.09808349609375e-05, -2.09808349609375e-05, -9.5367431640625e-06, -1.1205610462639015e-05, -5.125993993715383e-06, -4.768370445162873e-07, -5.7220458984375e-06, -3.814697265625e-05, -0.0032939910888671875, -3.814697265625e-06, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001354217529296875, 0.0, -7.43865966796875e-05, -0.0003948211669921875, -2.6702880859375e-05, -9.5367431640625e-06, -1.52587890625e-05, -6.079655122448457e-06, -2.384184699621983e-05, -2.503394853192731e-06, -1.9073486328125e-06, -0.0001392364501953125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -9.012222290039062e-05, -1.1444091796875e-05, -0.0001010894775390625, -5.7220458984375e-06, -3.814697265625e-06, -6.866455078125e-05, 0.0, -8.0108642578125e-05, -3.24249267578125e-05, -0.0004138946533203125, -5.14984130859375e-05, 0.0, 0.0, -2.86102294921875e-05, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-06, -0.02707958221435547, -0.0002346038818359375, -0.0008087158203125, -0.0002002716064453125, -0.0007114410400390625, -0.0058536529541015625, 0.0, -0.000591278076171875, 0.0, -3.0517578125e-05, 0.0, -0.0021085739135742188, -1.9073486328125e-06, -5.457318305969238, 0.0, -0.025990726426243782, 0.0, -0.0006561279296875, -9.72747802734375e-05, -3.814697265625e-06, -1.52587890625e-05, -0.030042648315429688, -2.09808349609375e-05, 0.0, -0.0007076263427734375, -0.051971301436424255, -5.841255187988281e-06, -2.09808349609375e-05, -0.00012969970703125, -7.62939453125e-06, -0.0002994537353515625, 0.0, -0.0033521652221679688, 0.0, -3.814697265625e-06, -0.0001659393310546875, 0.0, -0.006155133247375488, -7.498236664105207e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frost", "Nova", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Frost", " ", "Nova", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 41, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "<UNK>", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Frozen", "<EOS>", 109]}, {"inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.<UNK>(Buff(Frozen()))\n", "score": -5.655746457585451, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FrostNova", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frost Nova"}, {"_type": "Template16"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Frozen", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}], "iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -0.000576019287109375, -2.09808349609375e-05, -2.09808349609375e-05, -9.5367431640625e-06, -1.1205610462639015e-05, -5.125993993715383e-06, -4.768370445162873e-07, -5.7220458984375e-06, -3.814697265625e-05, -0.0032939910888671875, -3.814697265625e-06, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001354217529296875, 0.0, -7.43865966796875e-05, -0.0003948211669921875, -2.6702880859375e-05, -9.5367431640625e-06, -1.52587890625e-05, -6.079655122448457e-06, -2.384184699621983e-05, -2.503394853192731e-06, -1.9073486328125e-06, -0.0001392364501953125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -9.012222290039062e-05, -1.1444091796875e-05, -0.0001010894775390625, -5.7220458984375e-06, -3.814697265625e-06, -6.866455078125e-05, 0.0, -8.0108642578125e-05, -3.24249267578125e-05, -0.0004138946533203125, -5.14984130859375e-05, 0.0, 0.0, -2.86102294921875e-05, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-06, -0.02707958221435547, -0.0002346038818359375, -0.0008087158203125, -0.0002002716064453125, -0.0007114410400390625, -0.0058536529541015625, 0.0, -0.000591278076171875, 0.0, -3.0517578125e-05, 0.0, -0.0021085739135742188, -1.9073486328125e-06, -0.01795673370361328, 0.0, -0.0005092620849609375, -1.9073486328125e-06, -0.0004100799560546875, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-05, -0.03958320617675781, -2.288818359375e-05, 0.0, -0.000736236572265625, -3.8819873332977295, -1.33514404296875e-05, -0.16483402252197266, -0.6960773468017578, -0.0075531005859375, -0.02684307098388672, 0.0, -0.7732621431350708, 0.0, -7.62939453125e-06, -0.00020599365234375, -1.9073486328125e-06, -0.0020774591248482466, -9.48894812609069e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frost", "Nova", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Frost", " ", "Nova", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 41, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "<UNK>", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Frozen", "<EOS>", 109]}, {"inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.change_temp_attack(Buff(Frozen()))\n", "score": -5.76657783863277, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FrostNova", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frost Nova"}, {"_type": "Template16"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Frozen", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}], "iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -0.000576019287109375, -2.09808349609375e-05, -2.09808349609375e-05, -9.5367431640625e-06, -1.1205610462639015e-05, -5.125993993715383e-06, -4.768370445162873e-07, -5.7220458984375e-06, -3.814697265625e-05, -0.0032939910888671875, -3.814697265625e-06, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001354217529296875, 0.0, -7.43865966796875e-05, -0.0003948211669921875, -2.6702880859375e-05, -9.5367431640625e-06, -1.52587890625e-05, -6.079655122448457e-06, -2.384184699621983e-05, -2.503394853192731e-06, -1.9073486328125e-06, -0.0001392364501953125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -9.012222290039062e-05, -1.1444091796875e-05, -0.0001010894775390625, -5.7220458984375e-06, -3.814697265625e-06, -6.866455078125e-05, 0.0, -8.0108642578125e-05, -3.24249267578125e-05, -0.0004138946533203125, -5.14984130859375e-05, 0.0, 0.0, -2.86102294921875e-05, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-06, -0.02707958221435547, -0.0002346038818359375, -0.0008087158203125, -0.0002002716064453125, -0.0007114410400390625, -0.0058536529541015625, 0.0, -0.000591278076171875, 0.0, -3.0517578125e-05, 0.0, -0.0021085739135742188, -1.9073486328125e-06, -0.01795673370361328, 0.0, -0.0005092620849609375, -1.9073486328125e-06, -0.0004100799560546875, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-05, -0.03958320617675781, -2.288818359375e-05, 0.0, -0.000736236572265625, -5.5412068367004395, -7.748603820800781e-06, -7.62939453125e-05, -0.08794498443603516, -7.2479248046875e-05, -0.0033817291259765625, 0.0, -0.027945518493652344, 0.0, -3.814697265625e-06, -0.0002536773681640625, 0.0, -0.002796768443658948, -9.977775334846228e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frost", "Nova", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Frost", " ", "Nova", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 41, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "change_temp_attack", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Frozen", "<EOS>", 109]}, {"inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Damage()))\n", "score": -5.772580950772067, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FrostNova", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frost Nova"}, {"_type": "Template16"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Damage", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}], "iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -0.000576019287109375, -2.09808349609375e-05, -2.09808349609375e-05, -9.5367431640625e-06, -1.1205610462639015e-05, -5.125993993715383e-06, -4.768370445162873e-07, -5.7220458984375e-06, -3.814697265625e-05, -0.0032939910888671875, -3.814697265625e-06, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001354217529296875, 0.0, -7.43865966796875e-05, -0.0003948211669921875, -2.6702880859375e-05, -9.5367431640625e-06, -1.52587890625e-05, -6.079655122448457e-06, -2.384184699621983e-05, -2.503394853192731e-06, -1.9073486328125e-06, -0.0001392364501953125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -9.012222290039062e-05, -1.1444091796875e-05, -0.0001010894775390625, -5.7220458984375e-06, -3.814697265625e-06, -6.866455078125e-05, 0.0, -8.0108642578125e-05, -3.24249267578125e-05, -0.0004138946533203125, -5.14984130859375e-05, 0.0, 0.0, -2.86102294921875e-05, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-06, -0.02707958221435547, -0.0002346038818359375, -0.0008087158203125, -0.0002002716064453125, -0.0007114410400390625, -0.0058536529541015625, 0.0, -0.000591278076171875, 0.0, -3.0517578125e-05, 0.0, -0.0021085739135742188, -1.9073486328125e-06, -0.01795673370361328, 0.0, -0.0005092620849609375, -1.9073486328125e-06, -0.0004100799560546875, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-05, -0.03958320617675781, -2.288818359375e-05, 0.0, -0.000736236572265625, -0.04812321066856384, -5.7220458984375e-06, -2.09808349609375e-05, -0.0001392364501953125, -7.62939453125e-06, -0.0003509521484375, 0.0, -0.0035257339477539062, 0.0, -3.814697265625e-06, -0.0001735687255859375, 0.0, -5.615813255310059, -0.0016286367317661643, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frost", "Nova", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Frost", " ", "Nova", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 103, 129, 41, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Damage", "<EOS>", 109]}, {"inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Frozen()))\n        game.other_player.draw.<UNK>()\n", "score": -6.129306915438178, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FrostNova", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frost Nova"}, {"_type": "Template16"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Frozen", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}], "iter": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, {"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "draw", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -0.000576019287109375, -2.09808349609375e-05, -2.09808349609375e-05, -9.5367431640625e-06, -1.1205610462639015e-05, -5.125993993715383e-06, -4.768370445162873e-07, -5.7220458984375e-06, -3.814697265625e-05, -0.0032939910888671875, -3.814697265625e-06, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001354217529296875, 0.0, -7.43865966796875e-05, -0.0003948211669921875, -2.6702880859375e-05, -9.5367431640625e-06, -1.52587890625e-05, -6.079655122448457e-06, -2.384184699621983e-05, -2.503394853192731e-06, -1.9073486328125e-06, -0.0001392364501953125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -9.012222290039062e-05, -1.1444091796875e-05, -0.0001010894775390625, -5.7220458984375e-06, -3.814697265625e-06, -6.866455078125e-05, 0.0, -8.0108642578125e-05, -3.24249267578125e-05, -0.0004138946533203125, -5.14984130859375e-05, 0.0, 0.0, -2.86102294921875e-05, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-06, -3.692471504211426, -0.0001316070556640625, -0.019303321838378906, -0.005476951599121094, -0.0011014938354492188, -0.02413177490234375, 0.0, -0.0005741119384765625, 0.0, -3.62396240234375e-05, 0.0, -0.0065059661865234375, -1.9073486328125e-06, -0.011476516723632812, 0.0, -0.000545501708984375, 0.0, -0.000194549560546875, -5.340576171875e-05, -1.9073486328125e-06, -2.09808349609375e-05, -0.03872871398925781, -1.71661376953125e-05, 0.0, -0.0007781982421875, -0.05201411619782448, -7.748603820800781e-06, -1.52587890625e-05, -0.0001773834228515625, -7.62939453125e-06, -0.0003757476806640625, 0.0, -0.0040264129638671875, 0.0, -3.814697265625e-06, -0.000171661376953125, 0.0, -0.005542755126953125, -7.629368337802589e-05, -0.0013217926025390625, -2.6702880859375e-05, -0.0001354217529296875, -0.03586387634277344, 0.0, 0.0, -0.5606288909912109, 0.0, -0.9944543838500977, 0.0, -0.00060272216796875, 0.0, -0.0001354217529296875, 0.0, -0.009718179702758789, -3.814697265625e-06, -0.654651403427124, -7.62939453125e-06, -0.0018728967988863587, -1.919269561767578e-05, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Frost", "Nova", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Frost", " ", "Nova", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 103, 129, 41, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Frozen", "<EOS>", 102, 128, 18, 121, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>", "<UNK>", "<EOS>", 109]}, {"inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        minion.die(self)\n", "score": -10.064894199303012, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FrostNova", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}]}, {"_type": "Template13_stmt_seq"}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -0.000576019287109375, -2.09808349609375e-05, -2.09808349609375e-05, -9.5367431640625e-06, -1.1205610462639015e-05, -5.125993993715383e-06, -4.768370445162873e-07, -5.7220458984375e-06, -3.814697265625e-05, -0.0032939910888671875, -3.814697265625e-06, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001354217529296875, 0.0, -7.43865966796875e-05, -7.856480598449707, -6.103515625e-05, -0.01479339599609375, -1.3370795249938965, -4.0531158447265625e-06, -0.0030040740966796875, -0.01366424560546875, -0.8354969024658203, -7.82012939453125e-05], "choice_history": [93, 145, 230, 101, 125, "Frost", "Nova", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 15, 116, 41, "die", "<EOS>", 216, 74, 109, 109]}, {"inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        minion.<UNK>(player.effective_spell_damage(4), self)\n", "score": -10.46389758580051, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FrostNova", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template20"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}, {"_type": "Template13_stmt_seq"}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -0.000576019287109375, -2.09808349609375e-05, -2.09808349609375e-05, -9.5367431640625e-06, -1.1205610462639015e-05, -5.125993993715383e-06, -4.768370445162873e-07, -5.7220458984375e-06, -3.814697265625e-05, -0.0032939910888671875, -3.814697265625e-06, 0.0, -7.748603820800781e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001354217529296875, 0.0, -7.43865966796875e-05, -7.856480598449707, -6.103515625e-05, -0.01479339599609375, -2.013300895690918, -3.933906555175781e-06, -0.013948440551757812, -0.03439044952392578, -0.00046539306640625, -4.57763671875e-05, 0.0, -0.0010013580322265625, -0.00011444091796875, 0.0, -3.814697265625e-06, -0.48316287994384766, -6.29425048828125e-05, -0.04183006286621094, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frost", "Nova", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 15, 116, 41, "<UNK>", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 76, 74, 109, 109]}, {"inferred_code": "super().use(player, game)\n", "score": -18.019177436828613, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -0.000576019287109375, -2.09808349609375e-05, -12.64771842956543, -5.370854377746582], "choice_history": [93, 145, 230, 108, 109]}, {"inferred_code": "", "score": -19.314542770385742, "model_output": {"_type": "Module", "body": []}, "score_history": [-7.62939453125e-06, -0.000576019287109375, -19.3139591217041], "choice_history": [93, 145, 228]}], "index": 36}
{"beams": [{"inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -0.10578431600487193, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FrostShock", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template14"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Frozen", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.33514404296875e-05, -3.814697265625e-06, -9.918212890625e-05, -1.71661376953125e-05, -1.311301275563892e-06, -2.6226029149256647e-05, 0.0, -1.52587890625e-05, -2.86102294921875e-05, -0.0002193450927734375, -1.71661376953125e-05, -1.9073486328125e-06, -7.987013304955326e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.24249267578125e-05, -7.62939453125e-06, -9.34600830078125e-05, -0.000263214111328125, -7.62939453125e-05, -2.288818359375e-05, -3.814697265625e-06, -3.099436753473128e-06, -2.372264498262666e-05, -2.1457672119140625e-06, -3.576278118089249e-07, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -0.00048589700600132346, -1.9073486328125e-06, -0.000133514404296875, 0.0, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.000240325927734375, -1.9073486328125e-06, -0.027355194091796875, 0.0, -0.0002803802490234375, 0.0, -5.340576171875e-05, -0.000102996826171875, -0.00115966796875, -1.52587890625e-05, -6.67572021484375e-05, 0.0, -9.1552734375e-05, 0.0, -0.0002269744873046875, -1.9073486328125e-06, -0.0014696121215820312, -4.38690185546875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001888275146484375, -3.814697265625e-06, 0.0, 0.0, -0.0004367828369140625, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, -9.655952453613281e-06, -0.0018310546875, -9.5367431640625e-06, -0.0034542083740234375, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -7.05718994140625e-05, -0.00029071097378619015, 0.0, -2.09808349609375e-05, -0.0003757476806640625, -2.47955322265625e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.0001354217529296875, -0.00011253355478402227, -1.9073486328125e-06, 0.0, -0.00447845458984375, -0.0003185272216796875, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -0.009077072143554688, -1.52587890625e-05, 0.0, -0.00226593017578125, -0.0464591383934021, -7.748603820800781e-06, -6.29425048828125e-05, -0.0004596710205078125, -7.62939453125e-06, -0.00038909912109375, -1.9073486328125e-06, -0.000847935676574707, -4.76837158203125e-05, -1.33514404296875e-05, -0.0001888275146484375, -3.814697265625e-06, -0.000990152359008789, -0.000156402587890625, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Frost", "Shock", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Frost", " ", "Shock", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 102, 128, 18, 123, 15, 116, 52, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Frozen", "<EOS>", 109]}, {"inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "score": -3.542432148398518, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FrostShock", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template14"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.33514404296875e-05, -3.814697265625e-06, -9.918212890625e-05, -1.71661376953125e-05, -1.311301275563892e-06, -2.6226029149256647e-05, 0.0, -1.52587890625e-05, -2.86102294921875e-05, -0.0002193450927734375, -1.71661376953125e-05, -1.9073486328125e-06, -7.987013304955326e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.24249267578125e-05, -7.62939453125e-06, -9.34600830078125e-05, -0.000263214111328125, -7.62939453125e-05, -2.288818359375e-05, -3.814697265625e-06, -3.099436753473128e-06, -2.372264498262666e-05, -2.1457672119140625e-06, -3.576278118089249e-07, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -0.00048589700600132346, -1.9073486328125e-06, -0.000133514404296875, 0.0, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.000240325927734375, -1.9073486328125e-06, -0.027355194091796875, 0.0, -0.0002803802490234375, 0.0, -5.340576171875e-05, -0.000102996826171875, -0.00115966796875, -1.52587890625e-05, -6.67572021484375e-05, 0.0, -9.1552734375e-05, 0.0, -0.0002269744873046875, -1.9073486328125e-06, -0.0014696121215820312, -4.38690185546875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001888275146484375, -3.814697265625e-06, 0.0, 0.0, -0.0004367828369140625, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, -9.655952453613281e-06, -0.0018310546875, -9.5367431640625e-06, -0.0034542083740234375, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -7.05718994140625e-05, -0.00029071097378619015, 0.0, -2.09808349609375e-05, -0.0003757476806640625, -2.47955322265625e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.0001354217529296875, -0.00011253355478402227, -1.9073486328125e-06, 0.0, -0.00447845458984375, -0.0003185272216796875, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -0.009077072143554688, -1.52587890625e-05, 0.0, -0.00226593017578125, -3.4799113273620605, 0.0, -0.00011444091796875, -1.9073486328125e-05, -3.4332275390625e-05, -3.814697265625e-06, 0.0, -8.58306884765625e-05, -0.00018334388732910156, -2.0265579223632812e-06, 0.0, -0.0056743621826171875, -0.0002593994140625, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Frost", "Shock", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Frost", " ", "Shock", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 109]}, {"inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.change_attack(2)\n", "score": -4.886120874823689, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FrostShock", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template14"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.33514404296875e-05, -3.814697265625e-06, -9.918212890625e-05, -1.71661376953125e-05, -1.311301275563892e-06, -2.6226029149256647e-05, 0.0, -1.52587890625e-05, -2.86102294921875e-05, -0.0002193450927734375, -1.71661376953125e-05, -1.9073486328125e-06, -7.987013304955326e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.24249267578125e-05, -7.62939453125e-06, -9.34600830078125e-05, -0.000263214111328125, -7.62939453125e-05, -2.288818359375e-05, -3.814697265625e-06, -3.099436753473128e-06, -2.372264498262666e-05, -2.1457672119140625e-06, -3.576278118089249e-07, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -0.00048589700600132346, -1.9073486328125e-06, -0.000133514404296875, 0.0, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.000240325927734375, -1.9073486328125e-06, -0.027355194091796875, 0.0, -0.0002803802490234375, 0.0, -5.340576171875e-05, -0.000102996826171875, -0.00115966796875, -1.52587890625e-05, -6.67572021484375e-05, 0.0, -9.1552734375e-05, 0.0, -0.0002269744873046875, -1.9073486328125e-06, -0.0014696121215820312, -4.38690185546875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001888275146484375, -3.814697265625e-06, 0.0, 0.0, -0.0004367828369140625, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, -9.655952453613281e-06, -0.0018310546875, -9.5367431640625e-06, -0.0034542083740234375, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -7.05718994140625e-05, -0.00029071097378619015, 0.0, -2.09808349609375e-05, -0.0003757476806640625, -2.47955322265625e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.0001354217529296875, -0.00011253355478402227, -1.9073486328125e-06, 0.0, -0.00447845458984375, -0.0003185272216796875, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -0.009077072143554688, -1.52587890625e-05, 0.0, -0.00226593017578125, -4.827975749969482, -3.933906555175781e-06, -3.814697265625e-06, -0.0019474029541015625, -4.76837158203125e-05], "choice_history": [93, 145, 230, 101, 125, "Frost", "Shock", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Frost", " ", "Shock", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 69, 109]}, {"inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.<UNK>()\n", "score": -5.4604824077502485, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FrostShock", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template14"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.33514404296875e-05, -3.814697265625e-06, -9.918212890625e-05, -1.71661376953125e-05, -1.311301275563892e-06, -2.6226029149256647e-05, 0.0, -1.52587890625e-05, -2.86102294921875e-05, -0.0002193450927734375, -1.71661376953125e-05, -1.9073486328125e-06, -7.987013304955326e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.24249267578125e-05, -7.62939453125e-06, -9.34600830078125e-05, -0.000263214111328125, -7.62939453125e-05, -2.288818359375e-05, -3.814697265625e-06, -3.099436753473128e-06, -2.372264498262666e-05, -2.1457672119140625e-06, -3.576278118089249e-07, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -0.00048589700600132346, -1.9073486328125e-06, -0.000133514404296875, 0.0, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.000240325927734375, -1.9073486328125e-06, -0.027355194091796875, 0.0, -0.0002803802490234375, 0.0, -5.340576171875e-05, -0.000102996826171875, -0.00115966796875, -1.52587890625e-05, -6.67572021484375e-05, 0.0, -9.1552734375e-05, 0.0, -0.0002269744873046875, -1.9073486328125e-06, -0.0014696121215820312, -4.38690185546875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001888275146484375, -3.814697265625e-06, 0.0, 0.0, -0.0004367828369140625, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, -9.655952453613281e-06, -0.0018310546875, -9.5367431640625e-06, -0.0034542083740234375, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -7.05718994140625e-05, -0.00029071097378619015, 0.0, -2.09808349609375e-05, -0.0003757476806640625, -2.47955322265625e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.0001354217529296875, -0.00011253355478402227, -1.9073486328125e-06, 0.0, -0.00447845458984375, -0.0003185272216796875, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -4.716052055358887, -3.24249267578125e-05, 0.0, -0.3061075210571289, -0.3934873044490814, -5.7220458984375e-06, -1.33514404296875e-05], "choice_history": [93, 145, 230, 101, 125, "Frost", "Shock", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Frost", " ", "Shock", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 102, 128, 18, 121, 15, 116, 52, "<UNK>", "<EOS>", 109]}, {"inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -5.6699085202232595, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FrostShock", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template14"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Frozen", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.33514404296875e-05, -3.814697265625e-06, -9.918212890625e-05, -1.71661376953125e-05, -1.311301275563892e-06, -2.6226029149256647e-05, 0.0, -1.52587890625e-05, -2.86102294921875e-05, -0.0002193450927734375, -1.71661376953125e-05, -1.9073486328125e-06, -7.987013304955326e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.24249267578125e-05, -7.62939453125e-06, -9.34600830078125e-05, -0.000263214111328125, -7.62939453125e-05, -2.288818359375e-05, -3.814697265625e-06, -3.099436753473128e-06, -2.372264498262666e-05, -2.1457672119140625e-06, -3.576278118089249e-07, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -0.00048589700600132346, -1.9073486328125e-06, -0.000133514404296875, 0.0, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.000240325927734375, -1.9073486328125e-06, -0.027355194091796875, 0.0, -0.0002803802490234375, 0.0, -5.340576171875e-05, -0.000102996826171875, -0.00115966796875, -1.52587890625e-05, -6.67572021484375e-05, 0.0, -9.1552734375e-05, 0.0, -0.0002269744873046875, -1.9073486328125e-06, -0.0014696121215820312, -4.38690185546875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001888275146484375, -3.814697265625e-06, 0.0, 0.0, -0.0004367828369140625, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, -9.655952453613281e-06, -0.0018310546875, -9.5367431640625e-06, -0.0034542083740234375, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -7.05718994140625e-05, -0.00029071097378619015, 0.0, -2.09808349609375e-05, -0.0003757476806640625, -2.47955322265625e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.0001354217529296875, -0.00011253355478402227, -1.9073486328125e-06, 0.0, -5.59272575378418, -2.47955322265625e-05, -1.52587890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -0.0008678436279296875, -2.288818359375e-05, 0.0, -0.0032482147216796875, -0.029501833021640778, -1.1444091796875e-05, -1.71661376953125e-05, -0.0006580352783203125, -5.7220458984375e-06, -0.0005283355712890625, -1.9073486328125e-06, -0.0008870363235473633, -3.4332275390625e-05, -1.33514404296875e-05, -0.0002117156982421875, -3.814697265625e-06, -0.001000046730041504, -0.00012671947479248047, -7.62939453125e-06], "choice_history": [93, 145, 230, 101, 125, "Frost", "Shock", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Frost", " ", "Shock", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 102, 128, 18, 123, 15, 116, 52, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Frozen", "<EOS>", 109]}, {"inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n", "score": -6.376194196020315, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FrostShock", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template14"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "extend", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.33514404296875e-05, -3.814697265625e-06, -9.918212890625e-05, -1.71661376953125e-05, -1.311301275563892e-06, -2.6226029149256647e-05, 0.0, -1.52587890625e-05, -2.86102294921875e-05, -0.0002193450927734375, -1.71661376953125e-05, -1.9073486328125e-06, -7.987013304955326e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.24249267578125e-05, -7.62939453125e-06, -9.34600830078125e-05, -0.000263214111328125, -7.62939453125e-05, -2.288818359375e-05, -3.814697265625e-06, -3.099436753473128e-06, -2.372264498262666e-05, -2.1457672119140625e-06, -3.576278118089249e-07, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -0.00048589700600132346, -1.9073486328125e-06, -0.000133514404296875, 0.0, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.000240325927734375, -1.9073486328125e-06, -0.027355194091796875, 0.0, -0.0002803802490234375, 0.0, -5.340576171875e-05, -0.000102996826171875, -0.00115966796875, -1.52587890625e-05, -6.67572021484375e-05, 0.0, -9.1552734375e-05, 0.0, -0.0002269744873046875, -1.9073486328125e-06, -0.0014696121215820312, -4.38690185546875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001888275146484375, -3.814697265625e-06, 0.0, 0.0, -0.0004367828369140625, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, -9.655952453613281e-06, -0.0018310546875, -9.5367431640625e-06, -5.698317527770996, -1.52587890625e-05, -7.62939453125e-06, -0.00011444091796875, -1.9073486328125e-05, -0.01566438004374504, -1.1920928244535389e-07, -0.01875019073486328, -2.09808349609375e-05, -0.0026187896728515625, 0.0, -0.000225067138671875, -1.9073486328125e-06, -0.0018656253814697266, -0.0001983642578125, -0.00014400482177734375, -3.814697265625e-06, -3.24249267578125e-05, -2.47955322265625e-05, 0.0, -2.6702880859375e-05, 0.0, -0.033435821533203125, -8.0108642578125e-05, -3.62396240234375e-05, 0.0, -0.009351849555969238, 0.0, -0.0009010604699142277, -3.24249267578125e-05, -0.06037139892578125, -0.00028228759765625, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.14495277404785156, -9.5367431640625e-06, -0.035426750779151917, -1.6689286894688848e-06, -0.16161595284938812, -7.283687591552734e-05, -1.52587890625e-05, -0.0001544952392578125, 0.0, -0.04993629455566406, 0.0, -0.000591278076171875, -9.72747802734375e-05, -2.491474151611328e-05, 0.0, -0.07767212390899658, -0.00041031837463378906, -0.026944000273942947, -0.0003407001495361328, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Frost", "Shock", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Frost", " ", "Shock", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "extend", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 109]}, {"inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.increase_health(2)\n", "score": -6.479940850676655, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FrostShock", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template14"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.33514404296875e-05, -3.814697265625e-06, -9.918212890625e-05, -1.71661376953125e-05, -1.311301275563892e-06, -2.6226029149256647e-05, 0.0, -1.52587890625e-05, -2.86102294921875e-05, -0.0002193450927734375, -1.71661376953125e-05, -1.9073486328125e-06, -7.987013304955326e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.24249267578125e-05, -7.62939453125e-06, -9.34600830078125e-05, -0.000263214111328125, -7.62939453125e-05, -2.288818359375e-05, -3.814697265625e-06, -3.099436753473128e-06, -2.372264498262666e-05, -2.1457672119140625e-06, -3.576278118089249e-07, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -0.00048589700600132346, -1.9073486328125e-06, -0.000133514404296875, 0.0, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.000240325927734375, -1.9073486328125e-06, -0.027355194091796875, 0.0, -0.0002803802490234375, 0.0, -5.340576171875e-05, -0.000102996826171875, -0.00115966796875, -1.52587890625e-05, -6.67572021484375e-05, 0.0, -9.1552734375e-05, 0.0, -0.0002269744873046875, -1.9073486328125e-06, -0.0014696121215820312, -4.38690185546875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001888275146484375, -3.814697265625e-06, 0.0, 0.0, -0.0004367828369140625, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, -9.655952453613281e-06, -0.0018310546875, -9.5367431640625e-06, -0.0034542083740234375, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -7.05718994140625e-05, -0.00029071097378619015, 0.0, -2.09808349609375e-05, -0.0003757476806640625, -2.47955322265625e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.0001354217529296875, -0.00011253355478402227, -1.9073486328125e-06, 0.0, -0.00447845458984375, -0.0003185272216796875, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -0.009077072143554688, -1.52587890625e-05, 0.0, -0.00226593017578125, -6.419358253479004, -3.814697265625e-06, -5.7220458984375e-06, -0.004405975341796875, -2.47955322265625e-05], "choice_history": [93, 145, 230, 101, 125, "Frost", "Shock", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Frost", " ", "Shock", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 69, 109]}, {"inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff()\n", "score": -6.531274635733723, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FrostShock", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template14"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.33514404296875e-05, -3.814697265625e-06, -9.918212890625e-05, -1.71661376953125e-05, -1.311301275563892e-06, -2.6226029149256647e-05, 0.0, -1.52587890625e-05, -2.86102294921875e-05, -0.0002193450927734375, -1.71661376953125e-05, -1.9073486328125e-06, -7.987013304955326e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.24249267578125e-05, -7.62939453125e-06, -9.34600830078125e-05, -0.000263214111328125, -7.62939453125e-05, -2.288818359375e-05, -3.814697265625e-06, -3.099436753473128e-06, -2.372264498262666e-05, -2.1457672119140625e-06, -3.576278118089249e-07, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -0.00048589700600132346, -1.9073486328125e-06, -0.000133514404296875, 0.0, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.000240325927734375, -1.9073486328125e-06, -0.027355194091796875, 0.0, -0.0002803802490234375, 0.0, -5.340576171875e-05, -0.000102996826171875, -0.00115966796875, -1.52587890625e-05, -6.67572021484375e-05, 0.0, -9.1552734375e-05, 0.0, -0.0002269744873046875, -1.9073486328125e-06, -0.0014696121215820312, -4.38690185546875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001888275146484375, -3.814697265625e-06, 0.0, 0.0, -0.0004367828369140625, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, -9.655952453613281e-06, -0.0018310546875, -9.5367431640625e-06, -0.0034542083740234375, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -7.05718994140625e-05, -0.00029071097378619015, 0.0, -2.09808349609375e-05, -0.0003757476806640625, -2.47955322265625e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.0001354217529296875, -0.00011253355478402227, -1.9073486328125e-06, 0.0, -0.00447845458984375, -0.0003185272216796875, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -4.716052055358887, -3.24249267578125e-05, 0.0, -0.3061075210571289, -1.4641116857528687, -0.0001659393310546875, -2.09808349609375e-05], "choice_history": [93, 145, 230, 101, 125, "Frost", "Shock", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Frost", " ", "Shock", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 102, 128, 18, 121, 15, 116, 52, "add_buff", "<EOS>", 109]}, {"inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "score": -6.698978264950426, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FrostShock", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template14"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.33514404296875e-05, -3.814697265625e-06, -9.918212890625e-05, -1.71661376953125e-05, -1.311301275563892e-06, -2.6226029149256647e-05, 0.0, -1.52587890625e-05, -2.86102294921875e-05, -0.0002193450927734375, -1.71661376953125e-05, -1.9073486328125e-06, -7.987013304955326e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.24249267578125e-05, -7.62939453125e-06, -9.34600830078125e-05, -0.000263214111328125, -7.62939453125e-05, -2.288818359375e-05, -3.814697265625e-06, -3.099436753473128e-06, -2.372264498262666e-05, -2.1457672119140625e-06, -3.576278118089249e-07, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -0.00048589700600132346, -1.9073486328125e-06, -0.000133514404296875, 0.0, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.000240325927734375, -1.9073486328125e-06, -0.027355194091796875, 0.0, -0.0002803802490234375, 0.0, -5.340576171875e-05, -0.000102996826171875, -0.00115966796875, -1.52587890625e-05, -6.67572021484375e-05, 0.0, -9.1552734375e-05, 0.0, -0.0002269744873046875, -1.9073486328125e-06, -0.0014696121215820312, -4.38690185546875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001888275146484375, -3.814697265625e-06, 0.0, 0.0, -0.0004367828369140625, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, -9.655952453613281e-06, -6.657526016235352, -7.62939453125e-06, -0.0004978179931640625, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -4.57763671875e-05, 0.0, -0.0001811981201171875, -0.0010155041236430407, 0.0, -3.814697265625e-05, -6.67572021484375e-05, -2.288818359375e-05, -2.6702880859375e-05, 0.0, -0.0001392364501953125, -0.00010526179539738223, -1.9073486328125e-06, 0.0, -0.00534820556640625, -0.000408172607421875, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frost", "Shock", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Frost", " ", "Shock", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 109]}, {"inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_effect(Buff(Frozen()))\n", "score": -7.039938051518845, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FrostShock", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template14"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "add_effect", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Frozen", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.33514404296875e-05, -3.814697265625e-06, -9.918212890625e-05, -1.71661376953125e-05, -1.311301275563892e-06, -2.6226029149256647e-05, 0.0, -1.52587890625e-05, -2.86102294921875e-05, -0.0002193450927734375, -1.71661376953125e-05, -1.9073486328125e-06, -7.987013304955326e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.24249267578125e-05, -7.62939453125e-06, -9.34600830078125e-05, -0.000263214111328125, -7.62939453125e-05, -2.288818359375e-05, -3.814697265625e-06, -3.099436753473128e-06, -2.372264498262666e-05, -2.1457672119140625e-06, -3.576278118089249e-07, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -0.00048589700600132346, -1.9073486328125e-06, -0.000133514404296875, 0.0, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.000240325927734375, -1.9073486328125e-06, -0.027355194091796875, 0.0, -0.0002803802490234375, 0.0, -5.340576171875e-05, -0.000102996826171875, -0.00115966796875, -1.52587890625e-05, -6.67572021484375e-05, 0.0, -9.1552734375e-05, 0.0, -0.0002269744873046875, -1.9073486328125e-06, -0.0014696121215820312, -4.38690185546875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001888275146484375, -3.814697265625e-06, 0.0, 0.0, -0.0004367828369140625, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, -9.655952453613281e-06, -0.0018310546875, -9.5367431640625e-06, -0.0034542083740234375, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -7.05718994140625e-05, -0.00029071097378619015, 0.0, -2.09808349609375e-05, -0.0003757476806640625, -2.47955322265625e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.0001354217529296875, -0.00011253355478402227, -1.9073486328125e-06, 0.0, -0.00447845458984375, -0.0003185272216796875, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -0.009077072143554688, -1.52587890625e-05, 0.0, -0.00226593017578125, -6.717888832092285, -0.00020313262939453125, -0.0012187957763671875, -0.02780628204345703, -2.09808349609375e-05, -0.23265838623046875, -1.9073486328125e-06, -0.002316594123840332, -5.14984130859375e-05, -1.33514404296875e-05, -0.00017547607421875, -1.9073486328125e-06, -0.0013546942500397563, -7.247924077091739e-05, -1.1444091796875e-05], "choice_history": [93, 145, 230, 101, 125, "Frost", "Shock", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Frost", " ", "Shock", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 102, 128, 18, 123, 15, 116, 52, "add_effect", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Frozen", "<EOS>", 109]}, {"inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>,\n            filter_func=lambda character: character.health != target.\n            calculate_max_health() and target.is_minion())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -7.317878341596668, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FrostShock", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template14"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "character"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "character", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "is_minion", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Frozen", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.33514404296875e-05, -3.814697265625e-06, -9.918212890625e-05, -1.71661376953125e-05, -1.311301275563892e-06, -2.6226029149256647e-05, 0.0, -1.52587890625e-05, -2.86102294921875e-05, -0.0002193450927734375, -1.71661376953125e-05, -1.9073486328125e-06, -7.987013304955326e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.24249267578125e-05, -7.62939453125e-06, -9.34600830078125e-05, -0.000263214111328125, -7.62939453125e-05, -2.288818359375e-05, -3.814697265625e-06, -3.099436753473128e-06, -2.372264498262666e-05, -2.1457672119140625e-06, -3.576278118089249e-07, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -0.00048589700600132346, -1.9073486328125e-06, -0.000133514404296875, 0.0, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.000240325927734375, -1.9073486328125e-06, -3.6150102615356445, 0.0, -4.57763671875e-05, 0.0, -4.76837158203125e-05, -4.76837158203125e-05, -0.0009174346923828125, 0.0, -4.38690185546875e-05, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -0.0002536773681640625, -1.9073486328125e-06, -0.0028352737426757812, -2.288818359375e-05, -0.0003662109375, -0.012118339538574219, -7.62939453125e-06, -0.001617431640625, -0.0002422332763671875, -8.20159912109375e-05, -4.00543212890625e-05, -0.002422332763671875, -0.0010814666748046875, -0.0001163482666015625, -0.7820285558700562, -3.933906555175781e-06, -0.3563203811645508, -0.0004215240478515625, -0.0002498626708984375, -5.7220458984375e-05, -0.41196632385253906, -0.0006160736083984375, -0.0040340423583984375, 0.0, -1.52587890625e-05, 0.0, -0.7374430894851685, -6.079673767089844e-06, -0.05814504623413086, -1.1444091796875e-05, -0.0044765472412109375, -0.04921150207519531, -7.62939453125e-06, -0.009322166442871094, -0.00225067138671875, -0.000194549560546875, 0.0, -2.6702880859375e-05, 0.0, -0.5996959209442139, -4.8398935177829117e-05, -0.18110796809196472, 0.0, -0.0004711151123046875, -0.0043163299560546875, -0.0012788772583007812, 0.0, -0.0040721893310546875, 0.0, -0.07060301303863525, -0.00012922286987304688, -0.3130098283290863, -3.457069396972656e-05, -0.000438690185546875, -7.62939453125e-06, -0.00023651123046875, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -0.001155853271484375, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -7.748603820800781e-06, -0.001544952392578125, -1.33514404296875e-05, -0.003204345703125, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -5.91278076171875e-05, 0.0, -0.000102996826171875, -0.0004969821311533451, 0.0, -1.9073486328125e-05, -0.0003719329833984375, -2.86102294921875e-05, -3.814697265625e-05, -3.814697265625e-06, -0.00014495849609375, -0.00010907647083513439, -1.9073486328125e-06, 0.0, -0.0045032501220703125, -0.000308990478515625, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -0.010637283325195312, -1.33514404296875e-05, 0.0, -0.001506805419921875, -0.05871478468179703, -7.748603820800781e-06, -6.103515625e-05, -0.0004482269287109375, -7.62939453125e-06, -0.0003795623779296875, -1.9073486328125e-06, -0.000847935676574707, -4.76837158203125e-05, -1.33514404296875e-05, -0.0001888275146484375, -3.814697265625e-06, -0.0009849071502685547, -0.00015842913126107305, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Frost", "Shock", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Frost", " ", "Shock", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "character", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "character", "<EOS>", "health", "<EOS>", 213, 14, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "is_minion", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 102, 128, 18, 123, 15, 116, 52, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Frozen", "<EOS>", 109]}, {"inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>,\n            filter_func=lambda target: character.health != target.\n            calculate_max_health() and target.is_minion())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -7.320729964470672, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FrostShock", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template14"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "character", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "is_minion", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Frozen", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.33514404296875e-05, -3.814697265625e-06, -9.918212890625e-05, -1.71661376953125e-05, -1.311301275563892e-06, -2.6226029149256647e-05, 0.0, -1.52587890625e-05, -2.86102294921875e-05, -0.0002193450927734375, -1.71661376953125e-05, -1.9073486328125e-06, -7.987013304955326e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.24249267578125e-05, -7.62939453125e-06, -9.34600830078125e-05, -0.000263214111328125, -7.62939453125e-05, -2.288818359375e-05, -3.814697265625e-06, -3.099436753473128e-06, -2.372264498262666e-05, -2.1457672119140625e-06, -3.576278118089249e-07, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -0.00048589700600132346, -1.9073486328125e-06, -0.000133514404296875, 0.0, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.000240325927734375, -1.9073486328125e-06, -3.6150102615356445, 0.0, -4.57763671875e-05, 0.0, -4.76837158203125e-05, -4.76837158203125e-05, -0.0009174346923828125, 0.0, -4.38690185546875e-05, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -0.0002536773681640625, -1.9073486328125e-06, -0.0028352737426757812, -2.288818359375e-05, -0.0003662109375, -0.012118339538574219, -7.62939453125e-06, -0.001617431640625, -0.0002422332763671875, -8.20159912109375e-05, -4.00543212890625e-05, -0.002422332763671875, -0.0010814666748046875, -0.0001163482666015625, -1.341406226158142, -0.00018107891082763672, -0.004870414733886719, -0.0002536773681640625, -0.000301361083984375, -1.9073486328125e-05, -0.3492908477783203, -0.000804901123046875, -0.0017795562744140625, 0.0, -1.33514404296875e-05, 0.0, -0.7671617269515991, -6.079673767089844e-06, -0.05272102355957031, -9.5367431640625e-06, -0.0039730072021484375, -0.05412101745605469, -7.62939453125e-06, -0.00511932373046875, -0.0020999908447265625, -0.000217437744140625, 0.0, -2.86102294921875e-05, 0.0, -0.43941792845726013, -3.9458234823541716e-05, -0.18013495206832886, 0.0, -0.0002613067626953125, -0.0050048828125, -0.0013132095336914062, 0.0, -0.004062652587890625, 0.0, -0.0690455436706543, -0.0001291036605834961, -0.3108525276184082, -3.445148468017578e-05, -0.0004100799560546875, -7.62939453125e-06, -0.000240325927734375, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -0.001140594482421875, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -7.748603820800781e-06, -0.00154876708984375, -1.33514404296875e-05, -0.003253936767578125, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -5.7220458984375e-05, 0.0, -0.000102996826171875, -0.0004918586928397417, 0.0, -1.9073486328125e-05, -0.000370025634765625, -2.86102294921875e-05, -3.814697265625e-05, -3.814697265625e-06, -0.00014495849609375, -0.00010907647083513439, -1.9073486328125e-06, 0.0, -0.004497528076171875, -0.000308990478515625, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -0.010671615600585938, -1.33514404296875e-05, 0.0, -0.00151824951171875, -0.058417998254299164, -7.748603820800781e-06, -6.103515625e-05, -0.0004482269287109375, -7.62939453125e-06, -0.0003795623779296875, -1.9073486328125e-06, -0.000847935676574707, -4.76837158203125e-05, -1.33514404296875e-05, -0.0001888275146484375, -3.814697265625e-06, -0.0009849071502685547, -0.00015842913126107305, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Frost", "Shock", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Frost", " ", "Shock", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "character", "<EOS>", "health", "<EOS>", 213, 14, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "is_minion", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 102, 128, 18, 123, 15, 116, 52, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Frozen", "<EOS>", 109]}, {"inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        game.other_player.hero.damage(player.effective_spell_damage(1), self)\n", "score": -7.354631347964357, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FrostShock", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template14"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.33514404296875e-05, -3.814697265625e-06, -9.918212890625e-05, -1.71661376953125e-05, -1.311301275563892e-06, -2.6226029149256647e-05, 0.0, -1.52587890625e-05, -2.86102294921875e-05, -0.0002193450927734375, -1.71661376953125e-05, -1.9073486328125e-06, -7.987013304955326e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.24249267578125e-05, -7.62939453125e-06, -9.34600830078125e-05, -0.000263214111328125, -7.62939453125e-05, -2.288818359375e-05, -3.814697265625e-06, -3.099436753473128e-06, -2.372264498262666e-05, -2.1457672119140625e-06, -3.576278118089249e-07, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -0.00048589700600132346, -1.9073486328125e-06, -0.000133514404296875, 0.0, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.000240325927734375, -1.9073486328125e-06, -0.027355194091796875, 0.0, -0.0002803802490234375, 0.0, -5.340576171875e-05, -0.000102996826171875, -0.00115966796875, -1.52587890625e-05, -6.67572021484375e-05, 0.0, -9.1552734375e-05, 0.0, -0.0002269744873046875, -1.9073486328125e-06, -0.0014696121215820312, -4.38690185546875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001888275146484375, -3.814697265625e-06, 0.0, 0.0, -0.0004367828369140625, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, -9.655952453613281e-06, -0.0018310546875, -9.5367431640625e-06, -0.0034542083740234375, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -7.05718994140625e-05, -0.00029071097378619015, 0.0, -2.09808349609375e-05, -0.0003757476806640625, -2.47955322265625e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.0001354217529296875, -0.00011253355478402227, -1.9073486328125e-06, 0.0, -0.00447845458984375, -0.0003185272216796875, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -0.009077072143554688, -1.52587890625e-05, 0.0, -6.126473426818848, -0.0002346038818359375, -0.2898416519165039, -7.62939453125e-05, -0.7395668029785156, -3.814697265625e-06, -6.902217864990234e-05, 0.0, -0.01840340532362461, -5.7220458984375e-06, -0.07517857849597931, -7.390969585685525e-06, -0.03846360743045807, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.24249267578125e-05, -1.71661376953125e-05, 0.0, -0.0002346038818359375, -0.0005917549133300781, 0.0, 0.0, -0.011014938354492188, -0.0005168914794921875, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frost", "Shock", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Frost", " ", "Shock", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 109]}, {"inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>,\n            filter_func=lambda target: target.health != target.\n            calculate_max_health() and target.is_minion())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -7.360617454647297, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "FrostShock", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template14"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "is_minion", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Frozen", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.33514404296875e-05, -3.814697265625e-06, -9.918212890625e-05, -1.71661376953125e-05, -1.311301275563892e-06, -2.6226029149256647e-05, 0.0, -1.52587890625e-05, -2.86102294921875e-05, -0.0002193450927734375, -1.71661376953125e-05, -1.9073486328125e-06, -7.987013304955326e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.24249267578125e-05, -7.62939453125e-06, -9.34600830078125e-05, -0.000263214111328125, -7.62939453125e-05, -2.288818359375e-05, -3.814697265625e-06, -3.099436753473128e-06, -2.372264498262666e-05, -2.1457672119140625e-06, -3.576278118089249e-07, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -0.00048589700600132346, -1.9073486328125e-06, -0.000133514404296875, 0.0, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.000240325927734375, -1.9073486328125e-06, -3.6150102615356445, 0.0, -4.57763671875e-05, 0.0, -4.76837158203125e-05, -4.76837158203125e-05, -0.0009174346923828125, 0.0, -4.38690185546875e-05, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -0.0002536773681640625, -1.9073486328125e-06, -0.0028352737426757812, -2.288818359375e-05, -0.0003662109375, -0.012118339538574219, -7.62939453125e-06, -0.001617431640625, -0.0002422332763671875, -8.20159912109375e-05, -4.00543212890625e-05, -0.002422332763671875, -0.0010814666748046875, -0.0001163482666015625, -1.341406226158142, -0.00018107891082763672, -0.004870414733886719, -0.0002536773681640625, -0.000301361083984375, -1.9073486328125e-05, -0.3492908477783203, -0.000804901123046875, -0.0017795562744140625, 0.0, -1.33514404296875e-05, 0.0, -0.970026969909668, -0.00015187230019364506, -0.09566137939691544, -1.9073486328125e-06, -0.0012359619140625, -0.04608726501464844, -7.62939453125e-06, -0.0045490264892578125, -0.0034637451171875, -0.000278472900390625, 0.0, -2.86102294921875e-05, 0.0, -0.2547769546508789, -3.70740526705049e-05, -0.1847231090068817, 0.0, -0.0001506805419921875, -0.0054721832275390625, -0.0011138916015625, 0.0, -0.0047245025634765625, 0.0, -0.056371208280324936, -0.0001423358917236328, -0.30606532096862793, -3.445148468017578e-05, -0.0004215240478515625, -7.62939453125e-06, -0.0002460479736328125, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -0.0011653900146484375, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -7.748603820800781e-06, -0.001644134521484375, -1.33514404296875e-05, -0.003452301025390625, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -5.53131103515625e-05, 0.0, -0.0001049041748046875, -0.00047863280633464456, 0.0, -1.9073486328125e-05, -0.000362396240234375, -2.86102294921875e-05, -3.814697265625e-05, -3.814697265625e-06, -0.0001430511474609375, -0.00010907647083513439, -1.9073486328125e-06, 0.0, -0.0044841766357421875, -0.000308990478515625, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -0.010637283325195312, -1.33514404296875e-05, 0.0, -0.001514434814453125, -0.058697089552879333, -7.748603820800781e-06, -6.103515625e-05, -0.0004482269287109375, -7.62939453125e-06, -0.0003795623779296875, -1.9073486328125e-06, -0.000847935676574707, -4.76837158203125e-05, -1.33514404296875e-05, -0.0001888275146484375, -3.814697265625e-06, -0.0009849071502685547, -0.00015842913126107305, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Frost", "Shock", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Frost", " ", "Shock", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 14, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "is_minion", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 70, 74, 102, 128, 18, 123, 15, 116, 52, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Frozen", "<EOS>", 109]}, {"inferred_code": "", "score": -21.593122482299805, "model_output": {"_type": "Module", "body": []}, "score_history": [-9.5367431640625e-06, -1.33514404296875e-05, -21.59309959411621], "choice_history": [93, 145, 228]}], "index": 37}
{"beams": [{"inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -0.09177740120957623, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Frostbolt", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template12"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Frozen", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -4.1961669921875e-05, -0.000148773193359375, -2.86102294921875e-05, -5.006787887396058e-06, -2.9802317840221804e-06, -1.9073486328125e-06, -0.00069427490234375, -9.72747802734375e-05, -2.288818359375e-05, -3.0517578125e-05, -1.3351424058782868e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001125335693359375, -6.103515625e-05, -6.29425048828125e-05, -4.57763671875e-05, -6.4849853515625e-05, -0.0013275146484375, -0.0003185272216796875, -0.0003452301025390625, -8.0108642578125e-05, -2.014622077695094e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.24249267578125e-05, -3.814697265625e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.00012814998626708984, -3.814697265625e-06, -6.866455078125e-05, -0.02275848388671875, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-05, -0.0004520416259765625, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -8.392333984375e-05, -7.62939453125e-06, -9.34600830078125e-05, -5.7220458984375e-06, -0.001782536506652832, -2.09808349609375e-05, -4.00543212890625e-05, -5.91278076171875e-05, -1.33514404296875e-05, -1.71661376953125e-05, -3.814697265625e-05, -5.7220458984375e-06, -0.003582000732421875, 0.0, -0.0001125335693359375, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.86102294921875e-05, -3.4332275390625e-05, -3.457069396972656e-05, -9.5367431640625e-06, -0.00049591064453125, -3.0517578125e-05, -0.0004405975341796875, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -4.9591064453125e-05, -5.7220458984375e-06, -4.00543212890625e-05, -0.001806928194127977, -1.1920928244535389e-07, -3.0517578125e-05, -0.0005702972412109375, -1.52587890625e-05, -5.53131103515625e-05, -1.33514404296875e-05, -0.00023651123046875, -0.00010645389556884766, 0.0, -1.9073486328125e-06, -0.0024547576904296875, -0.00016021728515625, -1.1444091796875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.000461578369140625, -2.86102294921875e-05, 0.0, -0.000217437744140625, -0.04101264849305153, -1.9073486328125e-06, -9.5367431640625e-06, -0.0060977935791015625, -9.5367431640625e-06, -0.0014629364013671875, -3.814697265625e-06, -0.0008144378662109375, -1.71661376953125e-05, -5.7220458984375e-06, -0.00018310546875, -1.9073486328125e-06, -0.0016547441482543945, -2.6583655198919587e-05, -1.71661376953125e-05], "choice_history": [93, 145, 230, 101, 125, "Frostbolt", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Frostbolt", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 102, 128, 18, 123, 15, 116, 52, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Frozen", "<EOS>", 109]}, {"inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.increase_health(2)\n", "score": -4.3998686803452, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Frostbolt", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template12"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -4.1961669921875e-05, -0.000148773193359375, -2.86102294921875e-05, -5.006787887396058e-06, -2.9802317840221804e-06, -1.9073486328125e-06, -0.00069427490234375, -9.72747802734375e-05, -2.288818359375e-05, -3.0517578125e-05, -1.3351424058782868e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001125335693359375, -6.103515625e-05, -6.29425048828125e-05, -4.57763671875e-05, -6.4849853515625e-05, -0.0013275146484375, -0.0003185272216796875, -0.0003452301025390625, -8.0108642578125e-05, -2.014622077695094e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.24249267578125e-05, -3.814697265625e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.00012814998626708984, -3.814697265625e-06, -6.866455078125e-05, -0.02275848388671875, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-05, -0.0004520416259765625, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -8.392333984375e-05, -7.62939453125e-06, -9.34600830078125e-05, -5.7220458984375e-06, -0.001782536506652832, -2.09808349609375e-05, -4.00543212890625e-05, -5.91278076171875e-05, -1.33514404296875e-05, -1.71661376953125e-05, -3.814697265625e-05, -5.7220458984375e-06, -0.003582000732421875, 0.0, -0.0001125335693359375, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.86102294921875e-05, -3.4332275390625e-05, -3.457069396972656e-05, -9.5367431640625e-06, -0.00049591064453125, -3.0517578125e-05, -0.0004405975341796875, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -4.9591064453125e-05, -5.7220458984375e-06, -4.00543212890625e-05, -0.001806928194127977, -1.1920928244535389e-07, -3.0517578125e-05, -0.0005702972412109375, -1.52587890625e-05, -5.53131103515625e-05, -1.33514404296875e-05, -0.00023651123046875, -0.00010645389556884766, 0.0, -1.9073486328125e-06, -0.0024547576904296875, -0.00016021728515625, -1.1444091796875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.000461578369140625, -2.86102294921875e-05, 0.0, -0.000217437744140625, -4.342955589294434, -1.9073486328125e-06, -1.9073486328125e-06, -0.016427993774414062, -2.288818359375e-05], "choice_history": [93, 145, 230, 101, 125, "Frostbolt", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Frostbolt", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 69, 109]}, {"inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.damage(player.effective_spell_damage(3), self)\n", "score": -4.480100108491563, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Frostbolt", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template12"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -4.1961669921875e-05, -0.000148773193359375, -2.86102294921875e-05, -5.006787887396058e-06, -2.9802317840221804e-06, -1.9073486328125e-06, -0.00069427490234375, -9.72747802734375e-05, -2.288818359375e-05, -3.0517578125e-05, -1.3351424058782868e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001125335693359375, -6.103515625e-05, -6.29425048828125e-05, -4.57763671875e-05, -6.4849853515625e-05, -0.0013275146484375, -0.0003185272216796875, -0.0003452301025390625, -8.0108642578125e-05, -2.014622077695094e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.24249267578125e-05, -3.814697265625e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.00012814998626708984, -3.814697265625e-06, -6.866455078125e-05, -0.02275848388671875, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-05, -0.0004520416259765625, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -8.392333984375e-05, -7.62939453125e-06, -9.34600830078125e-05, -5.7220458984375e-06, -0.001782536506652832, -2.09808349609375e-05, -4.00543212890625e-05, -5.91278076171875e-05, -1.33514404296875e-05, -1.71661376953125e-05, -3.814697265625e-05, -5.7220458984375e-06, -0.003582000732421875, 0.0, -0.0001125335693359375, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.86102294921875e-05, -3.4332275390625e-05, -3.457069396972656e-05, -9.5367431640625e-06, -0.00049591064453125, -3.0517578125e-05, -0.0004405975341796875, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -4.9591064453125e-05, -5.7220458984375e-06, -4.00543212890625e-05, -0.001806928194127977, -1.1920928244535389e-07, -3.0517578125e-05, -0.0005702972412109375, -1.52587890625e-05, -5.53131103515625e-05, -1.33514404296875e-05, -0.00023651123046875, -0.00010645389556884766, 0.0, -1.9073486328125e-06, -0.0024547576904296875, -0.00016021728515625, -1.1444091796875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.000461578369140625, -2.86102294921875e-05, 0.0, -0.000217437744140625, -4.430762767791748, 0.0, -0.0020599365234375, -7.05718994140625e-05, -4.00543212890625e-05, -3.814697265625e-06, 0.0, -0.000102996826171875, -0.00018715858459472656, 0.0, 0.0, -0.00621795654296875, -0.0001964569091796875, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frostbolt", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Frostbolt", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 109]}, {"inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.change_attack(2)\n", "score": -4.895199014054917, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Frostbolt", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template12"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -4.1961669921875e-05, -0.000148773193359375, -2.86102294921875e-05, -5.006787887396058e-06, -2.9802317840221804e-06, -1.9073486328125e-06, -0.00069427490234375, -9.72747802734375e-05, -2.288818359375e-05, -3.0517578125e-05, -1.3351424058782868e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001125335693359375, -6.103515625e-05, -6.29425048828125e-05, -4.57763671875e-05, -6.4849853515625e-05, -0.0013275146484375, -0.0003185272216796875, -0.0003452301025390625, -8.0108642578125e-05, -2.014622077695094e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.24249267578125e-05, -3.814697265625e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.00012814998626708984, -3.814697265625e-06, -6.866455078125e-05, -0.02275848388671875, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-05, -0.0004520416259765625, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -8.392333984375e-05, -7.62939453125e-06, -9.34600830078125e-05, -5.7220458984375e-06, -0.001782536506652832, -2.09808349609375e-05, -4.00543212890625e-05, -5.91278076171875e-05, -1.33514404296875e-05, -1.71661376953125e-05, -3.814697265625e-05, -5.7220458984375e-06, -0.003582000732421875, 0.0, -0.0001125335693359375, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.86102294921875e-05, -3.4332275390625e-05, -3.457069396972656e-05, -9.5367431640625e-06, -0.00049591064453125, -3.0517578125e-05, -0.0004405975341796875, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -4.9591064453125e-05, -5.7220458984375e-06, -4.00543212890625e-05, -0.001806928194127977, -1.1920928244535389e-07, -3.0517578125e-05, -0.0005702972412109375, -1.52587890625e-05, -5.53131103515625e-05, -1.33514404296875e-05, -0.00023651123046875, -0.00010645389556884766, 0.0, -1.9073486328125e-06, -0.0024547576904296875, -0.00016021728515625, -1.1444091796875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.000461578369140625, -2.86102294921875e-05, 0.0, -0.000217437744140625, -4.850483417510986, 0.0, -1.9073486328125e-06, -0.004207611083984375, -4.76837158203125e-05], "choice_history": [93, 145, 230, 101, 125, "Frostbolt", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Frostbolt", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 69, 109]}, {"inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Frozen())\n", "score": -5.6607080271414745, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Frostbolt", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template12"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"hole0": "Frozen", "_type": "Template5"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -4.1961669921875e-05, -0.000148773193359375, -2.86102294921875e-05, -5.006787887396058e-06, -2.9802317840221804e-06, -1.9073486328125e-06, -0.00069427490234375, -9.72747802734375e-05, -2.288818359375e-05, -3.0517578125e-05, -1.3351424058782868e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001125335693359375, -6.103515625e-05, -6.29425048828125e-05, -4.57763671875e-05, -6.4849853515625e-05, -0.0013275146484375, -0.0003185272216796875, -0.0003452301025390625, -8.0108642578125e-05, -2.014622077695094e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.24249267578125e-05, -3.814697265625e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.00012814998626708984, -3.814697265625e-06, -6.866455078125e-05, -0.02275848388671875, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-05, -0.0004520416259765625, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -8.392333984375e-05, -7.62939453125e-06, -9.34600830078125e-05, -5.7220458984375e-06, -0.001782536506652832, -2.09808349609375e-05, -4.00543212890625e-05, -5.91278076171875e-05, -1.33514404296875e-05, -1.71661376953125e-05, -3.814697265625e-05, -5.7220458984375e-06, -0.003582000732421875, 0.0, -0.0001125335693359375, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.86102294921875e-05, -3.4332275390625e-05, -3.457069396972656e-05, -9.5367431640625e-06, -0.00049591064453125, -3.0517578125e-05, -0.0004405975341796875, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -4.9591064453125e-05, -5.7220458984375e-06, -4.00543212890625e-05, -0.001806928194127977, -1.1920928244535389e-07, -3.0517578125e-05, -0.0005702972412109375, -1.52587890625e-05, -5.53131103515625e-05, -1.33514404296875e-05, -0.00023651123046875, -0.00010645389556884766, 0.0, -1.9073486328125e-06, -0.0024547576904296875, -0.00016021728515625, -1.1444091796875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.000461578369140625, -2.86102294921875e-05, 0.0, -0.000217437744140625, -0.04101264849305153, -1.9073486328125e-06, -9.5367431640625e-06, -5.5388078689575195, -5.53131103515625e-05, -0.039547085762023926, -0.000803828239440918, -1.1444091796875e-05], "choice_history": [93, 145, 230, 101, 125, "Frostbolt", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Frostbolt", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 102, 128, 18, 123, 15, 116, 52, "add_buff", "<EOS>", 216, 87, 193, "Frozen", "<EOS>", 109]}, {"inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -6.313976445283508, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Frostbolt", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template12"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Frozen", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -4.1961669921875e-05, -0.000148773193359375, -2.86102294921875e-05, -5.006787887396058e-06, -2.9802317840221804e-06, -1.9073486328125e-06, -0.00069427490234375, -9.72747802734375e-05, -2.288818359375e-05, -3.0517578125e-05, -1.3351424058782868e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001125335693359375, -6.103515625e-05, -6.29425048828125e-05, -4.57763671875e-05, -6.4849853515625e-05, -0.0013275146484375, -0.0003185272216796875, -0.0003452301025390625, -8.0108642578125e-05, -2.014622077695094e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.24249267578125e-05, -3.814697265625e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.00012814998626708984, -3.814697265625e-06, -6.866455078125e-05, -3.8016281127929688, 0.0, -2.288818359375e-05, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0018558502197265625, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -0.0001430511474609375, -3.814697265625e-06, -9.34600830078125e-05, -5.7220458984375e-06, -0.0016901493072509766, -3.4332275390625e-05, -0.00042724609375, -2.242673873901367, 0.0, -0.04641437530517578, -0.0001583099365234375, -0.0010223388671875, 0.0, -0.00031280517578125, 0.0, -0.000255584716796875, -3.814697265625e-06, -0.000110626220703125, -1.9073486328125e-06, -0.15176212787628174, -9.5367431640625e-06, -0.0002727508544921875, -9.918212890625e-05, -5.53131103515625e-05, -1.52587890625e-05, 0.0, 0.0, -0.0014171600341796875, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -2.47955322265625e-05, -3.4689903259277344e-05, -1.52587890625e-05, -0.0005130767822265625, -2.6702880859375e-05, -0.00049591064453125, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, -4.38690185546875e-05, -3.814697265625e-06, -4.57763671875e-05, -0.0018758189398795366, -1.1920928244535389e-07, -2.86102294921875e-05, -0.000518798828125, -1.52587890625e-05, -5.7220458984375e-05, -1.33514404296875e-05, -0.0002384185791015625, -0.00010454654693603516, 0.0, -1.9073486328125e-06, -0.0023975372314453125, -0.000156402587890625, -1.1444091796875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0004482269287109375, -2.6702880859375e-05, 0.0, -0.000213623046875, -0.04203186184167862, -1.9073486328125e-06, -7.62939453125e-06, -0.0059566497802734375, -9.5367431640625e-06, -0.0014362335205078125, -3.814697265625e-06, -0.0008153915405273438, -1.71661376953125e-05, -5.7220458984375e-06, -0.0001850128173828125, -1.9073486328125e-06, -0.0016338825225830078, -2.6702864488470368e-05, -1.71661376953125e-05], "choice_history": [93, 145, 230, 101, 125, "Frostbolt", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Frostbolt", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 102, 128, 18, 123, 15, 116, 52, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Frozen", "<EOS>", 109]}, {"inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(2)\n", "score": -6.904429989116572, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Frostbolt", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template12"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -4.1961669921875e-05, -0.000148773193359375, -2.86102294921875e-05, -5.006787887396058e-06, -2.9802317840221804e-06, -1.9073486328125e-06, -0.00069427490234375, -9.72747802734375e-05, -2.288818359375e-05, -3.0517578125e-05, -1.3351424058782868e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001125335693359375, -6.103515625e-05, -6.29425048828125e-05, -4.57763671875e-05, -6.4849853515625e-05, -0.0013275146484375, -0.0003185272216796875, -0.0003452301025390625, -8.0108642578125e-05, -2.014622077695094e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.24249267578125e-05, -3.814697265625e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.00012814998626708984, -3.814697265625e-06, -6.866455078125e-05, -0.02275848388671875, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-05, -0.0004520416259765625, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -8.392333984375e-05, -7.62939453125e-06, -9.34600830078125e-05, -5.7220458984375e-06, -0.001782536506652832, -2.09808349609375e-05, -4.00543212890625e-05, -5.91278076171875e-05, -1.33514404296875e-05, -1.71661376953125e-05, -3.814697265625e-05, -5.7220458984375e-06, -0.003582000732421875, 0.0, -0.0001125335693359375, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.86102294921875e-05, -3.4332275390625e-05, -3.457069396972656e-05, -9.5367431640625e-06, -0.00049591064453125, -3.0517578125e-05, -0.0004405975341796875, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -4.9591064453125e-05, -5.7220458984375e-06, -4.00543212890625e-05, -0.001806928194127977, -1.1920928244535389e-07, -3.0517578125e-05, -0.0005702972412109375, -1.52587890625e-05, -5.53131103515625e-05, -1.33514404296875e-05, -0.00023651123046875, -0.00010645389556884766, 0.0, -1.9073486328125e-06, -0.0024547576904296875, -0.00016021728515625, -1.1444091796875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.000461578369140625, -2.86102294921875e-05, 0.0, -0.000217437744140625, -0.04101264849305153, -1.9073486328125e-06, -9.5367431640625e-06, -6.822932243347168, -1.52587890625e-05], "choice_history": [93, 145, 230, 101, 125, "Frostbolt", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Frostbolt", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 102, 128, 18, 123, 15, 116, 52, "add_buff", "<EOS>", 216, 69, 109]}, {"inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(3)\n", "score": -7.071511822002314, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Frostbolt", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template12"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template16"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -4.1961669921875e-05, -0.000148773193359375, -2.86102294921875e-05, -5.006787887396058e-06, -2.9802317840221804e-06, -1.9073486328125e-06, -0.00069427490234375, -9.72747802734375e-05, -2.288818359375e-05, -3.0517578125e-05, -1.3351424058782868e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001125335693359375, -6.103515625e-05, -6.29425048828125e-05, -4.57763671875e-05, -6.4849853515625e-05, -0.0013275146484375, -0.0003185272216796875, -0.0003452301025390625, -8.0108642578125e-05, -2.014622077695094e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.24249267578125e-05, -3.814697265625e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.00012814998626708984, -3.814697265625e-06, -6.866455078125e-05, -0.02275848388671875, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-05, -0.0004520416259765625, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -8.392333984375e-05, -7.62939453125e-06, -9.34600830078125e-05, -5.7220458984375e-06, -0.001782536506652832, -2.09808349609375e-05, -4.00543212890625e-05, -5.91278076171875e-05, -1.33514404296875e-05, -1.71661376953125e-05, -3.814697265625e-05, -5.7220458984375e-06, -0.003582000732421875, 0.0, -0.0001125335693359375, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.86102294921875e-05, -3.4332275390625e-05, -3.457069396972656e-05, -9.5367431640625e-06, -0.00049591064453125, -3.0517578125e-05, -0.0004405975341796875, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -4.9591064453125e-05, -5.7220458984375e-06, -4.00543212890625e-05, -0.001806928194127977, -1.1920928244535389e-07, -3.0517578125e-05, -0.0005702972412109375, -1.52587890625e-05, -5.53131103515625e-05, -1.33514404296875e-05, -0.00023651123046875, -0.00010645389556884766, 0.0, -1.9073486328125e-06, -0.0024547576904296875, -0.00016021728515625, -1.1444091796875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.000461578369140625, -2.86102294921875e-05, 0.0, -0.000217437744140625, -0.04101264849305153, -1.9073486328125e-06, -9.5367431640625e-06, -6.990017890930176, -1.1444091796875e-05], "choice_history": [93, 145, 230, 101, 125, "Frostbolt", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Frostbolt", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 102, 128, 18, 123, 15, 116, 52, "add_buff", "<EOS>", 216, 72, 109]}, {"inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.Ended(2)\n", "score": -7.075243665086411, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Frostbolt", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template12"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "Ended", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -4.1961669921875e-05, -0.000148773193359375, -2.86102294921875e-05, -5.006787887396058e-06, -2.9802317840221804e-06, -1.9073486328125e-06, -0.00069427490234375, -9.72747802734375e-05, -2.288818359375e-05, -3.0517578125e-05, -1.3351424058782868e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001125335693359375, -6.103515625e-05, -6.29425048828125e-05, -4.57763671875e-05, -6.4849853515625e-05, -0.0013275146484375, -0.0003185272216796875, -0.0003452301025390625, -8.0108642578125e-05, -2.014622077695094e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.24249267578125e-05, -3.814697265625e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.00012814998626708984, -3.814697265625e-06, -6.866455078125e-05, -0.02275848388671875, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-05, -0.0004520416259765625, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -8.392333984375e-05, -7.62939453125e-06, -9.34600830078125e-05, -5.7220458984375e-06, -0.001782536506652832, -2.09808349609375e-05, -4.00543212890625e-05, -5.91278076171875e-05, -1.33514404296875e-05, -1.71661376953125e-05, -3.814697265625e-05, -5.7220458984375e-06, -0.003582000732421875, 0.0, -0.0001125335693359375, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.86102294921875e-05, -3.4332275390625e-05, -3.457069396972656e-05, -9.5367431640625e-06, -0.00049591064453125, -3.0517578125e-05, -0.0004405975341796875, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -4.9591064453125e-05, -5.7220458984375e-06, -4.00543212890625e-05, -0.001806928194127977, -1.1920928244535389e-07, -3.0517578125e-05, -0.0005702972412109375, -1.52587890625e-05, -5.53131103515625e-05, -1.33514404296875e-05, -0.00023651123046875, -0.00010645389556884766, 0.0, -1.9073486328125e-06, -0.0024547576904296875, -0.00016021728515625, -1.1444091796875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.000461578369140625, -2.86102294921875e-05, 0.0, -0.000217437744140625, -6.914216995239258, 0.0, -0.0019092559814453125, -0.11861324310302734, -4.57763671875e-05], "choice_history": [93, 145, 230, 101, 125, "Frostbolt", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Frostbolt", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 102, 128, 18, 123, 15, 116, 52, "Ended", "<EOS>", 216, 69, 109]}, {"inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            filter_func=lambda character: character.card.minion_type ==\n            MINION_TYPE.DEMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -7.105639268452244, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Frostbolt", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template12"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "character"}], "_type": "arguments"}, "_type": "Lambda", "body": {"left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "character", "_type": "Name"}}}, "_type": "Compare", "comparators": [{"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Eq"}]}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Frozen", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -4.1961669921875e-05, -0.000148773193359375, -2.86102294921875e-05, -5.006787887396058e-06, -2.9802317840221804e-06, -1.9073486328125e-06, -0.00069427490234375, -9.72747802734375e-05, -2.288818359375e-05, -3.0517578125e-05, -1.3351424058782868e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001125335693359375, -6.103515625e-05, -6.29425048828125e-05, -4.57763671875e-05, -6.4849853515625e-05, -0.0013275146484375, -0.0003185272216796875, -0.0003452301025390625, -8.0108642578125e-05, -2.014622077695094e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.24249267578125e-05, -3.814697265625e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.00012814998626708984, -3.814697265625e-06, -6.866455078125e-05, -3.8016281127929688, 0.0, -2.288818359375e-05, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0018558502197265625, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -0.0001430511474609375, -3.814697265625e-06, -9.34600830078125e-05, -5.7220458984375e-06, -0.0016901493072509766, -3.4332275390625e-05, -0.00042724609375, -0.16153717041015625, -1.9073486328125e-06, -0.0095062255859375, -0.00014495849609375, -0.001850128173828125, -0.0001068115234375, -0.00162506103515625, -0.0002193450927734375, -3.4332275390625e-05, -0.4050891399383545, -2.3484230041503906e-05, -1.361588478088379, -0.005635261535644531, -0.0009603500366210938, 0.0, -0.009389877319335938, 0.0, -0.0032863616943359375, 0.0, -0.7050362825393677, -1.1563301086425781e-05, -0.16945001482963562, -3.933906555175781e-06, -0.009492874145507812, -1.9073486328125e-06, -5.14984130859375e-05, -0.3303718566894531, -9.5367431640625e-06, -2.09808349609375e-05, 0.0, -0.000408172607421875, 0.0, -2.193450927734375e-05, 0.0, -0.04846775531768799, -3.814697265625e-06, -5.91278076171875e-05, -1.9073486328125e-06, -0.0020456314086914062, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.004504203796386719, 0.0, -8.96453857421875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -1.1444091796875e-05, -2.110004425048828e-05, -7.62939453125e-06, -0.000522613525390625, -2.6702880859375e-05, -0.00090789794921875, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -8.58306884765625e-05, -5.7220458984375e-06, -2.09808349609375e-05, -0.001704842783510685, -1.1920928244535389e-07, -3.0517578125e-05, -0.0005321502685546875, -1.33514404296875e-05, -6.866455078125e-05, -1.33514404296875e-05, -0.0002536773681640625, -0.00011169909703312442, 0.0, -1.9073486328125e-06, -0.0024623870849609375, -0.0001621246337890625, -1.1444091796875e-05, -1.52587890625e-05, -3.814697265625e-06, -0.00046539306640625, -2.86102294921875e-05, 0.0, -0.00017547607421875, -0.046997714787721634, -1.9073486328125e-06, -9.5367431640625e-06, -0.0058879852294921875, -9.5367431640625e-06, -0.0014171600341796875, -3.814697265625e-06, -0.000823974609375, -1.71661376953125e-05, -5.7220458984375e-06, -0.00018310546875, -1.9073486328125e-06, -0.0016325712203979492, -2.4795515855657868e-05, -1.71661376953125e-05], "choice_history": [93, 145, 230, 101, 125, "Frostbolt", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Frostbolt", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "character", "<EOS>", 19, 126, 15, 116, 15, 116, 23, 146, "character", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 213, 6, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 102, 128, 18, 123, 15, 116, 52, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Frozen", "<EOS>", 109]}, {"inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Attack()))\n", "score": -7.744562225597285, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Frostbolt", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template12"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "add_buff", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Attack", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -4.1961669921875e-05, -0.000148773193359375, -2.86102294921875e-05, -5.006787887396058e-06, -2.9802317840221804e-06, -1.9073486328125e-06, -0.00069427490234375, -9.72747802734375e-05, -2.288818359375e-05, -3.0517578125e-05, -1.3351424058782868e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001125335693359375, -6.103515625e-05, -6.29425048828125e-05, -4.57763671875e-05, -6.4849853515625e-05, -0.0013275146484375, -0.0003185272216796875, -0.0003452301025390625, -8.0108642578125e-05, -2.014622077695094e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.24249267578125e-05, -3.814697265625e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.00012814998626708984, -3.814697265625e-06, -6.866455078125e-05, -0.02275848388671875, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-05, -0.0004520416259765625, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -8.392333984375e-05, -7.62939453125e-06, -9.34600830078125e-05, -5.7220458984375e-06, -0.001782536506652832, -2.09808349609375e-05, -4.00543212890625e-05, -5.91278076171875e-05, -1.33514404296875e-05, -1.71661376953125e-05, -3.814697265625e-05, -5.7220458984375e-06, -0.003582000732421875, 0.0, -0.0001125335693359375, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.86102294921875e-05, -3.4332275390625e-05, -3.457069396972656e-05, -9.5367431640625e-06, -0.00049591064453125, -3.0517578125e-05, -0.0004405975341796875, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -4.9591064453125e-05, -5.7220458984375e-06, -4.00543212890625e-05, -0.001806928194127977, -1.1920928244535389e-07, -3.0517578125e-05, -0.0005702972412109375, -1.52587890625e-05, -5.53131103515625e-05, -1.33514404296875e-05, -0.00023651123046875, -0.00010645389556884766, 0.0, -1.9073486328125e-06, -0.0024547576904296875, -0.00016021728515625, -1.1444091796875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.000461578369140625, -2.86102294921875e-05, 0.0, -0.000217437744140625, -0.04101264849305153, -1.9073486328125e-06, -9.5367431640625e-06, -0.0060977935791015625, -9.5367431640625e-06, -0.0014629364013671875, -3.814697265625e-06, -0.0008144378662109375, -1.71661376953125e-05, -5.7220458984375e-06, -0.00018310546875, -1.9073486328125e-06, -7.650247097015381, -0.004230499267578125, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Frostbolt", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Frostbolt", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 102, 128, 18, 123, 15, 116, 52, "add_buff", "<EOS>", 216, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Attack", "<EOS>", 109]}, {"inferred_code": "super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.COMMON)\n", "score": -10.318080425226071, "model_output": {"_type": "Module", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template12"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -4.1961669921875e-05, -9.084294319152832, -0.03632068634033203, -0.0031614303588867188, -0.00528717041015625, -0.6207990646362305, -0.484100341796875, -0.0011997222900390625, -3.24249267578125e-05, -3.5047494748141617e-05, -3.814697265625e-06, -1.9073486328125e-05, -0.000171661376953125, -1.9073486328125e-06, 0.0, 0.0, -5.841255187988281e-06, 0.0, -5.9723854064941406e-05, -1.1444091796875e-05, -5.340576171875e-05, -0.08246421813964844], "choice_history": [93, 145, 230, 102, 128, 18, 123, 50, 219, 66, 155, "Frostbolt", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 109]}, {"inferred_code": "super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.COMMON,\n    False)\n", "score": -10.81231738626957, "model_output": {"_type": "Module", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template12"}, {"attr": "MAGE", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call"}}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -4.1961669921875e-05, -9.084294319152832, -0.03632068634033203, -0.0031614303588867188, -0.00528717041015625, -0.6207990646362305, -1.0437898635864258, -0.0021800994873046875, -0.0001392364501953125, -0.007618799805641174, -3.62396240234375e-05, -7.2479248046875e-05, -0.00052642822265625, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.00568389892578125, 0.0, -0.0001341104507446289, -1.9073486328125e-06, -0.000133514404296875, -0.0019855499267578125, -7.43865966796875e-05], "choice_history": [93, 145, 230, 102, 128, 18, 123, 50, 220, 66, 155, "Frostbolt", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 88, 80, 109]}, {"inferred_code": "super().use(player, game)\n", "score": -15.806670188903809, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -4.1961669921875e-05, -13.251184463500977, -2.555426597595215], "choice_history": [93, 145, 230, 108, 109]}, {"inferred_code": "", "score": -19.05550193786621, "model_output": {"_type": "Module", "body": []}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -19.055484771728516], "choice_history": [93, 145, 228]}], "index": 38}
{"beams": [{"inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "score": -0.005172855547698418, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "FrostwolfGrunt", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -1.0967194612021558e-05, -0.00031323355506174266, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -2.86102294921875e-05, -1.52587890625e-05, 0.0, -0.0001354217529296875, -1.9073486328125e-06, -0.00109100341796875, 0.0, -1.33514404296875e-05, -2.479527029208839e-05, -9.179114385915454e-06, -2.0265579223632812e-06, 0.0, -1.71661376953125e-05, -5.7220458984375e-05, -2.6702880859375e-05, 0.0, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.4849853515625e-05, -1.1444091796875e-05, 0.0, 0.0, -0.0006961822509765625, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.33514404296875e-05, -7.43865966796875e-05, -7.82012939453125e-05, -1.1444091796875e-05, -3.62396240234375e-05, -0.00113677978515625, 0.0, -0.0009840091224759817, -1.8477439880371094e-05, -8.0108642578125e-05, -9.1552734375e-05, -2.014635902014561e-05, -2.3841830625315197e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frostwolf", "Grunt", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Frostwolf", " ", "Grunt", "<EOS>", 69, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 69, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True, taunt=True)\n", "score": -6.840031455320734, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "FrostwolfGrunt", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}, {"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -1.0967194612021558e-05, -0.00031323355506174266, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -2.86102294921875e-05, -1.52587890625e-05, 0.0, -0.0001354217529296875, -1.9073486328125e-06, -0.00109100341796875, 0.0, -1.33514404296875e-05, -2.479527029208839e-05, -9.179114385915454e-06, -2.0265579223632812e-06, 0.0, -1.71661376953125e-05, -5.7220458984375e-05, -2.6702880859375e-05, 0.0, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.4849853515625e-05, -1.1444091796875e-05, 0.0, 0.0, -0.0006961822509765625, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.33514404296875e-05, -7.43865966796875e-05, -7.82012939453125e-05, -1.1444091796875e-05, -3.62396240234375e-05, -6.817631721496582, -1.9073486328125e-06, -0.007558226119726896, -9.775161743164062e-06, -3.24249267578125e-05, -8.20159912109375e-05, -2.6345211153966375e-05, -3.814689989667386e-06, -1.33514404296875e-05, -0.011100053787231445, -1.1920928244535389e-07, -0.0006771087646484375, -3.814697265625e-05, -1.5258781786542386e-05, -1.7881377516459906e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frostwolf", "Grunt", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Frostwolf", " ", "Grunt", "<EOS>", 69, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 69, 225, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False)\n\n    def create_minion(self, p):\n        return Minion(2, 2, taunt=True)\n", "score": -7.2576929430640575, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "FrostwolfGrunt", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -1.0967194612021558e-05, -0.00031323355506174266, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -2.86102294921875e-05, -1.52587890625e-05, 0.0, -0.0001354217529296875, -1.9073486328125e-06, -6.845641136169434, -7.62939453125e-06, -1.9073486328125e-06, -3.3974625694099814e-05, -1.597404116182588e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0001964569091796875, -6.866455078125e-05, -1.52587890625e-05, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -7.2479248046875e-05, -1.9073486328125e-05, 0.0, 0.0, -0.3860492706298828, 0.0, -1.9073486328125e-06, -0.022058486938476562, -1.9073486328125e-06, -1.52587890625e-05, -0.0001544952392578125, -7.43865966796875e-05, -0.0001201629638671875, -1.33514404296875e-05, -3.62396240234375e-05, -0.000339508056640625, 0.0, -0.0018799890531226993, -1.4185905456542969e-05, -9.1552734375e-05, -8.7738037109375e-05, -2.5868392185657285e-05, -2.264974000354414e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frostwolf", "Grunt", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 220, 66, 155, "Frostwolf", " ", "Grunt", "<EOS>", 69, 89, 88, 80, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "p", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 69, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, Grunt=True)\n", "score": -7.962781618916267, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "FrostwolfGrunt", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "Grunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -1.0967194612021558e-05, -0.00031323355506174266, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -2.86102294921875e-05, -1.52587890625e-05, 0.0, -0.0001354217529296875, -1.9073486328125e-06, -0.00109100341796875, 0.0, -1.33514404296875e-05, -2.479527029208839e-05, -9.179114385915454e-06, -2.0265579223632812e-06, 0.0, -1.71661376953125e-05, -5.7220458984375e-05, -2.6702880859375e-05, 0.0, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.4849853515625e-05, -1.1444091796875e-05, 0.0, 0.0, -0.0006961822509765625, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.33514404296875e-05, -7.43865966796875e-05, -7.82012939453125e-05, -1.1444091796875e-05, -3.62396240234375e-05, -0.00113677978515625, 0.0, -7.957095146179199, -3.576278118089249e-07, -0.0015811920166015625, -0.000110626220703125, -1.6808504369691946e-05, -1.311301275563892e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frostwolf", "Grunt", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Frostwolf", " ", "Grunt", "<EOS>", 69, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 69, 224, 205, "Grunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "score": -8.057399696064977, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "FrostwolfGrunt", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -1.0967194612021558e-05, -0.00031323355506174266, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -2.86102294921875e-05, -1.52587890625e-05, 0.0, -0.0001354217529296875, -1.9073486328125e-06, -6.845641136169434, -7.62939453125e-06, -1.9073486328125e-06, -3.3974625694099814e-05, -1.597404116182588e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0001964569091796875, -6.866455078125e-05, -1.52587890625e-05, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -7.2479248046875e-05, -1.9073486328125e-05, 0.0, 0.0, -1.204451560974121, 0.0, 0.0, -0.00391387939453125, -1.9073486328125e-06, -7.62939453125e-06, -8.58306884765625e-05, -6.67572021484375e-05, -3.814697265625e-05, -1.1444091796875e-05, -3.0517578125e-05, -0.0003986358642578125, 0.0, -0.0014541097916662693, -1.251697449333733e-05, -8.392333984375e-05, -9.5367431640625e-05, -1.9073469957220368e-05, -2.0265558760002023e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frostwolf", "Grunt", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 220, 66, 155, "Frostwolf", " ", "Grunt", "<EOS>", 69, 89, 88, 80, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 69, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class FrostwolfGruntGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "score": -8.097752867397048, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "FrostwolfGruntGrunt", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -1.0967194612021558e-05, -8.078350067138672, -0.01480877585709095, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -2.47955322265625e-05, -1.71661376953125e-05, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -0.0008487701416015625, 0.0, -1.33514404296875e-05, -2.443764969939366e-05, -9.179114385915454e-06, -2.0265579223632812e-06, 0.0, -1.71661376953125e-05, -5.7220458984375e-05, -2.47955322265625e-05, 0.0, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.4849853515625e-05, -1.1444091796875e-05, 0.0, 0.0, -0.00067901611328125, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.33514404296875e-05, -7.43865966796875e-05, -7.82012939453125e-05, -1.1444091796875e-05, -3.62396240234375e-05, -0.0011348724365234375, 0.0, -0.0009781685657799244, -1.8477439880371094e-05, -8.0108642578125e-05, -9.34600830078125e-05, -2.014635902014561e-05, -2.3841830625315197e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frostwolf", "Grunt", "Grunt", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Frostwolf", " ", "Grunt", "<EOS>", 69, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 69, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, _):\n        return Minion(2, 2, taunt=True)\n", "score": -8.11971045759401, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "FrostwolfGrunt", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "_"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -1.0967194612021558e-05, -0.00031323355506174266, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -2.86102294921875e-05, -1.52587890625e-05, 0.0, -0.0001354217529296875, -1.9073486328125e-06, -0.00109100341796875, 0.0, -1.33514404296875e-05, -2.479527029208839e-05, -9.179114385915454e-06, -2.0265579223632812e-06, 0.0, -1.71661376953125e-05, -5.7220458984375e-05, -2.6702880859375e-05, 0.0, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.4849853515625e-05, -1.1444091796875e-05, 0.0, 0.0, -8.115010261535645, -4.172325134277344e-06, -7.62939453125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.71661376953125e-05, -6.29425048828125e-05, -0.0001773834228515625, -1.33514404296875e-05, -4.00543212890625e-05, -0.001186370849609375, 0.0, -0.0010374202392995358, -2.4557111828471534e-05, -8.392333984375e-05, -9.1552734375e-05, -2.1576861399807967e-05, -2.50339189733495e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frostwolf", "Grunt", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Frostwolf", " ", "Grunt", "<EOS>", 69, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "_", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 69, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, p):\n        return Minion(2, 2, taunt=True)\n", "score": -8.161081453877841, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "FrostwolfGrunt", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -1.0967194612021558e-05, -0.00031323355506174266, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -2.86102294921875e-05, -1.52587890625e-05, 0.0, -0.0001354217529296875, -1.9073486328125e-06, -0.00109100341796875, 0.0, -1.33514404296875e-05, -2.479527029208839e-05, -9.179114385915454e-06, -2.0265579223632812e-06, 0.0, -1.71661376953125e-05, -5.7220458984375e-05, -2.6702880859375e-05, 0.0, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.4849853515625e-05, -1.1444091796875e-05, 0.0, 0.0, -8.156394004821777, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -7.2479248046875e-05, -0.0001926422119140625, -1.33514404296875e-05, -4.00543212890625e-05, -0.001079559326171875, 0.0, -0.001131842378526926, -2.0384788513183594e-05, -8.0108642578125e-05, -9.1552734375e-05, -2.0265566490706988e-05, -2.264974000354414e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frostwolf", "Grunt", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Frostwolf", " ", "Grunt", "<EOS>", 69, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "p", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 69, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_targetable=True)\n", "score": -8.590071033310096, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "FrostwolfGrunt", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "spell_targetable"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -1.0967194612021558e-05, -0.00031323355506174266, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -2.86102294921875e-05, -1.52587890625e-05, 0.0, -0.0001354217529296875, -1.9073486328125e-06, -0.00109100341796875, 0.0, -1.33514404296875e-05, -2.479527029208839e-05, -9.179114385915454e-06, -2.0265579223632812e-06, 0.0, -1.71661376953125e-05, -5.7220458984375e-05, -2.6702880859375e-05, 0.0, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.4849853515625e-05, -1.1444091796875e-05, 0.0, 0.0, -0.0006961822509765625, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.33514404296875e-05, -7.43865966796875e-05, -7.82012939453125e-05, -1.1444091796875e-05, -3.62396240234375e-05, -0.00113677978515625, 0.0, -8.354175567626953, -6.318092346191406e-06, -0.23154640197753906, -0.0003414154052734375, -2.2411331883631647e-05, -2.7418097943154862e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frostwolf", "Grunt", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Frostwolf", " ", "Grunt", "<EOS>", 69, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 69, 224, 205, "spell_targetable", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "score": -9.099291452102534, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "FrostwolfGrunt", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -1.0967194612021558e-05, -0.00031323355506174266, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -2.86102294921875e-05, -1.52587890625e-05, 0.0, -8.946433067321777, -5.7220458984375e-06, -0.0005626678466796875, -1.9073486328125e-06, -1.1444091796875e-05, -2.0861407392658293e-05, -1.0371208190917969e-05, -5.841247457283316e-06, -1.9073486328125e-06, -1.52587890625e-05, -4.1961669921875e-05, -1.52587890625e-05, -7.62939453125e-06, 0.0, -0.02468407154083252, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001468658447265625, 0.0, -3.814697265625e-06, 0.0, -0.1241452693939209, 0.0, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.103515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.000484466552734375, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-05, -8.20159912109375e-05, -1.1444091796875e-05, -1.33514404296875e-05, -1.9073486328125e-05, -0.0002899169921875, 0.0, -0.0014777753967791796, -1.454353241570061e-05, -8.96453857421875e-05, -8.7738037109375e-05, -1.6450869225081988e-05, -2.145764938177308e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frostwolf", "Grunt", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Frostwolf", " ", "Grunt", "<EOS>", 69, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 69, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, charge=True)\n", "score": -9.12657410987299, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "FrostwolfGrunt", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -1.0967194612021558e-05, -0.00031323355506174266, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -2.86102294921875e-05, -1.52587890625e-05, 0.0, -0.0001354217529296875, -1.9073486328125e-06, -0.00109100341796875, 0.0, -1.33514404296875e-05, -2.479527029208839e-05, -9.179114385915454e-06, -2.0265579223632812e-06, 0.0, -1.71661376953125e-05, -5.7220458984375e-05, -2.6702880859375e-05, 0.0, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.4849853515625e-05, -1.1444091796875e-05, 0.0, 0.0, -0.0006961822509765625, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.33514404296875e-05, -7.43865966796875e-05, -7.82012939453125e-05, -1.1444091796875e-05, -3.62396240234375e-05, -0.00113677978515625, 0.0, -9.121899604797363, -7.987022399902344e-06, -0.000518798828125, -0.000141143798828125, -2.8610222216229886e-05, -1.7881377516459906e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frostwolf", "Grunt", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Frostwolf", " ", "Grunt", "<EOS>", 69, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 69, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_targetable=False)\n", "score": -10.11345381626461, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "FrostwolfGrunt", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "Template27"}, "_type": "keyword", "arg": "spell_targetable"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -1.0967194612021558e-05, -0.00031323355506174266, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -2.86102294921875e-05, -1.52587890625e-05, 0.0, -0.0001354217529296875, -1.9073486328125e-06, -0.00109100341796875, 0.0, -1.33514404296875e-05, -2.479527029208839e-05, -9.179114385915454e-06, -2.0265579223632812e-06, 0.0, -1.71661376953125e-05, -5.7220458984375e-05, -2.6702880859375e-05, 0.0, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.4849853515625e-05, -1.1444091796875e-05, 0.0, 0.0, -0.0006961822509765625, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.33514404296875e-05, -7.43865966796875e-05, -7.82012939453125e-05, -1.1444091796875e-05, -3.62396240234375e-05, -0.00113677978515625, 0.0, -8.354175567626953, -6.318092346191406e-06, -1.7552900314331055, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Frostwolf", "Grunt", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Frostwolf", " ", "Grunt", "<EOS>", 69, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 69, 224, 205, "spell_targetable", "<EOS>", 39, 109]}, {"inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False)\n\n    def create_minion(self, p):\n        return Minion(2, 2)\n", "score": -11.064913344112483, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "FrostwolfGrunt", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -1.0967194612021558e-05, -0.00031323355506174266, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -2.86102294921875e-05, -1.52587890625e-05, 0.0, -0.0001354217529296875, -1.9073486328125e-06, -6.845641136169434, -7.62939453125e-06, -1.9073486328125e-06, -3.3974625694099814e-05, -1.597404116182588e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0001964569091796875, -6.866455078125e-05, -1.52587890625e-05, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -7.2479248046875e-05, -1.9073486328125e-05, 0.0, 0.0, -0.3860492706298828, 0.0, -1.9073486328125e-06, -3.8318700790405273, -0.000194549560546875, -2.6106490622623824e-05, 0.0, -4.506205004872754e-05, 0.0, 0.0], "choice_history": [93, 145, 230, 101, 125, "Frostwolf", "Grunt", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 220, 66, 155, "Frostwolf", " ", "Grunt", "<EOS>", 69, 89, 88, 80, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "p", "<EOS>", 229, 110, 181, "2", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "return Minion\n", "score": -16.97979164123535, "model_output": {"_type": "Module", "body": [{"_type": "Return", "value": {"_type": "Template23"}}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -9.5367431640625e-06, -14.588479995727539, -1.8396244049072266, -0.44835853576660156, -0.1033172607421875], "choice_history": [93, 145, 230, 107, 153, 36, 109]}, {"inferred_code": "", "score": -20.582603454589844, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, -1.9073486328125e-06, -20.58260154724121], "choice_history": [93, 145, 228]}], "index": 39}
{"beams": [{"inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n", "score": -0.0054494491987497895, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GoldshireFootman", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.9802276912960224e-06, -9.536738616588991e-07, -0.0006285146228037775, 0.0, -5.14984130859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, 0.0, -0.00014495849609375, -1.9073486328125e-06, -0.0018863677978515625, 0.0, -3.814697265625e-06, -1.0609603123157285e-05, -8.940695806813892e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.05718994140625e-05, -9.5367431640625e-06, 0.0, 0.0, -0.0004901885986328125, 0.0, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-06, -0.0001125335693359375, -0.0001239776611328125, -0.0001506805419921875, -0.0002574920654296875, -0.000335693359375, 0.0, -0.0006302512483671308, -2.2649765014648438e-06, -0.0001316070556640625, -7.82012939453125e-05, -1.1444084520917386e-05, -9.536738616588991e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Goldshire", "Footman", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Goldshire", " ", "Footman", "<EOS>", 70, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 69, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n", "score": -6.517466700380055, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GoldshireFootman", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.9802276912960224e-06, -9.536738616588991e-07, -0.0006285146228037775, 0.0, -5.14984130859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, 0.0, -0.00014495849609375, -1.9073486328125e-06, -6.292302131652832, -7.62939453125e-06, -1.9073486328125e-06, -0.00016415113350376487, -1.4781950994802173e-05, -1.1444091796875e-05, -7.62939453125e-06, -7.62939453125e-06, -7.62939453125e-05, -3.0517578125e-05, -9.5367431640625e-06, -2.6702880859375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.340576171875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.22102069854736328, 0.0, 0.0, -0.0011577606201171875, -1.9073486328125e-06, -9.5367431640625e-06, -8.20159912109375e-05, -0.0001068115234375, -3.24249267578125e-05, -0.00016021728515625, -0.0002231597900390625, -0.0001678466796875, 0.0, -0.0005652833497151732, -2.2649765014648438e-06, -0.000156402587890625, -8.0108642578125e-05, -1.3351424058782868e-05, -1.1920922133867862e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Goldshire", "Footman", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 220, 66, 155, "Goldshire", " ", "Footman", "<EOS>", 70, 89, 88, 80, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 69, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class GoldshireFootmanFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n", "score": -7.419083050707741, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GoldshireFootmanFootman", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.9802276912960224e-06, -9.536738616588991e-07, -7.37884521484375, -0.03582650423049927, 0.0, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -2.6702880859375e-05, -1.9073486328125e-05, 0.0, -0.000156402587890625, -1.9073486328125e-06, -0.00148773193359375, 0.0, -3.814697265625e-06, -1.0490395652595907e-05, -8.940695806813892e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -7.43865966796875e-05, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.866455078125e-05, -9.5367431640625e-06, 0.0, 0.0, -0.0004749298095703125, 0.0, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001125335693359375, -0.000125885009765625, -0.0001506805419921875, -0.0002574920654296875, -0.0003376007080078125, 0.0, -0.0006270327721722424, -2.2649765014648438e-06, -0.0001316070556640625, -7.82012939453125e-05, -1.1444084520917386e-05, -9.536738616588991e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Goldshire", "Footman", "Footman", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Goldshire", " ", "Footman", "<EOS>", 70, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 69, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False)\n\n    def create_minion(self, p):\n        return Minion(1, 2, taunt=True)\n", "score": -8.007158080093063, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GoldshireFootman", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.9802276912960224e-06, -9.536738616588991e-07, -0.0006285146228037775, 0.0, -5.14984130859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, 0.0, -0.00014495849609375, -1.9073486328125e-06, -6.292302131652832, -7.62939453125e-06, -1.9073486328125e-06, -0.00016415113350376487, -1.4781950994802173e-05, -1.1444091796875e-05, -7.62939453125e-06, -7.62939453125e-06, -7.62939453125e-05, -3.0517578125e-05, -9.5367431640625e-06, -2.6702880859375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.340576171875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.702505111694336, 0.0, -1.9073486328125e-06, -0.009159088134765625, -1.9073486328125e-06, -2.288818359375e-05, -0.0001239776611328125, -0.00011444091796875, -8.0108642578125e-05, -0.000152587890625, -0.0002346038818359375, -0.000152587890625, 0.0, -0.0006738860392943025, -4.0531158447265625e-06, -0.00014495849609375, -8.392333984375e-05, -1.5258772691595368e-05, -1.0728830375228426e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Goldshire", "Footman", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 220, 66, 155, "Goldshire", " ", "Footman", "<EOS>", 70, 89, 88, 80, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "p", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 69, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True, taunt=True)\n", "score": -8.0667070582399, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GoldshireFootman", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}, {"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.9802276912960224e-06, -9.536738616588991e-07, -0.0006285146228037775, 0.0, -5.14984130859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, 0.0, -0.00014495849609375, -1.9073486328125e-06, -0.0018863677978515625, 0.0, -3.814697265625e-06, -1.0609603123157285e-05, -8.940695806813892e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.05718994140625e-05, -9.5367431640625e-06, 0.0, 0.0, -0.0004901885986328125, 0.0, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-06, -0.0001125335693359375, -0.0001239776611328125, -0.0001506805419921875, -0.0002574920654296875, -8.041812896728516, 0.0, -0.007588386535644531, -1.9073486328125e-06, -5.91278076171875e-05, -4.38690185546875e-05, -1.0967240996251348e-05, -9.536738616588991e-07, -1.52587890625e-05, -0.011477470397949219, 0.0, -0.0013828277587890625, -4.00543212890625e-05, -1.3351438610698096e-05, -9.536738616588991e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Goldshire", "Footman", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Goldshire", " ", "Footman", "<EOS>", 70, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 69, 225, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, p):\n        return Minion(1, 2, taunt=True)\n", "score": -8.25059822943058, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GoldshireFootman", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.9802276912960224e-06, -9.536738616588991e-07, -0.0006285146228037775, 0.0, -5.14984130859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, 0.0, -0.00014495849609375, -1.9073486328125e-06, -0.0018863677978515625, 0.0, -3.814697265625e-06, -1.0609603123157285e-05, -8.940695806813892e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.05718994140625e-05, -9.5367431640625e-06, 0.0, 0.0, -8.24560260772705, 0.0, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -9.72747802734375e-05, -0.00020599365234375, -0.00014495849609375, -0.0002574920654296875, -0.0002994537353515625, 0.0, -0.0006397902616299689, -2.2649765014648438e-06, -0.0001316070556640625, -8.20159912109375e-05, -1.1563293810468167e-05, -9.536738616588991e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Goldshire", "Footman", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Goldshire", " ", "Footman", "<EOS>", 70, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "p", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 69, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, _):\n        return Minion(1, 2, taunt=True)\n", "score": -8.92353704934078, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GoldshireFootman", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "_"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.9802276912960224e-06, -9.536738616588991e-07, -0.0006285146228037775, 0.0, -5.14984130859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, 0.0, -0.00014495849609375, -1.9073486328125e-06, -0.0018863677978515625, 0.0, -3.814697265625e-06, -1.0609603123157285e-05, -8.940695806813892e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.05718994140625e-05, -9.5367431640625e-06, 0.0, 0.0, -8.91854190826416, -2.1457672119140625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.33514404296875e-05, -8.20159912109375e-05, -0.0001926422119140625, -0.00014495849609375, -0.0002460479736328125, -0.0003452301025390625, 0.0, -0.0006377599202096462, -4.291534423828125e-06, -0.000133514404296875, -6.67572021484375e-05, -1.2874589629063848e-05, -8.344646857949556e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Goldshire", "Footman", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Goldshire", " ", "Footman", "<EOS>", 70, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "_", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 69, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, Footman=True)\n", "score": -9.056363268200869, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GoldshireFootman", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "Footman"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.9802276912960224e-06, -9.536738616588991e-07, -0.0006285146228037775, 0.0, -5.14984130859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, 0.0, -0.00014495849609375, -1.9073486328125e-06, -0.0018863677978515625, 0.0, -3.814697265625e-06, -1.0609603123157285e-05, -8.940695806813892e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.05718994140625e-05, -9.5367431640625e-06, 0.0, 0.0, -0.0004901885986328125, 0.0, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-06, -0.0001125335693359375, -0.0001239776611328125, -0.0001506805419921875, -0.0002574920654296875, -0.000335693359375, 0.0, -9.048208236694336, -2.0265579223632812e-06, -0.0034704208374023438, -8.0108642578125e-05, -7.152556463552173e-06, -5.960462772236497e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Goldshire", "Footman", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Goldshire", " ", "Footman", "<EOS>", 70, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 69, 224, 205, "Footman", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n", "score": -9.09771899677417, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GoldshireFootman", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.9802276912960224e-06, -9.536738616588991e-07, -0.0006285146228037775, 0.0, -5.14984130859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, 0.0, -8.866658210754395, -9.5367431640625e-06, -0.0022258758544921875, -1.9073486328125e-06, -3.814697265625e-06, -7.390960945485858e-06, -1.060962586052483e-05, -5.483620952873025e-06, -1.9073486328125e-06, -4.1961669921875e-05, -4.1961669921875e-05, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -0.05275285243988037, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002803802490234375, 0.0, -3.814697265625e-06, 0.0, -0.17243683338165283, 0.0, 0.0, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.43865966796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00046539306640625, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -3.62396240234375e-05, -0.0001239776611328125, -1.33514404296875e-05, -0.000171661376953125, -0.0002193450927734375, -9.5367431640625e-05, 0.0, -0.0009053940302692354, -1.1920928244535389e-07, -0.0001544952392578125, -7.62939453125e-05, -9.894361937767826e-06, -5.960462772236497e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Goldshire", "Footman", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Goldshire", " ", "Footman", "<EOS>", 70, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 69, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, charge=True)\n", "score": -9.145299120226923, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GoldshireFootman", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.9802276912960224e-06, -9.536738616588991e-07, -0.0006285146228037775, 0.0, -5.14984130859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, 0.0, -0.00014495849609375, -1.9073486328125e-06, -0.0018863677978515625, 0.0, -3.814697265625e-06, -1.0609603123157285e-05, -8.940695806813892e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.05718994140625e-05, -9.5367431640625e-06, 0.0, 0.0, -0.0004901885986328125, 0.0, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-06, -0.0001125335693359375, -0.0001239776611328125, -0.0001506805419921875, -0.0002574920654296875, -0.000335693359375, 0.0, -9.140219688415527, -1.9073486328125e-06, -0.000377655029296875, -8.392333984375e-05, -2.0384763047331944e-05, -8.344646857949556e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Goldshire", "Footman", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Goldshire", " ", "Footman", "<EOS>", 70, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 69, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1, taunt=True)\n", "score": -9.298975034057833, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GoldshireFootman", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.9802276912960224e-06, -9.536738616588991e-07, -0.0006285146228037775, 0.0, -5.14984130859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, 0.0, -0.00014495849609375, -1.9073486328125e-06, -0.0018863677978515625, 0.0, -3.814697265625e-06, -1.0609603123157285e-05, -8.940695806813892e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.05718994140625e-05, -9.5367431640625e-06, 0.0, 0.0, -0.0004901885986328125, 0.0, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-06, -0.0001125335693359375, -0.0001239776611328125, -0.0001506805419921875, -9.290058135986328, -0.0009765625, 0.0, -0.0036278963088989258, -1.9073486328125e-06, -0.0002002716064453125, -9.72747802734375e-05, -1.0848039892152883e-05, -5.960462772236497e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Goldshire", "Footman", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Goldshire", " ", "Footman", "<EOS>", 70, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 70, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 5, taunt=True)\n", "score": -9.735642357115012, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GoldshireFootman", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template22"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.9802276912960224e-06, -9.536738616588991e-07, -0.0006285146228037775, 0.0, -5.14984130859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, 0.0, -0.00014495849609375, -1.9073486328125e-06, -0.0018863677978515625, 0.0, -3.814697265625e-06, -1.0609603123157285e-05, -8.940695806813892e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.05718994140625e-05, -9.5367431640625e-06, 0.0, 0.0, -0.0004901885986328125, 0.0, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-06, -0.0001125335693359375, -0.0001239776611328125, -0.0001506805419921875, -9.729378700256348, -0.000934600830078125, 0.0, -0.0009162425412796438, 0.0, -0.00018310546875, -0.0002193450927734375, -7.510183422709815e-06, -1.311301275563892e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Goldshire", "Footman", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Goldshire", " ", "Footman", "<EOS>", 70, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 77, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=1)\n", "score": -9.866436158801207, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GoldshireFootman", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "Template14"}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.9802276912960224e-06, -9.536738616588991e-07, -0.0006285146228037775, 0.0, -5.14984130859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, 0.0, -0.00014495849609375, -1.9073486328125e-06, -0.0018863677978515625, 0.0, -3.814697265625e-06, -1.0609603123157285e-05, -8.940695806813892e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.05718994140625e-05, -9.5367431640625e-06, 0.0, 0.0, -0.0004901885986328125, 0.0, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-06, -0.0001125335693359375, -0.0001239776611328125, -0.0001506805419921875, -0.0002574920654296875, -0.000335693359375, 0.0, -0.0006302512483671308, -2.2649765014648438e-06, -9.86120891571045, 0.0], "choice_history": [93, 145, 230, 101, 125, "Goldshire", "Footman", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Goldshire", " ", "Footman", "<EOS>", 70, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 69, 224, 205, "taunt", "<EOS>", 28, 109]}, {"inferred_code": "return Minion\n", "score": -18.250115394592285, "model_output": {"_type": "Module", "body": [{"_type": "Return", "value": {"_type": "Template23"}}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -15.481154441833496, -2.3125085830688477, -0.2578296661376953, -0.19861698150634766], "choice_history": [93, 145, 230, 107, 153, 36, 109]}, {"inferred_code": "", "score": -21.54364585876465, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, -1.9073486328125e-06, -21.543643951416016], "choice_history": [93, 145, 228]}], "index": 40}
{"beams": [{"inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "score": -0.079547716882864, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GrimscaleOracle", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -4.172316494077677e-06, -2.3841855067985307e-07, -6.9141146923357155e-06, -1.9073486328125e-06, -5.14984130859375e-05, -3.62396240234375e-05, -1.9073486328125e-06, -3.0517578125e-05, -5.233287811279297e-05, -5.960462772236497e-07, -7.62939453125e-06, -3.814697265625e-06, -0.001125335693359375, -0.000186920166015625, -0.000164031982421875, -0.00026702880859375, -3.814697265625e-06, -5.91278076171875e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.3351374946068972e-05, -3.3736090699676424e-05, -5.722038622479886e-06, 0.0, -2.47955322265625e-05, -2.09808349609375e-05, -5.14984130859375e-05, -0.00231170654296875, -3.814697265625e-06, -3.886222839355469e-05, -4.172325134277344e-06, -6.103515625e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0007919073104858398, -2.3841855067985307e-07, -0.004377603530883789, -1.1920928244535389e-07, -1.1444091796875e-05, -2.86102294921875e-05, -0.00018167495727539062, -9.5367431640625e-06, -5.53131103515625e-05, -0.00022125244140625, -0.0002346038818359375, -7.62939453125e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0003814697265625, 0.0, -0.000335693359375, -0.0001087188720703125, -9.5367431640625e-06, -0.000179290771484375, -0.000141143798828125, -0.0005245208740234375, -2.09808349609375e-05, -0.0001163482666015625, -0.0007114410400390625, -0.0004863739013671875, -3.814697265625e-06, -0.0019493009895086288, 0.0, -0.001148223876953125, -2.288818359375e-05, -0.000179290771484375, -0.000110626220703125, -1.9073486328125e-05, -0.0002269744873046875, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000247955322265625, -0.0001277923583984375, -2.288818359375e-05, -3.24249267578125e-05, -0.000141143798828125, -0.0015544891357421875, -0.009893417358398438, -6.67572021484375e-05, -8.96453857421875e-05, -0.012194633483886719, -8.96453857421875e-05, -0.014619827270507812, -8.58306884765625e-05, -0.0024662017822265625, 0.0, -0.00015758660447318107, -2.6702698960434645e-05, -0.01715538091957569, -2.1576648578047752e-05, -0.000583648681640625, -0.000347137451171875, -0.001014113426208496, -0.0006957054138183594, -5.7220458984375e-06, -0.0005893707275390625, -3.4332275390625e-05], "choice_history": [93, 145, 230, 101, 125, "Grimscale", "Oracle", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Grimscale", " ", "Oracle", "<EOS>", 70, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 70, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 58, 123, 38, 217, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 87, 193, "Both", "Player", "<EOS>", 71, 109]}, {"inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.PIRATE), BothPlayer()))])\n", "score": -4.263585180797001, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GrimscaleOracle", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "PIRATE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -4.172316494077677e-06, -2.3841855067985307e-07, -6.9141146923357155e-06, -1.9073486328125e-06, -5.14984130859375e-05, -3.62396240234375e-05, -1.9073486328125e-06, -3.0517578125e-05, -5.233287811279297e-05, -5.960462772236497e-07, -7.62939453125e-06, -3.814697265625e-06, -0.001125335693359375, -0.000186920166015625, -0.000164031982421875, -0.00026702880859375, -3.814697265625e-06, -5.91278076171875e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.3351374946068972e-05, -3.3736090699676424e-05, -5.722038622479886e-06, 0.0, -2.47955322265625e-05, -2.09808349609375e-05, -5.14984130859375e-05, -0.00231170654296875, -3.814697265625e-06, -3.886222839355469e-05, -4.172325134277344e-06, -6.103515625e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0007919073104858398, -2.3841855067985307e-07, -0.004377603530883789, -1.1920928244535389e-07, -1.1444091796875e-05, -2.86102294921875e-05, -0.00018167495727539062, -9.5367431640625e-06, -5.53131103515625e-05, -0.00022125244140625, -0.0002346038818359375, -7.62939453125e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0003814697265625, 0.0, -0.000335693359375, -0.0001087188720703125, -9.5367431640625e-06, -0.000179290771484375, -0.000141143798828125, -0.0005245208740234375, -2.09808349609375e-05, -0.0001163482666015625, -0.0007114410400390625, -0.0004863739013671875, -3.814697265625e-06, -0.0019493009895086288, 0.0, -0.001148223876953125, -2.288818359375e-05, -0.000179290771484375, -0.000110626220703125, -1.9073486328125e-05, -0.0002269744873046875, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000247955322265625, -0.0001277923583984375, -2.288818359375e-05, -3.24249267578125e-05, -0.000141143798828125, -0.0015544891357421875, -0.009893417358398438, -6.67572021484375e-05, -8.96453857421875e-05, -0.012194633483886719, -8.96453857421875e-05, -0.014619827270507812, -8.58306884765625e-05, -0.0024662017822265625, 0.0, -0.00015758660447318107, -2.6702698960434645e-05, -4.201819896697998, -0.00027190515538677573, -0.0004024505615234375, -4.9591064453125e-05, -0.0007127523422241211, -0.0004534721374511719, 0.0, -0.000736236572265625, -3.814697265625e-05], "choice_history": [93, 145, 230, 101, 125, "Grimscale", "Oracle", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Grimscale", " ", "Oracle", "<EOS>", 70, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 70, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 58, 123, 38, 217, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 87, 193, "Both", "Player", "<EOS>", 71, 109]}, {"inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(1), MinionSelector(IsType(MINION_TYPE.MURLOC),\n            BothPlayer())))])\n", "score": -4.6191790782702284, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GrimscaleOracle", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -4.172316494077677e-06, -2.3841855067985307e-07, -6.9141146923357155e-06, -1.9073486328125e-06, -5.14984130859375e-05, -3.62396240234375e-05, -1.9073486328125e-06, -3.0517578125e-05, -5.233287811279297e-05, -5.960462772236497e-07, -7.62939453125e-06, -3.814697265625e-06, -0.001125335693359375, -0.000186920166015625, -0.000164031982421875, -0.00026702880859375, -3.814697265625e-06, -5.91278076171875e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.3351374946068972e-05, -3.3736090699676424e-05, -5.722038622479886e-06, 0.0, -2.47955322265625e-05, -2.09808349609375e-05, -5.14984130859375e-05, -0.00231170654296875, -3.814697265625e-06, -3.886222839355469e-05, -4.172325134277344e-06, -6.103515625e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0007919073104858398, -2.3841855067985307e-07, -0.004377603530883789, -1.1920928244535389e-07, -1.1444091796875e-05, -2.86102294921875e-05, -0.00018167495727539062, -9.5367431640625e-06, -5.53131103515625e-05, -0.00022125244140625, -0.0002346038818359375, -7.62939453125e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0003814697265625, 0.0, -0.000335693359375, -0.0001087188720703125, -9.5367431640625e-06, -0.000179290771484375, -0.000141143798828125, -0.0005245208740234375, -2.09808349609375e-05, -0.0001163482666015625, -0.0007114410400390625, -0.0004863739013671875, -3.814697265625e-06, -0.0019493009895086288, 0.0, -0.001148223876953125, -2.288818359375e-05, -0.000179290771484375, -0.000110626220703125, -1.9073486328125e-05, -0.0002269744873046875, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000247955322265625, -0.0001277923583984375, -2.288818359375e-05, -3.24249267578125e-05, -0.000141143798828125, -0.0015544891357421875, -0.009893417358398438, -6.67572021484375e-05, -8.96453857421875e-05, -0.012194633483886719, -8.96453857421875e-05, -4.290193557739258, -0.002017974853515625, -4.1961669921875e-05, -0.23575496673583984, -0.0233612060546875, -0.003009796142578125, -7.62939453125e-05, -0.0037355422973632812, -0.00011444091796875, -0.0036334991455078125, -4.9591064453125e-05, -0.0014543533325195312, 0.0, -0.00021849504264537245, -2.2053585780668072e-05, -0.009894226677715778, -4.4583364797290415e-05, -0.0010204315185546875, -0.000362396240234375, -0.001172780990600586, -0.0007127523422241211, -1.33514404296875e-05, -0.000476837158203125, -5.340576171875e-05], "choice_history": [93, 145, 230, 101, 125, "Grimscale", "Oracle", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Grimscale", " ", "Oracle", "<EOS>", 70, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 70, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 58, 123, 38, 217, 58, 123, 48, 216, 70, 58, 123, 38, 217, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 87, 193, "Both", "Player", "<EOS>", 71, 109]}, {"inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            ChangeAttack(1), MinionSelector(IsType(MINION_TYPE.MURLOC),\n            BothPlayer())))])\n", "score": -4.664552752792353, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GrimscaleOracle", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -4.172316494077677e-06, -2.3841855067985307e-07, -6.9141146923357155e-06, -1.9073486328125e-06, -5.14984130859375e-05, -3.62396240234375e-05, -1.9073486328125e-06, -3.0517578125e-05, -5.233287811279297e-05, -5.960462772236497e-07, -7.62939453125e-06, -3.814697265625e-06, -0.001125335693359375, -0.000186920166015625, -0.000164031982421875, -0.00026702880859375, -3.814697265625e-06, -5.91278076171875e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.3351374946068972e-05, -3.3736090699676424e-05, -5.722038622479886e-06, 0.0, -2.47955322265625e-05, -2.09808349609375e-05, -5.14984130859375e-05, -0.00231170654296875, -3.814697265625e-06, -3.886222839355469e-05, -4.172325134277344e-06, -6.103515625e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0007919073104858398, -2.3841855067985307e-07, -0.004377603530883789, -1.1920928244535389e-07, -1.1444091796875e-05, -2.86102294921875e-05, -0.00018167495727539062, -9.5367431640625e-06, -5.53131103515625e-05, -0.00022125244140625, -0.0002346038818359375, -7.62939453125e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0003814697265625, 0.0, -0.000335693359375, -0.0001087188720703125, -9.5367431640625e-06, -0.000179290771484375, -0.000141143798828125, -0.0005245208740234375, -2.09808349609375e-05, -0.0001163482666015625, -0.0007114410400390625, -0.0004863739013671875, -3.814697265625e-06, -0.0019493009895086288, 0.0, -0.001148223876953125, -2.288818359375e-05, -0.000179290771484375, -0.000110626220703125, -1.9073486328125e-05, -0.0002269744873046875, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000247955322265625, -0.0001277923583984375, -2.288818359375e-05, -3.24249267578125e-05, -0.000141143798828125, -0.0015544891357421875, -0.009893417358398438, -6.67572021484375e-05, -8.96453857421875e-05, -4.450368881225586, -0.000583648681640625, -5.7220458984375e-05, -0.019227981567382812, -4.00543212890625e-05, -0.13290882110595703, -0.007244110107421875, -0.0025615692138671875, -7.05718994140625e-05, -0.0028028488159179688, -0.0001659393310546875, -0.0028057098388671875, -4.9591064453125e-05, -0.001007080078125, 0.0, -0.00024173686688300222, -2.3126451196731068e-05, -0.011213396675884724, -3.623903467087075e-05, -0.0008945465087890625, -0.000354766845703125, -0.0012068748474121094, -0.0007051229476928711, -1.52587890625e-05, -0.000453948974609375, -5.340576171875e-05], "choice_history": [93, 145, 230, 101, 125, "Grimscale", "Oracle", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Grimscale", " ", "Oracle", "<EOS>", 70, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 70, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 58, 123, 38, 217, 58, 123, 40, 216, 70, 58, 123, 38, 217, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 87, 193, "Both", "Player", "<EOS>", 71, 109]}, {"inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC)))])\n", "score": -4.697259269064709, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GrimscaleOracle", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -4.172316494077677e-06, -2.3841855067985307e-07, -6.9141146923357155e-06, -1.9073486328125e-06, -5.14984130859375e-05, -3.62396240234375e-05, -1.9073486328125e-06, -3.0517578125e-05, -5.233287811279297e-05, -5.960462772236497e-07, -7.62939453125e-06, -3.814697265625e-06, -0.001125335693359375, -0.000186920166015625, -0.000164031982421875, -0.00026702880859375, -3.814697265625e-06, -5.91278076171875e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.3351374946068972e-05, -3.3736090699676424e-05, -5.722038622479886e-06, 0.0, -2.47955322265625e-05, -2.09808349609375e-05, -5.14984130859375e-05, -0.00231170654296875, -3.814697265625e-06, -3.886222839355469e-05, -4.172325134277344e-06, -6.103515625e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0007919073104858398, -2.3841855067985307e-07, -0.004377603530883789, -1.1920928244535389e-07, -1.1444091796875e-05, -2.86102294921875e-05, -0.00018167495727539062, -9.5367431640625e-06, -5.53131103515625e-05, -0.00022125244140625, -0.0002346038818359375, -7.62939453125e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0003814697265625, 0.0, -0.000335693359375, -0.0001087188720703125, -9.5367431640625e-06, -0.000179290771484375, -0.000141143798828125, -0.0005245208740234375, -2.09808349609375e-05, -0.0001163482666015625, -0.0007114410400390625, -0.0004863739013671875, -3.814697265625e-06, -0.0019493009895086288, 0.0, -0.001148223876953125, -2.288818359375e-05, -0.000179290771484375, -0.000110626220703125, -1.9073486328125e-05, -0.0002269744873046875, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000247955322265625, -0.0001277923583984375, -2.288818359375e-05, -3.24249267578125e-05, -0.000141143798828125, -0.0015544891357421875, -4.629493713378906, -0.0004596710205078125, -0.0019855499267578125, -0.000461578369140625, -0.0008411407470703125, -0.021341323852539062, -1.52587890625e-05, -0.00211334228515625, -3.814697265625e-06, -0.0001741533342283219, -2.777568624878768e-05, -0.02037869207561016, -3.4570634852570947e-06, -0.0005359649658203125, -1.33514404296875e-05], "choice_history": [93, 145, 230, 101, 125, "Grimscale", "Oracle", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Grimscale", " ", "Oracle", "<EOS>", 70, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 70, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 58, 123, 38, 216, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 71, 109]}, {"inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "score": -5.820118499564842, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GrimscaleOracle", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "PIRATE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -4.172316494077677e-06, -2.3841855067985307e-07, -6.9141146923357155e-06, -1.9073486328125e-06, -5.14984130859375e-05, -3.62396240234375e-05, -1.9073486328125e-06, -3.0517578125e-05, -5.233287811279297e-05, -5.960462772236497e-07, -7.62939453125e-06, -3.814697265625e-06, -0.001125335693359375, -0.000186920166015625, -0.000164031982421875, -0.00026702880859375, -3.814697265625e-06, -5.91278076171875e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.3351374946068972e-05, -3.3736090699676424e-05, -5.722038622479886e-06, 0.0, -2.47955322265625e-05, -2.09808349609375e-05, -5.14984130859375e-05, -0.00231170654296875, -3.814697265625e-06, -3.886222839355469e-05, -4.172325134277344e-06, -6.103515625e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0007919073104858398, -2.3841855067985307e-07, -5.744731903076172, -1.5377980162156746e-05, -6.866455078125e-05, -1.33514404296875e-05, -0.00012028217315673828, -1.9073486328125e-05, -8.96453857421875e-05, -0.0001392364501953125, -0.00023651123046875, -7.62939453125e-06, -2.47955322265625e-05, -2.09808349609375e-05, -0.00037384033203125, 0.0, -0.00048065185546875, -0.0001087188720703125, -5.7220458984375e-06, -0.000213623046875, -0.00016021728515625, -0.0005588531494140625, -2.09808349609375e-05, -0.0001125335693359375, -0.0006961822509765625, -0.00051116943359375, -3.814697265625e-06, -0.0019525187090039253, 0.0, -0.0011463165283203125, -2.288818359375e-05, -0.0001850128173828125, -0.0001125335693359375, -1.9073486328125e-05, -0.0002288818359375, -2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0002460479736328125, -0.000125885009765625, -2.288818359375e-05, -3.24249267578125e-05, -0.00014495849609375, -0.0015621185302734375, -0.009899139404296875, -6.866455078125e-05, -8.96453857421875e-05, -0.012144088745117188, -8.96453857421875e-05, -0.014644622802734375, -8.58306884765625e-05, -0.0024700164794921875, 0.0, -0.00015746740973554552, -2.6583491489873268e-05, -0.017160387709736824, -2.1576648578047752e-05, -0.000583648681640625, -0.000347137451171875, -0.001014113426208496, -0.0006937980651855469, -5.7220458984375e-06, -0.000591278076171875, -3.4332275390625e-05], "choice_history": [93, 145, 230, 101, 125, "Grimscale", "Oracle", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Grimscale", " ", "Oracle", "<EOS>", 70, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 70, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 58, 123, 38, 217, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 87, 193, "Both", "Player", "<EOS>", 71, 109]}, {"inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(1), IsType(MINION_TYPE.MURLOC)))])\n", "score": -6.518676023267965, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GrimscaleOracle", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template37"}, "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -4.172316494077677e-06, -2.3841855067985307e-07, -6.9141146923357155e-06, -1.9073486328125e-06, -5.14984130859375e-05, -3.62396240234375e-05, -1.9073486328125e-06, -3.0517578125e-05, -5.233287811279297e-05, -5.960462772236497e-07, -7.62939453125e-06, -3.814697265625e-06, -0.001125335693359375, -0.000186920166015625, -0.000164031982421875, -0.00026702880859375, -3.814697265625e-06, -5.91278076171875e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.3351374946068972e-05, -3.3736090699676424e-05, -5.722038622479886e-06, 0.0, -2.47955322265625e-05, -2.09808349609375e-05, -5.14984130859375e-05, -0.00231170654296875, -3.814697265625e-06, -3.886222839355469e-05, -4.172325134277344e-06, -6.103515625e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0007919073104858398, -2.3841855067985307e-07, -0.004377603530883789, -1.1920928244535389e-07, -1.1444091796875e-05, -2.86102294921875e-05, -0.00018167495727539062, -9.5367431640625e-06, -5.53131103515625e-05, -0.00022125244140625, -0.0002346038818359375, -7.62939453125e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0003814697265625, 0.0, -0.000335693359375, -0.0001087188720703125, -9.5367431640625e-06, -0.000179290771484375, -0.000141143798828125, -0.0005245208740234375, -2.09808349609375e-05, -0.0001163482666015625, -0.0007114410400390625, -0.0004863739013671875, -3.814697265625e-06, -0.0019493009895086288, 0.0, -0.001148223876953125, -2.288818359375e-05, -0.000179290771484375, -0.000110626220703125, -1.9073486328125e-05, -0.0002269744873046875, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000247955322265625, -0.0001277923583984375, -2.288818359375e-05, -3.24249267578125e-05, -0.000141143798828125, -0.0015544891357421875, -0.009893417358398438, -6.67572021484375e-05, -8.96453857421875e-05, -0.012194633483886719, -8.96453857421875e-05, -4.290193557739258, -0.002017974853515625, -4.1961669921875e-05, -2.0336389541625977, -0.10151863098144531, -0.030872344970703125, -1.9073486328125e-05, -0.00496673583984375, -1.9073486328125e-06, -0.0002473385538905859, -4.267659824108705e-05, -0.012748969718813896, -6.055659832782112e-05, -0.00054931640625, -1.1444091796875e-05], "choice_history": [93, 145, 230, 101, 125, "Grimscale", "Oracle", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Grimscale", " ", "Oracle", "<EOS>", 70, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 70, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 58, 123, 38, 217, 58, 123, 48, 216, 70, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 71, 109]}, {"inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(ChangeAttack.), BothPlayer()))])\n", "score": -7.063845372864073, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GrimscaleOracle", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "", "_type": "Attribute", "value": {"_type": "Template29"}}], "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -4.172316494077677e-06, -2.3841855067985307e-07, -6.9141146923357155e-06, -1.9073486328125e-06, -5.14984130859375e-05, -3.62396240234375e-05, -1.9073486328125e-06, -3.0517578125e-05, -5.233287811279297e-05, -5.960462772236497e-07, -7.62939453125e-06, -3.814697265625e-06, -0.001125335693359375, -0.000186920166015625, -0.000164031982421875, -0.00026702880859375, -3.814697265625e-06, -5.91278076171875e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.3351374946068972e-05, -3.3736090699676424e-05, -5.722038622479886e-06, 0.0, -2.47955322265625e-05, -2.09808349609375e-05, -5.14984130859375e-05, -0.00231170654296875, -3.814697265625e-06, -3.886222839355469e-05, -4.172325134277344e-06, -6.103515625e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0007919073104858398, -2.3841855067985307e-07, -0.004377603530883789, -1.1920928244535389e-07, -1.1444091796875e-05, -2.86102294921875e-05, -0.00018167495727539062, -9.5367431640625e-06, -5.53131103515625e-05, -0.00022125244140625, -0.0002346038818359375, -7.62939453125e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0003814697265625, 0.0, -0.000335693359375, -0.0001087188720703125, -9.5367431640625e-06, -0.000179290771484375, -0.000141143798828125, -0.0005245208740234375, -2.09808349609375e-05, -0.0001163482666015625, -0.0007114410400390625, -0.0004863739013671875, -3.814697265625e-06, -0.0019493009895086288, 0.0, -0.001148223876953125, -2.288818359375e-05, -0.000179290771484375, -0.000110626220703125, -1.9073486328125e-05, -0.0002269744873046875, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000247955322265625, -0.0001277923583984375, -2.288818359375e-05, -3.24249267578125e-05, -0.000141143798828125, -0.0015544891357421875, -0.009893417358398438, -6.67572021484375e-05, -8.96453857421875e-05, -0.012194633483886719, -8.96453857421875e-05, -0.014619827270507812, -8.58306884765625e-05, -6.984081268310547, -0.006626830901950598, -0.0134735107421875, -1.52587890625e-05, -0.0011459587840363383, -0.0007781982421875, -5.7220458984375e-06, -0.0012302398681640625, -3.814697265625e-05], "choice_history": [93, 145, 230, 101, 125, "Grimscale", "Oracle", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Grimscale", " ", "Oracle", "<EOS>", 70, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 70, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 58, 123, 38, 217, 58, 123, 48, 216, 55, 116, 40, "<EOS>", 87, 193, "Both", "Player", "<EOS>", 71, 109]}, {"inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC, battlecry=\n            Battlecry(Give(ChangeHealth(1)), MinionSelector(IsType(\n            MINION_TYPE.MURLOC), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -7.1144745198196375, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GrimscaleOracle", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"_type": "Template25"}, "args": [{"func": {"id": "ChangeHealth", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 1, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -4.172316494077677e-06, -2.3841855067985307e-07, -6.9141146923357155e-06, -1.9073486328125e-06, -5.14984130859375e-05, -3.62396240234375e-05, -1.9073486328125e-06, -3.0517578125e-05, -5.233287811279297e-05, -5.960462772236497e-07, -7.62939453125e-06, -3.814697265625e-06, -0.001125335693359375, -0.000186920166015625, -0.000164031982421875, -0.00026702880859375, -3.814697265625e-06, -5.91278076171875e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.3351374946068972e-05, -3.3736090699676424e-05, -5.722038622479886e-06, 0.0, -2.47955322265625e-05, -2.09808349609375e-05, -5.14984130859375e-05, -6.20836067199707, -1.52587890625e-05, -2.706050690903794e-05, -1.1920928244535389e-07, -2.288818359375e-05, 0.0, -7.62939453125e-06, 0.0, -0.0009111166000366211, -1.1920928244535389e-07, -0.005625486373901367, 0.0, -0.0008449554443359375, -0.40363526344299316, 0.0, -0.002315521240234375, -0.000125885009765625, -0.000530242919921875, -4.1961669921875e-05, -0.00379180908203125, -2.86102294921875e-05, -0.0003261566162109375, -6.103515625e-05, -0.001560211181640625, -5.91278076171875e-05, -0.0005474090576171875, -3.814697265625e-06, -0.09373712539672852, -0.0011310577392578125, 0.0, -0.12121391296386719, -0.03522491455078125, -8.58306884765625e-05, -0.009943008422851562, -0.0002689361572265625, -0.0027103424072265625, -0.0001277923583984375, -0.00014495849609375, -0.00061798095703125, -4.1961669921875e-05, -8.392333984375e-05, -1.9073486328125e-06, -0.000110626220703125, 0.0, -0.00013565612607635558, -2.014629171753768e-05, -0.005603771656751633, -3.123240458080545e-05, -0.0015249252319335938, -0.0019168853759765625, -0.0012220144271850586, -0.0006376504898071289, -1.1444091796875e-05, -0.0008373260498046875, -3.24249267578125e-05, -7.748603820800781e-06, -7.62939453125e-06, -9.5367431640625e-06, -0.0001201629638671875, -0.000274658203125, -3.814697265625e-06, -1.71661376953125e-05, -7.62939453125e-06, -5.91278076171875e-05, 0.0, -4.57763671875e-05, -0.20391845703125, -4.57763671875e-05, -0.00019953641458414495, -6.341733387671411e-05, -0.0012225215323269367, -1.156323378381785e-05, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Grimscale", "Oracle", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Grimscale", " ", "Oracle", "<EOS>", 70, 89, 88, 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 37, 216, 58, 123, 23, 146, "Change", "Health", "<EOS>", 216, 70, 58, 123, 38, 217, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 87, 193, "Both", "Player", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "1", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -7.276669430631415, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GrimscaleOracle", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 1, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -4.172316494077677e-06, -2.3841855067985307e-07, -6.9141146923357155e-06, -1.9073486328125e-06, -5.14984130859375e-05, -3.62396240234375e-05, -1.9073486328125e-06, -3.0517578125e-05, -5.233287811279297e-05, -5.960462772236497e-07, -7.62939453125e-06, -3.814697265625e-06, -7.1402435302734375, -0.0026493072509765625, -0.0008916854858398438, -6.67572021484375e-05, -0.015377044677734375, -9.1552734375e-05, -0.00018310546875, -0.0064067840576171875, -0.0018157958984375, 0.0, -0.03483530133962631, -8.344646857949556e-07, -0.0015411376953125, -8.20159912109375e-05, -0.00019073486328125, -4.9591064453125e-05, -2.6702880859375e-05, -0.0004100799560546875, -7.05718994140625e-05, -3.814697265625e-06, -7.62939453125e-06, -0.000339508056640625, -7.82012939453125e-05, -2.86102294921875e-05, -2.288818359375e-05, -0.0002288818359375, -0.0010051727294921875, -0.03418540954589844, -0.0002422332763671875, -5.340576171875e-05, -0.008923530578613281, -0.0001430511474609375, -0.0046558380126953125, -0.00020599365234375, -0.0020971298217773438, 0.0, -0.00027617867453955114, -2.7417976525612175e-05, -0.010864347219467163, -3.766949521377683e-05, -0.000904083251953125, -0.000324249267578125, -0.0009479522705078125, -0.0005142688751220703, -9.5367431640625e-06, -0.0003452301025390625, -0.0003070831298828125, -6.4849853515625e-05, -1.52587890625e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.000843048095703125, -0.0004024505615234375, -1.1444091796875e-05, -0.000156402587890625, -0.0004787445068359375, -8.96453857421875e-05, 0.0, -7.82012939453125e-05, -0.001712799072265625, -3.24249267578125e-05, -8.415820775553584e-05, -0.00010668662434909493, -0.0006132474518381059, -1.5139465176616795e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Grimscale", "Oracle", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 107, 153, 18, 124, 36, 217, 70, 70, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 58, 123, 38, 217, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 87, 193, "Both", "Player", "<EOS>", 71, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "1", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(IsType(MINION_TYPE.MURLOC)), BothPlayer()))])\n", "score": -7.580210728409604, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GrimscaleOracle", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}], "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -4.172316494077677e-06, -2.3841855067985307e-07, -6.9141146923357155e-06, -1.9073486328125e-06, -5.14984130859375e-05, -3.62396240234375e-05, -1.9073486328125e-06, -3.0517578125e-05, -5.233287811279297e-05, -5.960462772236497e-07, -7.62939453125e-06, -3.814697265625e-06, -0.001125335693359375, -0.000186920166015625, -0.000164031982421875, -0.00026702880859375, -3.814697265625e-06, -5.91278076171875e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.3351374946068972e-05, -3.3736090699676424e-05, -5.722038622479886e-06, 0.0, -2.47955322265625e-05, -2.09808349609375e-05, -5.14984130859375e-05, -0.00231170654296875, -3.814697265625e-06, -3.886222839355469e-05, -4.172325134277344e-06, -6.103515625e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0007919073104858398, -2.3841855067985307e-07, -0.004377603530883789, -1.1920928244535389e-07, -1.1444091796875e-05, -2.86102294921875e-05, -0.00018167495727539062, -9.5367431640625e-06, -5.53131103515625e-05, -0.00022125244140625, -0.0002346038818359375, -7.62939453125e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0003814697265625, 0.0, -0.000335693359375, -0.0001087188720703125, -9.5367431640625e-06, -0.000179290771484375, -0.000141143798828125, -0.0005245208740234375, -2.09808349609375e-05, -0.0001163482666015625, -0.0007114410400390625, -0.0004863739013671875, -3.814697265625e-06, -0.0019493009895086288, 0.0, -0.001148223876953125, -2.288818359375e-05, -0.000179290771484375, -0.000110626220703125, -1.9073486328125e-05, -0.0002269744873046875, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000247955322265625, -0.0001277923583984375, -2.288818359375e-05, -3.24249267578125e-05, -0.000141143798828125, -0.0015544891357421875, -0.009893417358398438, -6.67572021484375e-05, -8.96453857421875e-05, -0.012194633483886719, -8.96453857421875e-05, -7.471794128417969, -0.000370025634765625, -0.03777313232421875, -0.000667572021484375, -0.010833740234375, -1.52587890625e-05, -0.0014810562133789062, -1.9073486328125e-06, -0.00020311806292738765, -2.396090167167131e-05, -0.01131100207567215, -1.3112935448589269e-05, -0.0010442733764648438, -0.0003681182861328125, -0.0012542009353637695, -0.0007488727569580078, -9.5367431640625e-06, -0.0005016326904296875, -5.14984130859375e-05], "choice_history": [93, 145, 230, 101, 125, "Grimscale", "Oracle", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Grimscale", " ", "Oracle", "<EOS>", 70, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 70, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 58, 123, 38, 217, 58, 123, 48, 216, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 87, 193, "Both", "Player", "<EOS>", 71, 109]}, {"inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=5)\n", "score": -7.986131062487168, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GrimscaleOracle", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "Template22"}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -4.172316494077677e-06, -2.3841855067985307e-07, -6.9141146923357155e-06, -1.9073486328125e-06, -5.14984130859375e-05, -3.62396240234375e-05, -1.9073486328125e-06, -3.0517578125e-05, -5.233287811279297e-05, -5.960462772236497e-07, -7.62939453125e-06, -3.814697265625e-06, -0.001125335693359375, -0.000186920166015625, -0.000164031982421875, -0.00026702880859375, -3.814697265625e-06, -5.91278076171875e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.3351374946068972e-05, -3.3736090699676424e-05, -5.722038622479886e-06, 0.0, -2.47955322265625e-05, -2.09808349609375e-05, -5.14984130859375e-05, -0.00231170654296875, -3.814697265625e-06, -3.886222839355469e-05, -4.172325134277344e-06, -6.103515625e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0007919073104858398, -2.3841855067985307e-07, -0.004377603530883789, -1.1920928244535389e-07, -1.1444091796875e-05, -2.86102294921875e-05, -0.00018167495727539062, -9.5367431640625e-06, -5.53131103515625e-05, -0.00022125244140625, -0.0002346038818359375, -7.62939453125e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0003814697265625, 0.0, -0.000335693359375, -0.0001087188720703125, -9.5367431640625e-06, -0.000179290771484375, -0.000141143798828125, -0.0005245208740234375, -2.09808349609375e-05, -0.0001163482666015625, -0.0007114410400390625, -0.0004863739013671875, -3.814697265625e-06, -0.0019493009895086288, 0.0, -7.970546722412109, -3.4332275390625e-05], "choice_history": [93, 145, 230, 101, 125, "Grimscale", "Oracle", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Grimscale", " ", "Oracle", "<EOS>", 70, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 70, 224, 205, "auras", "<EOS>", 35, 109]}, {"inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, spell_damage=1)\n", "score": -8.039076804870767, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GrimscaleOracle", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "Template14"}, "_type": "keyword", "arg": "spell_damage"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -4.172316494077677e-06, -2.3841855067985307e-07, -6.9141146923357155e-06, -1.9073486328125e-06, -5.14984130859375e-05, -3.62396240234375e-05, -1.9073486328125e-06, -3.0517578125e-05, -5.233287811279297e-05, -5.960462772236497e-07, -7.62939453125e-06, -3.814697265625e-06, -0.001125335693359375, -0.000186920166015625, -0.000164031982421875, -0.00026702880859375, -3.814697265625e-06, -5.91278076171875e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.3351374946068972e-05, -3.3736090699676424e-05, -5.722038622479886e-06, 0.0, -2.47955322265625e-05, -2.09808349609375e-05, -5.14984130859375e-05, -0.00231170654296875, -3.814697265625e-06, -3.886222839355469e-05, -4.172325134277344e-06, -6.103515625e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0007919073104858398, -2.3841855067985307e-07, -0.004377603530883789, -1.1920928244535389e-07, -1.1444091796875e-05, -2.86102294921875e-05, -0.00018167495727539062, -9.5367431640625e-06, -5.53131103515625e-05, -0.00022125244140625, -0.0002346038818359375, -7.62939453125e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0003814697265625, 0.0, -0.000335693359375, -0.0001087188720703125, -9.5367431640625e-06, -0.000179290771484375, -0.000141143798828125, -0.0005245208740234375, -2.09808349609375e-05, -0.0001163482666015625, -0.0007114410400390625, -0.0004863739013671875, -3.814697265625e-06, -8.024678230285645, -1.9669532775878906e-05, -0.0007762908935546875, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Grimscale", "Oracle", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Grimscale", " ", "Oracle", "<EOS>", 70, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 70, 224, 205, "spell_damage", "<EOS>", 28, 109]}, {"inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=False)\n", "score": -8.53119312761168, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GrimscaleOracle", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MURLOC", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template14"}, {"_type": "Template14"}], "_type": "Call", "keywords": [{"value": {"_type": "Template27"}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -4.172316494077677e-06, -2.3841855067985307e-07, -6.9141146923357155e-06, -1.9073486328125e-06, -5.14984130859375e-05, -3.62396240234375e-05, -1.9073486328125e-06, -3.0517578125e-05, -5.233287811279297e-05, -5.960462772236497e-07, -7.62939453125e-06, -3.814697265625e-06, -0.001125335693359375, -0.000186920166015625, -0.000164031982421875, -0.00026702880859375, -3.814697265625e-06, -5.91278076171875e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.3351374946068972e-05, -3.3736090699676424e-05, -5.722038622479886e-06, 0.0, -2.47955322265625e-05, -2.09808349609375e-05, -5.14984130859375e-05, -0.00231170654296875, -3.814697265625e-06, -3.886222839355469e-05, -4.172325134277344e-06, -6.103515625e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0007919073104858398, -2.3841855067985307e-07, -0.004377603530883789, -1.1920928244535389e-07, -1.1444091796875e-05, -2.86102294921875e-05, -0.00018167495727539062, -9.5367431640625e-06, -5.53131103515625e-05, -0.00022125244140625, -0.0002346038818359375, -7.62939453125e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0003814697265625, 0.0, -0.000335693359375, -0.0001087188720703125, -9.5367431640625e-06, -0.000179290771484375, -0.000141143798828125, -0.0005245208740234375, -2.09808349609375e-05, -0.0001163482666015625, -0.0007114410400390625, -0.0004863739013671875, -3.814697265625e-06, -0.0019493009895086288, 0.0, -8.515545845031738, -9.72747802734375e-05], "choice_history": [93, 145, 230, 101, 125, "Grimscale", "Oracle", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Grimscale", " ", "Oracle", "<EOS>", 70, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 70, 70, 224, 205, "auras", "<EOS>", 39, 109]}, {"inferred_code": "", "score": -21.32105827331543, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.33514404296875e-05, -1.9073486328125e-06, -21.321043014526367], "choice_history": [93, 145, 228]}], "index": 41}
{"beams": [{"inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "score": -0.040653658455731545, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GuardianOfKings", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template24"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template5"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 6, "hole0": 5, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-05, -5.340576171875e-05, -0.0004444122314453125, -2.6702880859375e-05, -2.7179348762729205e-05, -0.0009671667357906699, -0.000427274004323408, -2.9802316930727102e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -5.7220458984375e-06, -0.011289596557617188, -1.33514404296875e-05, -0.000217437744140625, -8.96453857421875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -1.52587890625e-05, -7.2479248046875e-05, -5.7220458984375e-06, -1.2874577805632725e-05, -0.00014519691467285156, -7.832050323486328e-05, -8.320806955453008e-05, -0.0002543926239013672, -0.00012778490781784058, -8.7738037109375e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -0.0001919269561767578, 0.0, -3.62396240234375e-05, -0.0025463104248046875, -3.814697265625e-06, -0.000583648681640625, -7.62939453125e-06, -0.000667572021484375, -1.52587890625e-05, -0.000171661376953125, -0.000232696533203125, -2.288818359375e-05, -4.76837158203125e-05, -0.000274658203125, -1.9073486328125e-06, -0.013596177101135254, -0.00035377879976294935, -6.4849853515625e-05, -0.0037593841552734375, -1.71661376953125e-05, -1.9073486328125e-06, -0.0014836787013337016, -5.7220458984375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000110626220703125, -3.814697265625e-06, -6.103515625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -0.000125885009765625, -5.14984130859375e-05, -0.001316137844696641, -2.1457672119140625e-06, -0.00015115483256522566, -7.152555099310121e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Guardian", "Of", "Kings", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Guardian", " ", "of", " ", "Kings", "<EOS>", 79, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Heal", "<EOS>", 216, 81, 87, 193, "Hero", "Selector", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "5", "<EOS>", "6", "<EOS>", 109]}, {"inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "score": -5.962334747520536, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GuardianOfKings", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template24"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template5"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 6, "hole0": 5, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-05, -5.340576171875e-05, -0.0004444122314453125, -2.6702880859375e-05, -2.7179348762729205e-05, -0.0009671667357906699, -0.000427274004323408, -2.9802316930727102e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -5.7220458984375e-06, -0.011289596557617188, -1.33514404296875e-05, -0.000217437744140625, -8.96453857421875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -1.52587890625e-05, -7.2479248046875e-05, -5.7220458984375e-06, -1.2874577805632725e-05, -0.00014519691467285156, -7.832050323486328e-05, -8.320806955453008e-05, -0.0002543926239013672, -0.00012778490781784058, -8.7738037109375e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -0.0001919269561767578, 0.0, -3.62396240234375e-05, -0.0025463104248046875, -3.814697265625e-06, -0.000583648681640625, -7.62939453125e-06, -0.000667572021484375, -1.52587890625e-05, -0.000171661376953125, -0.000232696533203125, -2.288818359375e-05, -4.76837158203125e-05, -0.000274658203125, -1.9073486328125e-06, -5.888037204742432, -0.00025281330454163253, -3.814697265625e-06, -0.05180072784423828, -2.47955322265625e-05, -1.9073486328125e-06, -0.0008596181287430227, -5.7220458984375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00011444091796875, -3.814697265625e-06, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -0.000125885009765625, -5.14984130859375e-05, -0.001288280705921352, -2.1457672119140625e-06, -0.0001523468381492421, -7.152555099310121e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Guardian", "Of", "Kings", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Guardian", " ", "of", " ", "Kings", "<EOS>", 79, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 81, 87, 193, "Hero", "Selector", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "5", "<EOS>", "6", "<EOS>", 109]}, {"inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(8), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "score": -6.381789168742863, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GuardianOfKings", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template24"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Template34"}], "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template5"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 6, "hole0": 5, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-05, -5.340576171875e-05, -0.0004444122314453125, -2.6702880859375e-05, -2.7179348762729205e-05, -0.0009671667357906699, -0.000427274004323408, -2.9802316930727102e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -5.7220458984375e-06, -0.011289596557617188, -1.33514404296875e-05, -0.000217437744140625, -8.96453857421875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -1.52587890625e-05, -7.2479248046875e-05, -5.7220458984375e-06, -1.2874577805632725e-05, -0.00014519691467285156, -7.832050323486328e-05, -8.320806955453008e-05, -0.0002543926239013672, -0.00012778490781784058, -8.7738037109375e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -0.0001919269561767578, 0.0, -3.62396240234375e-05, -0.0025463104248046875, -3.814697265625e-06, -0.000583648681640625, -7.62939453125e-06, -0.000667572021484375, -1.52587890625e-05, -0.000171661376953125, -0.000232696533203125, -2.288818359375e-05, -4.76837158203125e-05, -0.000274658203125, -1.9073486328125e-06, -0.013596177101135254, -0.00035377879976294935, -6.4849853515625e-05, -6.342421531677246, -0.0021877288818359375, 0.0, -0.0018273579189553857, -3.0517578125e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001010894775390625, -5.7220458984375e-06, -5.53131103515625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -0.0001239776611328125, -5.14984130859375e-05, -0.0013124520191922784, -2.1457672119140625e-06, -0.00015210843412205577, -7.152555099310121e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Guardian", "Of", "Kings", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Guardian", " ", "of", " ", "Kings", "<EOS>", 79, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Heal", "<EOS>", 216, 84, 87, 193, "Hero", "Selector", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "5", "<EOS>", "6", "<EOS>", 109]}, {"inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(ReplaceHero(6),\n            HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "score": -6.570486269912827, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GuardianOfKings", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template24"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "ReplaceHero", "_type": "Name"}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template5"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 6, "hole0": 5, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-05, -5.340576171875e-05, -0.0004444122314453125, -2.6702880859375e-05, -2.7179348762729205e-05, -0.0009671667357906699, -0.000427274004323408, -2.9802316930727102e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -5.7220458984375e-06, -0.011289596557617188, -1.33514404296875e-05, -0.000217437744140625, -8.96453857421875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -1.52587890625e-05, -7.2479248046875e-05, -5.7220458984375e-06, -1.2874577805632725e-05, -0.00014519691467285156, -7.832050323486328e-05, -8.320806955453008e-05, -0.0002543926239013672, -0.00012778490781784058, -8.7738037109375e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -0.0001919269561767578, 0.0, -3.62396240234375e-05, -0.0025463104248046875, -3.814697265625e-06, -0.000583648681640625, -7.62939453125e-06, -0.000667572021484375, -1.52587890625e-05, -0.000171661376953125, -0.000232696533203125, -2.288818359375e-05, -4.76837158203125e-05, -0.000274658203125, -1.9073486328125e-06, -5.407124042510986, -1.0004973411560059, -0.1026986837387085, -2.86102294921875e-05, -0.03799724578857422, -2.86102294921875e-05, -1.9073486328125e-06, -0.0007133482140488923, -9.5367431640625e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-05, -5.7220458984375e-06, -4.9591064453125e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -0.0001239776611328125, -5.14984130859375e-05, -0.001313252141699195, -2.1457672119140625e-06, -0.00014328729594126344, -7.152555099310121e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Guardian", "Of", "Kings", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Guardian", " ", "of", " ", "Kings", "<EOS>", 79, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Replace", "Hero", "<EOS>", 216, 81, 87, 193, "Hero", "Selector", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "5", "<EOS>", "6", "<EOS>", 109]}, {"inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "score": -6.594949240439483, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GuardianOfKings", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template24"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Kill", "_type": "Name"}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template5"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 6, "hole0": 5, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-05, -5.340576171875e-05, -0.0004444122314453125, -2.6702880859375e-05, -2.7179348762729205e-05, -0.0009671667357906699, -0.000427274004323408, -2.9802316930727102e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -5.7220458984375e-06, -0.011289596557617188, -1.33514404296875e-05, -0.000217437744140625, -8.96453857421875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -1.52587890625e-05, -7.2479248046875e-05, -5.7220458984375e-06, -1.2874577805632725e-05, -0.00014519691467285156, -7.832050323486328e-05, -8.320806955453008e-05, -0.0002543926239013672, -0.00012778490781784058, -8.7738037109375e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -0.0001919269561767578, 0.0, -3.62396240234375e-05, -0.0025463104248046875, -3.814697265625e-06, -0.000583648681640625, -7.62939453125e-06, -0.000667572021484375, -1.52587890625e-05, -0.000171661376953125, -0.000232696533203125, -2.288818359375e-05, -4.76837158203125e-05, -0.000274658203125, -1.9073486328125e-06, -6.452570915222168, -0.0001491269504185766, -1.33514404296875e-05, -0.11574935913085938, -7.43865966796875e-05, -1.9073486328125e-06, -0.005041718482971191, -3.814697265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.000110626220703125, -3.814697265625e-06, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -0.000125885009765625, -5.14984130859375e-05, -0.001306851045228541, -2.1457672119140625e-06, -0.00015127402730286121, -7.152555099310121e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Guardian", "Of", "Kings", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Guardian", " ", "of", " ", "Kings", "<EOS>", 79, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Kill", "<EOS>", 216, 81, 87, 193, "Hero", "Selector", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "5", "<EOS>", "6", "<EOS>", 109]}, {"inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 6)\n", "score": -7.212974794048442, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GuardianOfKings", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template24"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template5"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 6, "hole0": 3, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-05, -5.340576171875e-05, -0.0004444122314453125, -2.6702880859375e-05, -2.7179348762729205e-05, -0.0009671667357906699, -0.000427274004323408, -2.9802316930727102e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -5.7220458984375e-06, -0.011289596557617188, -1.33514404296875e-05, -0.000217437744140625, -8.96453857421875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -1.52587890625e-05, -7.2479248046875e-05, -5.7220458984375e-06, -1.2874577805632725e-05, -0.00014519691467285156, -7.832050323486328e-05, -8.320806955453008e-05, -0.0002543926239013672, -0.00012778490781784058, -8.7738037109375e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -0.0001919269561767578, 0.0, -3.62396240234375e-05, -0.0025463104248046875, -3.814697265625e-06, -0.000583648681640625, -7.62939453125e-06, -0.000667572021484375, -1.52587890625e-05, -0.000171661376953125, -0.000232696533203125, -2.288818359375e-05, -4.76837158203125e-05, -0.000274658203125, -1.9073486328125e-06, -0.013596177101135254, -0.00035377879976294935, -6.4849853515625e-05, -0.0037593841552734375, -1.71661376953125e-05, -1.9073486328125e-06, -0.0014836787013337016, -5.7220458984375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000110626220703125, -3.814697265625e-06, -6.103515625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -0.000125885009765625, -5.14984130859375e-05, -7.173682689666748, 0.0, -0.0001076459520845674, -9.536738616588991e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Guardian", "Of", "Kings", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Guardian", " ", "of", " ", "Kings", "<EOS>", 79, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Heal", "<EOS>", 216, 81, 87, 193, "Hero", "Selector", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "3", "<EOS>", "6", "<EOS>", 109]}, {"inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(5), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "score": -7.26741453263795, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GuardianOfKings", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template24"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template5"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 6, "hole0": 5, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-05, -5.340576171875e-05, -0.0004444122314453125, -2.6702880859375e-05, -2.7179348762729205e-05, -0.0009671667357906699, -0.000427274004323408, -2.9802316930727102e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -5.7220458984375e-06, -0.011289596557617188, -1.33514404296875e-05, -0.000217437744140625, -8.96453857421875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -1.52587890625e-05, -7.2479248046875e-05, -5.7220458984375e-06, -1.2874577805632725e-05, -0.00014519691467285156, -7.832050323486328e-05, -8.320806955453008e-05, -0.0002543926239013672, -0.00012778490781784058, -8.7738037109375e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -0.0001919269561767578, 0.0, -3.62396240234375e-05, -0.0025463104248046875, -3.814697265625e-06, -0.000583648681640625, -7.62939453125e-06, -0.000667572021484375, -1.52587890625e-05, -0.000171661376953125, -0.000232696533203125, -2.288818359375e-05, -4.76837158203125e-05, -0.000274658203125, -1.9073486328125e-06, -0.013596177101135254, -0.00035377879976294935, -6.4849853515625e-05, -7.231151580810547, -9.5367431640625e-05, 0.0, -0.000827312411274761, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.34600830078125e-05, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -0.0001239776611328125, -5.14984130859375e-05, -0.001306491787545383, -2.1457672119140625e-06, -0.00015151243133004755, -7.152555099310121e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Guardian", "Of", "Kings", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Guardian", " ", "of", " ", "Kings", "<EOS>", 79, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Heal", "<EOS>", 216, 77, 87, 193, "Hero", "Selector", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "5", "<EOS>", "6", "<EOS>", 109]}, {"inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(increase_health(6),\n            HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "score": -7.324494634078029, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GuardianOfKings", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template24"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "increase_health", "_type": "Name"}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template5"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 6, "hole0": 5, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-05, -5.340576171875e-05, -0.0004444122314453125, -2.6702880859375e-05, -2.7179348762729205e-05, -0.0009671667357906699, -0.000427274004323408, -2.9802316930727102e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -5.7220458984375e-06, -0.011289596557617188, -1.33514404296875e-05, -0.000217437744140625, -8.96453857421875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -1.52587890625e-05, -7.2479248046875e-05, -5.7220458984375e-06, -1.2874577805632725e-05, -0.00014519691467285156, -7.832050323486328e-05, -8.320806955453008e-05, -0.0002543926239013672, -0.00012778490781784058, -8.7738037109375e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -0.0001919269561767578, 0.0, -3.62396240234375e-05, -0.0025463104248046875, -3.814697265625e-06, -0.000583648681640625, -7.62939453125e-06, -0.000667572021484375, -1.52587890625e-05, -0.000171661376953125, -0.000232696533203125, -2.288818359375e-05, -4.76837158203125e-05, -0.000274658203125, -1.9073486328125e-06, -6.901785373687744, -0.3712313175201416, -0.0001354217529296875, -0.028687477111816406, -2.09808349609375e-05, -1.9073486328125e-06, -0.0013012886047363281, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.000118255615234375, -3.814697265625e-06, -7.2479248046875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -0.0001277923583984375, -5.14984130859375e-05, -0.0012776796938851476, -2.1457672119140625e-06, -0.000151393236592412, -7.152555099310121e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Guardian", "Of", "Kings", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Guardian", " ", "of", " ", "Kings", "<EOS>", 79, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "increase_health", "<EOS>", 216, 81, 87, 193, "Hero", "Selector", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "5", "<EOS>", "6", "<EOS>", 109]}, {"inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(4), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "score": -7.49588106039274, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GuardianOfKings", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template24"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Template20"}], "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template5"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 6, "hole0": 5, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-05, -5.340576171875e-05, -0.0004444122314453125, -2.6702880859375e-05, -2.7179348762729205e-05, -0.0009671667357906699, -0.000427274004323408, -2.9802316930727102e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -5.7220458984375e-06, -0.011289596557617188, -1.33514404296875e-05, -0.000217437744140625, -8.96453857421875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -1.52587890625e-05, -7.2479248046875e-05, -5.7220458984375e-06, -1.2874577805632725e-05, -0.00014519691467285156, -7.832050323486328e-05, -8.320806955453008e-05, -0.0002543926239013672, -0.00012778490781784058, -8.7738037109375e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -0.0001919269561767578, 0.0, -3.62396240234375e-05, -0.0025463104248046875, -3.814697265625e-06, -0.000583648681640625, -7.62939453125e-06, -0.000667572021484375, -1.52587890625e-05, -0.000171661376953125, -0.000232696533203125, -2.288818359375e-05, -4.76837158203125e-05, -0.000274658203125, -1.9073486328125e-06, -0.013596177101135254, -0.00035377879976294935, -6.4849853515625e-05, -7.459037780761719, -9.72747802734375e-05, -1.9073486328125e-06, -0.001324653159826994, -9.5367431640625e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001068115234375, -5.7220458984375e-06, -6.866455078125e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -0.000125885009765625, -5.14984130859375e-05, -0.0012987606460228562, -2.1457672119140625e-06, -0.00015258524217642844, -7.152555099310121e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Guardian", "Of", "Kings", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Guardian", " ", "of", " ", "Kings", "<EOS>", 79, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Heal", "<EOS>", 216, 76, 87, 193, "Hero", "Selector", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "5", "<EOS>", "6", "<EOS>", 109]}, {"inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()\n            ), condition=Null)\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "score": -7.523182369761308, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GuardianOfKings", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template24"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template5"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}, {"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 6, "hole0": 5, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-05, -5.340576171875e-05, -0.0004444122314453125, -2.6702880859375e-05, -2.7179348762729205e-05, -0.0009671667357906699, -0.000427274004323408, -2.9802316930727102e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -5.7220458984375e-06, -0.011289596557617188, -1.33514404296875e-05, -0.000217437744140625, -8.96453857421875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -1.52587890625e-05, -7.2479248046875e-05, -5.7220458984375e-06, -1.2874577805632725e-05, -0.00014519691467285156, -7.832050323486328e-05, -8.320806955453008e-05, -0.0002543926239013672, -0.00012778490781784058, -8.7738037109375e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -0.0001919269561767578, 0.0, -3.62396240234375e-05, -6.032018661499023, 0.0, -0.47626793384552, 0.0, -0.0009403228759765625, -7.62939453125e-06, -0.0003528594970703125, -0.0001068115234375, -4.1961669921875e-05, -6.4849853515625e-05, -0.000732421875, -1.9073486328125e-06, -0.020887969061732292, -0.00030918512493371964, -6.67572021484375e-05, -0.00534820556640625, -1.71661376953125e-05, 0.0, -0.0011441706446930766, -8.0108642578125e-05, 0.0, -7.62939453125e-06, -0.7379980087280273, -1.1444091796875e-05, -0.22435474395751953, -0.0046939849853515625, -0.0001049041748046875, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.00014495849609375, 0.0, 0.0, 0.0, -0.0001850128173828125, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.00022125244140625, -2.288818359375e-05, -0.0018321151146665215, -2.0265579223632812e-06, -0.00028228163137100637, 0.0, 0.0], "choice_history": [93, 145, 230, 101, 125, "Guardian", "Of", "Kings", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Guardian", " ", "of", " ", "Kings", "<EOS>", 79, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 225, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Heal", "<EOS>", 216, 81, 87, 193, "Hero", "Selector", "<EOS>", 205, "condition", "<EOS>", 24, 148, "Null", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "5", "<EOS>", "6", "<EOS>", 109]}, {"inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6),\n            CharacterSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "score": -7.5352955712366665, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GuardianOfKings", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template24"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"hole0": "CharacterSelector", "_type": "Template5"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 6, "hole0": 5, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-05, -5.340576171875e-05, -0.0004444122314453125, -2.6702880859375e-05, -2.7179348762729205e-05, -0.0009671667357906699, -0.000427274004323408, -2.9802316930727102e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -5.7220458984375e-06, -0.011289596557617188, -1.33514404296875e-05, -0.000217437744140625, -8.96453857421875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -1.52587890625e-05, -7.2479248046875e-05, -5.7220458984375e-06, -1.2874577805632725e-05, -0.00014519691467285156, -7.832050323486328e-05, -8.320806955453008e-05, -0.0002543926239013672, -0.00012778490781784058, -8.7738037109375e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -0.0001919269561767578, 0.0, -3.62396240234375e-05, -0.0025463104248046875, -3.814697265625e-06, -0.000583648681640625, -7.62939453125e-06, -0.000667572021484375, -1.52587890625e-05, -0.000171661376953125, -0.000232696533203125, -2.288818359375e-05, -4.76837158203125e-05, -0.000274658203125, -1.9073486328125e-06, -0.013596177101135254, -0.00035377879976294935, -6.4849853515625e-05, -0.0037593841552734375, -1.71661376953125e-05, -1.9073486328125e-06, -7.495675563812256, -0.00043320655822753906, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001125335693359375, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -0.0001201629638671875, -4.9591064453125e-05, -0.0013904176885262132, -2.1457672119140625e-06, -0.00014519451360683888, -7.152555099310121e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Guardian", "Of", "Kings", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Guardian", " ", "of", " ", "Kings", "<EOS>", 79, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Heal", "<EOS>", 216, 81, 87, 193, "Character", "Selector", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "5", "<EOS>", "6", "<EOS>", 109]}, {"inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n        player.hero.increase_armor(6)\n        player.hero.increase_armor(6)\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "score": -9.733638284949642, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GuardianOfKings", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template24"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template5"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}, {"_type": "Expr", "value": {"func": {"attr": "increase_armor", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template28"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_armor", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template28"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 6, "hole0": 5, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-05, -5.340576171875e-05, -0.0004444122314453125, -2.6702880859375e-05, -2.7179348762729205e-05, -0.0009671667357906699, -0.000427274004323408, -2.9802316930727102e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -5.7220458984375e-06, -4.580910682678223, -0.9740381240844727, -0.000331878662109375, -5.14984130859375e-05, -8.58306884765625e-05, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-05, -5.7220458984375e-06, -1.704686292214319e-05, -0.00012958049774169922, -7.259845733642578e-05, -8.49962088977918e-05, -0.0002582073211669922, -0.00010537604975979775, -5.91278076171875e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -0.0001785755157470703, 0.0, -3.4332275390625e-05, -0.001461029052734375, -3.814697265625e-06, -0.0004444122314453125, -9.5367431640625e-06, -0.000652313232421875, -1.52587890625e-05, -0.000171661376953125, -0.00022125244140625, -2.288818359375e-05, -4.76837158203125e-05, -0.000286102294921875, -1.9073486328125e-06, -0.013484954833984375, -0.0003760653780773282, -6.67572021484375e-05, -0.0037403106689453125, -1.71661376953125e-05, -1.9073486328125e-06, -0.0014648436335846782, -5.7220458984375e-05, 0.0, -0.47002220153808594, -0.0001888275146484375, 0.0, -0.000457763671875, -3.4332275390625e-05, -1.9073486328125e-06, -0.5423221588134766, -9.5367431640625e-06, -0.28748607635498047, -0.06207408756017685, -3.4570634852570947e-06, -0.5628995299339294, 0.0, -2.47955322265625e-05, -0.4024314880371094, -0.000362396240234375, -7.62939453125e-06, -2.47955322265625e-05, -0.0003204345703125, -0.000431060791015625, 0.0, -0.134674072265625, 0.0, -0.0009603500366210938, -0.017935920506715775, -3.4570680327306036e-06, -0.4671076238155365, 0.0, -1.52587890625e-05, -0.24872875213623047, -0.064788818359375, -0.000888824462890625, -0.8824054002761841, -0.000110626220703125, -1.52587890625e-05, -3.24249267578125e-05, -0.000102996826171875, -1.9073486328125e-05, -7.62939453125e-05, -3.0517578125e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, -0.0043315887451171875, -9.5367431640625e-05, -0.0007605974096804857, -4.172325134277344e-06, -0.0003220741346012801, -5.960462772236497e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Guardian", "Of", "Kings", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 231, 102, 128, 18, 124, 50, 219, 66, 155, "Guardian", " ", "of", " ", "Kings", "<EOS>", 79, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Heal", "<EOS>", 216, 81, 87, 193, "Hero", "Selector", "<EOS>", 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "increase_armor", "<EOS>", 216, 81, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "increase_armor", "<EOS>", 216, 81, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "5", "<EOS>", "6", "<EOS>", 109]}, {"inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n        player.hero.increase_armor(6)\n        player.hero.increase_armor(6)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) < 7\n", "score": -15.645621045976036, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GuardianOfKings", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template24"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template5"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}, {"_type": "Expr", "value": {"func": {"attr": "increase_armor", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template28"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_armor", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template28"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template24"}], "ops": [{"_type": "Lt"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-05, -5.340576171875e-05, -0.0004444122314453125, -2.6702880859375e-05, -2.7179348762729205e-05, -0.0009671667357906699, -0.000427274004323408, -2.9802316930727102e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -5.7220458984375e-06, -4.580910682678223, -0.9740381240844727, -0.000331878662109375, -5.14984130859375e-05, -8.58306884765625e-05, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-05, -5.7220458984375e-06, -1.704686292214319e-05, -0.00012958049774169922, -7.259845733642578e-05, -8.49962088977918e-05, -0.0002582073211669922, -0.00010537604975979775, -5.91278076171875e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.933906555175781e-06, -2.3841855067985307e-07, -0.0001785755157470703, 0.0, -3.4332275390625e-05, -0.001461029052734375, -3.814697265625e-06, -0.0004444122314453125, -9.5367431640625e-06, -0.000652313232421875, -1.52587890625e-05, -0.000171661376953125, -0.00022125244140625, -2.288818359375e-05, -4.76837158203125e-05, -0.000286102294921875, -1.9073486328125e-06, -0.013484954833984375, -0.0003760653780773282, -6.67572021484375e-05, -0.0037403106689453125, -1.71661376953125e-05, -1.9073486328125e-06, -0.0014648436335846782, -5.7220458984375e-05, 0.0, -0.47002220153808594, -0.0001888275146484375, 0.0, -0.000457763671875, -3.4332275390625e-05, -1.9073486328125e-06, -0.5423221588134766, -9.5367431640625e-06, -0.28748607635498047, -0.06207408756017685, -3.4570634852570947e-06, -0.5628995299339294, 0.0, -2.47955322265625e-05, -0.4024314880371094, -0.000362396240234375, -7.62939453125e-06, -2.47955322265625e-05, -0.0003204345703125, -0.000431060791015625, 0.0, -0.134674072265625, 0.0, -0.0009603500366210938, -0.017935920506715775, -3.4570680327306036e-06, -0.4671076238155365, 0.0, -1.52587890625e-05, -0.24872875213623047, -0.064788818359375, -0.000888824462890625, -0.5860034227371216, -0.0001430511474609375, -6.67572021484375e-05, -1.71661376953125e-05, -0.6758890151977539, -1.9073486328125e-06, -7.82012939453125e-05, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -0.0003491640090942383, 0.0, -0.013468742370605469, -0.013519287109375, -0.0003204345703125, -1.1192989349365234, -0.031599998474121094, -0.001239776611328125, -0.0021610260009765625, -0.9791402816772461, -3.814697265625e-06, -0.0055255889892578125, 0.0, -0.027833938598632812, -1.9073486328125e-06, -0.002363800071179867, -0.0019321441650390625, -0.012694358825683594, 0.0, -6.29425048828125e-05, -0.647089958190918, -0.008778572082519531, -0.0001163482666015625, -0.0001647472381591797, 0.0, -0.591400146484375, -0.0064792633056640625, -0.002902984619140625, -5.7220458984375e-06, -2.09808349609375e-05, -3.814697265625e-06, -0.008693933486938477, -1.9073486328125e-06, 0.0, -0.00028228759765625, 0.0, -0.01967144012451172, 0.0, -0.000621795654296875, -1.9073486328125e-06, -0.013482451438903809, -2.3841855067985307e-07, -0.019263863563537598, -8.344646857949556e-07, -0.5455212593078613, -2.2649765014648438e-06, -0.00019073486328125, -0.5172052383422852, -2.6702880859375e-05, -0.9445590972900391, -4.38690185546875e-05], "choice_history": [93, 145, 230, 101, 125, "Guardian", "Of", "Kings", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 231, 102, 128, 18, 124, 50, 219, 66, 155, "Guardian", " ", "of", " ", "Kings", "<EOS>", 79, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Heal", "<EOS>", 216, 81, 87, 193, "Hero", "Selector", "<EOS>", 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "increase_armor", "<EOS>", 216, 81, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "increase_armor", "<EOS>", 216, 81, 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 213, 12, 216, 79, 109]}, {"inferred_code": "", "score": -18.559181213378906, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-05, -18.55912208557129], "choice_history": [93, 145, 228]}, {"inferred_code": "", "score": -21.59401798248291, "model_output": {"_type": "Module", "body": [{"_type": "Template13_stmt_seq"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-05, -5.340576171875e-05, -15.055624008178711, -6.538281440734863], "choice_history": [93, 145, 230, 109, 109]}], "index": 42}
{"beams": [{"inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n", "score": -0.15769280787662865, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GurubashiBerserker", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template22"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template24"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "MinionIsTarget", "_type": "Template5"}, "_type": "keyword", "arg": "condition"}]}, {"func": {"_type": "Template32"}, "args": [{"func": {"_type": "Template25"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template16"}], "_type": "Call"}], "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.00011705666838679463, -0.0004273931554052979, -0.0018173621501773596, -5.7220458984375e-06, -0.0001239776611328125, -0.0001621246337890625, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, 0.0, -0.0001811981201171875, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -9.775122634891886e-06, -1.049041748046875e-05, -2.1457672119140625e-06, 0.0, -0.00046539306640625, -2.47955322265625e-05, -2.288818359375e-05, 0.0, 0.0, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -0.0001544952392578125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -8.20159912109375e-05, -3.24249267578125e-05, -0.0001201629638671875, -7.43865966796875e-05, -0.000385284423828125, -0.0004825592041015625, -0.00218963623046875, 0.0, -0.012430310249328613, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -4.1961669921875e-05, -1.52587890625e-05, -7.82012939453125e-05, -0.0032520294189453125, -1.52587890625e-05, -0.051235198974609375, -0.0023097991943359375, -0.0001125335693359375, -1.33514404296875e-05, -0.0018877924885600805, -0.010043381713330746, 0.0, -0.004451751708984375, 0.0, -0.004006385803222656, -1.33514404296875e-05, -0.00054168701171875, -1.9073486328125e-06, -0.008146166801452637, -0.034705162048339844, -0.0024967065546661615, -8.654594421386719e-05, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -4.38690185546875e-05, -0.00051116943359375, -0.000308990478515625, -0.000213623046875, -1.1444091796875e-05, -1.71661376953125e-05, -3.0517578125e-05, -0.0044612884521484375, -5.7220458984375e-06, -0.0054264068603515625, -0.0030727386474609375, -7.62939453125e-06, -0.00044369688839651644, -1.9073486328125e-06, 0.0, -4.38690185546875e-05, -9.5367431640625e-06], "choice_history": [93, 145, 230, 101, 125, "Gurubashi", "Berserker", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Gurubashi", " ", "Berserker", "<EOS>", 77, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 79, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 58, 122, 23, 146, "Character", "Damaged", "<EOS>", 224, 205, "condition", "<EOS>", 51, 193, "Minion", "Is", "Target", "<EOS>", 58, 123, 43, 217, 58, 123, 37, 216, 58, 123, 40, 216, 72, 87, 193, "Self", "Selector", "<EOS>", 71, 109]}, {"inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(Damaged(), ActionTag(Give(\n            ChangeAttack(3)), SelfSelector()))])\n", "score": -3.3978482912689287, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GurubashiBerserker", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template22"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template24"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"hole0": "Damaged", "_type": "Template5"}, {"func": {"_type": "Template32"}, "args": [{"func": {"_type": "Template25"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template16"}], "_type": "Call"}], "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.00011705666838679463, -0.0004273931554052979, -0.0018173621501773596, -5.7220458984375e-06, -0.0001239776611328125, -0.0001621246337890625, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, 0.0, -0.0001811981201171875, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -9.775122634891886e-06, -1.049041748046875e-05, -2.1457672119140625e-06, 0.0, -0.00046539306640625, -2.47955322265625e-05, -2.288818359375e-05, 0.0, 0.0, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -0.0001544952392578125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -8.20159912109375e-05, -3.24249267578125e-05, -0.0001201629638671875, -7.43865966796875e-05, -0.000385284423828125, -0.0004825592041015625, -0.00218963623046875, 0.0, -0.012430310249328613, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -4.1961669921875e-05, -1.52587890625e-05, -7.82012939453125e-05, -0.0032520294189453125, -1.52587890625e-05, -3.0064516067504883, -0.0013866424560546875, -0.10122157633304596, -0.0024424695875495672, -0.00099945068359375, -0.00092315673828125, -0.0001163482666015625, -1.71661376953125e-05, -2.288818359375e-05, -6.866455078125e-05, -8.58306884765625e-05, -2.6702880859375e-05, -1.9073486328125e-05, -6.103515625e-05, -0.2521533966064453, -3.814697265625e-06, -0.002590179443359375, -0.00555419921875, -1.9073486328125e-05, -0.0004893540753982961, -2.0265579223632812e-06, 0.0, -0.000202178955078125, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Gurubashi", "Berserker", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Gurubashi", " ", "Berserker", "<EOS>", 77, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 79, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 87, 193, "Damaged", "<EOS>", 58, 123, 43, 217, 58, 123, 37, 216, 58, 123, 40, 216, 72, 87, 193, "Self", "Selector", "<EOS>", 71, 109]}, {"inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionPlaced()), ActionTag(Give(ChangeAttack(3)), SelfSelector()))]\n            )\n", "score": -4.711000473155764, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GurubashiBerserker", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template22"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template24"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "MinionPlaced", "_type": "Template5"}, "_type": "keyword", "arg": "condition"}]}, {"func": {"_type": "Template32"}, "args": [{"func": {"_type": "Template25"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template16"}], "_type": "Call"}], "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.00011705666838679463, -0.0004273931554052979, -0.0018173621501773596, -5.7220458984375e-06, -0.0001239776611328125, -0.0001621246337890625, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, 0.0, -0.0001811981201171875, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -9.775122634891886e-06, -1.049041748046875e-05, -2.1457672119140625e-06, 0.0, -0.00046539306640625, -2.47955322265625e-05, -2.288818359375e-05, 0.0, 0.0, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -0.0001544952392578125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -8.20159912109375e-05, -3.24249267578125e-05, -0.0001201629638671875, -7.43865966796875e-05, -0.000385284423828125, -0.0004825592041015625, -0.00218963623046875, 0.0, -0.012430310249328613, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -4.1961669921875e-05, -1.52587890625e-05, -7.82012939453125e-05, -0.0032520294189453125, -1.52587890625e-05, -0.051235198974609375, -0.0023097991943359375, -0.0001125335693359375, -1.33514404296875e-05, -0.0018877924885600805, -0.010043381713330746, 0.0, -0.004451751708984375, 0.0, -0.004006385803222656, -1.33514404296875e-05, -0.00054168701171875, -1.9073486328125e-06, -0.008146166801452637, -4.538629531860352, -0.044522762298583984, -5.14984130859375e-05, -5.7220458984375e-06, -8.0108642578125e-05, -4.1961669921875e-05, -0.00125885009765625, -0.0002803802490234375, -0.000152587890625, -1.33514404296875e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.011686325073242188, -3.814697265625e-06, -0.004856109619140625, -0.003116607666015625, -5.7220458984375e-06, -0.00042390814633108675, -2.0265579223632812e-06, 0.0, -7.82012939453125e-05, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Gurubashi", "Berserker", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Gurubashi", " ", "Berserker", "<EOS>", 77, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 79, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 58, 122, 23, 146, "Character", "Damaged", "<EOS>", 224, 205, "condition", "<EOS>", 51, 193, "Minion", "Placed", "<EOS>", 58, 123, 43, 217, 58, 123, 37, 216, 58, 123, 40, 216, 72, 87, 193, "Self", "Selector", "<EOS>", 71, 109]}, {"inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionSummoned()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n", "score": -4.983765632762697, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GurubashiBerserker", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template22"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template24"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "MinionSummoned", "_type": "Template5"}, "_type": "keyword", "arg": "condition"}]}, {"func": {"_type": "Template32"}, "args": [{"func": {"_type": "Template25"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template16"}], "_type": "Call"}], "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.00011705666838679463, -0.0004273931554052979, -0.0018173621501773596, -5.7220458984375e-06, -0.0001239776611328125, -0.0001621246337890625, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, 0.0, -0.0001811981201171875, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -9.775122634891886e-06, -1.049041748046875e-05, -2.1457672119140625e-06, 0.0, -0.00046539306640625, -2.47955322265625e-05, -2.288818359375e-05, 0.0, 0.0, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -0.0001544952392578125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -8.20159912109375e-05, -3.24249267578125e-05, -0.0001201629638671875, -7.43865966796875e-05, -0.000385284423828125, -0.0004825592041015625, -0.00218963623046875, 0.0, -0.012430310249328613, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -4.1961669921875e-05, -1.52587890625e-05, -7.82012939453125e-05, -0.0032520294189453125, -1.52587890625e-05, -0.051235198974609375, -0.0023097991943359375, -0.0001125335693359375, -1.33514404296875e-05, -0.0018877924885600805, -0.010043381713330746, 0.0, -0.004451751708984375, 0.0, -0.004006385803222656, -1.33514404296875e-05, -0.00054168701171875, -1.9073486328125e-06, -0.008146166801452637, -4.8523759841918945, -2.3126602172851562e-05, -2.09808349609375e-05, -5.7220458984375e-06, -0.0001354217529296875, -5.91278076171875e-05, -0.001644134521484375, -0.000244140625, -0.0001430511474609375, -1.52587890625e-05, -1.52587890625e-05, -1.9073486328125e-05, -0.01337432861328125, -5.7220458984375e-06, -0.0046672821044921875, -0.0047016143798828125, -1.1444091796875e-05, -0.00046706190914846957, -2.0265579223632812e-06, 0.0, -8.0108642578125e-05, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Gurubashi", "Berserker", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Gurubashi", " ", "Berserker", "<EOS>", 77, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 79, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 58, 122, 23, 146, "Character", "Damaged", "<EOS>", 224, 205, "condition", "<EOS>", 51, 193, "Minion", "Summoned", "<EOS>", 58, 123, 43, 217, 58, 123, 37, 216, 58, 123, 40, 216, 72, 87, 193, "Self", "Selector", "<EOS>", 71, 109]}, {"inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            IsMinion()), ActionTag(Give(ChangeAttack(3)), SelfSelector()))])\n", "score": -5.063152475927382, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GurubashiBerserker", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template22"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template24"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "IsMinion", "_type": "Template5"}, "_type": "keyword", "arg": "condition"}]}, {"func": {"_type": "Template32"}, "args": [{"func": {"_type": "Template25"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template16"}], "_type": "Call"}], "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.00011705666838679463, -0.0004273931554052979, -0.0018173621501773596, -5.7220458984375e-06, -0.0001239776611328125, -0.0001621246337890625, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, 0.0, -0.0001811981201171875, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -9.775122634891886e-06, -1.049041748046875e-05, -2.1457672119140625e-06, 0.0, -0.00046539306640625, -2.47955322265625e-05, -2.288818359375e-05, 0.0, 0.0, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -0.0001544952392578125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -8.20159912109375e-05, -3.24249267578125e-05, -0.0001201629638671875, -7.43865966796875e-05, -0.000385284423828125, -0.0004825592041015625, -0.00218963623046875, 0.0, -0.012430310249328613, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -4.1961669921875e-05, -1.52587890625e-05, -7.82012939453125e-05, -0.0032520294189453125, -1.52587890625e-05, -0.051235198974609375, -0.0023097991943359375, -0.0001125335693359375, -1.33514404296875e-05, -0.0018877924885600805, -0.010043381713330746, 0.0, -0.004451751708984375, 0.0, -0.004006385803222656, -1.33514404296875e-05, -0.00054168701171875, -1.9073486328125e-06, -4.904189109802246, -0.0015115865971893072, -0.012345314025878906, -6.4849853515625e-05, -7.62939453125e-06, -5.14984130859375e-05, -1.52587890625e-05, -0.0025386810302734375, -0.0002765655517578125, -0.0001087188720703125, -9.5367431640625e-06, -1.52587890625e-05, -1.71661376953125e-05, -0.03650093078613281, -5.7220458984375e-06, -0.0045223236083984375, -0.002895355224609375, -7.62939453125e-06, -0.00037288659950718284, -2.0265579223632812e-06, 0.0, -8.58306884765625e-05, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Gurubashi", "Berserker", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Gurubashi", " ", "Berserker", "<EOS>", 77, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 79, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 58, 122, 23, 146, "Character", "Damaged", "<EOS>", 224, 205, "condition", "<EOS>", 51, 193, "Is", "Minion", "<EOS>", 58, 123, 43, 217, 58, 123, 37, 216, 58, 123, 40, 216, 72, 87, 193, "Self", "Selector", "<EOS>", 71, 109]}, {"inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterAttack(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n", "score": -5.134090671931517, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GurubashiBerserker", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template22"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template24"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"func": {"id": "CharacterAttack", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "MinionIsTarget", "_type": "Template5"}, "_type": "keyword", "arg": "condition"}]}, {"func": {"_type": "Template32"}, "args": [{"func": {"_type": "Template25"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template16"}], "_type": "Call"}], "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.00011705666838679463, -0.0004273931554052979, -0.0018173621501773596, -5.7220458984375e-06, -0.0001239776611328125, -0.0001621246337890625, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, 0.0, -0.0001811981201171875, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -9.775122634891886e-06, -1.049041748046875e-05, -2.1457672119140625e-06, 0.0, -0.00046539306640625, -2.47955322265625e-05, -2.288818359375e-05, 0.0, 0.0, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -0.0001544952392578125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -8.20159912109375e-05, -3.24249267578125e-05, -0.0001201629638671875, -7.43865966796875e-05, -0.000385284423828125, -0.0004825592041015625, -0.00218963623046875, 0.0, -0.012430310249328613, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -4.1961669921875e-05, -1.52587890625e-05, -7.82012939453125e-05, -0.0032520294189453125, -1.52587890625e-05, -0.051235198974609375, -0.0023097991943359375, -0.0001125335693359375, -1.33514404296875e-05, -0.0018877924885600805, -4.980646133422852, -3.814697265625e-06, -0.0009860992431640625, -3.814697265625e-06, -0.011202812194824219, -7.62939453125e-06, -0.0017147064208984375, -1.9073486328125e-06, -0.017287731170654297, -0.02626049518585205, -0.0028764985036104918, -4.661083221435547e-05, -7.62939453125e-06, -5.7220458984375e-06, -3.62396240234375e-05, -4.9591064453125e-05, -0.0005092620849609375, -0.000308990478515625, -0.000225067138671875, -1.1444091796875e-05, -1.71661376953125e-05, -3.0517578125e-05, -0.00405120849609375, -5.7220458984375e-06, -0.005504608154296875, -0.003238677978515625, -1.1444091796875e-05, -0.0004413127026055008, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -9.5367431640625e-06], "choice_history": [93, 145, 230, 101, 125, "Gurubashi", "Berserker", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Gurubashi", " ", "Berserker", "<EOS>", 77, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 79, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 58, 122, 23, 146, "Character", "Attack", "<EOS>", 224, 205, "condition", "<EOS>", 51, 193, "Minion", "Is", "Target", "<EOS>", 58, 123, 43, 217, 58, 123, 37, 216, 58, 123, 40, 216, 72, 87, 193, "Self", "Selector", "<EOS>", 71, 109]}, {"inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, auras=[Aura(ChangeAttack(3), CharacterSelector(\n            condition=MinionIsTarget()))])\n", "score": -5.160907053626026, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GurubashiBerserker", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template22"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template24"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "MinionIsTarget", "_type": "Template5"}, "_type": "keyword", "arg": "condition"}]}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.00011705666838679463, -0.0004273931554052979, -0.0018173621501773596, -5.7220458984375e-06, -0.0001239776611328125, -0.0001621246337890625, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, 0.0, -0.0001811981201171875, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -9.775122634891886e-06, -1.049041748046875e-05, -2.1457672119140625e-06, 0.0, -0.00046539306640625, -2.47955322265625e-05, -2.288818359375e-05, 0.0, 0.0, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -0.0001544952392578125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -8.20159912109375e-05, -3.24249267578125e-05, -0.0001201629638671875, -7.43865966796875e-05, -0.000385284423828125, -0.0004825592041015625, -0.00218963623046875, 0.0, -4.481186866760254, -1.1920928244535389e-07, -2.86102294921875e-05, -1.9073486328125e-06, -0.0015735626220703125, -0.00017547607421875, -6.67572021484375e-05, -0.0025997161865234375, -0.0004482269287109375, -9.5367431640625e-06, -0.002162933349609375, -0.001125335693359375, -2.09808349609375e-05, -0.011653900146484375, -0.20603179931640625, -0.0007228851318359375, -0.001316070556640625, -1.9073486328125e-06, -0.005390644073486328, -0.023288846015930176, 0.0, -0.20070266723632812, 0.0, -0.009929656982421875, -5.53131103515625e-05, -4.1961669921875e-05, 0.0, -0.017175674438476562, -0.17875194549560547, -0.004691348411142826, -0.004540562629699707, -8.58306884765625e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Gurubashi", "Berserker", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Gurubashi", " ", "Berserker", "<EOS>", 77, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 79, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 72, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 224, 205, "condition", "<EOS>", 51, 193, "Minion", "Is", "Target", "<EOS>", 71, 109]}, {"inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionMECH()), ActionTag(Give(ChangeAttack(3)), SelfSelector()))])\n", "score": -5.631405861034182, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GurubashiBerserker", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template22"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template24"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "MinionMECH", "_type": "Template5"}, "_type": "keyword", "arg": "condition"}]}, {"func": {"_type": "Template32"}, "args": [{"func": {"_type": "Template25"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template16"}], "_type": "Call"}], "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.00011705666838679463, -0.0004273931554052979, -0.0018173621501773596, -5.7220458984375e-06, -0.0001239776611328125, -0.0001621246337890625, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, 0.0, -0.0001811981201171875, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -9.775122634891886e-06, -1.049041748046875e-05, -2.1457672119140625e-06, 0.0, -0.00046539306640625, -2.47955322265625e-05, -2.288818359375e-05, 0.0, 0.0, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -0.0001544952392578125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -8.20159912109375e-05, -3.24249267578125e-05, -0.0001201629638671875, -7.43865966796875e-05, -0.000385284423828125, -0.0004825592041015625, -0.00218963623046875, 0.0, -0.012430310249328613, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -4.1961669921875e-05, -1.52587890625e-05, -7.82012939453125e-05, -0.0032520294189453125, -1.52587890625e-05, -0.051235198974609375, -0.0023097991943359375, -0.0001125335693359375, -1.33514404296875e-05, -0.0018877924885600805, -0.010043381713330746, 0.0, -0.004451751708984375, 0.0, -0.004006385803222656, -1.33514404296875e-05, -0.00054168701171875, -1.9073486328125e-06, -0.008146166801452637, -5.501863479614258, -2.110004425048828e-05, -5.340576171875e-05, -3.814697265625e-06, -0.0001621246337890625, -7.43865966796875e-05, -0.003326416015625, -0.00028228759765625, -0.0001468658447265625, -1.52587890625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.010515213012695312, -5.7220458984375e-06, -0.004810333251953125, -0.003780364990234375, -1.33514404296875e-05, -0.0004585980495903641, -2.0265579223632812e-06, 0.0, -7.82012939453125e-05, -7.62939453125e-06], "choice_history": [93, 145, 230, 101, 125, "Gurubashi", "Berserker", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Gurubashi", " ", "Berserker", "<EOS>", 77, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 79, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 58, 122, 23, 146, "Character", "Damaged", "<EOS>", 224, 205, "condition", "<EOS>", 51, 193, "Minion", "MECH", "<EOS>", 58, 123, 43, 217, 58, 123, 37, 216, 58, 123, 40, 216, 72, 87, 193, "Self", "Selector", "<EOS>", 71, 109]}, {"inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(1)),\n            SelfSelector()))])\n", "score": -6.12561072707922, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GurubashiBerserker", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template22"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template24"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "MinionIsTarget", "_type": "Template5"}, "_type": "keyword", "arg": "condition"}]}, {"func": {"_type": "Template32"}, "args": [{"func": {"_type": "Template25"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}], "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.00011705666838679463, -0.0004273931554052979, -0.0018173621501773596, -5.7220458984375e-06, -0.0001239776611328125, -0.0001621246337890625, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, 0.0, -0.0001811981201171875, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -9.775122634891886e-06, -1.049041748046875e-05, -2.1457672119140625e-06, 0.0, -0.00046539306640625, -2.47955322265625e-05, -2.288818359375e-05, 0.0, 0.0, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -0.0001544952392578125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -8.20159912109375e-05, -3.24249267578125e-05, -0.0001201629638671875, -7.43865966796875e-05, -0.000385284423828125, -0.0004825592041015625, -0.00218963623046875, 0.0, -0.012430310249328613, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -4.1961669921875e-05, -1.52587890625e-05, -7.82012939453125e-05, -0.0032520294189453125, -1.52587890625e-05, -0.051235198974609375, -0.0023097991943359375, -0.0001125335693359375, -1.33514404296875e-05, -0.0018877924885600805, -0.010043381713330746, 0.0, -0.004451751708984375, 0.0, -0.004006385803222656, -1.33514404296875e-05, -0.00054168701171875, -1.9073486328125e-06, -0.008146166801452637, -0.034705162048339844, -0.0024967065546661615, -8.654594421386719e-05, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -4.38690185546875e-05, -0.00051116943359375, -0.000308990478515625, -0.000213623046875, -1.1444091796875e-05, -1.71661376953125e-05, -3.0517578125e-05, -0.0044612884521484375, -5.7220458984375e-06, -5.973427772521973, -0.0032958984375, -1.9073486328125e-06, -0.00013327594206202775, -1.9073486328125e-06, 0.0, -5.340576171875e-05, -9.5367431640625e-06], "choice_history": [93, 145, 230, 101, 125, "Gurubashi", "Berserker", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Gurubashi", " ", "Berserker", "<EOS>", 77, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 79, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 58, 122, 23, 146, "Character", "Damaged", "<EOS>", 224, 205, "condition", "<EOS>", 51, 193, "Minion", "Is", "Target", "<EOS>", 58, 123, 43, 217, 58, 123, 37, 216, 58, 123, 40, 216, 70, 87, 193, "Self", "Selector", "<EOS>", 71, 109]}, {"inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, auras=[Aura(ChangeAttack(3), SelfSelector())])\n", "score": -6.212291155247833, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GurubashiBerserker", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template22"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template24"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.00011705666838679463, -0.0004273931554052979, -0.0018173621501773596, -5.7220458984375e-06, -0.0001239776611328125, -0.0001621246337890625, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, 0.0, -0.0001811981201171875, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -9.775122634891886e-06, -1.049041748046875e-05, -2.1457672119140625e-06, 0.0, -0.00046539306640625, -2.47955322265625e-05, -2.288818359375e-05, 0.0, 0.0, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -0.0001544952392578125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -8.20159912109375e-05, -3.24249267578125e-05, -0.0001201629638671875, -7.43865966796875e-05, -0.000385284423828125, -0.0004825592041015625, -0.00218963623046875, 0.0, -4.481186866760254, -1.1920928244535389e-07, -2.86102294921875e-05, -1.9073486328125e-06, -0.0015735626220703125, -0.00017547607421875, -6.67572021484375e-05, -0.0025997161865234375, -0.0004482269287109375, -9.5367431640625e-06, -0.002162933349609375, -0.001125335693359375, -2.09808349609375e-05, -0.011653900146484375, -1.684229850769043, -0.0001983642578125, -0.019347187131643295, -2.0265579223632812e-06, 0.0, -0.00032806396484375, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Gurubashi", "Berserker", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Gurubashi", " ", "Berserker", "<EOS>", 77, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 79, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 72, 87, 193, "Self", "Selector", "<EOS>", 71, 109]}, {"inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            CharacterSelector(condition=MinionIsTarget())))])\n", "score": -6.326720925285372, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GurubashiBerserker", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template22"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template24"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "MinionIsTarget", "_type": "Template5"}, "_type": "keyword", "arg": "condition"}]}, {"func": {"_type": "Template32"}, "args": [{"func": {"_type": "Template25"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template16"}], "_type": "Call"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "MinionIsTarget", "_type": "Template5"}, "_type": "keyword", "arg": "condition"}]}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.00011705666838679463, -0.0004273931554052979, -0.0018173621501773596, -5.7220458984375e-06, -0.0001239776611328125, -0.0001621246337890625, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, 0.0, -0.0001811981201171875, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -9.775122634891886e-06, -1.049041748046875e-05, -2.1457672119140625e-06, 0.0, -0.00046539306640625, -2.47955322265625e-05, -2.288818359375e-05, 0.0, 0.0, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -0.0001544952392578125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -8.20159912109375e-05, -3.24249267578125e-05, -0.0001201629638671875, -7.43865966796875e-05, -0.000385284423828125, -0.0004825592041015625, -0.00218963623046875, 0.0, -0.012430310249328613, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -4.1961669921875e-05, -1.52587890625e-05, -7.82012939453125e-05, -0.0032520294189453125, -1.52587890625e-05, -0.051235198974609375, -0.0023097991943359375, -0.0001125335693359375, -1.33514404296875e-05, -0.0018877924885600805, -0.010043381713330746, 0.0, -0.004451751708984375, 0.0, -0.004006385803222656, -1.33514404296875e-05, -0.00054168701171875, -1.9073486328125e-06, -0.008146166801452637, -0.034705162048339844, -0.0024967065546661615, -8.654594421386719e-05, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -4.38690185546875e-05, -0.00051116943359375, -0.000308990478515625, -0.000213623046875, -1.1444091796875e-05, -1.71661376953125e-05, -3.0517578125e-05, -0.0044612884521484375, -5.7220458984375e-06, -0.0054264068603515625, -5.794633865356445, -0.00089263916015625, -0.008768081665039062, -1.9073486328125e-06, -0.009769439697265625, -0.0009576082229614258, 0.0, -0.02577972412109375, 0.0, -0.11195755004882812, -5.7220458984375e-06, -0.000164031982421875, 0.0, -0.04744863510131836, -0.1596754789352417, -0.011359169147908688, -0.0011726617813110352, -1.9073486328125e-05, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Gurubashi", "Berserker", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Gurubashi", " ", "Berserker", "<EOS>", 77, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 79, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 58, 122, 23, 146, "Character", "Damaged", "<EOS>", 224, 205, "condition", "<EOS>", 51, 193, "Minion", "Is", "Target", "<EOS>", 58, 123, 43, 217, 58, 123, 37, 216, 58, 123, 40, 216, 72, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 224, 205, "condition", "<EOS>", 51, 193, "Minion", "Is", "Target", "<EOS>", 71, 109]}, {"inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Aura(ChangeAttack(3), SelfSelector())])\n", "score": -7.012228759243044, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GurubashiBerserker", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template22"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template24"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.00011705666838679463, -0.0004273931554052979, -0.0018173621501773596, -5.7220458984375e-06, -0.0001239776611328125, -0.0001621246337890625, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, 0.0, -0.0001811981201171875, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -9.775122634891886e-06, -1.049041748046875e-05, -2.1457672119140625e-06, 0.0, -0.00046539306640625, -2.47955322265625e-05, -2.288818359375e-05, 0.0, 0.0, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -0.0001544952392578125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -8.20159912109375e-05, -3.24249267578125e-05, -0.0001201629638671875, -7.43865966796875e-05, -0.000385284423828125, -0.0004825592041015625, -0.00218963623046875, 0.0, -0.012430310249328613, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -4.1961669921875e-05, -1.52587890625e-05, -7.82012939453125e-05, -5.842561721801758, -0.000652313232421875, -3.4332275390625e-05, -0.001041412353515625, -0.014139175415039062, -1.1444091796875e-05, -0.011754989624023438, -1.1102256774902344, -0.0001811981201171875, -0.011558884754776955, -2.0265579223632812e-06, 0.0, -0.00034332275390625, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Gurubashi", "Berserker", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Gurubashi", " ", "Berserker", "<EOS>", 77, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 79, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 72, 87, 193, "Self", "Selector", "<EOS>", 71, 109]}, {"inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeHealth(3)),\n            MinionSelector(condition=MinionIsTarget(), condition=\n            MinionIsTarget())))])\n", "score": -7.9124382634227, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GurubashiBerserker", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template22"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template24"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "MinionIsTarget", "_type": "Template5"}, "_type": "keyword", "arg": "condition"}]}, {"func": {"_type": "Template32"}, "args": [{"func": {"_type": "Template25"}, "args": [{"func": {"id": "ChangeHealth", "_type": "Name"}, "args": [{"_type": "Template16"}], "_type": "Call"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "_type": "Call", "keywords": [{"value": {"hole0": "MinionIsTarget", "_type": "Template5"}, "_type": "keyword", "arg": "condition"}, {"value": {"hole0": "MinionIsTarget", "_type": "Template5"}, "_type": "keyword", "arg": "condition"}]}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.00011705666838679463, -0.0004273931554052979, -0.0018173621501773596, -5.7220458984375e-06, -0.0001239776611328125, -0.0001621246337890625, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, 0.0, -0.0001811981201171875, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -9.775122634891886e-06, -1.049041748046875e-05, -2.1457672119140625e-06, 0.0, -0.00046539306640625, -2.47955322265625e-05, -2.288818359375e-05, 0.0, 0.0, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -0.0001544952392578125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -8.20159912109375e-05, -3.24249267578125e-05, -0.0001201629638671875, -7.43865966796875e-05, -0.000385284423828125, -0.0004825592041015625, -0.00218963623046875, 0.0, -0.012430310249328613, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -4.1961669921875e-05, -1.52587890625e-05, -7.82012939453125e-05, -0.0032520294189453125, -1.52587890625e-05, -0.051235198974609375, -0.0023097991943359375, -0.0001125335693359375, -1.33514404296875e-05, -0.0018877924885600805, -0.010043381713330746, 0.0, -0.004451751708984375, 0.0, -0.004006385803222656, -1.33514404296875e-05, -0.00054168701171875, -1.9073486328125e-06, -0.008146166801452637, -0.034705162048339844, -0.0024967065546661615, -8.654594421386719e-05, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -4.38690185546875e-05, -0.00051116943359375, -0.000308990478515625, -0.000213623046875, -1.1444091796875e-05, -1.71661376953125e-05, -3.0517578125e-05, -5.469170570373535, 0.0, -0.38919591903686523, -0.0011807680130004883, 0.0, -0.000377655029296875, -0.00311279296875, -0.4796791076660156, -3.24249267578125e-05, -0.45281410217285156, -0.11929893493652344, -7.62939453125e-06, -0.0021991729736328125, -0.0003376007080078125, -0.034394264221191406, -9.5367431640625e-06, -0.24706077575683594, -0.06949472427368164, -0.006265038624405861, -0.0006247758865356445, 0.0, -0.06118297576904297, -9.5367431640625e-06, -0.013682365417480469, 0.0, -0.2645219564437866, -0.13530802726745605, -0.0171569362282753, -0.0010834932327270508, -1.52587890625e-05, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Gurubashi", "Berserker", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Gurubashi", " ", "Berserker", "<EOS>", 77, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 79, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 58, 122, 23, 146, "Character", "Damaged", "<EOS>", 224, 205, "condition", "<EOS>", 51, 193, "Minion", "Is", "Target", "<EOS>", 58, 123, 43, 217, 58, 123, 37, 216, 58, 123, 23, 146, "Change", "Health", "<EOS>", 216, 72, 58, 122, 38, 225, 205, "condition", "<EOS>", 51, 193, "Minion", "Is", "Target", "<EOS>", 205, "condition", "<EOS>", 51, 193, "Minion", "Is", "Target", "<EOS>", 71, 109]}, {"inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, spell_targetable=False)\n", "score": -8.525951184569578, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "GurubashiBerserker", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template22"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template24"}], "_type": "Call", "keywords": [{"value": {"_type": "Template27"}, "_type": "keyword", "arg": "spell_targetable"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.00011705666838679463, -0.0004273931554052979, -0.0018173621501773596, -5.7220458984375e-06, -0.0001239776611328125, -0.0001621246337890625, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, 0.0, -0.0001811981201171875, 0.0, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -9.775122634891886e-06, -1.049041748046875e-05, -2.1457672119140625e-06, 0.0, -0.00046539306640625, -2.47955322265625e-05, -2.288818359375e-05, 0.0, 0.0, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -0.0001544952392578125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -8.20159912109375e-05, -3.24249267578125e-05, -0.0001201629638671875, -7.43865966796875e-05, -0.000385284423828125, -0.0004825592041015625, -0.00218963623046875, 0.0, -8.384157180786133, -5.960462772236497e-07, -0.13464641571044922, -2.09808349609375e-05], "choice_history": [93, 145, 230, 101, 125, "Gurubashi", "Berserker", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Gurubashi", " ", "Berserker", "<EOS>", 77, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 79, 224, 205, "spell_targetable", "<EOS>", 39, 109]}, {"inferred_code": "", "score": -20.110305786132812, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, 0.0, -20.11030387878418], "choice_history": [93, 145, 228]}], "index": 43}
{"beams": [{"inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "score": -0.027236578514006737, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HammerOfWrath", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -3.62396240234375e-05, -0.0002460479736328125, -0.000125885009765625, -3.9695980376563966e-05, -0.0008792876615189016, -1.0490362910786644e-05, -4.768360213347478e-06, -8.392333984375e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.919257738336455e-05, -4.0531158447265625e-06, -3.24249267578125e-05, -0.0003795623779296875, -9.1552734375e-05, -0.000110626220703125, -5.53131103515625e-05, -0.0003986358642578125, -1.9073486328125e-06, -0.0001010894775390625, -1.9073486328125e-06, -5.7220458984375e-06, -2.9444288884405978e-05, -2.682209014892578e-05, -1.537799835205078e-05, -6.902217864990234e-05, -0.008211731910705566, -2.145764938177308e-06, -0.0001010894775390625, -1.9073486328125e-06, 0.0, 0.0, 0.0, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.00026154518127441406, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.682209014892578e-05, -1.1920928244535389e-07, -0.0001220703125, -1.9073486328125e-06, -0.00658416748046875, 0.0, -0.0002288818359375, 0.0, -4.38690185546875e-05, -5.7220458984375e-06, -8.392333984375e-05, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -5.3763389587402344e-05, -1.9073486328125e-06, -0.00015461444854736328, -1.9073486328125e-06, -0.0004712343215942383, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.71661376953125e-05, 0.0, -0.00078582763671875, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.3245811462402344e-05, 0.0, -3.24249267578125e-05, -2.288818359375e-05, -2.9087063012411818e-05, -2.2888176317792386e-05, -0.0008382797241210938, -0.0002079010009765625, -0.0002231597900390625, -3.814697265625e-06, 0.0, -0.000171661376953125, -3.814697265625e-06, -1.9073486328125e-06, -0.0002307891845703125, -3.850391658488661e-05, -6.580336776096374e-05, -3.814697265625e-06, -0.000225067138671875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -3.24249267578125e-05, -0.0002783536911010742, -2.2649765014648438e-06, -1.9073486328125e-06, -0.0011005401611328125, -0.000804901123046875, -3.4332275390625e-05, -1.52587890625e-05, -0.0002918243408203125, -0.000431060791015625, -8.58306884765625e-05, -9.5367431640625e-06, -0.000988006591796875, -0.000843167188577354, -7.748603820800781e-06, -1.71661376953125e-05], "choice_history": [93, 145, 230, 101, 125, "Hammer", "Of", "Wrath", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of of', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "score": -5.1961842752020715, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HammerOfWrath", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hammer of of"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -3.62396240234375e-05, -0.0002460479736328125, -0.000125885009765625, -3.9695980376563966e-05, -0.0008792876615189016, -1.0490362910786644e-05, -4.768360213347478e-06, -8.392333984375e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.919257738336455e-05, -4.0531158447265625e-06, -3.24249267578125e-05, -0.0003795623779296875, -9.1552734375e-05, -0.000110626220703125, -5.53131103515625e-05, -0.0003986358642578125, -1.9073486328125e-06, -0.0001010894775390625, -1.9073486328125e-06, -5.7220458984375e-06, -2.9444288884405978e-05, -2.682209014892578e-05, -1.537799835205078e-05, -6.902217864990234e-05, -4.808946132659912, -0.36825084686279297, -0.000152587890625, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.00022137165069580078, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.682209014892578e-05, -1.1920928244535389e-07, -0.0001220703125, -1.9073486328125e-06, -0.0065555572509765625, 0.0, -0.0002231597900390625, 0.0, -4.38690185546875e-05, -5.7220458984375e-06, -8.392333984375e-05, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -5.3763389587402344e-05, -1.9073486328125e-06, -0.00015652179718017578, -1.9073486328125e-06, -0.0004769563674926758, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-05, 0.0, -0.0007781982421875, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.3245811462402344e-05, 0.0, -3.24249267578125e-05, -2.47955322265625e-05, -2.9087063012411818e-05, -2.2888176317792386e-05, -0.0008258819580078125, -0.0002040863037109375, -0.0002231597900390625, -3.814697265625e-06, 0.0, -0.000171661376953125, -3.814697265625e-06, -1.9073486328125e-06, -0.0002307891845703125, -3.850391658488661e-05, -6.580336776096374e-05, -3.814697265625e-06, -0.000225067138671875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -3.24249267578125e-05, -0.0002783536911010742, -2.2649765014648438e-06, -1.9073486328125e-06, -0.0011005401611328125, -0.000804901123046875, -3.4332275390625e-05, -1.33514404296875e-05, -0.0002918243408203125, -0.000431060791015625, -8.58306884765625e-05, -9.5367431640625e-06, -0.000988006591796875, -0.000843167188577354, -7.748603820800781e-06, -1.71661376953125e-05], "choice_history": [93, 145, 230, 101, 125, "Hammer", "Of", "Wrath", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hammer", " ", "of", " ", "of", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "score": -6.006779548615199, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HammerOfWrath", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hammer of of Wrath"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -3.62396240234375e-05, -0.0002460479736328125, -0.000125885009765625, -3.9695980376563966e-05, -0.0008792876615189016, -1.0490362910786644e-05, -4.768360213347478e-06, -8.392333984375e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.919257738336455e-05, -4.0531158447265625e-06, -3.24249267578125e-05, -0.0003795623779296875, -9.1552734375e-05, -0.000110626220703125, -5.53131103515625e-05, -0.0003986358642578125, -1.9073486328125e-06, -0.0001010894775390625, -1.9073486328125e-06, -5.7220458984375e-06, -2.9444288884405978e-05, -2.682209014892578e-05, -1.537799835205078e-05, -6.902217864990234e-05, -4.808946132659912, -1.1785602569580078, -0.00020086709992028773, -1.9073468138230965e-06, -0.0001621246337890625, -1.9073486328125e-06, 0.0, 0.0, 0.0, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.0002843141555786133, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -2.872943878173828e-05, -1.1920928244535389e-07, -0.0001201629638671875, -1.9073486328125e-06, -0.0066356658935546875, 0.0, -0.0002002716064453125, 0.0, -4.38690185546875e-05, -5.7220458984375e-06, -8.58306884765625e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -4.9948692321777344e-05, -1.9073486328125e-06, -0.00015461444854736328, -1.9073486328125e-06, -0.0004712343215942383, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.288818359375e-05, -2.09808349609375e-05, 0.0, -0.000759124755859375, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.5153160095214844e-05, 0.0, -3.24249267578125e-05, -2.47955322265625e-05, -3.099441164522432e-05, -2.2888176317792386e-05, -0.0008106231689453125, -0.000194549560546875, -0.0002193450927734375, -3.814697265625e-06, 0.0, -0.000171661376953125, -3.814697265625e-06, -1.9073486328125e-06, -0.0002346038818359375, -3.8623122236458585e-05, -6.580336776096374e-05, -3.814697265625e-06, -0.0002269744873046875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -3.24249267578125e-05, -0.0002783536911010742, -2.2649765014648438e-06, -1.9073486328125e-06, -0.001102447509765625, -0.000804901123046875, -3.4332275390625e-05, -1.33514404296875e-05, -0.000293731689453125, -0.0004291534423828125, -8.58306884765625e-05, -9.5367431640625e-06, -0.0009860992431640625, -0.0008422135142609477, -7.748603820800781e-06, -1.71661376953125e-05], "choice_history": [93, 145, 230, 101, 125, "Hammer", "Of", "Wrath", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hammer", " ", "of", " ", "of", " ", "Wrath", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, filter_func=lambda character: character.card\n            .minion_type == MINION_TYPE.DEMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "score": -6.946678035681757, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HammerOfWrath", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "character"}], "_type": "arguments"}, "_type": "Lambda", "body": {"left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "character", "_type": "Name"}}}, "_type": "Compare", "comparators": [{"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Eq"}]}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -3.62396240234375e-05, -0.0002460479736328125, -0.000125885009765625, -3.9695980376563966e-05, -0.0008792876615189016, -1.0490362910786644e-05, -4.768360213347478e-06, -8.392333984375e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.919257738336455e-05, -4.0531158447265625e-06, -3.24249267578125e-05, -0.0003795623779296875, -9.1552734375e-05, -0.000110626220703125, -5.53131103515625e-05, -0.0003986358642578125, -1.9073486328125e-06, -0.0001010894775390625, -1.9073486328125e-06, -5.7220458984375e-06, -2.9444288884405978e-05, -2.682209014892578e-05, -1.537799835205078e-05, -6.902217864990234e-05, -0.008211731910705566, -2.145764938177308e-06, -0.0001010894775390625, -1.9073486328125e-06, 0.0, 0.0, 0.0, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.00026154518127441406, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.682209014892578e-05, -1.1920928244535389e-07, -0.0001220703125, -1.9073486328125e-06, -5.038734436035156, 0.0, -6.866455078125e-05, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -8.0108642578125e-05, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -4.792213439941406e-05, -1.9073486328125e-06, -0.00013172626495361328, 0.0, -0.0005247592926025391, -9.655952453613281e-06, -9.5367431640625e-06, -0.48990726470947266, 0.0, -0.05800342559814453, -0.0002994537353515625, -3.4332275390625e-05, -1.9073486328125e-05, -0.0002346038818359375, -2.09808349609375e-05, -7.62939453125e-06, -0.11229967325925827, -0.0002567768096923828, -0.3821983337402344, -0.0002002716064453125, -0.004505157470703125, 0.0, -0.06074714660644531, 0.0, -6.866455078125e-05, 0.0, -0.21723170578479767, -3.099440846199286e-06, -0.02202468365430832, -3.504698179312982e-05, -0.0267101489007473, -4.172325134277344e-06, -9.5367431640625e-06, -0.3212728500366211, -7.62939453125e-06, -6.866455078125e-05, 0.0, -9.5367431640625e-06, -2.6702880859375e-05, -0.0011416672496125102, 0.0, -0.18809807300567627, 0.0, 0.0, 0.0, -0.0001125335693359375, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -0.0022716522216796875, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -3.135204315185547e-05, 0.0, -0.0001049041748046875, -6.4849853515625e-05, -3.135203951387666e-05, -1.01327859738376e-05, -0.0010614395141601562, -0.000278472900390625, -0.0001926422119140625, -3.814697265625e-06, 0.0, -0.000133514404296875, -3.814697265625e-06, -1.9073486328125e-06, -0.0002841949462890625, -3.588140680221841e-05, -7.426712545566261e-05, -3.814697265625e-06, -0.0002346038818359375, -3.814697265625e-06, -4.76837158203125e-05, -1.9073486328125e-06, -3.0517578125e-05, -0.0002783536911010742, -2.2649765014648438e-06, -1.9073486328125e-06, -0.00109100341796875, -0.000766754150390625, -3.24249267578125e-05, -1.33514404296875e-05, -0.0003337860107421875, -0.0004405975341796875, -8.96453857421875e-05, -9.5367431640625e-06, -0.00098419189453125, -0.0008667706279084086, -7.748603820800781e-06, -1.71661376953125e-05], "choice_history": [93, 145, 230, 101, 125, "Hammer", "Of", "Wrath", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "character", "<EOS>", 19, 126, 15, 116, 15, 116, 23, 146, "character", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 213, 6, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "score": -7.14879262212979, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HammerOfWrath", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"_type": "Template12"}, "_type": "keyword", "arg": "overload"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -3.62396240234375e-05, -0.0002460479736328125, -0.000125885009765625, -3.9695980376563966e-05, -0.0008792876615189016, -1.0490362910786644e-05, -4.768360213347478e-06, -8.392333984375e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.919257738336455e-05, -4.0531158447265625e-06, -3.24249267578125e-05, -0.0003795623779296875, -9.1552734375e-05, -0.000110626220703125, -5.53131103515625e-05, -0.0003986358642578125, -1.9073486328125e-06, -0.0001010894775390625, -1.9073486328125e-06, -5.7220458984375e-06, -2.9444288884405978e-05, -2.682209014892578e-05, -1.537799835205078e-05, -6.902217864990234e-05, -0.008211731910705566, -2.145764938177308e-06, -0.0001010894775390625, -1.9073486328125e-06, 0.0, 0.0, 0.0, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.00026154518127441406, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.682209014892578e-05, -1.1920928244535389e-07, -0.0001220703125, -1.9073486328125e-06, -5.038734436035156, 0.0, -6.866455078125e-05, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -8.0108642578125e-05, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -4.792213439941406e-05, -1.9073486328125e-06, -0.00013172626495361328, 0.0, -0.0005247592926025391, -9.655952453613281e-06, -9.5367431640625e-06, -1.9221067428588867, 0.0, -0.1514110565185547, -4.57763671875e-05, -7.62939453125e-06, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0003337860107421875, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.753734588623047e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-05, -3.6358829675009474e-05, -2.2530550268129446e-05, -0.01744842529296875, -0.000225067138671875, -9.1552734375e-05, -3.814697265625e-06, 0.0, -0.0001659393310546875, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002460479736328125, -4.005357914138585e-05, -5.888927626074292e-05, -3.814697265625e-06, -0.0002193450927734375, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.4332275390625e-05, -0.00026488304138183594, -2.2649765014648438e-06, -1.9073486328125e-06, -0.0010585784912109375, -0.000782012939453125, -3.24249267578125e-05, -1.33514404296875e-05, -0.000316619873046875, -0.00046539306640625, -0.0001049041748046875, -9.5367431640625e-06, -0.0009613037109375, -0.0008304117945954204, -7.748603820800781e-06, -1.71661376953125e-05], "choice_history": [93, 145, 230, 101, 125, "Hammer", "Of", "Wrath", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "overload", "<EOS>", 27, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n        player.draw()\n", "score": -7.460956213407357, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HammerOfWrath", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -3.62396240234375e-05, -0.0002460479736328125, -0.000125885009765625, -3.9695980376563966e-05, -0.0008792876615189016, -1.0490362910786644e-05, -4.768360213347478e-06, -8.392333984375e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.919257738336455e-05, -4.0531158447265625e-06, -3.24249267578125e-05, -0.0003795623779296875, -9.1552734375e-05, -0.000110626220703125, -5.53131103515625e-05, -0.0003986358642578125, -1.9073486328125e-06, -0.0001010894775390625, -1.9073486328125e-06, -5.7220458984375e-06, -2.9444288884405978e-05, -2.682209014892578e-05, -1.537799835205078e-05, -6.902217864990234e-05, -0.008211731910705566, -2.145764938177308e-06, -0.0001010894775390625, -1.9073486328125e-06, 0.0, 0.0, 0.0, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.00026154518127441406, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.682209014892578e-05, -1.1920928244535389e-07, -0.0001220703125, -1.9073486328125e-06, -0.00658416748046875, 0.0, -0.0002288818359375, 0.0, -4.38690185546875e-05, -5.7220458984375e-06, -8.392333984375e-05, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -5.3763389587402344e-05, -1.9073486328125e-06, -0.00015461444854736328, -1.9073486328125e-06, -0.0004712343215942383, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.71661376953125e-05, 0.0, -0.00078582763671875, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.3245811462402344e-05, 0.0, -3.24249267578125e-05, -2.288818359375e-05, -2.9087063012411818e-05, -2.2888176317792386e-05, -0.0008382797241210938, -0.0002079010009765625, -0.0002231597900390625, -3.814697265625e-06, 0.0, -0.000171661376953125, -3.814697265625e-06, -1.9073486328125e-06, -0.0002307891845703125, -3.850391658488661e-05, -6.580336776096374e-05, -3.814697265625e-06, -0.000225067138671875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -3.24249267578125e-05, -0.0002783536911010742, -2.2649765014648438e-06, -1.9073486328125e-06, -7.433363914489746, -0.0020847320556640625, -1.71661376953125e-05, -2.09808349609375e-05, -1.9073486328125e-05, -0.0003147125244140625, -0.000164031982421875, -1.1444091796875e-05, -0.0011844635009765625, -0.0011454818304628134, -9.655952453613281e-06, -1.33514404296875e-05], "choice_history": [93, 145, 230, 101, 125, "Hammer", "Of", "Wrath", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 81, 74, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), player)\n        player.draw()\n", "score": -7.609424469404061, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HammerOfWrath", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template19"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -3.62396240234375e-05, -0.0002460479736328125, -0.000125885009765625, -3.9695980376563966e-05, -0.0008792876615189016, -1.0490362910786644e-05, -4.768360213347478e-06, -8.392333984375e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.919257738336455e-05, -4.0531158447265625e-06, -3.24249267578125e-05, -0.0003795623779296875, -9.1552734375e-05, -0.000110626220703125, -5.53131103515625e-05, -0.0003986358642578125, -1.9073486328125e-06, -0.0001010894775390625, -1.9073486328125e-06, -5.7220458984375e-06, -2.9444288884405978e-05, -2.682209014892578e-05, -1.537799835205078e-05, -6.902217864990234e-05, -0.008211731910705566, -2.145764938177308e-06, -0.0001010894775390625, -1.9073486328125e-06, 0.0, 0.0, 0.0, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.00026154518127441406, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.682209014892578e-05, -1.1920928244535389e-07, -0.0001220703125, -1.9073486328125e-06, -0.00658416748046875, 0.0, -0.0002288818359375, 0.0, -4.38690185546875e-05, -5.7220458984375e-06, -8.392333984375e-05, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -5.3763389587402344e-05, -1.9073486328125e-06, -0.00015461444854736328, -1.9073486328125e-06, -0.0004712343215942383, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.71661376953125e-05, 0.0, -0.00078582763671875, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.3245811462402344e-05, 0.0, -3.24249267578125e-05, -2.288818359375e-05, -2.9087063012411818e-05, -2.2888176317792386e-05, -0.0008382797241210938, -0.0002079010009765625, -0.0002231597900390625, -3.814697265625e-06, 0.0, -0.000171661376953125, -3.814697265625e-06, -1.9073486328125e-06, -0.0002307891845703125, -3.850391658488661e-05, -6.580336776096374e-05, -3.814697265625e-06, -0.000225067138671875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -3.24249267578125e-05, -0.0002783536911010742, -2.2649765014648438e-06, -1.9073486328125e-06, -0.0011005401611328125, -7.581935882568359, -3.0517578125e-05, -7.62939453125e-06, -0.001399993896484375, -0.0003795623779296875, -0.0001068115234375, -9.5367431640625e-06, -0.000675201416015625, -0.0011504886206239462, -3.933906555175781e-06, -1.71661376953125e-05], "choice_history": [93, 145, 230, 101, 125, "Hammer", "Of", "Wrath", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 75, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(5), self)\n        player.draw()\n", "score": -7.836754558019479, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HammerOfWrath", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -3.62396240234375e-05, -0.0002460479736328125, -0.000125885009765625, -3.9695980376563966e-05, -0.0008792876615189016, -1.0490362910786644e-05, -4.768360213347478e-06, -8.392333984375e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.919257738336455e-05, -4.0531158447265625e-06, -3.24249267578125e-05, -0.0003795623779296875, -9.1552734375e-05, -0.000110626220703125, -5.53131103515625e-05, -0.0003986358642578125, -1.9073486328125e-06, -0.0001010894775390625, -1.9073486328125e-06, -5.7220458984375e-06, -2.9444288884405978e-05, -2.682209014892578e-05, -1.537799835205078e-05, -6.902217864990234e-05, -0.008211731910705566, -2.145764938177308e-06, -0.0001010894775390625, -1.9073486328125e-06, 0.0, 0.0, 0.0, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.00026154518127441406, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.682209014892578e-05, -1.1920928244535389e-07, -0.0001220703125, -1.9073486328125e-06, -0.00658416748046875, 0.0, -0.0002288818359375, 0.0, -4.38690185546875e-05, -5.7220458984375e-06, -8.392333984375e-05, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -5.3763389587402344e-05, -1.9073486328125e-06, -0.00015461444854736328, -1.9073486328125e-06, -0.0004712343215942383, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.71661376953125e-05, 0.0, -0.00078582763671875, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.3245811462402344e-05, 0.0, -3.24249267578125e-05, -2.288818359375e-05, -2.9087063012411818e-05, -2.2888176317792386e-05, -0.0008382797241210938, -0.0002079010009765625, -0.0002231597900390625, -3.814697265625e-06, 0.0, -0.000171661376953125, -3.814697265625e-06, -1.9073486328125e-06, -0.0002307891845703125, -3.850391658488661e-05, -6.580336776096374e-05, -3.814697265625e-06, -0.000225067138671875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -3.24249267578125e-05, -0.0002783536911010742, -2.2649765014648438e-06, -1.9073486328125e-06, -7.809645652770996, -0.001033782958984375, -9.72747802734375e-05, -2.09808349609375e-05, -3.4332275390625e-05, -0.00042724609375, -8.392333984375e-05, -1.1444091796875e-05, -0.00164794921875, -0.001125573879107833, -5.841255187988281e-06, -1.33514404296875e-05], "choice_history": [93, 145, 230, 101, 125, "Hammer", "Of", "Wrath", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class HammerTheWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "score": -8.079303858529315, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HammerTheWrath", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -3.62396240234375e-05, -0.0002460479736328125, -0.000125885009765625, -3.9695980376563966e-05, -8.053197860717773, -2.1457672119140625e-06, -1.1920922133867862e-06, -6.103515625e-05, -3.62396240234375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.347058241663035e-05, -3.933906555175781e-06, -3.24249267578125e-05, -0.0003528594970703125, -8.58306884765625e-05, -0.000102996826171875, -6.29425048828125e-05, -0.0003795623779296875, -1.9073486328125e-06, -0.0001010894775390625, -1.9073486328125e-06, -5.7220458984375e-06, -2.849064185284078e-05, -2.682209014892578e-05, -1.537799835205078e-05, -6.902217864990234e-05, -0.007956147193908691, -2.264974000354414e-06, -9.918212890625e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.00026154518127441406, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.682209014892578e-05, -1.1920928244535389e-07, -0.0001220703125, -1.9073486328125e-06, -0.0066738128662109375, 0.0, -0.0002288818359375, 0.0, -4.38690185546875e-05, -5.7220458984375e-06, -8.392333984375e-05, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -5.3763389587402344e-05, -1.9073486328125e-06, -0.00015461444854736328, -1.9073486328125e-06, -0.0004731416702270508, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.71661376953125e-05, 0.0, -0.000789642333984375, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.3245811462402344e-05, 0.0, -3.24249267578125e-05, -2.288818359375e-05, -2.896785554185044e-05, -2.2888176317792386e-05, -0.0008392333984375, -0.000209808349609375, -0.00022125244140625, -3.814697265625e-06, 0.0, -0.000171661376953125, -3.814697265625e-06, -1.9073486328125e-06, -0.0002307891845703125, -3.8623122236458585e-05, -6.580336776096374e-05, -3.814697265625e-06, -0.000225067138671875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -3.24249267578125e-05, -0.0002783536911010742, -2.2649765014648438e-06, -1.9073486328125e-06, -0.0010986328125, -0.0008029937744140625, -3.4332275390625e-05, -1.33514404296875e-05, -0.0002918243408203125, -0.000431060791015625, -8.58306884765625e-05, -9.5367431640625e-06, -0.000988006591796875, -0.0008441208628937602, -7.748603820800781e-06, -1.71661376953125e-05], "choice_history": [93, 145, 230, 101, 125, "Hammer", "The", "Wrath", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n", "score": -8.177198169919379, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HammerOfWrath", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -3.62396240234375e-05, -0.0002460479736328125, -0.000125885009765625, -3.9695980376563966e-05, -0.0008792876615189016, -1.0490362910786644e-05, -4.768360213347478e-06, -8.392333984375e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.919257738336455e-05, -4.0531158447265625e-06, -3.24249267578125e-05, -0.0003795623779296875, -9.1552734375e-05, -0.000110626220703125, -5.53131103515625e-05, -0.0003986358642578125, -1.9073486328125e-06, -0.0001010894775390625, -1.9073486328125e-06, -5.7220458984375e-06, -2.9444288884405978e-05, -2.682209014892578e-05, -1.537799835205078e-05, -6.902217864990234e-05, -0.008211731910705566, -2.145764938177308e-06, -0.0001010894775390625, -1.9073486328125e-06, 0.0, 0.0, 0.0, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.00026154518127441406, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.682209014892578e-05, -1.1920928244535389e-07, -0.0001220703125, -1.9073486328125e-06, -0.00658416748046875, 0.0, -0.0002288818359375, 0.0, -4.38690185546875e-05, -5.7220458984375e-06, -8.392333984375e-05, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -5.3763389587402344e-05, -1.9073486328125e-06, -0.00015461444854736328, -1.9073486328125e-06, -0.0004712343215942383, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.71661376953125e-05, 0.0, -0.00078582763671875, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.3245811462402344e-05, 0.0, -3.24249267578125e-05, -2.288818359375e-05, -2.9087063012411818e-05, -2.2888176317792386e-05, -8.150575637817383, -0.000732421875, -0.001129150390625, -5.7220458984375e-05, -4.00543212890625e-05, -0.0006999969482421875, -9.5367431640625e-06, 0.0, -0.000995635986328125, -2.0265373677830212e-05, -5.340564530342817e-05, -5.7220458984375e-06, -0.0001125335693359375, -3.814697265625e-06, -0.000255584716796875, 0.0, -3.62396240234375e-05, -0.0002989768981933594, -2.1457672119140625e-06, -1.9073486328125e-06, -0.001148223876953125, -0.000789642333984375, 0.0], "choice_history": [93, 145, 230, 101, 125, "Hammer", "Of", "Wrath", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 109]}, {"inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, buffs=[Buff(ManaChange(Count(\n            DeadMinionSelector(players=BothPlayer())), -1))])\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "score": -8.298171881127914, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HammerOfWrath", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"_type": "List", "elts": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"func": {"id": "ManaChange", "_type": "Name"}, "args": [{"func": {"id": "Count", "_type": "Name"}, "args": [{"func": {"id": "DeadMinionSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}]}], "_type": "Call"}, {"_type": "UnaryOp", "operand": {"_type": "Template14"}, "op": {"_type": "USub"}}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "buffs"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -3.62396240234375e-05, -0.0002460479736328125, -0.000125885009765625, -3.9695980376563966e-05, -0.0008792876615189016, -1.0490362910786644e-05, -4.768360213347478e-06, -8.392333984375e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.919257738336455e-05, -4.0531158447265625e-06, -3.24249267578125e-05, -0.0003795623779296875, -9.1552734375e-05, -0.000110626220703125, -5.53131103515625e-05, -0.0003986358642578125, -1.9073486328125e-06, -0.0001010894775390625, -1.9073486328125e-06, -5.7220458984375e-06, -2.9444288884405978e-05, -2.682209014892578e-05, -1.537799835205078e-05, -6.902217864990234e-05, -0.008211731910705566, -2.145764938177308e-06, -0.0001010894775390625, -1.9073486328125e-06, 0.0, 0.0, 0.0, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.00026154518127441406, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.682209014892578e-05, -1.1920928244535389e-07, -0.0001220703125, -1.9073486328125e-06, -5.038734436035156, 0.0, -6.866455078125e-05, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -8.0108642578125e-05, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -4.792213439941406e-05, -1.9073486328125e-06, -0.00013172626495361328, 0.0, -0.0005247592926025391, -9.655952453613281e-06, -9.5367431640625e-06, -1.7035140991210938, 0.0, -0.03176593780517578, -8.20159912109375e-05, -0.0002803802490234375, -6.866455078125e-05, -1.52587890625e-05, -0.00377655029296875, 0.0, -0.00022304058074951172, -3.814697265625e-06, -0.0003108978271484375, -0.5297698974609375, -0.0010986328125, -0.009721755981445312, 0.0, -0.030716419219970703, -0.0005459783715195954, -0.000255584716796875, -0.025119781494140625, -0.0031461715698242188, -0.0001239776611328125, -8.58306884765625e-05, -1.9073486328125e-06, -0.18850958347320557, -0.008757944218814373, -3.0517578125e-05, -0.0587005615234375, -0.001621246337890625, -4.00543212890625e-05, 0.0, -0.059435486793518066, -0.02926957607269287, -0.08425331115722656, -0.0003261566162109375, -0.05470752716064453, -1.71661376953125e-05, -0.0004922151565551758, 0.0, -6.103515625e-05, -1.9073486328125e-06, -0.002115855924785137, -7.462501525878906e-05, -1.1444091796875e-05, -0.000751495361328125, -0.003406524658203125, -0.000118255615234375, -0.02130126953125, -0.0009326934814453125, -0.0002536773681640625, -9.5367431640625e-06, -0.010143399238586426, 0.0, -3.814697265625e-06, 0.0, -0.0004291534423828125, 0.0, -6.866455078125e-05, -3.814697265625e-06, -4.315376281738281e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -3.409385681152344e-05, -1.0609614946588408e-05, -0.3619203567504883, -0.012676239013671875, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001392364501953125, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001544952392578125, -3.5404580557951704e-05, -6.00814055360388e-05, -5.7220458984375e-06, -0.00017547607421875, -3.814697265625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.62396240234375e-05, -0.0002821683883666992, -2.2649765014648438e-06, -1.9073486328125e-06, -0.00109100341796875, -0.000762939453125, -3.814697265625e-05, -1.52587890625e-05, -0.0004177093505859375, -0.000469207763671875, -0.0001163482666015625, -9.5367431640625e-06, -0.0009899139404296875, -0.000832795980386436, -7.748603820800781e-06, -1.71661376953125e-05], "choice_history": [93, 145, 230, 101, 125, "Hammer", "Of", "Wrath", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "buffs", "<EOS>", 21, 141, 217, 58, 123, 23, 146, "Buff", "<EOS>", 216, 58, 123, 23, 146, "Mana", "Change", "<EOS>", 217, 58, 123, 23, 146, "Count", "<EOS>", 216, 58, 122, 23, 146, "Dead", "Minion", "Selector", "<EOS>", 224, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 92, 200, 112, 28, 71, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "score": -8.376464957609741, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HammerOfWrath", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -3.62396240234375e-05, -0.0002460479736328125, -0.000125885009765625, -3.9695980376563966e-05, -0.0008792876615189016, -1.0490362910786644e-05, -4.768360213347478e-06, -8.392333984375e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.919257738336455e-05, -4.0531158447265625e-06, -3.24249267578125e-05, -0.0003795623779296875, -9.1552734375e-05, -0.000110626220703125, -5.53131103515625e-05, -8.343734741210938, -1.9073486328125e-06, -0.0002307891845703125, -2.09808349609375e-05, -9.5367431640625e-06, -8.153620728990063e-05, -2.110004425048828e-05, -1.52587890625e-05, -6.258486973820254e-05, -0.004200577735900879, -1.5497195136049413e-06, -7.62939453125e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.0002804994583129883, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -2.682209014892578e-05, -1.1920928244535389e-07, -0.000125885009765625, -1.9073486328125e-06, 0.0, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0002498626708984375, 0.0, -2.288818359375e-05, 0.0, -5.3048133850097656e-05, 0.0, -3.4332275390625e-05, -0.0001850128173828125, -6.318091618595645e-05, -9.417532055522315e-06, -0.0062618255615234375, -0.0012760162353515625, -0.007814407348632812, -1.33514404296875e-05, -1.9073486328125e-06, -0.0026378631591796875, -7.62939453125e-06, 0.0, -0.00164031982421875, -4.970908412360586e-05, -4.6253080654423684e-05, -7.62939453125e-06, -0.0001850128173828125, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -3.814697265625e-05, -0.0002884864807128906, -2.2649765014648438e-06, -1.9073486328125e-06, -0.00101470947265625, -0.00077056884765625, -4.76837158203125e-05, -1.33514404296875e-05, -0.0002498626708984375, -0.0004482269287109375, -5.53131103515625e-05, -7.62939453125e-06, -0.000919342041015625, -0.0008320807246491313, -5.841255187988281e-06, -1.71661376953125e-05], "choice_history": [93, 145, 230, 101, 125, "Hammer", "Of", "Wrath", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw.<UNK>()\n", "score": -8.62483298556704, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HammerOfWrath", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -3.62396240234375e-05, -0.0002460479736328125, -0.000125885009765625, -3.9695980376563966e-05, -0.0008792876615189016, -1.0490362910786644e-05, -4.768360213347478e-06, -8.392333984375e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.919257738336455e-05, -4.0531158447265625e-06, -3.24249267578125e-05, -0.0003795623779296875, -9.1552734375e-05, -0.000110626220703125, -5.53131103515625e-05, -0.0003986358642578125, -1.9073486328125e-06, -0.0001010894775390625, -1.9073486328125e-06, -5.7220458984375e-06, -2.9444288884405978e-05, -2.682209014892578e-05, -1.537799835205078e-05, -6.902217864990234e-05, -0.008211731910705566, -2.145764938177308e-06, -0.0001010894775390625, -1.9073486328125e-06, 0.0, 0.0, 0.0, -4.0531158447265625e-06, -1.1920928244535389e-07, -0.00026154518127441406, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.682209014892578e-05, -1.1920928244535389e-07, -0.0001220703125, -1.9073486328125e-06, -0.00658416748046875, 0.0, -0.0002288818359375, 0.0, -4.38690185546875e-05, -5.7220458984375e-06, -8.392333984375e-05, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -5.3763389587402344e-05, -1.9073486328125e-06, -0.00015461444854736328, -1.9073486328125e-06, -0.0004712343215942383, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.71661376953125e-05, 0.0, -0.00078582763671875, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.3245811462402344e-05, 0.0, -3.24249267578125e-05, -2.288818359375e-05, -2.9087063012411818e-05, -2.2888176317792386e-05, -0.0008382797241210938, -0.0002079010009765625, -0.0002231597900390625, -3.814697265625e-06, 0.0, -0.000171661376953125, -3.814697265625e-06, -1.9073486328125e-06, -0.0002307891845703125, -3.850391658488661e-05, -6.580336776096374e-05, -3.814697265625e-06, -0.000225067138671875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -3.24249267578125e-05, -0.0002783536911010742, -2.2649765014648438e-06, -1.9073486328125e-06, -0.0011005401611328125, -0.000804901123046875, -3.4332275390625e-05, -1.52587890625e-05, -0.0002918243408203125, -0.000431060791015625, -8.58306884765625e-05, -9.5367431640625e-06, -7.853363990783691, -0.000362396240234375, -0.006533622741699219, -0.6764912605285645, 0.0, -0.06257128715515137, -2.3841855067985307e-07, -0.00012969970703125], "choice_history": [93, 145, 230, 101, 125, "Hammer", "Of", "Wrath", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 102, 128, 18, 121, 15, 116, 15, 116, 32, "draw", "<EOS>", "<UNK>", "<EOS>", 109]}, {"inferred_code": "", "score": -18.98242950439453, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, -3.814697265625e-06, -18.982425689697266], "choice_history": [93, 145, 228]}, {"inferred_code": "", "score": -20.062947273254395, "model_output": {"_type": "Module", "body": [{"_type": "Template13_stmt_seq"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -3.814697265625e-06, -3.62396240234375e-05, -14.50585651397705, -5.557050704956055], "choice_history": [93, 145, 230, 109, 109]}], "index": 44}
{"beams": [{"inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "score": -0.9299260882616878, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HandOfProtection", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"_type": "NameConstant", "value": true}, "targets": [{"attr": "divine_shield", "_type": "Attribute", "value": {"_type": "Template8"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.000179290771484375, -9.5367431640625e-05, -2.753699300228618e-05, -0.007541242521256208, -0.00019107422849629074, -2.157668859581463e-05, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.0007610321044921875, -5.14984130859375e-05, -4.57763671875e-05, -1.71661376953125e-05, -3.4332275390625e-05, -1.52587890625e-05, -0.0006694793701171875, -7.62939453125e-06, -3.814697265625e-06, -1.1801660548371729e-05, -0.00010287747136317194, -0.00044327270006760955, -0.00010061256034532562, -0.0007290840148925781, -1.1444091796875e-05, -5.91278076171875e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.0004000663757324219, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0001354217529296875, -3.814697265625e-06, -0.6825237274169922, 0.0, -0.0001964569091796875, -1.1920928244535389e-07, -2.6702880859375e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.0004215240478515625, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -2.527235119487159e-05, -3.635883331298828e-05, -0.00989150907844305, -8.797636110102758e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.671645754366182e-05, -0.0001125335693359375, -1.1444091796875e-05, 0.0, -0.000335693359375, -1.9073486328125e-06, -0.000316619873046875, 0.0, -7.62939453125e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0002887248992919922, -7.510157047363464e-06, -0.1394329071044922, -0.002559661865234375, -0.035696983337402344, -0.00022125244140625, -0.0003204345703125, -0.00011444091796875, 0.0, -0.0030832290649414062, -0.03585202991962433, -2.491474151611328e-05, -0.00283050537109375, -0.00335693359375, -0.00010180473327636719, -2.0265499188099056e-05, -2.86102294921875e-05], "choice_history": [93, 145, 230, 101, 125, "Hand", "Of", "Protection", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hand", " ", "of", " ", "Protection", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 98, 115, 216, 55, 116, 52, "divine_shield", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            calculate_attack() <= 3 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "score": -1.7298351497688458, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HandOfProtection", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template16"}], "ops": [{"_type": "LtE"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"_type": "NameConstant", "value": true}, "targets": [{"attr": "divine_shield", "_type": "Attribute", "value": {"_type": "Template8"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.000179290771484375, -9.5367431640625e-05, -2.753699300228618e-05, -0.007541242521256208, -0.00019107422849629074, -2.157668859581463e-05, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.0007610321044921875, -5.14984130859375e-05, -4.57763671875e-05, -1.71661376953125e-05, -3.4332275390625e-05, -1.52587890625e-05, -0.0006694793701171875, -7.62939453125e-06, -3.814697265625e-06, -1.1801660548371729e-05, -0.00010287747136317194, -0.00044327270006760955, -0.00010061256034532562, -0.0007290840148925781, -1.1444091796875e-05, -5.91278076171875e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.0004000663757324219, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0001354217529296875, -3.814697265625e-06, -0.7063465118408203, 0.0, -8.392333984375e-05, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -1.1444091796875e-05, 0.0, -0.000217437744140625, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -2.336500256205909e-05, -2.872943878173828e-05, -0.010150670073926449, -3.540513716870919e-05, -0.0003147125244140625, -0.0012903213500976562, -0.00046634674072265625, -0.007317543029785156, -0.0001621246337890625, -0.0023632049560546875, -0.0021266937255859375, -9.1552734375e-05, -0.0006256103515625, -1.9073486328125e-06, -0.017983198165893555, -5.65051450394094e-05, -0.001224517822265625, -0.00064849853515625, -0.0001049041748046875, -0.002838134765625, -0.001049041748046875, -4.1961669921875e-05, -0.011418342590332031, -0.0033969879150390625, -5.7220458984375e-06, 0.0, -0.000293731689453125, -9.5367431640625e-06, -0.010822373442351818, -1.4185894542606547e-05, -0.017771676182746887, -2.1457672119140625e-06, -2.09808349609375e-05, -0.21190834045410156, -0.0001888275146484375, -0.018411636352539062, -0.07750320434570312, -0.008475303649902344, -1.52587890625e-05, 0.0, -6.103515625e-05, 0.0, -0.0743616595864296, -4.053113570989808e-06, -0.03985336795449257, -2.0146237147855572e-05, -3.24249267578125e-05, -2.47955322265625e-05, -0.0018461942672729492, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.0003223419189453125, -1.1444091796875e-05, -0.000118255615234375, 0.0, -5.841255187988281e-06, 0.0, -7.62939453125e-06, 0.0, -0.00038433074951171875, -1.764281842042692e-05, -0.21234703063964844, -0.0017910003662109375, -0.22293376922607422, -0.000110626220703125, -0.0001983642578125, -6.29425048828125e-05, 0.0, -0.004494667053222656, -0.03625927120447159, -2.491474151611328e-05, -0.0031976699829101562, -0.0033779144287109375, -9.21487808227539e-05, -1.9311835785629228e-05, -3.24249267578125e-05], "choice_history": [93, 145, 230, 101, 125, "Hand", "Of", "Protection", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hand", " ", "of", " ", "Protection", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 18, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_attack", "<EOS>", 213, 13, 216, 72, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 98, 115, 216, 55, 116, 52, "divine_shield", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            calculate_attack() <= 3 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -3.5187860922944623, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HandOfProtection", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template16"}], "ops": [{"_type": "LtE"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.000179290771484375, -9.5367431640625e-05, -2.753699300228618e-05, -0.007541242521256208, -0.00019107422849629074, -2.157668859581463e-05, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.0007610321044921875, -5.14984130859375e-05, -4.57763671875e-05, -1.71661376953125e-05, -3.4332275390625e-05, -1.52587890625e-05, -0.0006694793701171875, -7.62939453125e-06, -3.814697265625e-06, -1.1801660548371729e-05, -0.00010287747136317194, -0.00044327270006760955, -0.00010061256034532562, -0.0007290840148925781, -1.1444091796875e-05, -5.91278076171875e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.0004000663757324219, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0001354217529296875, -3.814697265625e-06, -0.7063465118408203, 0.0, -8.392333984375e-05, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -1.1444091796875e-05, 0.0, -0.000217437744140625, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -2.336500256205909e-05, -2.872943878173828e-05, -0.010150670073926449, -3.540513716870919e-05, -0.0003147125244140625, -0.0012903213500976562, -0.00046634674072265625, -0.007317543029785156, -0.0001621246337890625, -0.0023632049560546875, -0.0021266937255859375, -9.1552734375e-05, -0.0006256103515625, -1.9073486328125e-06, -0.017983198165893555, -5.65051450394094e-05, -0.001224517822265625, -0.00064849853515625, -0.0001049041748046875, -0.002838134765625, -0.001049041748046875, -4.1961669921875e-05, -0.011418342590332031, -0.0033969879150390625, -5.7220458984375e-06, 0.0, -0.000293731689453125, -9.5367431640625e-06, -0.010822373442351818, -1.4185894542606547e-05, -0.017771676182746887, -2.1457672119140625e-06, -2.09808349609375e-05, -0.21190834045410156, -0.0001888275146484375, -0.018411636352539062, -0.07750320434570312, -0.008475303649902344, -1.52587890625e-05, 0.0, -6.103515625e-05, 0.0, -0.0743616595864296, -4.053113570989808e-06, -0.03985336795449257, -2.0146237147855572e-05, -3.24249267578125e-05, -2.47955322265625e-05, -0.0018461942672729492, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.0003223419189453125, -1.1444091796875e-05, -0.000118255615234375, 0.0, -5.841255187988281e-06, 0.0, -7.62939453125e-06, 0.0, -0.00038433074951171875, -1.764281842042692e-05, -0.21234703063964844, -0.0017910003662109375, -1.6347684860229492, -1.52587890625e-05, -1.33514404296875e-05, -9.5367431640625e-05, -1.71661376953125e-05, -7.62939453125e-06, -0.0008563995361328125, -0.3890390396118164, -2.503394853192731e-06, -1.52587890625e-05, -0.034918785095214844, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Hand", "Of", "Protection", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hand", " ", "of", " ", "Protection", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 18, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_attack", "<EOS>", 213, 13, 216, 72, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 109]}, {"inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            calculate_attack() <= 3 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n", "score": -3.9264728026523557, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HandOfProtection", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template16"}], "ops": [{"_type": "LtE"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.000179290771484375, -9.5367431640625e-05, -2.753699300228618e-05, -0.007541242521256208, -0.00019107422849629074, -2.157668859581463e-05, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.0007610321044921875, -5.14984130859375e-05, -4.57763671875e-05, -1.71661376953125e-05, -3.4332275390625e-05, -1.52587890625e-05, -0.0006694793701171875, -7.62939453125e-06, -3.814697265625e-06, -1.1801660548371729e-05, -0.00010287747136317194, -0.00044327270006760955, -0.00010061256034532562, -0.0007290840148925781, -1.1444091796875e-05, -5.91278076171875e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.0004000663757324219, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0001354217529296875, -3.814697265625e-06, -0.7063465118408203, 0.0, -8.392333984375e-05, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -1.1444091796875e-05, 0.0, -0.000217437744140625, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -2.336500256205909e-05, -2.872943878173828e-05, -0.010150670073926449, -3.540513716870919e-05, -0.0003147125244140625, -0.0012903213500976562, -0.00046634674072265625, -0.007317543029785156, -0.0001621246337890625, -0.0023632049560546875, -0.0021266937255859375, -9.1552734375e-05, -0.0006256103515625, -1.9073486328125e-06, -0.017983198165893555, -5.65051450394094e-05, -0.001224517822265625, -0.00064849853515625, -0.0001049041748046875, -0.002838134765625, -0.001049041748046875, -4.1961669921875e-05, -0.011418342590332031, -0.0033969879150390625, -5.7220458984375e-06, 0.0, -0.000293731689453125, -9.5367431640625e-06, -0.010822373442351818, -1.4185894542606547e-05, -0.017771676182746887, -2.1457672119140625e-06, -2.09808349609375e-05, -0.21190834045410156, -0.0001888275146484375, -0.018411636352539062, -0.07750320434570312, -0.008475303649902344, -1.52587890625e-05, 0.0, -6.103515625e-05, 0.0, -0.0743616595864296, -4.053113570989808e-06, -0.03985336795449257, -2.0146237147855572e-05, -3.24249267578125e-05, -2.47955322265625e-05, -0.0018461942672729492, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.0003223419189453125, -1.1444091796875e-05, -0.000118255615234375, 0.0, -5.841255187988281e-06, 0.0, -7.62939453125e-06, 0.0, -0.00038433074951171875, -1.764281842042692e-05, -1.6568679809570312, -0.00087738037109375, -0.18094539642333984, -3.814697265625e-06, -1.52587890625e-05, -0.0001316070556640625, -7.62939453125e-06, -5.7220458984375e-06, -0.001728057861328125, -0.1378920078277588, -1.9669532775878906e-05, -7.62939453125e-06, -0.6422367095947266, -0.000148773193359375, -8.0108642578125e-05, -6.103515625e-05, -5.53131103515625e-05, -0.0001926422119140625, -1.9073486328125e-06, -0.001087188720703125, -0.0029213428497314453, -5.91278076171875e-05, -1.1444091796875e-05, -0.05621051788330078, -1.1444091796875e-05], "choice_history": [93, 145, 230, 101, 125, "Hand", "Of", "Protection", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hand", " ", "of", " ", "Protection", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 18, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_attack", "<EOS>", 213, 13, 216, 72, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 76, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 76, 109]}, {"inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n", "score": -4.581984853633891, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HandOfProtection", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.000179290771484375, -9.5367431640625e-05, -2.753699300228618e-05, -0.007541242521256208, -0.00019107422849629074, -2.157668859581463e-05, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.0007610321044921875, -5.14984130859375e-05, -4.57763671875e-05, -1.71661376953125e-05, -3.4332275390625e-05, -1.52587890625e-05, -0.0006694793701171875, -7.62939453125e-06, -3.814697265625e-06, -1.1801660548371729e-05, -0.00010287747136317194, -0.00044327270006760955, -0.00010061256034532562, -0.0007290840148925781, -1.1444091796875e-05, -5.91278076171875e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.0004000663757324219, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0001354217529296875, -3.814697265625e-06, -0.6825237274169922, 0.0, -0.0001964569091796875, -1.1920928244535389e-07, -2.6702880859375e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.0004215240478515625, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -2.527235119487159e-05, -3.635883331298828e-05, -0.00989150907844305, -8.797636110102758e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.671645754366182e-05, -0.0001125335693359375, -1.1444091796875e-05, 0.0, -0.000335693359375, -1.9073486328125e-06, -0.000316619873046875, 0.0, -7.62939453125e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0002887248992919922, -7.510157047363464e-06, -2.041288375854492, -0.0001430511474609375, -1.0029020309448242, -2.09808349609375e-05, -1.33514404296875e-05, -7.05718994140625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -0.00208282470703125, -0.12695002555847168, -4.100799560546875e-05, -5.7220458984375e-06, -0.6457796096801758, -0.00012969970703125, -6.4849853515625e-05, -4.57763671875e-05, -5.340576171875e-05, -0.0001926422119140625, -1.9073486328125e-06, -0.0010528564453125, -0.002743840217590332, -6.103515625e-05, -1.1444091796875e-05, -0.0520172119140625, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Hand", "Of", "Protection", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hand", " ", "of", " ", "Protection", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 76, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 76, 109]}, {"inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            calculate_attack() != 3 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "score": -4.584397730432087, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HandOfProtection", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template16"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"_type": "NameConstant", "value": true}, "targets": [{"attr": "divine_shield", "_type": "Attribute", "value": {"_type": "Template8"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.000179290771484375, -9.5367431640625e-05, -2.753699300228618e-05, -0.007541242521256208, -0.00019107422849629074, -2.157668859581463e-05, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.0007610321044921875, -5.14984130859375e-05, -4.57763671875e-05, -1.71661376953125e-05, -3.4332275390625e-05, -1.52587890625e-05, -0.0006694793701171875, -7.62939453125e-06, -3.814697265625e-06, -1.1801660548371729e-05, -0.00010287747136317194, -0.00044327270006760955, -0.00010061256034532562, -0.0007290840148925781, -1.1444091796875e-05, -5.91278076171875e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.0004000663757324219, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0001354217529296875, -3.814697265625e-06, -0.7063465118408203, 0.0, -8.392333984375e-05, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -1.1444091796875e-05, 0.0, -0.000217437744140625, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -2.336500256205909e-05, -2.872943878173828e-05, -0.010150670073926449, -3.540513716870919e-05, -0.0003147125244140625, -0.0012903213500976562, -0.00046634674072265625, -0.007317543029785156, -0.0001621246337890625, -0.0023632049560546875, -0.0021266937255859375, -9.1552734375e-05, -0.0006256103515625, -1.9073486328125e-06, -0.017983198165893555, -5.65051450394094e-05, -0.001224517822265625, -0.00064849853515625, -0.0001049041748046875, -0.002838134765625, -0.001049041748046875, -4.1961669921875e-05, -0.011418342590332031, -0.0033969879150390625, -5.7220458984375e-06, 0.0, -0.000293731689453125, -9.5367431640625e-06, -0.010822373442351818, -1.4185894542606547e-05, -0.017771676182746887, -2.1457672119140625e-06, -2.09808349609375e-05, -3.0823793411254883, -1.33514404296875e-05, -0.050017356872558594, -0.02989673614501953, -0.0054531097412109375, -7.62939453125e-06, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -0.056379493325948715, -5.006785613659304e-06, -0.04813850298523903, -1.537793104944285e-05, -2.86102294921875e-05, -3.814697265625e-05, -0.0034055709838867188, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.000331878662109375, -1.1444091796875e-05, -0.0001163482666015625, 0.0, -5.841255187988281e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0003948211669921875, -1.728519782773219e-05, -0.2084827423095703, -0.00205230712890625, -0.23793315887451172, -0.0001087188720703125, -0.000202178955078125, -5.7220458984375e-05, 0.0, -0.004540443420410156, -0.03630958870053291, -2.300739288330078e-05, -0.0032281875610351562, -0.003265380859375, -9.21487808227539e-05, -1.8715796613832936e-05, -3.4332275390625e-05], "choice_history": [93, 145, 230, 101, 125, "Hand", "Of", "Protection", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hand", " ", "of", " ", "Protection", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 18, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_attack", "<EOS>", 213, 14, 216, 72, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 98, 115, 216, 55, 116, 52, "divine_shield", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            calculate_attack() <= 3 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n        self.target.increase_health(4)\n", "score": -4.60708524752998, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HandOfProtection", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template16"}], "ops": [{"_type": "LtE"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template16"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.000179290771484375, -9.5367431640625e-05, -2.753699300228618e-05, -0.007541242521256208, -0.00019107422849629074, -2.157668859581463e-05, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.0007610321044921875, -5.14984130859375e-05, -4.57763671875e-05, -1.71661376953125e-05, -3.4332275390625e-05, -1.52587890625e-05, -0.0006694793701171875, -7.62939453125e-06, -3.814697265625e-06, -1.1801660548371729e-05, -0.00010287747136317194, -0.00044327270006760955, -0.00010061256034532562, -0.0007290840148925781, -1.1444091796875e-05, -5.91278076171875e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.0004000663757324219, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0001354217529296875, -3.814697265625e-06, -0.7063465118408203, 0.0, -8.392333984375e-05, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -1.1444091796875e-05, 0.0, -0.000217437744140625, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -2.336500256205909e-05, -2.872943878173828e-05, -0.010150670073926449, -3.540513716870919e-05, -0.0003147125244140625, -0.0012903213500976562, -0.00046634674072265625, -0.007317543029785156, -0.0001621246337890625, -0.0023632049560546875, -0.0021266937255859375, -9.1552734375e-05, -0.0006256103515625, -1.9073486328125e-06, -0.017983198165893555, -5.65051450394094e-05, -0.001224517822265625, -0.00064849853515625, -0.0001049041748046875, -0.002838134765625, -0.001049041748046875, -4.1961669921875e-05, -0.011418342590332031, -0.0033969879150390625, -5.7220458984375e-06, 0.0, -0.000293731689453125, -9.5367431640625e-06, -0.010822373442351818, -1.4185894542606547e-05, -0.017771676182746887, -2.1457672119140625e-06, -2.09808349609375e-05, -0.21190834045410156, -0.0001888275146484375, -0.018411636352539062, -0.07750320434570312, -0.008475303649902344, -1.52587890625e-05, 0.0, -6.103515625e-05, 0.0, -0.0743616595864296, -4.053113570989808e-06, -0.03985336795449257, -2.0146237147855572e-05, -3.24249267578125e-05, -2.47955322265625e-05, -0.0018461942672729492, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.0003223419189453125, -1.1444091796875e-05, -0.000118255615234375, 0.0, -5.841255187988281e-06, 0.0, -7.62939453125e-06, 0.0, -0.00038433074951171875, -1.764281842042692e-05, -1.6568679809570312, -0.00087738037109375, -0.18094539642333984, -3.814697265625e-06, -1.52587890625e-05, -0.0001316070556640625, -7.62939453125e-06, -5.7220458984375e-06, -0.001728057861328125, -0.1378920078277588, -1.9669532775878906e-05, -7.62939453125e-06, -1.3246116638183594, -0.0006103515625, -3.814697265625e-05, -9.5367431640625e-06, -0.0003204345703125, -0.0001926422119140625, -3.814697265625e-06, -0.0011005401611328125, -0.0034295320510864258, -0.0001735687255859375, -1.9073486328125e-05, -0.05315971374511719, -2.09808349609375e-05], "choice_history": [93, 145, 230, 101, 125, "Hand", "Of", "Protection", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hand", " ", "of", " ", "Protection", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 18, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_attack", "<EOS>", 213, 13, 216, 72, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 72, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 76, 109]}, {"inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            calculate_attack() >= 3 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "score": -4.60922963809297, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HandOfProtection", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template16"}], "ops": [{"_type": "GtE"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"_type": "NameConstant", "value": true}, "targets": [{"attr": "divine_shield", "_type": "Attribute", "value": {"_type": "Template8"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.000179290771484375, -9.5367431640625e-05, -2.753699300228618e-05, -0.007541242521256208, -0.00019107422849629074, -2.157668859581463e-05, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.0007610321044921875, -5.14984130859375e-05, -4.57763671875e-05, -1.71661376953125e-05, -3.4332275390625e-05, -1.52587890625e-05, -0.0006694793701171875, -7.62939453125e-06, -3.814697265625e-06, -1.1801660548371729e-05, -0.00010287747136317194, -0.00044327270006760955, -0.00010061256034532562, -0.0007290840148925781, -1.1444091796875e-05, -5.91278076171875e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.0004000663757324219, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0001354217529296875, -3.814697265625e-06, -0.7063465118408203, 0.0, -8.392333984375e-05, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -1.1444091796875e-05, 0.0, -0.000217437744140625, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -2.336500256205909e-05, -2.872943878173828e-05, -0.010150670073926449, -3.540513716870919e-05, -0.0003147125244140625, -0.0012903213500976562, -0.00046634674072265625, -0.007317543029785156, -0.0001621246337890625, -0.0023632049560546875, -0.0021266937255859375, -9.1552734375e-05, -0.0006256103515625, -1.9073486328125e-06, -0.017983198165893555, -5.65051450394094e-05, -0.001224517822265625, -0.00064849853515625, -0.0001049041748046875, -0.002838134765625, -0.001049041748046875, -4.1961669921875e-05, -0.011418342590332031, -0.0033969879150390625, -5.7220458984375e-06, 0.0, -0.000293731689453125, -9.5367431640625e-06, -0.010822373442351818, -1.4185894542606547e-05, -0.017771676182746887, -2.1457672119140625e-06, -2.09808349609375e-05, -2.914081573486328, -1.71661376953125e-05, -0.2123556137084961, -0.10538959503173828, -0.014774322509765625, -6.103515625e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.07434109598398209, -4.52994936495088e-06, -0.030198363587260246, -2.51529327215394e-05, -1.71661376953125e-05, -2.6702880859375e-05, -0.0010750293731689453, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.0003223419189453125, -9.5367431640625e-06, -0.0001468658447265625, 0.0, -5.841255187988281e-06, 0.0, -7.62939453125e-06, 0.0, -0.0003542900085449219, -1.7165990357170813e-05, -0.18315505981445312, -0.0016345977783203125, -0.21239662170410156, -0.0001125335693359375, -0.0002002716064453125, -6.103515625e-05, 0.0, -0.00446319580078125, -0.03585255146026611, -2.491474151611328e-05, -0.0032033920288085938, -0.0033550262451171875, -9.40561294555664e-05, -1.919262831506785e-05, -3.24249267578125e-05], "choice_history": [93, 145, 230, 101, 125, "Hand", "Of", "Protection", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hand", " ", "of", " ", "Protection", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 18, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_attack", "<EOS>", 213, 8, 216, 72, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 98, 115, 216, 55, 116, 52, "divine_shield", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -4.6790294407689785, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HandOfProtection", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.000179290771484375, -9.5367431640625e-05, -2.753699300228618e-05, -0.007541242521256208, -0.00019107422849629074, -2.157668859581463e-05, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.0007610321044921875, -5.14984130859375e-05, -4.57763671875e-05, -1.71661376953125e-05, -3.4332275390625e-05, -1.52587890625e-05, -0.0006694793701171875, -7.62939453125e-06, -3.814697265625e-06, -1.1801660548371729e-05, -0.00010287747136317194, -0.00044327270006760955, -0.00010061256034532562, -0.0007290840148925781, -1.1444091796875e-05, -5.91278076171875e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.0004000663757324219, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0001354217529296875, -3.814697265625e-06, -0.6825237274169922, 0.0, -0.0001964569091796875, -1.1920928244535389e-07, -2.6702880859375e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.0004215240478515625, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -2.527235119487159e-05, -3.635883331298828e-05, -0.00989150907844305, -8.797636110102758e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.671645754366182e-05, -0.0001125335693359375, -1.1444091796875e-05, 0.0, -0.000335693359375, -1.9073486328125e-06, -0.000316619873046875, 0.0, -7.62939453125e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0002887248992919922, -7.510157047363464e-06, -0.1394329071044922, -0.002559661865234375, -3.544025421142578, -3.4332275390625e-05, -1.33514404296875e-05, -8.0108642578125e-05, -2.6702880859375e-05, -1.52587890625e-05, -0.0019054412841796875, -0.22987639904022217, -2.503394853192731e-06, -1.71661376953125e-05, -0.054752349853515625, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Hand", "Of", "Protection", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hand", " ", "of", " ", "Protection", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 109]}, {"inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            calculate_attack() <= 3 and character.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "score": -4.759813309768539, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HandOfProtection", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template16"}], "ops": [{"_type": "LtE"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "character", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"_type": "NameConstant", "value": true}, "targets": [{"attr": "divine_shield", "_type": "Attribute", "value": {"_type": "Template8"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.000179290771484375, -9.5367431640625e-05, -2.753699300228618e-05, -0.007541242521256208, -0.00019107422849629074, -2.157668859581463e-05, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.0007610321044921875, -5.14984130859375e-05, -4.57763671875e-05, -1.71661376953125e-05, -3.4332275390625e-05, -1.52587890625e-05, -0.0006694793701171875, -7.62939453125e-06, -3.814697265625e-06, -1.1801660548371729e-05, -0.00010287747136317194, -0.00044327270006760955, -0.00010061256034532562, -0.0007290840148925781, -1.1444091796875e-05, -5.91278076171875e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.0004000663757324219, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0001354217529296875, -3.814697265625e-06, -0.7063465118408203, 0.0, -8.392333984375e-05, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -1.1444091796875e-05, 0.0, -0.000217437744140625, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -2.336500256205909e-05, -2.872943878173828e-05, -0.010150670073926449, -3.540513716870919e-05, -0.0003147125244140625, -0.0012903213500976562, -0.00046634674072265625, -0.007317543029785156, -0.0001621246337890625, -0.0023632049560546875, -0.0021266937255859375, -9.1552734375e-05, -0.0006256103515625, -1.9073486328125e-06, -0.017983198165893555, -5.65051450394094e-05, -0.001224517822265625, -0.00064849853515625, -0.0001049041748046875, -0.002838134765625, -0.001049041748046875, -4.1961669921875e-05, -0.011418342590332031, -0.0033969879150390625, -5.7220458984375e-06, 0.0, -0.000293731689453125, -9.5367431640625e-06, -0.010822373442351818, -1.4185894542606547e-05, -0.017771676182746887, -2.1457672119140625e-06, -2.09808349609375e-05, -0.21190834045410156, -0.0001888275146484375, -0.018411636352539062, -0.07750320434570312, -0.008475303649902344, -1.52587890625e-05, 0.0, -6.103515625e-05, 0.0, -3.1741349697113037, -1.1920928244535389e-07, -0.012612339109182358, -3.4570680327306036e-06, -1.9073486328125e-05, -4.00543212890625e-05, -0.0016609430313110352, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -0.0003643035888671875, -1.1444091796875e-05, -0.0001163482666015625, 0.0, -5.841255187988281e-06, 0.0, -7.62939453125e-06, 0.0, -0.0003612041473388672, -1.5616295058862306e-05, -0.15404319763183594, -0.0019741058349609375, -0.23810958862304688, -0.0001049041748046875, -0.000217437744140625, -4.38690185546875e-05, 0.0, -0.004669189453125, -0.03692280873656273, -2.288818359375e-05, -0.00335693359375, -0.00296783447265625, -8.821487426757812e-05, -1.7881340681924485e-05, -3.62396240234375e-05], "choice_history": [93, 145, 230, 101, 125, "Hand", "Of", "Protection", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hand", " ", "of", " ", "Protection", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 18, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_attack", "<EOS>", 213, 13, 216, 72, 58, 121, 15, 116, 23, 146, "character", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 98, 115, 216, 55, 116, 52, "divine_shield", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n        self.target.increase_health(4)\n", "score": -5.273984289058696, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HandOfProtection", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template16"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.000179290771484375, -9.5367431640625e-05, -2.753699300228618e-05, -0.007541242521256208, -0.00019107422849629074, -2.157668859581463e-05, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.0007610321044921875, -5.14984130859375e-05, -4.57763671875e-05, -1.71661376953125e-05, -3.4332275390625e-05, -1.52587890625e-05, -0.0006694793701171875, -7.62939453125e-06, -3.814697265625e-06, -1.1801660548371729e-05, -0.00010287747136317194, -0.00044327270006760955, -0.00010061256034532562, -0.0007290840148925781, -1.1444091796875e-05, -5.91278076171875e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.0004000663757324219, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0001354217529296875, -3.814697265625e-06, -0.6825237274169922, 0.0, -0.0001964569091796875, -1.1920928244535389e-07, -2.6702880859375e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.0004215240478515625, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -2.527235119487159e-05, -3.635883331298828e-05, -0.00989150907844305, -8.797636110102758e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.671645754366182e-05, -0.0001125335693359375, -1.1444091796875e-05, 0.0, -0.000335693359375, -1.9073486328125e-06, -0.000316619873046875, 0.0, -7.62939453125e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0002887248992919922, -7.510157047363464e-06, -2.041288375854492, -0.0001430511474609375, -1.0029020309448242, -2.09808349609375e-05, -1.33514404296875e-05, -7.05718994140625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -0.00208282470703125, -0.12695002555847168, -4.100799560546875e-05, -5.7220458984375e-06, -1.3361854553222656, -0.000370025634765625, -2.47955322265625e-05, -9.5367431640625e-06, -0.000274658203125, -0.0001926422119140625, -3.814697265625e-06, -0.00096893310546875, -0.0033103227615356445, -0.000148773193359375, -1.9073486328125e-05, -0.052643775939941406, -7.62939453125e-06], "choice_history": [93, 145, 230, 101, 125, "Hand", "Of", "Protection", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hand", " ", "of", " ", "Protection", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 72, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 76, 109]}, {"inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.immune = True\n", "score": -5.448642825311232, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HandOfProtection", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"_type": "NameConstant", "value": true}, "targets": [{"attr": "immune", "_type": "Attribute", "value": {"_type": "Template8"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.000179290771484375, -9.5367431640625e-05, -2.753699300228618e-05, -0.007541242521256208, -0.00019107422849629074, -2.157668859581463e-05, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.0007610321044921875, -5.14984130859375e-05, -4.57763671875e-05, -1.71661376953125e-05, -3.4332275390625e-05, -1.52587890625e-05, -0.0006694793701171875, -7.62939453125e-06, -3.814697265625e-06, -1.1801660548371729e-05, -0.00010287747136317194, -0.00044327270006760955, -0.00010061256034532562, -0.0007290840148925781, -1.1444091796875e-05, -5.91278076171875e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.0004000663757324219, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0001354217529296875, -3.814697265625e-06, -0.6825237274169922, 0.0, -0.0001964569091796875, -1.1920928244535389e-07, -2.6702880859375e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.0004215240478515625, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -2.527235119487159e-05, -3.635883331298828e-05, -0.00989150907844305, -8.797636110102758e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.671645754366182e-05, -0.0001125335693359375, -1.1444091796875e-05, 0.0, -0.000335693359375, -1.9073486328125e-06, -0.000316619873046875, 0.0, -7.62939453125e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0002887248992919922, -7.510157047363464e-06, -0.1394329071044922, -0.002559661865234375, -0.035696983337402344, -0.00022125244140625, -0.0003204345703125, -0.00011444091796875, 0.0, -0.0030832290649414062, -4.546146869659424, -2.5033950805664062e-05, -0.013040542602539062, -0.00148773193359375, -7.557867502328008e-05, -5.68621871934738e-05, -9.918212890625e-05], "choice_history": [93, 145, 230, 101, 125, "Hand", "Of", "Protection", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hand", " ", "of", " ", "Protection", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 98, 115, 216, 55, 116, 52, "immune", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            calculate_attack() <= 3 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n        self.target.change_attack(4)\n", "score": -6.676559210617128, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HandOfProtection", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template16"}], "ops": [{"_type": "LtE"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"_type": "NameConstant", "value": true}, "targets": [{"attr": "divine_shield", "_type": "Attribute", "value": {"_type": "Template8"}}]}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.000179290771484375, -9.5367431640625e-05, -2.753699300228618e-05, -0.007541242521256208, -0.00019107422849629074, -2.157668859581463e-05, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.0007610321044921875, -5.14984130859375e-05, -4.57763671875e-05, -1.71661376953125e-05, -3.4332275390625e-05, -1.52587890625e-05, -0.0006694793701171875, -7.62939453125e-06, -3.814697265625e-06, -1.1801660548371729e-05, -0.00010287747136317194, -0.00044327270006760955, -0.00010061256034532562, -0.0007290840148925781, -1.1444091796875e-05, -5.91278076171875e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.0004000663757324219, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.62396240234375e-05, -1.1920928244535389e-07, -0.0001354217529296875, -3.814697265625e-06, -0.7063465118408203, 0.0, -8.392333984375e-05, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -1.1444091796875e-05, 0.0, -0.000217437744140625, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -2.336500256205909e-05, -2.872943878173828e-05, -0.010150670073926449, -3.540513716870919e-05, -0.0003147125244140625, -0.0012903213500976562, -0.00046634674072265625, -0.007317543029785156, -0.0001621246337890625, -0.0023632049560546875, -0.0021266937255859375, -9.1552734375e-05, -0.0006256103515625, -1.9073486328125e-06, -0.017983198165893555, -5.65051450394094e-05, -0.001224517822265625, -0.00064849853515625, -0.0001049041748046875, -0.002838134765625, -0.001049041748046875, -4.1961669921875e-05, -0.011418342590332031, -0.0033969879150390625, -5.7220458984375e-06, 0.0, -0.000293731689453125, -9.5367431640625e-06, -0.010822373442351818, -1.4185894542606547e-05, -0.017771676182746887, -2.1457672119140625e-06, -2.09808349609375e-05, -0.21190834045410156, -0.0001888275146484375, -0.018411636352539062, -0.07750320434570312, -0.008475303649902344, -1.52587890625e-05, 0.0, -6.103515625e-05, 0.0, -0.0743616595864296, -4.053113570989808e-06, -0.03985336795449257, -2.0146237147855572e-05, -3.24249267578125e-05, -2.47955322265625e-05, -0.0018461942672729492, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.0003223419189453125, -1.1444091796875e-05, -0.000118255615234375, 0.0, -5.841255187988281e-06, 0.0, -7.62939453125e-06, 0.0, -0.00038433074951171875, -1.764281842042692e-05, -1.6568679809570312, -0.00087738037109375, -1.8032722473144531, -2.09808349609375e-05, -1.33514404296875e-05, -0.1046895980834961, 0.0, -0.0016460418701171875, -0.032835703343153, -9.655952453613281e-06, -0.003986358642578125, -0.0057239532470703125, -9.799003601074219e-05, -2.8371667212923057e-05, -0.9223747253417969, -6.29425048828125e-05, -0.0021114349365234375, -0.02962970733642578, -2.288818359375e-05, -4.9591064453125e-05, -0.05672645568847656, -0.17881715297698975, -3.24249267578125e-05, -8.20159912109375e-05, -0.6316795349121094, -7.62939453125e-06], "choice_history": [93, 145, 230, 101, 125, "Hand", "Of", "Protection", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hand", " ", "of", " ", "Protection", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 18, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_attack", "<EOS>", 213, 13, 216, 72, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 55, 116, 52, "divine_shield", "<EOS>", 24, 147, "True", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 76, 109]}, {"inferred_code": "", "score": -20.934526443481445, "model_output": {"_type": "Module", "body": []}, "score_history": [-7.62939453125e-05, -1.9073486328125e-06, -20.9344482421875], "choice_history": [93, 145, 228]}, {"inferred_code": "", "score": -23.636268615722656, "model_output": {"_type": "Module", "body": [{"_type": "Template13_stmt_seq"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-05, -1.9073486328125e-06, -7.62939453125e-06, -15.382213592529297, -8.253969192504883], "choice_history": [93, 145, 230, 109, 109]}], "index": 45}
{"beams": [{"inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, False, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n", "score": -0.19749617110733197, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "HealingTotem", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template14"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "Template27"}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"hole0": "TurnEnded", "_type": "Template5"}, {"func": {"_type": "Template32"}, "args": [{"func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}]}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -5.7220458984375e-06, -4.57763671875e-05, -2.09808349609375e-05, -1.71661376953125e-05, -2.0265558760002023e-06, -3.933906555175781e-06, -3.3378546504536644e-06, -3.24249267578125e-05, -3.24249267578125e-05, -5.91278076171875e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -3.24249267578125e-05, -5.14984130859375e-05, 0.0, -7.05718994140625e-05, -1.52587890625e-05, -0.15622806549072266, -6.103515625e-05, -1.9073486328125e-06, -1.0251946150674485e-05, -0.00013088731793686748, -4.291534423828125e-06, 0.0, -7.62939453125e-06, 0.0, 0.0, 0.0, 0.0, -8.594989776611328e-05, 0.0, -0.0014815329341217875, 0.0, -0.0001049041748046875, 0.0, -3.814697265625e-06, 0.0, -2.09808349609375e-05, 0.0, -0.002376556396484375, 0.0, -0.0001506805419921875, -0.0002918243408203125, 0.0, -5.7220458984375e-06, 0.0, -0.0002613067626953125, 0.0, -0.0008373260498046875, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, -6.866455078125e-05, 0.0, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0002040863037109375, -1.1444091796875e-05, -0.000308990478515625, -1.33514404296875e-05, -0.0002288818359375, -9.5367431640625e-06, -0.0002079010009765625, -0.0001583099365234375, -0.003040313720703125, -7.62939453125e-06, -0.0008285045623779297, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -0.0001220703125, -0.0013828277587890625, -7.62939453125e-06, -0.0030841827392578125, -0.0003414154052734375, -0.000522613525390625, -2.6702880859375e-05, -0.0009188652038574219, -0.008991479873657227, 0.0, -0.000156402587890625, -0.0002002716064453125, -0.0002040863037109375, -0.0001277923583984375, -0.00067138671875, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.003965497016906738, -2.0265579223632812e-06, -3.62396240234375e-05, -0.0002040863037109375, -0.0001373291015625, -9.5367431640625e-06, -8.96453857421875e-05, -0.00025177001953125, -0.000308990478515625, -0.0014029741287231445, -4.76837158203125e-05, -0.0036268234252929688, -7.05718994140625e-05, -0.0003299713134765625, 0.0, -0.0024051666259765625, 0.0], "choice_history": [93, 145, 230, 101, 125, "Healing", "Totem", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 221, 66, 155, "Healing", " ", "Totem", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 80, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 69, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 87, 193, "Turn", "Ended", "<EOS>", 58, 123, 43, 217, 58, 123, 23, 146, "Heal", "<EOS>", 216, 70, 58, 122, 38, 224, 205, "condition", "<EOS>", 24, 148, "Null", "<EOS>", 71, 109]}, {"inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, False)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n", "score": -2.208519815066211, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "HealingTotem", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template14"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "Template27"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"hole0": "TurnEnded", "_type": "Template5"}, {"func": {"_type": "Template32"}, "args": [{"func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}]}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -5.7220458984375e-06, -4.57763671875e-05, -2.09808349609375e-05, -1.71661376953125e-05, -2.0265558760002023e-06, -3.933906555175781e-06, -3.3378546504536644e-06, -3.24249267578125e-05, -3.24249267578125e-05, -5.91278076171875e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -3.24249267578125e-05, -5.14984130859375e-05, 0.0, -7.05718994140625e-05, -1.52587890625e-05, -2.168355941772461, -2.6702880859375e-05, 0.0, -1.1920922133867862e-06, -7.557829667348415e-05, -4.291534423828125e-06, 0.0, -1.52587890625e-05, -1.1444091796875e-05, 0.0, 0.0, 0.0, -1.728534698486328e-05, 0.0, -0.001207113265991211, 0.0, -0.00072479248046875, 0.0, 0.0, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0015125274658203125, -1.9073486328125e-06, -8.0108642578125e-05, -1.33514404296875e-05, 0.0, -4.38690185546875e-05, 0.0, -4.00543212890625e-05, 0.0, -8.7738037109375e-05, -2.47955322265625e-05, -7.62939453125e-06, -9.5367431640625e-06, -8.20159912109375e-05, 0.0, -1.9073486328125e-06, -0.0005397796630859375, -2.09808349609375e-05, -0.000980377197265625, -0.000278472900390625, -0.0001621246337890625, -2.86102294921875e-05, -0.0002765655517578125, -0.000148773193359375, -0.0018062591552734375, -5.7220458984375e-06, -0.0012712478637695312, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001373291015625, -0.001495361328125, -7.62939453125e-06, -0.003387451171875, -0.0003719329833984375, -0.00049591064453125, -2.86102294921875e-05, -0.0008921623229980469, -0.008900999091565609, 0.0, -0.0001392364501953125, -0.0002002716064453125, -0.000179290771484375, -0.000125885009765625, -0.000713348388671875, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.004052281379699707, -2.0265579223632812e-06, -3.62396240234375e-05, -0.000202178955078125, -0.0001430511474609375, -9.5367431640625e-06, -9.1552734375e-05, -0.0002498626708984375, -0.00030517578125, -0.001404881477355957, -4.76837158203125e-05, -0.0036182403564453125, -7.05718994140625e-05, -0.0003299713134765625, 0.0, -0.00249481201171875, 0.0], "choice_history": [93, 145, 230, 101, 125, "Healing", "Totem", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 220, 66, 155, "Healing", " ", "Totem", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 80, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 69, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 87, 193, "Turn", "Ended", "<EOS>", 58, 123, 43, 217, 58, 123, 23, 146, "Heal", "<EOS>", 216, 70, 58, 122, 38, 224, 205, "condition", "<EOS>", 24, 148, "Null", "<EOS>", 71, 109]}, {"inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n", "score": -4.025742291667257, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "HealingTotem", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template14"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"hole0": "TurnEnded", "_type": "Template5"}, {"func": {"_type": "Template32"}, "args": [{"func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}]}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -5.7220458984375e-06, -4.57763671875e-05, -2.09808349609375e-05, -1.71661376953125e-05, -2.0265558760002023e-06, -3.933906555175781e-06, -3.3378546504536644e-06, -3.24249267578125e-05, -3.24249267578125e-05, -5.91278076171875e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -3.24249267578125e-05, -5.14984130859375e-05, 0.0, -7.05718994140625e-05, -1.52587890625e-05, -3.9804115295410156, -1.71661376953125e-05, -3.814697265625e-06, -1.9073468138230965e-06, -6.329946336336434e-05, -8.58306884765625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.1563301086425781e-05, -1.9073486328125e-06, -0.0009180306806229055, 0.0, -1.9073486328125e-05, 0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.0029259920120239258, -3.814697265625e-06, 0.0, 0.0, -0.0001087188720703125, 0.0, -0.000156402587890625, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.000644683837890625, -2.09808349609375e-05, -0.001247406005859375, -4.76837158203125e-05, -0.00014495849609375, -7.62939453125e-06, -0.00019073486328125, -0.0001544952392578125, -0.007282257080078125, -7.62939453125e-06, -0.0010077953338623047, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -0.00012969970703125, -0.001331329345703125, -7.62939453125e-06, -0.003265380859375, -0.0003414154052734375, -0.0004863739013671875, -2.86102294921875e-05, -0.0009053945541381836, -0.008904695510864258, 0.0, -0.000148773193359375, -0.0002002716064453125, -0.0001888275146484375, -0.0001220703125, -0.0006866455078125, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.003942608833312988, -2.0265579223632812e-06, -3.62396240234375e-05, -0.0002040863037109375, -0.000141143798828125, -9.5367431640625e-06, -9.1552734375e-05, -0.0002498626708984375, -0.0003070831298828125, -0.001404881477355957, -4.76837158203125e-05, -0.0036296844482421875, -7.05718994140625e-05, -0.0003299713134765625, 0.0, -0.00246429443359375, 0.0], "choice_history": [93, 145, 230, 101, 125, "Healing", "Totem", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Healing", " ", "Totem", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 69, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 87, 193, "Turn", "Ended", "<EOS>", 58, 123, 43, 217, 58, 123, 23, 146, "Heal", "<EOS>", 216, 70, 58, 122, 38, 224, 205, "condition", "<EOS>", 24, 148, "Null", "<EOS>", 71, 109]}, {"inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, False, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnStarted(), ActionTag(Heal(1\n            ), MinionSelector(condition=Null)))])\n", "score": -4.9888768149519365, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "HealingTotem", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template14"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "Template27"}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"hole0": "TurnStarted", "_type": "Template5"}, {"func": {"_type": "Template32"}, "args": [{"func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}]}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -5.7220458984375e-06, -4.57763671875e-05, -2.09808349609375e-05, -1.71661376953125e-05, -2.0265558760002023e-06, -3.933906555175781e-06, -3.3378546504536644e-06, -3.24249267578125e-05, -3.24249267578125e-05, -5.91278076171875e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -3.24249267578125e-05, -5.14984130859375e-05, 0.0, -7.05718994140625e-05, -1.52587890625e-05, -0.15622806549072266, -6.103515625e-05, -1.9073486328125e-06, -1.0251946150674485e-05, -0.00013088731793686748, -4.291534423828125e-06, 0.0, -7.62939453125e-06, 0.0, 0.0, 0.0, 0.0, -8.594989776611328e-05, 0.0, -0.0014815329341217875, 0.0, -0.0001049041748046875, 0.0, -3.814697265625e-06, 0.0, -2.09808349609375e-05, 0.0, -0.002376556396484375, 0.0, -0.0001506805419921875, -0.0002918243408203125, 0.0, -5.7220458984375e-06, 0.0, -0.0002613067626953125, 0.0, -0.0008373260498046875, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, -6.866455078125e-05, 0.0, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0002040863037109375, -1.1444091796875e-05, -0.000308990478515625, -1.33514404296875e-05, -0.0002288818359375, -9.5367431640625e-06, -0.0002079010009765625, -0.0001583099365234375, -0.003040313720703125, -7.62939453125e-06, -0.0008285045623779297, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -0.0001220703125, -0.0013828277587890625, -7.62939453125e-06, -0.0030841827392578125, -0.0003414154052734375, -0.000522613525390625, -2.6702880859375e-05, -0.0009188652038574219, -4.800400733947754, 0.0, -0.0001983642578125, -0.00051116943359375, -0.000186920166015625, -0.000274658203125, -0.001049041748046875, -7.62939453125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0033036470413208008, -2.0265579223632812e-06, -3.4332275390625e-05, -0.0001621246337890625, -0.0001354217529296875, -9.5367431640625e-06, -8.0108642578125e-05, -0.000286102294921875, -0.00029754638671875, -0.0011864900588989258, -4.9591064453125e-05, -0.0036182403564453125, -7.2479248046875e-05, -0.00034332275390625, 0.0, -0.0024261474609375, 0.0], "choice_history": [93, 145, 230, 101, 125, "Healing", "Totem", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 221, 66, 155, "Healing", " ", "Totem", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 80, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 69, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 87, 193, "Turn", "Started", "<EOS>", 58, 123, 43, 217, 58, 123, 23, 146, "Heal", "<EOS>", 216, 70, 58, 122, 38, 224, 205, "condition", "<EOS>", 24, 148, "Null", "<EOS>", 71, 109]}, {"inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, False, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Damage(1\n            ), MinionSelector(condition=Null)))])\n", "score": -5.965090389361414, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "HealingTotem", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template14"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "Template27"}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"hole0": "TurnEnded", "_type": "Template5"}, {"func": {"_type": "Template32"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}]}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -5.7220458984375e-06, -4.57763671875e-05, -2.09808349609375e-05, -1.71661376953125e-05, -2.0265558760002023e-06, -3.933906555175781e-06, -3.3378546504536644e-06, -3.24249267578125e-05, -3.24249267578125e-05, -5.91278076171875e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -3.24249267578125e-05, -5.14984130859375e-05, 0.0, -7.05718994140625e-05, -1.52587890625e-05, -0.15622806549072266, -6.103515625e-05, -1.9073486328125e-06, -1.0251946150674485e-05, -0.00013088731793686748, -4.291534423828125e-06, 0.0, -7.62939453125e-06, 0.0, 0.0, 0.0, 0.0, -8.594989776611328e-05, 0.0, -0.0014815329341217875, 0.0, -0.0001049041748046875, 0.0, -3.814697265625e-06, 0.0, -2.09808349609375e-05, 0.0, -0.002376556396484375, 0.0, -0.0001506805419921875, -0.0002918243408203125, 0.0, -5.7220458984375e-06, 0.0, -0.0002613067626953125, 0.0, -0.0008373260498046875, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, -6.866455078125e-05, 0.0, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0002040863037109375, -1.1444091796875e-05, -0.000308990478515625, -1.33514404296875e-05, -0.0002288818359375, -9.5367431640625e-06, -0.0002079010009765625, -0.0001583099365234375, -0.003040313720703125, -7.62939453125e-06, -0.0008285045623779297, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -0.0001220703125, -0.0013828277587890625, -7.62939453125e-06, -0.0030841827392578125, -0.0003414154052734375, -0.000522613525390625, -2.6702880859375e-05, -0.0009188652038574219, -0.008991479873657227, 0.0, -0.000156402587890625, -0.0002002716064453125, -0.0002040863037109375, -0.0001277923583984375, -0.00067138671875, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -5.770845413208008, -1.1920928244535389e-07, -7.62939453125e-06, -0.0001163482666015625, -0.000110626220703125, -9.5367431640625e-06, -0.0002040863037109375, -0.0005054473876953125, -0.000247955322265625, -0.0015441179275512695, -4.00543212890625e-05, -0.004077911376953125, -5.91278076171875e-05, -0.0003337860107421875, 0.0, -0.00238037109375, 0.0], "choice_history": [93, 145, 230, 101, 125, "Healing", "Totem", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 221, 66, 155, "Healing", " ", "Totem", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 80, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 69, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 87, 193, "Turn", "Ended", "<EOS>", 58, 123, 43, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 38, 224, 205, "condition", "<EOS>", 24, 148, "Null", "<EOS>", 71, 109]}, {"inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, False, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=IsMinion())))])\n", "score": -6.082551236262361, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "HealingTotem", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template14"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "Template27"}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"hole0": "TurnEnded", "_type": "Template5"}, {"func": {"_type": "Template32"}, "args": [{"func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "_type": "Call", "keywords": [{"value": {"hole0": "IsMinion", "_type": "Template5"}, "_type": "keyword", "arg": "condition"}]}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -5.7220458984375e-06, -4.57763671875e-05, -2.09808349609375e-05, -1.71661376953125e-05, -2.0265558760002023e-06, -3.933906555175781e-06, -3.3378546504536644e-06, -3.24249267578125e-05, -3.24249267578125e-05, -5.91278076171875e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -3.24249267578125e-05, -5.14984130859375e-05, 0.0, -7.05718994140625e-05, -1.52587890625e-05, -0.15622806549072266, -6.103515625e-05, -1.9073486328125e-06, -1.0251946150674485e-05, -0.00013088731793686748, -4.291534423828125e-06, 0.0, -7.62939453125e-06, 0.0, 0.0, 0.0, 0.0, -8.594989776611328e-05, 0.0, -0.0014815329341217875, 0.0, -0.0001049041748046875, 0.0, -3.814697265625e-06, 0.0, -2.09808349609375e-05, 0.0, -0.002376556396484375, 0.0, -0.0001506805419921875, -0.0002918243408203125, 0.0, -5.7220458984375e-06, 0.0, -0.0002613067626953125, 0.0, -0.0008373260498046875, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, -6.866455078125e-05, 0.0, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0002040863037109375, -1.1444091796875e-05, -0.000308990478515625, -1.33514404296875e-05, -0.0002288818359375, -9.5367431640625e-06, -0.0002079010009765625, -0.0001583099365234375, -0.003040313720703125, -7.62939453125e-06, -0.0008285045623779297, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -0.0001220703125, -0.0013828277587890625, -7.62939453125e-06, -0.0030841827392578125, -0.0003414154052734375, -0.000522613525390625, -2.6702880859375e-05, -0.0009188652038574219, -0.008991479873657227, 0.0, -0.000156402587890625, -0.0002002716064453125, -0.0002040863037109375, -0.0001277923583984375, -0.00067138671875, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.003965497016906738, -2.0265579223632812e-06, -3.62396240234375e-05, -0.0002040863037109375, -0.0001373291015625, -9.5367431640625e-06, -8.96453857421875e-05, -0.00025177001953125, -0.000308990478515625, -0.0014029741287231445, -4.76837158203125e-05, -5.872433662414551, -3.814697265625e-06, -0.014114737510681152, -0.0032912492752075195, -0.00081634521484375, -0.000823974609375, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Healing", "Totem", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 221, 66, 155, "Healing", " ", "Totem", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 80, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 69, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 87, 193, "Turn", "Ended", "<EOS>", 58, 123, 43, 217, 58, 123, 23, 146, "Heal", "<EOS>", 216, 70, 58, 122, 38, 224, 205, "condition", "<EOS>", 51, 193, "Is", "Minion", "<EOS>", 71, 109]}, {"inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.TOTEM, False, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n", "score": -6.925875063052217, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "HealingTotem", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template14"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "Template27"}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"hole0": "TurnEnded", "_type": "Template5"}, {"func": {"_type": "Template32"}, "args": [{"func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}]}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -5.7220458984375e-06, -4.57763671875e-05, -2.09808349609375e-05, -1.71661376953125e-05, -2.0265558760002023e-06, -3.933906555175781e-06, -3.3378546504536644e-06, -3.24249267578125e-05, -3.24249267578125e-05, -5.91278076171875e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -3.24249267578125e-05, -5.14984130859375e-05, 0.0, -7.05718994140625e-05, -1.52587890625e-05, -0.15622806549072266, -6.103515625e-05, -1.9073486328125e-06, -1.0251946150674485e-05, -0.00013088731793686748, -4.291534423828125e-06, 0.0, -7.62939453125e-06, 0.0, 0.0, 0.0, 0.0, -8.594989776611328e-05, 0.0, -0.0014815329341217875, 0.0, -0.0001049041748046875, 0.0, -3.814697265625e-06, 0.0, -2.09808349609375e-05, 0.0, -6.7273101806640625, 0.0, -0.0035161972045898438, -4.1961669921875e-05, 0.0, -3.814697265625e-06, 0.0, -0.0004405975341796875, 0.0, -0.0009288787841796875, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -7.43865966796875e-05, 0.0, -5.7220458984375e-06, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.0002117156982421875, -1.1444091796875e-05, -0.000308990478515625, -1.1444091796875e-05, -0.000232696533203125, -9.5367431640625e-06, -0.00020599365234375, -0.0001621246337890625, -0.0033435821533203125, -7.62939453125e-06, -0.0007158517837524414, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -0.000118255615234375, -0.00136566162109375, -7.62939453125e-06, -0.0030498504638671875, -0.000339508056640625, -0.000522613525390625, -2.6702880859375e-05, -0.0009188652038574219, -0.008981704711914062, 0.0, -0.0001583099365234375, -0.0001983642578125, -0.0002040863037109375, -0.0001277923583984375, -0.00067138671875, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0039511919021606445, -2.0265579223632812e-06, -3.62396240234375e-05, -0.00020599365234375, -0.0001373291015625, -9.5367431640625e-06, -8.96453857421875e-05, -0.00025177001953125, -0.000308990478515625, -0.0014029741287231445, -4.76837158203125e-05, -0.003635406494140625, -7.05718994140625e-05, -0.0003299713134765625, 0.0, -0.0023937225341796875, 0.0], "choice_history": [93, 145, 230, 101, 125, "Healing", "Totem", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 221, 66, 155, "Healing", " ", "Totem", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "TOTEM", "<EOS>", 80, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 69, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 87, 193, "Turn", "Ended", "<EOS>", 58, 123, 43, 217, 58, 123, 23, 146, "Heal", "<EOS>", 216, 70, 58, 122, 38, 224, 205, "condition", "<EOS>", 24, 148, "Null", "<EOS>", 71, 109]}, {"inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, False, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null))), PlayerSelector()])\n", "score": -7.008558030238191, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "HealingTotem", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template14"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "Template27"}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"hole0": "TurnEnded", "_type": "Template5"}, {"func": {"_type": "Template32"}, "args": [{"func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}]}], "_type": "Call"}], "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template5"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -5.7220458984375e-06, -4.57763671875e-05, -2.09808349609375e-05, -1.71661376953125e-05, -2.0265558760002023e-06, -3.933906555175781e-06, -3.3378546504536644e-06, -3.24249267578125e-05, -3.24249267578125e-05, -5.91278076171875e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -3.24249267578125e-05, -5.14984130859375e-05, 0.0, -7.05718994140625e-05, -1.52587890625e-05, -0.15622806549072266, -6.103515625e-05, -1.9073486328125e-06, -1.0251946150674485e-05, -0.00013088731793686748, -4.291534423828125e-06, 0.0, -7.62939453125e-06, 0.0, 0.0, 0.0, 0.0, -8.594989776611328e-05, 0.0, -0.0014815329341217875, 0.0, -0.0001049041748046875, 0.0, -3.814697265625e-06, 0.0, -2.09808349609375e-05, 0.0, -0.002376556396484375, 0.0, -0.0001506805419921875, -0.0002918243408203125, 0.0, -5.7220458984375e-06, 0.0, -0.0002613067626953125, 0.0, -0.0008373260498046875, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, -6.866455078125e-05, 0.0, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0002040863037109375, -1.1444091796875e-05, -0.000308990478515625, -1.33514404296875e-05, -0.0002288818359375, -9.5367431640625e-06, -0.0002079010009765625, -0.0001583099365234375, -0.003040313720703125, -7.62939453125e-06, -0.0008285045623779297, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -0.0001220703125, -0.0013828277587890625, -7.62939453125e-06, -0.0030841827392578125, -0.0003414154052734375, -0.000522613525390625, -2.6702880859375e-05, -0.0009188652038574219, -0.008991479873657227, 0.0, -0.000156402587890625, -0.0002002716064453125, -0.0002040863037109375, -0.0001277923583984375, -0.00067138671875, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.003965497016906738, -2.0265579223632812e-06, -3.62396240234375e-05, -0.0002040863037109375, -0.0001373291015625, -9.5367431640625e-06, -8.96453857421875e-05, -0.00025177001953125, -0.000308990478515625, -0.0014029741287231445, -4.76837158203125e-05, -0.0036268234252929688, -7.05718994140625e-05, -0.0003299713134765625, 0.0, -6.3159379959106445, 0.0, -0.4974946975708008, -3.0517578125e-05, 0.0, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Healing", "Totem", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 221, 66, 155, "Healing", " ", "Totem", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 80, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 69, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 87, 193, "Turn", "Ended", "<EOS>", 58, 123, 43, 217, 58, 123, 23, 146, "Heal", "<EOS>", 216, 70, 58, 122, 38, 224, 205, "condition", "<EOS>", 24, 148, "Null", "<EOS>", 87, 193, "Player", "Selector", "<EOS>", 109]}, {"inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, False)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnStarted(), ActionTag(Heal(1\n            ), MinionSelector(condition=Null)))])\n", "score": -7.009040832118444, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "HealingTotem", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template14"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "Template27"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"hole0": "TurnStarted", "_type": "Template5"}, {"func": {"_type": "Template32"}, "args": [{"func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}]}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -5.7220458984375e-06, -4.57763671875e-05, -2.09808349609375e-05, -1.71661376953125e-05, -2.0265558760002023e-06, -3.933906555175781e-06, -3.3378546504536644e-06, -3.24249267578125e-05, -3.24249267578125e-05, -5.91278076171875e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -3.24249267578125e-05, -5.14984130859375e-05, 0.0, -7.05718994140625e-05, -1.52587890625e-05, -2.168355941772461, -2.6702880859375e-05, 0.0, -1.1920922133867862e-06, -7.557829667348415e-05, -4.291534423828125e-06, 0.0, -1.52587890625e-05, -1.1444091796875e-05, 0.0, 0.0, 0.0, -1.728534698486328e-05, 0.0, -0.001207113265991211, 0.0, -0.00072479248046875, 0.0, 0.0, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0015125274658203125, -1.9073486328125e-06, -8.0108642578125e-05, -1.33514404296875e-05, 0.0, -4.38690185546875e-05, 0.0, -4.00543212890625e-05, 0.0, -8.7738037109375e-05, -2.47955322265625e-05, -7.62939453125e-06, -9.5367431640625e-06, -8.20159912109375e-05, 0.0, -1.9073486328125e-06, -0.0005397796630859375, -2.09808349609375e-05, -0.000980377197265625, -0.000278472900390625, -0.0001621246337890625, -2.86102294921875e-05, -0.0002765655517578125, -0.000148773193359375, -0.0018062591552734375, -5.7220458984375e-06, -0.0012712478637695312, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001373291015625, -0.001495361328125, -7.62939453125e-06, -0.003387451171875, -0.0003719329833984375, -0.00049591064453125, -2.86102294921875e-05, -0.0008921623229980469, -4.809413433074951, 0.0, -0.00018310546875, -0.0005035400390625, -0.00017547607421875, -0.0002841949462890625, -0.0011119842529296875, -7.62939453125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.003396153450012207, -2.0265579223632812e-06, -3.4332275390625e-05, -0.00016021728515625, -0.0001373291015625, -9.5367431640625e-06, -8.0108642578125e-05, -0.000286102294921875, -0.0002994537353515625, -0.0011845827102661133, -4.9591064453125e-05, -0.0036144256591796875, -7.43865966796875e-05, -0.0003414154052734375, 0.0, -0.0025043487548828125, 0.0], "choice_history": [93, 145, 230, 101, 125, "Healing", "Totem", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 220, 66, 155, "Healing", " ", "Totem", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 80, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 69, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 87, 193, "Turn", "Started", "<EOS>", 58, 123, 43, 217, 58, 123, 23, 146, "Heal", "<EOS>", 216, 70, 58, 122, 38, 224, 205, "condition", "<EOS>", 24, 148, "Null", "<EOS>", 71, 109]}, {"inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, False, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))], value=3)\n", "score": -7.756228083742599, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "HealingTotem", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template14"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "Template27"}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"hole0": "TurnEnded", "_type": "Template5"}, {"func": {"_type": "Template32"}, "args": [{"func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}]}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}, {"value": {"_type": "Template16"}, "_type": "keyword", "arg": "value"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -5.7220458984375e-06, -4.57763671875e-05, -2.09808349609375e-05, -1.71661376953125e-05, -2.0265558760002023e-06, -3.933906555175781e-06, -3.3378546504536644e-06, -3.24249267578125e-05, -3.24249267578125e-05, -5.91278076171875e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -3.24249267578125e-05, -5.14984130859375e-05, 0.0, -7.05718994140625e-05, -1.52587890625e-05, -0.15622806549072266, -6.103515625e-05, -1.9073486328125e-06, -1.0251946150674485e-05, -0.00013088731793686748, -4.291534423828125e-06, 0.0, -7.62939453125e-06, 0.0, 0.0, 0.0, 0.0, -8.594989776611328e-05, 0.0, -0.0014815329341217875, 0.0, -0.0001049041748046875, 0.0, -3.814697265625e-06, 0.0, -2.09808349609375e-05, 0.0, -0.002376556396484375, 0.0, -0.0001506805419921875, -0.0002918243408203125, 0.0, -5.7220458984375e-06, 0.0, -0.0002613067626953125, 0.0, -0.0008373260498046875, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, -6.866455078125e-05, 0.0, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0002040863037109375, -1.1444091796875e-05, -0.000308990478515625, -1.33514404296875e-05, -0.0002288818359375, -9.5367431640625e-06, -0.0002079010009765625, -0.0001583099365234375, -5.846076011657715, -6.29425048828125e-05, -0.01479196548461914, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -0.0001125335693359375, -0.0033130645751953125, -9.5367431640625e-06, -0.0018520355224609375, -0.000202178955078125, -0.0005664825439453125, -1.33514404296875e-05, -0.0009188652038574219, -0.011371015571057796, 0.0, -0.000102996826171875, -0.0001583099365234375, -0.0004119873046875, -8.58306884765625e-05, -0.0013179779052734375, -9.5367431640625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.0031777620315551758, -2.0265579223632812e-06, -4.76837158203125e-05, -0.0002841949462890625, -0.0001468658447265625, -9.5367431640625e-06, -7.43865966796875e-05, -0.000244140625, -0.000293731689453125, -0.001450657844543457, -4.9591064453125e-05, -0.0036945343017578125, -6.4849853515625e-05, -0.000324249267578125, 0.0, -0.0017185211181640625, -0.000152587890625, -0.7741203308105469, -1.9073486328125e-06, -0.9249858856201172, -3.0517578125e-05], "choice_history": [93, 145, 230, 101, 125, "Healing", "Totem", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 221, 66, 155, "Healing", " ", "Totem", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 80, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 69, 225, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 87, 193, "Turn", "Ended", "<EOS>", 58, 123, 43, 217, 58, 123, 23, 146, "Heal", "<EOS>", 216, 70, 58, 122, 38, 224, 205, "condition", "<EOS>", 24, 148, "Null", "<EOS>", 71, 205, "value", "<EOS>", 30, 109]}, {"inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, False)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Damage(1\n            ), MinionSelector(condition=Null)))])\n", "score": -7.9538886533764455, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "HealingTotem", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template14"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "Template27"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"hole0": "TurnEnded", "_type": "Template5"}, {"func": {"_type": "Template32"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}]}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -5.7220458984375e-06, -4.57763671875e-05, -2.09808349609375e-05, -1.71661376953125e-05, -2.0265558760002023e-06, -3.933906555175781e-06, -3.3378546504536644e-06, -3.24249267578125e-05, -3.24249267578125e-05, -5.91278076171875e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -3.24249267578125e-05, -5.14984130859375e-05, 0.0, -7.05718994140625e-05, -1.52587890625e-05, -2.168355941772461, -2.6702880859375e-05, 0.0, -1.1920922133867862e-06, -7.557829667348415e-05, -4.291534423828125e-06, 0.0, -1.52587890625e-05, -1.1444091796875e-05, 0.0, 0.0, 0.0, -1.728534698486328e-05, 0.0, -0.001207113265991211, 0.0, -0.00072479248046875, 0.0, 0.0, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0015125274658203125, -1.9073486328125e-06, -8.0108642578125e-05, -1.33514404296875e-05, 0.0, -4.38690185546875e-05, 0.0, -4.00543212890625e-05, 0.0, -8.7738037109375e-05, -2.47955322265625e-05, -7.62939453125e-06, -9.5367431640625e-06, -8.20159912109375e-05, 0.0, -1.9073486328125e-06, -0.0005397796630859375, -2.09808349609375e-05, -0.000980377197265625, -0.000278472900390625, -0.0001621246337890625, -2.86102294921875e-05, -0.0002765655517578125, -0.000148773193359375, -0.0018062591552734375, -5.7220458984375e-06, -0.0012712478637695312, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001373291015625, -0.001495361328125, -7.62939453125e-06, -0.003387451171875, -0.0003719329833984375, -0.00049591064453125, -2.86102294921875e-05, -0.0008921623229980469, -0.008900999091565609, 0.0, -0.0001392364501953125, -0.0002002716064453125, -0.000179290771484375, -0.000125885009765625, -0.000713348388671875, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -5.748734474182129, -1.1920928244535389e-07, -7.62939453125e-06, -0.0001125335693359375, -0.00011444091796875, -9.5367431640625e-06, -0.000213623046875, -0.000507354736328125, -0.0002460479736328125, -0.0015403032302856445, -4.00543212890625e-05, -0.004047393798828125, -5.91278076171875e-05, -0.0003337860107421875, 0.0, -0.002460479736328125, 0.0], "choice_history": [93, 145, 230, 101, 125, "Healing", "Totem", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 220, 66, 155, "Healing", " ", "Totem", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 80, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 69, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 87, 193, "Turn", "Ended", "<EOS>", 58, 123, 43, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 38, 224, 205, "condition", "<EOS>", 24, 148, "Null", "<EOS>", 71, 109]}, {"inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, False)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=IsMinion())))])\n", "score": -8.098069428065173, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "HealingTotem", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template14"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "Template27"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"hole0": "TurnEnded", "_type": "Template5"}, {"func": {"_type": "Template32"}, "args": [{"func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "_type": "Call", "keywords": [{"value": {"hole0": "IsMinion", "_type": "Template5"}, "_type": "keyword", "arg": "condition"}]}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -5.7220458984375e-06, -4.57763671875e-05, -2.09808349609375e-05, -1.71661376953125e-05, -2.0265558760002023e-06, -3.933906555175781e-06, -3.3378546504536644e-06, -3.24249267578125e-05, -3.24249267578125e-05, -5.91278076171875e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -3.24249267578125e-05, -5.14984130859375e-05, 0.0, -7.05718994140625e-05, -1.52587890625e-05, -2.168355941772461, -2.6702880859375e-05, 0.0, -1.1920922133867862e-06, -7.557829667348415e-05, -4.291534423828125e-06, 0.0, -1.52587890625e-05, -1.1444091796875e-05, 0.0, 0.0, 0.0, -1.728534698486328e-05, 0.0, -0.001207113265991211, 0.0, -0.00072479248046875, 0.0, 0.0, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0015125274658203125, -1.9073486328125e-06, -8.0108642578125e-05, -1.33514404296875e-05, 0.0, -4.38690185546875e-05, 0.0, -4.00543212890625e-05, 0.0, -8.7738037109375e-05, -2.47955322265625e-05, -7.62939453125e-06, -9.5367431640625e-06, -8.20159912109375e-05, 0.0, -1.9073486328125e-06, -0.0005397796630859375, -2.09808349609375e-05, -0.000980377197265625, -0.000278472900390625, -0.0001621246337890625, -2.86102294921875e-05, -0.0002765655517578125, -0.000148773193359375, -0.0018062591552734375, -5.7220458984375e-06, -0.0012712478637695312, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001373291015625, -0.001495361328125, -7.62939453125e-06, -0.003387451171875, -0.0003719329833984375, -0.00049591064453125, -2.86102294921875e-05, -0.0008921623229980469, -0.008900999091565609, 0.0, -0.0001392364501953125, -0.0002002716064453125, -0.000179290771484375, -0.000125885009765625, -0.000713348388671875, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.004052281379699707, -2.0265579223632812e-06, -3.62396240234375e-05, -0.000202178955078125, -0.0001430511474609375, -9.5367431640625e-06, -9.1552734375e-05, -0.0002498626708984375, -0.00030517578125, -0.001404881477355957, -4.76837158203125e-05, -5.877140045166016, -3.814697265625e-06, -0.013978362083435059, -0.0033121109008789062, -0.0008182525634765625, -0.0008068084716796875, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Healing", "Totem", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 220, 66, 155, "Healing", " ", "Totem", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 80, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 69, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 87, 193, "Turn", "Ended", "<EOS>", 58, 123, 43, 217, 58, 123, 23, 146, "Heal", "<EOS>", 216, 70, 58, 122, 38, 224, 205, "condition", "<EOS>", 51, 193, "Is", "Minion", "<EOS>", 71, 109]}, {"inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, False, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, spell_damage=1)\n", "score": -8.532387609591524, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "HealingTotem", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template14"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "Template27"}, {"attr": "TOTEM", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template31"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "Template14"}, "_type": "keyword", "arg": "spell_damage"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -5.7220458984375e-06, -4.57763671875e-05, -2.09808349609375e-05, -1.71661376953125e-05, -2.0265558760002023e-06, -3.933906555175781e-06, -3.3378546504536644e-06, -3.24249267578125e-05, -3.24249267578125e-05, -5.91278076171875e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -3.24249267578125e-05, -5.14984130859375e-05, 0.0, -7.05718994140625e-05, -1.52587890625e-05, -0.15622806549072266, -6.103515625e-05, -1.9073486328125e-06, -1.0251946150674485e-05, -0.00013088731793686748, -4.291534423828125e-06, 0.0, -7.62939453125e-06, 0.0, 0.0, 0.0, 0.0, -8.594989776611328e-05, 0.0, -0.0014815329341217875, 0.0, -0.0001049041748046875, 0.0, -3.814697265625e-06, 0.0, -2.09808349609375e-05, 0.0, -0.002376556396484375, 0.0, -0.0001506805419921875, -0.0002918243408203125, 0.0, -5.7220458984375e-06, 0.0, -0.0002613067626953125, 0.0, -0.0008373260498046875, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, -6.866455078125e-05, 0.0, -5.7220458984375e-06, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0002040863037109375, -1.1444091796875e-05, -0.000308990478515625, -1.33514404296875e-05, -0.0002288818359375, -9.5367431640625e-06, -0.0002079010009765625, -0.0001583099365234375, -0.003040313720703125, -7.62939453125e-06, -8.335304260253906, 0.0, -0.030107498168945312, 0.0], "choice_history": [93, 145, 230, 101, 125, "Healing", "Totem", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 221, 66, 155, "Healing", " ", "Totem", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 80, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 83, 69, 224, 205, "spell_damage", "<EOS>", 28, 109]}, {"inferred_code": "", "score": -18.240827560424805, "model_output": {"_type": "Module", "body": []}, "score_history": [-4.9591064453125e-05, -5.7220458984375e-06, -18.240772247314453], "choice_history": [93, 145, 228]}, {"inferred_code": "super().use(player, game)\n", "score": -22.76136875152588, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -5.7220458984375e-06, -4.57763671875e-05, -14.911439895629883, -7.849827766418457], "choice_history": [93, 145, 230, 108, 109]}], "index": 46}
{"beams": [{"inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n", "score": -0.2554338364327009, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HealingTouch", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template16"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template34"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.0001068115234375, -8.20159912109375e-05, -3.576278118089249e-07, -4.41074053014745e-06, -3.576272320060525e-06, -1.52587890625e-05, -5.53131103515625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.955029074451886e-05, -2.0265579223632812e-06, -0.0004177093505859375, -9.5367431640625e-06, -3.4332275390625e-05, -4.76837158203125e-05, -7.62939453125e-06, -0.000232696533203125, -6.866455078125e-05, -0.0002040863037109375, -5.91278076171875e-05, -5.7220458984375e-06, -2.884823152271565e-05, -5.0186685257358477e-05, -2.622604142743512e-06, -1.9073486328125e-05, -0.0001659393310546875, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -2.0265579223632812e-06, -0.00039947032928466797, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, 0.0, -0.000171661376953125, 0.0, -0.013431549072265625, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -6.103515625e-05, -0.0001430511474609375, -6.29425048828125e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.601478576660156e-05, -1.9073486328125e-06, -0.0012874603271484375, -3.814697265625e-06, -0.0005837678909301758, -4.00543212890625e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -0.000186920166015625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.7404556274414062e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.2305710192304105e-05, -3.3378546504536644e-06, -0.06365966796875, -2.288818359375e-05, -4.9591064453125e-05, -8.20159912109375e-05, -3.814697265625e-06, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -0.000141143798828125, -0.0061563653871417046, -6.949846283532679e-05, -1.9073486328125e-05, -0.00836944580078125, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, -0.004121303558349609, -2.47955322265625e-05, -0.000823974609375, -0.15317153930664062, -0.0001239776611328125, 0.0], "choice_history": [93, 145, 230, 101, 125, "Healing", "Touch", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Healing", " ", "Touch", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 84, 74, 109]}, {"inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n", "score": -2.0979411987984236, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HealingTouch", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template16"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.0001068115234375, -8.20159912109375e-05, -3.576278118089249e-07, -4.41074053014745e-06, -3.576272320060525e-06, -1.52587890625e-05, -5.53131103515625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.955029074451886e-05, -2.0265579223632812e-06, -0.0004177093505859375, -9.5367431640625e-06, -3.4332275390625e-05, -4.76837158203125e-05, -7.62939453125e-06, -0.000232696533203125, -6.866455078125e-05, -0.0002040863037109375, -5.91278076171875e-05, -5.7220458984375e-06, -2.884823152271565e-05, -5.0186685257358477e-05, -2.622604142743512e-06, -1.9073486328125e-05, -0.0001659393310546875, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -2.0265579223632812e-06, -0.00039947032928466797, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, 0.0, -0.000171661376953125, 0.0, -0.013431549072265625, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -6.103515625e-05, -0.0001430511474609375, -6.29425048828125e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.601478576660156e-05, -1.9073486328125e-06, -0.0012874603271484375, -3.814697265625e-06, -0.0005837678909301758, -4.00543212890625e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -0.000186920166015625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.7404556274414062e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.2305710192304105e-05, -3.3378546504536644e-06, -0.06365966796875, -2.288818359375e-05, -4.9591064453125e-05, -8.20159912109375e-05, -3.814697265625e-06, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -0.000141143798828125, -0.0061563653871417046, -6.949846283532679e-05, -1.9073486328125e-05, -0.00836944580078125, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, -0.004121303558349609, -2.47955322265625e-05, -0.000823974609375, -1.9957647323608398, -3.814697265625e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Healing", "Touch", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Healing", " ", "Touch", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 81, 74, 109]}, {"inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n        player.draw()\n        player.draw()\n", "score": -4.556468212070001, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HealingTouch", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template16"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template34"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.0001068115234375, -8.20159912109375e-05, -3.576278118089249e-07, -4.41074053014745e-06, -3.576272320060525e-06, -1.52587890625e-05, -5.53131103515625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.955029074451886e-05, -2.0265579223632812e-06, -0.0004177093505859375, -9.5367431640625e-06, -3.4332275390625e-05, -4.76837158203125e-05, -7.62939453125e-06, -0.000232696533203125, -6.866455078125e-05, -0.0002040863037109375, -5.91278076171875e-05, -5.7220458984375e-06, -2.884823152271565e-05, -5.0186685257358477e-05, -2.622604142743512e-06, -1.9073486328125e-05, -0.0001659393310546875, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -2.0265579223632812e-06, -0.00039947032928466797, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, 0.0, -0.000171661376953125, 0.0, -0.013431549072265625, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -6.103515625e-05, -0.0001430511474609375, -6.29425048828125e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.601478576660156e-05, -1.9073486328125e-06, -0.0012874603271484375, -3.814697265625e-06, -0.0005837678909301758, -4.00543212890625e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -0.000186920166015625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.7404556274414062e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.2305710192304105e-05, -3.3378546504536644e-06, -4.207854270935059, -0.0011444091796875, -0.00225830078125, -8.20159912109375e-05, -4.57763671875e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.0002727508544921875, -0.010899508371949196, -6.318082796497038e-06, -1.33514404296875e-05, -0.003818511962890625, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -2.288818359375e-05, -0.0035146474838256836, -1.1444091796875e-05, -0.000732421875, -0.07491111755371094, -9.1552734375e-05, -0.08938407897949219, -0.00020599365234375, -0.0025348663330078125, -0.00209808349609375, -0.0020074844360351562, -5.7220458984375e-06, -0.00731658935546875, -0.0018178224563598633, -1.9073486328125e-06, -0.0006809234619140625, -1.33514404296875e-05, -0.0001506805419921875, -0.013415336608886719, -3.0517578125e-05, 0.0, -0.11214160919189453, -0.0003167390823364258, -1.9073486328125e-06, -0.00012969970703125], "choice_history": [93, 145, 230, 101, 125, "Healing", "Touch", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Healing", " ", "Touch", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 84, 74, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(4, self)\n", "score": -5.102069178076988, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HealingTouch", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template16"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.0001068115234375, -8.20159912109375e-05, -3.576278118089249e-07, -4.41074053014745e-06, -3.576272320060525e-06, -1.52587890625e-05, -5.53131103515625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.955029074451886e-05, -2.0265579223632812e-06, -0.0004177093505859375, -9.5367431640625e-06, -3.4332275390625e-05, -4.76837158203125e-05, -7.62939453125e-06, -0.000232696533203125, -6.866455078125e-05, -0.0002040863037109375, -5.91278076171875e-05, -5.7220458984375e-06, -2.884823152271565e-05, -5.0186685257358477e-05, -2.622604142743512e-06, -1.9073486328125e-05, -0.0001659393310546875, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -2.0265579223632812e-06, -0.00039947032928466797, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, 0.0, -0.000171661376953125, 0.0, -0.013431549072265625, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -6.103515625e-05, -0.0001430511474609375, -6.29425048828125e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.601478576660156e-05, -1.9073486328125e-06, -0.0012874603271484375, -3.814697265625e-06, -0.0005837678909301758, -4.00543212890625e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -0.000186920166015625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.7404556274414062e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.2305710192304105e-05, -3.3378546504536644e-06, -0.06365966796875, -2.288818359375e-05, -4.9591064453125e-05, -8.20159912109375e-05, -3.814697265625e-06, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -0.000141143798828125, -0.0061563653871417046, -6.949846283532679e-05, -1.9073486328125e-05, -5.012677192687988, -0.000621795654296875, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Healing", "Touch", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Healing", " ", "Touch", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 76, 74, 109]}, {"inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n        player.draw()\n", "score": -5.173520765295677, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HealingTouch", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template16"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template34"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.0001068115234375, -8.20159912109375e-05, -3.576278118089249e-07, -4.41074053014745e-06, -3.576272320060525e-06, -1.52587890625e-05, -5.53131103515625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.955029074451886e-05, -2.0265579223632812e-06, -0.0004177093505859375, -9.5367431640625e-06, -3.4332275390625e-05, -4.76837158203125e-05, -7.62939453125e-06, -0.000232696533203125, -6.866455078125e-05, -0.0002040863037109375, -5.91278076171875e-05, -5.7220458984375e-06, -2.884823152271565e-05, -5.0186685257358477e-05, -2.622604142743512e-06, -1.9073486328125e-05, -0.0001659393310546875, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -2.0265579223632812e-06, -0.00039947032928466797, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, 0.0, -0.000171661376953125, 0.0, -0.013431549072265625, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -6.103515625e-05, -0.0001430511474609375, -6.29425048828125e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.601478576660156e-05, -1.9073486328125e-06, -0.0012874603271484375, -3.814697265625e-06, -0.0005837678909301758, -4.00543212890625e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -0.000186920166015625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.7404556274414062e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.2305710192304105e-05, -3.3378546504536644e-06, -4.955900192260742, -3.814697265625e-05, -0.001537322998046875, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -9.1552734375e-05, -0.012972794473171234, -1.2755388524965383e-05, -1.71661376953125e-05, -0.018362045288085938, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -1.52587890625e-05, -0.005816817283630371, -1.33514404296875e-05, -0.0010700225830078125, -0.1286153793334961, -0.0001163482666015625, -2.47955322265625e-05, -4.1961669921875e-05, -0.000118255615234375, -0.000568389892578125, -8.58306884765625e-05, -5.7220458984375e-06, -0.028635025024414062, -0.0007143020629882812, -1.9073486328125e-06, -0.000202178955078125], "choice_history": [93, 145, 230, 101, 125, "Healing", "Touch", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Healing", " ", "Touch", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 84, 74, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n        player.draw()\n        player.draw()\n        player.draw()\n", "score": -5.339994794701113, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HealingTouch", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template16"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template34"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.0001068115234375, -8.20159912109375e-05, -3.576278118089249e-07, -4.41074053014745e-06, -3.576272320060525e-06, -1.52587890625e-05, -5.53131103515625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.955029074451886e-05, -2.0265579223632812e-06, -0.0004177093505859375, -9.5367431640625e-06, -3.4332275390625e-05, -4.76837158203125e-05, -7.62939453125e-06, -0.000232696533203125, -6.866455078125e-05, -0.0002040863037109375, -5.91278076171875e-05, -5.7220458984375e-06, -2.884823152271565e-05, -5.0186685257358477e-05, -2.622604142743512e-06, -1.9073486328125e-05, -0.0001659393310546875, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -2.0265579223632812e-06, -0.00039947032928466797, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, 0.0, -0.000171661376953125, 0.0, -0.013431549072265625, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -6.103515625e-05, -0.0001430511474609375, -6.29425048828125e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.601478576660156e-05, -1.9073486328125e-06, -0.0012874603271484375, -3.814697265625e-06, -0.0005837678909301758, -4.00543212890625e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -0.000186920166015625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.7404556274414062e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.2305710192304105e-05, -3.3378546504536644e-06, -4.962450981140137, -0.0006103515625, -0.001781463623046875, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -2.47955322265625e-05, -0.011306054890155792, -2.1696068870369345e-05, -1.71661376953125e-05, -0.009158134460449219, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -0.0060923099517822266, -3.62396240234375e-05, -0.00086212158203125, -0.1929330825805664, -0.0001087188720703125, -0.0035114288330078125, -4.57763671875e-05, -0.0001277923583984375, -0.0003643035888671875, -0.0003490447998046875, -3.814697265625e-06, -0.015503883361816406, -0.0011832714080810547, -3.933906555175781e-06, -0.004309654235839844, -4.57763671875e-05, -0.000125885009765625, -0.011181831359863281, -8.58306884765625e-05, 0.0, -0.01752758026123047, -0.000985264778137207, -3.814697265625e-06, -0.006638526916503906, -2.6702880859375e-05, -0.0001239776611328125, -0.04714393615722656, -4.9591064453125e-05, 0.0, -0.025743484497070312, -0.0008946657180786133, -1.9073486328125e-06, -4.9591064453125e-05], "choice_history": [93, 145, 230, 101, 125, "Healing", "Touch", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Healing", " ", "Touch", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 233, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 84, 74, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(4), self)\n", "score": -5.964192190619713, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HealingTouch", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template16"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template20"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.0001068115234375, -8.20159912109375e-05, -3.576278118089249e-07, -4.41074053014745e-06, -3.576272320060525e-06, -1.52587890625e-05, -5.53131103515625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.955029074451886e-05, -2.0265579223632812e-06, -0.0004177093505859375, -9.5367431640625e-06, -3.4332275390625e-05, -4.76837158203125e-05, -7.62939453125e-06, -0.000232696533203125, -6.866455078125e-05, -0.0002040863037109375, -5.91278076171875e-05, -5.7220458984375e-06, -2.884823152271565e-05, -5.0186685257358477e-05, -2.622604142743512e-06, -1.9073486328125e-05, -0.0001659393310546875, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -2.0265579223632812e-06, -0.00039947032928466797, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, 0.0, -0.000171661376953125, 0.0, -0.013431549072265625, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -6.103515625e-05, -0.0001430511474609375, -6.29425048828125e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.601478576660156e-05, -1.9073486328125e-06, -0.0012874603271484375, -3.814697265625e-06, -0.0005837678909301758, -4.00543212890625e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -0.000186920166015625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.7404556274414062e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.2305710192304105e-05, -3.3378546504536644e-06, -0.06365966796875, -2.288818359375e-05, -4.9591064453125e-05, -8.20159912109375e-05, -3.814697265625e-06, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -0.000141143798828125, -0.0061563653871417046, -6.949846283532679e-05, -1.9073486328125e-05, -0.00836944580078125, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, -0.004121303558349609, -2.47955322265625e-05, -0.000823974609375, -5.862046241760254, -7.62939453125e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Healing", "Touch", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Healing", " ", "Touch", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 76, 74, 109]}, {"inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -6.4422729006248005, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HealingTouch", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template16"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.0001068115234375, -8.20159912109375e-05, -3.576278118089249e-07, -4.41074053014745e-06, -3.576272320060525e-06, -1.52587890625e-05, -5.53131103515625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.955029074451886e-05, -2.0265579223632812e-06, -0.0004177093505859375, -9.5367431640625e-06, -3.4332275390625e-05, -4.76837158203125e-05, -7.62939453125e-06, -0.000232696533203125, -6.866455078125e-05, -0.0002040863037109375, -5.91278076171875e-05, -5.7220458984375e-06, -2.884823152271565e-05, -5.0186685257358477e-05, -2.622604142743512e-06, -1.9073486328125e-05, -0.0001659393310546875, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -2.0265579223632812e-06, -0.00039947032928466797, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, 0.0, -0.000171661376953125, 0.0, -0.013431549072265625, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -6.103515625e-05, -0.0001430511474609375, -6.29425048828125e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.601478576660156e-05, -1.9073486328125e-06, -0.0012874603271484375, -3.814697265625e-06, -0.0005837678909301758, -4.00543212890625e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -0.000186920166015625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.7404556274414062e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.2305710192304105e-05, -3.3378546504536644e-06, -0.06365966796875, -2.288818359375e-05, -4.9591064453125e-05, -8.20159912109375e-05, -3.814697265625e-06, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -0.000141143798828125, -6.350736141204834, -5.006777428206988e-06, -0.004184722900390625, -0.0048274993896484375, 0.0], "choice_history": [93, 145, 230, 101, 125, "Healing", "Touch", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Healing", " ", "Touch", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 109]}, {"inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, filter_func=lambda target: target.health !=\n            target.calculate_max_health() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n", "score": -6.544541221452789, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HealingTouch", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template16"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template34"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.0001068115234375, -8.20159912109375e-05, -3.576278118089249e-07, -4.41074053014745e-06, -3.576272320060525e-06, -1.52587890625e-05, -5.53131103515625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.955029074451886e-05, -2.0265579223632812e-06, -0.0004177093505859375, -9.5367431640625e-06, -3.4332275390625e-05, -4.76837158203125e-05, -7.62939453125e-06, -0.000232696533203125, -6.866455078125e-05, -0.0002040863037109375, -5.91278076171875e-05, -5.7220458984375e-06, -2.884823152271565e-05, -5.0186685257358477e-05, -2.622604142743512e-06, -1.9073486328125e-05, -0.0001659393310546875, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -2.0265579223632812e-06, -0.00039947032928466797, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, 0.0, -0.000171661376953125, 0.0, -4.357210159301758, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -7.62939453125e-05, -7.43865966796875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -4.601478576660156e-05, 0.0, -0.00087738037109375, -3.814697265625e-06, -0.0008261203765869141, -3.4332275390625e-05, -0.0001316070556640625, -1.2334747314453125, 0.0, -0.27845191955566406, -0.0007457733154296875, -5.53131103515625e-05, -3.62396240234375e-05, -0.00032806396484375, -0.0001220703125, -0.0001697540283203125, -0.04150831699371338, -1.2397711543599144e-05, -0.02021026611328125, -0.0001678466796875, -0.0001773834228515625, -6.866455078125e-05, -0.0068817138671875, -0.00018310546875, -0.05735492706298828, 0.0, -0.0004138946533203125, 0.0, -0.12596464157104492, -2.1457672119140625e-06, -0.031513214111328125, 0.0, -0.0003910064697265625, -0.013937950134277344, -0.0006656646728515625, -0.008046150207519531, -0.009471893310546875, -3.0517578125e-05, 0.0, -0.002048492431640625, -3.814697265625e-06, -0.0019415589049458504, -3.933906555175781e-06, -0.018167030066251755, -1.9073486328125e-06, -0.028228759765625, -0.005275726318359375, -2.47955322265625e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0044610463082790375, -2.872943878173828e-05, -0.0353676974773407, -5.245207830739673e-06, -3.24249267578125e-05, -0.000156402587890625, -1.52587890625e-05, -5.7220458984375e-06, 0.0, 0.0, -0.00019073486328125, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.3947486877441406e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.9311886717332527e-05, -2.50339189733495e-06, -0.09822940826416016, -4.00543212890625e-05, -2.288818359375e-05, -0.000171661376953125, -5.7220458984375e-06, -0.000118255615234375, -7.62939453125e-06, 0.0, -0.000125885009765625, -0.007138379849493504, -7.927361730253324e-05, -2.09808349609375e-05, -0.00249481201171875, -1.52587890625e-05, -2.288818359375e-05, 0.0, -1.1444091796875e-05, -0.004011750221252441, -3.0517578125e-05, -0.000858306884765625, -0.14291000366210938, -0.0001239776611328125, 0.0], "choice_history": [93, 145, 230, 101, 125, "Healing", "Touch", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Healing", " ", "Touch", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 14, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 84, 74, 109]}, {"inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        return super().can_use(player, game\n            ) and target.minion_type is MINION_TYPE.DEMON\n", "score": -6.551640829911491, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HealingTouch", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template16"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"attr": "minion_type", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"attr": "DEMON", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Is"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.0001068115234375, -8.20159912109375e-05, -3.576278118089249e-07, -4.41074053014745e-06, -3.576272320060525e-06, -1.52587890625e-05, -5.53131103515625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.955029074451886e-05, -2.0265579223632812e-06, -0.0004177093505859375, -9.5367431640625e-06, -3.4332275390625e-05, -4.76837158203125e-05, -7.62939453125e-06, -0.000232696533203125, -6.866455078125e-05, -0.0002040863037109375, -5.91278076171875e-05, -5.7220458984375e-06, -2.884823152271565e-05, -5.0186685257358477e-05, -2.622604142743512e-06, -1.9073486328125e-05, -0.0001659393310546875, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -2.0265579223632812e-06, -0.00039947032928466797, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, 0.0, -0.000171661376953125, 0.0, -0.013431549072265625, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -6.103515625e-05, -0.0001430511474609375, -6.29425048828125e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.601478576660156e-05, -1.9073486328125e-06, -0.0012874603271484375, -3.814697265625e-06, -0.0005837678909301758, -4.00543212890625e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -0.000186920166015625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.7404556274414062e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.2305710192304105e-05, -3.3378546504536644e-06, -4.53438138961792, -0.02521514892578125, -0.001293182373046875, -0.012646675109863281, -0.0003681182861328125, -0.0042972564697265625, -5.7220458984375e-06, -0.00397491455078125, -3.4332275390625e-05, -5.7220458984375e-05, 0.0, -0.001598358154296875, -9.5367431640625e-06, -9.965887147700414e-05, -0.00020694732666015625, -0.0005189180374145508, 0.0, -3.814697265625e-05, -0.0003528594970703125, -0.002079010009765625, -9.5367431640625e-06, -0.0002576112456154078, 0.0, -0.009737968444824219, -7.82012939453125e-05, -0.44702720642089844, 0.0, -0.0677804946899414, 0.0, -0.10741876810789108, -3.576277322281385e-06, -0.20757898688316345, -6.198883056640625e-06, -1.9073486328125e-06, -1.0200996398925781, -2.09808349609375e-05, -0.0001239776611328125, 0.0, -0.04848670959472656, -1.33514404296875e-05, -0.001586318016052246, 0.0, -0.03558766841888428, -5.7220458984375e-06, -0.000133514404296875], "choice_history": [93, 145, 230, 101, 125, "Healing", "Touch", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Healing", " ", "Touch", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 15, 116, 23, 146, "target", "<EOS>", "minion_type", "<EOS>", 213, 10, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 109]}, {"inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -7.0197840452985005, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HealingTouch", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template16"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template12"}], "ops": [{"_type": "GtE"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.0001068115234375, -8.20159912109375e-05, -3.576278118089249e-07, -4.41074053014745e-06, -3.576272320060525e-06, -1.52587890625e-05, -5.53131103515625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.955029074451886e-05, -2.0265579223632812e-06, -0.0004177093505859375, -9.5367431640625e-06, -3.4332275390625e-05, -4.76837158203125e-05, -7.62939453125e-06, -0.000232696533203125, -6.866455078125e-05, -0.0002040863037109375, -5.91278076171875e-05, -5.7220458984375e-06, -2.884823152271565e-05, -5.0186685257358477e-05, -2.622604142743512e-06, -1.9073486328125e-05, -0.0001659393310546875, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -2.0265579223632812e-06, -0.00039947032928466797, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, 0.0, -0.000171661376953125, 0.0, -0.013431549072265625, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -6.103515625e-05, -0.0001430511474609375, -6.29425048828125e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.601478576660156e-05, -1.9073486328125e-06, -0.0012874603271484375, -3.814697265625e-06, -0.0005837678909301758, -4.00543212890625e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -0.000186920166015625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.7404556274414062e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.2305710192304105e-05, -3.3378546504536644e-06, -4.53438138961792, -0.02521514892578125, -0.001293182373046875, -0.012646675109863281, -0.0003681182861328125, -0.0042972564697265625, -5.7220458984375e-06, -0.00397491455078125, -3.4332275390625e-05, -5.7220458984375e-05, 0.0, -0.001598358154296875, -9.5367431640625e-06, -9.965887147700414e-05, -0.00020694732666015625, -0.0005189180374145508, 0.0, -3.814697265625e-05, -0.0003528594970703125, -0.002079010009765625, -9.5367431640625e-06, -0.0002576112456154078, 0.0, -0.009737968444824219, -7.82012939453125e-05, -1.5817804336547852, -2.288818359375e-05, -6.103515625e-05, -3.814697265625e-06, -0.00018370150064583868, -2.3841855067985307e-07, -1.52587890625e-05, -0.008275985717773438, -1.9073486328125e-06, -0.060070037841796875, 0.0, -9.34600830078125e-05, -1.9073486328125e-06, -0.0014036893844604492, 0.0, -0.02492201328277588, -1.1920928244535389e-07, -0.022334052249789238, -4.1723224057932384e-06, -7.62939453125e-06, -0.570683479309082, -1.9073486328125e-05, -0.1312723159790039, -0.00286102294921875], "choice_history": [93, 145, 230, 101, 125, "Healing", "Touch", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Healing", " ", "Touch", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 213, 8, 216, 69, 109]}, {"inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.append(game.current_player.hero)\n        for target in targets:\n            target.heal(player.effective_heal_power(8), self)\n        self = target.other_player.hero\n        targets.append(game.current_player.hero)\n", "score": -14.182668891532629, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HealingTouch", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template16"}, {"attr": "DRUID", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"target": {"id": "target", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template34"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"id": "targets", "_type": "Name"}}, {"_type": "Assign", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}}, "targets": [{"_type": "Template18"}]}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.0001068115234375, -8.20159912109375e-05, -3.576278118089249e-07, -4.41074053014745e-06, -3.576272320060525e-06, -1.52587890625e-05, -5.53131103515625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.955029074451886e-05, -2.0265579223632812e-06, -0.0004177093505859375, -9.5367431640625e-06, -3.4332275390625e-05, -4.76837158203125e-05, -7.62939453125e-06, -0.000232696533203125, -6.866455078125e-05, -0.0002040863037109375, -5.91278076171875e-05, -5.7220458984375e-06, -2.884823152271565e-05, -5.0186685257358477e-05, -2.622604142743512e-06, -1.9073486328125e-05, -0.0001659393310546875, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -2.0265579223632812e-06, -0.00039947032928466797, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, 0.0, -0.000171661376953125, 0.0, -0.013431549072265625, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -6.103515625e-05, -0.0001430511474609375, -6.29425048828125e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.601478576660156e-05, -1.9073486328125e-06, -0.0012874603271484375, -3.814697265625e-06, -0.0005837678909301758, -4.00543212890625e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -0.000186920166015625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.7404556274414062e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.2305710192304105e-05, -3.3378546504536644e-06, -5.490293025970459, -0.0035505294799804688, -0.16085433959960938, -1.1444091796875e-05, -0.0001010894775390625, -8.0108642578125e-05, -0.0001087188720703125, -0.002547596115618944, -2.3841855067985307e-07, -0.00099945068359375, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, -0.0012645721435546875, -1.9073486328125e-05, -0.00030529493233188987, -3.814697265625e-06, -0.0003319978713989258, 0.0, -0.0031528472900390625, -0.0002918243408203125, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.008283615112304688, -7.62939453125e-06, -8.7738037109375e-05, 0.0, -0.020418167114257812, 0.0, -0.004495848435908556, -1.1920928244535389e-07, -0.001338958740234375, -8.58306884765625e-05, -4.1961669921875e-05, -0.0001678466796875, -0.00041961669921875, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.0397270992398262, -1.1920928244535389e-07, -0.11287450790405273, 0.0, -0.0001392364501953125, -0.0017652511596679688, 0.0, -0.000701904296875, -1.1444091796875e-05, -0.000324249267578125, -9.5367431640625e-06, -0.0006077289581298828, 0.0, -0.5260262489318848, -2.300739288330078e-05, -0.5175953507423401, -0.000118135882075876, -0.4342918395996094, -8.0108642578125e-05, -0.00191497802734375, 0.0, -0.008039448410272598, -2.0265579223632812e-06, -0.0044193267822265625, 0.0, -0.019874921068549156, 0.0, -0.00018310546875, -0.0001277923583984375, -5.7220458984375e-06, -5.7220458984375e-06, -0.001468658447265625, -1.1444091796875e-05, 0.0, -0.0351104736328125, -0.000316619873046875, -0.06263578683137894, -4.041194551973604e-05, -0.11372187733650208, -2.658358425833285e-05, -1.1444091796875e-05, -0.0002727508544921875, -3.24249267578125e-05, -5.7220458984375e-05, 0.0, -9.5367431640625e-06, -0.007490266114473343, -2.0265579223632812e-06, -0.001689910888671875, -0.6422634124755859, -0.000362396240234375, -0.43906402587890625, -3.0517578125e-05, -0.0001773834228515625, -0.5291194915771484, -2.2369604110717773, 0.0, -0.020978927612304688, -1.9073486328125e-06, -0.007048606872558594, -3.814697265625e-06, -0.42129814624786377, -5.7220458984375e-06, -0.5183016061782837, -2.0265579223632812e-06, -0.011013127863407135, -4.9948503146879375e-05, -0.2105426788330078, -0.0001010894775390625, -1.52587890625e-05, -0.006946563720703125, -0.000286102294921875, 0.0, -1.9073486328125e-05, 0.0, -0.6574084758758545, -3.576278118089249e-07, -0.03513956069946289, 0.0, -0.000461578369140625, -0.006816864013671875, 0.0, -0.0014705657958984375, -1.71661376953125e-05, -0.00032806396484375, -9.5367431640625e-06, -0.0005159378051757812, 0.0, -0.35215842723846436, -1.919269561767578e-05, -0.4740322530269623, -0.0001029965205816552, 0.0], "choice_history": [93, 145, 230, 101, 125, "Healing", "Touch", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Healing", " ", "Touch", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 234, 108, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "hero", "<EOS>", 103, 129, 23, 146, "target", "<EOS>", 23, 146, "targets", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 23, 146, "target", "<EOS>", "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 84, 74, 98, 115, 216, 74, 15, 116, 15, 116, 23, 146, "target", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "hero", "<EOS>", 109]}, {"inferred_code": "return Minion\n", "score": -15.322428703308105, "model_output": {"_type": "Module", "body": [{"_type": "Return", "value": {"_type": "Template23"}}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -12.130327224731445, -0.4392862319946289, -2.361424446105957, -0.3913698196411133], "choice_history": [93, 145, 230, 107, 153, 36, 109]}, {"inferred_code": "", "score": -20.41640853881836, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -20.416399002075195], "choice_history": [93, 145, 228]}, {"inferred_code": "super().use(player, game)\n", "score": -21.028764724731445, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -13.608146667480469, -7.420597076416016], "choice_history": [93, 145, 230, 108, 109]}], "index": 47}
{"beams": [{"inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n", "score": -1.0692096717552602, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Hex", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template16"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "Frog", "_type": "Attribute", "value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, "targets": [{"id": "frog", "_type": "Name"}]}, {"_type": "Assign", "value": {"func": {"attr": "create_minion", "_type": "Attribute", "value": {"id": "frog", "_type": "Name"}}, "args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call"}, "targets": [{"_type": "Template30"}]}, {"_type": "Assign", "value": {"id": "frog", "_type": "Name"}, "targets": [{"attr": "card", "_type": "Attribute", "value": {"_type": "Template30"}}]}, {"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template30"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -6.29425048828125e-05, -0.00023970425536390394, -1.6212459740927443e-05, 0.0, -0.00018310546875, -0.005672454833984375, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -0.0007495880126953125, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -6.318082796497038e-06, -2.09808349609375e-05, -0.000194549560546875, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0005998611450195312, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -9.72747802734375e-05, -7.62939453125e-06, -0.01313018798828125, -3.814697265625e-06, -0.0001811981201171875, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -5.7220458984375e-06, -0.0001544952392578125, -1.52587890625e-05, 0.0, -1.52587890625e-05, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -0.005702018737792969, -8.11815116321668e-05, -3.0517578125e-05, -3.0517578125e-05, -2.47955322265625e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.000148773193359375, 0.0, -2.86102294921875e-05, 0.0, -2.110004425048828e-05, 0.0, 0.0, 0.0, -0.0006314516067504883, 0.0, -0.2927284240722656, -0.0007076263427734375, -0.0003814697265625, -6.29425048828125e-05, -5.340576171875e-05, -0.0001468658447265625, -3.814697265625e-06, -0.07573878020048141, -0.0009608268737792969, -0.000125885009765625, -0.0057506561279296875, -0.02192211151123047, -0.0122833251953125, -7.62939453125e-05, -3.814697265625e-06, -4.9591064453125e-05, -5.7220458984375e-06, -0.003936767578125, -1.71661376953125e-05, -0.14100933074951172, -1.9073486328125e-06, -0.0009999275207519531, -5.841255187988281e-06, -0.000861195963807404, -1.9073486328125e-06, -0.029338931664824486, -0.0019514551386237144, -0.009021271020174026, -0.006071815267205238, -0.0025130396243184805, -0.005283339414745569, -0.005153656005859375, -3.814697265625e-06, -1.9073486328125e-05, -0.00738525390625, -2.6702880859375e-05, -9.5367431640625e-06, -0.017400741577148438, -0.00018310546875, -0.0004634857177734375, 0.0, -0.09601565450429916, -0.0006612539291381836, -0.014329910278320312, 0.0, -0.0001087188720703125, -0.003612518310546875, -0.0002384185791015625, -0.00016676202358212322, -3.62396240234375e-05, -0.010553359985351562, -9.5367431640625e-06, -0.0001373291015625, -0.00067138671875, 0.0, -0.010504722595214844, -0.015992142260074615, -0.0003209114074707031, -0.020580291748046875, 0.0, -0.09763145446777344, -0.00084686279296875, -0.00030517578125, -3.814697265625e-05, 0.0, -0.0002689361572265625, -2.86102294921875e-05, -1.9073486328125e-06, -0.02884960174560547, -0.02924143150448799, -2.3841855067985307e-07, -2.288818359375e-05, -0.06690502166748047, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Hex", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hex", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 233, 108, 98, 115, 216, 63, 146, "frog", "<EOS>", 18, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 98, 115, 216, 82, 18, 123, 15, 116, 23, 146, "frog", "<EOS>", "create_minion", "<EOS>", 216, 64, 148, "Null", "<EOS>", 98, 115, 216, 55, 116, 41, "card", "<EOS>", 23, 146, "frog", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "<UNK>", "<EOS>", 216, 82, 109]}, {"inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n", "score": -3.036051741831642, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Hex", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template16"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "Frog", "_type": "Attribute", "value": {"attr": "Frog", "_type": "Attribute", "value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, "_type": "Call"}, "targets": [{"id": "frog", "_type": "Name"}]}, {"_type": "Assign", "value": {"func": {"attr": "create_minion", "_type": "Attribute", "value": {"id": "frog", "_type": "Name"}}, "args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call"}, "targets": [{"_type": "Template30"}]}, {"_type": "Assign", "value": {"id": "frog", "_type": "Name"}, "targets": [{"attr": "card", "_type": "Attribute", "value": {"_type": "Template30"}}]}, {"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template30"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -6.29425048828125e-05, -0.00023970425536390394, -1.6212459740927443e-05, 0.0, -0.00018310546875, -0.005672454833984375, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -0.0007495880126953125, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -6.318082796497038e-06, -2.09808349609375e-05, -0.000194549560546875, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0005998611450195312, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -9.72747802734375e-05, -7.62939453125e-06, -0.01313018798828125, -3.814697265625e-06, -0.0001811981201171875, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -5.7220458984375e-06, -0.0001544952392578125, -1.52587890625e-05, 0.0, -1.52587890625e-05, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -0.005702018737792969, -8.11815116321668e-05, -3.0517578125e-05, -3.0517578125e-05, -2.47955322265625e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.000148773193359375, 0.0, -2.86102294921875e-05, 0.0, -2.110004425048828e-05, 0.0, 0.0, 0.0, -0.0006314516067504883, 0.0, -0.2927284240722656, -0.0007076263427734375, -0.0003814697265625, -6.29425048828125e-05, -5.340576171875e-05, -0.0001468658447265625, -3.814697265625e-06, -0.07573878020048141, -0.0009608268737792969, -0.000125885009765625, -0.0057506561279296875, -0.02192211151123047, -0.0122833251953125, -7.62939453125e-05, -3.814697265625e-06, -4.9591064453125e-05, -5.7220458984375e-06, -0.003936767578125, -1.71661376953125e-05, -2.0402965545654297, -2.288818359375e-05, -0.008913993835449219, -5.7220458984375e-06, -0.0009233951568603516, -5.841255187988281e-06, -0.0009269824950024486, -1.9073486328125e-06, -0.012118296697735786, -0.0008327956893481314, -0.01831948198378086, -0.001464116619899869, -0.06926053762435913, -0.0007561399834230542, -0.01144250389188528, -0.002088202629238367, -0.009786605834960938, -3.814697265625e-06, -2.288818359375e-05, -0.0069122314453125, -5.53131103515625e-05, -7.62939453125e-06, -0.0149383544921875, -0.0001621246337890625, -0.0004749298095703125, 0.0, -0.09179803729057312, -0.0007681846618652344, -0.013299703598022461, 0.0, -0.000141143798828125, -0.0038099288940429688, -0.000225067138671875, -0.00016735798271838576, -3.62396240234375e-05, -0.010801315307617188, -9.5367431640625e-06, -0.0001354217529296875, -0.000652313232421875, 0.0, -0.010499954223632812, -0.016029812395572662, -0.0003180503845214844, -0.02050018310546875, 0.0, -0.09761857986450195, -0.0008411407470703125, -0.00030517578125, -3.814697265625e-05, 0.0, -0.000270843505859375, -2.86102294921875e-05, -1.9073486328125e-06, -0.0285186767578125, -0.02919255569577217, -2.3841855067985307e-07, -2.288818359375e-05, -0.06685256958007812, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Hex", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hex", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 233, 108, 98, 115, 216, 63, 146, "frog", "<EOS>", 18, 121, 15, 116, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", "Frog", "<EOS>", 98, 115, 216, 82, 18, 123, 15, 116, 23, 146, "frog", "<EOS>", "create_minion", "<EOS>", 216, 64, 148, "Null", "<EOS>", 98, 115, 216, 55, 116, 41, "card", "<EOS>", 23, 146, "frog", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "<UNK>", "<EOS>", 216, 82, 109]}, {"inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = justice\n        self.target.<UNK>(minion)\n", "score": -4.043707953010646, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Hex", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template16"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "Frog", "_type": "Attribute", "value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, "targets": [{"id": "frog", "_type": "Name"}]}, {"_type": "Assign", "value": {"func": {"attr": "create_minion", "_type": "Attribute", "value": {"id": "frog", "_type": "Name"}}, "args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call"}, "targets": [{"_type": "Template30"}]}, {"_type": "Assign", "value": {"id": "justice", "_type": "Name"}, "targets": [{"attr": "card", "_type": "Attribute", "value": {"_type": "Template30"}}]}, {"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template30"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -6.29425048828125e-05, -0.00023970425536390394, -1.6212459740927443e-05, 0.0, -0.00018310546875, -0.005672454833984375, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -0.0007495880126953125, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -6.318082796497038e-06, -2.09808349609375e-05, -0.000194549560546875, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0005998611450195312, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -9.72747802734375e-05, -7.62939453125e-06, -0.01313018798828125, -3.814697265625e-06, -0.0001811981201171875, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -5.7220458984375e-06, -0.0001544952392578125, -1.52587890625e-05, 0.0, -1.52587890625e-05, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -0.005702018737792969, -8.11815116321668e-05, -3.0517578125e-05, -3.0517578125e-05, -2.47955322265625e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.000148773193359375, 0.0, -2.86102294921875e-05, 0.0, -2.110004425048828e-05, 0.0, 0.0, 0.0, -0.0006314516067504883, 0.0, -0.2927284240722656, -0.0007076263427734375, -0.0003814697265625, -6.29425048828125e-05, -5.340576171875e-05, -0.0001468658447265625, -3.814697265625e-06, -0.07573878020048141, -0.0009608268737792969, -0.000125885009765625, -0.0057506561279296875, -0.02192211151123047, -0.0122833251953125, -7.62939453125e-05, -3.814697265625e-06, -4.9591064453125e-05, -5.7220458984375e-06, -0.003936767578125, -1.71661376953125e-05, -0.14100933074951172, -1.9073486328125e-06, -0.0009999275207519531, -5.841255187988281e-06, -0.000861195963807404, -1.9073486328125e-06, -0.029338931664824486, -0.0019514551386237144, -0.009021271020174026, -0.006071815267205238, -0.0025130396243184805, -0.005283339414745569, -0.005153656005859375, -3.814697265625e-06, -1.9073486328125e-05, -0.00738525390625, -2.6702880859375e-05, -9.5367431640625e-06, -0.017400741577148438, -0.00018310546875, -0.0004634857177734375, 0.0, -0.09601565450429916, -0.0006612539291381836, -0.014329910278320312, 0.0, -0.0001087188720703125, -0.003612518310546875, -0.0002384185791015625, -0.00016676202358212322, -3.62396240234375e-05, -0.010553359985351562, -9.5367431640625e-06, -0.0001373291015625, -0.00067138671875, 0.0, -0.010504722595214844, -0.015992142260074615, -0.0003209114074707031, -0.020580291748046875, 0.0, -3.0907371044158936, -6.961822509765625e-05, -0.0003376007080078125, -7.43865966796875e-05, 0.0, -0.00030517578125, -8.7738037109375e-05, 0.0, -0.03445911407470703, -0.022168872877955437, -1.1920928244535389e-07, -1.33514404296875e-05, -0.050385475158691406, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Hex", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hex", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 233, 108, 98, 115, 216, 63, 146, "frog", "<EOS>", 18, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 98, 115, 216, 82, 18, 123, 15, 116, 23, 146, "frog", "<EOS>", "create_minion", "<EOS>", 216, 64, 148, "Null", "<EOS>", 98, 115, 216, 55, 116, 41, "card", "<EOS>", 23, 146, "justice", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "<UNK>", "<EOS>", 216, 82, 109]}, {"inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(2)\n", "score": -4.3824335105614125, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Hex", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template16"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "Frog", "_type": "Attribute", "value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, "targets": [{"id": "frog", "_type": "Name"}]}, {"_type": "Assign", "value": {"func": {"attr": "create_minion", "_type": "Attribute", "value": {"id": "frog", "_type": "Name"}}, "args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call"}, "targets": [{"_type": "Template30"}]}, {"_type": "Assign", "value": {"id": "frog", "_type": "Name"}, "targets": [{"attr": "card", "_type": "Attribute", "value": {"_type": "Template30"}}]}, {"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -6.29425048828125e-05, -0.00023970425536390394, -1.6212459740927443e-05, 0.0, -0.00018310546875, -0.005672454833984375, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -0.0007495880126953125, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -6.318082796497038e-06, -2.09808349609375e-05, -0.000194549560546875, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0005998611450195312, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -9.72747802734375e-05, -7.62939453125e-06, -0.01313018798828125, -3.814697265625e-06, -0.0001811981201171875, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -5.7220458984375e-06, -0.0001544952392578125, -1.52587890625e-05, 0.0, -1.52587890625e-05, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -0.005702018737792969, -8.11815116321668e-05, -3.0517578125e-05, -3.0517578125e-05, -2.47955322265625e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.000148773193359375, 0.0, -2.86102294921875e-05, 0.0, -2.110004425048828e-05, 0.0, 0.0, 0.0, -0.0006314516067504883, 0.0, -0.2927284240722656, -0.0007076263427734375, -0.0003814697265625, -6.29425048828125e-05, -5.340576171875e-05, -0.0001468658447265625, -3.814697265625e-06, -0.07573878020048141, -0.0009608268737792969, -0.000125885009765625, -0.0057506561279296875, -0.02192211151123047, -0.0122833251953125, -7.62939453125e-05, -3.814697265625e-06, -4.9591064453125e-05, -5.7220458984375e-06, -0.003936767578125, -1.71661376953125e-05, -0.14100933074951172, -1.9073486328125e-06, -0.0009999275207519531, -5.841255187988281e-06, -0.000861195963807404, -1.9073486328125e-06, -0.029338931664824486, -0.0019514551386237144, -0.009021271020174026, -0.006071815267205238, -0.0025130396243184805, -0.005283339414745569, -0.005153656005859375, -3.814697265625e-06, -1.9073486328125e-05, -0.00738525390625, -2.6702880859375e-05, -9.5367431640625e-06, -0.017400741577148438, -0.00018310546875, -0.0004634857177734375, 0.0, -0.09601565450429916, -0.0006612539291381836, -0.014329910278320312, 0.0, -0.0001087188720703125, -0.003612518310546875, -0.0002384185791015625, -0.00016676202358212322, -3.62396240234375e-05, -0.010553359985351562, -9.5367431640625e-06, -0.0001373291015625, -0.00067138671875, 0.0, -0.010504722595214844, -0.015992142260074615, -0.0003209114074707031, -0.020580291748046875, 0.0, -0.09763145446777344, -0.00084686279296875, -0.00030517578125, -3.814697265625e-05, 0.0, -0.0002689361572265625, -2.86102294921875e-05, -1.9073486328125e-06, -0.02884960174560547, -0.02924143150448799, -2.3841855067985307e-07, -2.288818359375e-05, -3.380125045776367, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Hex", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hex", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 233, 108, 98, 115, 216, 63, 146, "frog", "<EOS>", 18, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 98, 115, 216, 82, 18, 123, 15, 116, 23, 146, "frog", "<EOS>", "create_minion", "<EOS>", 216, 64, 148, "Null", "<EOS>", 98, 115, 216, 55, 116, 41, "card", "<EOS>", 23, 146, "frog", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "<UNK>", "<EOS>", 216, 69, 109]}, {"inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = justice.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n", "score": -4.460967796506765, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Hex", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template16"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "Frog", "_type": "Attribute", "value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, "targets": [{"id": "frog", "_type": "Name"}]}, {"_type": "Assign", "value": {"func": {"attr": "create_minion", "_type": "Attribute", "value": {"id": "justice", "_type": "Name"}}, "args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call"}, "targets": [{"_type": "Template30"}]}, {"_type": "Assign", "value": {"id": "frog", "_type": "Name"}, "targets": [{"attr": "card", "_type": "Attribute", "value": {"_type": "Template30"}}]}, {"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template30"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -6.29425048828125e-05, -0.00023970425536390394, -1.6212459740927443e-05, 0.0, -0.00018310546875, -0.005672454833984375, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -0.0007495880126953125, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -6.318082796497038e-06, -2.09808349609375e-05, -0.000194549560546875, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0005998611450195312, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -9.72747802734375e-05, -7.62939453125e-06, -0.01313018798828125, -3.814697265625e-06, -0.0001811981201171875, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -5.7220458984375e-06, -0.0001544952392578125, -1.52587890625e-05, 0.0, -1.52587890625e-05, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -0.005702018737792969, -8.11815116321668e-05, -3.0517578125e-05, -3.0517578125e-05, -2.47955322265625e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.000148773193359375, 0.0, -2.86102294921875e-05, 0.0, -2.110004425048828e-05, 0.0, 0.0, 0.0, -0.0006314516067504883, 0.0, -0.2927284240722656, -0.0007076263427734375, -0.0003814697265625, -6.29425048828125e-05, -5.340576171875e-05, -0.0001468658447265625, -3.814697265625e-06, -0.07573878020048141, -0.0009608268737792969, -0.000125885009765625, -0.0057506561279296875, -0.02192211151123047, -0.0122833251953125, -7.62939453125e-05, -3.814697265625e-06, -4.9591064453125e-05, -5.7220458984375e-06, -0.003936767578125, -1.71661376953125e-05, -0.14100933074951172, -1.9073486328125e-06, -0.0009999275207519531, -5.841255187988281e-06, -0.000861195963807404, -1.9073486328125e-06, -0.029338931664824486, -0.0019514551386237144, -0.009021271020174026, -0.006071815267205238, -0.0025130396243184805, -0.005283339414745569, -0.005153656005859375, -3.814697265625e-06, -1.9073486328125e-05, -0.00738525390625, -2.6702880859375e-05, -9.5367431640625e-06, -0.017400741577148438, -0.00018310546875, -0.0004634857177734375, 0.0, -3.2038421630859375, -1.8358230590820312e-05, -0.29683637619018555, 0.0, -0.0002536773681640625, -0.004948616027832031, -0.0002651214599609375, -0.00015782266564201564, -0.0001373291015625, -0.0125579833984375, -9.5367431640625e-06, -0.0001163482666015625, -0.00089263916015625, 0.0, -0.009692192077636719, -0.01429913379251957, -0.00034427642822265625, -0.022863388061523438, 0.0, -0.09690380096435547, -0.0008153915405273438, -0.0003070831298828125, -3.814697265625e-05, 0.0, -0.0002689361572265625, -2.86102294921875e-05, -1.9073486328125e-06, -0.02877044677734375, -0.02912377193570137, -2.3841855067985307e-07, -2.288818359375e-05, -0.06632137298583984, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Hex", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hex", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 233, 108, 98, 115, 216, 63, 146, "frog", "<EOS>", 18, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 98, 115, 216, 82, 18, 123, 15, 116, 23, 146, "justice", "<EOS>", "create_minion", "<EOS>", 216, 64, 148, "Null", "<EOS>", 98, 115, 216, 55, 116, 41, "card", "<EOS>", 23, 146, "frog", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "<UNK>", "<EOS>", 216, 82, 109]}, {"inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion_card.<UNK>()\n", "score": -4.770702429553694, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Hex", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template16"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "Frog", "_type": "Attribute", "value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, "targets": [{"id": "frog", "_type": "Name"}]}, {"_type": "Assign", "value": {"func": {"attr": "create_minion", "_type": "Attribute", "value": {"id": "frog", "_type": "Name"}}, "args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call"}, "targets": [{"_type": "Template30"}]}, {"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "minion_card", "_type": "Name"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -6.29425048828125e-05, -0.00023970425536390394, -1.6212459740927443e-05, 0.0, -0.00018310546875, -0.005672454833984375, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -0.0007495880126953125, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -6.318082796497038e-06, -2.09808349609375e-05, -0.000194549560546875, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0005998611450195312, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -9.72747802734375e-05, -7.62939453125e-06, -0.01313018798828125, -3.814697265625e-06, -0.0001811981201171875, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -5.7220458984375e-06, -0.0001544952392578125, -1.52587890625e-05, 0.0, -1.52587890625e-05, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -0.005702018737792969, -8.11815116321668e-05, -3.0517578125e-05, -3.0517578125e-05, -2.47955322265625e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.000148773193359375, 0.0, -2.86102294921875e-05, 0.0, -2.110004425048828e-05, 0.0, 0.0, 0.0, -0.0006314516067504883, 0.0, -1.6026859283447266, -7.43865966796875e-05, -0.45710086822509766, -0.0001811981201171875, -1.9073486328125e-06, -0.000286102294921875, -2.86102294921875e-05, -0.3802697956562042, -0.0001972913451027125, -0.000102996826171875, -0.01250457763671875, -0.01855182647705078, -0.004669189453125, -0.0001239776611328125, -3.814697265625e-06, -6.866455078125e-05, -5.7220458984375e-06, -0.00445556640625, -2.09808349609375e-05, -0.3320932388305664, -1.9073486328125e-06, -0.0006529092788696289, -5.841255187988281e-06, -0.0008304635412059724, -1.9073486328125e-06, -0.028810963034629822, -0.0017746678786352277, -0.008725506253540516, -0.006185694132000208, -0.002709435299038887, -0.006816587410867214, -0.2164163589477539, -7.62939453125e-06, -7.62939453125e-06, -0.3385190963745117, -0.0009660720825195312, -3.4332275390625e-05, -0.0010089874267578125, -0.0005588531494140625, -0.0023784637451171875, 0.0, -0.09119939804077148, -0.00043463706970214844, -0.018845438957214355, 0.0, -8.392333984375e-05, -0.0030221939086914062, -0.0002384185791015625, -0.00012385191803332418, -3.4332275390625e-05, -0.11137962341308594, -5.7220458984375e-06, -2.09808349609375e-05, -0.008161544799804688, -0.000255584716796875, 0.0, -0.01755809783935547, -5.340576171875e-05, -0.29453063011169434, -2.0265579223632812e-06, -0.7664413452148438, -1.9073486328125e-06, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Hex", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hex", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "frog", "<EOS>", 18, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 98, 115, 216, 82, 18, 123, 15, 116, 23, 146, "frog", "<EOS>", "create_minion", "<EOS>", 216, 64, 148, "Null", "<EOS>", 102, 128, 18, 121, 15, 116, 23, 146, "minion_card", "<EOS>", "<UNK>", "<EOS>", 109]}, {"inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion_card.summon()\n", "score": -4.974010535022444, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Hex", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template16"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "Frog", "_type": "Attribute", "value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, "targets": [{"id": "frog", "_type": "Name"}]}, {"_type": "Assign", "value": {"func": {"attr": "create_minion", "_type": "Attribute", "value": {"id": "frog", "_type": "Name"}}, "args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call"}, "targets": [{"_type": "Template30"}]}, {"_type": "Expr", "value": {"func": {"attr": "summon", "_type": "Attribute", "value": {"id": "minion_card", "_type": "Name"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -6.29425048828125e-05, -0.00023970425536390394, -1.6212459740927443e-05, 0.0, -0.00018310546875, -0.005672454833984375, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -0.0007495880126953125, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -6.318082796497038e-06, -2.09808349609375e-05, -0.000194549560546875, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0005998611450195312, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -9.72747802734375e-05, -7.62939453125e-06, -0.01313018798828125, -3.814697265625e-06, -0.0001811981201171875, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -5.7220458984375e-06, -0.0001544952392578125, -1.52587890625e-05, 0.0, -1.52587890625e-05, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -0.005702018737792969, -8.11815116321668e-05, -3.0517578125e-05, -3.0517578125e-05, -2.47955322265625e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.000148773193359375, 0.0, -2.86102294921875e-05, 0.0, -2.110004425048828e-05, 0.0, 0.0, 0.0, -0.0006314516067504883, 0.0, -1.6026859283447266, -7.43865966796875e-05, -0.45710086822509766, -0.0001811981201171875, -1.9073486328125e-06, -0.000286102294921875, -2.86102294921875e-05, -0.3802697956562042, -0.0001972913451027125, -0.000102996826171875, -0.01250457763671875, -0.01855182647705078, -0.004669189453125, -0.0001239776611328125, -3.814697265625e-06, -6.866455078125e-05, -5.7220458984375e-06, -0.00445556640625, -2.09808349609375e-05, -0.3320932388305664, -1.9073486328125e-06, -0.0006529092788696289, -5.841255187988281e-06, -0.0008304635412059724, -1.9073486328125e-06, -0.028810963034629822, -0.0017746678786352277, -0.008725506253540516, -0.006185694132000208, -0.002709435299038887, -0.006816587410867214, -0.2164163589477539, -7.62939453125e-06, -7.62939453125e-06, -0.3385190963745117, -0.0009660720825195312, -3.4332275390625e-05, -0.0010089874267578125, -0.0005588531494140625, -0.0023784637451171875, 0.0, -0.09119939804077148, -0.00043463706970214844, -0.018845438957214355, 0.0, -8.392333984375e-05, -0.0030221939086914062, -0.0002384185791015625, -0.00012385191803332418, -3.4332275390625e-05, -0.11137962341308594, -5.7220458984375e-06, -2.09808349609375e-05, -0.008161544799804688, -0.000255584716796875, 0.0, -0.01755809783935547, -5.340576171875e-05, -0.29453063011169434, -2.0265579223632812e-06, -0.9697380065917969, -1.1444091796875e-05, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Hex", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hex", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "frog", "<EOS>", 18, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 98, 115, 216, 82, 18, 123, 15, 116, 23, 146, "frog", "<EOS>", "create_minion", "<EOS>", 216, 64, 148, "Null", "<EOS>", 102, 128, 18, 121, 15, 116, 23, 146, "minion_card", "<EOS>", "summon", "<EOS>", 109]}, {"inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n", "score": -5.129416240831688, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Hex", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template16"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "Frog", "_type": "Attribute", "value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, "targets": [{"id": "frog", "_type": "Name"}]}, {"_type": "Assign", "value": {"func": {"attr": "create_minion", "_type": "Attribute", "value": {"id": "frog", "_type": "Name"}}, "args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call"}, "targets": [{"_type": "Template30"}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -6.29425048828125e-05, -0.00023970425536390394, -1.6212459740927443e-05, 0.0, -0.00018310546875, -0.005672454833984375, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -0.0007495880126953125, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -6.318082796497038e-06, -2.09808349609375e-05, -0.000194549560546875, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0005998611450195312, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -9.72747802734375e-05, -7.62939453125e-06, -0.01313018798828125, -3.814697265625e-06, -0.0001811981201171875, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -5.7220458984375e-06, -0.0001544952392578125, -1.52587890625e-05, 0.0, -1.52587890625e-05, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -0.005702018737792969, -8.11815116321668e-05, -3.0517578125e-05, -3.0517578125e-05, -2.47955322265625e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.000148773193359375, 0.0, -2.86102294921875e-05, 0.0, -2.110004425048828e-05, 0.0, 0.0, 0.0, -0.0006314516067504883, 0.0, -3.8608083724975586, -9.5367431640625e-06, -0.0010013580322265625, -4.38690185546875e-05, -3.24249267578125e-05, -0.0002956390380859375, -7.62939453125e-06, -0.10168609023094177, -0.0002638101577758789, -0.0001468658447265625, -0.01646137237548828, -0.023698806762695312, -0.0034313201904296875, -0.000152587890625, -1.9073486328125e-06, -0.0001125335693359375, -5.7220458984375e-06, -0.012845039367675781, -1.1444091796875e-05, -0.08594703674316406, -1.9073486328125e-06, -0.0012402534484863281, -5.841255187988281e-06, -0.0008089084876701236, -1.9073486328125e-06, -0.03191540390253067, -0.0016587965656071901, -0.009121028706431389, -0.006220265291631222, -0.0023078033700585365, -0.00541222607716918, -0.7740983963012695, -3.814697265625e-06, -1.33514404296875e-05, -0.032242774963378906, -2.86102294921875e-05, -9.5367431640625e-06, -0.0043811798095703125, -0.000377655029296875, -0.000415802001953125, 0.0, -0.1055832952260971, -0.0007174015045166016, -0.01352846622467041, 0.0, -7.62939453125e-05, -0.0033483505249023438, -0.00025177001953125, -0.00018571355030871928, -2.6702880859375e-05, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Hex", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hex", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "frog", "<EOS>", 18, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 98, 115, 216, 82, 18, 123, 15, 116, 23, 146, "frog", "<EOS>", "create_minion", "<EOS>", 216, 64, 148, "Null", "<EOS>", 109]}, {"inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        justice = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n", "score": -5.174273698257338, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Hex", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template16"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "Frog", "_type": "Attribute", "value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, "targets": [{"id": "justice", "_type": "Name"}]}, {"_type": "Assign", "value": {"func": {"attr": "create_minion", "_type": "Attribute", "value": {"id": "frog", "_type": "Name"}}, "args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call"}, "targets": [{"_type": "Template30"}]}, {"_type": "Assign", "value": {"id": "frog", "_type": "Name"}, "targets": [{"attr": "card", "_type": "Attribute", "value": {"_type": "Template30"}}]}, {"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template30"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -6.29425048828125e-05, -0.00023970425536390394, -1.6212459740927443e-05, 0.0, -0.00018310546875, -0.005672454833984375, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -0.0007495880126953125, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -6.318082796497038e-06, -2.09808349609375e-05, -0.000194549560546875, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0005998611450195312, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -9.72747802734375e-05, -7.62939453125e-06, -0.01313018798828125, -3.814697265625e-06, -0.0001811981201171875, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -5.7220458984375e-06, -0.0001544952392578125, -1.52587890625e-05, 0.0, -1.52587890625e-05, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -0.005702018737792969, -8.11815116321668e-05, -3.0517578125e-05, -3.0517578125e-05, -2.47955322265625e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.000148773193359375, 0.0, -2.86102294921875e-05, 0.0, -2.110004425048828e-05, 0.0, 0.0, 0.0, -0.0006314516067504883, 0.0, -0.2927284240722656, -0.0007076263427734375, -0.0003814697265625, -6.29425048828125e-05, -5.340576171875e-05, -0.0001468658447265625, -3.814697265625e-06, -4.162686347961426, -0.00030410283943638206, -0.001094818115234375, -0.04671764373779297, -0.0007228851318359375, -0.00391387939453125, -6.29425048828125e-05, -3.814697265625e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.004047393798828125, -1.1444091796875e-05, -0.14860248565673828, -1.9073486328125e-06, -0.0008702278137207031, -5.841255187988281e-06, -0.0008429798763245344, 0.0, -0.029494106769561768, -0.0019718403927981853, -0.008913112804293633, -0.005584046244621277, -0.002657631179317832, -0.005012270994484425, -0.0047740936279296875, -3.814697265625e-06, -2.09808349609375e-05, -0.0067901611328125, -2.86102294921875e-05, -9.5367431640625e-06, -0.017017364501953125, -0.0001850128173828125, -0.000476837158203125, 0.0, -0.09665520489215851, -0.0006594657897949219, -0.014462709426879883, 0.0, -0.0001087188720703125, -0.0036525726318359375, -0.0002384185791015625, -0.0001674771774560213, -3.62396240234375e-05, -0.010433197021484375, -9.5367431640625e-06, -0.0001373291015625, -0.000675201416015625, 0.0, -0.010478973388671875, -0.015967346727848053, -0.0003209114074707031, -0.02068805694580078, 0.0, -0.09762191772460938, -0.00084686279296875, -0.00030517578125, -3.814697265625e-05, 0.0, -0.0002689361572265625, -2.86102294921875e-05, -1.9073486328125e-06, -0.02886676788330078, -0.029247034341096878, -2.3841855067985307e-07, -2.288818359375e-05, -0.06689643859863281, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Hex", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hex", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 233, 108, 98, 115, 216, 63, 146, "justice", "<EOS>", 18, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 98, 115, 216, 82, 18, 123, 15, 116, 23, 146, "frog", "<EOS>", "create_minion", "<EOS>", 216, 64, 148, "Null", "<EOS>", 98, 115, 216, 55, 116, 41, "card", "<EOS>", 23, 146, "frog", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "<UNK>", "<EOS>", 216, 82, 109]}, {"inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = <UNK>\n        self.target.<UNK>(minion)\n", "score": -5.510115950543366, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Hex", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template16"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "Frog", "_type": "Attribute", "value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, "targets": [{"id": "frog", "_type": "Name"}]}, {"_type": "Assign", "value": {"func": {"attr": "create_minion", "_type": "Attribute", "value": {"id": "frog", "_type": "Name"}}, "args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call"}, "targets": [{"_type": "Template30"}]}, {"_type": "Assign", "value": {"id": "<UNK>", "_type": "Name"}, "targets": [{"attr": "card", "_type": "Attribute", "value": {"_type": "Template30"}}]}, {"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template30"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -6.29425048828125e-05, -0.00023970425536390394, -1.6212459740927443e-05, 0.0, -0.00018310546875, -0.005672454833984375, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -0.0007495880126953125, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -6.318082796497038e-06, -2.09808349609375e-05, -0.000194549560546875, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0005998611450195312, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -9.72747802734375e-05, -7.62939453125e-06, -0.01313018798828125, -3.814697265625e-06, -0.0001811981201171875, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -5.7220458984375e-06, -0.0001544952392578125, -1.52587890625e-05, 0.0, -1.52587890625e-05, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -0.005702018737792969, -8.11815116321668e-05, -3.0517578125e-05, -3.0517578125e-05, -2.47955322265625e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.000148773193359375, 0.0, -2.86102294921875e-05, 0.0, -2.110004425048828e-05, 0.0, 0.0, 0.0, -0.0006314516067504883, 0.0, -0.2927284240722656, -0.0007076263427734375, -0.0003814697265625, -6.29425048828125e-05, -5.340576171875e-05, -0.0001468658447265625, -3.814697265625e-06, -0.07573878020048141, -0.0009608268737792969, -0.000125885009765625, -0.0057506561279296875, -0.02192211151123047, -0.0122833251953125, -7.62939453125e-05, -3.814697265625e-06, -4.9591064453125e-05, -5.7220458984375e-06, -0.003936767578125, -1.71661376953125e-05, -0.14100933074951172, -1.9073486328125e-06, -0.0009999275207519531, -5.841255187988281e-06, -0.000861195963807404, -1.9073486328125e-06, -0.029338931664824486, -0.0019514551386237144, -0.009021271020174026, -0.006071815267205238, -0.0025130396243184805, -0.005283339414745569, -0.005153656005859375, -3.814697265625e-06, -1.9073486328125e-05, -0.00738525390625, -2.6702880859375e-05, -9.5367431640625e-06, -0.017400741577148438, -0.00018310546875, -0.0004634857177734375, 0.0, -0.09601565450429916, -0.0006612539291381836, -0.014329910278320312, 0.0, -0.0001087188720703125, -0.003612518310546875, -0.0002384185791015625, -0.00016676202358212322, -3.62396240234375e-05, -0.010553359985351562, -9.5367431640625e-06, -0.0001373291015625, -0.00067138671875, 0.0, -0.010504722595214844, -0.015992142260074615, -0.0003209114074707031, -0.020580291748046875, 0.0, -4.585760116577148, -3.3378591979271732e-06, -0.0004749298095703125, -2.288818359375e-05, -1.9073486328125e-06, -0.0003261566162109375, -7.43865966796875e-05, -3.814697265625e-06, -0.018924713134765625, -0.03282163664698601, -3.576278118089249e-07, -2.09808349609375e-05, -0.026611328125, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Hex", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hex", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 233, 108, 98, 115, 216, 63, 146, "frog", "<EOS>", 18, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 98, 115, 216, 82, 18, 123, 15, 116, 23, 146, "frog", "<EOS>", "create_minion", "<EOS>", 216, 64, 148, "Null", "<EOS>", 98, 115, 216, 55, 116, 41, "card", "<EOS>", 23, 146, "<UNK>", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "<UNK>", "<EOS>", 216, 82, 109]}, {"inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog.Frog()\n        minion = frog.create_minion(Null)\n        minion_card.<UNK>()\n", "score": -5.689778111221585, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Hex", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template16"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "Frog", "_type": "Attribute", "value": {"attr": "Frog", "_type": "Attribute", "value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, "_type": "Call"}, "targets": [{"id": "frog", "_type": "Name"}]}, {"_type": "Assign", "value": {"func": {"attr": "create_minion", "_type": "Attribute", "value": {"id": "frog", "_type": "Name"}}, "args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call"}, "targets": [{"_type": "Template30"}]}, {"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "minion_card", "_type": "Name"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -6.29425048828125e-05, -0.00023970425536390394, -1.6212459740927443e-05, 0.0, -0.00018310546875, -0.005672454833984375, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -0.0007495880126953125, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -6.318082796497038e-06, -2.09808349609375e-05, -0.000194549560546875, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0005998611450195312, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -9.72747802734375e-05, -7.62939453125e-06, -0.01313018798828125, -3.814697265625e-06, -0.0001811981201171875, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -5.7220458984375e-06, -0.0001544952392578125, -1.52587890625e-05, 0.0, -1.52587890625e-05, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -0.005702018737792969, -8.11815116321668e-05, -3.0517578125e-05, -3.0517578125e-05, -2.47955322265625e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.000148773193359375, 0.0, -2.86102294921875e-05, 0.0, -2.110004425048828e-05, 0.0, 0.0, 0.0, -0.0006314516067504883, 0.0, -1.6026859283447266, -7.43865966796875e-05, -0.45710086822509766, -0.0001811981201171875, -1.9073486328125e-06, -0.000286102294921875, -2.86102294921875e-05, -0.3802697956562042, -0.0001972913451027125, -0.000102996826171875, -0.01250457763671875, -0.01855182647705078, -0.004669189453125, -0.0001239776611328125, -3.814697265625e-06, -6.866455078125e-05, -5.7220458984375e-06, -0.00445556640625, -2.09808349609375e-05, -1.2695446014404297, -1.52587890625e-05, -0.009638786315917969, -3.814697265625e-06, -0.0007917881011962891, -5.9604644775390625e-06, -0.0009712981409393251, -1.9073486328125e-06, -0.014150607399642467, -0.0007191892364062369, -0.019048530608415604, -0.0013898725155740976, -0.08463423699140549, -0.0007800956373102963, -0.016013823449611664, -0.003322920063510537, -0.22135162353515625, -1.1444091796875e-05, -7.62939453125e-06, -0.22284412384033203, -0.0009403228759765625, -2.09808349609375e-05, -0.0009098052978515625, -0.0005397796630859375, -0.002429962158203125, 0.0, -0.08636212348937988, -0.0004928112030029297, -0.01803576946258545, 0.0, -9.918212890625e-05, -0.003391265869140625, -0.0002231597900390625, -0.00012325594434514642, -3.24249267578125e-05, -0.10721397399902344, -5.7220458984375e-06, -2.288818359375e-05, -0.00803375244140625, -0.0002536773681640625, 0.0, -0.0174102783203125, -5.340576171875e-05, -0.2933567762374878, -2.0265579223632812e-06, -0.7747725248336792, -1.9073486328125e-06, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Hex", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hex", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "frog", "<EOS>", 18, 121, 15, 116, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", "Frog", "<EOS>", 98, 115, 216, 82, 18, 123, 15, 116, 23, 146, "frog", "<EOS>", "create_minion", "<EOS>", 216, 64, 148, "Null", "<EOS>", 102, 128, 18, 121, 15, 116, 23, 146, "minion_card", "<EOS>", "<UNK>", "<EOS>", 109]}, {"inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.card.summon(minion)\n", "score": -5.9291907727588296, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Hex", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template16"}, {"attr": "SHAMAN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "Frog", "_type": "Attribute", "value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "cards", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}, "_type": "Call"}, "targets": [{"id": "frog", "_type": "Name"}]}, {"_type": "Assign", "value": {"func": {"attr": "create_minion", "_type": "Attribute", "value": {"id": "frog", "_type": "Name"}}, "args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call"}, "targets": [{"_type": "Template30"}]}, {"_type": "Assign", "value": {"id": "frog", "_type": "Name"}, "targets": [{"attr": "card", "_type": "Attribute", "value": {"_type": "Template30"}}]}, {"_type": "Expr", "value": {"func": {"attr": "summon", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"_type": "Template8"}}}, "args": [{"_type": "Template30"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -6.29425048828125e-05, -0.00023970425536390394, -1.6212459740927443e-05, 0.0, -0.00018310546875, -0.005672454833984375, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -0.0007495880126953125, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -2.86102294921875e-05, -6.318082796497038e-06, -2.09808349609375e-05, -0.000194549560546875, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0005998611450195312, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -9.72747802734375e-05, -7.62939453125e-06, -0.01313018798828125, -3.814697265625e-06, -0.0001811981201171875, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -5.7220458984375e-06, -0.0001544952392578125, -1.52587890625e-05, 0.0, -1.52587890625e-05, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -0.005702018737792969, -8.11815116321668e-05, -3.0517578125e-05, -3.0517578125e-05, -2.47955322265625e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.000148773193359375, 0.0, -2.86102294921875e-05, 0.0, -2.110004425048828e-05, 0.0, 0.0, 0.0, -0.0006314516067504883, 0.0, -0.2927284240722656, -0.0007076263427734375, -0.0003814697265625, -6.29425048828125e-05, -5.340576171875e-05, -0.0001468658447265625, -3.814697265625e-06, -0.07573878020048141, -0.0009608268737792969, -0.000125885009765625, -0.0057506561279296875, -0.02192211151123047, -0.0122833251953125, -7.62939453125e-05, -3.814697265625e-06, -4.9591064453125e-05, -5.7220458984375e-06, -0.003936767578125, -1.71661376953125e-05, -0.14100933074951172, -1.9073486328125e-06, -0.0009999275207519531, -5.841255187988281e-06, -0.000861195963807404, -1.9073486328125e-06, -0.029338931664824486, -0.0019514551386237144, -0.009021271020174026, -0.006071815267205238, -0.0025130396243184805, -0.005283339414745569, -0.005153656005859375, -3.814697265625e-06, -1.9073486328125e-05, -0.00738525390625, -2.6702880859375e-05, -9.5367431640625e-06, -0.017400741577148438, -0.00018310546875, -0.0004634857177734375, 0.0, -0.09601565450429916, -0.0006612539291381836, -0.014329910278320312, 0.0, -0.0001087188720703125, -0.003612518310546875, -0.0002384185791015625, -0.00016676202358212322, -3.62396240234375e-05, -0.010553359985351562, -9.5367431640625e-06, -0.0001373291015625, -0.00067138671875, 0.0, -0.010504722595214844, -0.015992142260074615, -0.0003209114074707031, -0.020580291748046875, 0.0, -0.09763145446777344, -0.00084686279296875, -0.00030517578125, -3.814697265625e-05, 0.0, -0.0002689361572265625, -2.86102294921875e-05, -1.9073486328125e-06, -3.585857391357422, -4.00543212890625e-05, -0.02400970458984375, -0.14682987332344055, -4.1723224057932384e-06, -0.5868625640869141, -3.814697265625e-06, -0.5581579208374023, -0.08323287963867188, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Hex", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Hex", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 233, 108, 98, 115, 216, 63, 146, "frog", "<EOS>", 18, 121, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 98, 115, 216, 82, 18, 123, 15, 116, 23, 146, "frog", "<EOS>", "create_minion", "<EOS>", 216, 64, 148, "Null", "<EOS>", 98, 115, 216, 55, 116, 41, "card", "<EOS>", 23, 146, "frog", "<EOS>", 102, 128, 18, 123, 15, 116, 15, 116, 52, "card", "<EOS>", "summon", "<EOS>", 216, 82, 109]}, {"inferred_code": "", "score": -14.025371551513672, "model_output": {"_type": "Module", "body": [{"_type": "Template13_stmt_seq"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -13.42409896850586, -0.6012496948242188], "choice_history": [93, 145, 230, 109, 109]}, {"inferred_code": "super().use(player, game)\n", "score": -16.315853118896484, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -16.24898910522461, -0.06684112548828125], "choice_history": [93, 145, 230, 108, 109]}, {"inferred_code": "", "score": -21.33711814880371, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.1444091796875e-05, 0.0, -21.337106704711914], "choice_history": [93, 145, 228]}], "index": 48}
{"beams": [{"inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n", "score": -0.04727859371479326, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolyLight", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template12"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -1.52587890625e-05, -4.76837158203125e-05, -0.000118255615234375, -5.960462772236497e-07, -3.6000557884108275e-05, -9.536738616588991e-07, -1.9073486328125e-05, -0.000110626220703125, -3.0517578125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9550199795048684e-05, -4.172325134277344e-06, -6.4849853515625e-05, -1.71661376953125e-05, -4.38690185546875e-05, -0.0001010894775390625, -4.38690185546875e-05, -0.0001277923583984375, -4.9591064453125e-05, -0.0004100799560546875, -6.4849853515625e-05, -3.814697265625e-06, -2.2053474822314456e-05, -3.516673677950166e-05, -9.894371032714844e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, 0.0, 0.0, 0.0, -1.2993807104066946e-05, 0.0, -0.00048470497131347656, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.682209014892578e-05, 0.0, -0.0002461671829223633, 0.0, -0.01570892333984375, 0.0, -0.0002002716064453125, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -7.081031799316406e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -0.0004296302795410156, -0.0001316070556640625, -5.7220458984375e-06, -7.62939453125e-06, -1.1444091796875e-05, -2.288818359375e-05, -3.814697265625e-06, 0.0, -0.0001220703125, 0.0, 0.0, 0.0, -7.867813110351562e-06, 0.0, -1.33514404296875e-05, -1.52587890625e-05, -1.6808495274744928e-05, -7.033323527139146e-06, -0.007506370544433594, -7.62939453125e-06, -3.24249267578125e-05, -0.0001316070556640625, -2.09808349609375e-05, -8.96453857421875e-05, -1.9073486328125e-05, 0.0, -0.000110626220703125, -0.008765053935348988, -0.00015151462866924703, -2.86102294921875e-05, -0.0001468658447265625, -1.9073486328125e-05, -0.0007038116455078125, 0.0, -1.33514404296875e-05, -0.009322881698608398, -2.47955322265625e-05, -0.00012969970703125, -0.0003261566162109375, -0.0005474090576171875, 0.0], "choice_history": [93, 145, 230, 101, 125, "Holy", "Light", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Light", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 81, 74, 109]}, {"inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_spell_damage(6), self)\n", "score": -5.299776028330882, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolyLight", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template12"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -1.52587890625e-05, -4.76837158203125e-05, -0.000118255615234375, -5.960462772236497e-07, -3.6000557884108275e-05, -9.536738616588991e-07, -1.9073486328125e-05, -0.000110626220703125, -3.0517578125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9550199795048684e-05, -4.172325134277344e-06, -6.4849853515625e-05, -1.71661376953125e-05, -4.38690185546875e-05, -0.0001010894775390625, -4.38690185546875e-05, -0.0001277923583984375, -4.9591064453125e-05, -0.0004100799560546875, -6.4849853515625e-05, -3.814697265625e-06, -2.2053474822314456e-05, -3.516673677950166e-05, -9.894371032714844e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, 0.0, 0.0, 0.0, -1.2993807104066946e-05, 0.0, -0.00048470497131347656, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.682209014892578e-05, 0.0, -0.0002461671829223633, 0.0, -0.01570892333984375, 0.0, -0.0002002716064453125, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -7.081031799316406e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -0.0004296302795410156, -0.0001316070556640625, -5.7220458984375e-06, -7.62939453125e-06, -1.1444091796875e-05, -2.288818359375e-05, -3.814697265625e-06, 0.0, -0.0001220703125, 0.0, 0.0, 0.0, -7.867813110351562e-06, 0.0, -1.33514404296875e-05, -1.52587890625e-05, -1.6808495274744928e-05, -7.033323527139146e-06, -0.007506370544433594, -7.62939453125e-06, -3.24249267578125e-05, -0.0001316070556640625, -2.09808349609375e-05, -8.96453857421875e-05, -1.9073486328125e-05, 0.0, -0.000110626220703125, -0.008765053935348988, -0.00015151462866924703, -2.86102294921875e-05, -0.0001468658447265625, -1.9073486328125e-05, -0.0007038116455078125, 0.0, -1.33514404296875e-05, -5.260042667388916, -3.814697265625e-06, -1.33514404296875e-05, -0.0025177001953125, -0.000270843505859375, 0.0], "choice_history": [93, 145, 230, 101, 125, "Holy", "Light", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Light", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 81, 74, 109]}, {"inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, filter_func=lambda target: target.health !=\n            target.calculate_max_health() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n", "score": -5.317904776512762, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolyLight", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template12"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -1.52587890625e-05, -4.76837158203125e-05, -0.000118255615234375, -5.960462772236497e-07, -3.6000557884108275e-05, -9.536738616588991e-07, -1.9073486328125e-05, -0.000110626220703125, -3.0517578125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9550199795048684e-05, -4.172325134277344e-06, -6.4849853515625e-05, -1.71661376953125e-05, -4.38690185546875e-05, -0.0001010894775390625, -4.38690185546875e-05, -0.0001277923583984375, -4.9591064453125e-05, -0.0004100799560546875, -6.4849853515625e-05, -3.814697265625e-06, -2.2053474822314456e-05, -3.516673677950166e-05, -9.894371032714844e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, 0.0, 0.0, 0.0, -1.2993807104066946e-05, 0.0, -0.00048470497131347656, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.682209014892578e-05, 0.0, -0.0002461671829223633, 0.0, -4.170560836791992, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -6.67572021484375e-05, 0.0, -7.62939453125e-06, 0.0, -7.641315460205078e-05, -1.9073486328125e-06, -7.450580596923828e-05, -1.9073486328125e-06, -0.0005844831466674805, -9.72747802734375e-05, -1.1444091796875e-05, -0.5978021621704102, 0.0, -0.05433082580566406, -0.0003910064697265625, -1.1444091796875e-05, -5.7220458984375e-06, -0.0006885528564453125, -1.52587890625e-05, -0.000110626220703125, -0.1150428056716919, -1.7523643691674806e-05, -0.021127700805664062, -0.000278472900390625, -0.00063323974609375, -1.71661376953125e-05, -0.006366729736328125, -0.0001277923583984375, -0.10929584503173828, 0.0, -0.0001621246337890625, 0.0, -0.02369311824440956, -4.172325134277344e-06, -0.08406257629394531, 0.0, -0.0004253387451171875, -0.022406578063964844, -8.58306884765625e-05, -0.003939628601074219, -0.0014629364013671875, -3.814697265625e-05, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, -0.0033155374694615602, -2.300739288330078e-05, -0.00874453503638506, -1.9073486328125e-06, -0.0060367584228515625, -0.0070476531982421875, -0.0001010894775390625, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00709561537951231, -6.115436553955078e-05, -0.03493668884038925, -3.4570680327306036e-06, -6.103515625e-05, -0.0004100799560546875, -3.063678741455078e-05, -9.5367431640625e-06, 0.0, 0.0, -0.00026702880859375, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -4.5299530029296875e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -2.312650940439198e-05, -5.125986263010418e-06, -0.013339042663574219, -3.0517578125e-05, -2.288818359375e-05, -0.0001277923583984375, -2.47955322265625e-05, -0.0001220703125, -2.09808349609375e-05, 0.0, -0.0001354217529296875, -0.009163443930447102, -0.00021803349955007434, -4.00543212890625e-05, -0.0001010894775390625, -2.288818359375e-05, -0.0010862350463867188, 0.0, -1.1444091796875e-05, -0.007841110229492188, -2.288818359375e-05, -0.000125885009765625, -0.000324249267578125, -0.0005550384521484375, 0.0], "choice_history": [93, 145, 230, 101, 125, "Holy", "Light", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Light", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 14, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 81, 74, 109]}, {"inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, buffs=lambda target: target.health != target\n            .calculate_max_health() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n", "score": -6.058903479980074, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolyLight", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template12"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "buffs"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -1.52587890625e-05, -4.76837158203125e-05, -0.000118255615234375, -5.960462772236497e-07, -3.6000557884108275e-05, -9.536738616588991e-07, -1.9073486328125e-05, -0.000110626220703125, -3.0517578125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9550199795048684e-05, -4.172325134277344e-06, -6.4849853515625e-05, -1.71661376953125e-05, -4.38690185546875e-05, -0.0001010894775390625, -4.38690185546875e-05, -0.0001277923583984375, -4.9591064453125e-05, -0.0004100799560546875, -6.4849853515625e-05, -3.814697265625e-06, -2.2053474822314456e-05, -3.516673677950166e-05, -9.894371032714844e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, 0.0, 0.0, 0.0, -1.2993807104066946e-05, 0.0, -0.00048470497131347656, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.682209014892578e-05, 0.0, -0.0002461671829223633, 0.0, -4.170560836791992, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -6.67572021484375e-05, 0.0, -7.62939453125e-06, 0.0, -7.641315460205078e-05, -1.9073486328125e-06, -7.450580596923828e-05, -1.9073486328125e-06, -0.0005844831466674805, -9.72747802734375e-05, -1.1444091796875e-05, -1.2458076477050781, 0.0, -0.19469928741455078, -0.0011119842529296875, -7.62939453125e-06, -3.814697265625e-06, -0.00107574462890625, -1.52587890625e-05, -0.00023651123046875, -0.10912430286407471, -3.766949521377683e-05, -0.026945114135742188, -0.0003185272216796875, -0.00048828125, -2.09808349609375e-05, -0.007376670837402344, -9.5367431640625e-05, -0.06009674072265625, 0.0, -0.0001735687255859375, 0.0, -0.026444515213370323, -4.0531158447265625e-06, -0.07888233661651611, 0.0, -0.00046539306640625, -0.023448944091796875, -9.918212890625e-05, -0.00403594970703125, -0.0015773773193359375, -3.814697265625e-05, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, -0.0033187565859407187, -2.300739288330078e-05, -0.008643661625683308, -1.9073486328125e-06, -0.005847930908203125, -0.0072078704833984375, -0.000102996826171875, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.007186687085777521, -6.115436553955078e-05, -0.035523731261491776, -3.6954863844584906e-06, -6.67572021484375e-05, -0.00042724609375, -3.254413604736328e-05, -9.5367431640625e-06, 0.0, 0.0, -0.00026702880859375, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -4.5299530029296875e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -2.312650940439198e-05, -5.245195097813848e-06, -0.013678550720214844, -3.24249267578125e-05, -2.288818359375e-05, -0.000125885009765625, -2.47955322265625e-05, -0.0001220703125, -2.09808349609375e-05, 0.0, -0.0001354217529296875, -0.00916475709527731, -0.0002169606159441173, -4.00543212890625e-05, -0.0001010894775390625, -2.288818359375e-05, -0.0010881423950195312, 0.0, -1.1444091796875e-05, -0.00783538818359375, -2.288818359375e-05, -0.000125885009765625, -0.000324249267578125, -0.000553131103515625, 0.0], "choice_history": [93, 145, 230, 101, 125, "Holy", "Light", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Light", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "buffs", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 14, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 81, 74, 109]}, {"inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n        player.draw()\n", "score": -6.12600003068502, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolyLight", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template12"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -1.52587890625e-05, -4.76837158203125e-05, -0.000118255615234375, -5.960462772236497e-07, -3.6000557884108275e-05, -9.536738616588991e-07, -1.9073486328125e-05, -0.000110626220703125, -3.0517578125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9550199795048684e-05, -4.172325134277344e-06, -6.4849853515625e-05, -1.71661376953125e-05, -4.38690185546875e-05, -0.0001010894775390625, -4.38690185546875e-05, -0.0001277923583984375, -4.9591064453125e-05, -0.0004100799560546875, -6.4849853515625e-05, -3.814697265625e-06, -2.2053474822314456e-05, -3.516673677950166e-05, -9.894371032714844e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, 0.0, 0.0, 0.0, -1.2993807104066946e-05, 0.0, -0.00048470497131347656, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.682209014892578e-05, 0.0, -0.0002461671829223633, 0.0, -0.01570892333984375, 0.0, -0.0002002716064453125, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -7.081031799316406e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -0.0004296302795410156, -0.0001316070556640625, -5.7220458984375e-06, -7.62939453125e-06, -1.1444091796875e-05, -2.288818359375e-05, -3.814697265625e-06, 0.0, -0.0001220703125, 0.0, 0.0, 0.0, -7.867813110351562e-06, 0.0, -1.33514404296875e-05, -1.52587890625e-05, -1.6808495274744928e-05, -7.033323527139146e-06, -6.048942565917969, -0.000133514404296875, -3.4332275390625e-05, -1.1444091796875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -1.1444091796875e-05, 0.0, -0.0001239776611328125, -0.02964554727077484, -4.1127124859485775e-05, -3.24249267578125e-05, -0.0009002685546875, -2.288818359375e-05, -8.0108642578125e-05, 0.0, -1.9073486328125e-05, -0.014652729034423828, -2.6702880859375e-05, -0.0001506805419921875, -0.0002880096435546875, -0.000446319580078125, -4.38690185546875e-05, -8.58306884765625e-05, -9.918212890625e-05, -0.0042362213134765625, -1.71661376953125e-05, 0.0, -0.00616455078125, -0.0005537271499633789, -3.814697265625e-06, -2.86102294921875e-05], "choice_history": [93, 145, 230, 101, 125, "Holy", "Light", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Light", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 81, 74, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -6.168485401974806, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolyLight", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template12"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -1.52587890625e-05, -4.76837158203125e-05, -0.000118255615234375, -5.960462772236497e-07, -3.6000557884108275e-05, -9.536738616588991e-07, -1.9073486328125e-05, -0.000110626220703125, -3.0517578125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9550199795048684e-05, -4.172325134277344e-06, -6.4849853515625e-05, -1.71661376953125e-05, -4.38690185546875e-05, -0.0001010894775390625, -4.38690185546875e-05, -0.0001277923583984375, -4.9591064453125e-05, -0.0004100799560546875, -6.4849853515625e-05, -3.814697265625e-06, -2.2053474822314456e-05, -3.516673677950166e-05, -9.894371032714844e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, 0.0, 0.0, 0.0, -1.2993807104066946e-05, 0.0, -0.00048470497131347656, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.682209014892578e-05, 0.0, -0.0002461671829223633, 0.0, -0.01570892333984375, 0.0, -0.0002002716064453125, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -7.081031799316406e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -0.0004296302795410156, -0.0001316070556640625, -5.7220458984375e-06, -7.62939453125e-06, -1.1444091796875e-05, -2.288818359375e-05, -3.814697265625e-06, 0.0, -0.0001220703125, 0.0, 0.0, 0.0, -7.867813110351562e-06, 0.0, -1.33514404296875e-05, -1.52587890625e-05, -1.6808495274744928e-05, -7.033323527139146e-06, -0.007506370544433594, -7.62939453125e-06, -3.24249267578125e-05, -0.0001316070556640625, -2.09808349609375e-05, -8.96453857421875e-05, -1.9073486328125e-05, 0.0, -0.000110626220703125, -6.077856063842773, -6.6756979322235566e-06, -8.20159912109375e-05, -0.06344127655029297, 0.0], "choice_history": [93, 145, 230, 101, 125, "Holy", "Light", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Light", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 109]}, {"inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n        player.draw()\n        player.draw()\n", "score": -6.80313598254935, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolyLight", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template12"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -1.52587890625e-05, -4.76837158203125e-05, -0.000118255615234375, -5.960462772236497e-07, -3.6000557884108275e-05, -9.536738616588991e-07, -1.9073486328125e-05, -0.000110626220703125, -3.0517578125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9550199795048684e-05, -4.172325134277344e-06, -6.4849853515625e-05, -1.71661376953125e-05, -4.38690185546875e-05, -0.0001010894775390625, -4.38690185546875e-05, -0.0001277923583984375, -4.9591064453125e-05, -0.0004100799560546875, -6.4849853515625e-05, -3.814697265625e-06, -2.2053474822314456e-05, -3.516673677950166e-05, -9.894371032714844e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, 0.0, 0.0, 0.0, -1.2993807104066946e-05, 0.0, -0.00048470497131347656, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.682209014892578e-05, 0.0, -0.0002461671829223633, 0.0, -0.01570892333984375, 0.0, -0.0002002716064453125, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -7.081031799316406e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -0.0004296302795410156, -0.0001316070556640625, -5.7220458984375e-06, -7.62939453125e-06, -1.1444091796875e-05, -2.288818359375e-05, -3.814697265625e-06, 0.0, -0.0001220703125, 0.0, 0.0, 0.0, -7.867813110351562e-06, 0.0, -1.33514404296875e-05, -1.52587890625e-05, -1.6808495274744928e-05, -7.033323527139146e-06, -6.570821762084961, -0.000919342041015625, -0.0075588226318359375, -4.1961669921875e-05, -4.1961669921875e-05, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -8.392333984375e-05, -0.048712365329265594, -2.3484197299694642e-05, -3.62396240234375e-05, -0.0006351470947265625, -3.0517578125e-05, -5.14984130859375e-05, 0.0, -1.52587890625e-05, -0.008025646209716797, -3.24249267578125e-05, -0.0001926422119140625, -0.0003070831298828125, -0.000499725341796875, -0.1280832290649414, -8.392333984375e-05, -0.0007343292236328125, -0.002285003662109375, -3.62396240234375e-05, 0.0, -0.0031080245971679688, -0.0010368824005126953, -3.814697265625e-06, -0.0003185272216796875, -5.53131103515625e-05, -0.00012969970703125, -0.0038299560546875, -4.00543212890625e-05, 0.0, -0.0054950714111328125, -0.0006126165390014648, -1.9073486328125e-06, -3.814697265625e-05], "choice_history": [93, 145, 230, 101, 125, "Holy", "Light", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Light", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 81, 74, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n", "score": -7.035624552949514, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolyLight", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template12"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -1.52587890625e-05, -4.76837158203125e-05, -0.000118255615234375, -5.960462772236497e-07, -3.6000557884108275e-05, -9.536738616588991e-07, -1.9073486328125e-05, -0.000110626220703125, -3.0517578125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9550199795048684e-05, -4.172325134277344e-06, -6.4849853515625e-05, -1.71661376953125e-05, -4.38690185546875e-05, -0.0001010894775390625, -4.38690185546875e-05, -0.0001277923583984375, -4.9591064453125e-05, -0.0004100799560546875, -6.4849853515625e-05, -3.814697265625e-06, -2.2053474822314456e-05, -3.516673677950166e-05, -9.894371032714844e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, 0.0, 0.0, 0.0, -1.2993807104066946e-05, 0.0, -0.00048470497131347656, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.682209014892578e-05, 0.0, -0.0002461671829223633, 0.0, -4.170560836791992, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -6.67572021484375e-05, 0.0, -7.62939453125e-06, 0.0, -7.641315460205078e-05, -1.9073486328125e-06, -7.450580596923828e-05, -1.9073486328125e-06, -0.0005844831466674805, -9.72747802734375e-05, -1.1444091796875e-05, -2.6933512687683105, 0.0, -0.1381826400756836, -1.9073486328125e-06, -0.000232696533203125, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.00015652179718017578, -9.5367431640625e-06, -0.0005954504013061523, -3.814697265625e-06, -0.000760197639465332, -0.00011265277862548828, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-05, -7.62939453125e-06, 0.0, 0.0, -0.00020599365234375, 0.0, 0.0, 0.0, -8.106231689453125e-06, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -1.3709059203392826e-05, -8.106212590064388e-06, -0.0075473785400390625, -7.62939453125e-06, -3.4332275390625e-05, -0.00014495849609375, -2.47955322265625e-05, -7.43865966796875e-05, -1.9073486328125e-05, 0.0, -0.000102996826171875, -0.008765390142798424, -0.00016081295325420797, -3.24249267578125e-05, -0.00012969970703125, -2.09808349609375e-05, -0.0007457733154296875, 0.0, -1.33514404296875e-05, -0.009261846542358398, -2.47955322265625e-05, -0.00012969970703125, -0.0003261566162109375, -0.0005512237548828125, 0.0], "choice_history": [93, 145, 230, 101, 125, "Holy", "Light", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Light", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 81, 74, 109]}, {"inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.increase_health(6), self)\n", "score": -7.292642544444163, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolyLight", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template12"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template28"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -1.52587890625e-05, -4.76837158203125e-05, -0.000118255615234375, -5.960462772236497e-07, -3.6000557884108275e-05, -9.536738616588991e-07, -1.9073486328125e-05, -0.000110626220703125, -3.0517578125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9550199795048684e-05, -4.172325134277344e-06, -6.4849853515625e-05, -1.71661376953125e-05, -4.38690185546875e-05, -0.0001010894775390625, -4.38690185546875e-05, -0.0001277923583984375, -4.9591064453125e-05, -0.0004100799560546875, -6.4849853515625e-05, -3.814697265625e-06, -2.2053474822314456e-05, -3.516673677950166e-05, -9.894371032714844e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, 0.0, 0.0, 0.0, -1.2993807104066946e-05, 0.0, -0.00048470497131347656, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.682209014892578e-05, 0.0, -0.0002461671829223633, 0.0, -0.01570892333984375, 0.0, -0.0002002716064453125, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -7.081031799316406e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -0.0004296302795410156, -0.0001316070556640625, -5.7220458984375e-06, -7.62939453125e-06, -1.1444091796875e-05, -2.288818359375e-05, -3.814697265625e-06, 0.0, -0.0001220703125, 0.0, 0.0, 0.0, -7.867813110351562e-06, 0.0, -1.33514404296875e-05, -1.52587890625e-05, -1.6808495274744928e-05, -7.033323527139146e-06, -0.007506370544433594, -7.62939453125e-06, -3.24249267578125e-05, -0.0001316070556640625, -2.09808349609375e-05, -8.96453857421875e-05, -1.9073486328125e-05, 0.0, -0.000110626220703125, -0.008765053935348988, -0.00015151462866924703, -2.86102294921875e-05, -0.0001468658447265625, -1.9073486328125e-05, -0.0007038116455078125, 0.0, -1.33514404296875e-05, -7.252218723297119, -0.000186920166015625, -6.67572021484375e-05, -0.002841949462890625, -0.000400543212890625, 0.0], "choice_history": [93, 145, 230, 101, 125, "Holy", "Light", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Light", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "increase_health", "<EOS>", 216, 81, 74, 109]}, {"inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(6)\n", "score": -7.341713188982169, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolyLight", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template12"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template28"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -1.52587890625e-05, -4.76837158203125e-05, -0.000118255615234375, -5.960462772236497e-07, -3.6000557884108275e-05, -9.536738616588991e-07, -1.9073486328125e-05, -0.000110626220703125, -3.0517578125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9550199795048684e-05, -4.172325134277344e-06, -6.4849853515625e-05, -1.71661376953125e-05, -4.38690185546875e-05, -0.0001010894775390625, -4.38690185546875e-05, -0.0001277923583984375, -4.9591064453125e-05, -0.0004100799560546875, -6.4849853515625e-05, -3.814697265625e-06, -2.2053474822314456e-05, -3.516673677950166e-05, -9.894371032714844e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, 0.0, 0.0, 0.0, -1.2993807104066946e-05, 0.0, -0.00048470497131347656, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.682209014892578e-05, 0.0, -0.0002461671829223633, 0.0, -0.01570892333984375, 0.0, -0.0002002716064453125, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -7.081031799316406e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -0.0004296302795410156, -0.0001316070556640625, -5.7220458984375e-06, -7.62939453125e-06, -1.1444091796875e-05, -2.288818359375e-05, -3.814697265625e-06, 0.0, -0.0001220703125, 0.0, 0.0, 0.0, -7.867813110351562e-06, 0.0, -1.33514404296875e-05, -1.52587890625e-05, -1.6808495274744928e-05, -7.033323527139146e-06, -0.007506370544433594, -7.62939453125e-06, -3.24249267578125e-05, -0.0001316070556640625, -2.09808349609375e-05, -8.96453857421875e-05, -1.9073486328125e-05, 0.0, -0.000110626220703125, -6.689876556396484, -1.3828244846081361e-05, -0.0004482269287109375, -0.6242733001708984, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Holy", "Light", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Light", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 81, 109]}, {"inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, buffs=[Buff(ChangeHealth(3))])\n", "score": -7.7116868485694, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolyLight", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template12"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"_type": "List", "elts": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"func": {"id": "ChangeHealth", "_type": "Name"}, "args": [{"_type": "Template16"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "buffs"}]}}]}, {"_type": "Template13_stmt_seq"}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -1.52587890625e-05, -4.76837158203125e-05, -0.000118255615234375, -5.960462772236497e-07, -3.6000557884108275e-05, -9.536738616588991e-07, -1.9073486328125e-05, -0.000110626220703125, -3.0517578125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9550199795048684e-05, -4.172325134277344e-06, -6.4849853515625e-05, -1.71661376953125e-05, -4.38690185546875e-05, -0.0001010894775390625, -4.38690185546875e-05, -0.0001277923583984375, -4.9591064453125e-05, -0.0004100799560546875, -6.4849853515625e-05, -3.814697265625e-06, -2.2053474822314456e-05, -3.516673677950166e-05, -9.894371032714844e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, 0.0, 0.0, 0.0, -1.2993807104066946e-05, 0.0, -0.00048470497131347656, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.682209014892578e-05, 0.0, -0.0002461671829223633, 0.0, -4.170560836791992, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -6.67572021484375e-05, 0.0, -7.62939453125e-06, 0.0, -7.641315460205078e-05, -1.9073486328125e-06, -7.450580596923828e-05, -1.9073486328125e-06, -0.0005844831466674805, -9.72747802734375e-05, -1.1444091796875e-05, -1.2458076477050781, 0.0, -1.9546890258789062, -0.0006732940673828125, -5.91278076171875e-05, -0.001621246337890625, -3.24249267578125e-05, -0.0014896392822265625, 0.0, -0.00012409687042236328, 0.0, -0.009351730346679688, -0.017591476440429688, -7.2479248046875e-05, -0.008281707763671875, 0.0, -0.2295529842376709, -5.340576171875e-05, -1.9073486328125e-06, -0.0017242431640625, -0.0304718017578125, -0.0027923583984375, -0.033504486083984375, -3.814697265625e-05], "choice_history": [93, 145, 230, 101, 125, "Holy", "Light", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Light", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "buffs", "<EOS>", 21, 141, 217, 58, 123, 23, 146, "Buff", "<EOS>", 216, 58, 123, 23, 146, "Change", "Health", "<EOS>", 216, 72, 71, 109, 109]}, {"inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n", "score": -7.73068737874047, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolyLight", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template12"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -1.52587890625e-05, -4.76837158203125e-05, -0.000118255615234375, -5.960462772236497e-07, -3.6000557884108275e-05, -9.536738616588991e-07, -1.9073486328125e-05, -0.000110626220703125, -3.0517578125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9550199795048684e-05, -4.172325134277344e-06, -6.4849853515625e-05, -1.71661376953125e-05, -4.38690185546875e-05, -0.0001010894775390625, -4.38690185546875e-05, -0.0001277923583984375, -4.9591064453125e-05, -0.0004100799560546875, -6.4849853515625e-05, -3.814697265625e-06, -2.2053474822314456e-05, -3.516673677950166e-05, -9.894371032714844e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, 0.0, 0.0, 0.0, -1.2993807104066946e-05, 0.0, -0.00048470497131347656, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.682209014892578e-05, 0.0, -0.0002461671829223633, 0.0, -0.01570892333984375, 0.0, -0.0002002716064453125, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -7.081031799316406e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -0.0004296302795410156, -0.0001316070556640625, -5.7220458984375e-06, -7.62939453125e-06, -1.1444091796875e-05, -2.288818359375e-05, -3.814697265625e-06, 0.0, -0.0001220703125, 0.0, 0.0, 0.0, -7.867813110351562e-06, 0.0, -1.33514404296875e-05, -1.52587890625e-05, -1.6808495274744928e-05, -7.033323527139146e-06, -0.007506370544433594, -7.62939453125e-06, -3.24249267578125e-05, -0.0001316070556640625, -2.09808349609375e-05, -8.96453857421875e-05, -1.9073486328125e-05, 0.0, -0.000110626220703125, -6.689876556396484, -1.3828244846081361e-05, -0.0004482269287109375, -1.013218879699707, -3.0517578125e-05], "choice_history": [93, 145, 230, 101, 125, "Holy", "Light", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Light", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 76, 109]}, {"inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        return super().can_use(player, game) and player.hero > 0\n", "score": -8.159065775327974, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolyLight", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template12"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Compare", "comparators": [{"_type": "Template31"}], "ops": [{"_type": "Gt"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -1.52587890625e-05, -4.76837158203125e-05, -0.000118255615234375, -5.960462772236497e-07, -3.6000557884108275e-05, -9.536738616588991e-07, -1.9073486328125e-05, -0.000110626220703125, -3.0517578125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9550199795048684e-05, -4.172325134277344e-06, -6.4849853515625e-05, -1.71661376953125e-05, -4.38690185546875e-05, -0.0001010894775390625, -4.38690185546875e-05, -0.0001277923583984375, -4.9591064453125e-05, -0.0004100799560546875, -6.4849853515625e-05, -3.814697265625e-06, -2.2053474822314456e-05, -3.516673677950166e-05, -9.894371032714844e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, 0.0, 0.0, 0.0, -1.2993807104066946e-05, 0.0, -0.00048470497131347656, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.682209014892578e-05, 0.0, -0.0002461671829223633, 0.0, -0.01570892333984375, 0.0, -0.0002002716064453125, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -7.081031799316406e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -0.0004296302795410156, -0.0001316070556640625, -5.7220458984375e-06, -7.62939453125e-06, -1.1444091796875e-05, -2.288818359375e-05, -3.814697265625e-06, 0.0, -0.0001220703125, 0.0, 0.0, 0.0, -7.867813110351562e-06, 0.0, -1.33514404296875e-05, -1.52587890625e-05, -1.6808495274744928e-05, -7.033323527139146e-06, -6.133699893951416, -0.02954387664794922, -0.0031681060791015625, -0.009222030639648438, -0.0057353973388671875, -0.015638351440429688, -3.814697265625e-06, -0.02365398406982422, -4.9591064453125e-05, -3.24249267578125e-05, 0.0, -0.0005283355712890625, -1.9073486328125e-06, -0.0002498567628208548, -0.0002727508544921875, -0.0002346038818359375, 0.0, -6.866455078125e-05, -0.00029754638671875, -0.0032796859741210938, -1.71661376953125e-05, -0.00013625614519696683, 0.0, -0.2063426971435547, -0.0027904510498046875, -0.22792530059814453, 0.0, -0.47823429107666016, -0.8687043786048889, -3.802711216849275e-05, -0.0003204345703125, -0.12930011749267578, -3.0517578125e-05, -0.000213623046875, -0.0001506805419921875], "choice_history": [93, 145, 230, 101, 125, "Holy", "Light", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Light", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 15, 116, 32, "hero", "<EOS>", 213, 7, 216, 83, 109]}, {"inferred_code": "", "score": -20.48768424987793, "model_output": {"_type": "Module", "body": []}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -20.4876708984375], "choice_history": [93, 145, 228]}, {"inferred_code": "super().use(player, game)\n", "score": -20.564231872558594, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -7.62939453125e-06, -1.52587890625e-05, -12.957396507263184, -7.606806755065918], "choice_history": [93, 145, 230, 108, 109]}], "index": 49}
{"beams": [{"inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_heal_power(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "score": -0.8510068718437509, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolyNova", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template22"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -3.814697265625e-05, -5.91278076171875e-05, -4.768360213347478e-06, -0.0002389869769103825, -1.1920928244535389e-07, -9.5367431640625e-06, -9.34600830078125e-05, -7.43865966796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.307525811484084e-05, -1.9073486328125e-06, -0.0005702972412109375, -3.62396240234375e-05, -2.86102294921875e-05, -0.0002460479736328125, 0.0, -0.03421974182128906, -9.5367431640625e-06, -5.53131103515625e-05, -3.24249267578125e-05, -1.9073486328125e-05, -2.5152843591058627e-05, -4.29152678407263e-05, -6.5565000113565475e-06, -5.7220458984375e-06, -3.24249267578125e-05, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -7.867813110351562e-05, -1.9073486328125e-06, -4.57763671875e-05, -2.6702880859375e-05, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -9.5367431640625e-05, -0.0001354217529296875, -1.9073486328125e-06, -1.9073486328125e-06, -4.017353057861328e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.0002344846579944715, -1.3589857189799659e-05, -0.047306060791015625, -0.00152587890625, -0.000911712646484375, -0.000148773193359375, -0.000339508056640625, -0.0002155303955078125, -0.0008144378662109375, -0.0010204315185546875, 0.0, -0.0001354217529296875, -1.9073486328125e-06, -0.0010951757431030273, -1.9073486328125e-06, -0.0004024505615234375, 0.0, -7.62939453125e-05, -6.4849853515625e-05, 0.0, -3.814697265625e-06, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -0.0001049041748046875, 0.0, -0.00072479248046875, 0.0, -0.0009093284606933594, -3.635883331298828e-05, -0.0001277923583984375, -0.0013599395751953125, -1.9073486328125e-06, -0.000152587890625, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -0.0002231597900390625, -0.01214593555778265, -1.1920928244535389e-07, -2.288818359375e-05, -1.33514404296875e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -4.00543212890625e-05, -0.5591433048248291, -1.9073486328125e-06, -5.340576171875e-05, -0.01639842987060547, -7.82012939453125e-05, -0.074371337890625, -0.0010204315185546875, -0.0001049041748046875, -0.0034427642822265625, -3.814697265625e-06, -0.017839431762695312, -0.017865657806396484, 0.0, -7.43865966796875e-05, -0.001949310302734375, -1.9073486328125e-06, -0.0001163482666015625, -6.29425048828125e-05, -3.814697265625e-06, 0.0, -0.012599945068359375, -0.018931841477751732, -5.6862831115722656e-05, -0.0005245208740234375, -0.000354766845703125, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -6.866455078125e-05, -0.0052928924560546875, -2.0265579223632812e-06, -0.0001277923583984375, -0.013463973999023438, -0.000110626220703125, -1.52587890625e-05], "choice_history": [93, 145, 230, 101, 125, "Holy", "Nova", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Holy", " ", "Nova", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 69, 74, 103, 129, 41, 15, 116, 32, "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "score": -1.1471508078370647, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolyNova", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template22"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -3.814697265625e-05, -5.91278076171875e-05, -4.768360213347478e-06, -0.0002389869769103825, -1.1920928244535389e-07, -9.5367431640625e-06, -9.34600830078125e-05, -7.43865966796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.307525811484084e-05, -1.9073486328125e-06, -0.0005702972412109375, -3.62396240234375e-05, -2.86102294921875e-05, -0.0002460479736328125, 0.0, -0.03421974182128906, -9.5367431640625e-06, -5.53131103515625e-05, -3.24249267578125e-05, -1.9073486328125e-05, -2.5152843591058627e-05, -4.29152678407263e-05, -6.5565000113565475e-06, -5.7220458984375e-06, -3.24249267578125e-05, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -7.867813110351562e-05, -1.9073486328125e-06, -4.57763671875e-05, -2.6702880859375e-05, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -9.5367431640625e-05, -0.0001354217529296875, -1.9073486328125e-06, -1.9073486328125e-06, -4.017353057861328e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.0002344846579944715, -1.3589857189799659e-05, -0.047306060791015625, -0.00152587890625, -0.000911712646484375, -0.000148773193359375, -0.000339508056640625, -0.0002155303955078125, -0.0008144378662109375, -0.0010204315185546875, 0.0, -0.0001354217529296875, -1.9073486328125e-06, -0.0010951757431030273, -1.9073486328125e-06, -0.0004024505615234375, 0.0, -7.62939453125e-05, -6.4849853515625e-05, 0.0, -3.814697265625e-06, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -0.0001049041748046875, 0.0, -0.00072479248046875, 0.0, -0.0009093284606933594, -3.635883331298828e-05, -0.0001277923583984375, -0.0013599395751953125, -1.9073486328125e-06, -0.000152587890625, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -0.0002231597900390625, -0.01214593555778265, -1.1920928244535389e-07, -2.288818359375e-05, -1.33514404296875e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -4.00543212890625e-05, -0.8634274005889893, 0.0, -3.814697265625e-06, -0.001739501953125, -9.72747802734375e-05, -0.0879201889038086, -0.0007228851318359375, -0.0001277923583984375, -0.0023279190063476562, -3.814697265625e-06, -0.015699386596679688, -0.013997673988342285, -1.9073486328125e-06, -6.4849853515625e-05, -0.0017452239990234375, -1.9073486328125e-06, -0.0001201629638671875, -6.4849853515625e-05, -3.814697265625e-06, 0.0, -0.01318359375, -0.018939755856990814, -5.1021575927734375e-05, -0.0005168914794921875, -0.00034332275390625, -2.288818359375e-05, -1.33514404296875e-05, 0.0, -6.67572021484375e-05, -0.005275845527648926, -2.0265579223632812e-06, -0.00012969970703125, -0.013522148132324219, -0.000110626220703125, -1.52587890625e-05], "choice_history": [93, 145, 230, 101, 125, "Holy", "Nova", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Holy", " ", "Nova", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 103, 129, 41, 15, 116, 32, "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_heal_power(2), self)\n        player.draw()\n", "score": -4.0639154024515705, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolyNova", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template22"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -3.814697265625e-05, -5.91278076171875e-05, -4.768360213347478e-06, -0.0002389869769103825, -1.1920928244535389e-07, -9.5367431640625e-06, -9.34600830078125e-05, -7.43865966796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.307525811484084e-05, -1.9073486328125e-06, -0.0005702972412109375, -3.62396240234375e-05, -2.86102294921875e-05, -0.0002460479736328125, 0.0, -0.03421974182128906, -9.5367431640625e-06, -5.53131103515625e-05, -3.24249267578125e-05, -1.9073486328125e-05, -2.5152843591058627e-05, -4.29152678407263e-05, -6.5565000113565475e-06, -5.7220458984375e-06, -3.24249267578125e-05, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -7.867813110351562e-05, -1.9073486328125e-06, -4.57763671875e-05, -2.6702880859375e-05, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -9.5367431640625e-05, -0.0001354217529296875, -1.9073486328125e-06, -1.9073486328125e-06, -4.017353057861328e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.0002344846579944715, -1.3589857189799659e-05, -0.047306060791015625, -0.00152587890625, -0.000911712646484375, -0.000148773193359375, -0.000339508056640625, -0.0002155303955078125, -0.0008144378662109375, -0.0010204315185546875, 0.0, -0.0001354217529296875, -1.9073486328125e-06, -0.0010951757431030273, -1.9073486328125e-06, -0.0004024505615234375, 0.0, -7.62939453125e-05, -6.4849853515625e-05, 0.0, -3.814697265625e-06, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -0.0001049041748046875, 0.0, -0.00072479248046875, 0.0, -0.0009093284606933594, -3.635883331298828e-05, -0.0001277923583984375, -0.0013599395751953125, -1.9073486328125e-06, -0.000152587890625, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -0.0002231597900390625, -0.01214593555778265, -1.1920928244535389e-07, -2.288818359375e-05, -1.33514404296875e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -4.00543212890625e-05, -0.5591433048248291, -1.9073486328125e-06, -5.340576171875e-05, -0.01639842987060547, -7.82012939453125e-05, -2.6623239517211914, -1.52587890625e-05, -0.0011157989501953125, -0.5764560699462891, -1.52587890625e-05, 0.0, -0.13724994659423828, -0.002151012420654297, 0.0, -0.002025604248046875], "choice_history": [93, 145, 230, 101, 125, "Holy", "Nova", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Holy", " ", "Nova", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 69, 74, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "score": -4.302184006150547, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolyNova", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template22"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -3.814697265625e-05, -5.91278076171875e-05, -4.768360213347478e-06, -0.0002389869769103825, -1.1920928244535389e-07, -9.5367431640625e-06, -9.34600830078125e-05, -7.43865966796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.307525811484084e-05, -1.9073486328125e-06, -0.0005702972412109375, -3.62396240234375e-05, -2.86102294921875e-05, -0.0002460479736328125, 0.0, -3.4015989303588867, -1.52587890625e-05, -4.76837158203125e-05, -6.866455078125e-05, -1.71661376953125e-05, -2.2649508537142538e-05, -3.278253643657081e-05, -7.748586540401448e-06, -5.7220458984375e-06, -2.6702880859375e-05, -0.000156402587890625, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -9.012222290039062e-05, -1.9073486328125e-06, -9.5367431640625e-05, -0.000102996826171875, 0.0, -6.67572021484375e-05, 0.0, -4.38690185546875e-05, -1.1444091796875e-05, -0.000244140625, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0005359649658203125, 0.0, -0.0001583099365234375, -1.9073486328125e-06, -0.014172911643981934, -1.728534698486328e-05, -0.0005397796630859375, -2.6702880859375e-05, -1.71661376953125e-05, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0001659393310546875, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -8.821487426757812e-05, -2.3841855067985307e-07, -0.4188346862792969, -2.47955322265625e-05, -0.020483016967773438, -1.1444091796875e-05, -3.814697265625e-06, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, -0.11098957061767578, -0.0813230499625206, 0.0, -3.62396240234375e-05, -0.013360023498535156, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -6.29425048828125e-05, -0.05206942558288574, 0.0, -5.7220458984375e-06, -0.004119873046875, -0.0003833770751953125, -0.100189208984375, -0.001071929931640625, -0.0001544952392578125, -0.0023946762084960938, -5.7220458984375e-06, -0.018367767333984375, -0.006667494773864746, -1.9073486328125e-06, -8.392333984375e-05, -0.0020427703857421875, -1.9073486328125e-06, -0.0001220703125, -5.91278076171875e-05, -3.814697265625e-06, 0.0, -0.011571884155273438, -0.018773820251226425, -5.888938903808594e-05, -0.0005207061767578125, -0.0003948211669921875, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -6.4849853515625e-05, -0.005333304405212402, -2.0265579223632812e-06, -0.0001277923583984375, -0.012266159057617188, -0.0001087188720703125, -1.52587890625e-05], "choice_history": [93, 145, 230, 101, 125, "Holy", "Nova", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Nova", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 103, 129, 41, 15, 116, 32, "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        player.draw()\n", "score": -4.645226747551973, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolyNova", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template22"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -3.814697265625e-05, -5.91278076171875e-05, -4.768360213347478e-06, -0.0002389869769103825, -1.1920928244535389e-07, -9.5367431640625e-06, -9.34600830078125e-05, -7.43865966796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.307525811484084e-05, -1.9073486328125e-06, -0.0005702972412109375, -3.62396240234375e-05, -2.86102294921875e-05, -0.0002460479736328125, 0.0, -0.03421974182128906, -9.5367431640625e-06, -5.53131103515625e-05, -3.24249267578125e-05, -1.9073486328125e-05, -2.5152843591058627e-05, -4.29152678407263e-05, -6.5565000113565475e-06, -5.7220458984375e-06, -3.24249267578125e-05, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -7.867813110351562e-05, -1.9073486328125e-06, -4.57763671875e-05, -2.6702880859375e-05, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -9.5367431640625e-05, -0.0001354217529296875, -1.9073486328125e-06, -1.9073486328125e-06, -4.017353057861328e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.0002344846579944715, -1.3589857189799659e-05, -0.047306060791015625, -0.00152587890625, -0.000911712646484375, -0.000148773193359375, -0.000339508056640625, -0.0002155303955078125, -0.0008144378662109375, -0.0010204315185546875, 0.0, -0.0001354217529296875, -1.9073486328125e-06, -0.0010951757431030273, -1.9073486328125e-06, -0.0004024505615234375, 0.0, -7.62939453125e-05, -6.4849853515625e-05, 0.0, -3.814697265625e-06, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -0.0001049041748046875, 0.0, -0.00072479248046875, 0.0, -0.0009093284606933594, -3.635883331298828e-05, -0.0001277923583984375, -0.0013599395751953125, -1.9073486328125e-06, -0.000152587890625, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -0.0002231597900390625, -0.01214593555778265, -1.1920928244535389e-07, -2.288818359375e-05, -1.33514404296875e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -4.00543212890625e-05, -0.8634274005889893, 0.0, -3.814697265625e-06, -0.001739501953125, -9.72747802734375e-05, -2.5093326568603516, -1.33514404296875e-05, -0.00154876708984375, -0.9809999465942383, -2.288818359375e-05, 0.0, -0.17702102661132812, -0.00236666202545166, 0.0, -0.001766204833984375], "choice_history": [93, 145, 230, 101, 125, "Holy", "Nova", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Holy", " ", "Nova", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.heal(player.effective_heal_power(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "score": -4.963666518623988, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolyNova", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template22"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -3.814697265625e-05, -5.91278076171875e-05, -4.768360213347478e-06, -0.0002389869769103825, -1.1920928244535389e-07, -9.5367431640625e-06, -9.34600830078125e-05, -7.43865966796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.307525811484084e-05, -1.9073486328125e-06, -0.0005702972412109375, -3.62396240234375e-05, -2.86102294921875e-05, -0.0002460479736328125, 0.0, -0.03421974182128906, -9.5367431640625e-06, -5.53131103515625e-05, -3.24249267578125e-05, -1.9073486328125e-05, -2.5152843591058627e-05, -4.29152678407263e-05, -6.5565000113565475e-06, -5.7220458984375e-06, -3.24249267578125e-05, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -7.867813110351562e-05, -1.9073486328125e-06, -4.57763671875e-05, -2.6702880859375e-05, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -9.5367431640625e-05, -0.0001354217529296875, -1.9073486328125e-06, -1.9073486328125e-06, -4.017353057861328e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.0002344846579944715, -1.3589857189799659e-05, -0.047306060791015625, -0.00152587890625, -0.000911712646484375, -0.000148773193359375, -0.000339508056640625, -0.0002155303955078125, -0.0008144378662109375, -0.0010204315185546875, 0.0, -0.0001354217529296875, -1.9073486328125e-06, -0.0010951757431030273, -1.9073486328125e-06, -0.0004024505615234375, 0.0, -7.62939453125e-05, -6.4849853515625e-05, 0.0, -3.814697265625e-06, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -0.0001049041748046875, 0.0, -0.00072479248046875, 0.0, -0.0009093284606933594, -3.635883331298828e-05, -0.0001277923583984375, -0.0013599395751953125, -1.9073486328125e-06, -0.000152587890625, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -0.0002231597900390625, -4.505863666534424, -0.0006748937303200364, -4.76837158203125e-05, -6.4849853515625e-05, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -4.1961669921875e-05, -0.1255415678024292, 0.0, -7.2479248046875e-05, -0.01954174041748047, -7.2479248046875e-05, -0.09125328063964844, -0.0014476776123046875, -0.0001087188720703125, -0.0038928985595703125, -3.814697265625e-06, -0.018726348876953125, -0.04690420627593994, 0.0, -9.1552734375e-05, -0.0020580291748046875, -1.9073486328125e-06, -0.000118255615234375, -6.29425048828125e-05, -3.814697265625e-06, 0.0, -0.013101577758789062, -0.019220052286982536, -5.1140785217285156e-05, -0.000522613525390625, -0.0003528594970703125, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -6.67572021484375e-05, -0.0052520036697387695, -2.0265579223632812e-06, -0.0001277923583984375, -0.013540267944335938, -0.0001125335693359375, -1.52587890625e-05], "choice_history": [93, 145, 230, 101, 125, "Holy", "Nova", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Holy", " ", "Nova", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 69, 74, 103, 129, 41, 15, 116, 32, "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "score": -5.223997742575619, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolyNova", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template22"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -3.814697265625e-05, -5.91278076171875e-05, -4.768360213347478e-06, -0.0002389869769103825, -1.1920928244535389e-07, -9.5367431640625e-06, -9.34600830078125e-05, -7.43865966796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.307525811484084e-05, -1.9073486328125e-06, -0.0005702972412109375, -3.62396240234375e-05, -2.86102294921875e-05, -0.0002460479736328125, 0.0, -0.03421974182128906, -9.5367431640625e-06, -5.53131103515625e-05, -3.24249267578125e-05, -1.9073486328125e-05, -2.5152843591058627e-05, -4.29152678407263e-05, -6.5565000113565475e-06, -5.7220458984375e-06, -3.24249267578125e-05, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -7.867813110351562e-05, -1.9073486328125e-06, -4.57763671875e-05, -2.6702880859375e-05, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -9.5367431640625e-05, -0.0001354217529296875, -1.9073486328125e-06, -1.9073486328125e-06, -4.017353057861328e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.0002344846579944715, -1.3589857189799659e-05, -0.047306060791015625, -0.00152587890625, -0.000911712646484375, -0.000148773193359375, -0.000339508056640625, -0.0002155303955078125, -0.0008144378662109375, -0.0010204315185546875, 0.0, -0.0001354217529296875, -1.9073486328125e-06, -0.0010951757431030273, -1.9073486328125e-06, -0.0004024505615234375, 0.0, -7.62939453125e-05, -6.4849853515625e-05, 0.0, -3.814697265625e-06, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -0.0001049041748046875, 0.0, -0.00072479248046875, 0.0, -0.0009093284606933594, -3.635883331298828e-05, -0.0001277923583984375, -0.0013599395751953125, -1.9073486328125e-06, -0.000152587890625, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -0.0002231597900390625, -0.01214593555778265, -1.1920928244535389e-07, -2.288818359375e-05, -1.33514404296875e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -4.00543212890625e-05, -0.8634274005889893, 0.0, -3.814697265625e-06, -0.001739501953125, -9.72747802734375e-05, -2.5093326568603516, -1.33514404296875e-05, -0.00154876708984375, -0.4739952087402344, -3.814697265625e-06, 0.0, -0.000629425048828125, 0.0, -0.6882572174072266, -0.0014920233516022563, -1.1920928244535389e-07, -0.5562045574188232, 0.0, -0.0004673004150390625, -0.00279998779296875, -3.24249267578125e-05, -4.57763671875e-05, 0.0, -0.000213623046875, -0.006766796112060547, -1.1920928244535389e-07, -0.0003757476806640625, -0.009610176086425781, -4.38690185546875e-05, -9.5367431640625e-06], "choice_history": [93, 145, 230, 101, 125, "Holy", "Nova", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Holy", " ", "Nova", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_heal_power(2), self)\n        for minion in game.other_player.hero:\n            minion.heal(player.effective_heal_power(2), self)\n", "score": -5.368784011163811, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolyNova", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template22"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -3.814697265625e-05, -5.91278076171875e-05, -4.768360213347478e-06, -0.0002389869769103825, -1.1920928244535389e-07, -9.5367431640625e-06, -9.34600830078125e-05, -7.43865966796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.307525811484084e-05, -1.9073486328125e-06, -0.0005702972412109375, -3.62396240234375e-05, -2.86102294921875e-05, -0.0002460479736328125, 0.0, -0.03421974182128906, -9.5367431640625e-06, -5.53131103515625e-05, -3.24249267578125e-05, -1.9073486328125e-05, -2.5152843591058627e-05, -4.29152678407263e-05, -6.5565000113565475e-06, -5.7220458984375e-06, -3.24249267578125e-05, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -7.867813110351562e-05, -1.9073486328125e-06, -4.57763671875e-05, -2.6702880859375e-05, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -9.5367431640625e-05, -0.0001354217529296875, -1.9073486328125e-06, -1.9073486328125e-06, -4.017353057861328e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.0002344846579944715, -1.3589857189799659e-05, -0.047306060791015625, -0.00152587890625, -0.000911712646484375, -0.000148773193359375, -0.000339508056640625, -0.0002155303955078125, -0.0008144378662109375, -0.0010204315185546875, 0.0, -0.0001354217529296875, -1.9073486328125e-06, -0.0010951757431030273, -1.9073486328125e-06, -0.0004024505615234375, 0.0, -7.62939453125e-05, -6.4849853515625e-05, 0.0, -3.814697265625e-06, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -0.0001049041748046875, 0.0, -0.00072479248046875, 0.0, -0.0009093284606933594, -3.635883331298828e-05, -0.0001277923583984375, -0.0013599395751953125, -1.9073486328125e-06, -0.000152587890625, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -0.0002231597900390625, -0.01214593555778265, -1.1920928244535389e-07, -2.288818359375e-05, -1.33514404296875e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -4.00543212890625e-05, -0.5591433048248291, -1.9073486328125e-06, -5.340576171875e-05, -0.01639842987060547, -7.82012939453125e-05, -0.074371337890625, -0.0010204315185546875, -0.0001049041748046875, -0.0034427642822265625, -3.814697265625e-06, -4.11492919921875, -7.62939453125e-06, -0.03180217742919922, -3.814697265625e-06, -0.000606536865234375, 0.0, -0.05451250076293945, 0.0, -0.28673824667930603, -2.0265579223632812e-06, -0.000438690185546875, -0.01055145263671875, -1.9073486328125e-06, -0.0006866455078125, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -0.0029773712158203125, -0.07502871751785278, -1.2993811651540454e-05, -6.29425048828125e-05, -0.000209808349609375, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -4.38690185546875e-05, -0.011460304260253906, 0.0, -7.62939453125e-05, -0.016953468322753906, -0.0001125335693359375, -1.33514404296875e-05], "choice_history": [93, 145, 230, 101, 125, "Holy", "Nova", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Holy", " ", "Nova", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 103, 129, 41, 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 69, 74, 103, 129, 41, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -5.712661476757113, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolyNova", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template22"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -3.814697265625e-05, -5.91278076171875e-05, -4.768360213347478e-06, -0.0002389869769103825, -1.1920928244535389e-07, -9.5367431640625e-06, -9.34600830078125e-05, -7.43865966796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.307525811484084e-05, -1.9073486328125e-06, -0.0005702972412109375, -3.62396240234375e-05, -2.86102294921875e-05, -0.0002460479736328125, 0.0, -3.4015989303588867, -1.52587890625e-05, -4.76837158203125e-05, -6.866455078125e-05, -1.71661376953125e-05, -2.2649508537142538e-05, -3.278253643657081e-05, -7.748586540401448e-06, -5.7220458984375e-06, -2.6702880859375e-05, -0.000156402587890625, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -9.012222290039062e-05, -1.9073486328125e-06, -9.5367431640625e-05, -0.000102996826171875, 0.0, -6.67572021484375e-05, 0.0, -4.38690185546875e-05, -1.1444091796875e-05, -0.000244140625, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0005359649658203125, 0.0, -0.0001583099365234375, -1.9073486328125e-06, -0.014172911643981934, -1.728534698486328e-05, -0.0005397796630859375, -2.6702880859375e-05, -1.71661376953125e-05, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0001659393310546875, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -8.821487426757812e-05, -2.3841855067985307e-07, -1.624135971069336, -4.1961669921875e-05, -0.008829116821289062, -2.288818359375e-05, -5.53131103515625e-05, -0.000274658203125, -5.7220458984375e-06, 0.0, -0.07211017608642578, -0.045955538749694824, 0.0, -2.86102294921875e-05, -0.0017337799072265625, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -3.62396240234375e-05, -0.5355420112609863, 0.0, -3.814697265625e-06, -0.0035686492919921875, -0.00031280517578125, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Holy", "Nova", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Nova", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.heal(player.effective_heal_power(2), self)\n", "score": -5.762112373168449, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolyNova", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template22"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "extend", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"id": "targets", "_type": "Name"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -3.814697265625e-05, -5.91278076171875e-05, -4.768360213347478e-06, -0.0002389869769103825, -1.1920928244535389e-07, -9.5367431640625e-06, -9.34600830078125e-05, -7.43865966796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.307525811484084e-05, -1.9073486328125e-06, -0.0005702972412109375, -3.62396240234375e-05, -2.86102294921875e-05, -0.0002460479736328125, 0.0, -0.03421974182128906, -9.5367431640625e-06, -5.53131103515625e-05, -3.24249267578125e-05, -1.9073486328125e-05, -2.5152843591058627e-05, -4.29152678407263e-05, -6.5565000113565475e-06, -5.7220458984375e-06, -3.24249267578125e-05, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -7.867813110351562e-05, -1.9073486328125e-06, -4.57763671875e-05, -2.6702880859375e-05, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -9.5367431640625e-05, -0.0001354217529296875, -1.9073486328125e-06, -1.9073486328125e-06, -4.017353057861328e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.0002344846579944715, -1.3589857189799659e-05, -3.438778877258301, -0.0002880096435546875, -0.014434814453125, -4.9591064453125e-05, -0.000629425048828125, -8.0108642578125e-05, -0.000286102294921875, -0.054367780685424805, -6.9141146923357155e-06, -3.0517578125e-05, -0.0001068115234375, -8.0108642578125e-05, 0.0, -7.05718994140625e-05, -3.814697265625e-06, -0.0005617005517706275, -3.063678741455078e-05, -0.00039696693420410156, 0.0, -0.0006771087646484375, -3.814697265625e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0034332275390625, -5.7220458984375e-06, -6.4849853515625e-05, 0.0, -0.030948758125305176, 0.0, -0.0016177891520783305, -6.198883056640625e-06, -0.000446319580078125, -4.38690185546875e-05, -0.0008831024169921875, -4.00543212890625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0024318695068359375, -7.62939453125e-06, -0.00911641027778387, -5.960462772236497e-07, -0.39256495237350464, -1.728534698486328e-05, -7.62939453125e-06, -0.00580596923828125, 0.0, -0.001190185546875, -1.9073486328125e-06, -0.000301361083984375, -1.1444091796875e-05, -2.777576446533203e-05, 0.0, -0.06504166126251221, -9.5367431640625e-06, -0.15306591987609863, -2.9206275939941406e-05, -0.02801227569580078, -3.24249267578125e-05, -0.0002880096435546875, -0.000171661376953125, -3.814697265625e-06, -0.0003261566162109375, -4.768370445162873e-07, -0.0004482269287109375, -0.6113901138305664, 0.0, -4.00543212890625e-05, -4.76837158203125e-05, -1.71661376953125e-05, 0.0, -0.000118255615234375, -0.6495826244354248, -0.0013338100397959352, -2.288818359375e-05, -4.00543212890625e-05, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -4.00543212890625e-05, -0.1934363842010498, -1.1920928244535389e-07, -9.34600830078125e-05, -0.06162548065185547, -0.0001316070556640625, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Holy", "Nova", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Holy", " ", "Nova", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "extend", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 103, 129, 41, 23, 146, "targets", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_heal_power(2), self)\n", "score": -6.1097628790398275, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolyNova", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template22"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -3.814697265625e-05, -5.91278076171875e-05, -4.768360213347478e-06, -0.0002389869769103825, -1.1920928244535389e-07, -9.5367431640625e-06, -9.34600830078125e-05, -7.43865966796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.307525811484084e-05, -1.9073486328125e-06, -0.0005702972412109375, -3.62396240234375e-05, -2.86102294921875e-05, -0.0002460479736328125, 0.0, -3.4015989303588867, -1.52587890625e-05, -4.76837158203125e-05, -6.866455078125e-05, -1.71661376953125e-05, -2.2649508537142538e-05, -3.278253643657081e-05, -7.748586540401448e-06, -5.7220458984375e-06, -2.6702880859375e-05, -0.000156402587890625, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -9.012222290039062e-05, -1.9073486328125e-06, -9.5367431640625e-05, -0.000102996826171875, 0.0, -6.67572021484375e-05, 0.0, -4.38690185546875e-05, -1.1444091796875e-05, -0.000244140625, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0005359649658203125, 0.0, -0.0001583099365234375, -1.9073486328125e-06, -0.014172911643981934, -1.728534698486328e-05, -0.0005397796630859375, -2.6702880859375e-05, -1.71661376953125e-05, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0001659393310546875, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -8.821487426757812e-05, -2.3841855067985307e-07, -1.624135971069336, -4.1961669921875e-05, -0.008829116821289062, -2.288818359375e-05, -5.53131103515625e-05, -0.000274658203125, -5.7220458984375e-06, 0.0, -0.07211017608642578, -0.045955538749694824, 0.0, -2.86102294921875e-05, -0.0017337799072265625, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -3.62396240234375e-05, -0.8960785865783691, -1.9073486328125e-06, -8.20159912109375e-05, -0.04012012481689453, -0.000244140625, -7.62939453125e-06], "choice_history": [93, 145, 230, 101, 125, "Holy", "Nova", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Nova", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.damage(player.effective_heal_power(2), self)\n", "score": -6.24035014401516, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolyNova", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template22"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "extend", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"id": "targets", "_type": "Name"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -3.814697265625e-05, -5.91278076171875e-05, -4.768360213347478e-06, -0.0002389869769103825, -1.1920928244535389e-07, -9.5367431640625e-06, -9.34600830078125e-05, -7.43865966796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.307525811484084e-05, -1.9073486328125e-06, -0.0005702972412109375, -3.62396240234375e-05, -2.86102294921875e-05, -0.0002460479736328125, 0.0, -0.03421974182128906, -9.5367431640625e-06, -5.53131103515625e-05, -3.24249267578125e-05, -1.9073486328125e-05, -2.5152843591058627e-05, -4.29152678407263e-05, -6.5565000113565475e-06, -5.7220458984375e-06, -3.24249267578125e-05, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -7.867813110351562e-05, -1.9073486328125e-06, -4.57763671875e-05, -2.6702880859375e-05, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -9.5367431640625e-05, -0.0001354217529296875, -1.9073486328125e-06, -1.9073486328125e-06, -4.017353057861328e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.0002344846579944715, -1.3589857189799659e-05, -3.438778877258301, -0.0002880096435546875, -0.014434814453125, -4.9591064453125e-05, -0.000629425048828125, -8.0108642578125e-05, -0.000286102294921875, -0.054367780685424805, -6.9141146923357155e-06, -3.0517578125e-05, -0.0001068115234375, -8.0108642578125e-05, 0.0, -7.05718994140625e-05, -3.814697265625e-06, -0.0005617005517706275, -3.063678741455078e-05, -0.00039696693420410156, 0.0, -0.0006771087646484375, -3.814697265625e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0034332275390625, -5.7220458984375e-06, -6.4849853515625e-05, 0.0, -0.030948758125305176, 0.0, -0.0016177891520783305, -6.198883056640625e-06, -0.000446319580078125, -4.38690185546875e-05, -0.0008831024169921875, -4.00543212890625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0024318695068359375, -7.62939453125e-06, -0.00911641027778387, -5.960462772236497e-07, -0.39256495237350464, -1.728534698486328e-05, -7.62939453125e-06, -0.00580596923828125, 0.0, -0.001190185546875, -1.9073486328125e-06, -0.000301361083984375, -1.1444091796875e-05, -2.777576446533203e-05, 0.0, -0.06504166126251221, -9.5367431640625e-06, -0.15306591987609863, -2.9206275939941406e-05, -0.02801227569580078, -3.24249267578125e-05, -0.0002880096435546875, -0.000171661376953125, -3.814697265625e-06, -0.0003261566162109375, -4.768370445162873e-07, -0.0004482269287109375, -0.6113901138305664, 0.0, -4.00543212890625e-05, -4.76837158203125e-05, -1.71661376953125e-05, 0.0, -0.000118255615234375, -0.7604343891143799, -8.344646857949556e-07, -7.62939453125e-06, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -3.4332275390625e-05, -0.5460021495819092, 0.0, -6.67572021484375e-05, -0.07790470123291016, -7.62939453125e-05, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Holy", "Nova", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Holy", " ", "Nova", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "extend", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 103, 129, 41, 23, 146, "targets", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            if minion.card.minion_type > game.current_player.minions:\n                minion.damage(player.effective_heal_power(2), self)\n", "score": -9.03611007614898, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolyNova", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template22"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "extend", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}, {"target": {"_type": "Template30"}, "_type": "For", "body": [{"_type": "If", "test": {"left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"_type": "Template30"}}}, "_type": "Compare", "comparators": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "current_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "ops": [{"_type": "Gt"}]}, "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}], "iter": {"id": "targets", "_type": "Name"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -3.814697265625e-05, -5.91278076171875e-05, -4.768360213347478e-06, -0.0002389869769103825, -1.1920928244535389e-07, -9.5367431640625e-06, -9.34600830078125e-05, -7.43865966796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.307525811484084e-05, -1.9073486328125e-06, -0.0005702972412109375, -3.62396240234375e-05, -2.86102294921875e-05, -0.0002460479736328125, 0.0, -0.03421974182128906, -9.5367431640625e-06, -5.53131103515625e-05, -3.24249267578125e-05, -1.9073486328125e-05, -2.5152843591058627e-05, -4.29152678407263e-05, -6.5565000113565475e-06, -5.7220458984375e-06, -3.24249267578125e-05, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -7.867813110351562e-05, -1.9073486328125e-06, -4.57763671875e-05, -2.6702880859375e-05, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -9.5367431640625e-05, -0.0001354217529296875, -1.9073486328125e-06, -1.9073486328125e-06, -4.017353057861328e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.0002344846579944715, -1.3589857189799659e-05, -3.438778877258301, -0.0002880096435546875, -0.014434814453125, -4.9591064453125e-05, -0.000629425048828125, -8.0108642578125e-05, -0.000286102294921875, -0.054367780685424805, -6.9141146923357155e-06, -3.0517578125e-05, -0.0001068115234375, -8.0108642578125e-05, 0.0, -7.05718994140625e-05, -3.814697265625e-06, -0.0005617005517706275, -3.063678741455078e-05, -0.00039696693420410156, 0.0, -0.0006771087646484375, -3.814697265625e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0034332275390625, -5.7220458984375e-06, -6.4849853515625e-05, 0.0, -0.030948758125305176, 0.0, -0.0016177891520783305, -6.198883056640625e-06, -0.000446319580078125, -4.38690185546875e-05, -0.0008831024169921875, -4.00543212890625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0024318695068359375, -7.62939453125e-06, -0.00911641027778387, -5.960462772236497e-07, -0.39256495237350464, -1.728534698486328e-05, -7.62939453125e-06, -0.00580596923828125, 0.0, -0.001190185546875, -1.9073486328125e-06, -0.000301361083984375, -1.1444091796875e-05, -2.777576446533203e-05, 0.0, -0.06504166126251221, -9.5367431640625e-06, -0.15306591987609863, -2.9206275939941406e-05, -0.02801227569580078, -3.24249267578125e-05, -0.0002880096435546875, -0.000171661376953125, -3.814697265625e-06, -0.0003261566162109375, -4.768370445162873e-07, -0.0004482269287109375, -0.7855997085571289, -0.0025482177734375, -0.0020227432250976562, -5.7220458984375e-05, -0.19013690948486328, -0.000335693359375, -2.86102294921875e-05, 0.0, -0.0073146820068359375, -0.12534171342849731, -1.072883515007561e-05, -0.0031001889146864414, -5.805492037325166e-05, -1.52587890625e-05, -0.6335983276367188, -1.33514404296875e-05, -0.7060880661010742, -2.6702880859375e-05, -0.5946922302246094, 0.0, -3.814697265625e-06, 0.0, -0.33549976348876953, 0.0, -0.49223756790161133, 0.0, -0.1616917848587036, 0.0, -0.00055694580078125, -0.007986068725585938, -2.09808349609375e-05, -4.00543212890625e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.027265548706054688, -0.0049188570119440556, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -4.00543212890625e-05, -0.6796445846557617, 0.0, -0.0001010894775390625, -0.03072357177734375, -0.0001583099365234375, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Holy", "Nova", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Holy", " ", "Nova", "<EOS>", 77, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 88, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "extend", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 103, 129, 41, 23, 146, "targets", "<EOS>", 229, 105, 133, 19, 126, 15, 116, 15, 116, 41, "card", "<EOS>", "minion_type", "<EOS>", 213, 7, 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "", "score": -20.018327713012695, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -20.018312454223633], "choice_history": [93, 145, 228]}, {"inferred_code": "super().use(player, game)\n", "score": -23.263582229614258, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -14.739511489868164, -8.524040222167969], "choice_history": [93, 145, 230, 108, 109]}], "index": 50}
{"beams": [{"inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -0.08704654207512874, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolySmite", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template14"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -1.52587890625e-05, -4.38690185546875e-05, -0.00012969970703125, -1.311301275563892e-06, -4.8398287617601454e-05, -5.960462772236497e-07, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.3113015484123025e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.52587890625e-05, -8.58306884765625e-05, -0.000232696533203125, -3.814697265625e-06, -0.001186370849609375, -5.14984130859375e-05, -1.33514404296875e-05, -8.96453857421875e-05, -2.09808349609375e-05, -1.5020257706055418e-05, -4.2796113120857626e-05, -2.968277840409428e-05, -1.9073486328125e-06, -4.57763671875e-05, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, 0.0, -4.57763671875e-05, -1.1920928244535389e-07, -0.0002155303955078125, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -0.01271820068359375, 0.0, -0.0001811981201171875, 0.0, -4.00543212890625e-05, -0.0001430511474609375, -3.4332275390625e-05, -7.2479248046875e-05, -3.814697265625e-06, -1.71661376953125e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.0002651214599609375, -1.9073486328125e-06, -0.004301548004150391, -3.814697265625e-06, -0.0001983642578125, -4.76837158203125e-05, -0.0001811981201171875, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.000102996826171875, -1.9073486328125e-06, -0.00011444091796875, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -0.0006438493728637695, -5.722029527532868e-06, -0.061977386474609375, -0.0002307891845703125, -8.96453857421875e-05, -3.62396240234375e-05, -2.86102294921875e-05, -8.58306884765625e-05, -5.7220458984375e-06, 0.0, -9.34600830078125e-05, -9.536738616588991e-07, -0.0006564055802300572, -1.1444091796875e-05, -3.24249267578125e-05, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -5.91278076171875e-05, -0.0004762411117553711, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0007953643798828125, -0.0005130767822265625, -1.71661376953125e-05], "choice_history": [93, 145, 230, 101, 125, "Holy", "Smite", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Smite", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "score": -4.63187923595288, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolySmite", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template14"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -1.52587890625e-05, -4.38690185546875e-05, -0.00012969970703125, -1.311301275563892e-06, -4.8398287617601454e-05, -5.960462772236497e-07, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.3113015484123025e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.52587890625e-05, -8.58306884765625e-05, -0.000232696533203125, -3.814697265625e-06, -0.001186370849609375, -5.14984130859375e-05, -1.33514404296875e-05, -8.96453857421875e-05, -2.09808349609375e-05, -1.5020257706055418e-05, -4.2796113120857626e-05, -2.968277840409428e-05, -1.9073486328125e-06, -4.57763671875e-05, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, 0.0, -4.57763671875e-05, -1.1920928244535389e-07, -0.0002155303955078125, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -0.01271820068359375, 0.0, -0.0001811981201171875, 0.0, -4.00543212890625e-05, -0.0001430511474609375, -3.4332275390625e-05, -7.2479248046875e-05, -3.814697265625e-06, -1.71661376953125e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.0002651214599609375, -1.9073486328125e-06, -0.004301548004150391, -3.814697265625e-06, -0.0001983642578125, -4.76837158203125e-05, -0.0001811981201171875, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.000102996826171875, -1.9073486328125e-06, -0.00011444091796875, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -0.0006438493728637695, -5.722029527532868e-06, -2.924710273742676, -8.20159912109375e-05, -0.003131866455078125, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -6.103515625e-05, -1.5497195136049413e-06, -0.0002087221946567297, -1.71661376953125e-05, -3.62396240234375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -8.7738037109375e-05, -0.00019884106586687267, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0007877349853515625, -0.0002384185791015625, -1.9073486328125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.23079967498779297, -5.7220458984375e-06, -1.9073486328125e-06, -0.0789957046508789, 0.0, -0.9872312545776367, -3.814697265625e-06, -0.22180938720703125, -2.09808349609375e-05, -0.00039517879486083984, -1.1920928244535389e-07, -0.0063539729453623295, -4.196114605292678e-05, -0.10810083150863647, -5.340480129234493e-05, -0.01936374418437481, 0.0, -5.7220458984375e-06, -0.0028104782104492188, -0.0003814697265625, -9.5367431640625e-06, -1.9073486328125e-05, -0.0002422332763671875, -0.016154885292053223, -1.1920928244535389e-07, -1.1444091796875e-05, -0.00025177001953125, -0.007236480712890625, -2.09808349609375e-05], "choice_history": [93, 145, 230, 101, 125, "Holy", "Smite", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Smite", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.damage(player.effective_heal_power(2), self)\n", "score": -4.931920269195345, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolySmite", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template14"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -1.52587890625e-05, -4.38690185546875e-05, -0.00012969970703125, -1.311301275563892e-06, -4.8398287617601454e-05, -5.960462772236497e-07, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.3113015484123025e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.52587890625e-05, -8.58306884765625e-05, -0.000232696533203125, -3.814697265625e-06, -0.001186370849609375, -5.14984130859375e-05, -1.33514404296875e-05, -8.96453857421875e-05, -2.09808349609375e-05, -1.5020257706055418e-05, -4.2796113120857626e-05, -2.968277840409428e-05, -1.9073486328125e-06, -4.57763671875e-05, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, 0.0, -4.57763671875e-05, -1.1920928244535389e-07, -0.0002155303955078125, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -0.01271820068359375, 0.0, -0.0001811981201171875, 0.0, -4.00543212890625e-05, -0.0001430511474609375, -3.4332275390625e-05, -7.2479248046875e-05, -3.814697265625e-06, -1.71661376953125e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.0002651214599609375, -1.9073486328125e-06, -0.004301548004150391, -3.814697265625e-06, -0.0001983642578125, -4.76837158203125e-05, -0.0001811981201171875, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.000102996826171875, -1.9073486328125e-06, -0.00011444091796875, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -0.0006438493728637695, -5.722029527532868e-06, -2.924710273742676, -8.20159912109375e-05, -0.003131866455078125, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -6.103515625e-05, -1.5497195136049413e-06, -0.0002087221946567297, -1.71661376953125e-05, -3.62396240234375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -8.7738037109375e-05, -0.00019884106586687267, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0007877349853515625, -0.0002384185791015625, -1.9073486328125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.23079967498779297, -5.7220458984375e-06, -1.9073486328125e-06, -0.0789957046508789, 0.0, -0.48578548431396484, -0.0013084354577586055, -3.504691630951129e-05, -1.1430679559707642, 0.0, -2.86102294921875e-05, -0.000308990478515625, -8.392333984375e-05, -1.9073486328125e-05, -3.814697265625e-06, -0.000217437744140625, -0.03720963001251221, -6.198883056640625e-06, -5.53131103515625e-05, -0.0023326873779296875, -7.05718994140625e-05, -2.6702880859375e-05], "choice_history": [93, 145, 230, 101, 125, "Holy", "Smite", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Smite", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.change_temp_attack(2)\n", "score": -5.126733759109115, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolySmite", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template14"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "change_temp_attack", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -1.52587890625e-05, -4.38690185546875e-05, -0.00012969970703125, -1.311301275563892e-06, -4.8398287617601454e-05, -5.960462772236497e-07, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.3113015484123025e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.52587890625e-05, -8.58306884765625e-05, -0.000232696533203125, -3.814697265625e-06, -0.001186370849609375, -5.14984130859375e-05, -1.33514404296875e-05, -8.96453857421875e-05, -2.09808349609375e-05, -1.5020257706055418e-05, -4.2796113120857626e-05, -2.968277840409428e-05, -1.9073486328125e-06, -4.57763671875e-05, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, 0.0, -4.57763671875e-05, -1.1920928244535389e-07, -0.0002155303955078125, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -0.01271820068359375, 0.0, -0.0001811981201171875, 0.0, -4.00543212890625e-05, -0.0001430511474609375, -3.4332275390625e-05, -7.2479248046875e-05, -3.814697265625e-06, -1.71661376953125e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.0002651214599609375, -1.9073486328125e-06, -0.004301548004150391, -3.814697265625e-06, -0.0001983642578125, -4.76837158203125e-05, -0.0001811981201171875, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.000102996826171875, -1.9073486328125e-06, -0.00011444091796875, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -0.0006438493728637695, -5.722029527532868e-06, -2.924710273742676, -8.20159912109375e-05, -0.003131866455078125, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -6.103515625e-05, -1.5497195136049413e-06, -0.0002087221946567297, -1.71661376953125e-05, -3.62396240234375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -8.7738037109375e-05, -0.00019884106586687267, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0007877349853515625, -0.0002384185791015625, -1.9073486328125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.23079967498779297, -5.7220458984375e-06, -1.9073486328125e-06, -0.0789957046508789, 0.0, -0.48578548431396484, -0.0013084354577586055, -3.504691630951129e-05, -1.3771947622299194, -5.960462772236497e-07, -2.47955322265625e-05, -0.0009746551513671875, -4.9591064453125e-05], "choice_history": [93, 145, 230, 101, 125, "Holy", "Smite", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Smite", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "change_temp_attack", "<EOS>", 216, 69, 109]}, {"inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.draw()\n", "score": -5.271751270120525, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolySmite", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template14"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"_type": "Template19"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -1.52587890625e-05, -4.38690185546875e-05, -0.00012969970703125, -1.311301275563892e-06, -4.8398287617601454e-05, -5.960462772236497e-07, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.3113015484123025e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.52587890625e-05, -8.58306884765625e-05, -0.000232696533203125, -3.814697265625e-06, -0.001186370849609375, -5.14984130859375e-05, -1.33514404296875e-05, -8.96453857421875e-05, -2.09808349609375e-05, -1.5020257706055418e-05, -4.2796113120857626e-05, -2.968277840409428e-05, -1.9073486328125e-06, -4.57763671875e-05, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, 0.0, -4.57763671875e-05, -1.1920928244535389e-07, -0.0002155303955078125, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -0.01271820068359375, 0.0, -0.0001811981201171875, 0.0, -4.00543212890625e-05, -0.0001430511474609375, -3.4332275390625e-05, -7.2479248046875e-05, -3.814697265625e-06, -1.71661376953125e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.0002651214599609375, -1.9073486328125e-06, -0.004301548004150391, -3.814697265625e-06, -0.0001983642578125, -4.76837158203125e-05, -0.0001811981201171875, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.000102996826171875, -1.9073486328125e-06, -0.00011444091796875, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -0.0006438493728637695, -5.722029527532868e-06, -2.924710273742676, -8.20159912109375e-05, -0.003131866455078125, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -6.103515625e-05, -1.5497195136049413e-06, -0.0002087221946567297, -1.71661376953125e-05, -3.62396240234375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -8.7738037109375e-05, -0.00019884106586687267, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0007877349853515625, -0.0002384185791015625, -1.9073486328125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.6169404983520508, -2.86102294921875e-05, -1.9073486328125e-06, -0.6973237991333008, -0.005628108978271484, -1.1920928244535389e-07, -0.000270843505859375], "choice_history": [93, 145, 230, 101, 125, "Holy", "Smite", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Smite", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 121, 15, 116, 32, "draw", "<EOS>", 109]}, {"inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "score": -5.4815108568096065, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolySmite", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template14"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "heal", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "args": [{"func": {"attr": "effective_heal_power", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -1.52587890625e-05, -4.38690185546875e-05, -0.00012969970703125, -1.311301275563892e-06, -4.8398287617601454e-05, -5.960462772236497e-07, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.3113015484123025e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.52587890625e-05, -8.58306884765625e-05, -0.000232696533203125, -3.814697265625e-06, -0.001186370849609375, -5.14984130859375e-05, -1.33514404296875e-05, -8.96453857421875e-05, -2.09808349609375e-05, -1.5020257706055418e-05, -4.2796113120857626e-05, -2.968277840409428e-05, -1.9073486328125e-06, -4.57763671875e-05, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, 0.0, -4.57763671875e-05, -1.1920928244535389e-07, -0.0002155303955078125, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -0.01271820068359375, 0.0, -0.0001811981201171875, 0.0, -4.00543212890625e-05, -0.0001430511474609375, -3.4332275390625e-05, -7.2479248046875e-05, -3.814697265625e-06, -1.71661376953125e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.0002651214599609375, -1.9073486328125e-06, -0.004301548004150391, -3.814697265625e-06, -0.0001983642578125, -4.76837158203125e-05, -0.0001811981201171875, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.000102996826171875, -1.9073486328125e-06, -0.00011444091796875, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -0.0006438493728637695, -5.722029527532868e-06, -2.924710273742676, -8.20159912109375e-05, -0.003131866455078125, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -6.103515625e-05, -1.5497195136049413e-06, -0.0002087221946567297, -1.71661376953125e-05, -3.62396240234375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -8.7738037109375e-05, -0.00019884106586687267, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0007877349853515625, -0.0002384185791015625, -1.9073486328125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.23079967498779297, -5.7220458984375e-06, -1.9073486328125e-06, -0.0789957046508789, 0.0, -0.48578548431396484, -0.0013084354577586055, -3.504691630951129e-05, -1.7140649557113647, -8.344646857949556e-07, -0.0006961822509765625, -0.0013275146484375, -3.814697265625e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.0004119873046875, -0.01386725902557373, -3.4570680327306036e-06, -0.0004825592041015625, -0.001926422119140625, -0.0001068115234375, -3.0517578125e-05], "choice_history": [93, 145, 230, 101, 125, "Holy", "Smite", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Smite", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 123, 15, 116, 15, 116, 32, "hero", "<EOS>", "heal", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_heal_power", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, **2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -5.666142153161829, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolySmite", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template14"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"_type": "Template12"}, "_type": "keyword", "arg": ""}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -1.52587890625e-05, -4.38690185546875e-05, -0.00012969970703125, -1.311301275563892e-06, -4.8398287617601454e-05, -5.960462772236497e-07, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.3113015484123025e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.52587890625e-05, -8.58306884765625e-05, -0.000232696533203125, -3.814697265625e-06, -0.001186370849609375, -5.14984130859375e-05, -1.33514404296875e-05, -8.96453857421875e-05, -2.09808349609375e-05, -1.5020257706055418e-05, -4.2796113120857626e-05, -2.968277840409428e-05, -1.9073486328125e-06, -4.57763671875e-05, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, 0.0, -4.57763671875e-05, -1.1920928244535389e-07, -0.0002155303955078125, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -4.375332832336426, 0.0, -7.82012939453125e-05, 0.0, -1.71661376953125e-05, -3.4332275390625e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -8.392333984375e-05, -1.9073486328125e-06, -0.000335693359375, -1.9073486328125e-06, -0.0036420822143554688, -1.9073486328125e-06, -0.0046176910400390625, -0.8245124816894531, -0.24976062774658203, -0.1881237030029297, -0.000171661376953125, -0.0010671615600585938, 0.0, -1.9073486328125e-06, 0.0, -0.000164031982421875, -1.9073486328125e-06, -0.00017547607421875, -5.7220458984375e-06, -1.3470649719238281e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -0.00041961669921875, -9.536697689327411e-06, -0.011716842651367188, -0.0003108978271484375, -8.392333984375e-05, -3.4332275390625e-05, -2.09808349609375e-05, -7.2479248046875e-05, -3.814697265625e-06, 0.0, -9.72747802734375e-05, -1.0728830375228426e-06, -0.0006263739196583629, -1.1444091796875e-05, -3.814697265625e-05, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-05, -0.0003452301025390625, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0007953643798828125, -0.00055694580078125, -1.71661376953125e-05], "choice_history": [93, 145, 230, 101, 125, "Holy", "Smite", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Smite", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "<EOS>", 27, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.draw()\n", "score": -5.829689309423131, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolySmite", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template14"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "draw", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -1.52587890625e-05, -4.38690185546875e-05, -0.00012969970703125, -1.311301275563892e-06, -4.8398287617601454e-05, -5.960462772236497e-07, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.3113015484123025e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.52587890625e-05, -8.58306884765625e-05, -0.000232696533203125, -3.814697265625e-06, -0.001186370849609375, -5.14984130859375e-05, -1.33514404296875e-05, -8.96453857421875e-05, -2.09808349609375e-05, -1.5020257706055418e-05, -4.2796113120857626e-05, -2.968277840409428e-05, -1.9073486328125e-06, -4.57763671875e-05, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, 0.0, -4.57763671875e-05, -1.1920928244535389e-07, -0.0002155303955078125, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -0.01271820068359375, 0.0, -0.0001811981201171875, 0.0, -4.00543212890625e-05, -0.0001430511474609375, -3.4332275390625e-05, -7.2479248046875e-05, -3.814697265625e-06, -1.71661376953125e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.0002651214599609375, -1.9073486328125e-06, -0.004301548004150391, -3.814697265625e-06, -0.0001983642578125, -4.76837158203125e-05, -0.0001811981201171875, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.000102996826171875, -1.9073486328125e-06, -0.00011444091796875, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -0.0006438493728637695, -5.722029527532868e-06, -2.924710273742676, -8.20159912109375e-05, -0.003131866455078125, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -6.103515625e-05, -1.5497195136049413e-06, -0.0002087221946567297, -1.71661376953125e-05, -3.62396240234375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -8.7738037109375e-05, -0.00019884106586687267, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0007877349853515625, -0.0002384185791015625, -1.9073486328125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.6169404983520508, -2.86102294921875e-05, -1.9073486328125e-06, -0.7026128768920898, -3.814697265625e-06, -0.13736248016357422, -0.13443505764007568, -2.503394853192731e-06, -0.28637415170669556, 0.0, -0.000370025634765625], "choice_history": [93, 145, 230, 101, 125, "Holy", "Smite", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Smite", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 102, 128, 18, 121, 15, 116, 15, 116, 32, "hero", "<EOS>", "draw", "<EOS>", 109]}, {"inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -6.385451103783723, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolySmite", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template14"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -1.52587890625e-05, -4.38690185546875e-05, -0.00012969970703125, -1.311301275563892e-06, -4.8398287617601454e-05, -5.960462772236497e-07, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.3113015484123025e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.52587890625e-05, -8.58306884765625e-05, -0.000232696533203125, -3.814697265625e-06, -0.001186370849609375, -5.14984130859375e-05, -1.33514404296875e-05, -8.96453857421875e-05, -2.09808349609375e-05, -1.5020257706055418e-05, -4.2796113120857626e-05, -2.968277840409428e-05, -1.9073486328125e-06, -4.57763671875e-05, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, 0.0, -4.57763671875e-05, -1.1920928244535389e-07, -0.0002155303955078125, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -0.01271820068359375, 0.0, -0.0001811981201171875, 0.0, -4.00543212890625e-05, -0.0001430511474609375, -3.4332275390625e-05, -7.2479248046875e-05, -3.814697265625e-06, -1.71661376953125e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.0002651214599609375, -1.9073486328125e-06, -6.271878719329834, -1.9073486328125e-06, -0.00077056884765625, -4.76837158203125e-05, -5.7220458984375e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0001201629638671875, -1.9073486328125e-06, -0.0001201629638671875, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -0.0006897449493408203, -5.006777428206988e-06, -0.09210777282714844, -0.000278472900390625, -8.20159912109375e-05, -3.24249267578125e-05, -2.47955322265625e-05, -9.72747802734375e-05, -5.7220458984375e-06, 0.0, -8.7738037109375e-05, -9.536738616588991e-07, -0.0007137325592339039, -1.1444091796875e-05, -3.4332275390625e-05, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -0.0005919933319091797, -1.1920928244535389e-07, -1.9073486328125e-06, -0.00081634521484375, -0.0004730224609375, -1.71661376953125e-05], "choice_history": [93, 145, 230, 101, 125, "Holy", "Smite", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Smite", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -6.9720719145728225, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolySmite", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template14"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -1.52587890625e-05, -4.38690185546875e-05, -0.00012969970703125, -1.311301275563892e-06, -4.8398287617601454e-05, -5.960462772236497e-07, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.3113015484123025e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.52587890625e-05, -8.58306884765625e-05, -0.000232696533203125, -3.814697265625e-06, -0.001186370849609375, -5.14984130859375e-05, -1.33514404296875e-05, -8.96453857421875e-05, -2.09808349609375e-05, -1.5020257706055418e-05, -4.2796113120857626e-05, -2.968277840409428e-05, -1.9073486328125e-06, -4.57763671875e-05, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, 0.0, -4.57763671875e-05, -1.1920928244535389e-07, -0.0002155303955078125, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -0.01271820068359375, 0.0, -0.0001811981201171875, 0.0, -4.00543212890625e-05, -0.0001430511474609375, -3.4332275390625e-05, -7.2479248046875e-05, -3.814697265625e-06, -1.71661376953125e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.0002651214599609375, -1.9073486328125e-06, -6.902652740478516, -0.0002288818359375, -1.33514404296875e-05, -9.34600830078125e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.000102996826171875, -3.814697265625e-06, -0.000110626220703125, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -0.0006153583526611328, -5.364403477869928e-06, -0.04876708984375, -0.0002384185791015625, -8.58306884765625e-05, -3.62396240234375e-05, -2.47955322265625e-05, -7.2479248046875e-05, -5.7220458984375e-06, 0.0, -8.96453857421875e-05, -9.536738616588991e-07, -0.0006634293822571635, -1.1444091796875e-05, -3.4332275390625e-05, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -0.000516057014465332, -1.1920928244535389e-07, -1.9073486328125e-06, -0.000804901123046875, -0.0004863739013671875, -1.71661376953125e-05], "choice_history": [93, 145, 230, 101, 125, "Holy", "Smite", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Smite", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, filter_func=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -7.126626177983937, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolySmite", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template14"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"_type": "Template12"}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -1.52587890625e-05, -4.38690185546875e-05, -0.00012969970703125, -1.311301275563892e-06, -4.8398287617601454e-05, -5.960462772236497e-07, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.3113015484123025e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.52587890625e-05, -8.58306884765625e-05, -0.000232696533203125, -3.814697265625e-06, -0.001186370849609375, -5.14984130859375e-05, -1.33514404296875e-05, -8.96453857421875e-05, -2.09808349609375e-05, -1.5020257706055418e-05, -4.2796113120857626e-05, -2.968277840409428e-05, -1.9073486328125e-06, -4.57763671875e-05, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, 0.0, -4.57763671875e-05, -1.1920928244535389e-07, -0.0002155303955078125, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -4.375332832336426, 0.0, -7.82012939453125e-05, 0.0, -1.71661376953125e-05, -3.4332275390625e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -8.392333984375e-05, -1.9073486328125e-06, -0.000335693359375, -1.9073486328125e-06, -0.0036420822143554688, -1.9073486328125e-06, -0.0046176910400390625, -1.710270881652832, -1.9073486328125e-06, -0.9823141098022461, -0.03337383270263672, -0.000293731689453125, -0.0022821426391601562, 0.0, -3.814697265625e-06, 0.0, -0.00034332275390625, -1.9073486328125e-06, -0.0004367828369140625, -7.62939453125e-06, -1.919269561767578e-05, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -0.00041663646697998047, -1.0847986231965479e-05, -0.006915092468261719, -0.0002689361572265625, -8.20159912109375e-05, -3.814697265625e-05, -1.9073486328125e-05, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -9.918212890625e-05, -1.0728830375228426e-06, -0.0005990719655528665, -1.33514404296875e-05, -3.62396240234375e-05, -1.52587890625e-05, -3.814697265625e-06, 0.0, -5.91278076171875e-05, -0.0003393888473510742, -1.1920928244535389e-07, -1.9073486328125e-06, -0.00080108642578125, -0.000560760498046875, -1.9073486328125e-05], "choice_history": [93, 145, 230, 101, 125, "Holy", "Smite", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Smite", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 27, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -7.462813423876625, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolySmite", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template14"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"_type": "Template12"}, "_type": "keyword", "arg": "overload"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -1.52587890625e-05, -4.38690185546875e-05, -0.00012969970703125, -1.311301275563892e-06, -4.8398287617601454e-05, -5.960462772236497e-07, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.3113015484123025e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.52587890625e-05, -8.58306884765625e-05, -0.000232696533203125, -3.814697265625e-06, -0.001186370849609375, -5.14984130859375e-05, -1.33514404296875e-05, -8.96453857421875e-05, -2.09808349609375e-05, -1.5020257706055418e-05, -4.2796113120857626e-05, -2.968277840409428e-05, -1.9073486328125e-06, -4.57763671875e-05, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, 0.0, -4.57763671875e-05, -1.1920928244535389e-07, -0.0002155303955078125, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -4.375332832336426, 0.0, -7.82012939453125e-05, 0.0, -1.71661376953125e-05, -3.4332275390625e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -8.392333984375e-05, -1.9073486328125e-06, -0.000335693359375, -1.9073486328125e-06, -0.0036420822143554688, -1.9073486328125e-06, -0.0046176910400390625, -2.8652820587158203, 0.0, -0.11269569396972656, -0.07178020477294922, -0.000255584716796875, -0.013896942138671875, 0.0, -5.7220458984375e-06, 0.0, -0.0004405975341796875, -3.814697265625e-06, -0.000431060791015625, -7.62939453125e-06, -2.491474151611328e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-05, -0.0003631114959716797, -1.2040065485052764e-05, -0.007668495178222656, -0.0002899169921875, -8.0108642578125e-05, -3.4332275390625e-05, -1.9073486328125e-05, -6.103515625e-05, -5.7220458984375e-06, 0.0, -9.918212890625e-05, -1.0728830375228426e-06, -0.0005983591545373201, -1.1444091796875e-05, -4.00543212890625e-05, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -5.91278076171875e-05, -0.00034177303314208984, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0007839202880859375, -0.0005702972412109375, -1.9073486328125e-05], "choice_history": [93, 145, 230, 101, 125, "Holy", "Smite", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Smite", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "overload", "<EOS>", 27, 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 69, 74, 109]}, {"inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, **2)\n", "score": -7.545649050505567, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "HolySmite", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template14"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}, {"value": {"_type": "Template12"}, "_type": "keyword", "arg": ""}]}}]}, {"_type": "Template13_stmt_seq"}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -1.52587890625e-05, -4.38690185546875e-05, -0.00012969970703125, -1.311301275563892e-06, -4.8398287617601454e-05, -5.960462772236497e-07, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.3113015484123025e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.52587890625e-05, -8.58306884765625e-05, -0.000232696533203125, -3.814697265625e-06, -0.001186370849609375, -5.14984130859375e-05, -1.33514404296875e-05, -8.96453857421875e-05, -2.09808349609375e-05, -1.5020257706055418e-05, -4.2796113120857626e-05, -2.968277840409428e-05, -1.9073486328125e-06, -4.57763671875e-05, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, 0.0, -4.57763671875e-05, -1.1920928244535389e-07, -0.0002155303955078125, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -4.375332832336426, 0.0, -7.82012939453125e-05, 0.0, -1.71661376953125e-05, -3.4332275390625e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -8.392333984375e-05, -1.9073486328125e-06, -0.000335693359375, -1.9073486328125e-06, -0.0036420822143554688, -1.9073486328125e-06, -0.0046176910400390625, -0.8245124816894531, -0.24976062774658203, -2.083998680114746, -0.00049591064453125], "choice_history": [93, 145, 230, 101, 125, "Holy", "Smite", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Holy", " ", "Smite", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 205, "<EOS>", 27, 109, 109]}, {"inferred_code": "", "score": -20.46792984008789, "model_output": {"_type": "Module", "body": []}, "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -20.46790885925293], "choice_history": [93, 145, 228]}, {"inferred_code": "super().use(player, game)\n", "score": -21.392717361450195, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -1.52587890625e-05, -14.017176628112793, -7.375504493713379], "choice_history": [93, 145, 230, 108, 109]}], "index": 51}
{"beams": [{"inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(Taunt())]),\n            MinionSelector(IsType(MINION_TYPE.BEAST), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -1.1720604105009826, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Houndmaster", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template20"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"_type": "Template25"}, "args": [{"_type": "List", "elts": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template12"}], "_type": "Call"}], "_type": "Call"}, {"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Taunt", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}, {"_type": "Template15_expr_seq"}]}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}], "_type": "Call", "keywords": [{"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 3, "hole0": 4, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-05, -3.4332275390625e-05, -2.09808349609375e-05, -5.7220458984375e-06, -7.033344445517287e-05, -2.920608312706463e-05, -1.9073486328125e-06, -7.62939453125e-05, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -2.3841830625315197e-06, -1.9073486328125e-06, 0.0, -0.00028228759765625, -2.288818359375e-05, -4.9591064453125e-05, -0.0001010894775390625, -4.00543212890625e-05, -1.52587890625e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -3.600120544433594e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.1920928244535389e-07, -0.0003737211227416992, 0.0, -0.008312225341796875, 0.0, -4.38690185546875e-05, 0.0, -7.62939453125e-06, 0.0, -0.0016117095947265625, -1.9073486328125e-06, -0.0007572174072265625, -3.814697265625e-06, -0.00044465065002441406, 0.0, -1.9073486328125e-06, 0.0, -0.09973335266113281, -9.5367431640625e-06, -8.20159912109375e-05, 0.0, -0.0050040483474731445, 0.0, -0.00079345703125, -0.05089282989501953, 0.0, -0.02015209197998047, -3.814697265625e-06, -0.000213623046875, -3.814697265625e-05, -0.000812530517578125, -5.7220458984375e-05, -0.0002346038818359375, -1.52587890625e-05, -0.00261688232421875, -3.814697265625e-05, -0.03383159637451172, -0.0001220703125, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.000194549560546875, 0.0, -7.62939453125e-06, -0.0001239776611328125, -1.52587890625e-05, -0.6846723556518555, -2.09808349609375e-05, -0.00090789794921875, -6.103515625e-05, -1.1444091796875e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.014058113098144531, -1.9073486328125e-06, -5.14984130859375e-05, -0.07646560668945312, -1.9073486328125e-06, -0.00152068049646914, -8.559139678254724e-05, -0.0002536773681640625, -0.006340980529785156, -3.0517578125e-05, -0.1131734848022461, -0.000637054443359375, -3.62396240234375e-05, -0.0009326934814453125, -0.000102996826171875, -0.0005016326904296875, -9.5367431640625e-05, -3.814697265625e-06, 0.0, -8.96453857421875e-05, 0.0, -4.291534423828125e-06, -3.814697265625e-06, -0.03800094127655029, -1.9073486328125e-06, -0.0013980865478515625, -3.814697265625e-06, -0.0020904541015625, -5.7220458984375e-06, -0.001323699951171875, -3.814697265625e-06, -0.0002129077911376953, -0.0004121065139770508, -6.4849853515625e-05, -1.33514404296875e-05, 0.0, -4.1961669921875e-05, 0.0, 0.0, -3.814697265625e-06, -0.0001430511474609375, -3.24249267578125e-05, -3.814697265625e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -4.38690185546875e-05, -8.392333984375e-05, -0.000325559638440609, -1.0132780516869389e-05, -0.0001001311102299951, -3.099436753473128e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Houndmaster", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Houndmaster", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 37, 216, 61, 141, 219, 58, 123, 23, 146, "Buff", "<EOS>", 216, 58, 123, 40, 216, 69, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Taunt", "<EOS>", 71, 71, 58, 124, 38, 216, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 224, 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "4", "<EOS>", "3", "<EOS>", 109]}, {"inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -1.4834018676165144, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Houndmaster", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template20"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"_type": "Template25"}, "args": [{"_type": "List", "elts": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"func": {"id": "ChangeHealth", "_type": "Name"}, "args": [{"_type": "Template12"}], "_type": "Call"}], "_type": "Call"}, {"func": {"id": "Buff", "_type": "Name"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template12"}], "_type": "Call"}], "_type": "Call"}, {"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Taunt", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}], "_type": "Call", "keywords": [{"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 3, "hole0": 4, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-05, -3.4332275390625e-05, -2.09808349609375e-05, -5.7220458984375e-06, -7.033344445517287e-05, -2.920608312706463e-05, -1.9073486328125e-06, -7.62939453125e-05, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -2.3841830625315197e-06, -1.9073486328125e-06, 0.0, -0.00028228759765625, -2.288818359375e-05, -4.9591064453125e-05, -0.0001010894775390625, -4.00543212890625e-05, -1.52587890625e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -3.600120544433594e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.1920928244535389e-07, -0.0003737211227416992, 0.0, -0.008312225341796875, 0.0, -4.38690185546875e-05, 0.0, -7.62939453125e-06, 0.0, -0.0016117095947265625, -1.9073486328125e-06, -0.0007572174072265625, -3.814697265625e-06, -0.00044465065002441406, 0.0, -1.9073486328125e-06, 0.0, -0.09973335266113281, -9.5367431640625e-06, -8.20159912109375e-05, 0.0, -0.0050040483474731445, 0.0, -0.00079345703125, -0.05089282989501953, 0.0, -0.02015209197998047, -3.814697265625e-06, -0.000213623046875, -3.814697265625e-05, -0.000812530517578125, -5.7220458984375e-05, -0.0002346038818359375, -1.52587890625e-05, -0.00261688232421875, -3.814697265625e-05, -0.03383159637451172, -0.0001220703125, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.000194549560546875, 0.0, -7.62939453125e-06, -0.0001239776611328125, -1.52587890625e-05, -0.7030782699584961, -0.000354766845703125, -0.00048553929082117975, -6.92605972290039e-05, 0.0, -1.9073486328125e-06, -0.000667572021484375, -1.52587890625e-05, -4.57763671875e-05, -8.20159912109375e-05, -1.9073486328125e-06, -0.0020694732666015625, 0.0, -1.9073486328125e-06, -0.2793903350830078, -0.000286102294921875, -0.01906585693359375, -8.0108642578125e-05, -0.000797271728515625, -0.004986763000488281, -0.000263214111328125, -6.866455078125e-05, -1.9073486328125e-05, -0.16785812377929688, -5.7220458984375e-06, -0.0001544952392578125, -0.014469146728515625, -5.7220458984375e-06, -0.0007158379885368049, -0.000160332303494215, -0.000308990478515625, -5.7220458984375e-05, -0.012226104736328125, -0.00092315673828125, -2.6702880859375e-05, -0.000263214111328125, -0.0001277923583984375, -0.0003986358642578125, -0.0001239776611328125, -3.814697265625e-06, 0.0, -8.96453857421875e-05, 0.0, -8.344650268554688e-06, -3.814697265625e-06, -0.03982245922088623, -1.9073486328125e-06, -0.0014057159423828125, -3.814697265625e-06, -0.0018482208251953125, -3.814697265625e-06, -0.0013217926025390625, -3.814697265625e-06, -0.00020885467529296875, -0.0004292726516723633, -6.103515625e-05, -1.52587890625e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, 0.0, -3.814697265625e-06, -0.0001430511474609375, -3.4332275390625e-05, -4.9591064453125e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -9.918212890625e-05, -5.7220458984375e-05, -0.0003217450575903058, -1.1801701475633308e-05, -0.0001273077941732481, -9.536714060232043e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Houndmaster", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Houndmaster", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 37, 216, 61, 141, 219, 58, 123, 23, 146, "Buff", "<EOS>", 216, 58, 123, 23, 146, "Change", "Health", "<EOS>", 216, 69, 58, 123, 23, 146, "Buff", "<EOS>", 216, 58, 123, 40, 216, 69, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Taunt", "<EOS>", 71, 58, 124, 38, 216, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 224, 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "4", "<EOS>", "3", "<EOS>", 109]}, {"inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(Taunt())]),\n            MinionSelector(IsType(MINION_TYPE.BEAST), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -2.56431019497699, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Houndmaster", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template20"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"_type": "Template25"}, "args": [{"_type": "List", "elts": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"func": {"id": "ChangeHealth", "_type": "Name"}, "args": [{"_type": "Template12"}], "_type": "Call"}], "_type": "Call"}, {"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Taunt", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}, {"_type": "Template15_expr_seq"}]}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}], "_type": "Call", "keywords": [{"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 3, "hole0": 4, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-05, -3.4332275390625e-05, -2.09808349609375e-05, -5.7220458984375e-06, -7.033344445517287e-05, -2.920608312706463e-05, -1.9073486328125e-06, -7.62939453125e-05, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -2.3841830625315197e-06, -1.9073486328125e-06, 0.0, -0.00028228759765625, -2.288818359375e-05, -4.9591064453125e-05, -0.0001010894775390625, -4.00543212890625e-05, -1.52587890625e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -3.600120544433594e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.1920928244535389e-07, -0.0003737211227416992, 0.0, -0.008312225341796875, 0.0, -4.38690185546875e-05, 0.0, -7.62939453125e-06, 0.0, -0.0016117095947265625, -1.9073486328125e-06, -0.0007572174072265625, -3.814697265625e-06, -0.00044465065002441406, 0.0, -1.9073486328125e-06, 0.0, -0.09973335266113281, -9.5367431640625e-06, -8.20159912109375e-05, 0.0, -0.0050040483474731445, 0.0, -0.00079345703125, -0.05089282989501953, 0.0, -0.02015209197998047, -3.814697265625e-06, -0.000213623046875, -3.814697265625e-05, -0.000812530517578125, -5.7220458984375e-05, -0.0002346038818359375, -1.52587890625e-05, -0.00261688232421875, -3.814697265625e-05, -0.03383159637451172, -0.0001220703125, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.000194549560546875, 0.0, -7.62939453125e-06, -0.0001239776611328125, -1.52587890625e-05, -0.7030782699584961, -0.000354766845703125, -0.00048553929082117975, -6.92605972290039e-05, 0.0, -1.9073486328125e-06, -0.000667572021484375, -1.52587890625e-05, -4.57763671875e-05, -8.20159912109375e-05, -1.9073486328125e-06, -0.0020694732666015625, 0.0, -1.9073486328125e-06, -1.4205799102783203, -5.7220458984375e-06, -0.0011983001604676247, -0.00013399070303421468, -0.000335693359375, -0.012015342712402344, -3.62396240234375e-05, -0.1482067108154297, -0.00035858154296875, -3.24249267578125e-05, -0.00091552734375, -9.72747802734375e-05, -0.0004482269287109375, -8.20159912109375e-05, -3.814697265625e-06, 0.0, -9.1552734375e-05, 0.0, -4.291534423828125e-06, -3.814697265625e-06, -0.03911292552947998, -1.9073486328125e-06, -0.0012950897216796875, -3.814697265625e-06, -0.0021209716796875, -5.7220458984375e-06, -0.001194000244140625, -3.814697265625e-06, -0.0002053976058959961, -0.0004311800003051758, -6.866455078125e-05, -1.1444091796875e-05, 0.0, -4.38690185546875e-05, 0.0, 0.0, -3.814697265625e-06, -0.0001430511474609375, -3.24249267578125e-05, -3.24249267578125e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -4.38690185546875e-05, -8.392333984375e-05, -0.00032758619636297226, -1.0132780516869389e-05, -9.917752322508022e-05, -3.099436753473128e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Houndmaster", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Houndmaster", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 37, 216, 61, 141, 219, 58, 123, 23, 146, "Buff", "<EOS>", 216, 58, 123, 23, 146, "Change", "Health", "<EOS>", 216, 69, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Taunt", "<EOS>", 71, 71, 58, 124, 38, 216, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 224, 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "4", "<EOS>", "3", "<EOS>", 109]}, {"inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -3.842349844931043, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Houndmaster", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template20"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"_type": "Template25"}, "args": [{"_type": "List", "elts": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template12"}], "_type": "Call"}], "_type": "Call"}, {"func": {"id": "Buff", "_type": "Name"}, "args": [{"func": {"id": "ChangeHealth", "_type": "Name"}, "args": [{"_type": "Template12"}], "_type": "Call"}], "_type": "Call"}, {"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Taunt", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}], "_type": "Call", "keywords": [{"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 3, "hole0": 4, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-05, -3.4332275390625e-05, -2.09808349609375e-05, -5.7220458984375e-06, -7.033344445517287e-05, -2.920608312706463e-05, -1.9073486328125e-06, -7.62939453125e-05, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -2.3841830625315197e-06, -1.9073486328125e-06, 0.0, -0.00028228759765625, -2.288818359375e-05, -4.9591064453125e-05, -0.0001010894775390625, -4.00543212890625e-05, -1.52587890625e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -3.600120544433594e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.1920928244535389e-07, -0.0003737211227416992, 0.0, -0.008312225341796875, 0.0, -4.38690185546875e-05, 0.0, -7.62939453125e-06, 0.0, -0.0016117095947265625, -1.9073486328125e-06, -0.0007572174072265625, -3.814697265625e-06, -0.00044465065002441406, 0.0, -1.9073486328125e-06, 0.0, -0.09973335266113281, -9.5367431640625e-06, -8.20159912109375e-05, 0.0, -0.0050040483474731445, 0.0, -0.00079345703125, -0.05089282989501953, 0.0, -0.02015209197998047, -3.814697265625e-06, -0.000213623046875, -3.814697265625e-05, -0.000812530517578125, -5.7220458984375e-05, -0.0002346038818359375, -1.52587890625e-05, -0.00261688232421875, -3.814697265625e-05, -0.03383159637451172, -0.0001220703125, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.000194549560546875, 0.0, -7.62939453125e-06, -0.0001239776611328125, -1.52587890625e-05, -0.6846723556518555, -2.09808349609375e-05, -0.00090789794921875, -6.103515625e-05, -1.1444091796875e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.014058113098144531, -1.9073486328125e-06, -5.14984130859375e-05, -2.61397647857666, -5.14984130859375e-05, -0.02747344970703125, -0.0006866455078125, -0.004654525779187679, -8.189676736947149e-05, -2.0265579223632812e-06, -3.814697265625e-06, -0.0001125335693359375, -0.001148223876953125, -8.58306884765625e-05, -2.288818359375e-05, -3.814697265625e-06, -0.0047702789306640625, -1.9073486328125e-06, -3.814697265625e-06, -0.19990158081054688, -5.7220458984375e-06, -0.0008904628921300173, -0.0001423344947397709, -0.0003070831298828125, -6.103515625e-05, -0.013275146484375, -0.0009212493896484375, -2.47955322265625e-05, -0.0002765655517578125, -0.0001049041748046875, -0.000377655029296875, -0.0001049041748046875, -3.814697265625e-06, 0.0, -9.34600830078125e-05, 0.0, -8.344650268554688e-06, -3.814697265625e-06, -0.039173007011413574, -1.9073486328125e-06, -0.00152587890625, -3.814697265625e-06, -0.001804351806640625, -3.814697265625e-06, -0.0011882781982421875, -3.814697265625e-06, -0.00020706653594970703, -0.0004483461380004883, -6.29425048828125e-05, -1.52587890625e-05, -1.9073486328125e-06, -4.57763671875e-05, 0.0, 0.0, -3.814697265625e-06, -0.00014495849609375, -3.4332275390625e-05, -4.9591064453125e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -9.34600830078125e-05, -5.7220458984375e-05, -0.00032436754554510117, -1.1682492186082527e-05, -0.00012873811647295952, -8.463837730232626e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Houndmaster", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Houndmaster", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 37, 216, 61, 141, 219, 58, 123, 23, 146, "Buff", "<EOS>", 216, 58, 123, 40, 216, 69, 58, 123, 23, 146, "Buff", "<EOS>", 216, 58, 123, 23, 146, "Change", "Health", "<EOS>", 216, 69, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Taunt", "<EOS>", 71, 58, 124, 38, 216, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 224, 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "4", "<EOS>", "3", "<EOS>", 109]}, {"inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(Taunt())]),\n            MinionSelector(IsType(MINION_TYPE.BEAST))))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -3.934692297004169, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Houndmaster", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template20"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"_type": "Template25"}, "args": [{"_type": "List", "elts": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template12"}], "_type": "Call"}], "_type": "Call"}, {"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Taunt", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}, {"_type": "Template15_expr_seq"}]}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 3, "hole0": 4, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-05, -3.4332275390625e-05, -2.09808349609375e-05, -5.7220458984375e-06, -7.033344445517287e-05, -2.920608312706463e-05, -1.9073486328125e-06, -7.62939453125e-05, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -2.3841830625315197e-06, -1.9073486328125e-06, 0.0, -0.00028228759765625, -2.288818359375e-05, -4.9591064453125e-05, -0.0001010894775390625, -4.00543212890625e-05, -1.52587890625e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -3.600120544433594e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.1920928244535389e-07, -0.0003737211227416992, 0.0, -0.008312225341796875, 0.0, -4.38690185546875e-05, 0.0, -7.62939453125e-06, 0.0, -0.0016117095947265625, -1.9073486328125e-06, -0.0007572174072265625, -3.814697265625e-06, -0.00044465065002441406, 0.0, -1.9073486328125e-06, 0.0, -0.09973335266113281, -9.5367431640625e-06, -8.20159912109375e-05, 0.0, -0.0050040483474731445, 0.0, -0.00079345703125, -0.05089282989501953, 0.0, -0.02015209197998047, -3.814697265625e-06, -0.000213623046875, -3.814697265625e-05, -0.000812530517578125, -5.7220458984375e-05, -0.0002346038818359375, -1.52587890625e-05, -0.00261688232421875, -3.814697265625e-05, -0.03383159637451172, -0.0001220703125, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.000194549560546875, 0.0, -7.62939453125e-06, -0.0001239776611328125, -1.52587890625e-05, -0.6846723556518555, -2.09808349609375e-05, -0.00090789794921875, -6.103515625e-05, -1.1444091796875e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.014058113098144531, -1.9073486328125e-06, -5.14984130859375e-05, -0.07646560668945312, -1.9073486328125e-06, -0.00152068049646914, -8.559139678254724e-05, -0.0002536773681640625, -0.006340980529785156, -3.0517578125e-05, -2.3635644912719727, -0.01114654541015625, -0.5041751861572266, -0.009967803955078125, -8.20159912109375e-05, -0.0013437271118164062, -5.91278076171875e-05, -9.5367431640625e-06, 0.0, -3.4332275390625e-05, 0.0, -4.172325134277344e-06, -3.814697265625e-06, -0.0303804874420166, 0.0, 0.0, 0.0, -0.00063323974609375, 0.0, 0.0, -3.814697265625e-06, -8.7738037109375e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.0003376007080078125, -6.866455078125e-05, -0.0005142639856785536, -5.364412118069595e-06, -0.0001226589665748179, -3.2186455882765586e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Houndmaster", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Houndmaster", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 37, 216, 61, 141, 219, 58, 123, 23, 146, "Buff", "<EOS>", 216, 58, 123, 40, 216, 69, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Taunt", "<EOS>", 71, 71, 58, 123, 38, 216, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "4", "<EOS>", "3", "<EOS>", 109]}, {"inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            MinionPlaced(2), Buff(Taunt())]), MinionSelector(IsType(\n            MINION_TYPE.BEAST), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -4.231477698849169, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Houndmaster", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template20"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"_type": "Template25"}, "args": [{"_type": "List", "elts": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"func": {"id": "ChangeHealth", "_type": "Name"}, "args": [{"_type": "Template12"}], "_type": "Call"}], "_type": "Call"}, {"func": {"id": "Buff", "_type": "Name"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template12"}], "_type": "Call"}], "_type": "Call"}, {"func": {"id": "MinionPlaced", "_type": "Name"}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Taunt", "_type": "Template5"}], "_type": "Call"}]}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}], "_type": "Call", "keywords": [{"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 3, "hole0": 4, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-05, -3.4332275390625e-05, -2.09808349609375e-05, -5.7220458984375e-06, -7.033344445517287e-05, -2.920608312706463e-05, -1.9073486328125e-06, -7.62939453125e-05, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -2.3841830625315197e-06, -1.9073486328125e-06, 0.0, -0.00028228759765625, -2.288818359375e-05, -4.9591064453125e-05, -0.0001010894775390625, -4.00543212890625e-05, -1.52587890625e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -3.600120544433594e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.1920928244535389e-07, -0.0003737211227416992, 0.0, -0.008312225341796875, 0.0, -4.38690185546875e-05, 0.0, -7.62939453125e-06, 0.0, -0.0016117095947265625, -1.9073486328125e-06, -0.0007572174072265625, -3.814697265625e-06, -0.00044465065002441406, 0.0, -1.9073486328125e-06, 0.0, -0.09973335266113281, -9.5367431640625e-06, -8.20159912109375e-05, 0.0, -0.0050040483474731445, 0.0, -0.00079345703125, -0.05089282989501953, 0.0, -0.02015209197998047, -3.814697265625e-06, -0.000213623046875, -3.814697265625e-05, -0.000812530517578125, -5.7220458984375e-05, -0.0002346038818359375, -1.52587890625e-05, -0.00261688232421875, -3.814697265625e-05, -0.03383159637451172, -0.0001220703125, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.000194549560546875, 0.0, -7.62939453125e-06, -0.0001239776611328125, -1.52587890625e-05, -0.7030782699584961, -0.000354766845703125, -0.00048553929082117975, -6.92605972290039e-05, 0.0, -1.9073486328125e-06, -0.000667572021484375, -1.52587890625e-05, -4.57763671875e-05, -8.20159912109375e-05, -1.9073486328125e-06, -0.0020694732666015625, 0.0, -1.9073486328125e-06, -0.2793903350830078, -0.000286102294921875, -0.01906585693359375, -8.0108642578125e-05, -0.000797271728515625, -0.004986763000488281, -0.000263214111328125, -6.866455078125e-05, -1.9073486328125e-05, -1.9206161499023438, -0.6426057815551758, -0.0001239776611328125, -0.0009212493896484375, -0.08887672424316406, -0.018018722534179688, -0.00072479248046875, -0.0005474090576171875, -3.814697265625e-06, -0.04600644111633301, -9.5367431640625e-06, -3.62396240234375e-05, -0.11447906494140625, -3.814697265625e-06, -0.0002078809484373778, -0.00033293853630311787, -0.0007152557373046875, -0.0975494384765625, -0.002689361572265625, -0.0004405975341796875, -0.00012969970703125, -0.000171661376953125, -0.0006275177001953125, -5.340576171875e-05, -7.62939453125e-06, 0.0, -0.0001468658447265625, 0.0, -6.79492904964718e-06, -7.62939453125e-06, -0.05001246929168701, -1.9073486328125e-06, -0.0005970001220703125, -3.814697265625e-06, -0.002277374267578125, -3.814697265625e-06, -0.0013408660888671875, -5.7220458984375e-06, -0.0002124309539794922, -0.0004769563674926758, -6.103515625e-05, -1.52587890625e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, 0.0, -3.814697265625e-06, -0.0001430511474609375, -3.4332275390625e-05, -4.9591064453125e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -0.00016021728515625, -6.4849853515625e-05, -0.0003350970218889415, -1.5497176718781702e-05, -0.00010275364184053615, -1.1920878932869527e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Houndmaster", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Houndmaster", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 37, 216, 61, 141, 219, 58, 123, 23, 146, "Buff", "<EOS>", 216, 58, 123, 23, 146, "Change", "Health", "<EOS>", 216, 69, 58, 123, 23, 146, "Buff", "<EOS>", 216, 58, 123, 40, 216, 69, 58, 123, 23, 146, "Minion", "Placed", "<EOS>", 216, 69, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Taunt", "<EOS>", 58, 124, 38, 216, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 224, 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "4", "<EOS>", "3", "<EOS>", 109]}, {"inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(Taunt())]),\n            MinionSelector(IsType(MINION_TYPE.BEAST), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -4.513700157776604, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Houndmaster", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template20"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"_type": "Template25"}, "args": [{"_type": "List", "elts": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template12"}], "_type": "Call"}], "_type": "Call"}, {"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Taunt", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}], "_type": "Call", "keywords": [{"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 3, "hole0": 4, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-05, -3.4332275390625e-05, -2.09808349609375e-05, -5.7220458984375e-06, -7.033344445517287e-05, -2.920608312706463e-05, -1.9073486328125e-06, -7.62939453125e-05, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -2.3841830625315197e-06, -1.9073486328125e-06, 0.0, -0.00028228759765625, -2.288818359375e-05, -4.9591064453125e-05, -0.0001010894775390625, -4.00543212890625e-05, -1.52587890625e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -3.600120544433594e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.1920928244535389e-07, -0.0003737211227416992, 0.0, -0.008312225341796875, 0.0, -4.38690185546875e-05, 0.0, -7.62939453125e-06, 0.0, -0.0016117095947265625, -1.9073486328125e-06, -0.0007572174072265625, -3.814697265625e-06, -0.00044465065002441406, 0.0, -1.9073486328125e-06, 0.0, -0.09973335266113281, -9.5367431640625e-06, -8.20159912109375e-05, 0.0, -0.0050040483474731445, 0.0, -0.00079345703125, -0.05089282989501953, 0.0, -0.02015209197998047, -3.814697265625e-06, -0.000213623046875, -3.814697265625e-05, -0.000812530517578125, -5.7220458984375e-05, -0.0002346038818359375, -1.52587890625e-05, -0.00261688232421875, -3.814697265625e-05, -3.4361276626586914, -1.1444091796875e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -0.00023651123046875, 0.0, -3.0517578125e-05, -0.000255584716796875, -1.33514404296875e-05, -0.209075927734375, -1.1444091796875e-05, -0.001171112060546875, -0.00196075439453125, -3.814697265625e-05, -5.7220458984375e-05, 0.0, -0.011311531066894531, 0.0, -5.7220458984375e-05, -0.5500640869140625, -7.62939453125e-06, -0.0015980463940650225, -0.00024031649809330702, -0.0001125335693359375, -1.33514404296875e-05, -0.0620574951171875, -0.001216888427734375, -2.288818359375e-05, -0.0004787445068359375, -8.96453857421875e-05, -0.000423431396484375, -0.0001010894775390625, -5.7220458984375e-06, 0.0, -9.1552734375e-05, 0.0, -8.106231689453125e-06, -3.814697265625e-06, -0.03690147399902344, -1.9073486328125e-06, -0.0020389556884765625, -3.814697265625e-06, -0.0017299652099609375, -3.814697265625e-06, -0.0009899139404296875, -5.7220458984375e-06, -0.00020015239715576172, -0.0006638765335083008, -7.43865966796875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, 0.0, -1.9073486328125e-06, -0.0001506805419921875, -4.38690185546875e-05, -2.86102294921875e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -4.38690185546875e-05, -8.58306884765625e-05, -0.0003324735735077411, -1.0013571227318607e-05, -0.00010203826968790963, -3.099436753473128e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Houndmaster", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Houndmaster", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 37, 216, 61, 141, 218, 58, 123, 23, 146, "Buff", "<EOS>", 216, 58, 123, 40, 216, 69, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Taunt", "<EOS>", 71, 58, 124, 38, 216, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 224, 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "4", "<EOS>", "3", "<EOS>", 109]}, {"inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(Taunt())]),\n            MinionSelector(IsType(MINION_TYPE.BEAST))))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -4.831169363093515, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Houndmaster", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template20"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"_type": "Template25"}, "args": [{"_type": "List", "elts": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"func": {"id": "ChangeHealth", "_type": "Name"}, "args": [{"_type": "Template12"}], "_type": "Call"}], "_type": "Call"}, {"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Taunt", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}, {"_type": "Template15_expr_seq"}]}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 3, "hole0": 4, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-05, -3.4332275390625e-05, -2.09808349609375e-05, -5.7220458984375e-06, -7.033344445517287e-05, -2.920608312706463e-05, -1.9073486328125e-06, -7.62939453125e-05, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -2.3841830625315197e-06, -1.9073486328125e-06, 0.0, -0.00028228759765625, -2.288818359375e-05, -4.9591064453125e-05, -0.0001010894775390625, -4.00543212890625e-05, -1.52587890625e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -3.600120544433594e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.1920928244535389e-07, -0.0003737211227416992, 0.0, -0.008312225341796875, 0.0, -4.38690185546875e-05, 0.0, -7.62939453125e-06, 0.0, -0.0016117095947265625, -1.9073486328125e-06, -0.0007572174072265625, -3.814697265625e-06, -0.00044465065002441406, 0.0, -1.9073486328125e-06, 0.0, -0.09973335266113281, -9.5367431640625e-06, -8.20159912109375e-05, 0.0, -0.0050040483474731445, 0.0, -0.00079345703125, -0.05089282989501953, 0.0, -0.02015209197998047, -3.814697265625e-06, -0.000213623046875, -3.814697265625e-05, -0.000812530517578125, -5.7220458984375e-05, -0.0002346038818359375, -1.52587890625e-05, -0.00261688232421875, -3.814697265625e-05, -0.03383159637451172, -0.0001220703125, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.000194549560546875, 0.0, -7.62939453125e-06, -0.0001239776611328125, -1.52587890625e-05, -0.7030782699584961, -0.000354766845703125, -0.00048553929082117975, -6.92605972290039e-05, 0.0, -1.9073486328125e-06, -0.000667572021484375, -1.52587890625e-05, -4.57763671875e-05, -8.20159912109375e-05, -1.9073486328125e-06, -0.0020694732666015625, 0.0, -1.9073486328125e-06, -1.4205799102783203, -5.7220458984375e-06, -0.0011983001604676247, -0.00013399070303421468, -0.000335693359375, -0.012015342712402344, -3.62396240234375e-05, -2.083160400390625, -0.0030078887939453125, -0.3330364227294922, -0.011066436767578125, -7.82012939453125e-05, -0.0012693405151367188, -5.7220458984375e-05, -9.5367431640625e-06, 0.0, -4.00543212890625e-05, 0.0, -6.079673767089844e-06, -3.814697265625e-06, -0.028902411460876465, -1.9073486328125e-06, 0.0, 0.0, -0.0006198883056640625, 0.0, 0.0, -3.814697265625e-06, -8.7738037109375e-05, -9.5367431640625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.00029754638671875, -6.67572021484375e-05, -0.0005196288111619651, -5.364412118069595e-06, -0.00011693759734043851, -3.3378546504536644e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Houndmaster", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Houndmaster", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 37, 216, 61, 141, 219, 58, 123, 23, 146, "Buff", "<EOS>", 216, 58, 123, 23, 146, "Change", "Health", "<EOS>", 216, 69, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Taunt", "<EOS>", 71, 71, 58, 123, 38, 216, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "4", "<EOS>", "3", "<EOS>", 109]}, {"inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, combo=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(Taunt())]),\n            MinionSelector(IsType(MINION_TYPE.BEAST), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -4.960436598588551, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Houndmaster", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template20"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"_type": "Template25"}, "args": [{"_type": "List", "elts": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template12"}], "_type": "Call"}], "_type": "Call"}, {"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Taunt", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}, {"_type": "Template15_expr_seq"}]}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}], "_type": "Call", "keywords": [{"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "combo"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 3, "hole0": 4, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-05, -3.4332275390625e-05, -2.09808349609375e-05, -5.7220458984375e-06, -7.033344445517287e-05, -2.920608312706463e-05, -1.9073486328125e-06, -7.62939453125e-05, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -2.3841830625315197e-06, -1.9073486328125e-06, 0.0, -0.00028228759765625, -2.288818359375e-05, -4.9591064453125e-05, -0.0001010894775390625, -4.00543212890625e-05, -1.52587890625e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -3.600120544433594e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.1920928244535389e-07, -0.0003737211227416992, 0.0, -0.008312225341796875, 0.0, -4.38690185546875e-05, 0.0, -7.62939453125e-06, 0.0, -0.0016117095947265625, -1.9073486328125e-06, -0.0007572174072265625, -3.814697265625e-06, -0.00044465065002441406, 0.0, -1.9073486328125e-06, 0.0, -0.09973335266113281, -9.5367431640625e-06, -8.20159912109375e-05, 0.0, -0.0050040483474731445, 0.0, -0.00079345703125, -3.8812971115112305, 0.0, -0.012972831726074219, -7.62939453125e-06, -0.0003070831298828125, -2.6702880859375e-05, -0.0006256103515625, -4.1961669921875e-05, -0.0004062652587890625, -3.814697265625e-05, -0.0038700103759765625, -3.4332275390625e-05, -0.03661060333251953, -0.00012969970703125, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001926422119140625, 0.0, -9.5367431640625e-06, -0.000141143798828125, -1.52587890625e-05, -0.6403770446777344, -2.09808349609375e-05, -0.0009441375732421875, -6.67572021484375e-05, -1.1444091796875e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.013401985168457031, -1.9073486328125e-06, -4.38690185546875e-05, -0.09032630920410156, -1.9073486328125e-06, -0.001458429149352014, -8.618750143796206e-05, -0.0002574920654296875, -0.006176948547363281, -3.0517578125e-05, -0.10551166534423828, -0.000682830810546875, -3.62396240234375e-05, -0.00090789794921875, -9.918212890625e-05, -0.0005130767822265625, -9.5367431640625e-05, -3.814697265625e-06, 0.0, -9.1552734375e-05, 0.0, -4.291534423828125e-06, -3.814697265625e-06, -0.037941813468933105, -1.9073486328125e-06, -0.0014133453369140625, -3.814697265625e-06, -0.002063751220703125, -5.7220458984375e-06, -0.0013179779052734375, -3.814697265625e-06, -0.0002129077911376953, -0.0004140138626098633, -6.4849853515625e-05, -1.33514404296875e-05, 0.0, -4.38690185546875e-05, 0.0, 0.0, -3.814697265625e-06, -0.0001430511474609375, -3.4332275390625e-05, -2.86102294921875e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -4.38690185546875e-05, -8.392333984375e-05, -0.00032567884773015976, -1.0132780516869389e-05, -0.00010001190821640193, -3.099436753473128e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Houndmaster", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Houndmaster", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 205, "combo", "<EOS>", 18, 123, 34, 217, 58, 123, 37, 216, 61, 141, 219, 58, 123, 23, 146, "Buff", "<EOS>", 216, 58, 123, 40, 216, 69, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Taunt", "<EOS>", 71, 71, 58, 124, 38, 216, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 224, 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "4", "<EOS>", "3", "<EOS>", 109]}, {"inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(Taunt())]),\n            MinionSelector(IsType(MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -4.98134509743408, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Houndmaster", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template20"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"_type": "Template25"}, "args": [{"_type": "List", "elts": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template12"}], "_type": "Call"}], "_type": "Call"}, {"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Taunt", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}, {"_type": "Template15_expr_seq"}]}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}], "_type": "Call", "keywords": [{"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 3, "hole0": 4, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-05, -3.4332275390625e-05, -2.09808349609375e-05, -5.7220458984375e-06, -7.033344445517287e-05, -2.920608312706463e-05, -1.9073486328125e-06, -7.62939453125e-05, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -2.3841830625315197e-06, -1.9073486328125e-06, 0.0, -0.00028228759765625, -2.288818359375e-05, -4.9591064453125e-05, -0.0001010894775390625, -4.00543212890625e-05, -1.52587890625e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -3.600120544433594e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.1920928244535389e-07, -0.0003737211227416992, 0.0, -0.008312225341796875, 0.0, -4.38690185546875e-05, 0.0, -7.62939453125e-06, 0.0, -0.0016117095947265625, -1.9073486328125e-06, -0.0007572174072265625, -3.814697265625e-06, -0.00044465065002441406, 0.0, -1.9073486328125e-06, 0.0, -0.09973335266113281, -9.5367431640625e-06, -8.20159912109375e-05, 0.0, -0.0050040483474731445, 0.0, -0.00079345703125, -0.05089282989501953, 0.0, -0.02015209197998047, -3.814697265625e-06, -0.000213623046875, -3.814697265625e-05, -0.000812530517578125, -5.7220458984375e-05, -0.0002346038818359375, -1.52587890625e-05, -0.00261688232421875, -3.814697265625e-05, -0.03383159637451172, -0.0001220703125, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.000194549560546875, 0.0, -7.62939453125e-06, -0.0001239776611328125, -1.52587890625e-05, -0.6846723556518555, -2.09808349609375e-05, -0.00090789794921875, -6.103515625e-05, -1.1444091796875e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.014058113098144531, -1.9073486328125e-06, -5.14984130859375e-05, -0.07646560668945312, -1.9073486328125e-06, -0.00152068049646914, -8.559139678254724e-05, -0.0002536773681640625, -0.006340980529785156, -3.0517578125e-05, -0.1131734848022461, -0.000637054443359375, -3.62396240234375e-05, -0.0009326934814453125, -0.000102996826171875, -0.0005016326904296875, -9.5367431640625e-05, -3.814697265625e-06, 0.0, -8.96453857421875e-05, 0.0, -4.291534423828125e-06, -3.814697265625e-06, -3.8476359844207764, 0.0, -0.000255584716796875, 0.0, -0.0028247833251953125, -1.33514404296875e-05, -0.0011425018310546875, -3.814697265625e-06, -0.00017058847879525274, -0.0006124973297119141, -7.43865966796875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -5.340576171875e-05, 0.0, 0.0, -3.814697265625e-06, -0.0001583099365234375, -3.814697265625e-05, -4.57763671875e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -4.9591064453125e-05, -8.96453857421875e-05, -0.0003355731605552137, -1.0132780516869389e-05, -0.00010048870171885937, -3.099436753473128e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Houndmaster", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Houndmaster", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 37, 216, 61, 141, 219, 58, 123, 23, 146, "Buff", "<EOS>", 216, 58, 123, 40, 216, 69, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Taunt", "<EOS>", 71, 71, 58, 124, 38, 216, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 224, 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "4", "<EOS>", "3", "<EOS>", 109]}, {"inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(Taunt())]),\n            MinionSelector(IsType(MINION_TYPE.BEAST), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -4.982119835159203, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Houndmaster", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template20"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"_type": "Template25"}, "args": [{"_type": "List", "elts": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template12"}], "_type": "Call"}], "_type": "Call"}, {"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Taunt", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}, {"_type": "Template15_expr_seq"}]}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 3, "hole0": 4, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-05, -3.4332275390625e-05, -2.09808349609375e-05, -5.7220458984375e-06, -7.033344445517287e-05, -2.920608312706463e-05, -1.9073486328125e-06, -7.62939453125e-05, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -2.3841830625315197e-06, -1.9073486328125e-06, 0.0, -0.00028228759765625, -2.288818359375e-05, -4.9591064453125e-05, -0.0001010894775390625, -4.00543212890625e-05, -1.52587890625e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -3.600120544433594e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.1920928244535389e-07, -0.0003737211227416992, 0.0, -0.008312225341796875, 0.0, -4.38690185546875e-05, 0.0, -7.62939453125e-06, 0.0, -0.0016117095947265625, -1.9073486328125e-06, -0.0007572174072265625, -3.814697265625e-06, -0.00044465065002441406, 0.0, -1.9073486328125e-06, 0.0, -0.09973335266113281, -9.5367431640625e-06, -8.20159912109375e-05, 0.0, -0.0050040483474731445, 0.0, -0.00079345703125, -0.05089282989501953, 0.0, -0.02015209197998047, -3.814697265625e-06, -0.000213623046875, -3.814697265625e-05, -0.000812530517578125, -5.7220458984375e-05, -0.0002346038818359375, -1.52587890625e-05, -0.00261688232421875, -3.814697265625e-05, -0.03383159637451172, -0.0001220703125, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.000194549560546875, 0.0, -7.62939453125e-06, -0.0001239776611328125, -1.52587890625e-05, -0.6846723556518555, -2.09808349609375e-05, -0.00090789794921875, -6.103515625e-05, -1.1444091796875e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.014058113098144531, -1.9073486328125e-06, -5.14984130859375e-05, -0.07646560668945312, -1.9073486328125e-06, -0.00152068049646914, -8.559139678254724e-05, -0.0002536773681640625, -0.006340980529785156, -3.0517578125e-05, -2.3635644912719727, -0.01114654541015625, -0.9394874572753906, -0.00055694580078125, -6.103515625e-05, -0.031459808349609375, -3.814697265625e-06, -0.0021610260009765625, 0.0, -0.0009441375732421875, 0.0, -5.841255187988281e-06, -1.9073486328125e-06, -0.0665135383605957, -1.9073486328125e-06, -0.5486593246459961, -1.33514404296875e-05, -0.003917098045349121, -0.00020062923431396484, -0.000125885009765625, -2.47955322265625e-05, 0.0, -7.271766662597656e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.000331878662109375, -1.71661376953125e-05, -3.4332275390625e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -5.53131103515625e-05, -7.43865966796875e-05, -0.0004284351598471403, -7.271760750882095e-06, -0.00011205057671759278, -3.6954811548639555e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Houndmaster", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Houndmaster", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 37, 216, 61, 141, 219, 58, 123, 23, 146, "Buff", "<EOS>", 216, 58, 123, 40, 216, 69, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Taunt", "<EOS>", 71, 71, 58, 123, 38, 217, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 87, 193, "Both", "Player", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "4", "<EOS>", "3", "<EOS>", 109]}, {"inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.MECH),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -5.1771551102292435, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Houndmaster", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template20"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"_type": "Template25"}, "args": [{"_type": "List", "elts": [{"func": {"id": "Buff", "_type": "Name"}, "args": [{"func": {"id": "ChangeHealth", "_type": "Name"}, "args": [{"_type": "Template12"}], "_type": "Call"}], "_type": "Call"}, {"func": {"id": "Buff", "_type": "Name"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template12"}], "_type": "Call"}], "_type": "Call"}, {"func": {"id": "Buff", "_type": "Name"}, "args": [{"hole0": "Taunt", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}], "_type": "Call", "keywords": [{"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 3, "hole0": 4, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-05, -3.4332275390625e-05, -2.09808349609375e-05, -5.7220458984375e-06, -7.033344445517287e-05, -2.920608312706463e-05, -1.9073486328125e-06, -7.62939453125e-05, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -2.3841830625315197e-06, -1.9073486328125e-06, 0.0, -0.00028228759765625, -2.288818359375e-05, -4.9591064453125e-05, -0.0001010894775390625, -4.00543212890625e-05, -1.52587890625e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -3.600120544433594e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.1920928244535389e-07, -0.0003737211227416992, 0.0, -0.008312225341796875, 0.0, -4.38690185546875e-05, 0.0, -7.62939453125e-06, 0.0, -0.0016117095947265625, -1.9073486328125e-06, -0.0007572174072265625, -3.814697265625e-06, -0.00044465065002441406, 0.0, -1.9073486328125e-06, 0.0, -0.09973335266113281, -9.5367431640625e-06, -8.20159912109375e-05, 0.0, -0.0050040483474731445, 0.0, -0.00079345703125, -0.05089282989501953, 0.0, -0.02015209197998047, -3.814697265625e-06, -0.000213623046875, -3.814697265625e-05, -0.000812530517578125, -5.7220458984375e-05, -0.0002346038818359375, -1.52587890625e-05, -0.00261688232421875, -3.814697265625e-05, -0.03383159637451172, -0.0001220703125, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.000194549560546875, 0.0, -7.62939453125e-06, -0.0001239776611328125, -1.52587890625e-05, -0.7030782699584961, -0.000354766845703125, -0.00048553929082117975, -6.92605972290039e-05, 0.0, -1.9073486328125e-06, -0.000667572021484375, -1.52587890625e-05, -4.57763671875e-05, -8.20159912109375e-05, -1.9073486328125e-06, -0.0020694732666015625, 0.0, -1.9073486328125e-06, -0.2793903350830078, -0.000286102294921875, -0.01906585693359375, -8.0108642578125e-05, -0.000797271728515625, -0.004986763000488281, -0.000263214111328125, -6.866455078125e-05, -1.9073486328125e-05, -0.16785812377929688, -5.7220458984375e-06, -0.0001544952392578125, -0.014469146728515625, -5.7220458984375e-06, -0.0007158379885368049, -0.000160332303494215, -0.000308990478515625, -5.7220458984375e-05, -0.012226104736328125, -0.00092315673828125, -2.6702880859375e-05, -0.000263214111328125, -0.0001277923583984375, -0.0003986358642578125, -0.0001239776611328125, -3.814697265625e-06, 0.0, -8.96453857421875e-05, 0.0, -8.344650268554688e-06, -3.814697265625e-06, -3.733672857284546, 0.0, -0.000270843505859375, -1.9073486328125e-06, -0.0026397705078125, -1.52587890625e-05, -0.00128173828125, -3.814697265625e-06, -0.00016868113016244024, -0.0006926059722900391, -7.43865966796875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -5.340576171875e-05, 0.0, 0.0, -1.9073486328125e-06, -0.000156402587890625, -3.814697265625e-05, -4.9591064453125e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -0.000110626220703125, -5.7220458984375e-05, -0.0003256789641454816, -1.1801701475633308e-05, -0.0001259966375073418, -1.0848005331354216e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Houndmaster", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Houndmaster", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 37, 216, 61, 141, 219, 58, 123, 23, 146, "Buff", "<EOS>", 216, 58, 123, 23, 146, "Change", "Health", "<EOS>", 216, 69, 58, 123, 23, 146, "Buff", "<EOS>", 216, 58, 123, 40, 216, 69, 58, 123, 23, 146, "Buff", "<EOS>", 216, 87, 193, "Taunt", "<EOS>", 71, 58, 124, 38, 216, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 224, 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "4", "<EOS>", "3", "<EOS>", 109]}, {"inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        target.change_attack(2)\n", "score": -7.655974648822756, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Houndmaster", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template20"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"left": {"attr": "health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Compare", "comparators": [{"func": {"attr": "calculate_max_health", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "ops": [{"_type": "NotEq"}]}, {"func": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}, "_type": "keyword", "arg": "filter_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-05, -3.4332275390625e-05, -2.09808349609375e-05, -5.7220458984375e-06, -7.033344445517287e-05, -2.920608312706463e-05, -1.9073486328125e-06, -7.62939453125e-05, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -2.3841830625315197e-06, -1.9073486328125e-06, 0.0, -0.00028228759765625, -2.288818359375e-05, -4.9591064453125e-05, -0.0001010894775390625, -4.00543212890625e-05, -1.52587890625e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -3.600120544433594e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.1920928244535389e-07, -0.0003737211227416992, 0.0, -0.008312225341796875, 0.0, -4.38690185546875e-05, 0.0, -7.62939453125e-06, 0.0, -0.0016117095947265625, -1.9073486328125e-06, -0.0007572174072265625, -3.814697265625e-06, -0.00044465065002441406, 0.0, -1.9073486328125e-06, 0.0, -2.3725061416625977, -3.62396240234375e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.07980537414550781, 0.0, -0.1002798080444336, -1.9073486328125e-06, -0.04410958290100098, -4.0531158447265625e-06, -9.72747802734375e-05, -0.20348834991455078, -3.814697265625e-06, -0.057994842529296875, -0.0002384185791015625, -5.7220458984375e-06, -0.000110626220703125, -0.050063133239746094, -0.0001049041748046875, -0.0001506805419921875, -0.21622872352600098, -9.775161743164062e-06, -0.00128936767578125, -0.0006122589111328125, -8.58306884765625e-05, -0.002285003662109375, -0.14187049865722656, -0.000324249267578125, -0.008678436279296875, 0.0, -0.0001544952392578125, -1.9073486328125e-06, -0.065841905772686, -4.29153169534402e-06, -0.07260358333587646, 0.0, -2.6702880859375e-05, -0.1520214080810547, -0.0006542205810546875, -0.0070476531982421875, -0.05195808410644531, -0.0027332305908203125, 0.0, -0.016286849975585938, -2.47955322265625e-05, -0.4658694863319397, -4.053113570989808e-06, -0.7683378458023071, -2.0265579223632812e-06, -0.009656906127929688, -0.0019330978393554688, -0.00592041015625, 0.0, -0.009037017822265625, -1.9073486328125e-06, -0.04499411582946777, -2.503394853192731e-06, -0.020556436851620674, -3.576278118089249e-07, -1.71661376953125e-05, -3.0517578125e-05, -0.13693714141845703, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.0012416839599609375, -1.9073486328125e-06, -0.0001373291015625, -3.814697265625e-06, -0.00030899044941179454, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -4.4345855712890625e-05, -5.960462772236497e-07, -0.004276275634765625, -0.000919342041015625, -0.02382659912109375, -3.24249267578125e-05, -7.62939453125e-06, -0.0001163482666015625, -6.29425048828125e-05, -0.3427908420562744, 0.0, -0.0005245208740234375, -2.86102294921875e-05, -6.103515625e-05, -1.9073486328125e-06, -0.2499551773071289, -0.0034160614013671875, -0.0068579912185668945, -2.6702880859375e-05, -0.00356447696685791, 0.0, -5.7220458984375e-06, -0.015375137329101562, 0.0, -0.05222797393798828, -1.9073486328125e-06, -0.8671865463256836, -1.1444091796875e-05, -0.00023651123046875, 0.0, -0.10032057762145996, -2.3841855067985307e-07, -0.07925694435834885, -3.576278118089249e-07, -0.5191917419433594, -3.0517578125e-05, 0.0, -3.814697265625e-05, -0.0001468658447265625, -1.9073486328125e-06, -0.027525901794433594, -1.9073486328125e-05, -0.07284488528966904, -6.341767584672198e-05, -0.08582738041877747, 0.0, -9.5367431640625e-06, -0.0716094970703125, -8.0108642578125e-05], "choice_history": [93, 145, 230, 101, 125, "Houndmaster", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Houndmaster", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 225, 205, "minion_type", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 205, "filter_func", "<EOS>", 20, 140, 3, 203, 209, 1, 202, "target", "<EOS>", 17, 119, 4, 217, 59, 126, 15, 116, 23, 146, "target", "<EOS>", "health", "<EOS>", 213, 14, 216, 58, 121, 15, 116, 23, 146, "target", "<EOS>", "calculate_max_health", "<EOS>", 58, 121, 15, 116, 23, 146, "target", "<EOS>", "spell_targetable", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "target", "<EOS>", "change_attack", "<EOS>", 216, 69, 109]}, {"inferred_code": "super().use(player, game)\n", "score": -19.08124351501465, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-05, -3.4332275390625e-05, -16.534984588623047, -2.5461769104003906], "choice_history": [93, 145, 230, 108, 109]}, {"inferred_code": "", "score": -19.814289093017578, "model_output": {"_type": "Module", "body": []}, "score_history": [-9.5367431640625e-06, -3.814697265625e-05, -19.814241409301758], "choice_history": [93, 145, 228]}], "index": 52}
{"beams": [{"inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -0.01027941663141263, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Huffer", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template20"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.52587890625e-05, -0.0006909373914822936, -3.397464024601504e-05, -3.814697265625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.38690185546875e-05, -9.059905096364673e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.00034332275390625, -4.1961669921875e-05, -3.814697265625e-06, -5.53131103515625e-05, -0.0006275177001953125, 0.0, -0.001399993896484375, -4.57763671875e-05, -5.7220458984375e-06, -1.0967254638671875e-05, -5.280971163301729e-05, -0.0007457733154296875, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.0003490447998046875, -1.1920928244535389e-07, -0.00037252900074236095, 0.0, -0.000202178955078125, -0.000118255615234375, -7.62939453125e-06, 0.0, -0.0001850128173828125, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.0006428956985473633, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001392364501953125, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -0.000370025634765625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0006818771362304688, 0.0, -5.7220458984375e-06, -0.0002593994140625, -4.00543212890625e-05, -2.6702880859375e-05, -0.0002880096435546875, -0.0001220703125, -2.47955322265625e-05, -0.000133514404296875, -5.7220458984375e-06, -0.0004787445068359375, 0.0, -0.001099704997614026, -0.00012218952178955078, -7.2479248046875e-05, -4.1961669921875e-05, -6.246565317269415e-05, -2.4437902538920753e-05, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Huffer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Huffer", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 76, 69, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -7.067475199087305, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Huffer", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template20"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.52587890625e-05, -0.0006909373914822936, -3.397464024601504e-05, -3.814697265625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.38690185546875e-05, -9.059905096364673e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.00034332275390625, -4.1961669921875e-05, -3.814697265625e-06, -5.53131103515625e-05, -0.0006275177001953125, 0.0, -7.058432579040527, -2.288818359375e-05, -3.814697265625e-06, -4.172319677309133e-06, -2.0265579223632812e-06, -7.05718994140625e-05, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, -1.1920928244535389e-07, -0.00011253356205997989, 0.0, -7.43865966796875e-05, -0.0014705657958984375, -1.9073486328125e-06, -4.76837158203125e-05, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, -3.4332275390625e-05, 0.0, -0.0006352663040161133, 0.0, 0.0, -3.814697265625e-06, -0.0003108978271484375, 0.0, -7.05718994140625e-05, -2.47955322265625e-05, -0.0002002716064453125, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.0008507966995239258, -1.9073486328125e-06, -2.47955322265625e-05, -0.0004749298095703125, -2.86102294921875e-05, -1.71661376953125e-05, -0.0001087188720703125, -0.0001373291015625, -2.6702880859375e-05, -0.0001430511474609375, -7.62939453125e-06, -0.0006008148193359375, 0.0, -0.0010850420221686363, -0.00016224384307861328, -7.82012939453125e-05, -4.00543212890625e-05, -5.3405754442792386e-05, -1.859664735093247e-05, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Huffer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Huffer", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 76, 69, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class <UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -7.876253592991809, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "<UNK>", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template20"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.52587890625e-05, -7.2791523933410645, -0.00018309440929442644, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.340576171875e-05, -6.79492904964718e-06, -3.814697265625e-06, -9.5367431640625e-06, -0.000194549560546875, -3.814697265625e-05, -5.7220458984375e-06, -0.00012969970703125, -0.0001201629638671875, 0.0, -0.589238166809082, -1.1444091796875e-05, -5.7220458984375e-06, -4.410737801663345e-06, -1.9073486328125e-06, -6.866455078125e-05, -1.9073486328125e-06, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -1.1920928244535389e-07, -0.0001181363986688666, 0.0, -9.918212890625e-05, -0.0012969970703125, -1.9073486328125e-06, -4.38690185546875e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, -3.4332275390625e-05, 0.0, -0.0006448030471801758, 0.0, 0.0, -3.814697265625e-06, -0.000324249267578125, 0.0, -7.43865966796875e-05, -2.6702880859375e-05, -0.0002002716064453125, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.0008679628372192383, -1.9073486328125e-06, -2.47955322265625e-05, -0.000514984130859375, -2.6702880859375e-05, -1.9073486328125e-05, -0.000125885009765625, -0.0001468658447265625, -2.86102294921875e-05, -0.00014495849609375, -7.62939453125e-06, -0.0005970001220703125, 0.0, -0.001086711068637669, -0.00015842914581298828, -7.82012939453125e-05, -4.00543212890625e-05, -5.1379196520429105e-05, -1.859664735093247e-05, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Huffer", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 76, 69, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, taunt=True)\n", "score": -7.92483508616214, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Huffer", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template20"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.52587890625e-05, -0.0006909373914822936, -3.397464024601504e-05, -3.814697265625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.38690185546875e-05, -9.059905096364673e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.00034332275390625, -4.1961669921875e-05, -3.814697265625e-06, -5.53131103515625e-05, -0.0006275177001953125, 0.0, -0.001399993896484375, -4.57763671875e-05, -5.7220458984375e-06, -1.0967254638671875e-05, -5.280971163301729e-05, -0.0007457733154296875, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.0003490447998046875, -1.1920928244535389e-07, -0.00037252900074236095, 0.0, -0.000202178955078125, -0.000118255615234375, -7.62939453125e-06, 0.0, -0.0001850128173828125, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.0006428956985473633, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001392364501953125, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -0.000370025634765625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0006818771362304688, 0.0, -5.7220458984375e-06, -0.0002593994140625, -4.00543212890625e-05, -2.6702880859375e-05, -0.0002880096435546875, -0.0001220703125, -2.47955322265625e-05, -0.000133514404296875, -5.7220458984375e-06, -0.0004787445068359375, 0.0, -7.915529251098633, -0.0002332925796508789, -5.14984130859375e-05, -9.5367431640625e-05, -5.912779306527227e-05, -6.556510470545618e-06, -7.62939453125e-06], "choice_history": [93, 145, 230, 101, 125, "Huffer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Huffer", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 76, 69, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(4, 2, charge=True)\n", "score": -7.939225196775617, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Huffer", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template20"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.52587890625e-05, -0.0006909373914822936, -3.397464024601504e-05, -3.814697265625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.38690185546875e-05, -9.059905096364673e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.00034332275390625, -4.1961669921875e-05, -3.814697265625e-06, -5.53131103515625e-05, -0.0006275177001953125, 0.0, -0.001399993896484375, -4.57763671875e-05, -5.7220458984375e-06, -1.0967254638671875e-05, -5.280971163301729e-05, -0.0007457733154296875, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.0003490447998046875, -1.1920928244535389e-07, -0.00037252900074236095, 0.0, -0.000202178955078125, -0.000118255615234375, -7.62939453125e-06, 0.0, -0.0001850128173828125, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.0006428956985473633, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001392364501953125, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -0.000370025634765625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -7.928226470947266, -1.9073486328125e-06, -1.9073486328125e-06, -0.00045013427734375, -4.76837158203125e-05, -9.1552734375e-05, -0.0014820098876953125, -0.000125885009765625, -2.09808349609375e-05, -0.0001239776611328125, -3.814697265625e-06, -0.0003490447998046875, -1.9073486328125e-06, -0.0011661049211397767, -0.00010883808135986328, -6.866455078125e-05, -3.814697265625e-05, -9.250638686353341e-05, -3.409385681152344e-05, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Huffer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Huffer", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "p", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 76, 69, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 0, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -7.962462544034651, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Huffer", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template31"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template20"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.52587890625e-05, -0.0006909373914822936, -3.397464024601504e-05, -3.814697265625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.38690185546875e-05, -9.059905096364673e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.00034332275390625, -4.1961669921875e-05, -3.814697265625e-06, -5.53131103515625e-05, -0.0006275177001953125, 0.0, -0.001399993896484375, -4.57763671875e-05, -5.7220458984375e-06, -1.0967254638671875e-05, -5.280971163301729e-05, -7.9528303146362305, -0.0005130767822265625, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -0.00014126300811767578, -2.3841855067985307e-07, -0.00014305111835710704, 0.0, -0.00019073486328125, -0.0001430511474609375, -7.62939453125e-06, 0.0, -0.0002079010009765625, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -0.0006257295608520508, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.000125885009765625, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-05, -0.0003566741943359375, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0007152557373046875, 0.0, -5.7220458984375e-06, -0.000263214111328125, -4.00543212890625e-05, -2.6702880859375e-05, -0.0003070831298828125, -0.0001239776611328125, -2.47955322265625e-05, -0.000133514404296875, -5.7220458984375e-06, -0.0004730224609375, 0.0, -0.0010988705325871706, -0.00011837482452392578, -7.05718994140625e-05, -4.00543212890625e-05, -6.0319885960780084e-05, -2.431869324936997e-05, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Huffer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Huffer", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 76, 69, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class <UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -8.098772275677668, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "<UNK>", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template20"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.52587890625e-05, -7.2791523933410645, -0.00018309440929442644, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.340576171875e-05, -6.79492904964718e-06, -3.814697265625e-06, -9.5367431640625e-06, -0.000194549560546875, -3.814697265625e-05, -5.7220458984375e-06, -0.00012969970703125, -0.0001201629638671875, 0.0, -0.811823844909668, -1.33514404296875e-05, -5.7220458984375e-06, -5.364418029785156e-06, -3.6478038964560255e-05, -0.000667572021484375, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.0003528594970703125, -1.1920928244535389e-07, -0.00034594532917253673, 0.0, -0.0002498626708984375, -0.0001049041748046875, -5.7220458984375e-06, 0.0, -0.0002117156982421875, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -0.0006448030471801758, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001430511474609375, -1.9073486328125e-06, -7.62939453125e-06, -2.09808349609375e-05, -0.0003719329833984375, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0006875991821289062, 0.0, -5.7220458984375e-06, -0.0003108978271484375, -4.1961669921875e-05, -3.0517578125e-05, -0.00035858154296875, -0.000133514404296875, -2.6702880859375e-05, -0.0001354217529296875, -5.7220458984375e-06, -0.0004787445068359375, 0.0, -0.0011013740440830588, -0.00011837482452392578, -7.2479248046875e-05, -4.00543212890625e-05, -6.0319885960780084e-05, -2.431869324936997e-05, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Huffer", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 76, 69, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -8.107897280804984, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Huffer", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}, {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template20"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.52587890625e-05, -0.0006909373914822936, -3.397464024601504e-05, -3.814697265625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.38690185546875e-05, -9.059905096364673e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.00034332275390625, -4.1961669921875e-05, -3.814697265625e-06, -5.53131103515625e-05, -7.763862609863281, -1.9073486328125e-06, -0.2976827621459961, -0.000980377197265625, -3.62396240234375e-05, -5.364412118069595e-06, -2.2649765014648438e-06, -0.000736236572265625, -1.1444091796875e-05, 0.0, 0.0, -1.9073486328125e-06, -0.0003681182861328125, -1.1920928244535389e-07, -0.0006604194641113281, 0.0, -0.0011539459228515625, -0.001018524169921875, -0.0001811981201171875, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, 0.0, -0.0013332366943359375, 0.0, 0.0, -1.9073486328125e-06, -7.43865966796875e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.52587890625e-05, -0.0003376007080078125, -1.9073486328125e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.034951210021972656, 0.0, -7.62939453125e-06, -0.00026702880859375, -5.91278076171875e-05, -8.96453857421875e-05, -0.000179290771484375, -0.0001201629638671875, -3.24249267578125e-05, -0.000141143798828125, -7.62939453125e-06, -0.000614166259765625, 0.0, -0.001107691554352641, -0.00017380714416503906, -7.82012939453125e-05, -4.1961669921875e-05, -5.626677375403233e-05, -1.859664735093247e-05, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Huffer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 221, 66, 155, "Huffer", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 80, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 76, 69, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, divine_shield=True)\n", "score": -8.141830921465946, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Huffer", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template20"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "divine_shield"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.52587890625e-05, -0.0006909373914822936, -3.397464024601504e-05, -3.814697265625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.38690185546875e-05, -9.059905096364673e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.00034332275390625, -4.1961669921875e-05, -3.814697265625e-06, -5.53131103515625e-05, -0.0006275177001953125, 0.0, -0.001399993896484375, -4.57763671875e-05, -5.7220458984375e-06, -1.0967254638671875e-05, -5.280971163301729e-05, -0.0007457733154296875, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.0003490447998046875, -1.1920928244535389e-07, -0.00037252900074236095, 0.0, -0.000202178955078125, -0.000118255615234375, -7.62939453125e-06, 0.0, -0.0001850128173828125, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.0006428956985473633, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001392364501953125, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -0.000370025634765625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0006818771362304688, 0.0, -5.7220458984375e-06, -0.0002593994140625, -4.00543212890625e-05, -2.6702880859375e-05, -0.0002880096435546875, -0.0001220703125, -2.47955322265625e-05, -0.000133514404296875, -5.7220458984375e-06, -0.0004787445068359375, 0.0, -8.132545471191406, -3.266334533691406e-05, -0.0001392364501953125, -8.96453857421875e-05, -0.00016093252634163946, -8.70227722771233e-06, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Huffer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Huffer", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 76, 69, 224, 205, "divine_shield", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.HUNTER)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -8.169741272636195, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Huffer", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template20"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.52587890625e-05, -0.0006909373914822936, -3.397464024601504e-05, -3.814697265625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.38690185546875e-05, -9.059905096364673e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.00034332275390625, -4.1961669921875e-05, -3.814697265625e-06, -5.53131103515625e-05, -0.0006275177001953125, 0.0, -0.001399993896484375, -4.57763671875e-05, -5.7220458984375e-06, -1.0967254638671875e-05, -5.280971163301729e-05, -0.0007457733154296875, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.0003490447998046875, -1.1920928244535389e-07, -0.00037252900074236095, 0.0, -0.000202178955078125, -0.000118255615234375, -7.62939453125e-06, 0.0, -0.0001850128173828125, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -8.159977912902832, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001506805419921875, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -0.0003185272216796875, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0007381439208984375, 0.0, -5.7220458984375e-06, -0.0003185272216796875, -4.1961669921875e-05, -3.4332275390625e-05, -0.000301361083984375, -0.00012969970703125, -2.6702880859375e-05, -0.0001354217529296875, -5.7220458984375e-06, -0.00048828125, 0.0, -0.001109480275772512, -0.00013744831085205078, -7.2479248046875e-05, -4.00543212890625e-05, -6.234644388314337e-05, -2.622604188218247e-05, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Huffer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Huffer", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "HUNTER", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 76, 69, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True, charge=True)\n", "score": -8.249367350296772, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Huffer", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template20"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}, {"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.52587890625e-05, -0.0006909373914822936, -3.397464024601504e-05, -3.814697265625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.38690185546875e-05, -9.059905096364673e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.00034332275390625, -4.1961669921875e-05, -3.814697265625e-06, -5.53131103515625e-05, -0.0006275177001953125, 0.0, -0.001399993896484375, -4.57763671875e-05, -5.7220458984375e-06, -1.0967254638671875e-05, -5.280971163301729e-05, -0.0007457733154296875, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.0003490447998046875, -1.1920928244535389e-07, -0.00037252900074236095, 0.0, -0.000202178955078125, -0.000118255615234375, -7.62939453125e-06, 0.0, -0.0001850128173828125, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.0006428956985473633, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001392364501953125, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -0.000370025634765625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0006818771362304688, 0.0, -5.7220458984375e-06, -0.0002593994140625, -4.00543212890625e-05, -2.6702880859375e-05, -0.0002880096435546875, -0.0001220703125, -2.47955322265625e-05, -0.000133514404296875, -5.7220458984375e-06, -8.21930980682373, -7.62939453125e-06, -0.0022979911882430315, -4.971027374267578e-05, -5.14984130859375e-05, -2.09808349609375e-05, -3.6835648643318564e-05, -3.278255098848604e-05, 0.0, -0.016916632652282715, -5.7220458984375e-06, -0.0021419525146484375, -4.1961669921875e-05, -6.830692291259766e-05, -1.0013580322265625e-05, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Huffer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Huffer", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 76, 69, 225, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        super().use(player, game)\n", "score": -9.111503005336083, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Huffer", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Template0"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.52587890625e-05, -0.0006909373914822936, -3.397464024601504e-05, -3.814697265625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.38690185546875e-05, -9.059905096364673e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.00034332275390625, -4.1961669921875e-05, -3.814697265625e-06, -5.53131103515625e-05, -0.0006275177001953125, 0.0, -0.001399993896484375, -4.57763671875e-05, -5.7220458984375e-06, -1.0967254638671875e-05, -5.280971163301729e-05, -0.0007457733154296875, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.0003490447998046875, -1.1920928244535389e-07, -0.00037252900074236095, 0.0, -0.000202178955078125, -0.000118255615234375, -7.62939453125e-06, 0.0, -0.0001850128173828125, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.0006428956985473633, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001392364501953125, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -0.000370025634765625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0006818771362304688, 0.0, -5.7220458984375e-06, -9.10355281829834, -0.000476837158203125], "choice_history": [93, 145, 230, 101, 125, "Huffer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Huffer", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 108, 109]}, {"inferred_code": "", "score": -19.811864852905273, "model_output": {"_type": "Module", "body": []}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -19.81182289123535], "choice_history": [93, 145, 228]}, {"inferred_code": "super().use(player, game)\n", "score": -19.820484161376953, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -2.86102294921875e-05, -16.519092559814453, -3.301321029663086], "choice_history": [93, 145, 230, 108, 109]}, {"inferred_code": "", "score": -21.646709442138672, "model_output": {"_type": "Module", "body": [{"_type": "Template13_stmt_seq"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -2.86102294921875e-05, -15.98737907409668, -5.659259796142578], "choice_history": [93, 145, 230, 109, 109]}], "index": 53}
{"beams": [{"inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "score": -0.31601849189513587, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Humility", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"left": {"_type": "Template14"}, "_type": "BinOp", "right": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}, "op": {"_type": "Sub"}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.91278076171875e-05, -1.9073486328125e-05, -8.344646857949556e-07, -5.722038622479886e-06, -3.814697265625e-06, -9.72747802734375e-05, -0.000576019287109375, -0.000232696533203125, -1.9073486328125e-06, -4.0531158447265625e-06, -1.9073486328125e-06, 0.0, -6.103515625e-05, -0.000156402587890625, -2.86102294921875e-05, -1.33514404296875e-05, -0.000152587890625, -1.33514404296875e-05, -1.52587890625e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.2516897186287679e-05, -5.841255187988281e-06, -9.72747802734375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -0.00037419795989990234, -1.71661376953125e-05, -2.288818359375e-05, -0.00152587890625, -1.9073486328125e-06, -0.000125885009765625, -2.9802317840221804e-06, -3.814697265625e-06, -6.103515625e-05, -0.0003261566162109375, -3.814697265625e-05, -2.288818359375e-05, 0.0, -6.29425048828125e-05, 0.0, -1.3947486877441406e-05, -3.4332275390625e-05, -0.0005972385406494141, -1.3828277587890625e-05, -3.24249267578125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001201629638671875, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -0.0002269744873046875, -3.933904736186378e-06, -0.04742431640625, -5.7220458984375e-06, -0.0003032684326171875, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -3.24249267578125e-05, -0.01878228783607483, -5.960462772236497e-07, 0.0, -0.2258434295654297, -0.0018558502197265625, -0.0020227432250976562, -0.0017786026000976562, -0.000335693359375, -0.000377655029296875, -2.288818359375e-05, 0.0, -0.0019931793212890625, -0.009092926979064941, -3.814697265625e-06, -0.0007915496826171875], "choice_history": [93, 145, 230, 101, 125, "Humility", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Humility", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 56, 118, 28, 95, 18, 121, 15, 116, 52, "calculate_attack", "<EOS>", 109]}, {"inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n", "score": -2.6579120456289616, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Humility", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.91278076171875e-05, -1.9073486328125e-05, -8.344646857949556e-07, -5.722038622479886e-06, -3.814697265625e-06, -9.72747802734375e-05, -0.000576019287109375, -0.000232696533203125, -1.9073486328125e-06, -4.0531158447265625e-06, -1.9073486328125e-06, 0.0, -6.103515625e-05, -0.000156402587890625, -2.86102294921875e-05, -1.33514404296875e-05, -0.000152587890625, -1.33514404296875e-05, -1.52587890625e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.2516897186287679e-05, -5.841255187988281e-06, -9.72747802734375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -0.00037419795989990234, -1.71661376953125e-05, -2.288818359375e-05, -0.00152587890625, -1.9073486328125e-06, -0.000125885009765625, -2.9802317840221804e-06, -3.814697265625e-06, -6.103515625e-05, -0.0003261566162109375, -3.814697265625e-05, -2.288818359375e-05, 0.0, -6.29425048828125e-05, 0.0, -1.3947486877441406e-05, -3.4332275390625e-05, -0.0005972385406494141, -1.3828277587890625e-05, -3.24249267578125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001201629638671875, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -0.0002269744873046875, -3.933904736186378e-06, -0.04742431640625, -5.7220458984375e-06, -0.0003032684326171875, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -3.24249267578125e-05, -0.01878228783607483, -5.960462772236497e-07, 0.0, -2.5859851837158203, -2.6702880859375e-05], "choice_history": [93, 145, 230, 101, 125, "Humility", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Humility", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 76, 109]}, {"inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n", "score": -2.9330718814443912, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Humility", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.91278076171875e-05, -1.9073486328125e-05, -8.344646857949556e-07, -5.722038622479886e-06, -3.814697265625e-06, -9.72747802734375e-05, -0.000576019287109375, -0.000232696533203125, -1.9073486328125e-06, -4.0531158447265625e-06, -1.9073486328125e-06, 0.0, -6.103515625e-05, -0.000156402587890625, -2.86102294921875e-05, -1.33514404296875e-05, -0.000152587890625, -1.33514404296875e-05, -1.52587890625e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.2516897186287679e-05, -5.841255187988281e-06, -9.72747802734375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -0.00037419795989990234, -1.71661376953125e-05, -2.288818359375e-05, -0.00152587890625, -1.9073486328125e-06, -0.000125885009765625, -2.9802317840221804e-06, -3.814697265625e-06, -6.103515625e-05, -0.0003261566162109375, -3.814697265625e-05, -2.288818359375e-05, 0.0, -6.29425048828125e-05, 0.0, -1.3947486877441406e-05, -3.4332275390625e-05, -0.0005972385406494141, -1.3828277587890625e-05, -3.24249267578125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001201629638671875, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -0.0002269744873046875, -3.933904736186378e-06, -0.04742431640625, -5.7220458984375e-06, -0.0003032684326171875, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -3.24249267578125e-05, -0.01878228783607483, -5.960462772236497e-07, 0.0, -2.8611679077148438, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Humility", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Humility", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 69, 109]}, {"inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "score": -3.463903218419489, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Humility", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template14"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.91278076171875e-05, -1.9073486328125e-05, -8.344646857949556e-07, -5.722038622479886e-06, -3.814697265625e-06, -9.72747802734375e-05, -0.000576019287109375, -0.000232696533203125, -1.9073486328125e-06, -4.0531158447265625e-06, -1.9073486328125e-06, 0.0, -6.103515625e-05, -0.000156402587890625, -2.86102294921875e-05, -1.33514404296875e-05, -0.000152587890625, -1.33514404296875e-05, -1.52587890625e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.2516897186287679e-05, -5.841255187988281e-06, -9.72747802734375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -0.00037419795989990234, -1.71661376953125e-05, -2.288818359375e-05, -0.00152587890625, -1.9073486328125e-06, -0.000125885009765625, -2.9802317840221804e-06, -3.814697265625e-06, -6.103515625e-05, -0.0003261566162109375, -3.814697265625e-05, -2.288818359375e-05, 0.0, -6.29425048828125e-05, 0.0, -1.3947486877441406e-05, -3.4332275390625e-05, -0.0005972385406494141, -1.3828277587890625e-05, -3.24249267578125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001201629638671875, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -0.0002269744873046875, -3.933904736186378e-06, -0.04742431640625, -5.7220458984375e-06, -0.0003032684326171875, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -3.24249267578125e-05, -0.01878228783607483, -5.960462772236497e-07, 0.0, -3.392001152038574, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Humility", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Humility", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 70, 109]}, {"inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(7)\n", "score": -4.474827080876764, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Humility", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template24"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.91278076171875e-05, -1.9073486328125e-05, -8.344646857949556e-07, -5.722038622479886e-06, -3.814697265625e-06, -9.72747802734375e-05, -0.000576019287109375, -0.000232696533203125, -1.9073486328125e-06, -4.0531158447265625e-06, -1.9073486328125e-06, 0.0, -6.103515625e-05, -0.000156402587890625, -2.86102294921875e-05, -1.33514404296875e-05, -0.000152587890625, -1.33514404296875e-05, -1.52587890625e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.2516897186287679e-05, -5.841255187988281e-06, -9.72747802734375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -0.00037419795989990234, -1.71661376953125e-05, -2.288818359375e-05, -0.00152587890625, -1.9073486328125e-06, -0.000125885009765625, -2.9802317840221804e-06, -3.814697265625e-06, -6.103515625e-05, -0.0003261566162109375, -3.814697265625e-05, -2.288818359375e-05, 0.0, -6.29425048828125e-05, 0.0, -1.3947486877441406e-05, -3.4332275390625e-05, -0.0005972385406494141, -1.3828277587890625e-05, -3.24249267578125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001201629638671875, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -0.0002269744873046875, -3.933904736186378e-06, -0.04742431640625, -5.7220458984375e-06, -0.0003032684326171875, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -3.24249267578125e-05, -0.01878228783607483, -5.960462772236497e-07, 0.0, -4.402909755706787, -1.71661376953125e-05], "choice_history": [93, 145, 230, 101, 125, "Humility", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Humility", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 79, 109]}, {"inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -4.475433349517175, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Humility", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.91278076171875e-05, -1.9073486328125e-05, -8.344646857949556e-07, -5.722038622479886e-06, -3.814697265625e-06, -9.72747802734375e-05, -0.000576019287109375, -0.000232696533203125, -1.9073486328125e-06, -4.0531158447265625e-06, -1.9073486328125e-06, 0.0, -6.103515625e-05, -0.000156402587890625, -2.86102294921875e-05, -1.33514404296875e-05, -0.000152587890625, -1.33514404296875e-05, -1.52587890625e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.2516897186287679e-05, -5.841255187988281e-06, -9.72747802734375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -0.00037419795989990234, -1.71661376953125e-05, -2.288818359375e-05, -0.00152587890625, -1.9073486328125e-06, -0.000125885009765625, -2.9802317840221804e-06, -3.814697265625e-06, -6.103515625e-05, -0.0003261566162109375, -3.814697265625e-05, -2.288818359375e-05, 0.0, -6.29425048828125e-05, 0.0, -1.3947486877441406e-05, -3.4332275390625e-05, -0.0005972385406494141, -1.3828277587890625e-05, -3.24249267578125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001201629638671875, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -0.0002269744873046875, -3.933904736186378e-06, -0.04742431640625, -5.7220458984375e-06, -0.0003032684326171875, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -3.24249267578125e-05, -4.322185039520264, -2.861018856492592e-06, -1.9073486328125e-06, -0.10012435913085938, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Humility", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Humility", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 109]}, {"inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.calculate_attack()\n        self.target.change_attack(1 - self.target.calculate_attack())\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "score": -4.93180250366197, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Humility", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"left": {"_type": "Template14"}, "_type": "BinOp", "right": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}, "op": {"_type": "Sub"}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"left": {"_type": "Template14"}, "_type": "BinOp", "right": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}, "op": {"_type": "Sub"}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.91278076171875e-05, -1.9073486328125e-05, -8.344646857949556e-07, -5.722038622479886e-06, -3.814697265625e-06, -9.72747802734375e-05, -0.000576019287109375, -0.000232696533203125, -1.9073486328125e-06, -4.0531158447265625e-06, -1.9073486328125e-06, 0.0, -6.103515625e-05, -0.000156402587890625, -2.86102294921875e-05, -1.33514404296875e-05, -0.000152587890625, -1.33514404296875e-05, -1.52587890625e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.2516897186287679e-05, -5.841255187988281e-06, -9.72747802734375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -0.00037419795989990234, -1.71661376953125e-05, -2.288818359375e-05, -0.00152587890625, -1.9073486328125e-06, -0.000125885009765625, -2.9802317840221804e-06, -3.814697265625e-06, -6.103515625e-05, -0.0003261566162109375, -3.814697265625e-05, -2.288818359375e-05, 0.0, -6.29425048828125e-05, 0.0, -1.3947486877441406e-05, -3.4332275390625e-05, -0.0005972385406494141, -1.3828277587890625e-05, -3.24249267578125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001201629638671875, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -0.0002269744873046875, -3.933904736186378e-06, -3.3288707733154297, -3.4332275390625e-05, -0.05920982360839844, -2.47955322265625e-05, -7.62939453125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.06421494483947754, -5.364403477869928e-06, -0.3077583312988281, -0.5277671813964844, -6.67572021484375e-05, -3.814697265625e-06, -0.000911712646484375, -0.002539991866797209, -9.357929229736328e-05, -0.006946563720703125, 0.0, -3.814697265625e-06, -0.0007476806640625, -1.33514404296875e-05, -1.9073486328125e-06, -0.019132614135742188, -0.005336754489690065, -2.0265579223632812e-06, 0.0, -0.09461116790771484, -0.0019865036010742188, -0.0026798248291015625, -0.001888275146484375, -0.0002765655517578125, -0.0003833770751953125, -1.33514404296875e-05, 0.0, -0.004820823669433594, -0.009638071060180664, -3.814697265625e-06, -0.0005245208740234375, 0.0, -1.9073486328125e-06, -0.0055408477783203125, -3.814697265625e-06, 0.0, -0.1882801055908203, -0.15311360359191895, -2.0265579223632812e-06, -5.7220458984375e-06, -0.10652446746826172, -0.0012664794921875, -0.0036554336547851562, -0.0022993087768554688, -0.0003070831298828125, -0.0004596710205078125, -9.5367431640625e-06, 0.0, -0.009939193725585938, -0.013600468635559082, -5.7220458984375e-06, -0.0009365081787109375], "choice_history": [93, 145, 230, 101, 125, "Humility", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Humility", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 18, 121, 15, 116, 52, "calculate_attack", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 56, 118, 28, 95, 18, 121, 15, 116, 52, "calculate_attack", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 56, 118, 28, 95, 18, 121, 15, 116, 52, "calculate_attack", "<EOS>", 109]}, {"inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - self.target.calculate_attack()\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "score": -5.173351287285527, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Humility", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"left": {"attr": "health", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "BinOp", "right": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}, "op": {"_type": "Sub"}}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"left": {"_type": "Template14"}, "_type": "BinOp", "right": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}, "op": {"_type": "Sub"}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.91278076171875e-05, -1.9073486328125e-05, -8.344646857949556e-07, -5.722038622479886e-06, -3.814697265625e-06, -9.72747802734375e-05, -0.000576019287109375, -0.000232696533203125, -1.9073486328125e-06, -4.0531158447265625e-06, -1.9073486328125e-06, 0.0, -6.103515625e-05, -0.000156402587890625, -2.86102294921875e-05, -1.33514404296875e-05, -0.000152587890625, -1.33514404296875e-05, -1.52587890625e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.2516897186287679e-05, -5.841255187988281e-06, -9.72747802734375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -0.00037419795989990234, -1.71661376953125e-05, -2.288818359375e-05, -0.00152587890625, -1.9073486328125e-06, -0.000125885009765625, -2.9802317840221804e-06, -3.814697265625e-06, -6.103515625e-05, -0.0003261566162109375, -3.814697265625e-05, -2.288818359375e-05, 0.0, -6.29425048828125e-05, 0.0, -1.3947486877441406e-05, -3.4332275390625e-05, -0.0005972385406494141, -1.3828277587890625e-05, -3.24249267578125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001201629638671875, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -0.0002269744873046875, -3.933904736186378e-06, -4.660440444946289, -1.52587890625e-05, -0.0007781982421875, -7.62939453125e-06, -3.814697265625e-06, -0.0004215240478515625, -1.9073486328125e-05, -0.09930336475372314, -2.264974000354414e-06, -0.06096172332763672, -0.0026426315307617188, -0.001003265380859375, -3.62396240234375e-05, -0.018752098083496094, -0.0028111934661865234, 0.0, -0.00403594970703125, -0.0003871917724609375, -0.00347137451171875, -1.9073486328125e-05, 0.0, -0.0020351409912109375, -0.008478879928588867, -5.7220458984375e-06, -0.0041656494140625, -5.7220458984375e-06, 0.0, -0.00011444091796875, -1.9073486328125e-06, -1.52587890625e-05, -0.026454925537109375, -0.0067188735119998455, -2.0265579223632812e-06, -1.9073486328125e-06, -0.2423381805419922, -0.0011692047119140625, -0.0028963088989257812, -0.0022020339965820312, -0.0003795623779296875, -0.000263214111328125, -1.33514404296875e-05, 0.0, -0.0058765411376953125, -0.008886456489562988, -5.7220458984375e-06, -0.0009059906005859375], "choice_history": [93, 145, 230, 101, 125, "Humility", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Humility", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 16, 118, 15, 116, 52, "health", "<EOS>", 95, 18, 121, 15, 116, 52, "calculate_attack", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 56, 118, 28, 95, 18, 121, 15, 116, 52, "calculate_attack", "<EOS>", 109]}, {"inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.card())\n", "score": -5.428760796697077, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Humility", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"left": {"_type": "Template14"}, "_type": "BinOp", "right": {"func": {"attr": "card", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}, "op": {"_type": "Sub"}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.91278076171875e-05, -1.9073486328125e-05, -8.344646857949556e-07, -5.722038622479886e-06, -3.814697265625e-06, -9.72747802734375e-05, -0.000576019287109375, -0.000232696533203125, -1.9073486328125e-06, -4.0531158447265625e-06, -1.9073486328125e-06, 0.0, -6.103515625e-05, -0.000156402587890625, -2.86102294921875e-05, -1.33514404296875e-05, -0.000152587890625, -1.33514404296875e-05, -1.52587890625e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.2516897186287679e-05, -5.841255187988281e-06, -9.72747802734375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -0.00037419795989990234, -1.71661376953125e-05, -2.288818359375e-05, -0.00152587890625, -1.9073486328125e-06, -0.000125885009765625, -2.9802317840221804e-06, -3.814697265625e-06, -6.103515625e-05, -0.0003261566162109375, -3.814697265625e-05, -2.288818359375e-05, 0.0, -6.29425048828125e-05, 0.0, -1.3947486877441406e-05, -3.4332275390625e-05, -0.0005972385406494141, -1.3828277587890625e-05, -3.24249267578125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001201629638671875, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -0.0002269744873046875, -3.933904736186378e-06, -0.04742431640625, -5.7220458984375e-06, -0.0003032684326171875, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -3.24249267578125e-05, -0.01878228783607483, -5.960462772236497e-07, 0.0, -0.2258434295654297, -0.0018558502197265625, -0.0020227432250976562, -0.0017786026000976562, -0.000335693359375, -0.000377655029296875, -2.288818359375e-05, 0.0, -0.0019931793212890625, -5.122437953948975, 0.0, -0.0001926422119140625], "choice_history": [93, 145, 230, 101, 125, "Humility", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Humility", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 56, 118, 28, 95, 18, 121, 15, 116, 52, "card", "<EOS>", 109]}, {"inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self.target)\n", "score": -5.887289792210993, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Humility", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template8"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.91278076171875e-05, -1.9073486328125e-05, -8.344646857949556e-07, -5.722038622479886e-06, -3.814697265625e-06, -9.72747802734375e-05, -0.000576019287109375, -0.000232696533203125, -1.9073486328125e-06, -4.0531158447265625e-06, -1.9073486328125e-06, 0.0, -6.103515625e-05, -0.000156402587890625, -2.86102294921875e-05, -1.33514404296875e-05, -0.000152587890625, -1.33514404296875e-05, -1.52587890625e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.2516897186287679e-05, -5.841255187988281e-06, -9.72747802734375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -0.00037419795989990234, -1.71661376953125e-05, -2.288818359375e-05, -0.00152587890625, -1.9073486328125e-06, -0.000125885009765625, -2.9802317840221804e-06, -3.814697265625e-06, -6.103515625e-05, -0.0003261566162109375, -3.814697265625e-05, -2.288818359375e-05, 0.0, -6.29425048828125e-05, 0.0, -1.3947486877441406e-05, -3.4332275390625e-05, -0.0005972385406494141, -1.3828277587890625e-05, -3.24249267578125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001201629638671875, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -0.0002269744873046875, -3.933904736186378e-06, -0.04742431640625, -5.7220458984375e-06, -0.0003032684326171875, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -3.24249267578125e-05, -0.01878228783607483, -5.960462772236497e-07, 0.0, -5.815362930297852, -2.6702880859375e-05], "choice_history": [93, 145, 230, 101, 125, "Humility", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Humility", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 90, 109]}, {"inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.calculate_attack()\n        self.target.change_attack(1 - self.target.calculate_attack())\n        self.target.card.summon(self.target)\n", "score": -7.785564891891333, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Humility", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"left": {"_type": "Template14"}, "_type": "BinOp", "right": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}, "op": {"_type": "Sub"}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "summon", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"_type": "Template8"}}}, "args": [{"_type": "Template8"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.91278076171875e-05, -1.9073486328125e-05, -8.344646857949556e-07, -5.722038622479886e-06, -3.814697265625e-06, -9.72747802734375e-05, -0.000576019287109375, -0.000232696533203125, -1.9073486328125e-06, -4.0531158447265625e-06, -1.9073486328125e-06, 0.0, -6.103515625e-05, -0.000156402587890625, -2.86102294921875e-05, -1.33514404296875e-05, -0.000152587890625, -1.33514404296875e-05, -1.52587890625e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.2516897186287679e-05, -5.841255187988281e-06, -9.72747802734375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -0.00037419795989990234, -1.71661376953125e-05, -2.288818359375e-05, -0.00152587890625, -1.9073486328125e-06, -0.000125885009765625, -2.9802317840221804e-06, -3.814697265625e-06, -6.103515625e-05, -0.0003261566162109375, -3.814697265625e-05, -2.288818359375e-05, 0.0, -6.29425048828125e-05, 0.0, -1.3947486877441406e-05, -3.4332275390625e-05, -0.0005972385406494141, -1.3828277587890625e-05, -3.24249267578125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001201629638671875, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -0.0002269744873046875, -3.933904736186378e-06, -3.3288707733154297, -3.4332275390625e-05, -0.05920982360839844, -2.47955322265625e-05, -7.62939453125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.06421494483947754, -5.364403477869928e-06, -0.3077583312988281, -0.5277671813964844, -6.67572021484375e-05, -3.814697265625e-06, -0.000911712646484375, -0.002539991866797209, -9.357929229736328e-05, -0.006946563720703125, 0.0, -3.814697265625e-06, -0.0007476806640625, -1.33514404296875e-05, -1.9073486328125e-06, -0.019132614135742188, -0.005336754489690065, -2.0265579223632812e-06, 0.0, -0.09461116790771484, -0.0019865036010742188, -0.0026798248291015625, -0.001888275146484375, -0.0002765655517578125, -0.0003833770751953125, -1.33514404296875e-05, 0.0, -0.004820823669433594, -0.009638071060180664, -3.814697265625e-06, -0.0005245208740234375, 0.0, -1.9073486328125e-06, -0.0055408477783203125, -3.814697265625e-06, 0.0, -1.7676305770874023, -1.33514404296875e-05, -0.00086212158203125, -0.013234853744506836, -1.1920928244535389e-07, -0.36933648586273193, 0.0, -0.7412834167480469, -0.4417915344238281, -1.52587890625e-05], "choice_history": [93, 145, 230, 101, 125, "Humility", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Humility", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 18, 121, 15, 116, 52, "calculate_attack", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 56, 118, 28, 95, 18, 121, 15, 116, 52, "calculate_attack", "<EOS>", 102, 128, 18, 123, 15, 116, 15, 116, 52, "card", "<EOS>", "summon", "<EOS>", 216, 90, 109]}, {"inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.calculate_attack()\n        self.target.change_attack(1 - self.target.calculate_attack())\n        self.target.card.summon(player, game, len(player.minions))\n", "score": -8.737462844596955, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "Humility", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"left": {"_type": "Template14"}, "_type": "BinOp", "right": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}, "op": {"_type": "Sub"}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "summon", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"_type": "Template8"}}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}, {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.91278076171875e-05, -1.9073486328125e-05, -8.344646857949556e-07, -5.722038622479886e-06, -3.814697265625e-06, -9.72747802734375e-05, -0.000576019287109375, -0.000232696533203125, -1.9073486328125e-06, -4.0531158447265625e-06, -1.9073486328125e-06, 0.0, -6.103515625e-05, -0.000156402587890625, -2.86102294921875e-05, -1.33514404296875e-05, -0.000152587890625, -1.33514404296875e-05, -1.52587890625e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.2516897186287679e-05, -5.841255187988281e-06, -9.72747802734375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -0.00037419795989990234, -1.71661376953125e-05, -2.288818359375e-05, -0.00152587890625, -1.9073486328125e-06, -0.000125885009765625, -2.9802317840221804e-06, -3.814697265625e-06, -6.103515625e-05, -0.0003261566162109375, -3.814697265625e-05, -2.288818359375e-05, 0.0, -6.29425048828125e-05, 0.0, -1.3947486877441406e-05, -3.4332275390625e-05, -0.0005972385406494141, -1.3828277587890625e-05, -3.24249267578125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001201629638671875, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -0.0002269744873046875, -3.933904736186378e-06, -3.3288707733154297, -3.4332275390625e-05, -0.05920982360839844, -2.47955322265625e-05, -7.62939453125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.06421494483947754, -5.364403477869928e-06, -0.3077583312988281, -0.5277671813964844, -6.67572021484375e-05, -3.814697265625e-06, -0.000911712646484375, -0.002539991866797209, -9.357929229736328e-05, -0.006946563720703125, 0.0, -3.814697265625e-06, -0.0007476806640625, -1.33514404296875e-05, -1.9073486328125e-06, -0.019132614135742188, -0.005336754489690065, -2.0265579223632812e-06, 0.0, -0.09461116790771484, -0.0019865036010742188, -0.0026798248291015625, -0.001888275146484375, -0.0002765655517578125, -0.0003833770751953125, -1.33514404296875e-05, 0.0, -0.004820823669433594, -0.009638071060180664, -3.814697265625e-06, -0.0005245208740234375, 0.0, -1.9073486328125e-06, -0.0055408477783203125, -3.814697265625e-06, 0.0, -1.7676305770874023, -1.33514404296875e-05, -0.00086212158203125, -0.013234853744506836, -1.1920928244535389e-07, -0.36933648586273193, 0.0, -0.6603412628173828, -1.220747947692871, -0.0854349136352539, -8.392333984375e-05, -0.000125885009765625, 0.0, -0.08120441436767578, -0.006427764892578125, -5.7220458984375e-06, -1.9073486328125e-06, -0.008369803428649902, -3.814697265625e-06, -9.5367431640625e-06, -3.4332275390625e-05, -3.814697265625e-06, -0.06343269348144531, -0.008676502853631973, -3.814697265625e-06, -8.0108642578125e-05], "choice_history": [93, 145, 230, 101, 125, "Humility", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Humility", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 18, 121, 15, 116, 52, "calculate_attack", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 56, 118, 28, 95, 18, 121, 15, 116, 52, "calculate_attack", "<EOS>", 102, 128, 18, 123, 15, 116, 15, 116, 52, "card", "<EOS>", "summon", "<EOS>", 218, 75, 63, 146, "game", "<EOS>", 58, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 109]}, {"inferred_code": "super().use(player, game)\n", "score": -14.62052059173584, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-05, -14.009063720703125, -0.6114130020141602], "choice_history": [93, 145, 230, 108, 109]}, {"inferred_code": "", "score": -14.963184356689453, "model_output": {"_type": "Module", "body": [{"_type": "Template13_stmt_seq"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-05, -12.716858863830566, -2.246281623840332], "choice_history": [93, 145, 230, 109, 109]}, {"inferred_code": "", "score": -19.538314819335938, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -19.53830909729004], "choice_history": [93, 145, 228]}], "index": 54}
{"beams": [{"inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "score": -0.41099590417797316, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "<UNK>Mark", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Template31"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "set_health_to", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template14"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -2.86102294921875e-05, -0.0001277923583984375, -9.5367431640625e-06, -0.0026213577948510647, -0.00013648532330989838, -1.1920928244535389e-07, -1.52587890625e-05, -4.76837158203125e-05, -0.17353439331054688, -0.0001277923583984375, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, -3.62396240234375e-05, -9.5367431640625e-06, -1.71661376953125e-05, -0.0001544952392578125, -1.9073486328125e-06, -0.000598907470703125, -1.9073486328125e-06, -4.57763671875e-05, -0.0004889669944532216, -7.62939453125e-05, -4.649161837733118e-06, -1.9073486328125e-06, -8.96453857421875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.00024819374084472656, 0.0, -0.000156402587890625, -0.0023212432861328125, 0.0, -0.000148773193359375, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.1961669921875e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -6.079673767089844e-06, -0.0002193450927734375, -0.0004596710205078125, -9.5367431640625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0001373291015625, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.000133514404296875, -4.291534423828125e-06, -0.15606117248535156, -1.1444091796875e-05, -0.0001125335693359375, -3.814697265625e-06, -5.7220458984375e-06, -8.7738037109375e-05, -1.71661376953125e-05, 0.0, -6.67572021484375e-05, -0.05976776033639908, -6.31808916295995e-06, -5.7220458984375e-06, -0.0125579833984375, -9.5367431640625e-06], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Mark", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "<UNK>", " ", "Mark", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "set_health_to", "<EOS>", 216, 70, 109]}, {"inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and (len(player.minions) > 0 or\n            len(game.other_player.minions) > 0)\n", "score": -3.458467193931476, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "<UNK>Mark", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Template31"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "set_health_to", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template14"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"values": [{"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template31"}], "ops": [{"_type": "Gt"}]}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template31"}], "ops": [{"_type": "Gt"}]}], "_type": "BoolOp", "op": {"_type": "Or"}}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -2.86102294921875e-05, -0.0001277923583984375, -9.5367431640625e-06, -0.0026213577948510647, -0.00013648532330989838, -1.1920928244535389e-07, -1.52587890625e-05, -4.76837158203125e-05, -1.8559246063232422, -0.00019073486328125, 0.0, -6.556510470545618e-06, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.00493621826171875, -1.9073486328125e-06, -0.0058765411376953125, 0.0, -4.00543212890625e-05, -0.0004477259353734553, -7.069110870361328e-05, -4.5299530029296875e-06, 0.0, -0.0001087188720703125, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.00026726722717285156, 0.0, -0.000141143798828125, -0.0005893707275390625, 0.0, -0.000156402587890625, 0.0, -3.814697265625e-06, -4.1961669921875e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.38690185546875e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -6.079673767089844e-06, -0.0002193450927734375, -0.0004558563232421875, -9.5367431640625e-06, -9.5367431640625e-05, 0.0, -0.00022125244140625, 0.0, -1.9073486328125e-06, 0.0, -0.0001735687255859375, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -7.05718994140625e-05, -6.079673767089844e-06, -0.2226238250732422, -1.52587890625e-05, -0.0001392364501953125, -3.814697265625e-06, -5.7220458984375e-06, -5.91278076171875e-05, -1.52587890625e-05, 0.0, -7.43865966796875e-05, -0.059676073491573334, -6.43729799776338e-06, -5.7220458984375e-06, -0.011845588684082031, -0.01227569580078125, -0.000324249267578125, -0.0008916854858398438, -3.0517578125e-05, -8.58306884765625e-05, -1.9073486328125e-06, -0.0006122589111328125, -0.001926422119140625, -9.5367431640625e-06, -7.62939453125e-06, -3.814697265625e-05, 0.0, 0.0, -9.5367431640625e-06, -9.5367431640625e-05, -4.291534423828125e-06, -0.04746723175048828, -0.004935264587402344, -0.000438690185546875, -0.00794219970703125, -0.00030517578125, -0.0006771087646484375, -3.4332275390625e-05, -0.020599365234375, -3.814697265625e-05, -3.24249267578125e-05, -1.9073486328125e-05, -0.010881423950195312, -7.62939453125e-06, -0.00024139881134033203, -0.0034666061401367188, -0.0005016326904296875, 0.0, -5.53131103515625e-05, -0.0001049041748046875, -0.001186370849609375, -3.814697265625e-06, -3.0398367016459815e-05, -1.9073486328125e-06, -0.143280029296875, -0.0026617050170898438, -0.009762763977050781, -4.76837158203125e-05, -0.0008754730224609375, -0.000400543212890625, -0.024871826171875, -0.0001010894775390625, -4.76837158203125e-05, -1.71661376953125e-05, -5.53131103515625e-05, -5.841255187988281e-06, 0.0, -2.6702880859375e-05, -1.71661376953125e-05, -0.03981208801269531, -0.0019696629606187344, 0.0, -1.71661376953125e-05, -0.5293207168579102, -1.9073486328125e-06, -0.000614166259765625, -0.0007114410400390625, -1.71661376953125e-05, -0.062142372131347656, -8.20159912109375e-05, -0.00508880615234375, -0.0001068115234375, -0.0006413459777832031, -2.384185791015625e-06, -3.814697265625e-06, -6.866455078125e-05, -0.000499725341796875, -0.027101516723632812, 0.0, -0.12510013580322266, 0.0, -0.000308990478515625, 0.0, -0.01443469524383545, -2.5153160095214844e-05, -0.012817787006497383, -2.1457672119140625e-06, -1.33514404296875e-05, -0.17235469818115234, -3.814697265625e-06, -5.53131103515625e-05, -9.5367431640625e-06], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Mark", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "<UNK>", " ", "Mark", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "set_health_to", "<EOS>", 216, 70, 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 57, 119, 5, 217, 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 213, 7, 216, 83, 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 213, 7, 216, 83, 109]}, {"inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -4.2478890678019, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "<UNK>Mark", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Template31"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "die", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -2.86102294921875e-05, -0.0001277923583984375, -9.5367431640625e-06, -0.0026213577948510647, -0.00013648532330989838, -1.1920928244535389e-07, -1.52587890625e-05, -4.76837158203125e-05, -0.17353439331054688, -0.0001277923583984375, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, -3.62396240234375e-05, -9.5367431640625e-06, -1.71661376953125e-05, -0.0001544952392578125, -1.9073486328125e-06, -0.000598907470703125, -1.9073486328125e-06, -4.57763671875e-05, -0.0004889669944532216, -7.62939453125e-05, -4.649161837733118e-06, -1.9073486328125e-06, -8.96453857421875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.00024819374084472656, 0.0, -0.000156402587890625, -0.0023212432861328125, 0.0, -0.000148773193359375, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.1961669921875e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -6.079673767089844e-06, -0.0002193450927734375, -0.0004596710205078125, -9.5367431640625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0001373291015625, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.000133514404296875, -4.291534423828125e-06, -0.15606117248535156, -1.1444091796875e-05, -0.0001125335693359375, -3.814697265625e-06, -5.7220458984375e-06, -8.7738037109375e-05, -1.71661376953125e-05, 0.0, -6.67572021484375e-05, -3.895418643951416, -1.1920922133867862e-06, -2.6702880859375e-05, -0.013792037963867188, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Mark", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "<UNK>", " ", "Mark", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "die", "<EOS>", 216, 74, 109]}, {"inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and (len(player.minions) < 7 or\n            len(game.other_player.minions) > 0)\n", "score": -4.3208762212248, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "<UNK>Mark", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Template31"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "set_health_to", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template14"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"values": [{"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template24"}], "ops": [{"_type": "Lt"}]}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template31"}], "ops": [{"_type": "Gt"}]}], "_type": "BoolOp", "op": {"_type": "Or"}}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -2.86102294921875e-05, -0.0001277923583984375, -9.5367431640625e-06, -0.0026213577948510647, -0.00013648532330989838, -1.1920928244535389e-07, -1.52587890625e-05, -4.76837158203125e-05, -1.8559246063232422, -0.00019073486328125, 0.0, -6.556510470545618e-06, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.00493621826171875, -1.9073486328125e-06, -0.0058765411376953125, 0.0, -4.00543212890625e-05, -0.0004477259353734553, -7.069110870361328e-05, -4.5299530029296875e-06, 0.0, -0.0001087188720703125, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.00026726722717285156, 0.0, -0.000141143798828125, -0.0005893707275390625, 0.0, -0.000156402587890625, 0.0, -3.814697265625e-06, -4.1961669921875e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.38690185546875e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -6.079673767089844e-06, -0.0002193450927734375, -0.0004558563232421875, -9.5367431640625e-06, -9.5367431640625e-05, 0.0, -0.00022125244140625, 0.0, -1.9073486328125e-06, 0.0, -0.0001735687255859375, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -7.05718994140625e-05, -6.079673767089844e-06, -0.2226238250732422, -1.52587890625e-05, -0.0001392364501953125, -3.814697265625e-06, -5.7220458984375e-06, -5.91278076171875e-05, -1.52587890625e-05, 0.0, -7.43865966796875e-05, -0.059676073491573334, -6.43729799776338e-06, -5.7220458984375e-06, -0.011845588684082031, -0.01227569580078125, -0.000324249267578125, -0.0008916854858398438, -3.0517578125e-05, -8.58306884765625e-05, -1.9073486328125e-06, -0.0006122589111328125, -0.001926422119140625, -9.5367431640625e-06, -7.62939453125e-06, -3.814697265625e-05, 0.0, 0.0, -9.5367431640625e-06, -9.5367431640625e-05, -4.291534423828125e-06, -0.04746723175048828, -0.004935264587402344, -0.000438690185546875, -0.00794219970703125, -0.00030517578125, -0.0006771087646484375, -3.4332275390625e-05, -0.020599365234375, -3.814697265625e-05, -3.24249267578125e-05, -1.9073486328125e-05, -0.010881423950195312, -7.62939453125e-06, -0.00024139881134033203, -0.0034666061401367188, -0.0005016326904296875, 0.0, -5.53131103515625e-05, -0.0001049041748046875, -0.001186370849609375, -3.814697265625e-06, -3.0398367016459815e-05, -1.9073486328125e-06, -0.143280029296875, -0.0026617050170898438, -0.009762763977050781, -4.76837158203125e-05, -0.0008754730224609375, -0.000400543212890625, -0.024871826171875, -0.0001010894775390625, -4.76837158203125e-05, -1.71661376953125e-05, -5.53131103515625e-05, -5.841255187988281e-06, 0.0, -2.6702880859375e-05, -1.71661376953125e-05, -0.03981208801269531, -0.0019696629606187344, 0.0, -1.71661376953125e-05, -0.9012937545776367, -1.1444091796875e-05, -0.008144378662109375, -0.023423194885253906, -9.5367431640625e-06, -0.006215095520019531, -1.52587890625e-05, -0.06416130065917969, -0.0005435943603515625, -0.0012755393981933594, -4.5299530029296875e-06, -5.7220458984375e-06, -5.53131103515625e-05, -0.0005207061767578125, -0.026807785034179688, 0.0, -0.49440765380859375, -1.9073486328125e-06, -0.00018310546875, -1.9073486328125e-06, -0.009595632553100586, -4.4345855712890625e-05, -0.015977460891008377, -2.1457672119140625e-06, -1.33514404296875e-05, -0.26112937927246094, -3.814697265625e-06, -7.82012939453125e-05, -1.1444091796875e-05], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Mark", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "<UNK>", " ", "Mark", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "set_health_to", "<EOS>", 216, 70, 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 57, 119, 5, 217, 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 213, 12, 216, 79, 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 213, 7, 216, 83, 109]}, {"inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n        self.target.increase_health(1)\n        self.target.increase_health(1)\n", "score": -4.874645527275781, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "<UNK>Mark", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Template31"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "set_health_to", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template14"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template14"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template14"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -2.86102294921875e-05, -0.0001277923583984375, -9.5367431640625e-06, -0.0026213577948510647, -0.00013648532330989838, -1.1920928244535389e-07, -1.52587890625e-05, -4.76837158203125e-05, -0.17353439331054688, -0.0001277923583984375, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, -3.62396240234375e-05, -9.5367431640625e-06, -1.71661376953125e-05, -0.0001544952392578125, -1.9073486328125e-06, -0.000598907470703125, -1.9073486328125e-06, -4.57763671875e-05, -0.0004889669944532216, -7.62939453125e-05, -4.649161837733118e-06, -1.9073486328125e-06, -8.96453857421875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.00024819374084472656, 0.0, -0.000156402587890625, -0.0023212432861328125, 0.0, -0.000148773193359375, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.1961669921875e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -6.079673767089844e-06, -0.0002193450927734375, -0.0004596710205078125, -9.5367431640625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0001373291015625, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.000133514404296875, -4.291534423828125e-06, -2.027970314025879, -1.52587890625e-05, -1.1402692794799805, -3.814697265625e-06, -8.58306884765625e-05, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -0.0001239776611328125, -0.3870387375354767, -5.483625955093885e-06, -1.9073486328125e-06, -0.02349376678466797, -0.000141143798828125, 0.0, -1.9073486328125e-06, -0.11459922790527344, -0.00025177001953125, 0.0, -0.019819259643554688, -0.19853591918945312, 0.0, -1.9073486328125e-06, -0.05113410949707031, -0.0001239776611328125, 0.0, -1.9073486328125e-06, -0.4522266387939453, -0.000385284423828125, 0.0, -0.02388763427734375, -0.21150708198547363, 0.0, -1.9073486328125e-06, -0.040691375732421875, -2.09808349609375e-05], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Mark", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "<UNK>", " ", "Mark", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 102, 128, 18, 123, 15, 116, 52, "set_health_to", "<EOS>", 216, 70, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 70, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 70, 109]}, {"inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(1)\n", "score": -4.957919861945804, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "<UNK>Mark", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Template31"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template14"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -2.86102294921875e-05, -0.0001277923583984375, -9.5367431640625e-06, -0.0026213577948510647, -0.00013648532330989838, -1.1920928244535389e-07, -1.52587890625e-05, -4.76837158203125e-05, -0.17353439331054688, -0.0001277923583984375, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, -3.62396240234375e-05, -9.5367431640625e-06, -1.71661376953125e-05, -0.0001544952392578125, -1.9073486328125e-06, -0.000598907470703125, -1.9073486328125e-06, -4.57763671875e-05, -0.0004889669944532216, -7.62939453125e-05, -4.649161837733118e-06, -1.9073486328125e-06, -8.96453857421875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.00024819374084472656, 0.0, -0.000156402587890625, -0.0023212432861328125, 0.0, -0.000148773193359375, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.1961669921875e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -6.079673767089844e-06, -0.0002193450927734375, -0.0004596710205078125, -9.5367431640625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0001373291015625, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.000133514404296875, -4.291534423828125e-06, -0.15606117248535156, -1.1444091796875e-05, -0.0001125335693359375, -3.814697265625e-06, -5.7220458984375e-06, -8.7738037109375e-05, -1.71661376953125e-05, 0.0, -6.67572021484375e-05, -4.498189926147461, -9.536738616588991e-07, -3.814697265625e-06, -0.12106895446777344, -7.62939453125e-06], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Mark", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "<UNK>", " ", "Mark", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 70, 109]}, {"inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1 - self.target.calculate_attack())\n", "score": -5.0580244695847725, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "<UNK>Mark", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Template31"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "set_health_to", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"left": {"_type": "Template14"}, "_type": "BinOp", "right": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}, "op": {"_type": "Sub"}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -2.86102294921875e-05, -0.0001277923583984375, -9.5367431640625e-06, -0.0026213577948510647, -0.00013648532330989838, -1.1920928244535389e-07, -1.52587890625e-05, -4.76837158203125e-05, -0.17353439331054688, -0.0001277923583984375, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, -3.62396240234375e-05, -9.5367431640625e-06, -1.71661376953125e-05, -0.0001544952392578125, -1.9073486328125e-06, -0.000598907470703125, -1.9073486328125e-06, -4.57763671875e-05, -0.0004889669944532216, -7.62939453125e-05, -4.649161837733118e-06, -1.9073486328125e-06, -8.96453857421875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.00024819374084472656, 0.0, -0.000156402587890625, -0.0023212432861328125, 0.0, -0.000148773193359375, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.1961669921875e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -6.079673767089844e-06, -0.0002193450927734375, -0.0004596710205078125, -9.5367431640625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0001373291015625, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.000133514404296875, -4.291534423828125e-06, -0.15606117248535156, -1.1444091796875e-05, -0.0001125335693359375, -3.814697265625e-06, -5.7220458984375e-06, -8.7738037109375e-05, -1.71661376953125e-05, 0.0, -6.67572021484375e-05, -0.05976776033639908, -6.31808916295995e-06, -5.7220458984375e-06, -4.644242286682129, -0.001140594482421875, -0.0009222030639648438, -0.003726959228515625, -0.000396728515625, -0.00038909912109375, -5.7220458984375e-05, 0.0, -0.0023260116577148438, -0.00615084171295166, -1.9073486328125e-06, -0.0002422332763671875], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Mark", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "<UNK>", " ", "Mark", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "set_health_to", "<EOS>", 216, 56, 118, 28, 95, 18, 121, 15, 116, 52, "calculate_attack", "<EOS>", 109]}, {"inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(player.minions)\n        target.change_attack(1)\n", "score": -5.069115756020707, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "<UNK>Mark", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Template31"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "extend", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "args": [{"_type": "Template14"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -2.86102294921875e-05, -0.0001277923583984375, -9.5367431640625e-06, -0.0026213577948510647, -0.00013648532330989838, -1.1920928244535389e-07, -1.52587890625e-05, -4.76837158203125e-05, -0.17353439331054688, -0.0001277923583984375, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, -3.62396240234375e-05, -9.5367431640625e-06, -1.71661376953125e-05, -0.0001544952392578125, -1.9073486328125e-06, -0.000598907470703125, -1.9073486328125e-06, -4.57763671875e-05, -0.0004889669944532216, -7.62939453125e-05, -4.649161837733118e-06, -1.9073486328125e-06, -8.96453857421875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.00024819374084472656, 0.0, -0.000156402587890625, -0.0023212432861328125, 0.0, -0.000148773193359375, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.1961669921875e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -6.079673767089844e-06, -0.0002193450927734375, -0.0004596710205078125, -9.5367431640625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0001373291015625, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.000133514404296875, -4.291534423828125e-06, -2.027970314025879, -1.52587890625e-05, -0.3930501937866211, -3.814697265625e-05, -5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.16748249530792236, 0.0, -0.1095590591430664, -0.0002498626708984375, -1.33514404296875e-05, -7.62939453125e-06, -0.108673095703125, -5.7220458984375e-06, -0.0011521577835083008, -2.47955322265625e-05, -0.0002447356819175184, -3.814697265625e-06, -0.0001430511474609375, -0.008393287658691406, -1.9073486328125e-06, -0.0038909912109375, 0.0, -0.20516300201416016, -1.1444091796875e-05, -0.000240325927734375, -1.9073486328125e-06, -0.012132763862609863, -3.814697265625e-06, -0.0009729393641464412, -1.1920928244535389e-07, -0.0001430511474609375, -5.7220458984375e-06, -3.814697265625e-06, -0.0001735687255859375, -3.0517578125e-05, 0.0, -0.008802413940429688, -3.814697265625e-06, -0.13795554637908936, 0.0, -0.06249702349305153, -1.33514404296875e-05, -1.9073486328125e-06, -0.0013217926025390625, 0.0, -0.0282135009765625, -0.007246555294841528, 0.0, -0.7442083358764648, 0.0, 0.0, -0.01560211181640625, -3.814697265625e-06, 0.0, -0.0038604736328125, -1.9073486328125e-06, -0.5453352928161621, -5.960462772236497e-07, -0.12095673382282257, -5.9604644775390625e-06, -1.9073486328125e-06, -0.17096900939941406, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Mark", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "<UNK>", " ", "Mark", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "extend", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "target", "<EOS>", "change_attack", "<EOS>", 216, 70, 109]}, {"inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -5.193072963791103, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "<UNK>Mark", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Template31"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "set_health_to", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template14"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template24"}], "ops": [{"_type": "Lt"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -2.86102294921875e-05, -0.0001277923583984375, -9.5367431640625e-06, -0.0026213577948510647, -0.00013648532330989838, -1.1920928244535389e-07, -1.52587890625e-05, -4.76837158203125e-05, -1.8559246063232422, -0.00019073486328125, 0.0, -6.556510470545618e-06, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.00493621826171875, -1.9073486328125e-06, -0.0058765411376953125, 0.0, -4.00543212890625e-05, -0.0004477259353734553, -7.069110870361328e-05, -4.5299530029296875e-06, 0.0, -0.0001087188720703125, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.00026726722717285156, 0.0, -0.000141143798828125, -0.0005893707275390625, 0.0, -0.000156402587890625, 0.0, -3.814697265625e-06, -4.1961669921875e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.38690185546875e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -6.079673767089844e-06, -0.0002193450927734375, -0.0004558563232421875, -9.5367431640625e-06, -9.5367431640625e-05, 0.0, -0.00022125244140625, 0.0, -1.9073486328125e-06, 0.0, -0.0001735687255859375, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -7.05718994140625e-05, -6.079673767089844e-06, -0.2226238250732422, -1.52587890625e-05, -0.0001392364501953125, -3.814697265625e-06, -5.7220458984375e-06, -5.91278076171875e-05, -1.52587890625e-05, 0.0, -7.43865966796875e-05, -0.059676073491573334, -6.43729799776338e-06, -5.7220458984375e-06, -0.011845588684082031, -0.01227569580078125, -0.000324249267578125, -0.0008916854858398438, -3.0517578125e-05, -8.58306884765625e-05, -1.9073486328125e-06, -0.0006122589111328125, -0.001926422119140625, -9.5367431640625e-06, -7.62939453125e-06, -3.814697265625e-05, 0.0, 0.0, -9.5367431640625e-06, -9.5367431640625e-05, -4.291534423828125e-06, -0.04746723175048828, -0.004935264587402344, -0.000438690185546875, -0.00794219970703125, -0.00030517578125, -0.0006771087646484375, -3.4332275390625e-05, -0.020599365234375, -3.814697265625e-05, -3.24249267578125e-05, -1.9073486328125e-05, -0.010881423950195312, -7.62939453125e-06, -0.00024139881134033203, -0.0034666061401367188, -0.0005016326904296875, 0.0, -5.53131103515625e-05, -0.0001049041748046875, -0.001186370849609375, -3.814697265625e-06, -3.0398367016459815e-05, -1.9073486328125e-06, -2.139803886413574, -0.0005035400390625, -0.40313148498535156, -3.0517578125e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0005476474761962891, -1.9073486328125e-06, 0.0, -0.000133514404296875, -3.0517578125e-05, -0.28934288024902344, -0.0014811705332249403, 0.0, -2.47955322265625e-05, -0.048811912536621094, -1.33514404296875e-05, -0.02622222900390625, -7.62939453125e-06], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Mark", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "<UNK>", " ", "Mark", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "set_health_to", "<EOS>", 216, 70, 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 213, 12, 216, 79, 109]}, {"inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n\n    def can_use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "score": -5.3525126441877475, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "<UNK>Mark", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Template31"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "set_health_to", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template14"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "set_health_to", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template14"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -2.86102294921875e-05, -0.0001277923583984375, -9.5367431640625e-06, -0.0026213577948510647, -0.00013648532330989838, -1.1920928244535389e-07, -1.52587890625e-05, -4.76837158203125e-05, -1.8559246063232422, -0.00019073486328125, 0.0, -6.556510470545618e-06, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.00493621826171875, -1.9073486328125e-06, -0.0058765411376953125, 0.0, -4.00543212890625e-05, -0.0004477259353734553, -7.069110870361328e-05, -4.5299530029296875e-06, 0.0, -0.0001087188720703125, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.00026726722717285156, 0.0, -0.000141143798828125, -0.0005893707275390625, 0.0, -0.000156402587890625, 0.0, -3.814697265625e-06, -4.1961669921875e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.38690185546875e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -6.079673767089844e-06, -0.0002193450927734375, -0.0004558563232421875, -9.5367431640625e-06, -9.5367431640625e-05, 0.0, -0.00022125244140625, 0.0, -1.9073486328125e-06, 0.0, -0.0001735687255859375, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -7.05718994140625e-05, -6.079673767089844e-06, -0.2226238250732422, -1.52587890625e-05, -0.0001392364501953125, -3.814697265625e-06, -5.7220458984375e-06, -5.91278076171875e-05, -1.52587890625e-05, 0.0, -7.43865966796875e-05, -0.059676073491573334, -6.43729799776338e-06, -5.7220458984375e-06, -0.011845588684082031, -0.01227569580078125, -0.000324249267578125, -0.0008916854858398438, -3.0517578125e-05, -8.58306884765625e-05, -1.9073486328125e-06, -0.0006122589111328125, -0.001926422119140625, -9.5367431640625e-06, -7.62939453125e-06, -3.814697265625e-05, 0.0, 0.0, -9.5367431640625e-06, -9.5367431640625e-05, -4.291534423828125e-06, -3.0811290740966797, -0.00014495849609375, -0.0001239776611328125, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -9.918212890625e-05, -0.07415949553251266, -6.794924956921022e-06, -3.814697265625e-06, -0.012810707092285156, -7.62939453125e-06], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Mark", "<EOS>", 216, 73, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "<UNK>", " ", "Mark", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "set_health_to", "<EOS>", 216, 70, 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "set_health_to", "<EOS>", 216, 70, 109]}, {"inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n        self.target.increase_health(1)\n        self.target.<UNK>()\n", "score": -6.05956106987832, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "<UNK>Mark", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Template31"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "set_health_to", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template14"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "increase_health", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template14"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -2.86102294921875e-05, -0.0001277923583984375, -9.5367431640625e-06, -0.0026213577948510647, -0.00013648532330989838, -1.1920928244535389e-07, -1.52587890625e-05, -4.76837158203125e-05, -0.17353439331054688, -0.0001277923583984375, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, -3.62396240234375e-05, -9.5367431640625e-06, -1.71661376953125e-05, -0.0001544952392578125, -1.9073486328125e-06, -0.000598907470703125, -1.9073486328125e-06, -4.57763671875e-05, -0.0004889669944532216, -7.62939453125e-05, -4.649161837733118e-06, -1.9073486328125e-06, -8.96453857421875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.00024819374084472656, 0.0, -0.000156402587890625, -0.0023212432861328125, 0.0, -0.000148773193359375, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.1961669921875e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -6.079673767089844e-06, -0.0002193450927734375, -0.0004596710205078125, -9.5367431640625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0001373291015625, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.000133514404296875, -4.291534423828125e-06, -2.027970314025879, -1.52587890625e-05, -1.1402692794799805, -3.814697265625e-06, -8.58306884765625e-05, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -0.0001239776611328125, -0.3870387375354767, -5.483625955093885e-06, -1.9073486328125e-06, -0.02349376678466797, -0.000141143798828125, 0.0, -1.9073486328125e-06, -0.11459922790527344, -0.00025177001953125, 0.0, -0.019819259643554688, -0.19853591918945312, 0.0, -1.9073486328125e-06, -0.05113410949707031, -0.0001239776611328125, 0.0, -1.9073486328125e-06, -1.0164403915405273, -1.9073486328125e-06, 0.0, -0.6133613586425781, -0.2837965488433838, 0.0, -3.62396240234375e-05], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Mark", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "<UNK>", " ", "Mark", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 102, 128, 18, 123, 15, 116, 52, "set_health_to", "<EOS>", 216, 70, 102, 128, 18, 123, 15, 116, 52, "increase_health", "<EOS>", 216, 70, 102, 128, 18, 121, 15, 116, 52, "<UNK>", "<EOS>", 109]}, {"inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = self.target.health - self.target.calculate_attack()\n        self.target.change_attack(1)\n", "score": -6.74833800998703, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "<UNK>Mark", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Template31"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"left": {"attr": "health", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "BinOp", "right": {"func": {"attr": "calculate_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "_type": "Call"}, "op": {"_type": "Sub"}}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"_type": "Template14"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -2.86102294921875e-05, -0.0001277923583984375, -9.5367431640625e-06, -0.0026213577948510647, -0.00013648532330989838, -1.1920928244535389e-07, -1.52587890625e-05, -4.76837158203125e-05, -0.17353439331054688, -0.0001277923583984375, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, -3.62396240234375e-05, -9.5367431640625e-06, -1.71661376953125e-05, -0.0001544952392578125, -1.9073486328125e-06, -0.000598907470703125, -1.9073486328125e-06, -4.57763671875e-05, -0.0004889669944532216, -7.62939453125e-05, -4.649161837733118e-06, -1.9073486328125e-06, -8.96453857421875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.00024819374084472656, 0.0, -0.000156402587890625, -0.0023212432861328125, 0.0, -0.000148773193359375, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.1961669921875e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -6.079673767089844e-06, -0.0002193450927734375, -0.0004596710205078125, -9.5367431640625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0001373291015625, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.000133514404296875, -4.291534423828125e-06, -4.530329704284668, -3.0517578125e-05, -0.0067348480224609375, -1.9073486328125e-05, -1.9073486328125e-06, -0.0006923675537109375, -3.814697265625e-06, -0.2470637559890747, 0.0, -0.13265609741210938, -0.011223793029785156, -0.02714252471923828, -9.5367431640625e-06, -0.006927490234375, -0.007425546646118164, 0.0, -0.008764266967773438, -0.0008602142333984375, -0.005573272705078125, -0.0001850128173828125, 0.0, -0.024064064025878906, -0.004987597465515137, -7.62939453125e-06, -0.010923385620117188, -5.7220458984375e-06, 0.0, -3.62396240234375e-05, 0.0, -1.1444091796875e-05, -0.4932413101196289, -0.28174519538879395, -3.814697265625e-06, -1.9073486328125e-06, -0.7653779983520508, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Mark", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "<UNK>", " ", "Mark", "<EOS>", 83, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "targets", "<EOS>", 16, 118, 15, 116, 52, "health", "<EOS>", 95, 18, 121, 15, 116, 52, "calculate_attack", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "change_attack", "<EOS>", 216, 70, 109]}, {"inferred_code": "super().use(player, game)\n", "score": -15.170742988586426, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -2.86102294921875e-05, -12.565108299255371, -2.6056041717529297], "choice_history": [93, 145, 230, 108, 109]}, {"inferred_code": "", "score": -17.27604103088379, "model_output": {"_type": "Module", "body": [{"_type": "Template13_stmt_seq"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -2.86102294921875e-05, -13.62258529663086, -3.6534252166748047], "choice_history": [93, 145, 230, 109, 109]}, {"inferred_code": "", "score": -19.38168716430664, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, -1.9073486328125e-06, -19.381685256958008], "choice_history": [93, 145, 228]}], "index": 55}
{"beams": [{"inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -0.226034978813054, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "IronforgeRifleman", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -9.5367431640625e-06, -2.09808349609375e-05, -4.9591064453125e-05, -7.05718994140625e-05, -0.0001536492636660114, -0.004206381272524595, -3.576272320060525e-06, 0.0, -3.62396240234375e-05, -1.1444091796875e-05, -1.52587890625e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.000179290771484375, -5.53131103515625e-05, -0.000164031982421875, -6.103515625e-05, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -3.421248038648628e-05, -1.442432312614983e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.0001697540283203125, -3.24249267578125e-05, -1.52587890625e-05, -0.1682729721069336, -2.6702880859375e-05, -0.02214229106903076, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -0.004604339599609375, 0.0, -0.0005016326904296875, 0.0, -0.004070758353918791, -1.1920928244535389e-07, -2.09808349609375e-05, -0.004253506660461426, -1.9073486328125e-06, -2.86102294921875e-05, -1.33514404296875e-05, -0.000240325927734375, -5.7220458984375e-06, -0.0062255859375, -6.67572021484375e-05, -9.34600830078125e-05, 0.0, -0.0006004035240039229, -0.0003529332752805203, -0.0001392364501953125, -0.0028820037841796875, -5.7220458984375e-06, -0.0009403228759765625, -3.24249267578125e-05, 0.0, -0.00044083595275878906, -0.0008755922317504883, 0.0, -0.000499725341796875, -5.7220458984375e-06, -0.0002651214599609375, -1.9073486328125e-06, -8.7738037109375e-05, -1.9073486328125e-06, -0.0003144684305880219, -0.0004330873489379883, -9.5367431640625e-06, -0.0002079010009765625, -0.0002384185791015625, -2.09808349609375e-05, -7.2479248046875e-05, -5.7220458984375e-06, -0.00038230419158935547, -9.417533874511719e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, 0.0, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -8.392333984375e-05, -3.814697265625e-06, -1.0251998901367188e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-05, -2.47955322265625e-05, -4.887565864919452e-06, -6.318072337307967e-06, -0.0007875123992562294, -7.152531907195225e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Ironforge", "Rifleman", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ironforge", " ", "Rifleman", "<EOS>", 72, 89, 88, 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -1.9267842038676122, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "IronforgeRifleman", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -9.5367431640625e-06, -2.09808349609375e-05, -4.9591064453125e-05, -7.05718994140625e-05, -0.0001536492636660114, -0.004206381272524595, -3.576272320060525e-06, 0.0, -3.62396240234375e-05, -1.1444091796875e-05, -1.52587890625e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.000179290771484375, -5.53131103515625e-05, -0.000164031982421875, -6.103515625e-05, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -3.421248038648628e-05, -1.442432312614983e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.0001697540283203125, -3.24249267578125e-05, -1.52587890625e-05, -1.9122066497802734, -0.0001354217529296875, -0.0005494356155395508, -1.9073486328125e-06, -1.33514404296875e-05, -0.000438690185546875, -0.00045013427734375, -9.5367431640625e-06, -0.001171112060546875, -4.76837158203125e-05, -4.76837158203125e-05, -1.9073486328125e-06, -0.00019549470744095743, -0.00019370017980691046, -4.00543212890625e-05, -0.0006351470947265625, -0.0001010894775390625, -9.1552734375e-05, -1.71661376953125e-05, 0.0, -0.00075531005859375, -0.0003873109817504883, 0.0, -0.000102996826171875, -5.7220458984375e-06, -0.0006313323974609375, -1.9073486328125e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.0005286777159199119, -0.0002690553665161133, -3.814697265625e-06, -0.0003814697265625, -0.0004024505615234375, -9.5367431640625e-06, -6.103515625e-05, -7.62939453125e-06, -0.00019752979278564453, -0.00010406970977783203, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, 0.0, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -8.58306884765625e-05, -1.9073486328125e-06, -1.0251998901367188e-05, 0.0, -7.62939453125e-06, -5.53131103515625e-05, -2.47955322265625e-05, -4.768357030116022e-06, -6.437280717364047e-06, -0.0007901348872110248, -7.271740287251305e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Ironforge", "Rifleman", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ironforge", " ", "Rifleman", "<EOS>", 72, 89, 88, 224, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())),\n            combo=Battlecry(Damage(1), CharacterSelector(players=BothPlayer\n            (), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -4.8997968488257015, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "IronforgeRifleman", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "combo"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -9.5367431640625e-06, -2.09808349609375e-05, -4.9591064453125e-05, -7.05718994140625e-05, -0.0001536492636660114, -0.004206381272524595, -3.576272320060525e-06, 0.0, -3.62396240234375e-05, -1.1444091796875e-05, -1.52587890625e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.000179290771484375, -5.53131103515625e-05, -0.000164031982421875, -6.103515625e-05, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -3.421248038648628e-05, -1.442432312614983e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.0001697540283203125, -3.24249267578125e-05, -1.52587890625e-05, -0.1682729721069336, -2.6702880859375e-05, -3.909677267074585, 0.0, -0.00012969970703125, -7.82012939453125e-05, -0.0003147125244140625, -5.7220458984375e-06, -0.0025119781494140625, -4.9591064453125e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0004773473192472011, -0.0005613368703052402, -3.62396240234375e-05, -0.0009593963623046875, -9.34600830078125e-05, -0.00020599365234375, -1.71661376953125e-05, 0.0, -0.0007306337356567383, -0.0004750490188598633, 0.0, -0.0001220703125, -3.814697265625e-06, -0.0006256103515625, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -0.000547987874597311, -0.0003987550735473633, -1.9073486328125e-06, -0.0004520416259765625, -0.000408172607421875, -9.5367431640625e-06, -6.4849853515625e-05, -7.62939453125e-06, -0.00021076202392578125, -0.00010204315185546875, -1.9073486328125e-06, -1.9073486328125e-06, -0.46970272064208984, 0.0, -0.0001354217529296875, -0.0002002716064453125, -0.003925323486328125, -5.7220458984375e-06, -0.1772003173828125, -0.000431060791015625, -1.52587890625e-05, -1.9073486328125e-06, -0.0006993935094214976, -0.0014095875667408109, -3.62396240234375e-05, -0.14610958099365234, -4.76837158203125e-05, -0.0004520416259765625, -1.33514404296875e-05, 0.0, -0.0013908147811889648, -0.0009347200393676758, 0.0, -0.0009002685546875, -1.1444091796875e-05, -0.0001964569091796875, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -0.00032471949816681445, -0.0003129243850708008, -1.1444091796875e-05, -0.0003299713134765625, -0.000194549560546875, -1.71661376953125e-05, -6.103515625e-05, -3.814697265625e-06, -0.00033664703369140625, -0.00010395050048828125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, 0.0, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -8.392333984375e-05, -3.814697265625e-06, -1.0371208190917969e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-05, -2.47955322265625e-05, -4.887565864919452e-06, -6.318072337307967e-06, -0.0007913270965218544, -7.271740287251305e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Ironforge", "Rifleman", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ironforge", " ", "Rifleman", "<EOS>", 72, 89, 88, 225, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 205, "combo", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(damage(), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -5.68431184484421, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "IronforgeRifleman", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"hole0": "damage", "_type": "Template5"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -9.5367431640625e-06, -2.09808349609375e-05, -4.9591064453125e-05, -7.05718994140625e-05, -0.0001536492636660114, -0.004206381272524595, -3.576272320060525e-06, 0.0, -3.62396240234375e-05, -1.1444091796875e-05, -1.52587890625e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.000179290771484375, -5.53131103515625e-05, -0.000164031982421875, -6.103515625e-05, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -3.421248038648628e-05, -1.442432312614983e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.0001697540283203125, -3.24249267578125e-05, -1.52587890625e-05, -0.1682729721069336, -2.6702880859375e-05, -0.02214229106903076, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -0.004604339599609375, 0.0, -0.0005016326904296875, 0.0, -0.004070758353918791, -1.1920928244535389e-07, -2.09808349609375e-05, -0.004253506660461426, -1.9073486328125e-06, -2.86102294921875e-05, -1.33514404296875e-05, -0.000240325927734375, -5.7220458984375e-06, -5.153572082519531, -2.288818359375e-05, -0.09879254549741745, -0.01463010348379612, -5.7220458984375e-06, -0.0002193450927734375, -0.18400955200195312, 0.0, -0.015212535858154297, -0.0013751983642578125, 0.0, -0.00347137451171875, -7.62939453125e-06, -0.0002765655517578125, -1.9073486328125e-06, -4.76837158203125e-05, -1.9073486328125e-06, -0.0004235460364725441, -0.0004845857620239258, -7.62939453125e-06, -0.00023651123046875, -0.0002460479736328125, -1.52587890625e-05, -5.53131103515625e-05, -5.7220458984375e-06, -0.00032520294189453125, -0.00010955333709716797, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, 0.0, 0.0, -6.4849853515625e-05, -3.814697265625e-06, -7.62939453125e-05, -1.9073486328125e-06, -1.0251998901367188e-05, 0.0, -9.5367431640625e-06, -5.91278076171875e-05, -2.47955322265625e-05, -5.0067742449755315e-06, -6.318072337307967e-06, -0.0007984800613485277, -7.271740287251305e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Ironforge", "Rifleman", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ironforge", " ", "Rifleman", "<EOS>", 72, 89, 88, 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 87, 193, "damage", "<EOS>", 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -5.832231907582411, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "IronforgeRifleman", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "PIRATE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -9.5367431640625e-06, -2.09808349609375e-05, -4.9591064453125e-05, -7.05718994140625e-05, -0.0001536492636660114, -0.004206381272524595, -3.576272320060525e-06, 0.0, -3.62396240234375e-05, -1.1444091796875e-05, -1.52587890625e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.000179290771484375, -5.53131103515625e-05, -0.000164031982421875, -6.103515625e-05, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -3.421248038648628e-05, -1.442432312614983e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.0001697540283203125, -3.24249267578125e-05, -1.52587890625e-05, -0.1682729721069336, -2.6702880859375e-05, -0.02214229106903076, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -0.004604339599609375, 0.0, -0.0005016326904296875, 0.0, -5.618162631988525, -2.5153160095214844e-05, -0.0002288818359375, -0.000675201416015625, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, -0.000141143798828125, -3.814697265625e-06, -0.003108978271484375, -5.7220458984375e-05, -0.00011444091796875, 0.0, -0.0004737096023745835, -0.00024745537666603923, -0.0001125335693359375, -0.0018253326416015625, -7.62939453125e-06, -0.00089263916015625, -3.24249267578125e-05, 0.0, -0.00044274330139160156, -0.0008984804153442383, 0.0, -0.0004940032958984375, -5.7220458984375e-06, -0.0002727508544921875, -1.9073486328125e-06, -8.58306884765625e-05, -1.9073486328125e-06, -0.0003154221922159195, -0.000423431396484375, -9.5367431640625e-06, -0.0002079010009765625, -0.0002384185791015625, -2.09808349609375e-05, -7.2479248046875e-05, -5.7220458984375e-06, -0.00038039684295654297, -9.417533874511719e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, 0.0, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -8.392333984375e-05, -3.814697265625e-06, -1.0251998901367188e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-05, -2.47955322265625e-05, -4.887565864919452e-06, -6.318072337307967e-06, -0.0007875123992562294, -7.152531907195225e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Ironforge", "Rifleman", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ironforge", " ", "Rifleman", "<EOS>", 72, 89, 88, 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>.<UNK>,\n            battlecry=Battlecry(Damage(1), CharacterSelector(players=\n            BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -5.980828526663629, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "IronforgeRifleman", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -9.5367431640625e-06, -2.09808349609375e-05, -4.9591064453125e-05, -7.05718994140625e-05, -0.0001536492636660114, -0.004206381272524595, -3.576272320060525e-06, 0.0, -3.62396240234375e-05, -1.1444091796875e-05, -1.52587890625e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.000179290771484375, -5.53131103515625e-05, -0.000164031982421875, -6.103515625e-05, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -3.421248038648628e-05, -1.442432312614983e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.0001697540283203125, -3.24249267578125e-05, -1.52587890625e-05, -0.1682729721069336, -2.6702880859375e-05, -0.02214229106903076, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -5.394095420837402, 0.0, -1.9073486328125e-06, 0.0, -0.0396881103515625, 0.0, -0.0052793025970458984, 0.0, -0.026697542518377304, -3.933906555175781e-06, -1.1444091796875e-05, -0.29254841804504395, 0.0, -0.0005474090576171875, -1.1444091796875e-05, -0.0010814666748046875, -5.7220458984375e-06, -0.014772415161132812, -7.2479248046875e-05, -8.20159912109375e-05, 0.0, -0.0005766829708591104, -0.00037402735324576497, -0.0001220703125, -0.0026702880859375, -5.7220458984375e-06, -0.001232147216796875, -3.0517578125e-05, 0.0, -0.00040459632873535156, -0.0008584260940551758, 0.0, -0.0004940032958984375, -5.7220458984375e-06, -0.000270843505859375, -1.9073486328125e-06, -8.58306884765625e-05, -1.9073486328125e-06, -0.0003139920299872756, -0.000457763671875, -9.5367431640625e-06, -0.0002040863037109375, -0.000240325927734375, -2.09808349609375e-05, -7.2479248046875e-05, -5.7220458984375e-06, -0.00037848949432373047, -9.417533874511719e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, 0.0, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -8.392333984375e-05, -3.814697265625e-06, -1.0251998901367188e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-05, -2.47955322265625e-05, -4.887565864919452e-06, -6.318072337307967e-06, -0.0007875123992562294, -7.152531907195225e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Ironforge", "Rifleman", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ironforge", " ", "Rifleman", "<EOS>", 72, 89, 88, 225, 205, "minion_type", "<EOS>", 15, 116, 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "<UNK>", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())),\n            taunt=True)\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -6.188043197366881, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "IronforgeRifleman", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}, {"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -9.5367431640625e-06, -2.09808349609375e-05, -4.9591064453125e-05, -7.05718994140625e-05, -0.0001536492636660114, -0.004206381272524595, -3.576272320060525e-06, 0.0, -3.62396240234375e-05, -1.1444091796875e-05, -1.52587890625e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.000179290771484375, -5.53131103515625e-05, -0.000164031982421875, -6.103515625e-05, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -3.421248038648628e-05, -1.442432312614983e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.0001697540283203125, -3.24249267578125e-05, -1.52587890625e-05, -0.1682729721069336, -2.6702880859375e-05, -3.909677267074585, 0.0, -0.00012969970703125, -7.82012939453125e-05, -0.0003147125244140625, -5.7220458984375e-06, -0.0025119781494140625, -4.9591064453125e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0004773473192472011, -0.0005613368703052402, -3.62396240234375e-05, -0.0009593963623046875, -9.34600830078125e-05, -0.00020599365234375, -1.71661376953125e-05, 0.0, -0.0007306337356567383, -0.0004750490188598633, 0.0, -0.0001220703125, -3.814697265625e-06, -0.0006256103515625, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -0.000547987874597311, -0.0003987550735473633, -1.9073486328125e-06, -0.0004520416259765625, -0.000408172607421875, -9.5367431640625e-06, -6.4849853515625e-05, -7.62939453125e-06, -0.00021076202392578125, -0.00010204315185546875, -1.9073486328125e-06, -1.9073486328125e-06, -2.0534048080444336, 0.0, -0.015347480773925781, -0.02486133575439453, -0.00018882742733694613, -4.815939246327616e-05, -1.1444091796875e-05, -1.9073486328125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.0132789611816406e-05, 0.0, -1.1444091796875e-05, -5.14984130859375e-05, -2.47955322265625e-05, -5.245191459835041e-06, -9.059865078597795e-06, -0.0007671271450817585, -6.9141146923357155e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Ironforge", "Rifleman", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ironforge", " ", "Rifleman", "<EOS>", 72, 89, 88, 225, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class Ironforge<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -6.190901893133791, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Ironforge<UNK>", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -9.5367431640625e-06, -2.09808349609375e-05, -4.9591064453125e-05, -7.05718994140625e-05, -0.0001536492636660114, -5.969073295593262, -3.576272320060525e-06, 0.0, -3.62396240234375e-05, -1.1444091796875e-05, -1.52587890625e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.000179290771484375, -5.53131103515625e-05, -0.000164031982421875, -6.103515625e-05, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -3.421248038648628e-05, -1.442432312614983e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.0001697540283203125, -3.24249267578125e-05, -1.52587890625e-05, -0.1682729721069336, -2.6702880859375e-05, -0.02214229106903076, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -0.004604339599609375, 0.0, -0.0005016326904296875, 0.0, -0.004070758353918791, -1.1920928244535389e-07, -2.09808349609375e-05, -0.004253506660461426, -1.9073486328125e-06, -2.86102294921875e-05, -1.33514404296875e-05, -0.000240325927734375, -5.7220458984375e-06, -0.0062255859375, -6.67572021484375e-05, -9.34600830078125e-05, 0.0, -0.0006004035240039229, -0.0003529332752805203, -0.0001392364501953125, -0.0028820037841796875, -5.7220458984375e-06, -0.0009403228759765625, -3.24249267578125e-05, 0.0, -0.00044083595275878906, -0.0008755922317504883, 0.0, -0.000499725341796875, -5.7220458984375e-06, -0.0002651214599609375, -1.9073486328125e-06, -8.7738037109375e-05, -1.9073486328125e-06, -0.0003144684305880219, -0.0004330873489379883, -9.5367431640625e-06, -0.0002079010009765625, -0.0002384185791015625, -2.09808349609375e-05, -7.2479248046875e-05, -5.7220458984375e-06, -0.00038230419158935547, -9.417533874511719e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, 0.0, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -8.392333984375e-05, -3.814697265625e-06, -1.0251998901367188e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-05, -2.47955322265625e-05, -4.887565864919452e-06, -6.318072337307967e-06, -0.0007875123992562294, -7.152531907195225e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Ironforge", "<UNK>", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ironforge", " ", "Rifleman", "<EOS>", 72, 89, 88, 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, combo=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -6.649337298383266, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "IronforgeRifleman", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "combo"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -9.5367431640625e-06, -2.09808349609375e-05, -4.9591064453125e-05, -7.05718994140625e-05, -0.0001536492636660114, -0.004206381272524595, -3.576272320060525e-06, 0.0, -3.62396240234375e-05, -1.1444091796875e-05, -1.52587890625e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.000179290771484375, -5.53131103515625e-05, -0.000164031982421875, -6.103515625e-05, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -3.421248038648628e-05, -1.442432312614983e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.0001697540283203125, -3.24249267578125e-05, -1.52587890625e-05, -0.1682729721069336, -2.6702880859375e-05, -0.02214229106903076, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -0.004604339599609375, 0.0, -0.0005016326904296875, 0.0, -0.004070758353918791, -1.1920928244535389e-07, -2.09808349609375e-05, -6.428976535797119, 0.0, -4.38690185546875e-05, -1.71661376953125e-05, -0.0001583099365234375, -3.814697265625e-06, -0.0048999786376953125, -6.29425048828125e-05, -9.918212890625e-05, 0.0, -0.0005237616132944822, -0.0002747489488683641, -0.00020599365234375, -0.002834320068359375, -5.7220458984375e-06, -0.0011119842529296875, -3.24249267578125e-05, 0.0, -0.00044846534729003906, -0.0007840394973754883, 0.0, -0.00052642822265625, -5.7220458984375e-06, -0.000263214111328125, -1.9073486328125e-06, -8.392333984375e-05, -1.9073486328125e-06, -0.0003151838027406484, -0.0004291534423828125, -9.5367431640625e-06, -0.0002040863037109375, -0.000240325927734375, -2.09808349609375e-05, -7.2479248046875e-05, -5.7220458984375e-06, -0.00038421154022216797, -9.417533874511719e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, 0.0, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -8.392333984375e-05, -3.814697265625e-06, -1.0251998901367188e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-05, -2.47955322265625e-05, -4.887565864919452e-06, -6.318072337307967e-06, -0.0007875123992562294, -7.152531907195225e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Ironforge", "Rifleman", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ironforge", " ", "Rifleman", "<EOS>", 72, 89, 88, 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 205, "combo", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class Ironforge(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -6.653594154951001, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Ironforge", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -9.5367431640625e-06, -2.09808349609375e-05, -4.9591064453125e-05, -7.05718994140625e-05, -0.0001536492636660114, -6.430737495422363, -1.9073486328125e-06, -0.0002079010009765625, -4.38690185546875e-05, -9.5367431640625e-06, -2.09808349609375e-05, -5.960462772236497e-07, 0.0, -1.9073486328125e-06, -4.57763671875e-05, -0.000156402587890625, -5.14984130859375e-05, -0.0001773834228515625, -6.103515625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.00543212890625e-05, -3.528532761265524e-05, -1.442432312614983e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.000171661376953125, -3.24249267578125e-05, -1.52587890625e-05, -0.16939353942871094, -2.6702880859375e-05, -0.021575927734375, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -0.0047283172607421875, 0.0, -0.0005092620849609375, 0.0, -0.004099726211279631, -1.1920928244535389e-07, -2.09808349609375e-05, -0.0043402910232543945, -1.9073486328125e-06, -2.86102294921875e-05, -1.33514404296875e-05, -0.000240325927734375, -5.7220458984375e-06, -0.0062351226806640625, -6.67572021484375e-05, -9.34600830078125e-05, 0.0, -0.0005967086181044579, -0.000351741531630978, -0.0001373291015625, -0.002899169921875, -5.7220458984375e-06, -0.00093841552734375, -3.24249267578125e-05, 0.0, -0.00044083595275878906, -0.0008794069290161133, 0.0, -0.000499725341796875, -5.7220458984375e-06, -0.0002651214599609375, -1.9073486328125e-06, -8.7738037109375e-05, -1.9073486328125e-06, -0.0003149452095385641, -0.0004330873489379883, -9.5367431640625e-06, -0.0002079010009765625, -0.0002384185791015625, -2.09808349609375e-05, -7.2479248046875e-05, -5.7220458984375e-06, -0.00038230419158935547, -9.417533874511719e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, 0.0, 0.0, -4.76837158203125e-05, -3.814697265625e-06, -8.392333984375e-05, -3.814697265625e-06, -1.0251998901367188e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-05, -2.288818359375e-05, -4.887565864919452e-06, -6.437280717364047e-06, -0.0007900160271674395, -7.152531907195225e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Ironforge", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ironforge", " ", "Rifleman", "<EOS>", 72, 89, 88, 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(5), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -7.022649027961101, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "IronforgeRifleman", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "<UNK>", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -9.5367431640625e-06, -2.09808349609375e-05, -4.9591064453125e-05, -7.05718994140625e-05, -0.0001536492636660114, -0.004206381272524595, -3.576272320060525e-06, 0.0, -3.62396240234375e-05, -1.1444091796875e-05, -1.52587890625e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.000179290771484375, -5.53131103515625e-05, -0.000164031982421875, -6.103515625e-05, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -3.421248038648628e-05, -1.442432312614983e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.0001697540283203125, -3.24249267578125e-05, -1.52587890625e-05, -0.1682729721069336, -2.6702880859375e-05, -0.02214229106903076, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -0.004604339599609375, 0.0, -0.0005016326904296875, 0.0, -0.004070758353918791, -1.1920928244535389e-07, -2.09808349609375e-05, -0.004253506660461426, -1.9073486328125e-06, -2.86102294921875e-05, -1.33514404296875e-05, -0.000240325927734375, -5.7220458984375e-06, -0.0062255859375, -6.67572021484375e-05, -9.34600830078125e-05, 0.0, -0.0006004035240039229, -0.0003529332752805203, -0.0001392364501953125, -6.794116020202637, -0.0003948211669921875, -0.0043964385986328125, -1.33514404296875e-05, 0.0, -0.0007191896438598633, -0.00170135498046875, 0.0, -0.0007877349853515625, -3.814697265625e-06, -0.0004425048828125, -1.9073486328125e-06, -0.0001049041748046875, -1.9073486328125e-06, -0.00032948708394542336, -0.0003758668899536133, -9.5367431640625e-06, -0.00022125244140625, -0.00025177001953125, -2.09808349609375e-05, -7.05718994140625e-05, -3.814697265625e-06, -0.00036895275115966797, -9.417533874511719e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, 0.0, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -8.58306884765625e-05, -3.814697265625e-06, -1.0251998901367188e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-05, -2.47955322265625e-05, -4.887565864919452e-06, -6.318072337307967e-06, -0.0007873931899666786, -7.152531907195225e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Ironforge", "Rifleman", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ironforge", " ", "Rifleman", "<EOS>", 72, 89, 88, 225, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 77, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())),\n            combo=Battlecry(Damage(2), CharacterSelector(players=BothPlayer\n            (), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -7.1119735287794015, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "IronforgeRifleman", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}, {"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template12"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "combo"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -9.5367431640625e-06, -2.09808349609375e-05, -4.9591064453125e-05, -7.05718994140625e-05, -0.0001536492636660114, -0.004206381272524595, -3.576272320060525e-06, 0.0, -3.62396240234375e-05, -1.1444091796875e-05, -1.52587890625e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.000179290771484375, -5.53131103515625e-05, -0.000164031982421875, -6.103515625e-05, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -3.421248038648628e-05, -1.442432312614983e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.0001697540283203125, -3.24249267578125e-05, -1.52587890625e-05, -0.1682729721069336, -2.6702880859375e-05, -3.909677267074585, 0.0, -0.00012969970703125, -7.82012939453125e-05, -0.0003147125244140625, -5.7220458984375e-06, -0.0025119781494140625, -4.9591064453125e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0004773473192472011, -0.0005613368703052402, -3.62396240234375e-05, -0.0009593963623046875, -9.34600830078125e-05, -0.00020599365234375, -1.71661376953125e-05, 0.0, -0.0007306337356567383, -0.0004750490188598633, 0.0, -0.0001220703125, -3.814697265625e-06, -0.0006256103515625, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -0.000547987874597311, -0.0003987550735473633, -1.9073486328125e-06, -0.0004520416259765625, -0.000408172607421875, -9.5367431640625e-06, -6.4849853515625e-05, -7.62939453125e-06, -0.00021076202392578125, -0.00010204315185546875, -1.9073486328125e-06, -1.9073486328125e-06, -0.46970272064208984, 0.0, -0.0001354217529296875, -0.0002002716064453125, -0.003925323486328125, -5.7220458984375e-06, -0.1772003173828125, -0.000431060791015625, -1.52587890625e-05, -1.9073486328125e-06, -0.0006993935094214976, -0.0014095875667408109, -3.62396240234375e-05, -2.3365707397460938, -1.33514404296875e-05, -0.015209197998046875, -3.814697265625e-06, 0.0, -0.006667494773864746, -0.0007574558258056641, 0.0, -0.0027256011962890625, -9.5367431640625e-06, -0.0002307891845703125, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -0.00032603018917143345, -0.0003758668899536133, -1.1444091796875e-05, -0.000308990478515625, -0.0002002716064453125, -1.71661376953125e-05, -5.91278076171875e-05, -3.814697265625e-06, -0.00032711029052734375, -0.00010776519775390625, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, 0.0, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -8.392333984375e-05, -3.814697265625e-06, -1.0371208190917969e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-05, -2.47955322265625e-05, -4.887565864919452e-06, -6.318072337307967e-06, -0.0007912078872323036, -7.271740287251305e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Ironforge", "Rifleman", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ironforge", " ", "Rifleman", "<EOS>", 72, 89, 88, 225, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 205, "combo", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 69, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())),\n            combo=Battlecry(damage(), CharacterSelector(players=BothPlayer(\n            ), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -7.158972160920769, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "IronforgeRifleman", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Damage", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "battlecry"}, {"value": {"func": {"_type": "Template21"}, "args": [{"hole0": "damage", "_type": "Template5"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template5"}, "_type": "keyword", "arg": "picker"}]}], "_type": "Call"}, "_type": "keyword", "arg": "combo"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 2, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -9.5367431640625e-06, -2.09808349609375e-05, -4.9591064453125e-05, -7.05718994140625e-05, -0.0001536492636660114, -0.004206381272524595, -3.576272320060525e-06, 0.0, -3.62396240234375e-05, -1.1444091796875e-05, -1.52587890625e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.000179290771484375, -5.53131103515625e-05, -0.000164031982421875, -6.103515625e-05, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -3.421248038648628e-05, -1.442432312614983e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.0001697540283203125, -3.24249267578125e-05, -1.52587890625e-05, -0.1682729721069336, -2.6702880859375e-05, -3.909677267074585, 0.0, -0.00012969970703125, -7.82012939453125e-05, -0.0003147125244140625, -5.7220458984375e-06, -0.0025119781494140625, -4.9591064453125e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0004773473192472011, -0.0005613368703052402, -3.62396240234375e-05, -0.0009593963623046875, -9.34600830078125e-05, -0.00020599365234375, -1.71661376953125e-05, 0.0, -0.0007306337356567383, -0.0004750490188598633, 0.0, -0.0001220703125, -3.814697265625e-06, -0.0006256103515625, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -0.000547987874597311, -0.0003987550735473633, -1.9073486328125e-06, -0.0004520416259765625, -0.000408172607421875, -9.5367431640625e-06, -6.4849853515625e-05, -7.62939453125e-06, -0.00021076202392578125, -0.00010204315185546875, -1.9073486328125e-06, -1.9073486328125e-06, -0.46970272064208984, 0.0, -0.0001354217529296875, -0.0002002716064453125, -0.003925323486328125, -5.7220458984375e-06, -1.8192672729492188, 0.0, -0.7249280214309692, -0.02235346846282482, -0.000164031982421875, -0.00112152099609375, -0.011219024658203125, 0.0, -0.0032846927642822266, -0.000255584716796875, 0.0, -0.006381034851074219, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.00034427299397066236, -0.0003987550735473633, -9.5367431640625e-06, -0.000225067138671875, -0.000213623046875, -1.33514404296875e-05, -4.76837158203125e-05, -5.7220458984375e-06, -0.00031745433807373047, -0.00010764598846435547, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, 0.0, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -8.392333984375e-05, -3.814697265625e-06, -1.0371208190917969e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-05, -2.47955322265625e-05, -5.0067742449755315e-06, -6.198863957251888e-06, -0.0007924000965431333, -7.152531907195225e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Ironforge", "Rifleman", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ironforge", " ", "Rifleman", "<EOS>", 72, 89, 88, 225, 205, "battlecry", "<EOS>", 18, 123, 34, 217, 58, 123, 23, 146, "Damage", "<EOS>", 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 205, "combo", "<EOS>", 18, 123, 34, 217, 87, 193, "damage", "<EOS>", 58, 122, 23, 146, "Character", "Selector", "<EOS>", 225, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 205, "picker", "<EOS>", 51, 193, "User", "Picker", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "2", "<EOS>", 109]}, {"inferred_code": "", "score": -20.145648956298828, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-05, -9.5367431640625e-06, -20.145620346069336], "choice_history": [93, 145, 228]}, {"inferred_code": "super().use(player, game)\n", "score": -20.302590370178223, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -9.5367431640625e-06, -2.09808349609375e-05, -14.579730987548828, -5.722809791564941], "choice_history": [93, 145, 230, 108, 109]}], "index": 56}
{"beams": [{"inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "score": -0.014022469828887552, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "IronfurGrizzly", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template16"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.0001408954558428377, -0.0004522978269960731, -0.00011121629358967766, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.05718994140625e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -3.4332275390625e-05, -3.814697265625e-06, -9.72747802734375e-05, -0.0001926422119140625, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -3.0517578125e-05, -3.409330747672357e-05, -1.1920928955078125e-05, -2.741813204920618e-06, -1.1444091796875e-05, -0.0001468658447265625, -4.57763671875e-05, -1.1444091796875e-05, -0.000270843505859375, 0.0, -2.5391578674316406e-05, -3.933906555175781e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.0013049840927124023, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -5.91278076171875e-05, -1.33514404296875e-05, -5.14984130859375e-05, -5.91278076171875e-05, -0.0001125335693359375, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.008486747741699219, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.000133514404296875, -7.62939453125e-06, -0.0001068115234375, -5.53131103515625e-05, -3.0517578125e-05, -3.814697265625e-06, -0.0014098873361945152, -2.7179718017578125e-05, -7.43865966796875e-05, -0.0001010894775390625, -3.397456384846009e-05, -4.768360213347478e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Ironfur", "Grizzly", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ironfur", " ", "Grizzly", "<EOS>", 72, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 72, 72, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(3, 3, taunt=True)\n", "score": -4.9598886970588865, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "IronfurGrizzly", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template16"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.0001408954558428377, -0.0004522978269960731, -0.00011121629358967766, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.05718994140625e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -3.4332275390625e-05, -3.814697265625e-06, -9.72747802734375e-05, -0.0001926422119140625, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -3.0517578125e-05, -3.409330747672357e-05, -1.1920928955078125e-05, -2.741813204920618e-06, -1.1444091796875e-05, -0.0001468658447265625, -4.57763671875e-05, -1.1444091796875e-05, -0.000270843505859375, 0.0, -2.5391578674316406e-05, -3.933906555175781e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.0013049840927124023, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -5.91278076171875e-05, -1.33514404296875e-05, -5.14984130859375e-05, -5.91278076171875e-05, -0.0001125335693359375, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -4.954652786254883, -1.9073486328125e-06, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -3.24249267578125e-05, -9.5367431640625e-06, -0.0001277923583984375, -5.7220458984375e-06, -0.0001316070556640625, -5.53131103515625e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.0010691873030737042, -2.3245811462402344e-05, -7.62939453125e-05, -0.0001049041748046875, -3.421294968575239e-05, -5.483612312673358e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Ironfur", "Grizzly", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ironfur", " ", "Grizzly", "<EOS>", 72, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "p", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 72, 72, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, spell_targetable=True)\n", "score": -7.6734614385272835, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "IronfurGrizzly", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template16"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "spell_targetable"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.0001408954558428377, -0.0004522978269960731, -0.00011121629358967766, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.05718994140625e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -3.4332275390625e-05, -3.814697265625e-06, -9.72747802734375e-05, -0.0001926422119140625, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -3.0517578125e-05, -3.409330747672357e-05, -1.1920928955078125e-05, -2.741813204920618e-06, -1.1444091796875e-05, -0.0001468658447265625, -4.57763671875e-05, -1.1444091796875e-05, -0.000270843505859375, 0.0, -2.5391578674316406e-05, -3.933906555175781e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.0013049840927124023, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -5.91278076171875e-05, -1.33514404296875e-05, -5.14984130859375e-05, -5.91278076171875e-05, -0.0001125335693359375, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.008486747741699219, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.000133514404296875, -7.62939453125e-06, -0.0001068115234375, -5.53131103515625e-05, -3.0517578125e-05, -3.814697265625e-06, -7.260557651519775, -1.9311904907226562e-05, -0.40029239654541016, -0.000152587890625, -5.9843041526619345e-05, -8.463848644169047e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Ironfur", "Grizzly", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ironfur", " ", "Grizzly", "<EOS>", 72, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 72, 72, 224, 205, "spell_targetable", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Ironfur<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "score": -7.723492962529235, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Ironfur<UNK>", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template16"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.0001408954558428377, -7.709922790527344, -0.00011121629358967766, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.05718994140625e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -3.4332275390625e-05, -3.814697265625e-06, -9.72747802734375e-05, -0.0001926422119140625, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -3.0517578125e-05, -3.409330747672357e-05, -1.1920928955078125e-05, -2.741813204920618e-06, -1.1444091796875e-05, -0.0001468658447265625, -4.57763671875e-05, -1.1444091796875e-05, -0.000270843505859375, 0.0, -2.5391578674316406e-05, -3.933906555175781e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.0013049840927124023, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -5.91278076171875e-05, -1.33514404296875e-05, -5.14984130859375e-05, -5.91278076171875e-05, -0.0001125335693359375, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.008486747741699219, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.000133514404296875, -7.62939453125e-06, -0.0001068115234375, -5.53131103515625e-05, -3.0517578125e-05, -3.814697265625e-06, -0.0014098873361945152, -2.7179718017578125e-05, -7.43865966796875e-05, -0.0001010894775390625, -3.397456384846009e-05, -4.768360213347478e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Ironfur", "<UNK>", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ironfur", " ", "Grizzly", "<EOS>", 72, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 72, 72, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "score": -7.783318162392334, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "IronfurGrizzly", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template16"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.0001408954558428377, -0.0004522978269960731, -0.00011121629358967766, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.05718994140625e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -3.4332275390625e-05, -3.814697265625e-06, -9.72747802734375e-05, -0.0001926422119140625, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -3.0517578125e-05, -3.409330747672357e-05, -1.1920928955078125e-05, -2.741813204920618e-06, -1.1444091796875e-05, -0.0001468658447265625, -4.57763671875e-05, -1.1444091796875e-05, -0.000270843505859375, 0.0, -2.5391578674316406e-05, -3.933906555175781e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -7.767489910125732, 0.0, -3.814697265625e-06, 0.0, -3.62396240234375e-05, -1.1444091796875e-05, -1.9073486328125e-05, -3.62396240234375e-05, -0.000102996826171875, 0.0, 0.0, -3.814697265625e-06, -0.011733055114746094, 0.0, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.0001316070556640625, -7.62939453125e-06, -0.000102996826171875, -5.53131103515625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0013698331313207746, -2.5272369384765625e-05, -7.43865966796875e-05, -0.0001010894775390625, -3.373614890733734e-05, -4.887569048150908e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Ironfur", "Grizzly", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ironfur", " ", "Grizzly", "<EOS>", 72, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 72, 72, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, Buff):\n        return Minion(3, 3, taunt=True)\n", "score": -8.078716040168274, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "IronfurGrizzly", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "Buff"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template16"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.0001408954558428377, -0.0004522978269960731, -0.00011121629358967766, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.05718994140625e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -3.4332275390625e-05, -3.814697265625e-06, -9.72747802734375e-05, -0.0001926422119140625, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -3.0517578125e-05, -3.409330747672357e-05, -1.1920928955078125e-05, -2.741813204920618e-06, -1.1444091796875e-05, -0.0001468658447265625, -4.57763671875e-05, -1.1444091796875e-05, -0.000270843505859375, 0.0, -2.5391578674316406e-05, -3.933906555175781e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.0013049840927124023, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -5.91278076171875e-05, -1.33514404296875e-05, -5.14984130859375e-05, -5.91278076171875e-05, -0.0001125335693359375, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -8.073500633239746, -3.814697265625e-06, -2.288818359375e-05, -3.0517578125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.0001163482666015625, -5.7220458984375e-06, -9.918212890625e-05, -5.53131103515625e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.0010794394183903933, -1.9431114196777344e-05, -7.82012939453125e-05, -0.0001087188720703125, -3.373611980350688e-05, -5.722029527532868e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Ironfur", "Grizzly", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ironfur", " ", "Grizzly", "<EOS>", 72, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "Buff", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 72, 72, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, increase_health=True)\n", "score": -8.575444222790338, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "IronfurGrizzly", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template16"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "increase_health"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.0001408954558428377, -0.0004522978269960731, -0.00011121629358967766, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.05718994140625e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -3.4332275390625e-05, -3.814697265625e-06, -9.72747802734375e-05, -0.0001926422119140625, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -3.0517578125e-05, -3.409330747672357e-05, -1.1920928955078125e-05, -2.741813204920618e-06, -1.1444091796875e-05, -0.0001468658447265625, -4.57763671875e-05, -1.1444091796875e-05, -0.000270843505859375, 0.0, -2.5391578674316406e-05, -3.933906555175781e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.0013049840927124023, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -5.91278076171875e-05, -1.33514404296875e-05, -5.14984130859375e-05, -5.91278076171875e-05, -0.0001125335693359375, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.008486747741699219, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.000133514404296875, -7.62939453125e-06, -0.0001068115234375, -5.53131103515625e-05, -3.0517578125e-05, -3.814697265625e-06, -8.54101276397705, -0.00069427490234375, -0.02123737335205078, -8.7738037109375e-05, -3.600117634050548e-05, -4.887569048150908e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Ironfur", "Grizzly", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ironfur", " ", "Grizzly", "<EOS>", 72, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 72, 72, 224, 205, "increase_health", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, spell_targetable=False)\n", "score": -8.686446072005765, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "IronfurGrizzly", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template16"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "Template27"}, "_type": "keyword", "arg": "spell_targetable"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.0001408954558428377, -0.0004522978269960731, -0.00011121629358967766, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.05718994140625e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -3.4332275390625e-05, -3.814697265625e-06, -9.72747802734375e-05, -0.0001926422119140625, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -3.0517578125e-05, -3.409330747672357e-05, -1.1920928955078125e-05, -2.741813204920618e-06, -1.1444091796875e-05, -0.0001468658447265625, -4.57763671875e-05, -1.1444091796875e-05, -0.000270843505859375, 0.0, -2.5391578674316406e-05, -3.933906555175781e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.0013049840927124023, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -5.91278076171875e-05, -1.33514404296875e-05, -5.14984130859375e-05, -5.91278076171875e-05, -0.0001125335693359375, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.008486747741699219, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.000133514404296875, -7.62939453125e-06, -0.0001068115234375, -5.53131103515625e-05, -3.0517578125e-05, -3.814697265625e-06, -7.260557651519775, -1.9311904907226562e-05, -1.4134902954101562, -7.62939453125e-06], "choice_history": [93, 145, 230, 101, 125, "Ironfur", "Grizzly", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ironfur", " ", "Grizzly", "<EOS>", 72, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 72, 72, 224, 205, "spell_targetable", "<EOS>", 39, 109]}, {"inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.taunt)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "score": -8.768094063576882, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "IronfurGrizzly", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "taunt", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template16"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.0001408954558428377, -0.0004522978269960731, -0.00011121629358967766, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.05718994140625e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -3.4332275390625e-05, -3.814697265625e-06, -9.72747802734375e-05, -0.0001926422119140625, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -3.0517578125e-05, -3.409330747672357e-05, -1.1920928955078125e-05, -2.741813204920618e-06, -1.1444091796875e-05, -0.0001468658447265625, -4.57763671875e-05, -1.1444091796875e-05, -0.000270843505859375, 0.0, -2.5391578674316406e-05, -3.933906555175781e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -8.756105422973633, 0.0, -5.7220458984375e-06, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -1.9073486328125e-05, -3.62396240234375e-05, -8.58306884765625e-05, 0.0, 0.0, -1.9073486328125e-06, -0.008241772651672363, 0.0, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.000133514404296875, -7.62939453125e-06, -0.000102996826171875, -5.53131103515625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.001059174071997404, -1.7523765563964844e-05, -7.43865966796875e-05, -9.918212890625e-05, -3.397456384846009e-05, -5.245195097813848e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Ironfur", "Grizzly", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ironfur", " ", "Grizzly", "<EOS>", 72, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "taunt", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 72, 72, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.HUNTER)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "score": -8.817980051580435, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "IronfurGrizzly", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template16"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.0001408954558428377, -0.0004522978269960731, -0.00011121629358967766, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.05718994140625e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -3.4332275390625e-05, -3.814697265625e-06, -9.72747802734375e-05, -0.0001926422119140625, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -3.0517578125e-05, -3.409330747672357e-05, -1.1920928955078125e-05, -2.741813204920618e-06, -1.1444091796875e-05, -0.0001468658447265625, -4.57763671875e-05, -1.1444091796875e-05, -0.000270843505859375, 0.0, -2.5391578674316406e-05, -3.933906555175781e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -8.80320930480957, 0.0, -7.62939453125e-06, 0.0, -8.96453857421875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -2.47955322265625e-05, -7.43865966796875e-05, 0.0, 0.0, -1.9073486328125e-06, -0.010827064514160156, 0.0, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.000133514404296875, -7.62939453125e-06, -0.0001049041748046875, -5.53131103515625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0012123577762395144, -2.1338462829589844e-05, -7.43865966796875e-05, -9.918212890625e-05, -3.397456384846009e-05, -5.006777428206988e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Ironfur", "Grizzly", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ironfur", " ", "Grizzly", "<EOS>", 72, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "HUNTER", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 72, 72, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class <UNK>Grizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "score": -8.881252179841795, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "<UNK>Grizzly", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template16"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -8.86737060546875, -0.0004522978269960731, -0.00011121629358967766, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.05718994140625e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -3.4332275390625e-05, -3.814697265625e-06, -9.72747802734375e-05, -0.0001926422119140625, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -3.0517578125e-05, -3.409330747672357e-05, -1.1920928955078125e-05, -2.741813204920618e-06, -1.1444091796875e-05, -0.0001468658447265625, -4.57763671875e-05, -1.1444091796875e-05, -0.000270843505859375, 0.0, -2.5391578674316406e-05, -3.933906555175781e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.0013049840927124023, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -5.91278076171875e-05, -1.33514404296875e-05, -5.14984130859375e-05, -5.91278076171875e-05, -0.0001125335693359375, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.008486747741699219, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.000133514404296875, -7.62939453125e-06, -0.0001068115234375, -5.53131103515625e-05, -3.0517578125e-05, -3.814697265625e-06, -0.0014098873361945152, -2.7179718017578125e-05, -7.43865966796875e-05, -0.0001010894775390625, -3.397456384846009e-05, -4.768360213347478e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Grizzly", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ironfur", " ", "Grizzly", "<EOS>", 72, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 72, 72, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "score": -8.900545358717636, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "IronfurGrizzly", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template16"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.0001408954558428377, -0.0004522978269960731, -0.00011121629358967766, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.05718994140625e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -3.4332275390625e-05, -3.814697265625e-06, -9.72747802734375e-05, -8.831137657165527, -5.7220458984375e-06, -0.0003299713134765625, -3.814697265625e-06, -2.86102294921875e-05, -4.9589882110012695e-05, -1.251697449333733e-05, -2.622604142743512e-06, -5.7220458984375e-06, -0.000202178955078125, -3.62396240234375e-05, -1.52587890625e-05, 0.0, -1.1444091796875e-05, -0.0013161897659301758, -3.24249267578125e-05, -0.0001049041748046875, -0.0006732940673828125, -0.0001125335693359375, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.06375598907470703, 0.0, 0.0, -1.52587890625e-05, -3.814697265625e-06, -4.76837158203125e-05, -9.5367431640625e-06, -0.000152587890625, -5.53131103515625e-05, -9.34600830078125e-05, -6.4849853515625e-05, -0.000133514404296875, -1.9073486328125e-06, -0.0009404415031895041, -1.1801719665527344e-05, -8.20159912109375e-05, -6.67572021484375e-05, -3.111357364105061e-05, -4.0531076592742465e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Ironfur", "Grizzly", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Ironfur", " ", "Grizzly", "<EOS>", 72, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 72, 72, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.create_minion)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "score": -8.96966207104606, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "IronfurGrizzly", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template16"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "create_minion", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template16"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.0001408954558428377, -0.0004522978269960731, -0.00011121629358967766, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.05718994140625e-05, -1.3589859008789062e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -3.4332275390625e-05, -3.814697265625e-06, -9.72747802734375e-05, -0.0001926422119140625, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -3.0517578125e-05, -3.409330747672357e-05, -1.1920928955078125e-05, -2.741813204920618e-06, -1.1444091796875e-05, -0.0001468658447265625, -4.57763671875e-05, -1.1444091796875e-05, -0.000270843505859375, 0.0, -2.5391578674316406e-05, -3.933906555175781e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -8.955808639526367, 0.0, -3.814697265625e-06, 0.0, -3.62396240234375e-05, -1.1444091796875e-05, -1.71661376953125e-05, -3.62396240234375e-05, -8.7738037109375e-05, 0.0, 0.0, -1.9073486328125e-06, -0.010107040405273438, 0.0, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.000133514404296875, -7.62939453125e-06, -0.0001049041748046875, -5.53131103515625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0010453457944095135, -1.7523765563964844e-05, -7.43865966796875e-05, -9.918212890625e-05, -3.397456384846009e-05, -5.245195097813848e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Ironfur", "Grizzly", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Ironfur", " ", "Grizzly", "<EOS>", 72, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "create_minion", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 72, 72, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "", "score": -20.54986572265625, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, 0.0, -20.54986572265625], "choice_history": [93, 145, 228]}, {"inferred_code": "", "score": -26.01716709136963, "model_output": {"_type": "Module", "body": [{"_type": "Template13_stmt_seq"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -17.018943786621094, -8.998213768005371], "choice_history": [93, 145, 230, 109, 109]}], "index": 57}
{"beams": [{"inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n", "score": -0.4246919825262978, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "KillCommand", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "args": [{"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}, {"args": {"args": [{"_type": "arg", "arg": "x"}], "_type": "arguments"}, "_type": "Lambda", "body": {"left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}}, "_type": "Compare", "comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Is"}]}}], "_type": "Call"}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "If", "test": {"left": {"id": "<UNK>", "_type": "Name"}, "_type": "Compare", "comparators": [{"_type": "NameConstant", "value": "Null"}], "ops": [{"_type": "Is"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.6702880859375e-05, -1.33514404296875e-05, -1.5616309610777535e-05, -1.5020343198557384e-05, -8.344646857949556e-07, -3.814697265625e-06, -5.53131103515625e-05, -0.0018711090087890625, -1.1444091796875e-05, -2.47955322265625e-05, -1.0132789611816406e-05, -5.7220458984375e-06, -0.00011444091796875, -7.62939453125e-06, -1.71661376953125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.0001678466796875, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -7.986997843545396e-06, -1.442432312614983e-05, -2.0265579223632812e-06, -1.1444091796875e-05, -0.000362396240234375, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0001587867591297254, 0.0, -0.0001392364501953125, -0.00030517578125, 0.0, -0.001338958740234375, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001239776611328125, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005970001220703125, -1.9073486328125e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0008929967880249023, -9.5367431640625e-05, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.000942230224609375, 0.0, -0.0003604888916015625, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.933906555175781e-06, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -5.006789251638111e-06, -2.3841855067985307e-07, -0.0048847198486328125, -0.0003452301025390625, -0.0001373291015625, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-05, -0.0003814697265625, -0.014385964721441269, -4.053113570989808e-06, -0.014643669128417969, -0.0004024505615234375, -2.47955322265625e-05, 0.0, -0.06307220458984375, 0.0, -0.0021514892578125, -1.9073486328125e-05, -0.0005893707275390625, -5.7220458984375e-06, -0.0002892017364501953, -1.9073486328125e-06, -0.032930612564086914, 0.0, -4.38690185546875e-05, -0.0004444122314453125, -4.57763671875e-05, -0.0005207061767578125, -0.001010894775390625, 0.0, -0.0010395050048828125, -0.0005168914794921875, -2.288818359375e-05, -0.000133514404296875, -0.000400543212890625, -4.76837158203125e-05, -7.05718994140625e-05, -0.018134593963623047, -3.24249267578125e-05, -0.012675285339355469, -0.0037555694580078125, -0.014180183410644531, 0.0, -0.0485076904296875, 0.0, -0.00025177001953125, 0.0, -0.01968705654144287, -6.079673767089844e-06, -0.009348475374281406, -5.960462772236497e-07, -0.0007879672339186072, -9.5367431640625e-06, -2.86102294921875e-05, -0.0036182403564453125, -4.00543212890625e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, 0.0, -7.343292236328125e-05, 0.0, -0.002899646759033203, 0.0, -0.01782512664794922, -0.000568389892578125, -0.0007419586181640625, -0.000213623046875, -0.0041561126708984375, -9.5367431640625e-06, -0.001637101173400879, -0.0001629487524041906, -5.53131103515625e-05, -0.02396678924560547, -0.000843048095703125, -0.000759124755859375, -1.9073486328125e-05, -1.919269561767578e-05, 0.0, -0.0027313232421875, -2.47955322265625e-05, 0.0, 0.0, -4.00543212890625e-05, -2.6702880859375e-05, 0.0, -0.0032682418823242188, -0.0006761687691323459, -1.9073486328125e-06, -7.43865966796875e-05, -0.0004024505615234375, -0.0001506805419921875, -2.09808349609375e-05, -2.288818359375e-05, -0.0006160736083984375, -0.0007739918655715883, -3.576277322281385e-06, -1.9073486328125e-06, -0.018346786499023438, -0.0006885528564453125, -1.52587890625e-05, -3.62396240234375e-05, -1.52587890625e-05, 0.0, -3.62396240234375e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.62396240234375e-05, -5.0067837946699e-06, -2.181519812438637e-05, -2.288818359375e-05, -5.14984130859375e-05, -0.0003452301025390625, -1.71661376953125e-05, -1.9073486328125e-05, -0.00043487548828125, -0.0010911178542301059, -4.88758041683468e-06, -1.9073486328125e-06, -0.06159400939941406, -0.0014133453369140625, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kill", "Command", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Kill", " ", "Command", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 18, 123, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 217, 55, 116, 32, "game", "<EOS>", 60, 140, 3, 203, 209, 1, 202, "x", "<EOS>", 19, 126, 15, 116, 15, 116, 23, 146, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 213, 10, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 105, 134, 19, 126, 23, 146, "<UNK>", "<EOS>", 213, 10, 216, 64, 148, "Null", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 229, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 109]}, {"inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n", "score": -3.3109081461615517, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "KillCommand", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "args": [{"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}, {"args": {"args": [{"_type": "arg", "arg": "x"}], "_type": "arguments"}, "_type": "Lambda", "body": {"left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}}, "_type": "Compare", "comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Is"}]}}], "_type": "Call"}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "If", "test": {"left": {"id": "<UNK>", "_type": "Name"}, "_type": "Compare", "comparators": [{"_type": "NameConstant", "value": "Null"}], "ops": [{"_type": "Is"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.6702880859375e-05, -1.33514404296875e-05, -1.5616309610777535e-05, -1.5020343198557384e-05, -8.344646857949556e-07, -3.814697265625e-06, -5.53131103515625e-05, -0.0018711090087890625, -1.1444091796875e-05, -2.47955322265625e-05, -1.0132789611816406e-05, -5.7220458984375e-06, -0.00011444091796875, -7.62939453125e-06, -1.71661376953125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.0001678466796875, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -7.986997843545396e-06, -1.442432312614983e-05, -2.0265579223632812e-06, -1.1444091796875e-05, -0.000362396240234375, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0001587867591297254, 0.0, -0.0001392364501953125, -0.00030517578125, 0.0, -0.001338958740234375, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001239776611328125, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005970001220703125, -1.9073486328125e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0008929967880249023, -9.5367431640625e-05, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.000942230224609375, 0.0, -0.0003604888916015625, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.933906555175781e-06, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -5.006789251638111e-06, -2.3841855067985307e-07, -0.0048847198486328125, -0.0003452301025390625, -0.0001373291015625, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-05, -0.0003814697265625, -0.014385964721441269, -4.053113570989808e-06, -0.014643669128417969, -0.0004024505615234375, -2.47955322265625e-05, 0.0, -0.06307220458984375, 0.0, -0.0021514892578125, -1.9073486328125e-05, -0.0005893707275390625, -5.7220458984375e-06, -0.0002892017364501953, -1.9073486328125e-06, -0.032930612564086914, 0.0, -4.38690185546875e-05, -0.0004444122314453125, -4.57763671875e-05, -0.0005207061767578125, -0.001010894775390625, 0.0, -0.0010395050048828125, -0.0005168914794921875, -2.288818359375e-05, -0.000133514404296875, -0.000400543212890625, -4.76837158203125e-05, -7.05718994140625e-05, -0.018134593963623047, -3.24249267578125e-05, -0.012675285339355469, -0.0037555694580078125, -0.014180183410644531, 0.0, -0.0485076904296875, 0.0, -0.00025177001953125, 0.0, -0.01968705654144287, -6.079673767089844e-06, -0.009348475374281406, -5.960462772236497e-07, -0.0007879672339186072, -9.5367431640625e-06, -2.86102294921875e-05, -0.0036182403564453125, -4.00543212890625e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, 0.0, -7.343292236328125e-05, 0.0, -0.002899646759033203, 0.0, -0.01782512664794922, -0.000568389892578125, -0.0007419586181640625, -0.000213623046875, -0.0041561126708984375, -9.5367431640625e-06, -0.001637101173400879, -0.0001629487524041906, -5.53131103515625e-05, -0.02396678924560547, -0.000843048095703125, -0.000759124755859375, -1.9073486328125e-05, -1.919269561767578e-05, 0.0, -0.0027313232421875, -2.47955322265625e-05, 0.0, 0.0, -4.00543212890625e-05, -2.6702880859375e-05, 0.0, -0.0032682418823242188, -0.0006761687691323459, -1.9073486328125e-06, -7.43865966796875e-05, -0.0004024505615234375, -0.0001506805419921875, -2.09808349609375e-05, -2.288818359375e-05, -0.0006160736083984375, -0.0007739918655715883, -3.576277322281385e-06, -1.9073486328125e-06, -0.018346786499023438, -0.0006885528564453125, -1.52587890625e-05, -3.62396240234375e-05, -1.52587890625e-05, 0.0, -3.62396240234375e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.62396240234375e-05, -5.0067837946699e-06, -2.181519812438637e-05, -2.288818359375e-05, -5.14984130859375e-05, -0.0003452301025390625, -1.71661376953125e-05, -1.9073486328125e-05, -0.00043487548828125, -0.0010911178542301059, -4.88758041683468e-06, -1.9073486328125e-06, -2.948458671569824, -0.0007648468017578125, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kill", "Command", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Kill", " ", "Command", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 18, 123, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 217, 55, 116, 32, "game", "<EOS>", 60, 140, 3, 203, 209, 1, 202, "x", "<EOS>", 19, 126, 15, 116, 15, 116, 23, 146, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 213, 10, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 105, 134, 19, 126, 23, 146, "<UNK>", "<EOS>", 213, 10, 216, 64, 148, "Null", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 229, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 109]}, {"inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.find_spell_target(player.game, lambda\n            x: x.card.minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n", "score": -4.797559570818436, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "KillCommand", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "args": [{"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}, {"args": {"args": [{"_type": "arg", "arg": "x"}], "_type": "arguments"}, "_type": "Lambda", "body": {"left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}}, "_type": "Compare", "comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Is"}]}}], "_type": "Call"}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "If", "test": {"left": {"id": "<UNK>", "_type": "Name"}, "_type": "Compare", "comparators": [{"_type": "NameConstant", "value": "Null"}], "ops": [{"_type": "Is"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.6702880859375e-05, -1.33514404296875e-05, -1.5616309610777535e-05, -1.5020343198557384e-05, -8.344646857949556e-07, -3.814697265625e-06, -5.53131103515625e-05, -0.0018711090087890625, -1.1444091796875e-05, -2.47955322265625e-05, -1.0132789611816406e-05, -5.7220458984375e-06, -0.00011444091796875, -7.62939453125e-06, -1.71661376953125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.0001678466796875, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -7.986997843545396e-06, -1.442432312614983e-05, -2.0265579223632812e-06, -1.1444091796875e-05, -0.000362396240234375, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0001587867591297254, 0.0, -0.0001392364501953125, -0.00030517578125, 0.0, -0.001338958740234375, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001239776611328125, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005970001220703125, -1.9073486328125e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0008929967880249023, -9.5367431640625e-05, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.000942230224609375, 0.0, -0.0003604888916015625, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.933906555175781e-06, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -5.006789251638111e-06, -2.3841855067985307e-07, -0.0048847198486328125, -0.0003452301025390625, -0.0001373291015625, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-05, -0.0003814697265625, -0.014385964721441269, -4.053113570989808e-06, -0.014643669128417969, -0.0004024505615234375, -2.47955322265625e-05, 0.0, -0.06307220458984375, 0.0, -0.0021514892578125, -1.9073486328125e-05, -0.0005893707275390625, -5.7220458984375e-06, -0.0002892017364501953, -1.9073486328125e-06, -4.4150710105896, 0.0, -0.0004215240478515625, -0.011922836303710938, -9.5367431640625e-06, -0.000156402587890625, -0.00044918060302734375, 0.0, -0.0016574859619140625, -0.000858306884765625, -1.9073486328125e-05, -0.0001163482666015625, -0.000362396240234375, -3.62396240234375e-05, -5.91278076171875e-05, -0.017577648162841797, -2.86102294921875e-05, -0.011685371398925781, -0.00336456298828125, -0.011600494384765625, 0.0, -0.03343009948730469, 0.0, -0.0002689361572265625, 0.0, -0.018485546112060547, -6.079673767089844e-06, -0.009416426531970501, -5.960462772236497e-07, -0.0008037031511776149, -9.5367431640625e-06, -2.86102294921875e-05, -0.0035905838012695312, -4.00543212890625e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, 0.0, -7.152557373046875e-05, 0.0, -0.0028597116470336914, 0.0, -0.017913818359375, -0.000560760498046875, -0.00074005126953125, -0.000213623046875, -0.004105567932128906, -9.5367431640625e-06, -0.0016369819641113281, -0.00016259116819128394, -5.53131103515625e-05, -0.023799896240234375, -0.0008411407470703125, -0.0007534027099609375, -1.9073486328125e-05, -1.919269561767578e-05, 0.0, -0.0027790069580078125, -2.47955322265625e-05, 0.0, 0.0, -4.00543212890625e-05, -2.6702880859375e-05, 0.0, -0.0031795501708984375, -0.0006739053642377257, -1.9073486328125e-06, -7.43865966796875e-05, -0.0004024505615234375, -0.0001506805419921875, -2.09808349609375e-05, -2.288818359375e-05, -0.00061798095703125, -0.0007753033423796296, -3.576277322281385e-06, -1.9073486328125e-06, -0.01837158203125, -0.0006885528564453125, -1.52587890625e-05, -3.62396240234375e-05, -1.52587890625e-05, 0.0, -3.62396240234375e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.814697265625e-05, -5.0067837946699e-06, -2.1695992472814396e-05, -2.288818359375e-05, -5.14984130859375e-05, -0.000347137451171875, -1.71661376953125e-05, -1.9073486328125e-05, -0.00043487548828125, -0.0010886145755648613, -4.88758041683468e-06, -1.9073486328125e-06, -0.06147575378417969, -0.0014171600341796875, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kill", "Command", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Kill", " ", "Command", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 18, 123, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 217, 55, 116, 32, "game", "<EOS>", 60, 140, 3, 203, 209, 1, 202, "x", "<EOS>", 19, 126, 15, 116, 15, 116, 23, 146, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 213, 10, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 105, 134, 19, 126, 23, 146, "<UNK>", "<EOS>", 213, 10, 216, 64, 148, "Null", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 229, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 109]}, {"inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = game.random_choice(targets)\n        self.target.damage(player.effective_spell_damage(3), self)\n", "score": -4.84504191172536, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "KillCommand", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "targets", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.6702880859375e-05, -1.33514404296875e-05, -1.5616309610777535e-05, -1.5020343198557384e-05, -8.344646857949556e-07, -3.814697265625e-06, -5.53131103515625e-05, -0.0018711090087890625, -1.1444091796875e-05, -2.47955322265625e-05, -1.0132789611816406e-05, -5.7220458984375e-06, -0.00011444091796875, -7.62939453125e-06, -1.71661376953125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.0001678466796875, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -7.986997843545396e-06, -1.442432312614983e-05, -2.0265579223632812e-06, -1.1444091796875e-05, -0.000362396240234375, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0001587867591297254, 0.0, -0.0001392364501953125, -0.00030517578125, 0.0, -0.001338958740234375, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001239776611328125, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005970001220703125, -1.9073486328125e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0008929967880249023, -9.5367431640625e-05, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.000942230224609375, 0.0, -0.0003604888916015625, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.933906555175781e-06, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -5.006789251638111e-06, -2.3841855067985307e-07, -0.0048847198486328125, -0.0003452301025390625, -0.0001373291015625, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-05, -0.0003814697265625, -0.014385964721441269, -4.053113570989808e-06, -0.014643669128417969, -0.0004024505615234375, -2.47955322265625e-05, 0.0, -2.8933448791503906, -2.86102294921875e-05, -0.7727956771850586, 0.0, -0.5268135070800781, 0.0, -3.62396240234375e-05, -0.48331642150878906, 0.0, -0.010919093154370785, 0.0, -3.24249267578125e-05, -1.9073486328125e-05, 0.0, -1.33514404296875e-05, -3.0517578125e-05, 0.0, -0.013509750366210938, -0.0008233943372033536, 0.0, -1.71661376953125e-05, -0.01957416534423828, -3.4332275390625e-05, -9.5367431640625e-06, -1.1444091796875e-05, -0.0001373291015625, -0.00031530848355032504, -2.2649765014648438e-06, -1.9073486328125e-06, -0.0796957015991211, -0.000301361083984375, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kill", "Command", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Kill", " ", "Command", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "targets", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 109]}, {"inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(5), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n", "score": -5.060238062803279, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "KillCommand", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "args": [{"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}, {"args": {"args": [{"_type": "arg", "arg": "x"}], "_type": "arguments"}, "_type": "Lambda", "body": {"left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}}, "_type": "Compare", "comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Is"}]}}], "_type": "Call"}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "If", "test": {"left": {"id": "<UNK>", "_type": "Name"}, "_type": "Compare", "comparators": [{"_type": "NameConstant", "value": "Null"}], "ops": [{"_type": "Is"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.6702880859375e-05, -1.33514404296875e-05, -1.5616309610777535e-05, -1.5020343198557384e-05, -8.344646857949556e-07, -3.814697265625e-06, -5.53131103515625e-05, -0.0018711090087890625, -1.1444091796875e-05, -2.47955322265625e-05, -1.0132789611816406e-05, -5.7220458984375e-06, -0.00011444091796875, -7.62939453125e-06, -1.71661376953125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.0001678466796875, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -7.986997843545396e-06, -1.442432312614983e-05, -2.0265579223632812e-06, -1.1444091796875e-05, -0.000362396240234375, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0001587867591297254, 0.0, -0.0001392364501953125, -0.00030517578125, 0.0, -0.001338958740234375, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001239776611328125, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005970001220703125, -1.9073486328125e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0008929967880249023, -9.5367431640625e-05, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.000942230224609375, 0.0, -0.0003604888916015625, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.933906555175781e-06, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -5.006789251638111e-06, -2.3841855067985307e-07, -0.0048847198486328125, -0.0003452301025390625, -0.0001373291015625, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-05, -0.0003814697265625, -0.014385964721441269, -4.053113570989808e-06, -0.014643669128417969, -0.0004024505615234375, -2.47955322265625e-05, 0.0, -0.06307220458984375, 0.0, -0.0021514892578125, -1.9073486328125e-05, -0.0005893707275390625, -5.7220458984375e-06, -0.0002892017364501953, -1.9073486328125e-06, -0.032930612564086914, 0.0, -4.38690185546875e-05, -0.0004444122314453125, -4.57763671875e-05, -0.0005207061767578125, -0.001010894775390625, 0.0, -0.0010395050048828125, -0.0005168914794921875, -2.288818359375e-05, -0.000133514404296875, -0.000400543212890625, -4.76837158203125e-05, -7.05718994140625e-05, -0.018134593963623047, -3.24249267578125e-05, -0.012675285339355469, -0.0037555694580078125, -0.014180183410644531, 0.0, -0.0485076904296875, 0.0, -0.00025177001953125, 0.0, -0.01968705654144287, -6.079673767089844e-06, -0.009348475374281406, -5.960462772236497e-07, -0.0007879672339186072, -9.5367431640625e-06, -2.86102294921875e-05, -0.0036182403564453125, -4.00543212890625e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, 0.0, -7.343292236328125e-05, 0.0, -0.002899646759033203, 0.0, -0.01782512664794922, -0.000568389892578125, -0.0007419586181640625, -0.000213623046875, -0.0041561126708984375, -9.5367431640625e-06, -0.001637101173400879, -0.0001629487524041906, -5.53131103515625e-05, -0.02396678924560547, -0.000843048095703125, -0.000759124755859375, -1.9073486328125e-05, -1.919269561767578e-05, 0.0, -0.0027313232421875, -2.47955322265625e-05, 0.0, 0.0, -4.00543212890625e-05, -2.6702880859375e-05, 0.0, -0.0032682418823242188, -0.0006761687691323459, -1.9073486328125e-06, -7.43865966796875e-05, -0.0004024505615234375, -0.0001506805419921875, -2.09808349609375e-05, -2.288818359375e-05, -0.0006160736083984375, -0.0007739918655715883, -3.576277322281385e-06, -1.9073486328125e-06, -4.533821105957031, -0.0022373199462890625, -3.0517578125e-05, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, -0.00019073486328125, -1.9073486328125e-05, -5.7220458984375e-06, -5.340576171875e-05, -7.987017852428835e-06, -1.0848032616195269e-05, -2.6702880859375e-05, -0.000102996826171875, -0.0001678466796875, -1.71661376953125e-05, -2.09808349609375e-05, -0.0004177093505859375, -0.0011997094843536615, -4.768371127283899e-06, -1.9073486328125e-06, -0.18015193939208984, -0.001239776611328125, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kill", "Command", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Kill", " ", "Command", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 18, 123, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 217, 55, 116, 32, "game", "<EOS>", 60, 140, 3, 203, 209, 1, 202, "x", "<EOS>", 19, 126, 15, 116, 15, 116, 23, 146, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 213, 10, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 105, 134, 19, 126, 23, 146, "<UNK>", "<EOS>", 213, 10, 216, 64, 148, "Null", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 229, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 109]}, {"inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card is\n            MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n", "score": -5.060707072460758, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "KillCommand", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "args": [{"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}, {"args": {"args": [{"_type": "arg", "arg": "x"}], "_type": "arguments"}, "_type": "Lambda", "body": {"left": {"attr": "card", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}, "_type": "Compare", "comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Is"}]}}], "_type": "Call"}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "If", "test": {"left": {"id": "<UNK>", "_type": "Name"}, "_type": "Compare", "comparators": [{"_type": "NameConstant", "value": "Null"}], "ops": [{"_type": "Is"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.6702880859375e-05, -1.33514404296875e-05, -1.5616309610777535e-05, -1.5020343198557384e-05, -8.344646857949556e-07, -3.814697265625e-06, -5.53131103515625e-05, -0.0018711090087890625, -1.1444091796875e-05, -2.47955322265625e-05, -1.0132789611816406e-05, -5.7220458984375e-06, -0.00011444091796875, -7.62939453125e-06, -1.71661376953125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.0001678466796875, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -7.986997843545396e-06, -1.442432312614983e-05, -2.0265579223632812e-06, -1.1444091796875e-05, -0.000362396240234375, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0001587867591297254, 0.0, -0.0001392364501953125, -0.00030517578125, 0.0, -0.001338958740234375, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001239776611328125, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005970001220703125, -1.9073486328125e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0008929967880249023, -9.5367431640625e-05, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.000942230224609375, 0.0, -0.0003604888916015625, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.933906555175781e-06, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -5.006789251638111e-06, -2.3841855067985307e-07, -0.0048847198486328125, -0.0003452301025390625, -0.0001373291015625, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-05, -0.0003814697265625, -0.014385964721441269, -4.053113570989808e-06, -0.014643669128417969, -0.0004024505615234375, -2.47955322265625e-05, 0.0, -0.06307220458984375, 0.0, -0.0021514892578125, -1.9073486328125e-05, -0.0005893707275390625, -5.7220458984375e-06, -0.0002892017364501953, -1.9073486328125e-06, -0.032930612564086914, 0.0, -4.38690185546875e-05, -0.0004444122314453125, -4.57763671875e-05, -0.0005207061767578125, -0.001010894775390625, 0.0, -0.0010395050048828125, -0.0005168914794921875, -2.288818359375e-05, -0.000133514404296875, -0.000400543212890625, -4.76837158203125e-05, -7.05718994140625e-05, -0.018134593963623047, -3.24249267578125e-05, -0.012675285339355469, -0.0037555694580078125, -0.014180183410644531, 0.0, -3.05240535736084, -1.9073486328125e-06, -0.046593666076660156, -7.62939453125e-06, -1.5780144929885864, 0.0, -3.0517578125e-05, -0.019237518310546875, -2.09808349609375e-05, -0.0005283355712890625, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.600120544433594e-05, 0.0, -0.002557158237323165, 0.0, -0.031058311462402344, -0.000690460205078125, -0.000667572021484375, -0.0002307891845703125, -0.0034589767456054688, -5.7220458984375e-06, -0.002290487289428711, -0.0002466181176714599, -5.53131103515625e-05, -0.023019790649414062, -0.00069427490234375, -0.000957489013671875, -1.71661376953125e-05, -1.728534698486328e-05, 0.0, -0.00290679931640625, -2.86102294921875e-05, 0.0, 0.0, -4.38690185546875e-05, -2.86102294921875e-05, 0.0, -0.004893302917480469, -0.0006668750429525971, -1.9073486328125e-06, -6.866455078125e-05, -0.0003490447998046875, -0.0001373291015625, -2.09808349609375e-05, -2.09808349609375e-05, -0.0006198883056640625, -0.0007496745092794299, -3.6954863844584906e-06, -1.9073486328125e-06, -0.018032073974609375, -0.000659942626953125, -1.52587890625e-05, -2.86102294921875e-05, -1.52587890625e-05, 0.0, -3.4332275390625e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.62396240234375e-05, -4.529948455456179e-06, -2.4318555006175302e-05, -2.288818359375e-05, -5.14984130859375e-05, -0.000339508056640625, -1.71661376953125e-05, -1.9073486328125e-05, -0.0004558563232421875, -0.0010938594350591302, -4.768371127283899e-06, -1.9073486328125e-06, -0.06963634490966797, -0.0014095306396484375, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kill", "Command", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Kill", " ", "Command", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 18, 123, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 217, 55, 116, 32, "game", "<EOS>", 60, 140, 3, 203, 209, 1, 202, "x", "<EOS>", 19, 126, 15, 116, 23, 146, "x", "<EOS>", "card", "<EOS>", 213, 10, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 105, 134, 19, 126, 23, 146, "<UNK>", "<EOS>", 213, 10, 216, 64, 148, "Null", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 229, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 109]}, {"inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: m.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n", "score": -5.256261079546533, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "KillCommand", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "args": [{"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}, {"args": {"args": [{"_type": "arg", "arg": "x"}], "_type": "arguments"}, "_type": "Lambda", "body": {"left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "m", "_type": "Name"}}}, "_type": "Compare", "comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Is"}]}}], "_type": "Call"}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "If", "test": {"left": {"id": "<UNK>", "_type": "Name"}, "_type": "Compare", "comparators": [{"_type": "NameConstant", "value": "Null"}], "ops": [{"_type": "Is"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.6702880859375e-05, -1.33514404296875e-05, -1.5616309610777535e-05, -1.5020343198557384e-05, -8.344646857949556e-07, -3.814697265625e-06, -5.53131103515625e-05, -0.0018711090087890625, -1.1444091796875e-05, -2.47955322265625e-05, -1.0132789611816406e-05, -5.7220458984375e-06, -0.00011444091796875, -7.62939453125e-06, -1.71661376953125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.0001678466796875, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -7.986997843545396e-06, -1.442432312614983e-05, -2.0265579223632812e-06, -1.1444091796875e-05, -0.000362396240234375, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0001587867591297254, 0.0, -0.0001392364501953125, -0.00030517578125, 0.0, -0.001338958740234375, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001239776611328125, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005970001220703125, -1.9073486328125e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0008929967880249023, -9.5367431640625e-05, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.000942230224609375, 0.0, -0.0003604888916015625, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.933906555175781e-06, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -5.006789251638111e-06, -2.3841855067985307e-07, -0.0048847198486328125, -0.0003452301025390625, -0.0001373291015625, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-05, -0.0003814697265625, -0.014385964721441269, -4.053113570989808e-06, -0.014643669128417969, -0.0004024505615234375, -2.47955322265625e-05, 0.0, -0.06307220458984375, 0.0, -0.0021514892578125, -1.9073486328125e-05, -0.0005893707275390625, -5.7220458984375e-06, -0.0002892017364501953, -1.9073486328125e-06, -0.032930612564086914, 0.0, -4.38690185546875e-05, -0.0004444122314453125, -4.57763671875e-05, -0.0005207061767578125, -0.001010894775390625, 0.0, -0.0010395050048828125, -0.0005168914794921875, -2.288818359375e-05, -0.000133514404296875, -0.000400543212890625, -4.76837158203125e-05, -7.05718994140625e-05, -0.018134593963623047, -3.24249267578125e-05, -0.012675285339355469, -0.0037555694580078125, -0.014180183410644531, 0.0, -0.0485076904296875, 0.0, -0.00025177001953125, 0.0, -4.842202186584473, -8.046361472224817e-05, -0.007633325178176165, -2.622600959512056e-06, -0.004078264813870192, -7.62939453125e-06, -1.9073486328125e-05, -0.007882118225097656, -7.05718994140625e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -0.00010216236114501953, 0.0, -0.0032622814178466797, 0.0, -0.01646900177001953, -0.000598907470703125, -0.0007228851318359375, -0.0002269744873046875, -0.004532814025878906, -1.1444091796875e-05, -0.001617431640625, -0.00018094628467224538, -5.53131103515625e-05, -0.0240936279296875, -0.00084686279296875, -0.000850677490234375, -1.9073486328125e-05, -1.919269561767578e-05, 0.0, -0.00222015380859375, -1.9073486328125e-05, 0.0, 0.0, -3.814697265625e-05, -2.6702880859375e-05, 0.0, -0.0037584304809570312, -0.000674262351822108, -1.9073486328125e-06, -7.43865966796875e-05, -0.0004062652587890625, -0.000152587890625, -2.09808349609375e-05, -2.288818359375e-05, -0.000621795654296875, -0.0008246476063504815, -3.8146954466355965e-06, -1.9073486328125e-06, -0.018846511840820312, -0.0006809234619140625, -1.52587890625e-05, -3.24249267578125e-05, -1.52587890625e-05, 0.0, -3.62396240234375e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.62396240234375e-05, -4.649156835512258e-06, -2.312648211955093e-05, -2.288818359375e-05, -5.340576171875e-05, -0.0003414154052734375, -1.71661376953125e-05, -1.9073486328125e-05, -0.0004367828369140625, -0.0011063760612159967, -4.88758041683468e-06, -1.9073486328125e-06, -0.06452369689941406, -0.00140380859375, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kill", "Command", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Kill", " ", "Command", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 18, 123, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 217, 55, 116, 32, "game", "<EOS>", 60, 140, 3, 203, 209, 1, 202, "x", "<EOS>", 19, 126, 15, 116, 15, 116, 23, 146, "m", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 213, 10, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 105, 134, 19, 126, 23, 146, "<UNK>", "<EOS>", 213, 10, 216, 64, 148, "Null", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 229, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 109]}, {"inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        self.target.damage(player.effective_spell_damage(3), self)\n", "score": -5.33270042980044, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "KillCommand", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "args": [{"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}, {"args": {"args": [{"_type": "arg", "arg": "x"}], "_type": "arguments"}, "_type": "Lambda", "body": {"left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}}, "_type": "Compare", "comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Is"}]}}], "_type": "Call"}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.6702880859375e-05, -1.33514404296875e-05, -1.5616309610777535e-05, -1.5020343198557384e-05, -8.344646857949556e-07, -3.814697265625e-06, -5.53131103515625e-05, -0.0018711090087890625, -1.1444091796875e-05, -2.47955322265625e-05, -1.0132789611816406e-05, -5.7220458984375e-06, -0.00011444091796875, -7.62939453125e-06, -1.71661376953125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.0001678466796875, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -7.986997843545396e-06, -1.442432312614983e-05, -2.0265579223632812e-06, -1.1444091796875e-05, -0.000362396240234375, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0001587867591297254, 0.0, -0.0001392364501953125, -0.00030517578125, 0.0, -0.001338958740234375, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001239776611328125, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005970001220703125, -1.9073486328125e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0008929967880249023, -9.5367431640625e-05, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.000942230224609375, 0.0, -0.0003604888916015625, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.933906555175781e-06, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -5.006789251638111e-06, -2.3841855067985307e-07, -0.0048847198486328125, -0.0003452301025390625, -0.0001373291015625, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-05, -0.0003814697265625, -0.014385964721441269, -4.053113570989808e-06, -0.014643669128417969, -0.0004024505615234375, -2.47955322265625e-05, 0.0, -0.06307220458984375, 0.0, -0.0021514892578125, -1.9073486328125e-05, -0.0005893707275390625, -5.7220458984375e-06, -0.0002892017364501953, -1.9073486328125e-06, -0.032930612564086914, 0.0, -4.38690185546875e-05, -0.0004444122314453125, -4.57763671875e-05, -0.0005207061767578125, -0.001010894775390625, 0.0, -0.0010395050048828125, -0.0005168914794921875, -2.288818359375e-05, -0.000133514404296875, -0.000400543212890625, -4.76837158203125e-05, -7.05718994140625e-05, -0.018134593963623047, -3.24249267578125e-05, -0.012675285339355469, -0.0037555694580078125, -0.014180183410644531, 0.0, -0.0485076904296875, 0.0, -0.00025177001953125, 0.0, -0.01968705654144287, -6.079673767089844e-06, -0.009348475374281406, -5.960462772236497e-07, -0.0007879672339186072, -9.5367431640625e-06, -2.86102294921875e-05, -0.0036182403564453125, -4.00543212890625e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, 0.0, -7.343292236328125e-05, 0.0, -0.002899646759033203, 0.0, -4.611106872558594, -0.0003566741943359375, 0.0, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.3583793640136719, -0.0017255120910704136, 0.0, -3.62396240234375e-05, -6.67572021484375e-05, -2.86102294921875e-05, -1.1444091796875e-05, -1.1444091796875e-05, -0.0004634857177734375, -0.0003825404273811728, -2.622604142743512e-06, 0.0, -0.07904338836669922, -0.0004119873046875, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kill", "Command", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Kill", " ", "Command", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 18, 123, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 217, 55, 116, 32, "game", "<EOS>", 60, 140, 3, 203, 209, 1, 202, "x", "<EOS>", 19, 126, 15, 116, 15, 116, 23, 146, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 213, 10, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 109]}, {"inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.\n            minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n", "score": -5.365190495575547, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "KillCommand", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "args": [{"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}, {"args": {"args": [{"_type": "arg", "arg": "x"}], "_type": "arguments"}, "_type": "Lambda", "body": {"left": {"attr": "minion_type", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}, "_type": "Compare", "comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Is"}]}}], "_type": "Call"}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "If", "test": {"left": {"id": "<UNK>", "_type": "Name"}, "_type": "Compare", "comparators": [{"_type": "NameConstant", "value": "Null"}], "ops": [{"_type": "Is"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.6702880859375e-05, -1.33514404296875e-05, -1.5616309610777535e-05, -1.5020343198557384e-05, -8.344646857949556e-07, -3.814697265625e-06, -5.53131103515625e-05, -0.0018711090087890625, -1.1444091796875e-05, -2.47955322265625e-05, -1.0132789611816406e-05, -5.7220458984375e-06, -0.00011444091796875, -7.62939453125e-06, -1.71661376953125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.0001678466796875, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -7.986997843545396e-06, -1.442432312614983e-05, -2.0265579223632812e-06, -1.1444091796875e-05, -0.000362396240234375, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0001587867591297254, 0.0, -0.0001392364501953125, -0.00030517578125, 0.0, -0.001338958740234375, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001239776611328125, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005970001220703125, -1.9073486328125e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0008929967880249023, -9.5367431640625e-05, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.000942230224609375, 0.0, -0.0003604888916015625, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.933906555175781e-06, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -5.006789251638111e-06, -2.3841855067985307e-07, -0.0048847198486328125, -0.0003452301025390625, -0.0001373291015625, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-05, -0.0003814697265625, -0.014385964721441269, -4.053113570989808e-06, -0.014643669128417969, -0.0004024505615234375, -2.47955322265625e-05, 0.0, -0.06307220458984375, 0.0, -0.0021514892578125, -1.9073486328125e-05, -0.0005893707275390625, -5.7220458984375e-06, -0.0002892017364501953, -1.9073486328125e-06, -0.032930612564086914, 0.0, -4.38690185546875e-05, -0.0004444122314453125, -4.57763671875e-05, -0.0005207061767578125, -0.001010894775390625, 0.0, -0.0010395050048828125, -0.0005168914794921875, -2.288818359375e-05, -0.000133514404296875, -0.000400543212890625, -4.76837158203125e-05, -7.05718994140625e-05, -0.018134593963623047, -3.24249267578125e-05, -0.012675285339355469, -0.0037555694580078125, -0.014180183410644531, 0.0, -3.05240535736084, -1.9073486328125e-06, -0.046593666076660156, -7.62939453125e-06, -1.898245930671692, 0.0, -1.33514404296875e-05, -0.005524635314941406, -2.86102294921875e-05, -4.76837158203125e-05, 0.0, -7.62939453125e-06, 0.0, -2.9921531677246094e-05, 0.0, -0.00217282772064209, 0.0, -0.030164718627929688, -0.0007114410400390625, -0.0007114410400390625, -0.0002346038818359375, -0.0033130645751953125, -5.7220458984375e-06, -0.0023980140686035156, -0.0002238540764665231, -5.53131103515625e-05, -0.022928237915039062, -0.0006999969482421875, -0.0008792877197265625, -1.71661376953125e-05, -1.728534698486328e-05, 0.0, -0.00281524658203125, -3.0517578125e-05, 0.0, 0.0, -4.38690185546875e-05, -2.86102294921875e-05, 0.0, -0.004992485046386719, -0.0006460270960815251, -1.9073486328125e-06, -6.866455078125e-05, -0.00034332275390625, -0.0001468658447265625, -2.09808349609375e-05, -2.288818359375e-05, -0.0006313323974609375, -0.0008295354200527072, -3.8146954466355965e-06, -1.9073486328125e-06, -0.019062042236328125, -0.0006656646728515625, -1.52587890625e-05, -2.86102294921875e-05, -1.52587890625e-05, 0.0, -3.4332275390625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -3.62396240234375e-05, -4.529948455456179e-06, -2.4199349354603328e-05, -2.288818359375e-05, -5.14984130859375e-05, -0.0003414154052734375, -1.71661376953125e-05, -1.9073486328125e-05, -0.0004482269287109375, -0.0010925480164587498, -4.768371127283899e-06, -1.9073486328125e-06, -0.0684213638305664, -0.00140380859375, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kill", "Command", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Kill", " ", "Command", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 18, 123, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 217, 55, 116, 32, "game", "<EOS>", 60, 140, 3, 203, 209, 1, 202, "x", "<EOS>", 19, 126, 15, 116, 23, 146, "x", "<EOS>", "minion_type", "<EOS>", 213, 10, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 105, 134, 19, 126, 23, 146, "<UNK>", "<EOS>", 213, 10, 216, 64, 148, "Null", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 229, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 109]}, {"inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.choose_option(player.game, lambda x:\n            x.card.minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n", "score": -5.60918254660541, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "KillCommand", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "choose_option", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "args": [{"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}, {"args": {"args": [{"_type": "arg", "arg": "x"}], "_type": "arguments"}, "_type": "Lambda", "body": {"left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}}, "_type": "Compare", "comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Is"}]}}], "_type": "Call"}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "If", "test": {"left": {"id": "<UNK>", "_type": "Name"}, "_type": "Compare", "comparators": [{"_type": "NameConstant", "value": "Null"}], "ops": [{"_type": "Is"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.6702880859375e-05, -1.33514404296875e-05, -1.5616309610777535e-05, -1.5020343198557384e-05, -8.344646857949556e-07, -3.814697265625e-06, -5.53131103515625e-05, -0.0018711090087890625, -1.1444091796875e-05, -2.47955322265625e-05, -1.0132789611816406e-05, -5.7220458984375e-06, -0.00011444091796875, -7.62939453125e-06, -1.71661376953125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.0001678466796875, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -7.986997843545396e-06, -1.442432312614983e-05, -2.0265579223632812e-06, -1.1444091796875e-05, -0.000362396240234375, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0001587867591297254, 0.0, -0.0001392364501953125, -0.00030517578125, 0.0, -0.001338958740234375, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001239776611328125, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005970001220703125, -1.9073486328125e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0008929967880249023, -9.5367431640625e-05, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.000942230224609375, 0.0, -0.0003604888916015625, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.933906555175781e-06, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -5.006789251638111e-06, -2.3841855067985307e-07, -0.0048847198486328125, -0.0003452301025390625, -0.0001373291015625, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-05, -0.0003814697265625, -0.014385964721441269, -4.053113570989808e-06, -0.014643669128417969, -0.0004024505615234375, -2.47955322265625e-05, 0.0, -0.06307220458984375, 0.0, -0.0021514892578125, -1.9073486328125e-05, -0.0005893707275390625, -5.7220458984375e-06, -0.0002892017364501953, -1.9073486328125e-06, -5.199223041534424, -1.9073486328125e-06, -1.33514404296875e-05, -0.013724327087402344, -8.392333984375e-05, -0.0001468658447265625, -0.000324249267578125, 0.0, -0.001140594482421875, -0.0003814697265625, -1.1444091796875e-05, -9.5367431640625e-05, -0.00035858154296875, -4.57763671875e-05, -5.91278076171875e-05, -0.02028214931488037, -2.288818359375e-05, -0.012861251831054688, -0.0035610198974609375, -0.016068458557128906, 0.0, -0.0515899658203125, 0.0, -0.00025177001953125, 0.0, -0.01910531520843506, -7.987022399902344e-06, -0.009364570491015911, -7.152555099310121e-07, -0.0007977416389621794, -9.5367431640625e-06, -2.86102294921875e-05, -0.0035867691040039062, -3.814697265625e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, 0.0, -7.152557373046875e-05, 0.0, -0.002864241600036621, 0.0, -0.01784801483154297, -0.00055694580078125, -0.0007381439208984375, -0.000213623046875, -0.004118919372558594, -9.5367431640625e-06, -0.0016303062438964844, -0.00016235279326792806, -5.53131103515625e-05, -0.023749351501464844, -0.0008411407470703125, -0.00075531005859375, -1.9073486328125e-05, -1.919269561767578e-05, 0.0, -0.0027751922607421875, -2.47955322265625e-05, 0.0, 0.0, -4.00543212890625e-05, -2.86102294921875e-05, 0.0, -0.0031824111938476562, -0.0006750966422259808, -1.9073486328125e-06, -7.43865966796875e-05, -0.00040435791015625, -0.0001506805419921875, -2.09808349609375e-05, -2.288818359375e-05, -0.00061798095703125, -0.0007719658315181732, -3.576277322281385e-06, -1.9073486328125e-06, -0.018346786499023438, -0.0006885528564453125, -1.52587890625e-05, -3.62396240234375e-05, -1.52587890625e-05, 0.0, -3.62396240234375e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.814697265625e-05, -5.0067837946699e-06, -2.1695992472814396e-05, -2.288818359375e-05, -5.14984130859375e-05, -0.0003452301025390625, -1.71661376953125e-05, -1.9073486328125e-05, -0.00043487548828125, -0.0010884953662753105, -4.88758041683468e-06, -1.9073486328125e-06, -0.06152534484863281, -0.001415252685546875, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kill", "Command", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Kill", " ", "Command", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 18, 123, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "choose_option", "<EOS>", 217, 55, 116, 32, "game", "<EOS>", 60, 140, 3, 203, 209, 1, 202, "x", "<EOS>", 19, 126, 15, 116, 15, 116, 23, 146, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 213, 10, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 105, 134, 19, 126, 23, 146, "<UNK>", "<EOS>", 213, 10, 216, 64, 148, "Null", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 229, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 109]}, {"inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.find_enemy_minion_battlecry_target(\n            player.game, lambda x: x.card.minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n", "score": -5.656965681194009, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "KillCommand", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "find_enemy_minion_battlecry_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "args": [{"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}, {"args": {"args": [{"_type": "arg", "arg": "x"}], "_type": "arguments"}, "_type": "Lambda", "body": {"left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}}, "_type": "Compare", "comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Is"}]}}], "_type": "Call"}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "If", "test": {"left": {"id": "<UNK>", "_type": "Name"}, "_type": "Compare", "comparators": [{"_type": "NameConstant", "value": "Null"}], "ops": [{"_type": "Is"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.6702880859375e-05, -1.33514404296875e-05, -1.5616309610777535e-05, -1.5020343198557384e-05, -8.344646857949556e-07, -3.814697265625e-06, -5.53131103515625e-05, -0.0018711090087890625, -1.1444091796875e-05, -2.47955322265625e-05, -1.0132789611816406e-05, -5.7220458984375e-06, -0.00011444091796875, -7.62939453125e-06, -1.71661376953125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.0001678466796875, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -7.986997843545396e-06, -1.442432312614983e-05, -2.0265579223632812e-06, -1.1444091796875e-05, -0.000362396240234375, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0001587867591297254, 0.0, -0.0001392364501953125, -0.00030517578125, 0.0, -0.001338958740234375, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001239776611328125, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005970001220703125, -1.9073486328125e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0008929967880249023, -9.5367431640625e-05, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.000942230224609375, 0.0, -0.0003604888916015625, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.933906555175781e-06, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -5.006789251638111e-06, -2.3841855067985307e-07, -0.0048847198486328125, -0.0003452301025390625, -0.0001373291015625, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-05, -0.0003814697265625, -0.014385964721441269, -4.053113570989808e-06, -0.014643669128417969, -0.0004024505615234375, -2.47955322265625e-05, 0.0, -0.06307220458984375, 0.0, -0.0021514892578125, -1.9073486328125e-05, -0.0005893707275390625, -5.7220458984375e-06, -0.0002892017364501953, -1.9073486328125e-06, -5.266463756561279, 0.0, -0.000316619873046875, -0.003726959228515625, -3.24249267578125e-05, -9.34600830078125e-05, -0.0004177093505859375, 0.0, -0.0015716552734375, -0.0006732940673828125, -2.09808349609375e-05, -0.000141143798828125, -0.00037384033203125, -4.38690185546875e-05, -6.67572021484375e-05, -0.017494678497314453, -3.24249267578125e-05, -0.012144088745117188, -0.0036716461181640625, -0.014268875122070312, 0.0, -0.04530143737792969, 0.0, -0.0002613067626953125, 0.0, -0.019597649574279785, -6.079673767089844e-06, -0.009420596063137054, -7.152555099310121e-07, -0.0007851053378544748, -9.5367431640625e-06, -2.86102294921875e-05, -0.0035495758056640625, -4.00543212890625e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, 0.0, -7.152557373046875e-05, 0.0, -0.0028569698333740234, 0.0, -0.017859458923339844, -0.000568389892578125, -0.0007419586181640625, -0.000213623046875, -0.004123687744140625, -9.5367431640625e-06, -0.0016417503356933594, -0.0001624719734536484, -5.340576171875e-05, -0.02391529083251953, -0.000843048095703125, -0.0007572174072265625, -1.9073486328125e-05, -1.919269561767578e-05, 0.0, -0.0027294158935546875, -2.47955322265625e-05, 0.0, 0.0, -4.00543212890625e-05, -2.6702880859375e-05, 0.0, -0.0032415390014648438, -0.0006696166819892824, -1.9073486328125e-06, -7.43865966796875e-05, -0.000400543212890625, -0.000152587890625, -2.09808349609375e-05, -2.288818359375e-05, -0.0006198883056640625, -0.0007905600941739976, -3.6954863844584906e-06, -1.9073486328125e-06, -0.018543243408203125, -0.0006885528564453125, -1.52587890625e-05, -3.62396240234375e-05, -1.52587890625e-05, 0.0, -3.62396240234375e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.62396240234375e-05, -5.0067837946699e-06, -2.181519812438637e-05, -2.288818359375e-05, -5.14984130859375e-05, -0.000347137451171875, -1.71661376953125e-05, -1.9073486328125e-05, -0.00043487548828125, -0.0010912370635196567, -4.88758041683468e-06, -1.9073486328125e-06, -0.06151294708251953, -0.001415252685546875, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kill", "Command", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Kill", " ", "Command", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 18, 123, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_battlecry_target", "<EOS>", 217, 55, 116, 32, "game", "<EOS>", 60, 140, 3, 203, 209, 1, 202, "x", "<EOS>", 19, 126, 15, 116, 15, 116, 23, 146, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 213, 10, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 105, 134, 19, 126, 23, 146, "<UNK>", "<EOS>", 213, 10, 216, 64, 148, "Null", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 229, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 109]}, {"inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.\n            spell_targetable is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n", "score": -6.051924106834662, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "KillCommand", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "args": [{"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}, {"args": {"args": [{"_type": "arg", "arg": "x"}], "_type": "arguments"}, "_type": "Lambda", "body": {"left": {"attr": "spell_targetable", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}, "_type": "Compare", "comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Is"}]}}], "_type": "Call"}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "If", "test": {"left": {"id": "<UNK>", "_type": "Name"}, "_type": "Compare", "comparators": [{"_type": "NameConstant", "value": "Null"}], "ops": [{"_type": "Is"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.6702880859375e-05, -1.33514404296875e-05, -1.5616309610777535e-05, -1.5020343198557384e-05, -8.344646857949556e-07, -3.814697265625e-06, -5.53131103515625e-05, -0.0018711090087890625, -1.1444091796875e-05, -2.47955322265625e-05, -1.0132789611816406e-05, -5.7220458984375e-06, -0.00011444091796875, -7.62939453125e-06, -1.71661376953125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.0001678466796875, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -7.986997843545396e-06, -1.442432312614983e-05, -2.0265579223632812e-06, -1.1444091796875e-05, -0.000362396240234375, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0001587867591297254, 0.0, -0.0001392364501953125, -0.00030517578125, 0.0, -0.001338958740234375, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001239776611328125, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005970001220703125, -1.9073486328125e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0008929967880249023, -9.5367431640625e-05, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.000942230224609375, 0.0, -0.0003604888916015625, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.933906555175781e-06, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -5.006789251638111e-06, -2.3841855067985307e-07, -0.0048847198486328125, -0.0003452301025390625, -0.0001373291015625, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-05, -0.0003814697265625, -0.014385964721441269, -4.053113570989808e-06, -0.014643669128417969, -0.0004024505615234375, -2.47955322265625e-05, 0.0, -0.06307220458984375, 0.0, -0.0021514892578125, -1.9073486328125e-05, -0.0005893707275390625, -5.7220458984375e-06, -0.0002892017364501953, -1.9073486328125e-06, -0.032930612564086914, 0.0, -4.38690185546875e-05, -0.0004444122314453125, -4.57763671875e-05, -0.0005207061767578125, -0.001010894775390625, 0.0, -0.0010395050048828125, -0.0005168914794921875, -2.288818359375e-05, -0.000133514404296875, -0.000400543212890625, -4.76837158203125e-05, -7.05718994140625e-05, -0.018134593963623047, -3.24249267578125e-05, -0.012675285339355469, -0.0037555694580078125, -0.014180183410644531, 0.0, -3.05240535736084, -1.9073486328125e-06, -0.046593666076660156, -7.62939453125e-06, -2.4742236137390137, -1.9073486328125e-06, -2.288818359375e-05, -0.056237220764160156, -1.9073486328125e-05, -0.04056739807128906, 0.0, -9.5367431640625e-06, 0.0, -2.968311309814453e-05, 0.0, -0.003062129020690918, 0.0, -0.048012733459472656, -0.0006732940673828125, -0.0006160736083984375, -0.0002307891845703125, -0.0035161972045898438, -5.7220458984375e-06, -0.002379179000854492, -0.00024232713622041047, -5.7220458984375e-05, -0.022225379943847656, -0.0006885528564453125, -0.00092315673828125, -1.71661376953125e-05, -1.728534698486328e-05, 0.0, -0.0026721954345703125, -2.86102294921875e-05, 0.0, 0.0, -4.1961669921875e-05, -2.86102294921875e-05, 0.0, -0.004889488220214844, -0.0006255363114178181, -1.9073486328125e-06, -6.866455078125e-05, -0.0003452301025390625, -0.000148773193359375, -2.09808349609375e-05, -2.09808349609375e-05, -0.00063323974609375, -0.0008390711154788733, -3.8146954466355965e-06, -1.9073486328125e-06, -0.019207000732421875, -0.0006656646728515625, -1.52587890625e-05, -2.86102294921875e-05, -1.52587890625e-05, 0.0, -3.4332275390625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -3.62396240234375e-05, -4.529948455456179e-06, -2.4318555006175302e-05, -2.288818359375e-05, -5.14984130859375e-05, -0.0003414154052734375, -1.71661376953125e-05, -1.9073486328125e-05, -0.00045013427734375, -0.0010949322022497654, -4.768371127283899e-06, -1.9073486328125e-06, -0.0699148178100586, -0.00140380859375, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kill", "Command", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Kill", " ", "Command", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 18, 123, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 217, 55, 116, 32, "game", "<EOS>", 60, 140, 3, 203, 209, 1, 202, "x", "<EOS>", 19, 126, 15, 116, 23, 146, "x", "<EOS>", "spell_targetable", "<EOS>", 213, 10, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 105, 134, 19, 126, 23, 146, "<UNK>", "<EOS>", 213, 10, 216, 64, 148, "Null", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 229, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 109]}, {"inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        target.damage(player.effective_spell_damage(3), self)\n", "score": -6.135488101015511, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "KillCommand", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "args": [{"attr": "game", "_type": "Attribute", "value": {"_type": "Template19"}}, {"args": {"args": [{"_type": "arg", "arg": "x"}], "_type": "arguments"}, "_type": "Lambda", "body": {"left": {"attr": "minion_type", "_type": "Attribute", "value": {"attr": "card", "_type": "Attribute", "value": {"id": "x", "_type": "Name"}}}, "_type": "Compare", "comparators": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "ops": [{"_type": "Is"}]}}], "_type": "Call"}, "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -2.6702880859375e-05, -1.33514404296875e-05, -1.5616309610777535e-05, -1.5020343198557384e-05, -8.344646857949556e-07, -3.814697265625e-06, -5.53131103515625e-05, -0.0018711090087890625, -1.1444091796875e-05, -2.47955322265625e-05, -1.0132789611816406e-05, -5.7220458984375e-06, -0.00011444091796875, -7.62939453125e-06, -1.71661376953125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.0001678466796875, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -7.986997843545396e-06, -1.442432312614983e-05, -2.0265579223632812e-06, -1.1444091796875e-05, -0.000362396240234375, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0001587867591297254, 0.0, -0.0001392364501953125, -0.00030517578125, 0.0, -0.001338958740234375, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001239776611328125, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005970001220703125, -1.9073486328125e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.0008929967880249023, -9.5367431640625e-05, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -7.62939453125e-06, -0.000942230224609375, 0.0, -0.0003604888916015625, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.933906555175781e-06, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -5.006789251638111e-06, -2.3841855067985307e-07, -0.0048847198486328125, -0.0003452301025390625, -0.0001373291015625, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-05, -0.0003814697265625, -0.014385964721441269, -4.053113570989808e-06, -0.014643669128417969, -0.0004024505615234375, -2.47955322265625e-05, 0.0, -0.06307220458984375, 0.0, -0.0021514892578125, -1.9073486328125e-05, -0.0005893707275390625, -5.7220458984375e-06, -0.0002892017364501953, -1.9073486328125e-06, -0.032930612564086914, 0.0, -4.38690185546875e-05, -0.0004444122314453125, -4.57763671875e-05, -0.0005207061767578125, -0.001010894775390625, 0.0, -0.0010395050048828125, -0.0005168914794921875, -2.288818359375e-05, -0.000133514404296875, -0.000400543212890625, -4.76837158203125e-05, -7.05718994140625e-05, -0.018134593963623047, -3.24249267578125e-05, -0.012675285339355469, -0.0037555694580078125, -0.014180183410644531, 0.0, -0.0485076904296875, 0.0, -0.00025177001953125, 0.0, -0.01968705654144287, -6.079673767089844e-06, -0.009348475374281406, -5.960462772236497e-07, -0.0007879672339186072, -9.5367431640625e-06, -2.86102294921875e-05, -0.0036182403564453125, -4.00543212890625e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, 0.0, -7.343292236328125e-05, 0.0, -0.002899646759033203, 0.0, -4.611106872558594, -0.0003566741943359375, 0.0, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.2027769088745117, -1.9073486328125e-06, -0.008926375769078732, -0.0013605788117274642, -0.01564997248351574, 0.0, -0.0001926422119140625, -0.00075531005859375, -4.76837158203125e-05, -2.09808349609375e-05, -5.7220458984375e-06, -0.0001544952392578125, -0.0002821676025632769, -3.576278118089249e-07, -1.9073486328125e-06, -0.01158905029296875, -0.0015850067138671875, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kill", "Command", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Kill", " ", "Command", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "<UNK>", "<EOS>", 18, 123, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 217, 55, 116, 32, "game", "<EOS>", 60, 140, 3, 203, 209, 1, 202, "x", "<EOS>", 19, 126, 15, 116, 15, 116, 23, 146, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 213, 10, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "target", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 72, 74, 109]}, {"inferred_code": "super().use(player, game)\n", "score": -18.294713973999023, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -14.622076988220215, -3.672614097595215], "choice_history": [93, 145, 230, 108, 109]}, {"inferred_code": "", "score": -20.30998992919922, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -20.309982299804688], "choice_history": [93, 145, 228]}], "index": 58}
{"beams": [{"inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n", "score": -0.01059075384793573, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "KoboldGeomancer", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "Template14"}, "_type": "keyword", "arg": "spell_damage"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -9.5367431640625e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -7.152555099310121e-07, -1.168244216387393e-05, -0.0005177120910957456, -3.814697265625e-06, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-05, -2.288818359375e-05, 0.0, -8.7738037109375e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.288818359375e-05, -1.9192511899746023e-05, -8.344650268554688e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -6.103515625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -1.71661376953125e-05, -0.000263214111328125, -7.43865966796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001125335693359375, 0.0, -0.000339508056640625, -4.57763671875e-05, -9.5367431640625e-06, -5.7220458984375e-05, -6.67572021484375e-05, -7.62939453125e-05, -0.000110626220703125, -1.33514404296875e-05, -3.62396240234375e-05, -0.000965118408203125, -9.34600830078125e-05, -0.0066259861923754215, -2.3841855067985307e-07, -0.00057220458984375, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kobold", "Geomancer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Kobold", " ", "Geomancer", "<EOS>", 69, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 69, 224, 205, "spell_damage", "<EOS>", 28, 109]}, {"inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, stealth=True)\n", "score": -5.850804663761437, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "KoboldGeomancer", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "stealth"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -9.5367431640625e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -7.152555099310121e-07, -1.168244216387393e-05, -0.0005177120910957456, -3.814697265625e-06, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-05, -2.288818359375e-05, 0.0, -8.7738037109375e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.288818359375e-05, -1.9192511899746023e-05, -8.344650268554688e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -6.103515625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -1.71661376953125e-05, -0.000263214111328125, -7.43865966796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001125335693359375, 0.0, -0.000339508056640625, -4.57763671875e-05, -9.5367431640625e-06, -5.7220458984375e-05, -6.67572021484375e-05, -7.62939453125e-05, -0.000110626220703125, -1.33514404296875e-05, -3.62396240234375e-05, -0.000965118408203125, -9.34600830078125e-05, -5.735418319702148, -2.384185791015625e-06, -0.10909652709960938, -0.0024318695068359375, -0.00044952964526601136, -1.3708974620385561e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kobold", "Geomancer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Kobold", " ", "Geomancer", "<EOS>", 69, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 69, 224, 205, "stealth", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1, spell_damage=1)\n", "score": -7.0506555613635555, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "KoboldGeomancer", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "Template14"}, "_type": "keyword", "arg": "spell_damage"}, {"value": {"_type": "Template14"}, "_type": "keyword", "arg": "spell_damage"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -9.5367431640625e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -7.152555099310121e-07, -1.168244216387393e-05, -0.0005177120910957456, -3.814697265625e-06, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-05, -2.288818359375e-05, 0.0, -8.7738037109375e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.288818359375e-05, -1.9192511899746023e-05, -8.344650268554688e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -6.103515625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -1.71661376953125e-05, -0.000263214111328125, -7.43865966796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001125335693359375, 0.0, -0.000339508056640625, -4.57763671875e-05, -9.5367431640625e-06, -5.7220458984375e-05, -6.67572021484375e-05, -7.62939453125e-05, -0.000110626220703125, -1.33514404296875e-05, -3.62396240234375e-05, -6.997714042663574, -0.00080108642578125, -0.009444447234272957, -2.2649765014648438e-06, -0.0009212493896484375, -1.71661376953125e-05, -0.03852128982543945, 0.0, -0.0008983612060546875, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Kobold", "Geomancer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Kobold", " ", "Geomancer", "<EOS>", 69, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 69, 225, 205, "spell_damage", "<EOS>", 28, 205, "spell_damage", "<EOS>", 28, 109]}, {"inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "score": -7.5114520575913275, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "KoboldGeomancer", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -9.5367431640625e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -7.152555099310121e-07, -1.168244216387393e-05, -0.0005177120910957456, -3.814697265625e-06, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-05, -2.288818359375e-05, 0.0, -8.7738037109375e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.288818359375e-05, -1.9192511899746023e-05, -8.344650268554688e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -6.103515625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -1.71661376953125e-05, -0.000263214111328125, -7.43865966796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001125335693359375, 0.0, -0.000339508056640625, -4.57763671875e-05, -9.5367431640625e-06, -5.7220458984375e-05, -6.67572021484375e-05, -7.62939453125e-05, -0.000110626220703125, -1.33514404296875e-05, -3.62396240234375e-05, -0.000965118408203125, -9.34600830078125e-05, -7.501232147216797, -4.768370445162873e-07, -0.005711555480957031, -0.0008029937744140625, -0.0003061223542317748, -6.437280717364047e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kobold", "Geomancer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Kobold", " ", "Geomancer", "<EOS>", 69, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 69, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class KoboldGeomancerGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n", "score": -7.603680634166011, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "KoboldGeomancerGeomancer", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "Template14"}, "_type": "keyword", "arg": "spell_damage"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -9.5367431640625e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -7.152555099310121e-07, -1.168244216387393e-05, -7.576091766357422, -0.017497707158327103, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -7.62939453125e-05, -2.47955322265625e-05, 0.0, -8.58306884765625e-05, -4.1961669921875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -2.47955322265625e-05, -1.847726889536716e-05, -8.344650268554688e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -6.103515625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -0.00025177001953125, -7.43865966796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001239776611328125, 0.0, -0.000400543212890625, -4.57763671875e-05, -9.5367431640625e-06, -5.53131103515625e-05, -6.67572021484375e-05, -7.62939453125e-05, -0.000110626220703125, -1.33514404296875e-05, -3.62396240234375e-05, -0.0009613037109375, -9.5367431640625e-05, -0.00660667335614562, -2.3841855067985307e-07, -0.0005741119384765625, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kobold", "Geomancer", "Geomancer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Kobold", " ", "Geomancer", "<EOS>", 69, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 69, 224, 205, "spell_damage", "<EOS>", 28, 109]}, {"inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, Minion=True)\n", "score": -8.087567046341746, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "KoboldGeomancer", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "Minion"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -9.5367431640625e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -7.152555099310121e-07, -1.168244216387393e-05, -0.0005177120910957456, -3.814697265625e-06, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-05, -2.288818359375e-05, 0.0, -8.7738037109375e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.288818359375e-05, -1.9192511899746023e-05, -8.344650268554688e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -6.103515625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -1.71661376953125e-05, -0.000263214111328125, -7.43865966796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001125335693359375, 0.0, -0.000339508056640625, -4.57763671875e-05, -9.5367431640625e-06, -5.7220458984375e-05, -6.67572021484375e-05, -7.62939453125e-05, -0.000110626220703125, -1.33514404296875e-05, -3.62396240234375e-05, -0.000965118408203125, -9.34600830078125e-05, -7.086212635040283, -1.9073486328125e-06, -0.9931907653808594, -0.00357818603515625, -0.0011735850712284446, -1.764281842042692e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kobold", "Geomancer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Kobold", " ", "Geomancer", "<EOS>", 69, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 69, 224, 205, "Minion", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, stealth=1)\n", "score": -8.140657053193308, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "KoboldGeomancer", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "Template14"}, "_type": "keyword", "arg": "stealth"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -9.5367431640625e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -7.152555099310121e-07, -1.168244216387393e-05, -0.0005177120910957456, -3.814697265625e-06, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-05, -2.288818359375e-05, 0.0, -8.7738037109375e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.288818359375e-05, -1.9192511899746023e-05, -8.344650268554688e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -6.103515625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -1.71661376953125e-05, -0.000263214111328125, -7.43865966796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001125335693359375, 0.0, -0.000339508056640625, -4.57763671875e-05, -9.5367431640625e-06, -5.7220458984375e-05, -6.67572021484375e-05, -7.62939453125e-05, -0.000110626220703125, -1.33514404296875e-05, -3.62396240234375e-05, -0.000965118408203125, -9.34600830078125e-05, -5.735418319702148, -2.384185791015625e-06, -2.401844024658203, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kobold", "Geomancer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Kobold", " ", "Geomancer", "<EOS>", 69, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 69, 224, 205, "stealth", "<EOS>", 28, 109]}, {"inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, Card=1)\n", "score": -8.458654508790232, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "KoboldGeomancer", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "Template14"}, "_type": "keyword", "arg": "Card"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -9.5367431640625e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -7.152555099310121e-07, -1.168244216387393e-05, -0.0005177120910957456, -3.814697265625e-06, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-05, -2.288818359375e-05, 0.0, -8.7738037109375e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.288818359375e-05, -1.9192511899746023e-05, -8.344650268554688e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -6.103515625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -1.71661376953125e-05, -0.000263214111328125, -7.43865966796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001125335693359375, 0.0, -0.000339508056640625, -4.57763671875e-05, -9.5367431640625e-06, -5.7220458984375e-05, -6.67572021484375e-05, -7.62939453125e-05, -0.000110626220703125, -1.33514404296875e-05, -3.62396240234375e-05, -0.000965118408203125, -9.34600830078125e-05, -8.38043212890625, -7.62939453125e-06, -0.07482242584228516, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kobold", "Geomancer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Kobold", " ", "Geomancer", "<EOS>", 69, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 69, 224, 205, "Card", "<EOS>", 28, 109]}, {"inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, minions=True)\n", "score": -8.859441612168894, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "KoboldGeomancer", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "minions"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -9.5367431640625e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -7.152555099310121e-07, -1.168244216387393e-05, -0.0005177120910957456, -3.814697265625e-06, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-05, -2.288818359375e-05, 0.0, -8.7738037109375e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.288818359375e-05, -1.9192511899746023e-05, -8.344650268554688e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -6.103515625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -1.71661376953125e-05, -0.000263214111328125, -7.43865966796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001125335693359375, 0.0, -0.000339508056640625, -4.57763671875e-05, -9.5367431640625e-06, -5.7220458984375e-05, -6.67572021484375e-05, -7.62939453125e-05, -0.000110626220703125, -1.33514404296875e-05, -3.62396240234375e-05, -0.000965118408203125, -9.34600830078125e-05, -8.822012901306152, 0.0, -0.032027244567871094, -0.001819610595703125, -0.00018345139687880874, -6.079655122448457e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kobold", "Geomancer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Kobold", " ", "Geomancer", "<EOS>", 69, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 69, 224, 205, "minions", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, Minion=[Aura(ChangeAttack(1), SelfSelector())])\n", "score": -9.088092312837716, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "KoboldGeomancer", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "Minion"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -9.5367431640625e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -7.152555099310121e-07, -1.168244216387393e-05, -0.0005177120910957456, -3.814697265625e-06, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-05, -2.288818359375e-05, 0.0, -8.7738037109375e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.288818359375e-05, -1.9192511899746023e-05, -8.344650268554688e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -6.103515625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -1.71661376953125e-05, -0.000263214111328125, -7.43865966796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001125335693359375, 0.0, -0.000339508056640625, -4.57763671875e-05, -9.5367431640625e-06, -5.7220458984375e-05, -6.67572021484375e-05, -7.62939453125e-05, -0.000110626220703125, -1.33514404296875e-05, -3.62396240234375e-05, -0.000965118408203125, -9.34600830078125e-05, -7.086212635040283, -1.9073486328125e-06, -0.6459941864013672, -4.9591064453125e-05, -0.00263214111328125, -8.7738037109375e-05, -5.7220458984375e-06, -0.06682395935058594, -0.001163482666015625, -0.0038661956787109375, -0.005724906921386719, -0.0005207061767578125, -9.5367431640625e-05, -0.0001659393310546875, -1.145792007446289, -0.00112152099609375, -0.12405514717102051, -2.2530381102114916e-05, 0.0, -0.0003604888916015625, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Kobold", "Geomancer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Kobold", " ", "Geomancer", "<EOS>", 69, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 69, 224, 205, "Minion", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 87, 193, "Self", "Selector", "<EOS>", 71, 109]}, {"inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, Minion=[Aura(ChangeAttack(1), MinionSelector(\n            Adjacent()))])\n", "score": -9.830412222024052, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "KoboldGeomancer", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"hole0": "Adjacent", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "Minion"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -9.5367431640625e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -7.152555099310121e-07, -1.168244216387393e-05, -0.0005177120910957456, -3.814697265625e-06, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-05, -2.288818359375e-05, 0.0, -8.7738037109375e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.288818359375e-05, -1.9192511899746023e-05, -8.344650268554688e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -6.103515625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -1.71661376953125e-05, -0.000263214111328125, -7.43865966796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001125335693359375, 0.0, -0.000339508056640625, -4.57763671875e-05, -9.5367431640625e-06, -5.7220458984375e-05, -6.67572021484375e-05, -7.62939453125e-05, -0.000110626220703125, -1.33514404296875e-05, -3.62396240234375e-05, -0.000965118408203125, -9.34600830078125e-05, -7.086212635040283, -1.9073486328125e-06, -0.6459941864013672, -4.9591064453125e-05, -0.00263214111328125, -8.7738037109375e-05, -5.7220458984375e-06, -0.06682395935058594, -0.001163482666015625, -0.0038661956787109375, -0.005724906921386719, -0.0005207061767578125, -9.5367431640625e-05, -0.0001659393310546875, -0.38333702087402344, -0.8621997833251953, -0.0029773712158203125, -0.0035381317138671875, -0.2811098098754883, -4.1961669921875e-05, -0.47995349764823914, -0.0003328296297695488, -0.00018310546875, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Kobold", "Geomancer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Kobold", " ", "Geomancer", "<EOS>", 69, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 69, 224, 205, "Minion", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 58, 123, 38, 216, 87, 193, "Adjacent", "<EOS>", 71, 109]}, {"inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, Minion=[Aura(ChangeAttack(1), CharacterSelector\n            (players=BothPlayer()))])\n", "score": -9.921033069493888, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "KoboldGeomancer", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call", "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}]}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "Minion"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -9.5367431640625e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -7.152555099310121e-07, -1.168244216387393e-05, -0.0005177120910957456, -3.814697265625e-06, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-05, -2.288818359375e-05, 0.0, -8.7738037109375e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.288818359375e-05, -1.9192511899746023e-05, -8.344650268554688e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -6.103515625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -1.71661376953125e-05, -0.000263214111328125, -7.43865966796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001125335693359375, 0.0, -0.000339508056640625, -4.57763671875e-05, -9.5367431640625e-06, -5.7220458984375e-05, -6.67572021484375e-05, -7.62939453125e-05, -0.000110626220703125, -1.33514404296875e-05, -3.62396240234375e-05, -0.000965118408203125, -9.34600830078125e-05, -7.086212635040283, -1.9073486328125e-06, -0.6459941864013672, -4.9591064453125e-05, -0.00263214111328125, -8.7738037109375e-05, -5.7220458984375e-06, -0.06682395935058594, -0.001163482666015625, -0.0038661956787109375, -0.005724906921386719, -0.0005207061767578125, -9.5367431640625e-05, -0.0001659393310546875, -0.38333702087402344, -0.5721406936645508, -0.15337371826171875, -1.9073486328125e-06, -0.050705671310424805, -0.003412604331970215, 0.0, -0.26566314697265625, -5.14984130859375e-05, -0.3965264558792114, 0.0, -2.47955322265625e-05, 0.0, -0.276184618473053, -6.651799048995599e-05, 0.0, -0.0028057098388671875, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Kobold", "Geomancer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Kobold", " ", "Geomancer", "<EOS>", 69, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 69, 224, 205, "Minion", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 58, 122, 23, 146, "Character", "Selector", "<EOS>", 224, 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 71, 109]}, {"inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(MinionDied(), ActionTag(Give(\n            ChangeHealth(1)), MinionSelector(condition=Null, players=\n            BothPlayer())))])\n", "score": -10.808175881122907, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "KoboldGeomancer", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"hole0": "MinionDied", "_type": "Template5"}, {"func": {"_type": "Template32"}, "args": [{"func": {"_type": "Template25"}, "args": [{"func": {"id": "ChangeHealth", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}, {"value": {"hole0": "BothPlayer", "_type": "Template5"}, "_type": "keyword", "arg": "players"}]}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -9.5367431640625e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -7.152555099310121e-07, -1.168244216387393e-05, -0.0005177120910957456, -3.814697265625e-06, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-05, -2.288818359375e-05, 0.0, -8.7738037109375e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.288818359375e-05, -1.9192511899746023e-05, -8.344650268554688e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -6.103515625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -1.71661376953125e-05, -0.000263214111328125, -7.43865966796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001125335693359375, 0.0, -0.000339508056640625, -4.57763671875e-05, -9.5367431640625e-06, -5.7220458984375e-05, -6.67572021484375e-05, -7.62939453125e-05, -0.000110626220703125, -1.33514404296875e-05, -3.62396240234375e-05, -0.000965118408203125, -9.34600830078125e-05, -7.367016792297363, 0.0, -0.0005950927734375, -4.9591064453125e-05, -0.0001583099365234375, -0.0001277923583984375, -3.4332275390625e-05, -0.032355308532714844, -0.000118255615234375, -0.031696319580078125, -0.0008640289306640625, -1.2936043739318848, -0.044832706451416016, -2.5749075575731695e-05, -5.14984130859375e-05, -0.0003986358642578125, -2.47955322265625e-05, -9.918212890625e-05, -0.0001697540283203125, -2.288818359375e-05, -0.4380922317504883, -3.814697265625e-06, -0.0017299652099609375, -0.000148773193359375, -0.029996871948242188, -1.9073486328125e-06, -0.20495736598968506, -0.001025080680847168, 0.0, -0.0002346038818359375, -0.0002288818359375, -0.01171112060546875, -0.004306793212890625, -0.14444732666015625, -0.8558206558227539, -1.9073486328125e-05, -0.013878941535949707, -0.0002613067626953125, -0.29517555236816406, -0.0026454925537109375, -0.0021610260009765625, -9.5367431640625e-05, -0.00016021728515625, -0.007916808128356934, 0.0, -0.0002288818359375, 0.0, -0.016783926635980606, -4.076957338838838e-05, 0.0, -0.00046539306640625, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kobold", "Geomancer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Kobold", " ", "Geomancer", "<EOS>", 69, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 69, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 87, 193, "Minion", "Died", "<EOS>", 58, 123, 43, 217, 58, 123, 37, 216, 58, 123, 23, 146, "Change", "Health", "<EOS>", 216, 70, 58, 122, 38, 225, 205, "condition", "<EOS>", 24, 148, "Null", "<EOS>", 205, "players", "<EOS>", 51, 193, "Both", "Player", "<EOS>", 71, 109]}, {"inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(MinionDied(), ActionTag(Give(\n            ChangeHealth(1)), MinionSelector(condition=IsMinion())))])\n", "score": -10.89101097816706, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "KoboldGeomancer", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template12"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template12"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"hole0": "MinionDied", "_type": "Template5"}, {"func": {"_type": "Template32"}, "args": [{"func": {"_type": "Template25"}, "args": [{"func": {"id": "ChangeHealth", "_type": "Name"}, "args": [{"_type": "Template14"}], "_type": "Call"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "_type": "Call", "keywords": [{"value": {"hole0": "IsMinion", "_type": "Template5"}, "_type": "keyword", "arg": "condition"}]}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "effects"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [0.0, -9.5367431640625e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -7.152555099310121e-07, -1.168244216387393e-05, -0.0005177120910957456, -3.814697265625e-06, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-05, -2.288818359375e-05, 0.0, -8.7738037109375e-05, -3.814697265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.288818359375e-05, -1.9192511899746023e-05, -8.344650268554688e-06, -2.1457672119140625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -6.103515625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -1.71661376953125e-05, -0.000263214111328125, -7.43865966796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001125335693359375, 0.0, -0.000339508056640625, -4.57763671875e-05, -9.5367431640625e-06, -5.7220458984375e-05, -6.67572021484375e-05, -7.62939453125e-05, -0.000110626220703125, -1.33514404296875e-05, -3.62396240234375e-05, -0.000965118408203125, -9.34600830078125e-05, -7.367016792297363, 0.0, -0.0005950927734375, -4.9591064453125e-05, -0.0001583099365234375, -0.0001277923583984375, -3.4332275390625e-05, -0.032355308532714844, -0.000118255615234375, -0.031696319580078125, -0.0008640289306640625, -1.2936043739318848, -0.044832706451416016, -2.5749075575731695e-05, -5.14984130859375e-05, -0.0003986358642578125, -2.47955322265625e-05, -9.918212890625e-05, -0.0001697540283203125, -2.288818359375e-05, -0.4380922317504883, -3.814697265625e-06, -0.0017299652099609375, -0.000148773193359375, -0.029996871948242188, -1.9073486328125e-06, -0.20495736598968506, -0.001025080680847168, 0.0, -0.0002346038818359375, -0.0002288818359375, -0.01171112060546875, -0.004306793212890625, -0.14444732666015625, -0.5682535171508789, -3.814697265625e-06, -0.008656620979309082, -3.24249267578125e-05, -0.12128925323486328, -3.814697265625e-06, -0.576590895652771, -0.0006688760477118194, -0.002861499786376953, -0.0001239776611328125, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Kobold", "Geomancer", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Kobold", " ", "Geomancer", "<EOS>", 69, 89, 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 69, 224, 205, "effects", "<EOS>", 21, 141, 217, 58, 123, 44, 217, 87, 193, "Minion", "Died", "<EOS>", 58, 123, 43, 217, 58, 123, 37, 216, 58, 123, 23, 146, "Change", "Health", "<EOS>", 216, 70, 58, 122, 38, 224, 205, "condition", "<EOS>", 51, 193, "Is", "Minion", "<EOS>", 71, 109]}, {"inferred_code": "", "score": -20.40353012084961, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, -9.5367431640625e-06, -20.403520584106445], "choice_history": [93, 145, 228]}], "index": 59}
{"beams": [{"inferred_code": "class Kor'kronElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "score": -0.3957871772527142, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Kor'kronElite", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template20"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template20"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.9073486328125e-05, -2.288818359375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.38497868180274963, -0.00041369142127223313, -0.00011252745025558397, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -8.58306884765625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.400040026870556e-05, -1.049041748046875e-05, -7.748603820800781e-06, 0.0, -7.62939453125e-05, -3.814697265625e-06, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -0.00043523311614990234, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, 0.0, -0.00022125244140625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002155303955078125, -5.53131103515625e-05, -0.0001583099365234375, -1.9073486328125e-05, -0.000232696533203125, -6.866455078125e-05, -0.00048065185546875, -0.000469207763671875, -0.0054874420166015625, 0.0, -0.001532435417175293, -6.103515625e-05, -6.67572021484375e-05, -6.103515625e-05, -0.0001574753987370059, -2.241134461655747e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kor'kron", "Elite", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Kor'kron", " ", "Elite", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 76, 72, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "score": -1.152338293957655, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "<UNK>Elite", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template20"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template20"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.9073486328125e-05, -2.288818359375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -1.1415297985076904, -0.00041369142127223313, -0.00011252745025558397, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -8.58306884765625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.400040026870556e-05, -1.049041748046875e-05, -7.748603820800781e-06, 0.0, -7.62939453125e-05, -3.814697265625e-06, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -0.00043523311614990234, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, 0.0, -0.00022125244140625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002155303955078125, -5.53131103515625e-05, -0.0001583099365234375, -1.9073486328125e-05, -0.000232696533203125, -6.866455078125e-05, -0.00048065185546875, -0.000469207763671875, -0.0054874420166015625, 0.0, -0.001532435417175293, -6.103515625e-05, -6.67572021484375e-05, -6.103515625e-05, -0.0001574753987370059, -2.241134461655747e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Elite", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Kor'kron", " ", "Elite", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 76, 72, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Kor'kronElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True, charge=True)\n", "score": -5.6782310374765075, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Kor'kronElite", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template20"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template20"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}, {"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.9073486328125e-05, -2.288818359375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.38497868180274963, -0.00041369142127223313, -0.00011252745025558397, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -8.58306884765625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.400040026870556e-05, -1.049041748046875e-05, -7.748603820800781e-06, 0.0, -7.62939453125e-05, -3.814697265625e-06, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -0.00043523311614990234, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, 0.0, -0.00022125244140625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002155303955078125, -5.53131103515625e-05, -0.0001583099365234375, -1.9073486328125e-05, -0.000232696533203125, -6.866455078125e-05, -0.00048065185546875, -0.000469207763671875, -5.247906684875488, -3.814697265625e-06, -0.002852081321179867, -4.780292510986328e-05, -6.29425048828125e-05, -3.0517578125e-05, -0.0003111349942628294, -3.421305154915899e-05, -1.9073486328125e-06, -0.0365057997405529, -4.0531158447265625e-06, -0.001129150390625, -4.1961669921875e-05, -0.0008827447309158742, -1.7642971215536818e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kor'kron", "Elite", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Kor'kron", " ", "Elite", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 76, 72, 225, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True, charge=True)\n", "score": -6.434782154181448, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "<UNK>Elite", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template20"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template20"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}, {"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.9073486328125e-05, -2.288818359375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -1.1415297985076904, -0.00041369142127223313, -0.00011252745025558397, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -8.58306884765625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.400040026870556e-05, -1.049041748046875e-05, -7.748603820800781e-06, 0.0, -7.62939453125e-05, -3.814697265625e-06, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -0.00043523311614990234, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, 0.0, -0.00022125244140625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002155303955078125, -5.53131103515625e-05, -0.0001583099365234375, -1.9073486328125e-05, -0.000232696533203125, -6.866455078125e-05, -0.00048065185546875, -0.000469207763671875, -5.247906684875488, -3.814697265625e-06, -0.002852081321179867, -4.780292510986328e-05, -6.29425048828125e-05, -3.0517578125e-05, -0.0003111349942628294, -3.421305154915899e-05, -1.9073486328125e-06, -0.0365057997405529, -4.0531158447265625e-06, -0.001129150390625, -4.1961669921875e-05, -0.0008827447309158742, -1.7642971215536818e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Elite", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Kor'kron", " ", "Elite", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 76, 72, 225, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Kor'kronElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, windfury=True)\n", "score": -8.175945100996614, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Kor'kronElite", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template20"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template20"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "windfury"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.9073486328125e-05, -2.288818359375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.38497868180274963, -0.00041369142127223313, -0.00011252745025558397, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -8.58306884765625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.400040026870556e-05, -1.049041748046875e-05, -7.748603820800781e-06, 0.0, -7.62939453125e-05, -3.814697265625e-06, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -0.00043523311614990234, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, 0.0, -0.00022125244140625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002155303955078125, -5.53131103515625e-05, -0.0001583099365234375, -1.9073486328125e-05, -0.000232696533203125, -6.866455078125e-05, -0.00048065185546875, -0.000469207763671875, -0.0054874420166015625, 0.0, -7.7817535400390625, -1.9073486328125e-05, -9.34600830078125e-05, -8.20159912109375e-05, -9.894368122331798e-05, -1.2040138244628906e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kor'kron", "Elite", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Kor'kron", " ", "Elite", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 76, 72, 224, 205, "windfury", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Kor'kron<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "score": -8.20248713329238, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Kor'kron<UNK>", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template20"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template20"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.9073486328125e-05, -2.288818359375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.38497868180274963, -7.8071136474609375, -0.00011252745025558397, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -8.58306884765625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.400040026870556e-05, -1.049041748046875e-05, -7.748603820800781e-06, 0.0, -7.62939453125e-05, -3.814697265625e-06, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -0.00043523311614990234, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, 0.0, -0.00022125244140625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002155303955078125, -5.53131103515625e-05, -0.0001583099365234375, -1.9073486328125e-05, -0.000232696533203125, -6.866455078125e-05, -0.00048065185546875, -0.000469207763671875, -0.0054874420166015625, 0.0, -0.001532435417175293, -6.103515625e-05, -6.67572021484375e-05, -6.103515625e-05, -0.0001574753987370059, -2.241134461655747e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kor'kron", "<UNK>", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Kor'kron", " ", "Elite", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 76, 72, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Kor'kronElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, taunt=True)\n", "score": -8.39720409891379, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Kor'kronElite", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template20"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template20"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.9073486328125e-05, -2.288818359375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.38497868180274963, -0.00041369142127223313, -0.00011252745025558397, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -8.58306884765625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.400040026870556e-05, -1.049041748046875e-05, -7.748603820800781e-06, 0.0, -7.62939453125e-05, -3.814697265625e-06, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -0.00043523311614990234, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, 0.0, -0.00022125244140625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002155303955078125, -5.53131103515625e-05, -0.0001583099365234375, -1.9073486328125e-05, -0.000232696533203125, -6.866455078125e-05, -0.00048065185546875, -0.000469207763671875, -0.0054874420166015625, 0.0, -8.002944946289062, -7.641315460205078e-05, -6.29425048828125e-05, -5.340576171875e-05, -0.00016605851124040782, -1.430511474609375e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kor'kron", "Elite", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Kor'kron", " ", "Elite", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 76, 72, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Kor'kronElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 3, charge=True)\n", "score": -8.5148240898925, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Kor'kronElite", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template20"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template28"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.9073486328125e-05, -2.288818359375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.38497868180274963, -0.00041369142127223313, -0.00011252745025558397, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -8.58306884765625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.400040026870556e-05, -1.049041748046875e-05, -7.748603820800781e-06, 0.0, -7.62939453125e-05, -3.814697265625e-06, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -0.00043523311614990234, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, 0.0, -0.00022125244140625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002155303955078125, -5.53131103515625e-05, -0.0001583099365234375, -1.9073486328125e-05, -0.000232696533203125, -6.866455078125e-05, -8.118692398071289, -0.0015048980712890625, -0.00254058837890625, 0.0, -0.004057884216308594, -5.53131103515625e-05, -7.82012939453125e-05, -6.866455078125e-05, -0.00034439528826624155, -3.30209695675876e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kor'kron", "Elite", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Kor'kron", " ", "Elite", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 81, 72, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Kor'kronElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, divine_shield=True)\n", "score": -8.518605885725265, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Kor'kronElite", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template20"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template20"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "divine_shield"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.9073486328125e-05, -2.288818359375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.38497868180274963, -0.00041369142127223313, -0.00011252745025558397, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -8.58306884765625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.400040026870556e-05, -1.049041748046875e-05, -7.748603820800781e-06, 0.0, -7.62939453125e-05, -3.814697265625e-06, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -0.00043523311614990234, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, 0.0, -0.00022125244140625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002155303955078125, -5.53131103515625e-05, -0.0001583099365234375, -1.9073486328125e-05, -0.000232696533203125, -6.866455078125e-05, -0.00048065185546875, -0.000469207763671875, -0.0054874420166015625, 0.0, -8.124403953552246, -9.5367431640625e-06, -0.0001201629638671875, -8.0108642578125e-05, -0.00010156629286939278, -4.5299530029296875e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kor'kron", "Elite", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Kor'kron", " ", "Elite", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 76, 72, 224, 205, "divine_shield", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Kor'kronElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, charge=True)\n", "score": -8.794133720492027, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Kor'kronElite", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template20"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template20"}, {"_type": "Template28"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.9073486328125e-05, -2.288818359375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.38497868180274963, -0.00041369142127223313, -0.00011252745025558397, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -8.58306884765625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.400040026870556e-05, -1.049041748046875e-05, -7.748603820800781e-06, 0.0, -7.62939453125e-05, -3.814697265625e-06, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -0.00043523311614990234, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, 0.0, -0.00022125244140625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002155303955078125, -5.53131103515625e-05, -0.0001583099365234375, -1.9073486328125e-05, -0.000232696533203125, -6.866455078125e-05, -0.00048065185546875, -8.394695281982422, -0.0077266693115234375, 0.0, -0.00335693359375, -4.00543212890625e-05, -0.0001049041748046875, -5.91278076171875e-05, -0.0002022980188485235, -1.9073484509135596e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kor'kron", "Elite", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Kor'kron", " ", "Elite", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 76, 81, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, windfury=True)\n", "score": -8.932496217701555, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "<UNK>Elite", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template20"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template20"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "windfury"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.9073486328125e-05, -2.288818359375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -1.1415297985076904, -0.00041369142127223313, -0.00011252745025558397, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -8.58306884765625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.400040026870556e-05, -1.049041748046875e-05, -7.748603820800781e-06, 0.0, -7.62939453125e-05, -3.814697265625e-06, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -0.00043523311614990234, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, 0.0, -0.00022125244140625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002155303955078125, -5.53131103515625e-05, -0.0001583099365234375, -1.9073486328125e-05, -0.000232696533203125, -6.866455078125e-05, -0.00048065185546875, -0.000469207763671875, -0.0054874420166015625, 0.0, -7.7817535400390625, -1.9073486328125e-05, -9.34600830078125e-05, -8.20159912109375e-05, -9.894368122331798e-05, -1.2040138244628906e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Elite", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Kor'kron", " ", "Elite", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 76, 72, 224, 205, "windfury", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class <UNK><UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "score": -8.95903824999732, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "<UNK><UNK>", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template20"}, {"attr": "WARRIOR", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template20"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.9073486328125e-05, -2.288818359375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -1.1415297985076904, -7.8071136474609375, -0.00011252745025558397, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -8.58306884765625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.400040026870556e-05, -1.049041748046875e-05, -7.748603820800781e-06, 0.0, -7.62939453125e-05, -3.814697265625e-06, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -0.00043523311614990234, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, 0.0, -0.00022125244140625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002155303955078125, -5.53131103515625e-05, -0.0001583099365234375, -1.9073486328125e-05, -0.000232696533203125, -6.866455078125e-05, -0.00048065185546875, -0.000469207763671875, -0.0054874420166015625, 0.0, -0.001532435417175293, -6.103515625e-05, -6.67572021484375e-05, -6.103515625e-05, -0.0001574753987370059, -2.241134461655747e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "<UNK>", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Kor'kron", " ", "Elite", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 76, 72, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class Kor'kronElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "score": -9.05192643180817, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Kor'kronElite", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template20"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template20"}, {"_type": "Template16"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "charge"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.9073486328125e-05, -2.288818359375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.38497868180274963, -0.00041369142127223313, -0.00011252745025558397, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -8.58306884765625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.400040026870556e-05, -1.049041748046875e-05, -7.748603820800781e-06, 0.0, -7.62939453125e-05, -3.814697265625e-06, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -8.65659236907959, -1.9073486328125e-06, -2.288818359375e-05, 0.0, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.43865966796875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002040863037109375, -5.7220458984375e-05, -0.0001697540283203125, -1.71661376953125e-05, -0.0002269744873046875, -6.67572021484375e-05, -0.000598907470703125, -0.00048065185546875, -0.005489349365234375, 0.0, -0.0014837980270385742, -5.91278076171875e-05, -6.67572021484375e-05, -6.103515625e-05, -0.00016343584866262972, -2.241134461655747e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Kor'kron", "Elite", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Kor'kron", " ", "Elite", "<EOS>", 76, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 88, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 76, 72, 224, 205, "charge", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "", "score": -19.93841552734375, "model_output": {"_type": "Module", "body": []}, "score_history": [-2.288818359375e-05, -1.9073486328125e-05, -19.938373565673828], "choice_history": [93, 145, 228]}, {"inferred_code": "", "score": -26.409321784973145, "model_output": {"_type": "Module", "body": [{"_type": "Template13_stmt_seq"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.9073486328125e-05, -2.288818359375e-05, -17.617860794067383, -8.791396141052246], "choice_history": [93, 145, 230, 109, 109]}], "index": 60}
{"beams": [{"inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n", "score": -0.48739253289726747, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Leokk", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"hole0": "MinionSelector", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -7.62939453125e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.0001610402687219903, -7.62939453125e-06, -9.5367431640625e-06, -8.392333984375e-05, -5.7220458984375e-06, -2.288818359375e-05, -4.410743713378906e-06, -4.38690185546875e-05, -3.814697265625e-06, -6.866455078125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0002918243408203125, -3.814697265625e-06, -0.45973682403564453, -7.05718994140625e-05, -1.33514404296875e-05, -5.960446742392378e-06, -2.861022494471399e-06, -0.0002574920654296875, -1.9073486328125e-06, 0.0, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.00010478496551513672, 0.0, -6.29425048828125e-05, -0.0008335113525390625, 0.0, -4.76837158203125e-05, -1.52587890625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.09808349609375e-05, 0.0, -0.0007039308547973633, -3.814697265625e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-05, -1.9073486328125e-06, -0.0002956390380859375, -2.6702880859375e-05, -8.7738037109375e-05, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -0.001468658447265625, 0.0, -0.0001468658447265625, -6.103515625e-05, -3.0517578125e-05, -6.4849853515625e-05, -3.24249267578125e-05, -0.0001316070556640625, -1.52587890625e-05, -0.0001316070556640625, -0.000118255615234375, -0.0002002716064453125, -1.9073486328125e-06, -0.0011503692949190736, 0.0, -9.918212890625e-05, -9.5367431640625e-06, -0.0013790130615234375, -6.4849853515625e-05, -9.5367431640625e-06, -0.001026153564453125, -0.0002689361572265625, -7.62939453125e-06, -2.6702880859375e-05, -0.0007190704345703125, -0.000110626220703125, -1.9073486328125e-05, -0.00719451904296875, -0.0002288818359375, -0.006158947944641113, -5.257129669189453e-05, 0.0, -0.0031833648681640625, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Leokk", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Leokk", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 76, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 87, 193, "Minion", "Selector", "<EOS>", 71, 109]}, {"inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n", "score": -1.0290441386601898, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Leokk", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"hole0": "MinionSelector", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -7.62939453125e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.0001610402687219903, -7.62939453125e-06, -9.5367431640625e-06, -8.392333984375e-05, -5.7220458984375e-06, -2.288818359375e-05, -4.410743713378906e-06, -4.38690185546875e-05, -3.814697265625e-06, -6.866455078125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0002918243408203125, -3.814697265625e-06, -1.0004472732543945, -6.103515625e-05, -1.33514404296875e-05, -1.4305113609225373e-06, -8.094310760498047e-05, -0.00113677978515625, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001087188720703125, -1.1920928244535389e-07, -0.0002841949462890625, 0.0, -0.0004215240478515625, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, -0.0001888275146484375, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -0.0006886720657348633, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.24249267578125e-05, -0.000141143798828125, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.0024261474609375, 0.0, -2.288818359375e-05, -0.000225067138671875, -2.09808349609375e-05, -8.20159912109375e-05, -0.0002498626708984375, -0.0001087188720703125, -1.9073486328125e-05, -8.7738037109375e-05, -0.0001354217529296875, -0.0001583099365234375, -1.9073486328125e-06, -0.0013191692996770144, 0.0, -9.1552734375e-05, -5.7220458984375e-06, -0.0014247894287109375, -7.82012939453125e-05, -9.5367431640625e-06, -0.001026153564453125, -0.00032806396484375, -9.5367431640625e-06, -2.6702880859375e-05, -0.000698089599609375, -0.000118255615234375, -1.9073486328125e-05, -0.0070171356201171875, -0.000247955322265625, -0.005505203735083342, -5.459785461425781e-05, 0.0, -0.0029296875, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Leokk", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Leokk", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 76, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 87, 193, "Minion", "Selector", "<EOS>", 71, 109]}, {"inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.BEAST)))])\n", "score": -5.5234888655284, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Leokk", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -7.62939453125e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.0001610402687219903, -7.62939453125e-06, -9.5367431640625e-06, -8.392333984375e-05, -5.7220458984375e-06, -2.288818359375e-05, -4.410743713378906e-06, -4.38690185546875e-05, -3.814697265625e-06, -6.866455078125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0002918243408203125, -3.814697265625e-06, -0.45973682403564453, -7.05718994140625e-05, -1.33514404296875e-05, -5.960446742392378e-06, -2.861022494471399e-06, -0.0002574920654296875, -1.9073486328125e-06, 0.0, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.00010478496551513672, 0.0, -6.29425048828125e-05, -0.0008335113525390625, 0.0, -4.76837158203125e-05, -1.52587890625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.09808349609375e-05, 0.0, -0.0007039308547973633, -3.814697265625e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-05, -1.9073486328125e-06, -0.0002956390380859375, -2.6702880859375e-05, -8.7738037109375e-05, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -0.001468658447265625, 0.0, -0.0001468658447265625, -6.103515625e-05, -3.0517578125e-05, -6.4849853515625e-05, -3.24249267578125e-05, -0.0001316070556640625, -1.52587890625e-05, -0.0001316070556640625, -0.000118255615234375, -0.0002002716064453125, -1.9073486328125e-06, -0.0011503692949190736, 0.0, -9.918212890625e-05, -9.5367431640625e-06, -0.0013790130615234375, -6.4849853515625e-05, -9.5367431640625e-06, -0.001026153564453125, -0.0002689361572265625, -7.62939453125e-06, -2.6702880859375e-05, -0.0007190704345703125, -0.000110626220703125, -1.9073486328125e-05, -4.9390411376953125, -0.0027637481689453125, -0.0038328170776367188, -2.288818359375e-05, -0.031505584716796875, -0.002582550048828125, -0.005222320556640625, -2.09808349609375e-05, -0.00525665283203125, -0.00017547607421875, -0.05657386779785156, -7.62939453125e-06, -7.378872396657243e-05, -0.00018930435180664062, -0.005184292793273926, -9.5367431640625e-06, -0.000453948974609375, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Leokk", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Leokk", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 76, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 58, 123, 38, 216, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 109]}, {"inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.BEAST)))])\n", "score": -6.092671260666627, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Leokk", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -7.62939453125e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.0001610402687219903, -7.62939453125e-06, -9.5367431640625e-06, -8.392333984375e-05, -5.7220458984375e-06, -2.288818359375e-05, -4.410743713378906e-06, -4.38690185546875e-05, -3.814697265625e-06, -6.866455078125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0002918243408203125, -3.814697265625e-06, -1.0004472732543945, -6.103515625e-05, -1.33514404296875e-05, -1.4305113609225373e-06, -8.094310760498047e-05, -0.00113677978515625, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001087188720703125, -1.1920928244535389e-07, -0.0002841949462890625, 0.0, -0.0004215240478515625, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, -0.0001888275146484375, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -0.0006886720657348633, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.24249267578125e-05, -0.000141143798828125, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.0024261474609375, 0.0, -2.288818359375e-05, -0.000225067138671875, -2.09808349609375e-05, -8.20159912109375e-05, -0.0002498626708984375, -0.0001087188720703125, -1.9073486328125e-05, -8.7738037109375e-05, -0.0001354217529296875, -0.0001583099365234375, -1.9073486328125e-06, -0.0013191692996770144, 0.0, -9.1552734375e-05, -5.7220458984375e-06, -0.0014247894287109375, -7.82012939453125e-05, -9.5367431640625e-06, -0.001026153564453125, -0.00032806396484375, -9.5367431640625e-06, -2.6702880859375e-05, -0.000698089599609375, -0.000118255615234375, -1.9073486328125e-05, -4.964001655578613, -0.0028839111328125, -0.004086494445800781, -2.288818359375e-05, -0.029750823974609375, -0.0030536651611328125, -0.0052051544189453125, -2.09808349609375e-05, -0.00499725341796875, -0.0001926422119140625, -0.059418678283691406, -7.62939453125e-06, -8.106002496788278e-05, -0.0001856088638305664, -0.0050116777420043945, -9.5367431640625e-06, -0.000453948974609375, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Leokk", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Leokk", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 76, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 58, 123, 38, 216, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 71, 109]}, {"inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), TargetSelector())])\n", "score": -6.164104330606044, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Leokk", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"hole0": "TargetSelector", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -7.62939453125e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.0001610402687219903, -7.62939453125e-06, -9.5367431640625e-06, -8.392333984375e-05, -5.7220458984375e-06, -2.288818359375e-05, -4.410743713378906e-06, -4.38690185546875e-05, -3.814697265625e-06, -6.866455078125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0002918243408203125, -3.814697265625e-06, -0.45973682403564453, -7.05718994140625e-05, -1.33514404296875e-05, -5.960446742392378e-06, -2.861022494471399e-06, -0.0002574920654296875, -1.9073486328125e-06, 0.0, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.00010478496551513672, 0.0, -6.29425048828125e-05, -0.0008335113525390625, 0.0, -4.76837158203125e-05, -1.52587890625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.09808349609375e-05, 0.0, -0.0007039308547973633, -3.814697265625e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-05, -1.9073486328125e-06, -0.0002956390380859375, -2.6702880859375e-05, -8.7738037109375e-05, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -0.001468658447265625, 0.0, -0.0001468658447265625, -6.103515625e-05, -3.0517578125e-05, -6.4849853515625e-05, -3.24249267578125e-05, -0.0001316070556640625, -1.52587890625e-05, -0.0001316070556640625, -0.000118255615234375, -0.0002002716064453125, -1.9073486328125e-06, -0.0011503692949190736, 0.0, -9.918212890625e-05, -9.5367431640625e-06, -0.0013790130615234375, -6.4849853515625e-05, -9.5367431640625e-06, -0.001026153564453125, -0.0002689361572265625, -7.62939453125e-06, -2.6702880859375e-05, -0.0007190704345703125, -0.000110626220703125, -1.9073486328125e-05, -0.00719451904296875, -0.0002288818359375, -5.682075023651123, -3.0040735509828664e-05, 0.0, -0.0040035247802734375, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Leokk", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Leokk", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 76, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 87, 193, "Target", "Selector", "<EOS>", 71, 109]}, {"inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector()), -1]\n            )\n", "score": -6.52627383477715, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Leokk", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"hole0": "MinionSelector", "_type": "Template5"}], "_type": "Call"}, {"_type": "UnaryOp", "operand": {"_type": "Template14"}, "op": {"_type": "USub"}}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -7.62939453125e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.0001610402687219903, -7.62939453125e-06, -9.5367431640625e-06, -8.392333984375e-05, -5.7220458984375e-06, -2.288818359375e-05, -4.410743713378906e-06, -4.38690185546875e-05, -3.814697265625e-06, -6.866455078125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0002918243408203125, -3.814697265625e-06, -0.45973682403564453, -7.05718994140625e-05, -1.33514404296875e-05, -5.960446742392378e-06, -2.861022494471399e-06, -0.0002574920654296875, -1.9073486328125e-06, 0.0, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.00010478496551513672, 0.0, -6.29425048828125e-05, -0.0008335113525390625, 0.0, -4.76837158203125e-05, -1.52587890625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.09808349609375e-05, 0.0, -0.0007039308547973633, -3.814697265625e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-05, -1.9073486328125e-06, -0.0002956390380859375, -2.6702880859375e-05, -8.7738037109375e-05, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -0.001468658447265625, 0.0, -0.0001468658447265625, -6.103515625e-05, -3.0517578125e-05, -6.4849853515625e-05, -3.24249267578125e-05, -0.0001316070556640625, -1.52587890625e-05, -0.0001316070556640625, -0.000118255615234375, -0.0002002716064453125, -1.9073486328125e-06, -0.0011503692949190736, 0.0, -9.918212890625e-05, -9.5367431640625e-06, -0.0013790130615234375, -6.4849853515625e-05, -9.5367431640625e-06, -0.001026153564453125, -0.0002689361572265625, -7.62939453125e-06, -2.6702880859375e-05, -0.0007190704345703125, -0.000110626220703125, -1.9073486328125e-05, -0.00719451904296875, -0.0002288818359375, -0.006158947944641113, -5.257129669189453e-05, 0.0, -5.980594635009766, -6.67572021484375e-05, -0.05999755859375, -0.0011119842529296875, -0.0002994537353515625], "choice_history": [93, 145, 230, 101, 125, "Leokk", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Leokk", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 76, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 87, 193, "Minion", "Selector", "<EOS>", 92, 200, 112, 28, 109]}, {"inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), TargetSelector())])\n", "score": -6.832216608257674, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Leokk", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"hole0": "TargetSelector", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -7.62939453125e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.0001610402687219903, -7.62939453125e-06, -9.5367431640625e-06, -8.392333984375e-05, -5.7220458984375e-06, -2.288818359375e-05, -4.410743713378906e-06, -4.38690185546875e-05, -3.814697265625e-06, -6.866455078125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0002918243408203125, -3.814697265625e-06, -1.0004472732543945, -6.103515625e-05, -1.33514404296875e-05, -1.4305113609225373e-06, -8.094310760498047e-05, -0.00113677978515625, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001087188720703125, -1.1920928244535389e-07, -0.0002841949462890625, 0.0, -0.0004215240478515625, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, -0.0001888275146484375, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -0.0006886720657348633, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.24249267578125e-05, -0.000141143798828125, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.0024261474609375, 0.0, -2.288818359375e-05, -0.000225067138671875, -2.09808349609375e-05, -8.20159912109375e-05, -0.0002498626708984375, -0.0001087188720703125, -1.9073486328125e-05, -8.7738037109375e-05, -0.0001354217529296875, -0.0001583099365234375, -1.9073486328125e-06, -0.0013191692996770144, 0.0, -9.1552734375e-05, -5.7220458984375e-06, -0.0014247894287109375, -7.82012939453125e-05, -9.5367431640625e-06, -0.001026153564453125, -0.00032806396484375, -9.5367431640625e-06, -2.6702880859375e-05, -0.000698089599609375, -0.000118255615234375, -1.9073486328125e-05, -0.0070171356201171875, -0.000247955322265625, -5.807878017425537, -3.0279152269940823e-05, 0.0, -0.0037555694580078125, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Leokk", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Leokk", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 76, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 87, 193, "Target", "Selector", "<EOS>", 71, 109]}, {"inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector()), -1]\n            )\n", "score": -7.157637583484409, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Leokk", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"hole0": "MinionSelector", "_type": "Template5"}], "_type": "Call"}, {"_type": "UnaryOp", "operand": {"_type": "Template14"}, "op": {"_type": "USub"}}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -7.62939453125e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.0001610402687219903, -7.62939453125e-06, -9.5367431640625e-06, -8.392333984375e-05, -5.7220458984375e-06, -2.288818359375e-05, -4.410743713378906e-06, -4.38690185546875e-05, -3.814697265625e-06, -6.866455078125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0002918243408203125, -3.814697265625e-06, -1.0004472732543945, -6.103515625e-05, -1.33514404296875e-05, -1.4305113609225373e-06, -8.094310760498047e-05, -0.00113677978515625, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001087188720703125, -1.1920928244535389e-07, -0.0002841949462890625, 0.0, -0.0004215240478515625, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, -0.0001888275146484375, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -0.0006886720657348633, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.24249267578125e-05, -0.000141143798828125, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.0024261474609375, 0.0, -2.288818359375e-05, -0.000225067138671875, -2.09808349609375e-05, -8.20159912109375e-05, -0.0002498626708984375, -0.0001087188720703125, -1.9073486328125e-05, -8.7738037109375e-05, -0.0001354217529296875, -0.0001583099365234375, -1.9073486328125e-06, -0.0013191692996770144, 0.0, -9.1552734375e-05, -5.7220458984375e-06, -0.0014247894287109375, -7.82012939453125e-05, -9.5367431640625e-06, -0.001026153564453125, -0.00032806396484375, -9.5367431640625e-06, -2.6702880859375e-05, -0.000698089599609375, -0.000118255615234375, -1.9073486328125e-05, -0.0070171356201171875, -0.000247955322265625, -0.005505203735083342, -5.459785461425781e-05, 0.0, -6.066824913024902, -6.67572021484375e-05, -0.0632009506225586, -0.0011615753173828125, -0.000274658203125], "choice_history": [93, 145, 230, 101, 125, "Leokk", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Leokk", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 76, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 87, 193, "Minion", "Selector", "<EOS>", 92, 200, 112, 28, 109]}, {"inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n", "score": -7.227674472421874, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Leokk", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"hole0": "MinionSelector", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -7.62939453125e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.0001610402687219903, -7.62939453125e-06, -9.5367431640625e-06, -8.392333984375e-05, -5.7220458984375e-06, -2.288818359375e-05, -4.410743713378906e-06, -4.38690185546875e-05, -3.814697265625e-06, -6.866455078125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0002918243408203125, -3.814697265625e-06, -1.0004472732543945, -6.103515625e-05, -1.33514404296875e-05, -1.4305113609225373e-06, -8.094310760498047e-05, -0.00113677978515625, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001087188720703125, -1.1920928244535389e-07, -0.0002841949462890625, 0.0, -0.0004215240478515625, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, -0.0001888275146484375, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -0.0006886720657348633, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.24249267578125e-05, -0.000141143798828125, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -6.199582099914551, -3.814697265625e-06, -1.1444091796875e-05, -0.000530242919921875, -3.814697265625e-06, -0.0005207061767578125, -0.000247955322265625, -0.0001678466796875, -7.62939453125e-06, -9.34600830078125e-05, -0.000194549560546875, -0.0001468658447265625, -3.814697265625e-06, -0.0015290972078219056, 0.0, -8.96453857421875e-05, -5.7220458984375e-06, -0.001308441162109375, -8.58306884765625e-05, -9.5367431640625e-06, -0.00087738037109375, -0.000324249267578125, -9.5367431640625e-06, -2.6702880859375e-05, -0.0006866455078125, -0.0001201629638671875, -1.9073486328125e-05, -0.00768280029296875, -0.0002593994140625, -0.005413532257080078, -5.459785461425781e-05, 0.0, -0.0030612945556640625, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Leokk", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Leokk", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "p", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 76, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 87, 193, "Minion", "Selector", "<EOS>", 71, 109]}, {"inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n", "score": -7.384228337115694, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Leokk", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"hole0": "MinionSelector", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -7.62939453125e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.0001610402687219903, -7.62939453125e-06, -9.5367431640625e-06, -8.392333984375e-05, -5.7220458984375e-06, -2.288818359375e-05, -4.410743713378906e-06, -4.38690185546875e-05, -3.814697265625e-06, -6.866455078125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0002918243408203125, -3.814697265625e-06, -0.45973682403564453, -7.05718994140625e-05, -1.33514404296875e-05, -5.960446742392378e-06, -2.861022494471399e-06, -0.0002574920654296875, -1.9073486328125e-06, 0.0, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.00010478496551513672, 0.0, -6.29425048828125e-05, -0.0008335113525390625, 0.0, -4.76837158203125e-05, -1.52587890625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.09808349609375e-05, 0.0, -0.0007039308547973633, -3.814697265625e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-05, -1.9073486328125e-06, -0.0002956390380859375, -2.6702880859375e-05, -8.7738037109375e-05, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -6.89763069152832, -5.7220458984375e-06, -5.7220458984375e-05, -8.0108642578125e-05, -9.5367431640625e-06, -0.00041961669921875, -4.1961669921875e-05, -0.0002040863037109375, -7.62939453125e-06, -0.0002536773681640625, -0.00019073486328125, -0.000152587890625, -3.814697265625e-06, -0.0013549326686188579, 0.0, -8.58306884765625e-05, -9.5367431640625e-06, -0.0012874603271484375, -7.62939453125e-05, -1.1444091796875e-05, -0.0008449554443359375, -0.0002574920654296875, -7.62939453125e-06, -2.6702880859375e-05, -0.00072479248046875, -0.0001087188720703125, -1.9073486328125e-05, -0.007556915283203125, -0.000213623046875, -0.006015896797180176, -5.257129669189453e-05, 0.0, -0.0032367706298828125, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Leokk", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Leokk", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "p", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 76, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 87, 193, "Minion", "Selector", "<EOS>", 71, 109]}, {"inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), Adjacent())])\n", "score": -7.754822123122487, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Leokk", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template36"}, "args": [{"func": {"_type": "Template29"}, "args": [{"_type": "Template14"}], "_type": "Call"}, {"hole0": "Adjacent", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "auras"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -7.62939453125e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.0001610402687219903, -7.62939453125e-06, -9.5367431640625e-06, -8.392333984375e-05, -5.7220458984375e-06, -2.288818359375e-05, -4.410743713378906e-06, -4.38690185546875e-05, -3.814697265625e-06, -6.866455078125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0002918243408203125, -3.814697265625e-06, -0.45973682403564453, -7.05718994140625e-05, -1.33514404296875e-05, -5.960446742392378e-06, -2.861022494471399e-06, -0.0002574920654296875, -1.9073486328125e-06, 0.0, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.00010478496551513672, 0.0, -6.29425048828125e-05, -0.0008335113525390625, 0.0, -4.76837158203125e-05, -1.52587890625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.09808349609375e-05, 0.0, -0.0007039308547973633, -3.814697265625e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-05, -1.9073486328125e-06, -0.0002956390380859375, -2.6702880859375e-05, -8.7738037109375e-05, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -0.001468658447265625, 0.0, -0.0001468658447265625, -6.103515625e-05, -3.0517578125e-05, -6.4849853515625e-05, -3.24249267578125e-05, -0.0001316070556640625, -1.52587890625e-05, -0.0001316070556640625, -0.000118255615234375, -0.0002002716064453125, -1.9073486328125e-06, -0.0011503692949190736, 0.0, -9.918212890625e-05, -9.5367431640625e-06, -0.0013790130615234375, -6.4849853515625e-05, -9.5367431640625e-06, -0.001026153564453125, -0.0002689361572265625, -7.62939453125e-06, -2.6702880859375e-05, -0.0007190704345703125, -0.000110626220703125, -1.9073486328125e-05, -0.00719451904296875, -0.0002288818359375, -7.054559230804443, -0.2221240997314453, -0.000141143798828125, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Leokk", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Leokk", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 76, 224, 205, "auras", "<EOS>", 21, 141, 217, 58, 123, 47, 217, 58, 123, 40, 216, 70, 87, 193, "Adjacent", "<EOS>", 71, 109]}, {"inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, taunt=True)\n", "score": -8.587612140563316, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "Leokk", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template16"}, {"attr": "HUNTER", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "BEAST", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template12"}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -7.62939453125e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.0001610402687219903, -7.62939453125e-06, -9.5367431640625e-06, -8.392333984375e-05, -5.7220458984375e-06, -2.288818359375e-05, -4.410743713378906e-06, -4.38690185546875e-05, -3.814697265625e-06, -6.866455078125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0002918243408203125, -3.814697265625e-06, -0.45973682403564453, -7.05718994140625e-05, -1.33514404296875e-05, -5.960446742392378e-06, -2.861022494471399e-06, -0.0002574920654296875, -1.9073486328125e-06, 0.0, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.00010478496551513672, 0.0, -6.29425048828125e-05, -0.0008335113525390625, 0.0, -4.76837158203125e-05, -1.52587890625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.09808349609375e-05, 0.0, -0.0007039308547973633, -3.814697265625e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-05, -1.9073486328125e-06, -0.0002956390380859375, -2.6702880859375e-05, -8.7738037109375e-05, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -0.001468658447265625, 0.0, -0.0001468658447265625, -6.103515625e-05, -3.0517578125e-05, -6.4849853515625e-05, -3.24249267578125e-05, -0.0001316070556640625, -1.52587890625e-05, -0.0001316070556640625, -0.000118255615234375, -0.0002002716064453125, -1.9073486328125e-06, -8.078849792480469, -5.841255187988281e-06, -0.04273223876953125, -0.0003147125244140625, -2.956386742880568e-05, -2.3841855067985307e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Leokk", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Leokk", "<EOS>", 72, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 69, 76, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "", "score": -16.66446876525879, "model_output": {"_type": "Module", "body": [{"_type": "Template13_stmt_seq"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -13.924508094787598, -2.739903450012207], "choice_history": [93, 145, 230, 109, 109]}, {"inferred_code": "super().use(player, game)\n", "score": -18.51671600341797, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -15.856779098510742, -2.659879684448242], "choice_history": [93, 145, 230, 108, 109]}, {"inferred_code": "", "score": -19.08099937438965, "model_output": {"_type": "Module", "body": []}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -19.080989837646484], "choice_history": [93, 145, 228]}], "index": 61}
{"beams": [{"inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "score": -0.02919351485616062, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template39"}], "_type": "ClassDef", "name": "<UNK>Justice", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "<UNK> Justice"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Template14"}, {"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -4.57763671875e-05, -1.1444091796875e-05, -0.0019252722850069404, -5.245071224635467e-05, 0.0, -5.7220458984375e-06, -0.0003070831298828125, -0.0033588409423828125, -3.62396240234375e-05, 0.0, -2.1457672119140625e-06, 0.0, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.0052318572998046875, -7.62939453125e-06, -0.0004520416259765625, -1.33514404296875e-05, -7.62939453125e-06, -0.0009543859050609171, -3.075599670410156e-05, -4.172325134277344e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.0003758668899536133, -5.7220458984375e-06, 0.0, 0.0, 0.0, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0002307891845703125, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00276947021484375, 0.0, -6.67572021484375e-05, 0.0, -0.0002269744873046875, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -9.655952453613281e-06, 0.0, -1.9073486328125e-06, -0.0002422332763671875, -1.33514404296875e-05, -7.2479248046875e-05, -0.00366973876953125, -4.9591064453125e-05, -5.7220458984375e-05, -0.0064240265637636185, -3.993504651589319e-05, -1.9073486328125e-06, -0.0005283355712890625, -0.0017986297607421875, 0.0], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Justice", "<EOS>", 216, 86, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "<UNK>", " ", "Justice", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "create_weapon", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 123, 23, 146, "Weapon", "<EOS>", 217, 70, 76, 109]}, {"inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Deathrattle(1, 4)\n", "score": -5.584173238337826, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template39"}], "_type": "ClassDef", "name": "<UNK>Justice", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "<UNK> Justice"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"func": {"id": "Deathrattle", "_type": "Name"}, "args": [{"_type": "Template14"}, {"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -4.57763671875e-05, -1.1444091796875e-05, -0.0019252722850069404, -5.245071224635467e-05, 0.0, -5.7220458984375e-06, -0.0003070831298828125, -0.0033588409423828125, -3.62396240234375e-05, 0.0, -2.1457672119140625e-06, 0.0, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.0052318572998046875, -7.62939453125e-06, -0.0004520416259765625, -1.33514404296875e-05, -7.62939453125e-06, -0.0009543859050609171, -3.075599670410156e-05, -4.172325134277344e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.0003758668899536133, -5.7220458984375e-06, 0.0, 0.0, 0.0, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0002307891845703125, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00276947021484375, 0.0, -6.67572021484375e-05, 0.0, -0.0002269744873046875, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -9.655952453613281e-06, 0.0, -1.9073486328125e-06, -0.0002422332763671875, -1.33514404296875e-05, -7.2479248046875e-05, -0.00366973876953125, -4.9591064453125e-05, -5.7220458984375e-05, -5.5586137771606445, -5.280832192511298e-05, -5.7220458984375e-06, -0.000316619873046875, -0.00478363037109375, 0.0], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Justice", "<EOS>", 216, 86, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "<UNK>", " ", "Justice", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "create_weapon", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 123, 23, 146, "Deathrattle", "<EOS>", 217, 70, 76, 109]}, {"inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Weapon(1, 4)\n", "score": -6.3401157775915635, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template39"}], "_type": "ClassDef", "name": "<UNK>Justice", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "<UNK> Justice"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Template14"}, {"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -4.57763671875e-05, -1.1444091796875e-05, -0.0019252722850069404, -5.245071224635467e-05, 0.0, -5.7220458984375e-06, -0.0003070831298828125, -0.0033588409423828125, -3.62396240234375e-05, 0.0, -2.1457672119140625e-06, 0.0, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.0052318572998046875, -7.62939453125e-06, -0.0004520416259765625, -1.33514404296875e-05, -7.62939453125e-06, -0.0009543859050609171, -3.075599670410156e-05, -4.172325134277344e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.0003758668899536133, -5.7220458984375e-06, 0.0, 0.0, 0.0, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0002307891845703125, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -6.313721656799316, 0.0, -3.814697265625e-06, 0.0, -0.0002727508544921875, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, -9.655952453613281e-06, 0.0, -1.9073486328125e-06, -0.0002002716064453125, -1.1444091796875e-05, -8.58306884765625e-05, -0.004070281982421875, -5.14984130859375e-05, -5.53131103515625e-05, -0.006082251202315092, -3.898138311342336e-05, -1.9073486328125e-06, -0.0005207061767578125, -0.00177001953125, 0.0], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Justice", "<EOS>", 216, 86, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "<UNK>", " ", "Justice", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 123, 23, 146, "Weapon", "<EOS>", 217, 70, 76, 109]}, {"inferred_code": "class LightJustice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "score": -6.523673962852627, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template39"}], "_type": "ClassDef", "name": "LightJustice", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "<UNK> Justice"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Template14"}, {"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -4.57763671875e-05, -1.1444091796875e-05, -6.28385591506958, -0.21046942472457886, 0.0, -5.7220458984375e-06, -0.0003108978271484375, -0.0059986114501953125, -4.00543212890625e-05, 0.0, -2.1457672119140625e-06, 0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -0.00255584716796875, -7.62939453125e-06, -0.0024566650390625, -1.52587890625e-05, -5.7220458984375e-06, -0.0009094859706237912, -3.075599670410156e-05, -4.172325134277344e-06, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.0003815889358520508, -5.7220458984375e-06, 0.0, 0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.000232696533203125, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.002986907958984375, 0.0, -5.7220458984375e-05, 0.0, -0.0002269744873046875, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -9.655952453613281e-06, 0.0, -1.9073486328125e-06, -0.000240325927734375, -1.33514404296875e-05, -7.43865966796875e-05, -0.003658294677734375, -4.76837158203125e-05, -5.7220458984375e-05, -0.0064215390011668205, -4.005425580544397e-05, -1.9073486328125e-06, -0.0005283355712890625, -0.001800537109375, 0.0], "choice_history": [93, 145, 230, 101, 125, "Light", "Justice", "<EOS>", 216, 86, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "<UNK>", " ", "Justice", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "create_weapon", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 123, 23, 146, "Weapon", "<EOS>", 217, 70, 76, 109]}, {"inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 2)\n", "score": -6.802701586755575, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template39"}], "_type": "ClassDef", "name": "<UNK>Justice", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "<UNK> Justice"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Template14"}, {"_type": "Template12"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -4.57763671875e-05, -1.1444091796875e-05, -0.0019252722850069404, -5.245071224635467e-05, 0.0, -5.7220458984375e-06, -0.0003070831298828125, -0.0033588409423828125, -3.62396240234375e-05, 0.0, -2.1457672119140625e-06, 0.0, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.0052318572998046875, -7.62939453125e-06, -0.0004520416259765625, -1.33514404296875e-05, -7.62939453125e-06, -0.0009543859050609171, -3.075599670410156e-05, -4.172325134277344e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.0003758668899536133, -5.7220458984375e-06, 0.0, 0.0, 0.0, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0002307891845703125, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00276947021484375, 0.0, -6.67572021484375e-05, 0.0, -0.0002269744873046875, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -9.655952453613281e-06, 0.0, -1.9073486328125e-06, -0.0002422332763671875, -1.33514404296875e-05, -7.2479248046875e-05, -0.00366973876953125, -4.9591064453125e-05, -5.7220458984375e-05, -0.0064240265637636185, -3.993504651589319e-05, -1.9073486328125e-06, -0.0005283355712890625, -6.775304794311523, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Justice", "<EOS>", 216, 86, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "<UNK>", " ", "Justice", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "create_weapon", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 123, 23, 146, "Weapon", "<EOS>", 217, 70, 69, 109]}, {"inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -7.004966541629869, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template39"}], "_type": "ClassDef", "name": "<UNK>Justice", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "<UNK> Justice"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Template14"}, {"_type": "Template20"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template24"}], "ops": [{"_type": "Lt"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -4.57763671875e-05, -1.1444091796875e-05, -0.0019252722850069404, -5.245071224635467e-05, 0.0, -5.7220458984375e-06, -0.0003070831298828125, -5.795574188232422, -0.000537872314453125, 0.0, -1.6570091247558594e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -0.0002346038818359375, -2.09808349609375e-05, -0.000728607177734375, -7.62939453125e-06, -9.5367431640625e-06, -0.0011156769469380379, -3.445148468017578e-05, -4.172325134277344e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.0003720521926879883, -5.7220458984375e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.000232696533203125, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.15143871307373047, 0.0, -0.000743865966796875, 0.0, -0.000377655029296875, -1.33514404296875e-05, 0.0, -1.71661376953125e-05, -5.841255187988281e-06, 0.0, 0.0, -0.0014781951904296875, -9.5367431640625e-06, -0.0002117156982421875, -0.0031909942626953125, -4.76837158203125e-05, -4.00543212890625e-05, -0.006688245106488466, -4.4226595491636544e-05, -1.9073486328125e-06, -0.000545501708984375, -0.0022563934326171875, -0.4530963897705078, -0.0008106231689453125, -0.004125118255615234, 0.0, -3.0517578125e-05, 0.0, -0.00476837158203125, -0.00032806396484375, 0.0, -3.0517578125e-05, -9.369850158691406e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002652406692504883, -4.768370445162873e-07, -0.006137847900390625, -0.0023412704467773438, -5.340576171875e-05, -0.2389516830444336, -0.0007915496826171875, -3.24249267578125e-05, -0.0006866455078125, -0.0021228790283203125, -1.71661376953125e-05, -0.0001964569091796875, -0.000186920166015625, -0.0008754730224609375, -0.00183868408203125, -0.0009334074566140771, -8.976459503173828e-05, -0.0005130767822265625, 0.0, -0.000179290771484375, -0.0001201629638671875, -0.001163482666015625, -1.9073486328125e-06, -0.004413247108459473, 0.0, -0.2875995635986328, -1.71661376953125e-05, -0.00266265869140625, -3.814697265625e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.007337212096899748, 0.0, -5.7220458984375e-06, -0.0022258758544921875, -9.5367431640625e-06, -0.0060138702392578125, -0.0025930404663085938, 0.0, -8.0108642578125e-05, -0.0002765655517578125, -2.47955322265625e-05, -0.0022735595703125, 0.0], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Justice", "<EOS>", 216, 86, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "<UNK>", " ", "Justice", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "create_weapon", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 123, 23, 146, "Weapon", "<EOS>", 217, 70, 76, 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 213, 12, 216, 79, 109]}, {"inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return auras(1, 4)\n", "score": -7.561555421540106, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template39"}], "_type": "ClassDef", "name": "<UNK>Justice", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "<UNK> Justice"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"func": {"id": "auras", "_type": "Name"}, "args": [{"_type": "Template14"}, {"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -4.57763671875e-05, -1.1444091796875e-05, -0.0019252722850069404, -5.245071224635467e-05, 0.0, -5.7220458984375e-06, -0.0003070831298828125, -0.0033588409423828125, -3.62396240234375e-05, 0.0, -2.1457672119140625e-06, 0.0, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.0052318572998046875, -7.62939453125e-06, -0.0004520416259765625, -1.33514404296875e-05, -7.62939453125e-06, -0.0009543859050609171, -3.075599670410156e-05, -4.172325134277344e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.0003758668899536133, -5.7220458984375e-06, 0.0, 0.0, 0.0, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0002307891845703125, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00276947021484375, 0.0, -6.67572021484375e-05, 0.0, -0.0002269744873046875, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -9.655952453613281e-06, 0.0, -1.9073486328125e-06, -0.0002422332763671875, -1.33514404296875e-05, -7.2479248046875e-05, -0.00366973876953125, -4.9591064453125e-05, -5.7220458984375e-05, -7.527758598327637, -0.0001744019245961681, -0.008817672729492188, -0.000186920166015625, -0.0042171478271484375, 0.0], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Justice", "<EOS>", 216, 86, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "<UNK>", " ", "Justice", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "create_weapon", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 123, 23, 146, "auras", "<EOS>", 217, 70, 76, 109]}, {"inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return range(1, 4)\n", "score": -7.563814557959631, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template39"}], "_type": "ClassDef", "name": "<UNK>Justice", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "<UNK> Justice"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Template14"}, {"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -4.57763671875e-05, -1.1444091796875e-05, -0.0019252722850069404, -5.245071224635467e-05, 0.0, -5.7220458984375e-06, -0.0003070831298828125, -0.0033588409423828125, -3.62396240234375e-05, 0.0, -2.1457672119140625e-06, 0.0, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.0052318572998046875, -7.62939453125e-06, -0.0004520416259765625, -1.33514404296875e-05, -7.62939453125e-06, -0.0009543859050609171, -3.075599670410156e-05, -4.172325134277344e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.0003758668899536133, -5.7220458984375e-06, 0.0, 0.0, 0.0, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0002307891845703125, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00276947021484375, 0.0, -6.67572021484375e-05, 0.0, -0.0002269744873046875, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -9.655952453613281e-06, 0.0, -1.9073486328125e-06, -0.0002422332763671875, -1.33514404296875e-05, -7.2479248046875e-05, -0.00366973876953125, -4.9591064453125e-05, -5.7220458984375e-05, -7.540588855743408, -1.549711487314198e-05, -5.7220458984375e-06, -0.000156402587890625, -0.00264739990234375, 0.0], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Justice", "<EOS>", 216, 86, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "<UNK>", " ", "Justice", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "create_weapon", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 123, 23, 146, "range", "<EOS>", 217, 70, 76, 109]}, {"inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Light Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "score": -7.638252942661893, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template39"}], "_type": "ClassDef", "name": "<UNK>Justice", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Light Justice"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Template14"}, {"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -4.57763671875e-05, -1.1444091796875e-05, -0.0019252722850069404, -5.245071224635467e-05, 0.0, -5.7220458984375e-06, -0.0003070831298828125, -0.0033588409423828125, -3.62396240234375e-05, 0.0, -2.1457672119140625e-06, 0.0, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.0052318572998046875, -7.62939453125e-06, -0.0004520416259765625, -1.33514404296875e-05, -7.62939453125e-06, -7.609828472137451, -8.96453857421875e-05, -9.059905096364673e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.00035691261291503906, -5.7220458984375e-06, 0.0, 0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.000225067138671875, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.002880096435546875, 0.0, -6.103515625e-05, 0.0, -0.0002269744873046875, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -9.655952453613281e-06, 0.0, -1.9073486328125e-06, -0.0002422332763671875, -1.33514404296875e-05, -7.43865966796875e-05, -0.0036602020263671875, -4.9591064453125e-05, -5.7220458984375e-05, -0.0064653633162379265, -3.993504651589319e-05, -1.9073486328125e-06, -0.000530242919921875, -0.0018024444580078125, 0.0], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Justice", "<EOS>", 216, 86, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Light", " ", "Justice", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "create_weapon", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 123, 23, 146, "Weapon", "<EOS>", 217, 70, 76, 109]}, {"inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = hearthbreaker.targeting.find_minion_spell_target(game, lambda\n            x: True)\n        target = game.random_choice(targets)\n        target.change_attack(4)\n", "score": -10.314554168627105, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template39"}], "_type": "ClassDef", "name": "<UNK>Justice", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "<UNK> Justice"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "args": [{"id": "game", "_type": "Name"}, {"args": {"args": [{"_type": "arg", "arg": "x"}], "_type": "arguments"}, "_type": "Lambda", "body": {"_type": "NameConstant", "value": true}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Assign", "value": {"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "targets", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "target", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "change_attack", "_type": "Attribute", "value": {"id": "target", "_type": "Name"}}, "args": [{"_type": "Template20"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -4.57763671875e-05, -1.1444091796875e-05, -0.0019252722850069404, -5.245071224635467e-05, 0.0, -5.7220458984375e-06, -0.0003070831298828125, -0.0033588409423828125, -3.62396240234375e-05, 0.0, -2.1457672119140625e-06, 0.0, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -5.261928558349609, -0.00022125244140625, -0.03663825988769531, -1.9073486328125e-06, -2.86102294921875e-05, -0.00039528938941657543, -5.543231964111328e-05, -4.5299530029296875e-06, 0.0, -0.0003414154052734375, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.000385284423828125, -3.814697265625e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.0002307891845703125, 0.0, -0.0020618438720703125, 0.0, -0.33656787872314453, 0.0, -2.47955322265625e-05, -0.0035953521728515625, -0.000354766845703125, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.9282703399658203, 0.0, -0.012865066528320312, -1.1444091796875e-05, -0.005357146263122559, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.04634380340576172, 0.0, -1.71661376953125e-05, 0.0, -0.001316070556640625, -9.34600830078125e-05, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -0.00010693073272705078, -3.576278118089249e-07, -0.6559076309204102, -0.0001888275146484375, -0.2682533264160156, -1.1444091796875e-05, -6.4849853515625e-05, -2.09808349609375e-05, -0.003528594970703125, -0.931552529335022, -1.1920928244535389e-07, -0.007391929626464844, -0.004489898681640625, -5.7220458984375e-06, -1.1444091796875e-05, -0.054909706115722656, -1.9073486328125e-06, -0.021841049194335938, -1.9073486328125e-05, -0.022565007209777832, 0.0, -0.0015702247619628906, -3.814697265625e-06, -0.24651801586151123, -6.4373016357421875e-06, -0.0003986358642578125, -0.0053462982177734375, -6.4849853515625e-05, -0.01303863525390625, -1.1920928244535389e-07, -0.02294921875, -0.5098676681518555, -7.62939453125e-06, -1.9073486328125e-05, -0.0001010894775390625, -0.006439208984375, -3.62396240234375e-05, -0.08661210536956787, -4.6133995056152344e-05, -0.12444019317626953, -0.0016231536865234375, -0.0034861380700021982, -1.5020257706055418e-05, -0.040556907653808594, -0.0001087188720703125, -0.00020599365234375, -9.34600830078125e-05, -0.0002613067626953125, -0.041231393814086914, -2.1457672119140625e-06, -0.022675514221191406, -9.5367431640625e-06, -4.9591064453125e-05, -0.0001850128173828125, -0.009958267211914062, -1.1444091796875e-05, -0.04525768756866455, 0.0, -0.003788471221923828, 0.0, -3.24249267578125e-05, -0.00034332275390625, -6.29425048828125e-05, -0.004900097846984863, 0.0, -0.0001163482666015625, -5.7220458984375e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.0001430511474609375, 0.0, -0.00099945068359375, 0.0, -0.0021094083786010742, -5.9604562920867465e-06, -0.30579954385757446, -1.1920928244535389e-07, -1.1444091796875e-05, -0.1991138458251953, -1.33514404296875e-05], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Justice", "<EOS>", 216, 86, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "<UNK>", " ", "Justice", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 232, 108, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 217, 63, 146, "game", "<EOS>", 60, 140, 3, 203, 209, 1, 202, "x", "<EOS>", 24, 147, "True", "<EOS>", 98, 115, 216, 63, 146, "target", "<EOS>", 18, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "targets", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "target", "<EOS>", "change_attack", "<EOS>", 216, 76, 109]}, {"inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and (len(game.random_choice(\n            targets)) > 0 or len(player.minions) < 7)\n", "score": -10.512590541707937, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template39"}], "_type": "ClassDef", "name": "<UNK>Justice", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "<UNK> Justice"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Template14"}, {"_type": "Template20"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"values": [{"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"func": {"attr": "random_choice", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "targets", "_type": "Name"}], "_type": "Call"}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template31"}], "ops": [{"_type": "Gt"}]}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template24"}], "ops": [{"_type": "Lt"}]}], "_type": "BoolOp", "op": {"_type": "Or"}}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -4.57763671875e-05, -1.1444091796875e-05, -0.0019252722850069404, -5.245071224635467e-05, 0.0, -5.7220458984375e-06, -0.0003070831298828125, -5.795574188232422, -0.000537872314453125, 0.0, -1.6570091247558594e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -0.0002346038818359375, -2.09808349609375e-05, -0.000728607177734375, -7.62939453125e-06, -9.5367431640625e-06, -0.0011156769469380379, -3.445148468017578e-05, -4.172325134277344e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.0003720521926879883, -5.7220458984375e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.000232696533203125, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.15143871307373047, 0.0, -0.000743865966796875, 0.0, -0.000377655029296875, -1.33514404296875e-05, 0.0, -1.71661376953125e-05, -5.841255187988281e-06, 0.0, 0.0, -0.0014781951904296875, -9.5367431640625e-06, -0.0002117156982421875, -0.0031909942626953125, -4.76837158203125e-05, -4.00543212890625e-05, -0.006688245106488466, -4.4226595491636544e-05, -1.9073486328125e-06, -0.000545501708984375, -0.0022563934326171875, -0.4530963897705078, -0.0008106231689453125, -0.004125118255615234, 0.0, -3.0517578125e-05, 0.0, -0.00476837158203125, -0.00032806396484375, 0.0, -3.0517578125e-05, -9.369850158691406e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002652406692504883, -4.768370445162873e-07, -0.006137847900390625, -0.0023412704467773438, -5.340576171875e-05, -0.2389516830444336, -0.0007915496826171875, -3.24249267578125e-05, -0.0006866455078125, -0.0021228790283203125, -1.71661376953125e-05, -0.0001964569091796875, -0.000186920166015625, -0.0008754730224609375, -0.00183868408203125, -0.0009334074566140771, -8.976459503173828e-05, -0.0005130767822265625, 0.0, -0.000179290771484375, -0.0001201629638671875, -0.001163482666015625, -1.9073486328125e-06, -0.004413247108459473, 0.0, -1.4513177871704102, -0.0020685195922851562, -0.016997337341308594, -2.6702880859375e-05, -0.0036306381225585938, -0.000202178955078125, -0.0038394927978515625, -9.5367431640625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0015328957233577967, 0.0, -1.9073486328125e-06, -1.3724536895751953, -7.43865966796875e-05, -0.03927326202392578, -1.9073486328125e-06, -0.29488468170166016, -7.62939453125e-06, -0.039585113525390625, 0.0, -0.06855010986328125, 0.0, -0.0002803802490234375, -0.05876636505126953, -1.33514404296875e-05, -0.043485045433044434, 0.0, -0.0002689361572265625, -0.32326221466064453, -3.24249267578125e-05, -0.00258636474609375, -0.03944206237792969, -5.7220458984375e-06, -6.866455078125e-05, -1.1444091796875e-05, -0.00019073486328125, -5.7220458984375e-06, -0.009532914496958256, 0.0, -7.62939453125e-06, -0.03332710266113281, -9.5367431640625e-06, -0.009008407592773438, -0.002840280532836914, 0.0, -5.53131103515625e-05, -0.000286102294921875, -2.288818359375e-05, -0.0008487701416015625, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Justice", "<EOS>", 216, 86, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "<UNK>", " ", "Justice", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "create_weapon", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 123, 23, 146, "Weapon", "<EOS>", 217, 70, 76, 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 57, 119, 5, 217, 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 58, 123, 15, 116, 23, 146, "game", "<EOS>", "random_choice", "<EOS>", 216, 63, 146, "targets", "<EOS>", 213, 7, 216, 83, 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 213, 12, 216, 79, 109]}, {"inferred_code": "super().use(player, game)\n", "score": -13.785988807678223, "model_output": {"_type": "Module", "body": [{"_type": "Template0"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -12.619806289672852, -1.1661596298217773], "choice_history": [93, 145, 230, 108, 109]}, {"inferred_code": "", "score": -14.884298324584961, "model_output": {"_type": "Module", "body": [{"_type": "Template13_stmt_seq"}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -11.863335609436035, -3.020939826965332], "choice_history": [93, 145, 230, 109, 109]}, {"inferred_code": "", "score": -20.59064292907715, "model_output": {"_type": "Module", "body": []}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -20.590633392333984], "choice_history": [93, 145, 228]}, {"inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and (len(player.minions) < 7 or\n            hearthbreaker.targeting.find_minion_spell_target(game, lambda x:\n            True) == option(Change(1, Count(MinionSelector(Weapon(),\n            BothPlayer())))))\n", "score": -21.675243221976295, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template39"}], "_type": "ClassDef", "name": "<UNK>Justice", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "<UNK> Justice"}, {"_type": "Template14"}, {"attr": "PALADIN", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Template14"}, {"_type": "Template20"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"values": [{"func": {"attr": "can_use", "_type": "Attribute", "value": {"hole0": "super", "_type": "Template5"}}, "args": [{"_type": "Template19"}, {"id": "game", "_type": "Name"}], "_type": "Call"}, {"values": [{"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"_type": "Template19"}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"_type": "Template24"}], "ops": [{"_type": "Lt"}]}, {"left": {"func": {"attr": "find_minion_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "args": [{"id": "game", "_type": "Name"}, {"args": {"args": [{"_type": "arg", "arg": "x"}], "_type": "arguments"}, "_type": "Lambda", "body": {"_type": "NameConstant", "value": true}}], "_type": "Call"}, "_type": "Compare", "comparators": [{"func": {"id": "option", "_type": "Name"}, "args": [{"func": {"id": "Change", "_type": "Name"}, "args": [{"_type": "Template14"}, {"func": {"id": "Count", "_type": "Name"}, "args": [{"func": {"_type": "Template26"}, "args": [{"hole0": "Weapon", "_type": "Template5"}, {"hole0": "BothPlayer", "_type": "Template5"}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}, {"func": {"id": "RandomPicker", "_type": "Name"}, "args": [{"_type": "Template16"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}], "ops": [{"_type": "Eq"}]}], "_type": "BoolOp", "op": {"_type": "Or"}}], "_type": "BoolOp", "op": {"_type": "And"}}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -4.57763671875e-05, -1.1444091796875e-05, -0.0019252722850069404, -5.245071224635467e-05, 0.0, -5.7220458984375e-06, -0.0003070831298828125, -5.795574188232422, -0.000537872314453125, 0.0, -1.6570091247558594e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -0.0002346038818359375, -2.09808349609375e-05, -0.000728607177734375, -7.62939453125e-06, -9.5367431640625e-06, -0.0011156769469380379, -3.445148468017578e-05, -4.172325134277344e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.0003720521926879883, -5.7220458984375e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.000232696533203125, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.15143871307373047, 0.0, -0.000743865966796875, 0.0, -0.000377655029296875, -1.33514404296875e-05, 0.0, -1.71661376953125e-05, -5.841255187988281e-06, 0.0, 0.0, -0.0014781951904296875, -9.5367431640625e-06, -0.0002117156982421875, -0.0031909942626953125, -4.76837158203125e-05, -4.00543212890625e-05, -0.006688245106488466, -4.4226595491636544e-05, -1.9073486328125e-06, -0.000545501708984375, -0.0022563934326171875, -0.4530963897705078, -0.0008106231689453125, -0.004125118255615234, 0.0, -3.0517578125e-05, 0.0, -0.00476837158203125, -0.00032806396484375, 0.0, -3.0517578125e-05, -9.369850158691406e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002652406692504883, -4.768370445162873e-07, -0.006137847900390625, -0.0023412704467773438, -5.340576171875e-05, -0.2389516830444336, -0.0007915496826171875, -3.24249267578125e-05, -0.0006866455078125, -0.0021228790283203125, -1.71661376953125e-05, -0.0001964569091796875, -0.000186920166015625, -0.0008754730224609375, -0.00183868408203125, -0.0009334074566140771, -8.976459503173828e-05, -0.0005130767822265625, 0.0, -0.000179290771484375, -0.0001201629638671875, -0.001163482666015625, -1.9073486328125e-06, -0.004413247108459473, 0.0, -1.4513177871704102, -0.0020685195922851562, -0.016997337341308594, -2.6702880859375e-05, -0.0036306381225585938, -0.000202178955078125, -0.0038394927978515625, -9.5367431640625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0015328957233577967, 0.0, -1.9073486328125e-06, -0.5535745620727539, -3.4332275390625e-05, -0.008533477783203125, -0.015079617500305176, 0.0, -3.0517578125e-05, -0.0014057159423828125, -1.71661376953125e-05, -0.002712249755859375, -0.0651845932006836, -9.5367431640625e-06, -5.14984130859375e-05, -1.1444091796875e-05, -0.10662078857421875, -1.9073486328125e-05, -0.054688453674316406, -9.1552734375e-05, -0.0005893707275390625, -0.0001926422119140625, -0.0011731386184692383, 0.0, -0.0005058050155639648, -1.52587890625e-05, -0.0450671911239624, -4.172325134277344e-06, -0.0001125335693359375, -0.005207061767578125, -8.0108642578125e-05, -0.0034513473510742188, -1.1920928244535389e-07, -0.027044296264648438, -0.07813644409179688, -2.86102294921875e-05, -9.5367431640625e-06, -7.43865966796875e-05, -0.010500907897949219, -2.47955322265625e-05, -0.11768472194671631, -6.914138793945312e-05, -0.22939777374267578, -0.000640869140625, -0.002957099350169301, -2.038458114839159e-05, -0.0006647109985351562, -0.9731111526489258, -0.7854728698730469, -0.2743511199951172, -0.0003204345703125, 0.0, -1.9073486328125e-06, -1.5321712493896484, -0.00022995471954345703, -0.0027828216552734375, -0.11544227600097656, -6.29425048828125e-05, -0.0007076263427734375, -9.5367431640625e-06, -0.20880424976348877, -0.2059614658355713, -0.4974822998046875, -0.6962528228759766, -0.24470233917236328, -3.4332275390625e-05, -0.6066169738769531, -3.814697265625e-06, -0.33272361755371094, -0.00027573108673095703, -3.24249267578125e-05, -0.0012111663818359375, -3.814697265625e-05, -0.023355484008789062, -0.3373680114746094, -0.5046253204345703, -1.33514404296875e-05, -0.8842138051986694, -0.11744842678308487, -0.003082275390625, 0.0, -0.458034873008728, -0.0003686785348691046, -0.000102996826171875, -0.00307464599609375, -0.43039703369140625, -0.6081218719482422, -2.6702880859375e-05, -1.5383787155151367, -0.001207590103149414, -1.9073486328125e-06, -0.0012569427490234375, -0.7528696060180664, -0.027375221252441406, 0.0], "choice_history": [93, 145, 230, 101, 125, "<UNK>", "Justice", "<EOS>", 216, 86, 231, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "<UNK>", " ", "Justice", "<EOS>", 70, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "create_weapon", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 123, 23, 146, "Weapon", "<EOS>", 217, 70, 76, 104, 130, "can_use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 229, 107, 153, 17, 119, 4, 217, 58, 123, 15, 116, 51, 193, "super", "<EOS>", "can_use", "<EOS>", 217, 75, 63, 146, "game", "<EOS>", 57, 119, 5, 217, 59, 126, 18, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 32, "minions", "<EOS>", 213, 12, 216, 79, 59, 126, 18, 123, 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 217, 63, 146, "game", "<EOS>", 60, 140, 3, 203, 209, 1, 202, "x", "<EOS>", 24, 147, "True", "<EOS>", 213, 6, 218, 58, 123, 23, 146, "option", "<EOS>", 216, 58, 123, 23, 146, "Change", "<EOS>", 217, 70, 58, 123, 23, 146, "Count", "<EOS>", 216, 58, 123, 38, 217, 87, 193, "Weapon", "<EOS>", 87, 193, "Both", "Player", "<EOS>", 58, 123, 23, 146, "Random", "Picker", "<EOS>", 216, 72, 71, 109]}], "index": 62}
{"beams": [{"inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, choices=[Choice(BearForm(), Transform(\n            Bearof()), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score": -1.5912340270924688, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "LordOfTheArena", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Template28"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"id": "Choice", "_type": "Name"}, "args": [{"hole0": "BearForm", "_type": "Template5"}, {"func": {"id": "Transform", "_type": "Name"}, "args": [{"hole0": "Bearof", "_type": "Template5"}], "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "choices"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 6, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-6.866455078125e-05, -3.4332275390625e-05, -0.000240325927734375, -6.4849853515625e-05, -0.0001068115234375, -9.417125693289563e-05, -0.0012705998960882425, -0.0021720007061958313, -4.5298955228645355e-05, -2.229196616099216e-05, -9.5367431640625e-06, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-06, 0.0, -2.741813204920618e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -6.29425048828125e-05, -0.0003719329833984375, -0.0001697540283203125, -0.006816864013671875, -3.814697265625e-06, -0.0001125335693359375, -3.814697265625e-05, -1.33514404296875e-05, -1.776205863279756e-05, -0.00015103394980542362, -0.00015174760483205318, -9.083739860216156e-05, -0.0015703439712524414, -0.0007153188926167786, -0.0005052063497714698, -9.5367431640625e-06, -0.0002918243408203125, -0.0004425048828125, -1.52587890625e-05, -0.0002651214599609375, 0.0, -0.2516145706176758, 0.0, -7.2479248046875e-05, -1.71661376953125e-05, -0.11340522766113281, -0.0001068115234375, -2.09808349609375e-05, -0.07386302947998047, -2.6702880859375e-05, -0.001247406005859375, -3.814697265625e-06, -0.000293731689453125, -0.0001659393310546875, -3.814697265625e-06, -0.7526521682739258, -0.015582328662276268, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.0002288818359375, -1.9073486328125e-06, -0.010091781616210938, -9.775159924174659e-06, -2.288818359375e-05, -0.0005702972412109375, 0.0, -0.17302154004573822, -0.13876284658908844, -0.00010930955613730475, -9.5367431640625e-06, -3.814697265625e-06, -0.014124035835266113, -4.649161837733118e-06, 0.0, -0.00560760498046875, -0.0009784698486328125, -2.86102294921875e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.1961669921875e-05, -2.288818359375e-05, -9.918212890625e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -0.019517898559570312, -8.7738037109375e-05, -0.0009701823582872748, -5.722029527532868e-06, -0.0016865730285644531, -2.0265579223632812e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Lord", "Of", "The", "Arena", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 81, 89, 88, 224, 205, "choices", "<EOS>", 21, 141, 218, 58, 123, 23, 146, "Choice", "<EOS>", 218, 87, 193, "Bear", "Form", "<EOS>", 58, 123, 23, 146, "Transform", "<EOS>", 216, 87, 193, "Bear", "of", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 71, 71, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "6", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, choices=[Choice(CatForm(), Transform(Bearof\n            ()), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score": -1.9357414161022461, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "LordOfTheArena", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Template28"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"id": "Choice", "_type": "Name"}, "args": [{"hole0": "CatForm", "_type": "Template5"}, {"func": {"id": "Transform", "_type": "Name"}, "args": [{"hole0": "Bearof", "_type": "Template5"}], "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "choices"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 6, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-6.866455078125e-05, -3.4332275390625e-05, -0.000240325927734375, -6.4849853515625e-05, -0.0001068115234375, -9.417125693289563e-05, -0.0012705998960882425, -0.0021720007061958313, -4.5298955228645355e-05, -2.229196616099216e-05, -9.5367431640625e-06, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-06, 0.0, -2.741813204920618e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -6.29425048828125e-05, -0.0003719329833984375, -0.0001697540283203125, -0.006816864013671875, -3.814697265625e-06, -0.0001125335693359375, -3.814697265625e-05, -1.33514404296875e-05, -1.776205863279756e-05, -0.00015103394980542362, -0.00015174760483205318, -9.083739860216156e-05, -0.0015703439712524414, -0.0007153188926167786, -0.0005052063497714698, -9.5367431640625e-06, -0.0002918243408203125, -0.0004425048828125, -1.52587890625e-05, -0.0002651214599609375, 0.0, -0.2516145706176758, 0.0, -7.2479248046875e-05, -1.71661376953125e-05, -0.11340522766113281, -0.0001068115234375, -2.09808349609375e-05, -0.07386302947998047, -2.6702880859375e-05, -0.001247406005859375, -3.814697265625e-06, -0.000293731689453125, -0.0001659393310546875, -3.814697265625e-06, -1.1247596740722656, -0.003991579636931419, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, -0.0002193450927734375, -1.9073486328125e-06, -0.012098312377929688, -1.382827485940652e-05, -3.0517578125e-05, -0.0006656646728515625, 0.0, -0.14601872861385345, -0.1392350047826767, -0.00014804780948907137, -9.5367431640625e-06, -3.814697265625e-06, -0.014809846878051758, -4.768371127283899e-06, 0.0, -0.012311935424804688, -0.0019664764404296875, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.1961669921875e-05, -2.288818359375e-05, -9.72747802734375e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -0.019510269165039062, -8.7738037109375e-05, -0.000970418332144618, -5.722029527532868e-06, -0.0016922950744628906, -2.0265579223632812e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Lord", "Of", "The", "Arena", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 81, 89, 88, 224, 205, "choices", "<EOS>", 21, 141, 218, 58, 123, 23, 146, "Choice", "<EOS>", 218, 87, 193, "Cat", "Form", "<EOS>", 58, 123, 23, 146, "Transform", "<EOS>", 216, 87, 193, "Bear", "of", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 71, 71, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "6", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "score": -3.1921489248647603, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "LordOfTheArena", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Template28"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template28"}, {"_type": "Template22"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-6.866455078125e-05, -3.4332275390625e-05, -0.000240325927734375, -6.4849853515625e-05, -0.0001068115234375, -9.417125693289563e-05, -0.0012705998960882425, -0.0021720007061958313, -4.5298955228645355e-05, -2.229196616099216e-05, -9.5367431640625e-06, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-06, 0.0, -2.741813204920618e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -6.29425048828125e-05, -0.0003719329833984375, -0.0001697540283203125, -0.006816864013671875, -3.814697265625e-06, -0.0001125335693359375, -3.814697265625e-05, -1.33514404296875e-05, -1.776205863279756e-05, -0.00015103394980542362, -0.00015174760483205318, -9.083739860216156e-05, -0.0015703439712524414, -0.0007153188926167786, -0.0005052063497714698, -9.5367431640625e-06, -0.0002918243408203125, -0.0004425048828125, -1.52587890625e-05, -0.0002651214599609375, 0.0, -3.041654586791992, 0.0, -5.7220458984375e-06, -3.24249267578125e-05, -0.02013397216796875, 0.0, -9.5367431640625e-06, 0.0, -0.09443473815917969, 0.0, 0.0, 0.0, -5.7220458984375e-06, 0.0, 0.0, -7.62939453125e-06, -6.29425048828125e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-05, -7.62939453125e-06, -8.58306884765625e-05, -1.9073486328125e-06, -0.0008411407470703125, -0.0011653900146484375, -0.0005092620849609375, -5.7220458984375e-06, -0.016701579093933105, -1.1920928244535389e-07, -0.000102996826171875, -0.0002288818359375, -2.2292137145996094e-05, -2.3841855067985307e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Lord", "Of", "The", "Arena", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 81, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 81, 77, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, choices=[Choice(BearForm(), Transform(\n            BearLord()), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score": -3.600556177256749, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "LordOfTheArena", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Template28"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"id": "Choice", "_type": "Name"}, "args": [{"hole0": "BearForm", "_type": "Template5"}, {"func": {"id": "Transform", "_type": "Name"}, "args": [{"hole0": "BearLord", "_type": "Template5"}], "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "choices"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 6, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-6.866455078125e-05, -3.4332275390625e-05, -0.000240325927734375, -6.4849853515625e-05, -0.0001068115234375, -9.417125693289563e-05, -0.0012705998960882425, -0.0021720007061958313, -4.5298955228645355e-05, -2.229196616099216e-05, -9.5367431640625e-06, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-06, 0.0, -2.741813204920618e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -6.29425048828125e-05, -0.0003719329833984375, -0.0001697540283203125, -0.006816864013671875, -3.814697265625e-06, -0.0001125335693359375, -3.814697265625e-05, -1.33514404296875e-05, -1.776205863279756e-05, -0.00015103394980542362, -0.00015174760483205318, -9.083739860216156e-05, -0.0015703439712524414, -0.0007153188926167786, -0.0005052063497714698, -9.5367431640625e-06, -0.0002918243408203125, -0.0004425048828125, -1.52587890625e-05, -0.0002651214599609375, 0.0, -0.2516145706176758, 0.0, -7.2479248046875e-05, -1.71661376953125e-05, -0.11340522766113281, -0.0001068115234375, -2.09808349609375e-05, -0.07386302947998047, -2.6702880859375e-05, -0.001247406005859375, -3.814697265625e-06, -0.000293731689453125, -0.0001659393310546875, -3.814697265625e-06, -0.7526521682739258, -0.015582328662276268, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.0002288818359375, -1.9073486328125e-06, -0.010091781616210938, -9.775159924174659e-06, -2.288818359375e-05, -0.0005702972412109375, 0.0, -0.17302154004573822, -2.1416544914245605, -4.792098479811102e-05, -1.9073486328125e-05, 0.0, -0.025372028350830078, -9.536741345073096e-06, 0.0, -0.0031261444091796875, -0.00127410888671875, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -4.1961669921875e-05, -2.09808349609375e-05, -0.0001201629638671875, -2.47955322265625e-05, -3.814697265625e-06, 0.0, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.016920089721679688, -8.7738037109375e-05, -0.0010079661151394248, -5.8412379075889476e-06, -0.0016446113586425781, -2.0265579223632812e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Lord", "Of", "The", "Arena", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 81, 89, 88, 224, 205, "choices", "<EOS>", 21, 141, 218, 58, 123, 23, 146, "Choice", "<EOS>", 218, 87, 193, "Bear", "Form", "<EOS>", 58, 123, 23, 146, "Transform", "<EOS>", 216, 87, 193, "Bear", "Lord", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 71, 71, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "6", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, choices=[Choice(Moonfire(), Transform(\n            Bearof()), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score": -3.713039112367369, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "LordOfTheArena", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Template28"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"id": "Choice", "_type": "Name"}, "args": [{"hole0": "Moonfire", "_type": "Template5"}, {"func": {"id": "Transform", "_type": "Name"}, "args": [{"hole0": "Bearof", "_type": "Template5"}], "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "choices"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 6, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-6.866455078125e-05, -3.4332275390625e-05, -0.000240325927734375, -6.4849853515625e-05, -0.0001068115234375, -9.417125693289563e-05, -0.0012705998960882425, -0.0021720007061958313, -4.5298955228645355e-05, -2.229196616099216e-05, -9.5367431640625e-06, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-06, 0.0, -2.741813204920618e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -6.29425048828125e-05, -0.0003719329833984375, -0.0001697540283203125, -0.006816864013671875, -3.814697265625e-06, -0.0001125335693359375, -3.814697265625e-05, -1.33514404296875e-05, -1.776205863279756e-05, -0.00015103394980542362, -0.00015174760483205318, -9.083739860216156e-05, -0.0015703439712524414, -0.0007153188926167786, -0.0005052063497714698, -9.5367431640625e-06, -0.0002918243408203125, -0.0004425048828125, -1.52587890625e-05, -0.0002651214599609375, 0.0, -0.2516145706176758, 0.0, -7.2479248046875e-05, -1.71661376953125e-05, -0.11340522766113281, -0.0001068115234375, -2.09808349609375e-05, -0.07386302947998047, -2.6702880859375e-05, -0.001247406005859375, -3.814697265625e-06, -0.000293731689453125, -0.0001659393310546875, -3.814697265625e-06, -2.674248695373535, -9.34600830078125e-05, -3.0517578125e-05, -3.814697265625e-06, -0.0002079010009765625, -1.9073486328125e-06, -0.17955875396728516, -1.394745322613744e-05, -1.71661376953125e-05, -0.0014905929565429688, 0.0, -0.15422679483890533, -0.15756046772003174, -0.00010084671521326527, -9.5367431640625e-06, -1.9073486328125e-06, -0.01289224624633789, -4.5299530029296875e-06, 0.0, -0.04778861999511719, -0.0041351318359375, -2.86102294921875e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.38690185546875e-05, -2.47955322265625e-05, -9.34600830078125e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -0.0207366943359375, -8.7738037109375e-05, -0.0009554035495966673, -5.602820692729438e-06, -0.0016999244689941406, -2.0265579223632812e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Lord", "Of", "The", "Arena", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 81, 89, 88, 224, 205, "choices", "<EOS>", 21, 141, 218, 58, 123, 23, 146, "Choice", "<EOS>", 218, 87, 193, "Moonfire", "<EOS>", 58, 123, 23, 146, "Transform", "<EOS>", 216, 87, 193, "Bear", "of", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 71, 71, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "6", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, choices=[Choice(CatForm(), Transform(\n            BearLord()), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score": -3.9347308965429875, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "LordOfTheArena", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Template28"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"id": "Choice", "_type": "Name"}, "args": [{"hole0": "CatForm", "_type": "Template5"}, {"func": {"id": "Transform", "_type": "Name"}, "args": [{"hole0": "BearLord", "_type": "Template5"}], "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "choices"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 6, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-6.866455078125e-05, -3.4332275390625e-05, -0.000240325927734375, -6.4849853515625e-05, -0.0001068115234375, -9.417125693289563e-05, -0.0012705998960882425, -0.0021720007061958313, -4.5298955228645355e-05, -2.229196616099216e-05, -9.5367431640625e-06, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-06, 0.0, -2.741813204920618e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -6.29425048828125e-05, -0.0003719329833984375, -0.0001697540283203125, -0.006816864013671875, -3.814697265625e-06, -0.0001125335693359375, -3.814697265625e-05, -1.33514404296875e-05, -1.776205863279756e-05, -0.00015103394980542362, -0.00015174760483205318, -9.083739860216156e-05, -0.0015703439712524414, -0.0007153188926167786, -0.0005052063497714698, -9.5367431640625e-06, -0.0002918243408203125, -0.0004425048828125, -1.52587890625e-05, -0.0002651214599609375, 0.0, -0.2516145706176758, 0.0, -7.2479248046875e-05, -1.71661376953125e-05, -0.11340522766113281, -0.0001068115234375, -2.09808349609375e-05, -0.07386302947998047, -2.6702880859375e-05, -0.001247406005859375, -3.814697265625e-06, -0.000293731689453125, -0.0001659393310546875, -3.814697265625e-06, -1.1247596740722656, -0.003991579636931419, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, -0.0002193450927734375, -1.9073486328125e-06, -0.012098312377929688, -1.382827485940652e-05, -3.0517578125e-05, -0.0006656646728515625, 0.0, -0.14601872861385345, -2.1335606575012207, -5.8887653722194955e-05, -1.9073486328125e-05, 0.0, -0.02672421932220459, -9.536741345073096e-06, 0.0, -0.0073032379150390625, -0.0025157928466796875, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -4.1961669921875e-05, -2.09808349609375e-05, -0.0001163482666015625, -2.288818359375e-05, -3.814697265625e-06, 0.0, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.016782760620117188, -8.7738037109375e-05, -0.001008321181870997, -5.722029527532868e-06, -0.0016503334045410156, -2.0265579223632812e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Lord", "Of", "The", "Arena", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 81, 89, 88, 224, 205, "choices", "<EOS>", 21, 141, 218, 58, 123, 23, 146, "Choice", "<EOS>", 218, 87, 193, "Cat", "Form", "<EOS>", 58, 123, 23, 146, "Transform", "<EOS>", 216, 87, 193, "Bear", "Lord", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 71, 71, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "6", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, choices=[Choice(BearForm(), Transform(Catof\n            ()), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score": -4.1341895934215245, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "LordOfTheArena", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Template28"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"id": "Choice", "_type": "Name"}, "args": [{"hole0": "BearForm", "_type": "Template5"}, {"func": {"id": "Transform", "_type": "Name"}, "args": [{"hole0": "Catof", "_type": "Template5"}], "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "choices"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 6, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-6.866455078125e-05, -3.4332275390625e-05, -0.000240325927734375, -6.4849853515625e-05, -0.0001068115234375, -9.417125693289563e-05, -0.0012705998960882425, -0.0021720007061958313, -4.5298955228645355e-05, -2.229196616099216e-05, -9.5367431640625e-06, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-06, 0.0, -2.741813204920618e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -6.29425048828125e-05, -0.0003719329833984375, -0.0001697540283203125, -0.006816864013671875, -3.814697265625e-06, -0.0001125335693359375, -3.814697265625e-05, -1.33514404296875e-05, -1.776205863279756e-05, -0.00015103394980542362, -0.00015174760483205318, -9.083739860216156e-05, -0.0015703439712524414, -0.0007153188926167786, -0.0005052063497714698, -9.5367431640625e-06, -0.0002918243408203125, -0.0004425048828125, -1.52587890625e-05, -0.0002651214599609375, 0.0, -0.2516145706176758, 0.0, -7.2479248046875e-05, -1.71661376953125e-05, -0.11340522766113281, -0.0001068115234375, -2.09808349609375e-05, -0.07386302947998047, -2.6702880859375e-05, -0.001247406005859375, -3.814697265625e-06, -0.000293731689453125, -0.0001659393310546875, -3.814697265625e-06, -0.7526521682739258, -0.015582328662276268, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.0002288818359375, -1.9073486328125e-06, -0.010091781616210938, -9.775159924174659e-06, -2.288818359375e-05, -0.0005702972412109375, 0.0, -2.647160768508911, -0.19512324035167694, -0.00011527038441272452, -1.33514404296875e-05, 0.0, -0.0074950456619262695, -4.649161837733118e-06, 0.0, -0.019758224487304688, -0.0032863616943359375, -2.86102294921875e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -4.76837158203125e-05, -2.6702880859375e-05, -8.96453857421875e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -0.0221405029296875, -8.7738037109375e-05, -0.0009509931551292539, -5.602820692729438e-06, -0.0017075538635253906, -2.0265579223632812e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Lord", "Of", "The", "Arena", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 81, 89, 88, 224, 205, "choices", "<EOS>", 21, 141, 218, 58, 123, 23, 146, "Choice", "<EOS>", 218, 87, 193, "Bear", "Form", "<EOS>", 58, 123, 23, 146, "Transform", "<EOS>", 216, 87, 193, "Cat", "of", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 71, 71, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "6", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, choices=[Effect(Transform(CobraForm()),\n            SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score": -4.366308234437831, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "LordOfTheArena", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Template28"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template33"}, "args": [{"func": {"id": "Transform", "_type": "Name"}, "args": [{"hole0": "CobraForm", "_type": "Template5"}], "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "choices"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 6, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-6.866455078125e-05, -3.4332275390625e-05, -0.000240325927734375, -6.4849853515625e-05, -0.0001068115234375, -9.417125693289563e-05, -0.0012705998960882425, -0.0021720007061958313, -4.5298955228645355e-05, -2.229196616099216e-05, -9.5367431640625e-06, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-06, 0.0, -2.741813204920618e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -6.29425048828125e-05, -0.0003719329833984375, -0.0001697540283203125, -0.006816864013671875, -3.814697265625e-06, -0.0001125335693359375, -3.814697265625e-05, -1.33514404296875e-05, -1.776205863279756e-05, -0.00015103394980542362, -0.00015174760483205318, -9.083739860216156e-05, -0.0015703439712524414, -0.0007153188926167786, -0.0005052063497714698, -9.5367431640625e-06, -0.0002918243408203125, -0.0004425048828125, -1.52587890625e-05, -0.0002651214599609375, 0.0, -0.2516145706176758, 0.0, -7.2479248046875e-05, -1.71661376953125e-05, -0.11340522766113281, -0.0001068115234375, -2.09808349609375e-05, -2.8263797760009766, -0.03807258605957031, -0.3367652893066406, -8.0108642578125e-05, -2.288818359375e-05, 0.0, -0.07402896881103516, -7.128715515136719e-05, -0.00173187255859375, -0.00138092041015625, 0.0, -0.5727488994598389, -0.029722919687628746, 0.0, -0.08467292785644531, -3.0517578125e-05, -0.004840850830078125, -1.9073486328125e-06, 0.0, -0.001117706298828125, -0.000316619873046875, -3.0517578125e-05, 0.0, -2.09808349609375e-05, 0.0, -3.0517578125e-05, -1.71661376953125e-05, -0.0001544952392578125, -3.24249267578125e-05, -3.814697265625e-06, 0.0, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.009944915771484375, -8.392333984375e-05, -0.0011064119171351194, -6.437280717364047e-06, -0.001560807228088379, -1.1920928244535389e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Lord", "Of", "The", "Arena", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 81, 89, 88, 224, 205, "choices", "<EOS>", 21, 141, 218, 58, 123, 44, 217, 58, 123, 23, 146, "Transform", "<EOS>", 216, 87, 193, "Cobra", "Form", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 71, 71, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "6", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, combo=Battlecry(Transform(Bearof()),\n            SelfSelector(), GreaterThan(Count(MinionSelector(IsType(\n            MINION_TYPE.MECH))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score": -4.426870676124501, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "LordOfTheArena", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Template28"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Transform", "_type": "Name"}, "args": [{"hole0": "Bearof", "_type": "Template5"}], "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template5"}, {"func": {"id": "GreaterThan", "_type": "Name"}, "args": [{"func": {"id": "Count", "_type": "Name"}, "args": [{"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}], "_type": "Call", "keywords": [{"value": {"_type": "Template31"}, "_type": "keyword", "arg": "value"}]}], "_type": "Call"}, "_type": "keyword", "arg": "combo"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 6, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-6.866455078125e-05, -3.4332275390625e-05, -0.000240325927734375, -6.4849853515625e-05, -0.0001068115234375, -9.417125693289563e-05, -0.0012705998960882425, -0.0021720007061958313, -4.5298955228645355e-05, -2.229196616099216e-05, -9.5367431640625e-06, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-06, 0.0, -2.741813204920618e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -6.29425048828125e-05, -0.0003719329833984375, -0.0001697540283203125, -0.006816864013671875, -3.814697265625e-06, -0.0001125335693359375, -3.814697265625e-05, -1.33514404296875e-05, -1.776205863279756e-05, -0.00015103394980542362, -0.00015174760483205318, -9.083739860216156e-05, -0.0015703439712524414, -0.0007153188926167786, -0.0005052063497714698, -9.5367431640625e-06, -0.0002918243408203125, -0.0004425048828125, -1.52587890625e-05, -0.0002651214599609375, 0.0, -2.5698413848876953, 0.0, -0.0002155303955078125, -5.7220458984375e-06, -0.0015468597412109375, -0.031581878662109375, -0.0011005401611328125, -1.9073486328125e-05, -6.4849853515625e-05, -7.62939453125e-06, -0.060698509216308594, -3.564337021089159e-05, -8.7738037109375e-05, -0.0003070831298828125, 0.0, -0.5864579677581787, -0.21393780410289764, -4.172285116510466e-05, -8.58306884765625e-05, -3.814697265625e-06, -0.008987784385681152, -3.933906555175781e-06, 0.0, -0.0027256011962890625, -0.03658103942871094, -0.000812530517578125, -5.7220458984375e-06, -0.04597282409667969, -0.00011682510375976562, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -1.9073486328125e-05, -0.000102996826171875, -9.5367431640625e-06, -0.0010023117065429688, -1.3470649719238281e-05, -9.5367431640625e-06, -0.00060272216796875, -0.000148773193359375, -0.000202178955078125, -0.6509037017822266, -0.030515670776367188, -0.00016021728515625, -0.0032939910888671875, -0.005260467529296875, -0.0001068115234375, 0.0, -0.0034847259521484375, -1.9073486328125e-06, -0.000469207763671875, 0.0, -0.13778412342071533, 0.0, -0.0002269744873046875, 0.0, -0.0009174346923828125, 0.0, -0.0034046173095703125, -0.000164031982421875, 0.0, -3.24249267578125e-05, 0.0, 0.0, -1.9073486328125e-06, -0.000293731689453125, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.007266998291015625, -0.0001087188720703125, -0.0011930931359529495, -5.722029527532868e-06, -0.0017851591110229492, -1.1920928244535389e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Lord", "Of", "The", "Arena", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 81, 89, 88, 224, 205, "combo", "<EOS>", 18, 123, 34, 218, 58, 123, 23, 146, "Transform", "<EOS>", 216, 87, 193, "Bear", "of", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 58, 124, 23, 146, "Greater", "Than", "<EOS>", 216, 58, 123, 23, 146, "Count", "<EOS>", 216, 58, 123, 38, 216, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 224, 205, "value", "<EOS>", 42, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "6", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, choices=[Choice(BearForm(), Transform(\n            Bearof()), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score": -4.453806451012497, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "LordOfTheArena", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Template28"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"id": "Choice", "_type": "Name"}, "args": [{"hole0": "BearForm", "_type": "Template5"}, {"func": {"id": "Transform", "_type": "Name"}, "args": [{"hole0": "Bearof", "_type": "Template5"}], "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "choices"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 6, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-6.866455078125e-05, -3.4332275390625e-05, -0.000240325927734375, -6.4849853515625e-05, -0.0001068115234375, -9.417125693289563e-05, -0.0012705998960882425, -0.0021720007061958313, -4.5298955228645355e-05, -2.229196616099216e-05, -9.5367431640625e-06, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-06, 0.0, -2.741813204920618e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -6.29425048828125e-05, -0.0003719329833984375, -0.0001697540283203125, -0.006816864013671875, -3.814697265625e-06, -0.0001125335693359375, -3.814697265625e-05, -1.33514404296875e-05, -1.776205863279756e-05, -0.00015103394980542362, -0.00015174760483205318, -9.083739860216156e-05, -0.0015703439712524414, -0.0007153188926167786, -0.0005052063497714698, -9.5367431640625e-06, -0.0002918243408203125, -0.0004425048828125, -1.52587890625e-05, -0.0002651214599609375, 0.0, -0.2516145706176758, 0.0, -7.2479248046875e-05, -1.71661376953125e-05, -2.2580184936523438, -0.00025177001953125, -1.1444091796875e-05, -1.3903675079345703, -3.814697265625e-06, -0.0024700164794921875, -1.9073486328125e-06, -0.000759124755859375, -0.00014495849609375, -7.62939453125e-06, -0.20421016216278076, -0.017991675063967705, -5.7220458984375e-06, -1.9073486328125e-06, -1.33514404296875e-05, -0.0003108978271484375, 0.0, -0.037766456604003906, -1.0251998901367188e-05, -3.24249267578125e-05, -0.0002841949462890625, 0.0, -0.09815517067909241, -0.13885411620140076, -5.829185829497874e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.024681806564331055, -4.5299530029296875e-06, 0.0, -8.7738037109375e-05, -0.0002460479736328125, -2.47955322265625e-05, -5.7220458984375e-06, 0.0, -9.72747802734375e-05, -1.52587890625e-05, -0.0001049041748046875, -2.288818359375e-05, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -0.008007049560546875, -7.43865966796875e-05, -0.0011616135016083717, -5.602820692729438e-06, -0.0017387866973876953, -2.0265579223632812e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Lord", "Of", "The", "Arena", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 81, 89, 88, 224, 205, "choices", "<EOS>", 21, 141, 217, 58, 123, 23, 146, "Choice", "<EOS>", 218, 87, 193, "Bear", "Form", "<EOS>", 58, 123, 23, 146, "Transform", "<EOS>", 216, 87, 193, "Bear", "of", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 71, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "6", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, choices=[Choice(CatForm(), Transform(Catof(\n            )), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score": -4.574610532440147, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "LordOfTheArena", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Template28"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"id": "Choice", "_type": "Name"}, "args": [{"hole0": "CatForm", "_type": "Template5"}, {"func": {"id": "Transform", "_type": "Name"}, "args": [{"hole0": "Catof", "_type": "Template5"}], "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "choices"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 6, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-6.866455078125e-05, -3.4332275390625e-05, -0.000240325927734375, -6.4849853515625e-05, -0.0001068115234375, -9.417125693289563e-05, -0.0012705998960882425, -0.0021720007061958313, -4.5298955228645355e-05, -2.229196616099216e-05, -9.5367431640625e-06, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-06, 0.0, -2.741813204920618e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -6.29425048828125e-05, -0.0003719329833984375, -0.0001697540283203125, -0.006816864013671875, -3.814697265625e-06, -0.0001125335693359375, -3.814697265625e-05, -1.33514404296875e-05, -1.776205863279756e-05, -0.00015103394980542362, -0.00015174760483205318, -9.083739860216156e-05, -0.0015703439712524414, -0.0007153188926167786, -0.0005052063497714698, -9.5367431640625e-06, -0.0002918243408203125, -0.0004425048828125, -1.52587890625e-05, -0.0002651214599609375, 0.0, -0.2516145706176758, 0.0, -7.2479248046875e-05, -1.71661376953125e-05, -0.11340522766113281, -0.0001068115234375, -2.09808349609375e-05, -0.07386302947998047, -2.6702880859375e-05, -0.001247406005859375, -3.814697265625e-06, -0.000293731689453125, -0.0001659393310546875, -3.814697265625e-06, -1.1247596740722656, -0.003991579636931419, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, -0.0002193450927734375, -1.9073486328125e-06, -0.012098312377929688, -1.382827485940652e-05, -3.0517578125e-05, -0.0006656646728515625, 0.0, -2.6954638957977295, -0.19114139676094055, -0.00010907209798460826, -1.1444091796875e-05, 0.0, -0.00783836841583252, -4.649161837733118e-06, 0.0, -0.04990196228027344, -0.006206512451171875, -2.86102294921875e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -4.76837158203125e-05, -2.86102294921875e-05, -8.7738037109375e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -0.02220916748046875, -8.7738037109375e-05, -0.0009506334317848086, -5.602820692729438e-06, -0.0017132759094238281, -2.0265579223632812e-06, 0.0], "choice_history": [93, 145, 230, 101, 125, "Lord", "Of", "The", "Arena", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 81, 89, 88, 224, 205, "choices", "<EOS>", 21, 141, 218, 58, 123, 23, 146, "Choice", "<EOS>", 218, 87, 193, "Cat", "Form", "<EOS>", 58, 123, 23, 146, "Transform", "<EOS>", 216, 87, 193, "Cat", "of", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 71, 71, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "6", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, combo=Battlecry(Transform(CobraForm()),\n            SelfSelector(), GreaterThan(Count(MinionSelector(IsType(\n            MINION_TYPE.MECH))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score": -4.820829183630387, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "LordOfTheArena", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Template28"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"func": {"_type": "Template21"}, "args": [{"func": {"id": "Transform", "_type": "Name"}, "args": [{"hole0": "CobraForm", "_type": "Template5"}], "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template5"}, {"func": {"id": "GreaterThan", "_type": "Name"}, "args": [{"func": {"id": "Count", "_type": "Name"}, "args": [{"func": {"_type": "Template26"}, "args": [{"func": {"_type": "Template37"}, "args": [{"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Call"}], "_type": "Call"}], "_type": "Call"}], "_type": "Call", "keywords": [{"value": {"_type": "Template31"}, "_type": "keyword", "arg": "value"}]}], "_type": "Call"}, "_type": "keyword", "arg": "combo"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 5, "hole0": 6, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-6.866455078125e-05, -3.4332275390625e-05, -0.000240325927734375, -6.4849853515625e-05, -0.0001068115234375, -9.417125693289563e-05, -0.0012705998960882425, -0.0021720007061958313, -4.5298955228645355e-05, -2.229196616099216e-05, -9.5367431640625e-06, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-06, 0.0, -2.741813204920618e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -6.29425048828125e-05, -0.0003719329833984375, -0.0001697540283203125, -0.006816864013671875, -3.814697265625e-06, -0.0001125335693359375, -3.814697265625e-05, -1.33514404296875e-05, -1.776205863279756e-05, -0.00015103394980542362, -0.00015174760483205318, -9.083739860216156e-05, -0.0015703439712524414, -0.0007153188926167786, -0.0005052063497714698, -9.5367431640625e-06, -0.0002918243408203125, -0.0004425048828125, -1.52587890625e-05, -0.0002651214599609375, 0.0, -2.5698413848876953, 0.0, -0.0002155303955078125, -5.7220458984375e-06, -0.0015468597412109375, -0.031581878662109375, -0.0011005401611328125, -1.9073486328125e-05, -6.4849853515625e-05, -7.62939453125e-06, -0.060698509216308594, -3.564337021089159e-05, -8.7738037109375e-05, -0.0003070831298828125, 0.0, -1.1779038906097412, -0.025394663214683533, 0.0, -0.000614166259765625, -5.340576171875e-05, -0.0013561248779296875, -2.0265579223632812e-06, 0.0, -0.001483917236328125, -0.019855499267578125, -0.0015010833740234375, -3.814697265625e-06, -0.05116844177246094, -0.00011491775512695312, -1.9073486328125e-06, -3.814697265625e-05, -1.33514404296875e-05, -1.71661376953125e-05, -9.34600830078125e-05, -9.5367431640625e-06, -0.0006961822509765625, -9.655952453613281e-06, -9.5367431640625e-06, -0.0005092620849609375, -0.0001163482666015625, -0.000202178955078125, -0.6617813110351562, -0.027912139892578125, -0.0001506805419921875, -0.0035419464111328125, -0.0052356719970703125, -0.0001068115234375, 0.0, -0.0034627914428710938, -1.9073486328125e-06, -0.0004711151123046875, 0.0, -0.1397916078567505, 0.0, -0.0002269744873046875, 0.0, -0.0009145736694335938, 0.0, -0.0033960342407226562, -0.0001583099365234375, 0.0, -3.4332275390625e-05, 0.0, 0.0, -1.9073486328125e-06, -0.000286102294921875, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.007495880126953125, -0.000110626220703125, -0.0011915415525436401, -5.722029527532868e-06, -0.0017889738082885742, -1.1920928244535389e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Lord", "Of", "The", "Arena", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 81, 89, 88, 224, 205, "combo", "<EOS>", 18, 123, 34, 218, 58, 123, 23, 146, "Transform", "<EOS>", 216, 87, 193, "Cobra", "Form", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 58, 124, 23, 146, "Greater", "Than", "<EOS>", 216, 58, 123, 23, 146, "Count", "<EOS>", 216, 58, 123, 38, 216, 58, 123, 48, 216, 55, 116, 23, 146, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 224, 205, "value", "<EOS>", 42, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "6", "<EOS>", "5", "<EOS>", 109]}, {"inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, choices=[Choice(BearForm(), Transform(\n            Bearof()), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "score": -5.543641091607178, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "LordOfTheArena", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Template28"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"id": "Choice", "_type": "Name"}, "args": [{"hole0": "BearForm", "_type": "Template5"}, {"func": {"id": "Transform", "_type": "Name"}, "args": [{"hole0": "Bearof", "_type": "Template5"}], "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "choices"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template28"}, {"_type": "Template22"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-6.866455078125e-05, -3.4332275390625e-05, -0.000240325927734375, -6.4849853515625e-05, -0.0001068115234375, -9.417125693289563e-05, -0.0012705998960882425, -0.0021720007061958313, -4.5298955228645355e-05, -2.229196616099216e-05, -9.5367431640625e-06, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-06, 0.0, -2.741813204920618e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -6.29425048828125e-05, -0.0003719329833984375, -0.0001697540283203125, -0.006816864013671875, -3.814697265625e-06, -0.0001125335693359375, -3.814697265625e-05, -1.33514404296875e-05, -1.776205863279756e-05, -0.00015103394980542362, -0.00015174760483205318, -9.083739860216156e-05, -0.0015703439712524414, -0.0007153188926167786, -0.0005052063497714698, -9.5367431640625e-06, -0.0002918243408203125, -0.0004425048828125, -1.52587890625e-05, -0.0002651214599609375, 0.0, -0.2516145706176758, 0.0, -7.2479248046875e-05, -1.71661376953125e-05, -0.11340522766113281, -0.0001068115234375, -2.09808349609375e-05, -0.07386302947998047, -2.6702880859375e-05, -0.001247406005859375, -3.814697265625e-06, -0.000293731689453125, -0.0001659393310546875, -3.814697265625e-06, -0.7526521682739258, -0.015582328662276268, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.0002288818359375, -1.9073486328125e-06, -0.010091781616210938, -9.775159924174659e-06, -2.288818359375e-05, -0.0005702972412109375, 0.0, -0.17302154004573822, -0.13876284658908844, -0.00010930955613730475, -9.5367431640625e-06, -3.814697265625e-06, -0.014124035835266113, -4.649161837733118e-06, 0.0, -0.00560760498046875, -0.0009784698486328125, -2.86102294921875e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.1961669921875e-05, -2.288818359375e-05, -9.918212890625e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -3.9597158432006836, -9.5367431640625e-06, -0.0002307891845703125, -0.0002899169921875, -5.340576171875e-05, -1.9073486328125e-06, -0.0009822845458984375, -0.001285552978515625, -0.0002460479736328125, -7.62939453125e-06, -0.01152491569519043, -1.1920928244535389e-07, -0.0001049041748046875, -0.000194549560546875, -2.944469451904297e-05, -3.576278118089249e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Lord", "Of", "The", "Arena", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 81, 89, 88, 224, 205, "choices", "<EOS>", 21, 141, 218, 58, 123, 23, 146, "Choice", "<EOS>", 218, 87, 193, "Bear", "Form", "<EOS>", 58, 123, 23, 146, "Transform", "<EOS>", 216, 87, 193, "Bear", "of", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 71, 71, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 81, 77, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, choices=[Choice(CatForm(), Transform(Bearof\n            ()), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "score": -5.888629850172883, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "LordOfTheArena", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Template28"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"_type": "List", "elts": [{"func": {"id": "Choice", "_type": "Name"}, "args": [{"hole0": "CatForm", "_type": "Template5"}, {"func": {"id": "Transform", "_type": "Name"}, "args": [{"hole0": "Bearof", "_type": "Template5"}], "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template5"}], "_type": "Call"}, {"_type": "Template15_expr_seq"}, {"_type": "Template15_expr_seq"}]}, "_type": "keyword", "arg": "choices"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Template28"}, {"_type": "Template22"}], "_type": "Call", "keywords": [{"value": {"_type": "NameConstant", "value": true}, "_type": "keyword", "arg": "taunt"}]}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-6.866455078125e-05, -3.4332275390625e-05, -0.000240325927734375, -6.4849853515625e-05, -0.0001068115234375, -9.417125693289563e-05, -0.0012705998960882425, -0.0021720007061958313, -4.5298955228645355e-05, -2.229196616099216e-05, -9.5367431640625e-06, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-06, 0.0, -2.741813204920618e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -6.29425048828125e-05, -0.0003719329833984375, -0.0001697540283203125, -0.006816864013671875, -3.814697265625e-06, -0.0001125335693359375, -3.814697265625e-05, -1.33514404296875e-05, -1.776205863279756e-05, -0.00015103394980542362, -0.00015174760483205318, -9.083739860216156e-05, -0.0015703439712524414, -0.0007153188926167786, -0.0005052063497714698, -9.5367431640625e-06, -0.0002918243408203125, -0.0004425048828125, -1.52587890625e-05, -0.0002651214599609375, 0.0, -0.2516145706176758, 0.0, -7.2479248046875e-05, -1.71661376953125e-05, -0.11340522766113281, -0.0001068115234375, -2.09808349609375e-05, -0.07386302947998047, -2.6702880859375e-05, -0.001247406005859375, -3.814697265625e-06, -0.000293731689453125, -0.0001659393310546875, -3.814697265625e-06, -1.1247596740722656, -0.003991579636931419, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, -0.0002193450927734375, -1.9073486328125e-06, -0.012098312377929688, -1.382827485940652e-05, -3.0517578125e-05, -0.0006656646728515625, 0.0, -0.14601872861385345, -0.1392350047826767, -0.00014804780948907137, -9.5367431640625e-06, -3.814697265625e-06, -0.014809846878051758, -4.768371127283899e-06, 0.0, -0.012311935424804688, -0.0019664764404296875, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.1961669921875e-05, -2.288818359375e-05, -9.72747802734375e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -3.9601869583129883, -7.62939453125e-06, -0.000225067138671875, -0.0002880096435546875, -5.340576171875e-05, -1.9073486328125e-06, -0.000980377197265625, -0.0012874603271484375, -0.0002460479736328125, -7.62939453125e-06, -0.011543035507202148, -1.1920928244535389e-07, -0.0001049041748046875, -0.000194549560546875, -2.944469451904297e-05, -3.576278118089249e-07, 0.0], "choice_history": [93, 145, 230, 101, 125, "Lord", "Of", "The", "Arena", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 81, 89, 88, 224, 205, "choices", "<EOS>", 21, 141, 218, 58, 123, 23, 146, "Choice", "<EOS>", 218, 87, 193, "Cat", "Form", "<EOS>", 58, 123, 23, 146, "Transform", "<EOS>", 216, 87, 193, "Bear", "of", "<EOS>", 87, 193, "Self", "Selector", "<EOS>", 71, 71, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 107, 153, 18, 124, 36, 217, 81, 77, 224, 205, "taunt", "<EOS>", 24, 147, "True", "<EOS>", 109]}, {"inferred_code": "", "score": -17.315378189086914, "model_output": {"_type": "Module", "body": []}, "score_history": [-6.866455078125e-05, -3.4332275390625e-05, -17.315275192260742], "choice_history": [93, 145, 228]}], "index": 63}
{"beams": [{"inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -0.003257629921499472, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "MechanicalDragonling", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -3.4332275390625e-05, -5.7220458984375e-06, -2.288818359375e-05, -3.24249267578125e-05, -5.960462772236497e-07, -2.2649765014648438e-06, -2.4437606043647975e-05, -5.7220458984375e-06, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -1.3470649719238281e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.91278076171875e-05, -0.00017547607421875, -0.0001583099365234375, -0.00103759765625, -1.9073486328125e-05, 0.0, -5.173549288883805e-05, -7.402856863336638e-05, -5.483625955093885e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-05, -2.6702880859375e-05, -8.392333984375e-05, -9.5367431640625e-06, 0.0, -2.7418136596679688e-05, -4.649161837733118e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.0001983642578125, -5.7220458984375e-06, -0.000186920166015625, -1.9073486328125e-06, -5.8770179748535156e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.919269561767578e-05, -1.33514404296875e-05, -0.0001354217529296875, -8.58306884765625e-05, -0.000141143798828125, 0.0, -2.09808349609375e-05, -1.33514404296875e-05, -0.0001850128173828125, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -1.33514404296875e-05, -4.255743988323957e-05, -4.768370445162873e-07, -3.135202496196143e-05, -1.1920928244535389e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Mechanical", "Dragonling", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Mechanical", " ", "Dragonling", "<EOS>", 70, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -6.993581055996884, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "MechanicalDragonling", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -3.4332275390625e-05, -5.7220458984375e-06, -2.288818359375e-05, -3.24249267578125e-05, -5.960462772236497e-07, -2.2649765014648438e-06, -2.4437606043647975e-05, -5.7220458984375e-06, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -1.3470649719238281e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.91278076171875e-05, -0.00017547607421875, -0.0001583099365234375, -6.989314079284668, -1.9073486328125e-06, -1.9073486328125e-06, -1.4662635294371285e-05, -3.349778853589669e-05, -2.741813204920618e-06, 0.0, -7.62939453125e-06, -4.9591064453125e-05, -1.1444091796875e-05, -2.86102294921875e-05, 0.0, -2.6941299438476562e-05, -2.622604142743512e-06, -7.62939453125e-06, -0.0002231597900390625, -0.0021190643310546875, -3.814697265625e-06, -0.0002841949462890625, -1.9073486328125e-06, -7.987021672306582e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -3.838539123535156e-05, -2.300739288330078e-05, -6.4849853515625e-05, -6.866455078125e-05, -0.000156402587890625, -1.9073486328125e-06, -1.9073486328125e-05, -1.52587890625e-05, -0.0001277923583984375, -1.9073486328125e-06, -1.9073486328125e-06, -9.72747802734375e-05, -3.4332275390625e-05, -3.2782401831354946e-05, -9.536738616588991e-07, -2.6106825316674076e-05, -2.3841855067985307e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Mechanical", "Dragonling", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Mechanical", " ", "Dragonling", "<EOS>", 70, 89, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.MECH.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -8.622588989810247, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "MechanicalDragonling", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "MECH", "_type": "Attribute", "value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -3.4332275390625e-05, -5.7220458984375e-06, -2.288818359375e-05, -3.24249267578125e-05, -5.960462772236497e-07, -2.2649765014648438e-06, -2.4437606043647975e-05, -5.7220458984375e-06, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -1.3470649719238281e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.91278076171875e-05, -0.00017547607421875, -0.0001583099365234375, -0.00103759765625, -1.9073486328125e-05, 0.0, -5.173549288883805e-05, -7.402856863336638e-05, -5.483625955093885e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-05, -2.6702880859375e-05, -8.392333984375e-05, -9.5367431640625e-06, 0.0, -2.7418136596679688e-05, -4.649161837733118e-06, -1.9073486328125e-06, -3.24249267578125e-05, -8.617471694946289, 0.0, -5.7220458984375e-06, -2.86102294921875e-05, -0.0002651214599609375, 0.0, -0.0005135536193847656, 0.0, -0.0016121864318847656, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -0.000179290771484375, -3.62396240234375e-05, -0.0001277923583984375, 0.0, -7.62939453125e-06, -1.52587890625e-05, -0.0001201629638671875, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -1.1444091796875e-05, -3.969643876189366e-05, -4.768370445162873e-07, -3.111361002083868e-05, -1.1920928244535389e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Mechanical", "Dragonling", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Mechanical", " ", "Dragonling", "<EOS>", 70, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "MECH", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -8.886263128321445, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "MechanicalDragonling", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -3.4332275390625e-05, -5.7220458984375e-06, -2.288818359375e-05, -3.24249267578125e-05, -5.960462772236497e-07, -2.2649765014648438e-06, -2.4437606043647975e-05, -5.7220458984375e-06, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -1.3470649719238281e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.91278076171875e-05, -8.84456729888916, -0.0006732940673828125, -0.032073974609375, -3.814697265625e-05, 0.0, -3.433175152167678e-05, -0.0001271934452233836, -5.245207830739673e-06, 0.0, -5.14984130859375e-05, -5.14984130859375e-05, -4.9591064453125e-05, -4.00543212890625e-05, -1.9073486328125e-05, -2.09808349609375e-05, -2.574920654296875e-05, -1.71661376953125e-05, -4.76837158203125e-05, -1.52587890625e-05, -0.000125885009765625, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.007202267646789551, 0.0, -7.62939453125e-06, -0.00025177001953125, -1.52587890625e-05, -2.4557000870117918e-05, -3.576278118089249e-07, -0.0004556179337669164, -5.960462772236497e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Mechanical", "Dragonling", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 220, 66, 155, "Mechanical", " ", "Dragonling", "<EOS>", 70, 89, 88, 80, 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, minion_type=Random.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -9.255282518924723, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "MechanicalDragonling", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "Random", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -3.4332275390625e-05, -5.7220458984375e-06, -2.288818359375e-05, -3.24249267578125e-05, -5.960462772236497e-07, -2.2649765014648438e-06, -2.4437606043647975e-05, -5.7220458984375e-06, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -1.3470649719238281e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.91278076171875e-05, -0.00017547607421875, -0.0001583099365234375, -0.00103759765625, -1.9073486328125e-05, 0.0, -5.173549288883805e-05, -7.402856863336638e-05, -5.483625955093885e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-05, -2.6702880859375e-05, -8.392333984375e-05, -9.5367431640625e-06, 0.0, -2.7418136596679688e-05, -4.649161837733118e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.0001983642578125, -5.7220458984375e-06, -9.25142765045166, -0.0005365610122680664, -0.0004061460494995117, 0.0, -3.814697265625e-06, 0.0, -1.3470649719238281e-05, -7.62939453125e-06, -0.0001049041748046875, -5.53131103515625e-05, -0.0001316070556640625, 0.0, -1.9073486328125e-05, -1.33514404296875e-05, -0.000171661376953125, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, -1.33514404296875e-05, -4.219981929054484e-05, -4.768370445162873e-07, -3.111361002083868e-05, -1.1920928244535389e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Mechanical", "Dragonling", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Mechanical", " ", "Dragonling", "<EOS>", 70, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "Random", "<EOS>", "MECH", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, p):\n        return Minion(2, 1)\n", "score": -9.482112394341833, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "MechanicalDragonling", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -3.4332275390625e-05, -5.7220458984375e-06, -2.288818359375e-05, -3.24249267578125e-05, -5.960462772236497e-07, -2.2649765014648438e-06, -2.4437606043647975e-05, -5.7220458984375e-06, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -1.3470649719238281e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.91278076171875e-05, -0.00017547607421875, -0.0001583099365234375, -0.00103759765625, -1.9073486328125e-05, 0.0, -5.173549288883805e-05, -7.402856863336638e-05, -5.483625955093885e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-05, -2.6702880859375e-05, -8.392333984375e-05, -9.5367431640625e-06, 0.0, -2.7418136596679688e-05, -4.649161837733118e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.0001983642578125, -5.7220458984375e-06, -0.000186920166015625, -1.9073486328125e-06, -5.8770179748535156e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.919269561767578e-05, -1.33514404296875e-05, -0.0001354217529296875, -8.58306884765625e-05, -0.000141143798828125, 0.0, -2.09808349609375e-05, -1.33514404296875e-05, -9.478836059570312, -1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -3.62396240234375e-05, -0.00017832645971793681, -1.1920928244535389e-07, -5.9484769735718146e-05, -2.3841855067985307e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Mechanical", "Dragonling", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Mechanical", " ", "Dragonling", "<EOS>", 70, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "p", "<EOS>", 229, 110, 181, "2", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, CARD_RARITY.COMMON, minion_type=MINION_TYPE\n            .MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -9.891333816112905, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "MechanicalDragonling", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template6"}], "_type": "Call", "keywords": [{"value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -3.4332275390625e-05, -5.7220458984375e-06, -2.288818359375e-05, -3.24249267578125e-05, -5.960462772236497e-07, -2.2649765014648438e-06, -2.4437606043647975e-05, -5.7220458984375e-06, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -1.3470649719238281e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.91278076171875e-05, -0.00017547607421875, -0.0001583099365234375, -0.00103759765625, -1.9073486328125e-05, 0.0, -5.173549288883805e-05, -7.402856863336638e-05, -5.483625955093885e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-05, -2.6702880859375e-05, -9.887516975402832, -0.000102996826171875, 0.0, -2.396106719970703e-05, -8.463859558105469e-06, -3.814697265625e-06, -8.20159912109375e-05, -0.000644683837890625, -7.62939453125e-06, -0.0002307891845703125, -3.814697265625e-06, -7.081031799316406e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -2.1219253540039062e-05, -1.71661376953125e-05, -6.67572021484375e-05, -8.96453857421875e-05, -0.0001506805419921875, 0.0, -1.9073486328125e-05, -1.33514404296875e-05, -0.000217437744140625, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, -1.71661376953125e-05, -4.029247065773234e-05, -5.960462772236497e-07, -3.2663330784998834e-05, -2.3841855067985307e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Mechanical", "Dragonling", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Mechanical", " ", "Dragonling", "<EOS>", 70, 89, 88, 88, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        Minion('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL, CARD_RARITY\n            .COMMON, False, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -10.141909002167885, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "MechanicalDragonling", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template23"}, "args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -3.4332275390625e-05, -5.7220458984375e-06, -2.288818359375e-05, -3.24249267578125e-05, -5.960462772236497e-07, -2.2649765014648438e-06, -2.4437606043647975e-05, -5.7220458984375e-06, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -1.3470649719238281e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.91278076171875e-05, -0.00017547607421875, -9.636019706726074, -0.5034294128417969, -0.0001983642578125, 0.0, -2.992108420585282e-05, -8.094305667327717e-05, -1.0967249181703664e-05, 0.0, -2.47955322265625e-05, -9.34600830078125e-05, -4.9591064453125e-05, -0.0002765655517578125, -1.1444091796875e-05, 0.0, -3.123283386230469e-05, -4.410743713378906e-06, -1.9073486328125e-06, -2.47955322265625e-05, -0.0001659393310546875, -3.814697265625e-06, -0.0001850128173828125, -1.9073486328125e-06, -5.8650970458984375e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.728534698486328e-05, -1.33514404296875e-05, -0.0001277923583984375, -8.58306884765625e-05, -0.0001373291015625, 0.0, -2.09808349609375e-05, -1.33514404296875e-05, -0.000186920166015625, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -1.33514404296875e-05, -4.231902858009562e-05, -4.768370445162873e-07, -3.135202496196143e-05, -1.1920928244535389e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Mechanical", "Dragonling", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 36, 220, 66, 155, "Mechanical", " ", "Dragonling", "<EOS>", 70, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__(' Dragonling', 1, CHARACTER_CLASS.ALL, CARD_RARITY\n            .COMMON, False, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -10.339686370785039, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "MechanicalDragonling", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": " Dragonling"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -3.4332275390625e-05, -5.7220458984375e-06, -2.288818359375e-05, -3.24249267578125e-05, -5.960462772236497e-07, -2.2649765014648438e-06, -2.4437606043647975e-05, -5.7220458984375e-06, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -1.3470649719238281e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.91278076171875e-05, -0.00017547607421875, -0.0001583099365234375, -0.00103759765625, -1.9073486328125e-05, 0.0, -10.252412796020508, -0.08415374904870987, -0.00011301040649414062, -2.09808349609375e-05, -3.62396240234375e-05, -3.4332275390625e-05, -5.340576171875e-05, -7.62939453125e-06, 0.0, -2.956390380859375e-05, -6.556510470545618e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.0002040863037109375, -3.814697265625e-06, -9.72747802734375e-05, -1.9073486328125e-06, -6.0677528381347656e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.919269561767578e-05, -1.1444091796875e-05, -0.00012969970703125, -8.58306884765625e-05, -0.000141143798828125, 0.0, -2.09808349609375e-05, -1.33514404296875e-05, -0.0001850128173828125, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -1.33514404296875e-05, -4.303426612750627e-05, -4.768370445162873e-07, -3.123281931038946e-05, -1.1920928244535389e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Mechanical", "Dragonling", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, " ", "Dragonling", "<EOS>", 70, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -10.498651383042358, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "MechanicalDragonling", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "PIRATE", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -3.4332275390625e-05, -5.7220458984375e-06, -2.288818359375e-05, -3.24249267578125e-05, -5.960462772236497e-07, -2.2649765014648438e-06, -2.4437606043647975e-05, -5.7220458984375e-06, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -1.3470649719238281e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.91278076171875e-05, -0.00017547607421875, -0.0001583099365234375, -0.00103759765625, -1.9073486328125e-05, 0.0, -5.173549288883805e-05, -7.402856863336638e-05, -5.483625955093885e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-05, -2.6702880859375e-05, -8.392333984375e-05, -9.5367431640625e-06, 0.0, -2.7418136596679688e-05, -4.649161837733118e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.0001983642578125, -5.7220458984375e-06, -0.000186920166015625, -1.9073486328125e-06, -10.495123863220215, -0.0004138946533203125, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, -1.33514404296875e-05, -7.2479248046875e-05, -6.866455078125e-05, -0.0001392364501953125, 0.0, -1.71661376953125e-05, -1.52587890625e-05, -0.0001983642578125, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, -1.33514404296875e-05, -3.7789133784826845e-05, -4.768370445162873e-07, -3.2782540074549615e-05, -2.3841855067985307e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Mechanical", "Dragonling", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Mechanical", " ", "Dragonling", "<EOS>", 70, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('MechanicalMechanical Dragonling', 1,\n            CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, minion_type=\n            MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -10.546093958534975, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "MechanicalDragonling", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "MechanicalMechanical Dragonling"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -3.4332275390625e-05, -5.7220458984375e-06, -2.288818359375e-05, -3.24249267578125e-05, -5.960462772236497e-07, -2.2649765014648438e-06, -2.4437606043647975e-05, -5.7220458984375e-06, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -1.3470649719238281e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.91278076171875e-05, -0.00017547607421875, -0.0001583099365234375, -0.00103759765625, -1.9073486328125e-05, 0.0, -5.173549288883805e-05, -10.47555923461914, -0.06659986823797226, -0.000623342755716294, 0.0, -4.76837158203125e-05, -4.76837158203125e-05, -3.4332275390625e-05, -0.000110626220703125, -1.52587890625e-05, 0.0, -3.3020973205566406e-05, -2.622604142743512e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.000213623046875, -5.7220458984375e-06, -0.0002231597900390625, -1.9073486328125e-06, -5.8770179748535156e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.728534698486328e-05, -1.33514404296875e-05, -0.0001239776611328125, -9.1552734375e-05, -0.0001392364501953125, 0.0, -2.09808349609375e-05, -1.33514404296875e-05, -0.0001850128173828125, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -1.33514404296875e-05, -4.255743988323957e-05, -4.768370445162873e-07, -3.1471234251512215e-05, -1.1920928244535389e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Mechanical", "Dragonling", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Mechanical", "Mechanical", " ", "Dragonling", "<EOS>", 70, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, minion_type=spare_part_list.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -10.584526417349167, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "MechanicalDragonling", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "spare_part_list", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -3.4332275390625e-05, -5.7220458984375e-06, -2.288818359375e-05, -3.24249267578125e-05, -5.960462772236497e-07, -2.2649765014648438e-06, -2.4437606043647975e-05, -5.7220458984375e-06, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -1.3470649719238281e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.91278076171875e-05, -0.00017547607421875, -0.0001583099365234375, -0.00103759765625, -1.9073486328125e-05, 0.0, -5.173549288883805e-05, -7.402856863336638e-05, -5.483625955093885e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-05, -2.6702880859375e-05, -8.392333984375e-05, -9.5367431640625e-06, 0.0, -2.7418136596679688e-05, -4.649161837733118e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.0001983642578125, -5.7220458984375e-06, -10.58126449584961, -2.86102294921875e-05, -0.0003393888473510742, 0.0, -5.7220458984375e-06, 0.0, -1.537799835205078e-05, -9.5367431640625e-06, -0.0001068115234375, -5.91278076171875e-05, -0.0001239776611328125, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -0.0001583099365234375, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -1.1444091796875e-05, -4.065013490617275e-05, -4.768370445162873e-07, -3.1471234251512215e-05, -2.3841855067985307e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Mechanical", "Dragonling", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Mechanical", " ", "Dragonling", "<EOS>", 70, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "spare_part_list", "<EOS>", "MECH", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "class MechanicalDragonlingDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -10.624615904694274, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template11"}], "_type": "ClassDef", "name": "MechanicalDragonlingDragonling", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template14"}, {"_type": "Template7"}, {"_type": "Template6"}, {"_type": "Template27"}], "_type": "Call", "keywords": [{"value": {"attr": "MECH", "_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}}, "_type": "keyword", "arg": "minion_type"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "create_minion", "body": [{"hole1": 1, "hole0": 2, "_type": "Template3"}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -3.4332275390625e-05, -5.7220458984375e-06, -2.288818359375e-05, -3.24249267578125e-05, -5.960462772236497e-07, -2.2649765014648438e-06, -10.621269226074219, -0.00010597612708806992, -5.7220458984375e-06, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, 0.0, -1.3589859008789062e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.0001659393310546875, -0.0001773834228515625, -0.00107574462890625, -1.9073486328125e-05, 0.0, -5.280832192511298e-05, -7.05715428921394e-05, -5.602834789897315e-06, 0.0, -1.71661376953125e-05, -4.00543212890625e-05, -2.6702880859375e-05, -8.20159912109375e-05, -9.5367431640625e-06, 0.0, -2.753734588623047e-05, -4.649161837733118e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.0001926422119140625, -5.7220458984375e-06, -0.00018310546875, -1.9073486328125e-06, -5.888938903808594e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.919269561767578e-05, -1.33514404296875e-05, -0.0001354217529296875, -8.58306884765625e-05, -0.000141143798828125, 0.0, -2.09808349609375e-05, -1.33514404296875e-05, -0.000186920166015625, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -1.33514404296875e-05, -4.243823423166759e-05, -4.768370445162873e-07, -3.135202496196143e-05, -1.1920928244535389e-07, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Mechanical", "Dragonling", "Dragonling", "<EOS>", 216, 68, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 220, 66, 155, "Mechanical", " ", "Dragonling", "<EOS>", 70, 89, 88, 80, 224, 205, "minion_type", "<EOS>", 15, 116, 23, 146, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 104, 130, "create_minion", "<EOS>", 3, 203, 210, 0, 1, 202, "player", "<EOS>", 229, 110, 181, "2", "<EOS>", "1", "<EOS>", 109]}, {"inferred_code": "return Minion\n", "score": -18.84372329711914, "model_output": {"_type": "Module", "body": [{"_type": "Return", "value": {"_type": "Template23"}}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -3.4332275390625e-05, -5.7220458984375e-06, -14.382122039794922, -1.445770263671875, -1.58294677734375, -1.4328289031982422], "choice_history": [93, 145, 230, 107, 153, 36, 109]}, {"inferred_code": "", "score": -21.169084548950195, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.52587890625e-05, -3.4332275390625e-05, -21.169034957885742], "choice_history": [93, 145, 228]}], "index": 64}
{"beams": [{"inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n", "score": -1.0788363746973957, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "MindBlast", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template12"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -3.24249267578125e-05, -1.52587890625e-05, -0.0002689361572265625, -6.67572021484375e-05, -3.337860107421875e-06, -3.409384953556582e-05, -7.152555099310121e-07, -1.33514404296875e-05, -7.82012939453125e-05, -0.0007038116455078125, -3.814697265625e-06, -1.1444091796875e-05, -4.2557105189189315e-05, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.018236160278320312, -1.9073486328125e-05, -7.62939453125e-05, -6.67572021484375e-05, -1.33514404296875e-05, -8.797275222605094e-05, -2.5987625122070312e-05, -2.6583367798593827e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -8.296966552734375e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -9.918212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001277923583984375, 0.0, -3.814697265625e-06, 0.0, -0.005107879638671875, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -2.384185791015625e-06, 0.0, -1.1444091796875e-05, 0.0, -2.6345251171733253e-05, -7.152555099310121e-07, -0.3759794235229492, -3.24249267578125e-05, -0.0053691864013671875, -1.1444091796875e-05, -1.1444091796875e-05, -0.0001010894775390625, -5.7220458984375e-06, -7.62939453125e-06, -0.0074634552001953125, -4.9591064453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.6545438766479492, -2.86102294921875e-05, -9.584426879882812e-05, 0.0, -0.0031211331952363253, -9.298310033045709e-06, -0.0037463903427124023, -0.0009544359054416418, -0.0006764091085642576, -1.1920928244535389e-07, -3.814697265625e-06, -2.09808349609375e-05, -2.09808349609375e-05, -3.4332275390625e-05, 0.0, -0.0001049041748046875, -0.00014352798461914062, -1.9073486328125e-06, -5.7220458984375e-06, -0.00032806396484375, -0.0002803802490234375, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Mind", "Blast", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Mind", " ", "Blast", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 109]}, {"inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.hero.damage(player.effective_spell_damage(5),\n            self)\n", "score": -1.3741712338137333, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "MindBlast", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template12"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -3.24249267578125e-05, -1.52587890625e-05, -0.0002689361572265625, -6.67572021484375e-05, -3.337860107421875e-06, -3.409384953556582e-05, -7.152555099310121e-07, -1.33514404296875e-05, -7.82012939453125e-05, -0.0007038116455078125, -3.814697265625e-06, -1.1444091796875e-05, -4.2557105189189315e-05, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.018236160278320312, -1.9073486328125e-05, -7.62939453125e-05, -6.67572021484375e-05, -1.33514404296875e-05, -8.797275222605094e-05, -2.5987625122070312e-05, -2.6583367798593827e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -8.296966552734375e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -9.918212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001277923583984375, 0.0, -3.814697265625e-06, 0.0, -0.005107879638671875, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -2.384185791015625e-06, 0.0, -1.1444091796875e-05, 0.0, -2.6345251171733253e-05, -7.152555099310121e-07, -0.3759794235229492, -3.24249267578125e-05, -0.0053691864013671875, -1.1444091796875e-05, -1.1444091796875e-05, -0.0001010894775390625, -5.7220458984375e-06, -7.62939453125e-06, -0.0074634552001953125, -4.9591064453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.7601633071899414, -1.52587890625e-05, -0.0036373138427734375, -2.47955322265625e-05, -3.8504600524902344e-05, 0.0, -0.004093815106898546, -1.1920919860131107e-05, -0.004611372947692871, -0.0005870845634490252, -0.18298372626304626, -0.0019068877445533872, -0.0002603206958156079, -1.1920928244535389e-07, -3.814697265625e-06, -3.0517578125e-05, -2.47955322265625e-05, -1.33514404296875e-05, 0.0, -0.00017547607421875, -0.0002685785002540797, -1.9073486328125e-06, -7.62939453125e-06, -0.000286102294921875, -0.0003070831298828125, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Mind", "Blast", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Mind", " ", "Blast", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 109]}, {"inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n", "score": -2.2380092453325844, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "MindBlast", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template12"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -3.24249267578125e-05, -1.52587890625e-05, -0.0002689361572265625, -6.67572021484375e-05, -3.337860107421875e-06, -3.409384953556582e-05, -7.152555099310121e-07, -1.33514404296875e-05, -7.82012939453125e-05, -0.0007038116455078125, -3.814697265625e-06, -1.1444091796875e-05, -4.2557105189189315e-05, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.018236160278320312, -1.9073486328125e-05, -7.62939453125e-05, -6.67572021484375e-05, -1.33514404296875e-05, -8.797275222605094e-05, -2.5987625122070312e-05, -2.6583367798593827e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -8.296966552734375e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -9.918212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001277923583984375, 0.0, -3.814697265625e-06, 0.0, -0.005107879638671875, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -2.384185791015625e-06, 0.0, -1.1444091796875e-05, 0.0, -2.6345251171733253e-05, -7.152555099310121e-07, -1.1767911911010742, -6.103515625e-05, -0.24872970581054688, -3.4332275390625e-05, -7.62939453125e-06, -0.003803253173828125, -0.0005950927734375, -0.009747764095664024, -4.768370445162873e-07, -0.0009222030639648438, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.0021572113037109375, -1.9073486328125e-06, -0.0006293058395385742, -4.76837158203125e-05, -0.00011157989501953125, 0.0, -0.000102996826171875, -4.00543212890625e-05, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.018657684326171875, -1.1444091796875e-05, -0.000225067138671875, 0.0, -0.002336859703063965, 0.0, -0.004691350739449263, -5.9604644775390625e-06, -0.47034168243408203, -1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -0.22791767120361328, -1.9073486328125e-06, -0.018224716186523438, -1.9073486328125e-06, -0.0013484954833984375, -1.9073486328125e-06, -0.00011777877807617188, -1.1920928244535389e-07, -0.01360582560300827, -2.014620440604631e-05, -0.00693821907043457, -0.0016745732864364982, -0.001389616634696722, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -7.05718994140625e-05, -0.00023138521646615118, -1.9073486328125e-06, -3.814697265625e-06, -0.0002002716064453125, -0.0003376007080078125, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Mind", "Blast", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Mind", " ", "Blast", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 109]}, {"inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage.damage(player.effective_spell_damage(\n            5), self)\n", "score": -3.004983512005758, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "MindBlast", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template12"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -3.24249267578125e-05, -1.52587890625e-05, -0.0002689361572265625, -6.67572021484375e-05, -3.337860107421875e-06, -3.409384953556582e-05, -7.152555099310121e-07, -1.33514404296875e-05, -7.82012939453125e-05, -0.0007038116455078125, -3.814697265625e-06, -1.1444091796875e-05, -4.2557105189189315e-05, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.018236160278320312, -1.9073486328125e-05, -7.62939453125e-05, -6.67572021484375e-05, -1.33514404296875e-05, -8.797275222605094e-05, -2.5987625122070312e-05, -2.6583367798593827e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -8.296966552734375e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -9.918212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001277923583984375, 0.0, -3.814697265625e-06, 0.0, -0.005107879638671875, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -2.384185791015625e-06, 0.0, -1.1444091796875e-05, 0.0, -2.6345251171733253e-05, -7.152555099310121e-07, -0.3759794235229492, -3.24249267578125e-05, -0.0053691864013671875, -1.1444091796875e-05, -1.1444091796875e-05, -0.0001010894775390625, -5.7220458984375e-06, -7.62939453125e-06, -0.0074634552001953125, -4.9591064453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.7601633071899414, -1.52587890625e-05, -0.0036373138427734375, -2.47955322265625e-05, -3.8504600524902344e-05, 0.0, -0.004093815106898546, -1.1920919860131107e-05, -0.004611372947692871, -0.0005870845634490252, -1.8095285892486572, -1.1920928244535389e-07, -0.006611887831240892, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -1.71661376953125e-05, 0.0, -0.0001163482666015625, -0.00015997886657714844, -1.9073486328125e-06, -5.7220458984375e-06, -0.00030517578125, -0.00030517578125, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Mind", "Blast", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Mind", " ", "Blast", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 109]}, {"inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n", "score": -3.1587853438418136, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "MindBlast", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template12"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -3.24249267578125e-05, -1.52587890625e-05, -0.0002689361572265625, -6.67572021484375e-05, -3.337860107421875e-06, -3.409384953556582e-05, -7.152555099310121e-07, -1.33514404296875e-05, -7.82012939453125e-05, -0.0007038116455078125, -3.814697265625e-06, -1.1444091796875e-05, -4.2557105189189315e-05, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.018236160278320312, -1.9073486328125e-05, -7.62939453125e-05, -6.67572021484375e-05, -1.33514404296875e-05, -8.797275222605094e-05, -2.5987625122070312e-05, -2.6583367798593827e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -8.296966552734375e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -9.918212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001277923583984375, 0.0, -3.814697265625e-06, 0.0, -0.005107879638671875, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -2.384185791015625e-06, 0.0, -1.1444091796875e-05, 0.0, -2.6345251171733253e-05, -7.152555099310121e-07, -1.1767911911010742, -6.103515625e-05, -1.548182487487793, -9.5367431640625e-06, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.004657745361328125, -6.103515625e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.21776580810546875, -2.6702880859375e-05, -0.0001327991485595703, 0.0, -0.003083830000832677, -1.5139515198825393e-05, -0.0022710561752319336, -0.0017476958455517888, -0.0007157177897170186, -1.1920928244535389e-07, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-05, -1.52587890625e-05, 0.0, -0.0001239776611328125, -0.00015461443399544805, -1.9073486328125e-06, -5.7220458984375e-06, -0.00034332275390625, -0.000308990478515625, -0.1396350860595703, -5.7220458984375e-06, -0.0006694793701171875, -0.004924774169921875, -9.5367431640625e-06, -0.0002288818359375, -0.0001697540283203125, -0.0007419586181640625, -0.000553131103515625, -3.4332275390625e-05, -0.0037527084350585938, -3.0517578125e-05, -0.0001004934310913086, -1.1920928244535389e-07, -0.002061930950731039, -8.940691259340383e-06, -0.010728426277637482, -0.0004223909054417163, -0.009933928027749062, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.000942230224609375, -0.0008680820465087891, -1.9073486328125e-06, -1.71661376953125e-05, -0.000286102294921875, -0.0003643035888671875, -7.62939453125e-06], "choice_history": [93, 145, 230, 101, 125, "Mind", "Blast", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Mind", " ", "Blast", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 109]}, {"inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        hero.damage(player.effective_spell_damage(5), self)\n", "score": -4.6653194481472156, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "MindBlast", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template12"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"id": "hero", "_type": "Name"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -3.24249267578125e-05, -1.52587890625e-05, -0.0002689361572265625, -6.67572021484375e-05, -3.337860107421875e-06, -3.409384953556582e-05, -7.152555099310121e-07, -1.33514404296875e-05, -7.82012939453125e-05, -0.0007038116455078125, -3.814697265625e-06, -1.1444091796875e-05, -4.2557105189189315e-05, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.018236160278320312, -1.9073486328125e-05, -7.62939453125e-05, -6.67572021484375e-05, -1.33514404296875e-05, -8.797275222605094e-05, -2.5987625122070312e-05, -2.6583367798593827e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -8.296966552734375e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -9.918212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001277923583984375, 0.0, -3.814697265625e-06, 0.0, -0.005107879638671875, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -2.384185791015625e-06, 0.0, -1.1444091796875e-05, 0.0, -2.6345251171733253e-05, -7.152555099310121e-07, -1.1767911911010742, -6.103515625e-05, -0.24872970581054688, -3.4332275390625e-05, -7.62939453125e-06, -0.003803253173828125, -0.0005950927734375, -0.009747764095664024, -4.768370445162873e-07, -0.0009222030639648438, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.0021572113037109375, -1.9073486328125e-06, -0.0006293058395385742, -4.76837158203125e-05, -0.00011157989501953125, 0.0, -0.000102996826171875, -4.00543212890625e-05, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.018657684326171875, -1.1444091796875e-05, -0.000225067138671875, 0.0, -0.002336859703063965, 0.0, -0.004691350739449263, -5.9604644775390625e-06, -0.47034168243408203, -1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -1.7149658203125, -1.9073486328125e-06, -0.9244041442871094, -0.00015281631203833967, -0.05809880420565605, 0.0, -4.38690185546875e-05, -5.340576171875e-05, -5.7220458984375e-06, -0.0005207061767578125, -1.9073486328125e-06, -0.0001583099365234375, -0.0001672506332397461, 0.0, -1.9073486328125e-06, -0.0002040863037109375, -0.0006580352783203125, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Mind", "Blast", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Mind", " ", "Blast", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "hero", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 109]}, {"inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.append(game.other_player.hero)\n", "score": -4.8550830034130215, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "MindBlast", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template12"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "Expr", "value": {"func": {"attr": "append", "_type": "Attribute", "value": {"id": "targets", "_type": "Name"}}, "args": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -3.24249267578125e-05, -1.52587890625e-05, -0.0002689361572265625, -6.67572021484375e-05, -3.337860107421875e-06, -3.409384953556582e-05, -7.152555099310121e-07, -1.33514404296875e-05, -7.82012939453125e-05, -0.0007038116455078125, -3.814697265625e-06, -1.1444091796875e-05, -4.2557105189189315e-05, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.018236160278320312, -1.9073486328125e-05, -7.62939453125e-05, -6.67572021484375e-05, -1.33514404296875e-05, -8.797275222605094e-05, -2.5987625122070312e-05, -2.6583367798593827e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -8.296966552734375e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -9.918212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001277923583984375, 0.0, -3.814697265625e-06, 0.0, -0.005107879638671875, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -2.384185791015625e-06, 0.0, -1.1444091796875e-05, 0.0, -2.6345251171733253e-05, -7.152555099310121e-07, -1.1767911911010742, -6.103515625e-05, -0.24872970581054688, -3.4332275390625e-05, -7.62939453125e-06, -0.003803253173828125, -0.0005950927734375, -0.009747764095664024, -4.768370445162873e-07, -0.0009222030639648438, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.0021572113037109375, -1.9073486328125e-06, -0.0006293058395385742, -4.76837158203125e-05, -0.00011157989501953125, 0.0, -0.000102996826171875, -4.00543212890625e-05, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.018657684326171875, -1.1444091796875e-05, -0.000225067138671875, 0.0, -0.002336859703063965, 0.0, -0.004691350739449263, -5.9604644775390625e-06, -0.47034168243408203, -1.33514404296875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -1.7149658203125, -1.9073486328125e-06, -0.6578739881515503, -5.006777428206988e-06, -0.2544735372066498, -4.768370445162873e-07, -5.340576171875e-05, -0.0005846023559570312, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0003223419189453125, -4.76837158203125e-05, -8.893013000488281e-05, -1.1920928244535389e-07, -0.25289392471313477, -8.10622896096902e-06, -0.007800977677106857, -6.616044993279502e-05, 0.0], "choice_history": [93, 145, 230, 101, 125, "Mind", "Blast", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Mind", " ", "Blast", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 102, 128, 18, 123, 15, 116, 23, 146, "targets", "<EOS>", "append", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 109]}, {"inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.hero.damage(player.effective_spell_damage(5),\n            self)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n", "score": -4.966828460174369, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "MindBlast", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template12"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -3.24249267578125e-05, -1.52587890625e-05, -0.0002689361572265625, -6.67572021484375e-05, -3.337860107421875e-06, -3.409384953556582e-05, -7.152555099310121e-07, -1.33514404296875e-05, -7.82012939453125e-05, -0.0007038116455078125, -3.814697265625e-06, -1.1444091796875e-05, -4.2557105189189315e-05, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.018236160278320312, -1.9073486328125e-05, -7.62939453125e-05, -6.67572021484375e-05, -1.33514404296875e-05, -8.797275222605094e-05, -2.5987625122070312e-05, -2.6583367798593827e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -8.296966552734375e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -9.918212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001277923583984375, 0.0, -3.814697265625e-06, 0.0, -0.005107879638671875, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -2.384185791015625e-06, 0.0, -1.1444091796875e-05, 0.0, -2.6345251171733253e-05, -7.152555099310121e-07, -1.1767911911010742, -6.103515625e-05, -1.548182487487793, -9.5367431640625e-06, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.004657745361328125, -6.103515625e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.7053899765014648, -0.000125885009765625, -0.0038242340087890625, -2.47955322265625e-05, -4.506111145019531e-05, 0.0, -0.005562575068324804, -1.7046884750016034e-05, -0.003452688455581665, -0.0014275740832090378, -0.16119888424873352, -0.00326845096424222, -0.0003232444869354367, -1.1920928244535389e-07, -3.814697265625e-06, -4.00543212890625e-05, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -0.0002288818359375, -0.00033354750485159457, -1.9073486328125e-06, -7.62939453125e-06, -0.0003204345703125, -0.000339508056640625, -0.2916078567504883, -7.62939453125e-06, -0.0005550384521484375, -0.0046825408935546875, -9.5367431640625e-06, -0.0001735687255859375, -0.0002231597900390625, -0.0007877349853515625, -0.000667572021484375, -2.6702880859375e-05, -0.0038194656372070312, -2.47955322265625e-05, -0.0001004934310913086, -1.1920928244535389e-07, -0.0021081853192299604, -1.0728831512096804e-05, -0.010011270642280579, -0.0005116374813951552, -0.0076656648889184, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0008869171142578125, -0.0008013248443603516, -1.9073486328125e-06, -1.52587890625e-05, -0.0002899169921875, -0.0003452301025390625, -7.62939453125e-06], "choice_history": [93, 145, 230, 101, 125, "Mind", "Blast", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Mind", " ", "Blast", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 109]}, {"inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        for i in range(0, len(game.other_player.minions)):\n            minion.damage(player.effective_spell_damage(5), self)\n", "score": -4.968847128416542, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "MindBlast", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template12"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template30"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Template31"}, {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -3.24249267578125e-05, -1.52587890625e-05, -0.0002689361572265625, -6.67572021484375e-05, -3.337860107421875e-06, -3.409384953556582e-05, -7.152555099310121e-07, -1.33514404296875e-05, -7.82012939453125e-05, -0.0007038116455078125, -3.814697265625e-06, -1.1444091796875e-05, -4.2557105189189315e-05, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.018236160278320312, -1.9073486328125e-05, -7.62939453125e-05, -6.67572021484375e-05, -1.33514404296875e-05, -8.797275222605094e-05, -2.5987625122070312e-05, -2.6583367798593827e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -8.296966552734375e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -9.918212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001277923583984375, 0.0, -3.814697265625e-06, 0.0, -0.005107879638671875, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -2.384185791015625e-06, 0.0, -1.1444091796875e-05, 0.0, -2.6345251171733253e-05, -7.152555099310121e-07, -1.1767911911010742, -6.103515625e-05, -0.24872970581054688, -3.4332275390625e-05, -7.62939453125e-06, -0.003803253173828125, -0.0005950927734375, -0.009747764095664024, -4.768370445162873e-07, -0.0009222030639648438, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.0021572113037109375, -1.9073486328125e-06, -0.0006293058395385742, -4.76837158203125e-05, -0.00011157989501953125, 0.0, -0.000102996826171875, -4.00543212890625e-05, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.018657684326171875, -1.1444091796875e-05, -0.000225067138671875, 0.0, -0.002336859703063965, 0.0, -0.004691350739449263, -5.9604644775390625e-06, -1.3110895156860352, -9.1552734375e-05, -0.04409980773925781, -0.000156402587890625, -0.007876988500356674, -2.0265579223632812e-06, -0.010576248168945312, -1.1444091796875e-05, -4.76837158203125e-05, -3.4332275390625e-05, -0.000945442181546241, -2.3245811462402344e-05, -1.9073486328125e-05, -0.0002307891845703125, -0.8204832077026367, -0.0005970001220703125, -0.17546844482421875, -1.33514404296875e-05, -0.013933181762695312, -0.0003910064697265625, -3.814697265625e-06, -0.002567291259765625, -1.9073486328125e-05, -0.0002689361572265625, -1.71661376953125e-05, -0.000370025634765625, -4.76837158203125e-05, -0.00014317035675048828, 0.0, -0.005373597145080566, -2.0265579223632812e-06, -0.016402466222643852, -1.2278556823730469e-05, -0.000217437744140625, -0.9876718521118164, 0.0, -0.0009326934814453125, -3.814697265625e-05, -3.814697265625e-06, 0.0, -0.07087230682373047, -0.0010821777395904064, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -0.00038909912109375, -0.00021958351135253906, 0.0, -3.814697265625e-06, -0.0001964569091796875, -0.000354766845703125, -3.814697265625e-06], "choice_history": [93, 145, 230, 101, 125, "Mind", "Blast", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Mind", " ", "Blast", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 103, 129, 23, 146, "i", "<EOS>", 18, 123, 23, 146, "range", "<EOS>", 217, 83, 58, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 41, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 109]}, {"inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(5), self)\n", "score": -5.336472983403155, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "MindBlast", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template12"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"_type": "Template8"}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -3.24249267578125e-05, -1.52587890625e-05, -0.0002689361572265625, -6.67572021484375e-05, -3.337860107421875e-06, -3.409384953556582e-05, -7.152555099310121e-07, -1.33514404296875e-05, -7.82012939453125e-05, -0.0007038116455078125, -3.814697265625e-06, -1.1444091796875e-05, -4.2557105189189315e-05, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.018236160278320312, -1.9073486328125e-05, -7.62939453125e-05, -6.67572021484375e-05, -1.33514404296875e-05, -8.797275222605094e-05, -2.5987625122070312e-05, -2.6583367798593827e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -8.296966552734375e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -9.918212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001277923583984375, 0.0, -3.814697265625e-06, 0.0, -0.005107879638671875, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -2.384185791015625e-06, 0.0, -1.1444091796875e-05, 0.0, -2.6345251171733253e-05, -7.152555099310121e-07, -0.3759794235229492, -3.24249267578125e-05, -0.0053691864013671875, -1.1444091796875e-05, -1.1444091796875e-05, -0.0001010894775390625, -5.7220458984375e-06, -7.62939453125e-06, -4.905595779418945, -1.3947389561508317e-05, -2.622604142743512e-06, -5.7220458984375e-06, -0.000244140625, -2.6702880859375e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.022757530212402344, -0.00010323524475097656, 0.0, -9.5367431640625e-06, -0.0003223419189453125, -0.0001735687255859375, -1.52587890625e-05], "choice_history": [93, 145, 230, 101, 125, "Mind", "Blast", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Mind", " ", "Blast", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 52, "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 109]}, {"inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.hero.damage(player.effective_spell_damage(5),\n            self)\n", "score": -5.384236388874335, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "MindBlast", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template12"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call", "keywords": [{"value": {"attr": "find_spell_target", "_type": "Attribute", "value": {"attr": "targeting", "_type": "Attribute", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "_type": "keyword", "arg": "target_func"}]}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -3.24249267578125e-05, -1.52587890625e-05, -0.0002689361572265625, -6.67572021484375e-05, -3.337860107421875e-06, -3.409384953556582e-05, -7.152555099310121e-07, -1.33514404296875e-05, -7.82012939453125e-05, -0.0007038116455078125, -3.814697265625e-06, -1.1444091796875e-05, -4.2557105189189315e-05, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -4.014228820800781, -1.9073486328125e-06, -0.0001220703125, -7.43865966796875e-05, -1.33514404296875e-05, -5.006664650863968e-05, -2.396106719970703e-05, -4.160325261182152e-05, -2.0265579223632812e-06, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.52587890625e-05, 0.0, -0.00010561943054199219, 0.0, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -9.918212890625e-05, 0.0, -0.0054645538330078125, 0.0, -0.001861572265625, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -4.1961669921875e-05, 0.0, -7.62939453125e-06, -1.71661376953125e-05, -8.20159912109375e-05, -1.9073486328125e-06, -0.000125885009765625, -1.9073486328125e-06, -0.44478344917297363, -1.9073486328125e-06, -2.86102294921875e-05, -0.0001068115234375, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.005482673645019531, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.741813204920618e-06, 0.0, -7.62939453125e-06, 0.0, -9.47713851928711e-05, -7.152555099310121e-07, -0.4347848892211914, -5.14984130859375e-05, -2.288818359375e-05, -9.5367431640625e-06, -1.71661376953125e-05, -4.57763671875e-05, -9.5367431640625e-06, -2.288818359375e-05, -0.0724334716796875, -0.000110626220703125, -3.814697265625e-06, -1.9073486328125e-06, -0.20252037048339844, -1.71661376953125e-05, -0.00585174560546875, -2.86102294921875e-05, -3.075599670410156e-05, 0.0, -0.0031618201173841953, -1.1682502190524247e-05, -0.00570562481880188, -0.00045803788816556334, -0.1806783527135849, -0.0022687921300530434, -0.00024077482521533966, -1.1920928244535389e-07, -3.814697265625e-06, -3.24249267578125e-05, -2.47955322265625e-05, -1.71661376953125e-05, 0.0, -0.0002079010009765625, -0.00029230114887468517, -1.9073486328125e-06, -5.7220458984375e-06, -0.000274658203125, -0.0003414154052734375, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Mind", "Blast", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 124, 50, 219, 66, 155, "Mind", " ", "Blast", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 224, 205, "target_func", "<EOS>", 15, 116, 15, 116, 23, 146, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 230, 108, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 109]}, {"inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        if player.hero.health > 0:\n            game.other_player.hero.damage(player.effective_spell_damage(5),\n                self)\n        else:\n            game.other_player.hero.damage(player.effective_spell_damage(5),\n                self)\n", "score": -5.454633951416625, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "MindBlast", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template12"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"_type": "If", "test": {"left": {"attr": "health", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"_type": "Template19"}}}, "_type": "Compare", "comparators": [{"_type": "Num", "n": 0}], "ops": [{"_type": "Gt"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}], "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -3.24249267578125e-05, -1.52587890625e-05, -0.0002689361572265625, -6.67572021484375e-05, -3.337860107421875e-06, -3.409384953556582e-05, -7.152555099310121e-07, -1.33514404296875e-05, -7.82012939453125e-05, -0.0007038116455078125, -3.814697265625e-06, -1.1444091796875e-05, -4.2557105189189315e-05, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.018236160278320312, -1.9073486328125e-05, -7.62939453125e-05, -6.67572021484375e-05, -1.33514404296875e-05, -8.797275222605094e-05, -2.5987625122070312e-05, -2.6583367798593827e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -8.296966552734375e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -9.918212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001277923583984375, 0.0, -3.814697265625e-06, 0.0, -0.005107879638671875, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -2.384185791015625e-06, 0.0, -1.1444091796875e-05, 0.0, -2.6345251171733253e-05, -7.152555099310121e-07, -1.1767911911010742, -6.103515625e-05, -0.24872970581054688, -3.4332275390625e-05, -7.62939453125e-06, -0.003803253173828125, -0.0005950927734375, -0.009747764095664024, -4.768370445162873e-07, -0.0009222030639648438, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.0021572113037109375, -1.9073486328125e-06, -0.0006293058395385742, -4.76837158203125e-05, -0.00011157989501953125, 0.0, -0.000102996826171875, -4.00543212890625e-05, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.018657684326171875, -1.1444091796875e-05, -0.000225067138671875, 0.0, -0.002336859703063965, 0.0, -0.004691350739449263, -5.9604644775390625e-06, -2.2595739364624023, -0.03769969940185547, -0.007952690124511719, -0.0004634857177734375, -0.016862869262695312, -1.1444091796875e-05, -0.0006427764892578125, -3.814697265625e-06, -0.32724666595458984, -0.010326981544494629, -2.0265579223632812e-06, -0.1491556316614151, -1.9073486328125e-06, -5.340576171875e-05, -0.09303855895996094, -4.57763671875e-05, -0.39017677307128906, -0.011671066284179688, -0.0017008311115205288, -0.07099147140979767, -0.013409614562988281, -0.40310192108154297, -0.000354766845703125, -0.000156402587890625, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.005351066589355469, -0.0001239776611328125, -0.000720977783203125, -0.0001277923583984375, -0.08275985717773438, -9.5367431640625e-05, -0.00018703936075326055, -2.3841855067985307e-07, -0.0025887538213282824, -1.0609614946588408e-05, -0.004282891750335693, -0.0024833327624946833, -0.0007170719327405095, -4.410743713378906e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.000148773193359375, -0.0002586841583251953, -3.814697265625e-06, -7.62939453125e-06, -0.0002384185791015625, -0.0002651214599609375, -0.000492095947265625, -0.018280029296875, -1.52587890625e-05, -9.34600830078125e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0013036727905273438, -4.57763671875e-05, -0.001422882080078125, -4.1961669921875e-05, -0.024941444396972656, -5.14984130859375e-05, -0.00013113021850585938, -1.1920928244535389e-07, -0.0018227705731987953, -9.059900548891164e-06, -0.010657578706741333, -0.0010950610740110278, -0.0013800065498799086, -1.1920928244535389e-07, -7.62939453125e-06, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0011348724365234375, -0.0005701780319213867, -1.9073486328125e-06, -1.33514404296875e-05, -0.00028228759765625, -0.000225067138671875, -5.7220458984375e-06], "choice_history": [93, 145, 230, 101, 125, "Mind", "Blast", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Mind", " ", "Blast", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 105, 134, 19, 126, 15, 116, 15, 116, 32, "hero", "<EOS>", "health", "<EOS>", 213, 7, 216, 65, 151, "hero", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 229, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 109]}, {"inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        for i in range(0, len(game.other_player.minions)):\n            if game.other_player.minions.<UNK> > 0:\n                game.other_player.hero.damage(player.effective_spell_damage\n                    (5), self)\n", "score": -6.995797740075638, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "MindBlast", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template12"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "If", "test": {"left": {"attr": "<UNK>", "_type": "Attribute", "value": {"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "_type": "Compare", "comparators": [{"_type": "Template31"}], "ops": [{"_type": "Gt"}]}, "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Template31"}, {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -3.24249267578125e-05, -1.52587890625e-05, -0.0002689361572265625, -6.67572021484375e-05, -3.337860107421875e-06, -3.409384953556582e-05, -7.152555099310121e-07, -1.33514404296875e-05, -7.82012939453125e-05, -0.0007038116455078125, -3.814697265625e-06, -1.1444091796875e-05, -4.2557105189189315e-05, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.018236160278320312, -1.9073486328125e-05, -7.62939453125e-05, -6.67572021484375e-05, -1.33514404296875e-05, -8.797275222605094e-05, -2.5987625122070312e-05, -2.6583367798593827e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -8.296966552734375e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -9.918212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001277923583984375, 0.0, -3.814697265625e-06, 0.0, -0.005107879638671875, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -2.384185791015625e-06, 0.0, -1.1444091796875e-05, 0.0, -2.6345251171733253e-05, -7.152555099310121e-07, -1.1767911911010742, -6.103515625e-05, -0.24872970581054688, -3.4332275390625e-05, -7.62939453125e-06, -0.003803253173828125, -0.0005950927734375, -0.009747764095664024, -4.768370445162873e-07, -0.0009222030639648438, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.0021572113037109375, -1.9073486328125e-06, -0.0006293058395385742, -4.76837158203125e-05, -0.00011157989501953125, 0.0, -0.000102996826171875, -4.00543212890625e-05, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.018657684326171875, -1.1444091796875e-05, -0.000225067138671875, 0.0, -0.002336859703063965, 0.0, -0.004691350739449263, -5.9604644775390625e-06, -1.3110895156860352, -9.1552734375e-05, -0.04409980773925781, -0.000156402587890625, -0.007876988500356674, -2.0265579223632812e-06, -0.010576248168945312, -1.1444091796875e-05, -4.76837158203125e-05, -3.4332275390625e-05, -0.000945442181546241, -2.3245811462402344e-05, -1.9073486328125e-05, -0.0002307891845703125, -0.8204832077026367, -0.0005970001220703125, -0.17546844482421875, -1.33514404296875e-05, -0.013933181762695312, -0.0003910064697265625, -3.814697265625e-06, -0.002567291259765625, -1.9073486328125e-05, -0.0002689361572265625, -1.71661376953125e-05, -0.000370025634765625, -4.76837158203125e-05, -0.00014317035675048828, 0.0, -0.005373597145080566, -2.0265579223632812e-06, -0.016402466222643852, -1.2278556823730469e-05, -0.000217437744140625, -0.4676036834716797, -0.002002716064453125, -0.005414009094238281, -6.4849853515625e-05, -0.18785858154296875, -0.0005950927734375, -3.814697265625e-05, -9.5367431640625e-06, -0.058544158935546875, -3.814697265625e-06, -0.02268695831298828, -1.9073486328125e-06, -0.02954864501953125, -1.1920928244535389e-07, -0.0036575563717633486, -1.0728830375228426e-06, -1.006974220275879, -4.410734163684538e-06, -0.34620407223701477, -9.536714060232043e-06, -3.814697265625e-06, -0.13219165802001953, -2.09808349609375e-05, -0.560389518737793, -0.002208709716796875, -0.000164031982421875, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001068115234375, -9.5367431640625e-06, 0.0, -0.2466583251953125, 0.0, -0.00016021728515625, 0.0, -0.002460479736328125, -5.7220458984375e-06, -0.0001225471351062879, -1.1920928244535389e-07, -0.006880022585391998, -2.014620440604631e-05, -0.0036697983741760254, -0.0010627940064296126, -0.000536006991751492, -1.1920928244535389e-07, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -6.4849853515625e-05, -0.0002467631420586258, -3.814697265625e-06, -3.814697265625e-06, -0.0002231597900390625, -0.000286102294921875, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Mind", "Blast", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Mind", " ", "Blast", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 103, 129, 23, 146, "i", "<EOS>", 18, 123, 23, 146, "range", "<EOS>", 217, 83, 58, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 105, 133, 19, 126, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", 213, 7, 216, 83, 229, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 109]}, {"inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        for i in range(0, len(game.other_player.minions)):\n            if game.other_player.hero.hero is not game.other_player.hero:\n                game.other_player.hero.damage(player.effective_spell_damage\n                    (5), self)\n", "score": -7.178417977698452, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template17"}], "_type": "ClassDef", "name": "MindBlast", "body": [{"args": {"_type": "Template2"}, "_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"func": {"_type": "Template4"}, "args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template12"}, {"attr": "PRIEST", "_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"attr": "FREE", "_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}}], "_type": "Call"}}]}, {"args": {"args": [{"_type": "Template10"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}], "_type": "arguments"}, "_type": "FunctionDef", "name": "use", "body": [{"_type": "Template0"}, {"_type": "Assign", "value": {"func": {"attr": "copy", "_type": "Attribute", "value": {"id": "copy", "_type": "Name"}}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}]}, {"target": {"id": "i", "_type": "Name"}, "_type": "For", "body": [{"_type": "If", "test": {"left": {"attr": "hero", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "_type": "Compare", "comparators": [{"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "ops": [{"_type": "IsNot"}]}, "body": [{"_type": "Expr", "value": {"func": {"attr": "damage", "_type": "Attribute", "value": {"attr": "hero", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"func": {"attr": "effective_spell_damage", "_type": "Attribute", "value": {"_type": "Template19"}}, "args": [{"_type": "Template22"}], "_type": "Call"}, {"_type": "Template18"}], "_type": "Call"}}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Template31"}, {"func": {"id": "len", "_type": "Name"}, "args": [{"attr": "minions", "_type": "Attribute", "value": {"attr": "other_player", "_type": "Attribute", "value": {"id": "game", "_type": "Name"}}}], "_type": "Call"}], "_type": "Call"}}]}]}, {"_type": "Template13_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -3.24249267578125e-05, -1.52587890625e-05, -0.0002689361572265625, -6.67572021484375e-05, -3.337860107421875e-06, -3.409384953556582e-05, -7.152555099310121e-07, -1.33514404296875e-05, -7.82012939453125e-05, -0.0007038116455078125, -3.814697265625e-06, -1.1444091796875e-05, -4.2557105189189315e-05, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.018236160278320312, -1.9073486328125e-05, -7.62939453125e-05, -6.67572021484375e-05, -1.33514404296875e-05, -8.797275222605094e-05, -2.5987625122070312e-05, -2.6583367798593827e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -8.296966552734375e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -9.918212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001277923583984375, 0.0, -3.814697265625e-06, 0.0, -0.005107879638671875, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -2.384185791015625e-06, 0.0, -1.1444091796875e-05, 0.0, -2.6345251171733253e-05, -7.152555099310121e-07, -1.1767911911010742, -6.103515625e-05, -0.24872970581054688, -3.4332275390625e-05, -7.62939453125e-06, -0.003803253173828125, -0.0005950927734375, -0.009747764095664024, -4.768370445162873e-07, -0.0009222030639648438, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.0021572113037109375, -1.9073486328125e-06, -0.0006293058395385742, -4.76837158203125e-05, -0.00011157989501953125, 0.0, -0.000102996826171875, -4.00543212890625e-05, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.018657684326171875, -1.1444091796875e-05, -0.000225067138671875, 0.0, -0.002336859703063965, 0.0, -0.004691350739449263, -5.9604644775390625e-06, -1.3110895156860352, -9.1552734375e-05, -0.04409980773925781, -0.000156402587890625, -0.007876988500356674, -2.0265579223632812e-06, -0.010576248168945312, -1.1444091796875e-05, -4.76837158203125e-05, -3.4332275390625e-05, -0.000945442181546241, -2.3245811462402344e-05, -1.9073486328125e-05, -0.0002307891845703125, -0.8204832077026367, -0.0005970001220703125, -0.17546844482421875, -1.33514404296875e-05, -0.013933181762695312, -0.0003910064697265625, -3.814697265625e-06, -0.002567291259765625, -1.9073486328125e-05, -0.0002689361572265625, -1.71661376953125e-05, -0.000370025634765625, -4.76837158203125e-05, -0.00014317035675048828, 0.0, -0.005373597145080566, -2.0265579223632812e-06, -0.016402466222643852, -1.2278556823730469e-05, -0.000217437744140625, -0.4676036834716797, -0.002002716064453125, -0.005414009094238281, -6.4849853515625e-05, -0.18785858154296875, -0.0005950927734375, -3.814697265625e-05, -9.5367431640625e-06, -0.058544158935546875, -3.814697265625e-06, -0.02268695831298828, -1.9073486328125e-06, -0.02954864501953125, -1.1920928244535389e-07, -0.0036575563717633486, -1.0728830375228426e-06, -0.5106404423713684, -0.00020585517631843686, -0.7948066592216492, -2.8371554435580038e-05, -2.86102294921875e-05, -0.3099336624145508, -7.05718994140625e-05, -0.14130592346191406, -0.004506111145019531, -0.21606826782226562, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.004397988319396973, 0.0, -0.052110910415649414, -1.1920928244535389e-07, -0.05462193861603737, -6.544388452311978e-05, -0.0002593994140625, -0.0044841766357421875, -7.62939453125e-06, -0.0002613067626953125, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.21305274963378906, 0.0, -0.0001373291015625, 0.0, -0.16836071014404297, -3.814697265625e-06, -0.0003104209899902344, -1.1920928244535389e-07, -0.006916574668139219, -1.1563271073100623e-05, -0.007529586553573608, -0.0016935085877776146, -0.0005917129456065595, -2.1457672119140625e-06, -1.1444091796875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -8.96453857421875e-05, -0.00024831289192661643, -1.9073486328125e-06, -3.814697265625e-06, -0.0001964569091796875, -0.00030517578125, -1.9073486328125e-06], "choice_history": [93, 145, 230, 101, 125, "Mind", "Blast", "<EOS>", 216, 73, 230, 104, 130, "__init__", "<EOS>", 2, 229, 102, 128, 18, 123, 50, 219, 66, 155, "Mind", " ", "Blast", "<EOS>", 69, 55, 116, 23, 146, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 55, 116, 23, 146, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 104, 130, "use", "<EOS>", 3, 203, 211, 0, 1, 202, "player", "<EOS>", 1, 202, "game", "<EOS>", 231, 108, 98, 115, 216, 63, 146, "targets", "<EOS>", 18, 123, 15, 116, 23, 146, "copy", "<EOS>", "copy", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 103, 129, 23, 146, "i", "<EOS>", 18, 123, 23, 146, "range", "<EOS>", 217, 83, 58, 123, 23, 146, "len", "<EOS>", 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 229, 105, 133, 19, 126, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "hero", "<EOS>", 213, 11, 216, 55, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 229, 102, 128, 18, 123, 15, 116, 15, 116, 15, 116, 23, 146, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 217, 58, 123, 15, 116, 32, "effective_spell_damage", "<EOS>", 216, 77, 74, 109]}, {"inferred_code": "", "score": -20.126922607421875, "model_output": {"_type": "Module", "body": []}, "score_history": [-2.6702880859375e-05, -3.24249267578125e-05, -20.126863479614258], "choice_history": [93, 145, 228]}], "index": 65}
