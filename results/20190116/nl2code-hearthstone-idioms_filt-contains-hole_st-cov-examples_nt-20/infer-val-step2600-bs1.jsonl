{"gold_code": "class AssassinsBlade(WeaponCard):\n\n    def __init__(self):\n        super().__init__(\"Assassin's Blade\", 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "beams": [{"inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score_history": [-0.000171661376953125, -0.03324699401855469, -0.0005620120791718364, -0.0013373539550229907, -0.02964419685304165, -0.15282432734966278, -1.7881393432617188e-05, -1.4305104514278355e-06, -1.9073486328125e-06, -0.23152732849121094, -0.0001983642578125, -0.00029921269742771983, -0.000247955322265625, -4.649161837733118e-06, -5.543231964111328e-05, -0.0009450912475585938, -3.933906555175781e-06, -0.577733039855957, 0.0, -0.0001577138900756836, 0.0, -0.0022430419921875, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -0.0011920928955078125, -0.0782003402709961, -3.0517576306010596e-05, 0.0, -8.96453857421875e-05, 0.0, -3.8623809814453125e-05, -1.1920928244535389e-07], "choice_history": [54, 122, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 132, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "score": -1.1107920333127979, "model_output": {"hole4": "player", "hole6": [{"hole1": 3, "hole0": "Weapon", "_type": "Template14", "hole2": 4}], "hole1": "WeaponCard", "hole0": "<UNK>Blade", "hole2": [{"hole3": "COMMON", "hole1": 5, "hole0": "<UNK> Blade", "_type": "Template6", "hole2": "PALADIN"}], "_type": "Template0", "hole3": "create_weapon"}}]}
{"gold_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "beams": [{"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "score_history": [-1.33514404296875e-05, -0.0001125335693359375, -0.00012218205665703863, -0.00030489146593026817, -1.2159326615801547e-05, -2.7671456336975098e-05, -1.7404556274414062e-05, -2.3841855067985307e-07, -7.62939453125e-06, -0.1549854278564453, -1.71661376953125e-05, -3.814693172898842e-06, -0.00013983159442432225, -1.1682510375976562e-05, -1.1444091796875e-05, -0.00032220256980508566, -2.503394853192731e-06, -0.00128173828125, -1.9073486328125e-06, -0.0004948375863023102, 0.0, -0.00015842914581298828, 0.0, -2.9802317840221804e-06, 0.0, -3.814697265625e-06, -0.0028285980224609375, -4.1961669921875e-05, -1.1801670552813448e-05, 0.0, -0.0039931535720825195, -1.1920928244535389e-07], "choice_history": [54, 122, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "7", "<EOS>"], "score": -0.16493147596857938, "model_output": {"hole4": "player", "hole6": [{"hole1": 7, "hole0": 6, "_type": "Template11"}], "hole1": "MinionCard", "hole0": "BoulderfistOgre", "hole2": [{"hole3": "FREE", "hole1": 6, "hole0": "Boulderfist Ogre", "_type": "Template6", "hole2": "ALL"}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.weapon.base_attack += 2\n        player.hero.change_temp_attack(2)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and player.weapon is not None\n", "beams": [{"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(2)\n", "score_history": [-1.9073486328125e-06, -0.007320404052734375, -1.5497195136049413e-06, -0.00012790363689418882, -0.0007696765242144465, -2.4996697902679443e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -7.62939453125e-06, -0.0012989044189453125, -1.52587890625e-05, -3.6954811548639555e-06, -0.00021932763047516346, -3.62396240234375e-05, -6.12733856542036e-05, -3.576275275918306e-07, -1.1920928244535389e-07, -0.8561022281646729, 0.0, -0.0004863739013671875, 0.0, -3.814697265625e-05, 0.0, -3.933906555175781e-06, 0.0, -0.0001544952392578125, -1.9073486328125e-05, -1.9669532775878906e-05, 0.0, -0.0893096923828125, -5.14984130859375e-05, -2.47955322265625e-05, -1.71661376953125e-05, -2.47955322265625e-05, -5.7220458984375e-06, 0.0, -3.933906555175781e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.6430206298828125, -0.000110626220703125, -0.000438690185546875, 0.0, -0.0001888275146484375, -1.9073486328125e-06, -0.000591278076171875, 0.0, -0.0281219482421875, 0.0, -0.1427001953125, 0.0, -0.000683903694152832, -1.9073486328125e-06, -0.000537872314453125, -0.009708404541015625, -2.86102294921875e-05, -0.5819683074951172, 0.0, -0.0031347274780273438, -3.814697265625e-06, -0.022176027297973633, 0.0, -9.5367431640625e-06, -5.7220458984375e-05, -8.7738037109375e-05, -0.5555673837661743, 0.0], "choice_history": [54, 124, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -2.945290835944192, "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template12", "hole2": "player"}, "_type": "Expr"}, {"body": [{"hole1": "change_temp_attack", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template17", "hole2": [{"n": 2, "_type": "Num"}]}], "target": {"id": "minion", "_type": "Name"}, "iter": {"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}, "_type": "For"}], "hole1": "SpellCard", "hole0": "DeadlyPoison", "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole3": "FREE", "hole1": 1, "hole0": "Deadly Poison", "_type": "Template6", "hole2": "ROGUE"}], "_type": "Template0", "hole3": "use"}}]}
{"gold_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "beams": [{"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())),\n            combo=Battlecry(Damage(3), CharacterSelector(players=BothPlayer\n            (), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score_history": [-1.9073486328125e-06, -0.0005130767822265625, -0.00011288482346571982, -2.2292097128229216e-05, -2.1457672119140625e-06, -0.0012624412775039673, -7.62939453125e-06, -1.1920928244535389e-07, -0.0007877349853515625, -0.000286102294921875, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -9.059900548891164e-06, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -1.1920922133867862e-06, -0.00012040138244628906, -3.6597251892089844e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006220038048923016, -5.0424259825376794e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0008869171142578125, -2.0265579223632812e-06, -0.825709342956543, 0.0, -0.0006465911865234375, -0.000118255615234375, -3.814697265625e-06, 0.0, -9.930133819580078e-05, 0.0, -0.00043702125549316406, 0.0, -0.1797037124633789, -0.000606536865234375, -7.62939453125e-05, -0.1033097505569458, -5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001373291015625, -1.33514404296875e-05, -8.7738037109375e-05, 0.0, -1.1444091796875e-05, -0.000263214111328125, -0.0001983642578125, -0.0007799863815307617, -8.988333138404414e-05, -0.024059217423200607, -1.9311753931106068e-05, -0.01930999755859375, -0.12662029266357422, -0.0002498626708984375, -5.340576171875e-05, -0.0025293827056884766, -8.0108642578125e-05, 0.0, -0.0022125244140625, -5.7220458984375e-06, -0.0015735626220703125, -0.00010538101196289062, 0.0, -5.14984130859375e-05, -2.09808349609375e-05, -0.0015796422958374023, -0.0001850128173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -0.0033807754516601562, 0.0, -0.005795478820800781, -9.72747802734375e-05, -0.0038232803344726562, -5.9723854064941406e-05, -2.0265579223632812e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.20662522315979004, -1.9073486328125e-05, -0.000202178955078125, -1.71661376953125e-05, -0.000110626220703125, -7.62939453125e-06, -0.0003509521484375, 0.0, -5.7220458984375e-06, -0.00014495849609375, -0.0004825592041015625, -0.015598773956298828, -7.581464888062328e-05, -0.07129307836294174, -3.993438804172911e-05, -0.0072040557861328125, -0.04427146911621094, -3.0517578125e-05, -7.2479248046875e-05, -0.0006916521233506501, -3.635883331298828e-05, 0.0, -0.012655258178710938, -1.9073486328125e-06, -7.05718994140625e-05, -0.00011515617370605469, 0.0, -4.38690185546875e-05, -1.33514404296875e-05, -0.0017570257186889648, -0.0001850128173828125, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -0.0030183792114257812, 0.0, -0.0049991607666015625, -4.9591064453125e-05, -0.0036314725875854492, -5.9723854064941406e-05, -2.0265579223632812e-06, -0.0002747774124145508, 0.0, -1.20401346066501e-05, 0.0, -7.62939453125e-06, -0.0005970001220703125, -3.814697265625e-06, -2.717969982768409e-05, -7.033323527139146e-06, -0.00042831868631765246, -7.152555099310121e-07], "choice_history": [54, 122, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Fire", " ", "Elemental", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", 53, 159, "combo", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "5", "<EOS>"], "score": -1.6842711927420098, "model_output": {"hole4": "player", "hole6": [{"hole1": 5, "hole0": 6, "_type": "Template11"}], "hole1": "MinionCard", "hole0": "FireElemental", "hole2": [{"hole3": [{"value": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"hole1": 3, "hole0": "Damage", "_type": "Template15"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template19"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template19"}, "arg": "picker", "_type": "keyword"}], "_type": "Call"}], "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}, {"value": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"hole1": 3, "hole0": "Damage", "_type": "Template15"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template19"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template19"}, "arg": "picker", "_type": "keyword"}], "_type": "Call"}], "_type": "Call"}, "arg": "combo", "_type": "keyword"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Fire Elemental", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "SHAMAN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "beams": [{"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score_history": [-1.9073486328125e-05, -3.814697265625e-06, -1.966933996300213e-05, -0.00017772559658624232, -4.887569048150908e-06, -1.1897645890712738e-07, -1.1324880688334815e-05, -3.4570634852570947e-06, -9.5367431640625e-06, -0.0001373291015625, -6.103515625e-05, -5.91278076171875e-05, -8.0108642578125e-05, -1.58548318722751e-05, 0.0, -5.054473876953125e-05, 0.0, -5.53131103515625e-05, -0.000507354736328125, -7.62939453125e-06, -1.9430925021879375e-05, -7.450580596923828e-05, -1.0967229172820225e-05, -0.000209808349609375, 0.0, 0.0, -0.00015389992040582, -1.1920928244535389e-07, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.000148773193359375, -7.748603820800781e-06, -0.0013427734375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.474422454833984e-05, 0.0, -6.902217864990234e-05, 0.0, -0.010007858276367188, -0.0007991790771484375, -5.7220458984375e-06, -0.00028705596923828125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -8.785724639892578e-05, -7.271740287251305e-06, -1.9073486328125e-06, -0.0003986358642578125, -2.288818359375e-05, -0.00029530725441873074, -0.00011538857506820932, -3.24249267578125e-05, -2.09808349609375e-05, -0.00042482433491386473, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -2.276888699270785e-05, 0.0, -7.62939453125e-06, -0.000125885009765625, -0.0001010894775390625, -2.6106754376087338e-05, -1.311301275563892e-06, -5.37621344847139e-05, -3.576278118089249e-07], "choice_history": [54, 122, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Gnomish", " ", "Inventor", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Draw", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "4", "<EOS>"], "score": -0.016223872884829404, "model_output": {"hole4": "player", "hole6": [{"hole1": 4, "hole0": 2, "_type": "Template11"}], "hole1": "MinionCard", "hole0": "GnomishInventor", "hole2": [{"hole3": [{"value": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"hole0": "Draw", "_type": "Template19"}, {"hole0": "PlayerSelector", "_type": "Template19"}], "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Gnomish Inventor", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(4)\n", "beams": [{"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n", "score_history": [-9.5367431640625e-06, -1.9073486328125e-05, -1.1920922133867862e-06, -1.871571657829918e-05, -0.00011705689394148067, -7.2623370215296745e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -0.0010433197021484375, -3.814697265625e-06, -2.539125671319198e-05, -0.0002654536801856011, -9.655952453613281e-06, -2.6702880859375e-05, -2.3841855067985307e-07, -5.960462772236497e-07, -0.5507745742797852, 0.0, -0.000738978385925293, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -8.7738037109375e-05, -0.00010609625314828008, -2.5272369384765625e-05, -0.050177574157714844, -0.0005283355712890625, -5.7220458984375e-06, -3.62396240234375e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -7.748603820800781e-06, -1.33514404296875e-05, -3.933906555175781e-06, -5.7220458984375e-06, 0.0, 0.0, -1.2278556823730469e-05, 0.0, -0.000469207763671875, -0.000202178955078125, -0.000949859619140625, -0.0001125335693359375, -5.14984130859375e-05, 0.0, -0.000408172607421875, 0.0, -0.0010577378561720252, -2.503394853192731e-06, -0.0106886625289917, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001697540283203125, -1.9073486328125e-06, -0.15288551151752472, -1.9073486328125e-06, -0.0002117156982421875, -0.0004482269287109375, -0.0006246566772460938, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -6.67572021484375e-05, -1.1920928244535389e-07, -0.003549316432327032, -2.9802317840221804e-06, -0.22354555130004883, 0.0, -3.0517578125e-05, -0.0008678436279296875, -5.7220458984375e-06, -0.03494875878095627, -1.3470649719238281e-05], "choice_history": [54, 124, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -1.0355431417340455, "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template12", "hole2": "player"}, "_type": "Expr"}, {"hole1": "change_temp_attack", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "_type": "Template17", "hole2": [{"n": 2, "_type": "Num"}]}, {"hole1": "change_temp_attack", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "_type": "Template17", "hole2": [{"n": 2, "_type": "Num"}]}], "hole1": "SpellCard", "hole0": "HeroicStrike", "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole3": "FREE", "hole1": 2, "hole0": "Heroic Strike", "_type": "Template6", "hole2": "PALADIN"}], "_type": "Template0", "hole3": "use"}}]}
{"gold_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "beams": [{"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "score_history": [-7.62939453125e-06, -0.0001850128173828125, -0.0002217047003796324, -0.0005399924702942371, -2.2649765014648438e-06, -2.380693331360817e-07, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.08607101440429688, -3.814697265625e-05, -1.3470558769768104e-05, -0.0001873937580967322, -9.5367431640625e-06, -5.7220458984375e-06, -4.564778646454215e-05, -1.1920928244535389e-07, -0.003336310386657715, -3.814697265625e-06, -0.0002956341195385903, 0.0, -0.01367044448852539, 0.0, -0.06959676742553711, 0.0, 0.0, -8.392333984375e-05, -4.1961669921875e-05, -1.1920932365683257e-06, -2.6225747205899097e-05, -4.77550202049315e-06, -1.9073468138230965e-06, -0.11812245845794678, 0.0, -2.288818359375e-05, -1.52587890625e-05, -9.5367431640625e-06, 0.0], "choice_history": [54, 122, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -0.2925686222919168, "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole1": 8, "hole0": 8, "_type": "Template9", "hole2": "taunt"}], "hole1": "MinionCard", "hole0": "IronbarkProtector", "hole2": [{"hole3": "COMMON", "hole1": 8, "hole0": "Ironbark Protector", "_type": "Template6", "hole2": "DRUID"}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(2)\n        self.target.taunt = True\n", "beams": [{"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target()), self)\n        self.target.change_attack(4)\n", "score_history": [-0.000396728515625, -0.0002422332763671875, -0.0001510267611593008, -0.0003234132018405944, -0.05536825954914093, -0.00019584206165745854, -0.0784551128745079, -4.087935667484999e-05, -4.57763671875e-05, 0.0, -7.82012939453125e-05, -3.24249267578125e-05, -0.0009784698486328125, -2.86102294921875e-05, -7.62939453125e-06, -1.7404556274414062e-05, -1.9073486328125e-06, -4.005425580544397e-05, -7.62939453125e-06, -0.00020599365234375, -1.33514404296875e-05, -7.62939453125e-06, -5.1020273531321436e-05, -0.0006440877332352102, -0.0002802374365273863, -8.010863530216739e-05, -0.009564518928527832, -0.00038111142930574715, -8.10621859272942e-05, -0.00018988236843142658, -1.9073486328125e-06, -1.9073486328125e-06, -2.264960130560212e-06, -5.960462772236497e-07, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -3.6119894502917305e-05, -0.00027108192443847656, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.1552734375e-05, 0.0, -0.001110076904296875, 0.0, -0.00012969970703125, -1.9073486328125e-06, -3.814697265625e-06, -0.000186920166015625, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0002117156982421875, 0.0, -3.24249267578125e-05, -4.208087921142578e-05, -0.0010652542114257812, -4.4465065002441406e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -4.57763671875e-05, -7.62939453125e-06, -4.220008850097656e-05, -1.1920928244535389e-07, -0.06387805938720703, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -2.6702879040385596e-05, 0.0, -0.016930580139160156, -0.000156402587890625, -3.4332275390625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -7.152555099310121e-07, -1.2902498245239258, 0.0, -0.0001392364501953125, -4.9591064453125e-05, -1.33514404296875e-05, -0.000213623046875, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -5.340576171875e-05, -4.768370445162873e-07, -0.003273009555414319, 0.0, -3.814697265625e-06, -0.17510128021240234, -0.0014743804931640625, -5.7220458984375e-05, -0.00016021728515625, -0.28782081604003906, 0.0, -0.4238252639770508, 0.0, -0.10058510303497314, -2.3841855067985307e-07, -0.002269744873046875, -3.814697265625e-06, -0.02673637866973877, 0.0, -0.3221931457519531, -0.37038230895996094, -0.0005893707275390625, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, -0.0003795623779296875, 0.0, -0.000110626220703125, -7.152555099310121e-07, -0.03479337692260742, -2.2649765014648438e-06, -1.33514404296875e-05, -0.0017528533935546875, -0.0001220703125, -0.03949878364801407, 0.0], "choice_history": [54, 124, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_heal_power", "<EOS>", 169, 35, 85, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 40, 110, "self", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "4", "<EOS>"], "score": -3.3144891143666797, "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template12", "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "_type": "Template17", "hole2": [{"func": {"value": {"id": "player", "_type": "Name"}, "attr": "effective_heal_power", "_type": "Attribute"}, "args": [{"func": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "_type": "Call"}], "_type": "Call"}, {"id": "self", "_type": "Name"}]}, {"hole1": "change_attack", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "_type": "Template17", "hole2": [{"n": 4, "_type": "Num"}]}], "hole1": "SpellCard", "hole0": "MarkOfTheWild", "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "DRUID", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "use"}}]}
{"gold_code": "class MultiShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            target = game.random_choice(targets)\n            targets.remove(target)\n            target.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "beams": [{"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score_history": [-5.7220458984375e-06, -0.023107528686523438, -2.3841855067985307e-07, -0.00024923557066358626, -2.2171821910887957e-05, -2.09808349609375e-05, -1.1920928244535389e-07, -0.000171661376953125, -0.000732421875, -0.0010223388671875, -7.152555099310121e-07, 0.0, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.20275604724884033, 0.0, -0.0012691020965576172, -1.1920928244535389e-07, -0.00116729736328125, 0.0, -1.1682510375976562e-05, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -1.621246337890625e-05, 0.0, -0.048786163330078125, -0.0001506805419921875, -4.00543212890625e-05, -0.0001430511474609375, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.005249977111816406, -5.7220458984375e-06, -6.103515625e-05, -1.52587890625e-05, -0.0006656646728515625, -0.009034156799316406, -1.5497207641601562e-05, -0.0001201629638671875, -1.71661376953125e-05, -0.0002918243408203125, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -0.001326918601989746, -5.960462772236497e-07, -0.0009620189666748047, -2.503394853192731e-06, -4.9591064453125e-05, -9.5367431640625e-06, 0.0, -0.0004749298095703125, 0.0, -6.29425048828125e-05, 0.0, -0.0001245736493729055, -5.7220458984375e-06, -0.0019593238830566406, -3.576278118089249e-07, -6.4849853515625e-05, -1.9073486328125e-06, -0.13970279693603516, -2.288818359375e-05, -7.62939453125e-06, 0.0, -0.002058863639831543, 0.0, -0.03441333770751953, -3.4332275390625e-05, -0.000133514404296875, 0.0, -0.0010826587677001953, -2.3841855067985307e-07, -3.814697265625e-06, -0.0002288818359375, -1.1444091796875e-05, -0.0005199908628128469, -1.9073486328125e-06, -0.006987571716308594, -0.0002307891845703125, -0.025348089635372162, 0.0, -0.009310722351074219, -3.814697265625e-05, -1.9073486328125e-06, -7.82012939453125e-05, -2.288818359375e-05, -0.0002613067626953125, -0.011809704825282097, -1.6450801922474056e-05, -3.62396240234375e-05, -2.6702880859375e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -0.0004255666281096637, -2.3841855067985307e-07, -0.006132245063781738, -0.0004589542804751545, -0.0002498626708984375, -0.000537872314453125, 0.0, -0.0075963763520121574, -1.7046926586772315e-05, -0.0005035400390625, -0.0002841949462890625, -4.1961669921875e-05, 0.0, -0.0013764082686975598, -0.000727627135347575, -0.04343877732753754, -8.34461570775602e-06, -0.0001373291015625, -0.00032806396484375, 0.0, -0.004383678548038006, -4.708655978902243e-05, -0.0005321502685546875, -0.0049686431884765625, -0.0003509521484375, -6.29425048828125e-05, -0.5667593479156494, -0.00011145447206217796, -0.0009521245956420898, -8.583032467868179e-06, -9.5367431640625e-06, -0.0003070831298828125, -6.67572021484375e-05, -7.43865966796875e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -0.001864754012785852, -2.384185791015625e-06, -0.0007023783400654793, -0.0011548995971679688, -4.00543212890625e-05, -0.0053539276123046875, -0.000217437744140625, -0.0030214935541152954, -9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.0059767961502075195, 0.0, -0.0003509521484375, -0.0002002716064453125, -0.00057220458984375, -0.0050754547119140625, -3.933906555175781e-06, -0.0010471343994140625, -1.33514404296875e-05, -0.0002689361572265625, -3.24249267578125e-05, -0.0001080036090570502, 0.0, -1.9073486328125e-05, -1.0132789611816406e-05, -3.3378546504536644e-06, -9.5367431640625e-06, -4.52994936495088e-06, -1.9073486328125e-06, -0.000179290771484375, -0.0006866455078125, -0.0001735687255859375, -0.00244140625, -0.000118255615234375, -0.000274658203125, -4.00543212890625e-05, -4.9591064453125e-05, -6.29425048828125e-05, -0.000118255615234375, -5.7220458984375e-06, -0.0002231597900390625, 0.0, -0.0010243654251098633, 0.0, -0.0003643035888671875, 0.0, -1.3947486877441406e-05, 0.0, -0.0026187896728515625, -7.62939453125e-06, -0.0015954971313476562, -1.52587890625e-05, -7.62939453125e-06, 0.0, -0.0002455711364746094, 0.0, -0.0008392333984375, -5.7220458984375e-06, 0.0, -0.0001697540283203125, 0.0, -1.52587890625e-05, 0.0, -0.000257015140959993, -1.9073486328125e-06, -0.0015015602111816406, -1.1920928244535389e-07, -4.1961669921875e-05, -2.0265579223632812e-06, -0.0001125335693359375, -0.030340194702148438, -6.103515625e-05, -0.00042724609375, 0.0, -0.5250377655029297, 0.0], "choice_history": [54, 125, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Multi-Shot", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "minions", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 93, 21, 110, "i", "<EOS>", 16, 87, 21, 110, "range", "<EOS>", 170, 42, 115, "0", "<EOS>", 42, 115, "2", "<EOS>", 183, 59, 79, 169, 40, 110, "minion", "<EOS>", 16, 87, 13, 80, 21, 110, "game", "<EOS>", "random_choice", "<EOS>", 169, 40, 110, "minions", "<EOS>", 71, 137, 21, 110, "minions", "<EOS>", "remove", "<EOS>", 169, 40, 110, "minion", "<EOS>", 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 6, 169, 42, 115, "2", "<EOS>"], "score": -1.7688445229879264, "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template12", "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "targets": [{"id": "minions", "_type": "Name"}], "_type": "Assign"}, {"body": [{"value": {"func": {"value": {"id": "game", "_type": "Name"}, "attr": "random_choice", "_type": "Attribute"}, "args": [{"id": "minions", "_type": "Name"}], "_type": "Call"}, "targets": [{"id": "minion", "_type": "Name"}], "_type": "Assign"}, {"hole1": "remove", "hole0": {"id": "minions", "_type": "Name"}, "_type": "Template17", "hole2": [{"id": "minion", "_type": "Name"}]}, {"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template17", "hole2": [{"func": {"value": {"id": "player", "_type": "Name"}, "attr": "effective_spell_damage", "_type": "Attribute"}, "args": [{"n": 3, "_type": "Num"}], "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "target": {"id": "i", "_type": "Name"}, "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "_type": "Call"}, "_type": "For"}], "hole1": "SpellCard", "hole0": "Multi-Shot", "hole5": [{"arg": "game", "_type": "arg"}], "hole7": [{"name": "can_use", "body": [{"value": {"values": [{"hole3": "game", "hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template12", "hole2": "player"}, {"comparators": [{"n": 2, "_type": "Num"}], "left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "_type": "FunctionDef", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "hole2": [{"hole3": "FREE", "hole1": 4, "hole0": "Multi-Shot", "_type": "Template6", "hole2": "MAGE"}], "_type": "Template0", "hole3": "use"}}]}
{"gold_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word: Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(2)\n        player.draw()\n", "beams": [{"inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power <UNK> Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n        self.target.increase_health(2)\n", "score_history": [-1.52587890625e-05, -2.47955322265625e-05, -8.475453068967909e-05, -0.002487894846126437, -0.0004655571829061955, -1.8954096958623268e-05, -4.291483492124826e-06, -2.09808349609375e-05, -1.1920928244535389e-07, -3.814697265625e-05, -2.288818359375e-05, -0.0003833770751953125, -5.340576171875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -7.62939453125e-06, -2.0861623852397315e-05, -1.52587890625e-05, -0.0007915496826171875, -1.9073486328125e-06, -7.82012939453125e-05, -0.002910784212872386, -0.0002727508544921875, -0.48820555210113525, -0.0072536468505859375, -0.0003849266213364899, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.867485692258924e-05, -1.0728830375228426e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -3.182877117069438e-05, -0.01851654052734375, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.728534698486328e-05, 0.0, -0.0002460479736328125, 0.0, -0.0010700225830078125, 0.0, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -7.62939453125e-05, 0.0, -5.7220458984375e-06, 0.0, -8.20159912109375e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.004431724548339844, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.6702880859375e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -7.069110870361328e-05, -1.9073486328125e-06, -0.0010776519775390625, -0.0001354217529296875, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.172325134277344e-06, 0.0, -1.1444091796875e-05, 0.0, -2.4795524950604886e-05, 0.0, -0.0011463165283203125, -0.0019807815551757812, -2.6702880859375e-05, -4.1961669921875e-05, -8.7738037109375e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.536738616588991e-07, -0.8718920946121216, 0.0, -5.7220458984375e-06, -0.00376129150390625, -0.17490482330322266, -9.34600830078125e-05, -1.1920928244535389e-07, -0.0008792877197265625, -5.7220458984375e-06, -0.020553508773446083, -0.03714783862233162, -0.0006389617919921875, -0.05233192443847656, -0.0006275177001953125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.003908753395080566, 0.0, -0.000156402587890625, -1.9073468138230965e-06, -0.26025521755218506, -1.9073486328125e-06, -1.9073486328125e-06, -0.0018825531005859375, -7.62939453125e-06, -0.8676997423171997, 0.0], "choice_history": [54, 124, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Power", " ", "<UNK>", " ", "Shield", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "<UNK>", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 169, 42, 115, "2", "<EOS>"], "score": -2.8299320583436014, "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template12", "hole2": "player"}, "_type": "Expr"}, {"hole1": "add_buff", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "_type": "Template17", "hole2": [{"hole1": {"id": "<UNK>", "_type": "Name"}, "hole0": "Buff", "_type": "Template13"}]}, {"hole1": "increase_health", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "_type": "Template17", "hole2": [{"n": 2, "_type": "Num"}]}], "hole1": "SpellCard", "hole0": "PowerWordShield", "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Power <UNK> Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PALADIN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "use"}}]}
{"gold_code": "class SenjinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "beams": [{"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-05, -0.000579546787776053, -0.00015662990335840732, -2.3841855067985307e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -5.7220458984375e-06, -0.21010589599609375, -1.52587890625e-05, -7.748573807475623e-06, -0.0001559252996230498, -5.841255187988281e-06, -1.9073486328125e-06, -4.768370445162873e-07, -1.9073486328125e-06, -0.010040283203125, 0.0, -0.0004559755325317383, 0.0, -2.86102294921875e-05, 0.0, -6.079673767089844e-06, 0.0, 0.0, -0.001148223876953125, -4.9591064453125e-05, -6.747245788574219e-05, 0.0, -0.002456661779433489, 0.0, -0.008966445922851562, 0.0, -4.76837158203125e-05, -6.29425048828125e-05, -1.728534698486328e-05, 0.0], "choice_history": [54, 122, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -0.23442107014019342, "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole1": 5, "hole0": 3, "_type": "Template9", "hole2": "taunt"}], "hole1": "MinionCard", "hole0": "Sen'jinShieldmasta", "hole2": [{"hole3": "FREE", "hole1": 4, "hole0": "Sen'jin Shieldmasta", "_type": "Template6", "hole2": "ALL"}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "beams": [{"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "score_history": [-3.814697265625e-06, -0.000431060791015625, -1.1920928244535389e-07, -8.487341256113723e-05, -0.0004549183649942279, -2.3841130314394832e-07, -9.5367431640625e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -0.08809661865234375, -7.62939453125e-06, -2.0265558760002023e-06, -0.000143403623951599, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.8596476365928538e-05, -0.21945428848266602, -1.1920928244535389e-07, -0.006538867950439453, -1.1920928244535389e-07, -2.86102294921875e-05, 0.0, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -1.1920928955078125e-05, -2.0265579223632812e-06, -0.01200103759765625, -1.1444091796875e-05, -7.62939453125e-06, -0.0001087188720703125, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.933906555175781e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.043900489807128906, -0.000865936279296875, -0.0003204345703125, -7.82012939453125e-05, -0.00335693359375, -1.9073486328125e-06, -0.0003814697265625, -3.814697265625e-06, -0.0004062652587890625, -0.00055694580078125, -0.0037424564361572266, -2.2649765014648438e-06, -0.00969016458839178, 0.0, -0.000553131103515625, -1.33514404296875e-05, -2.288818359375e-05, -0.0002536773681640625, -3.24249267578125e-05, -0.000255584716796875, -0.0001506805419921875, -5.340576171875e-05, 0.0, -4.57763671875e-05, -4.1961669921875e-05, -0.0005078315734863281, -3.933906555175781e-06, -3.814697265625e-06, -0.000102996826171875, -9.5367431640625e-06, -0.001556992414407432, -8.344646857949556e-07, -8.7738037109375e-05, -6.866455078125e-05, -0.00026035308837890625, 0.0], "choice_history": [54, 124, "Sinister", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>"], "score": -0.3948271331895228, "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template12", "hole2": "player"}, "_type": "Expr"}, {"hole1": "damage", "hole0": {"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "hero", "_type": "Attribute"}, "_type": "Template17", "hole2": [{"func": {"value": {"id": "player", "_type": "Name"}, "attr": "effective_spell_damage", "_type": "Attribute"}, "args": [{"n": 3, "_type": "Num"}], "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "hole1": "SpellCard", "hole0": "SinisterStrike", "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole3": "FREE", "hole1": 1, "hole0": "Sinister Strike", "_type": "Template6", "hole2": "PRIEST"}], "_type": "Template0", "hole3": "use"}}]}
{"gold_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Discard(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "beams": [{"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Summon(card()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -0.00044763024197891355, -5.996227264404297e-05, -8.732080459594727e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.016057968139648438, -0.0003337860107421875, -5.7220458984375e-05, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, 0.0, -6.794924956921022e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, -1.71661376953125e-05, -2.9802322387695312e-06, -6.878376007080078e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.0040464480407536e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.919269561767578e-05, -0.0004978179931640625, -1.9073486328125e-06, 0.0, -0.000118255615234375, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -0.4028700590133667, -1.1920928244535389e-07, -0.0022439956665039062, -0.000152587890625, -2.47955322265625e-05, -0.0041637420654296875, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.0010514259338378906, 0.0, -0.004975318908691406, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920922133867862e-06, -5.7220458984375e-06, -0.3282508850097656, -0.07726287841796875, -0.5224630832672119, -2.9802276912960224e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.4682847857475281, -0.06128017604351044, -3.814697265625e-06, -7.62939453125e-06, -0.0016863346099853516, -1.9073486328125e-06, 0.0, -9.655952453613281e-06, 0.0, -2.825234696501866e-05, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.2649619495496154e-05, 0.0, -4.386846558190882e-05, -3.814697265625e-06], "choice_history": [54, 122, "Succubus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Succubus", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 177, 52, 135, "DEMON", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "card", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -1.893010867742504, "model_output": {"hole4": "player", "hole6": [{"hole1": 3, "hole0": 4, "_type": "Template11"}], "hole1": "MinionCard", "hole0": "Succubus", "hole2": [{"hole3": [{"hole0": "DEMON", "_type": "Template16"}, {"value": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"hole1": {"id": "card", "_type": "Name"}, "hole0": "Summon", "_type": "Template13"}, {"hole0": "PlayerSelector", "_type": "Template19"}], "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Succubus", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARLOCK", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "beams": [{"inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7, deathrattle=Deathrattle(Summon(Thaddius()),\n            PlayerSelector(), InGraveyard(Stalagg())))\n", "score_history": [-0.000415802001953125, -0.0007839202880859375, -0.004996195901185274, -0.00027581225731410086, -2.9802317840221804e-06, -9.387731552124023e-07, -9.775161743164062e-06, -7.152555099310121e-07, -5.7220458984375e-06, -0.008680343627929688, -4.57763671875e-05, -8.344646857949556e-07, -0.0001516333722975105, -1.3709068298339844e-05, -1.5258787243510596e-05, -3.3864856959553435e-05, -1.9073468138230965e-06, -3.24249267578125e-05, 0.0, -6.306159775704145e-05, 0.0, -1.33514404296875e-05, 0.0, -3.910063605871983e-05, 0.0, -3.814697265625e-06, -0.0852813720703125, -2.09808349609375e-05, -1.609315222594887e-05, 0.0, -7.160488166846335e-07, -1.1920928244535389e-07, -0.05914163589477539, 0.0, -0.004965782165527344, -3.24249267578125e-05, -8.96453857421875e-05, -1.9073486328125e-06, -0.0008164644241333008, -0.00042557716369628906, -0.0028896331787109375, -0.01882457733154297, -0.0003452301025390625, -0.0007358789443969727, -2.47955322265625e-05, -3.814697265625e-06, 0.0, -0.007551928982138634, -4.804092168342322e-05, -0.0001087188720703125, -5.7220458984375e-06, -0.0001468658447265625, -7.05718994140625e-05, -1.9073486328125e-06, -0.0008907318115234375, -0.00229644775390625, -0.0014592409133911133, -0.0028498172760009766, -0.05461883544921875, -1.33514404296875e-05, -7.62939453125e-06, -0.7121189832687378, -0.0030465126037597656], "choice_history": [54, 122, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "7", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 171, 46, 128, "Summon", "<EOS>", 21, 110, "Thaddius", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", 46, 128, "In", "Graveyard", "<EOS>", 21, 110, "Stalagg", "<EOS>"], "score": -0.9744388973439229, "model_output": {"hole4": "player", "hole6": [{"hole3": {"func": {"id": "Deathrattle", "_type": "Name"}, "args": [{"hole1": {"id": "Thaddius", "_type": "Name"}, "hole0": "Summon", "_type": "Template13"}, {"hole0": "PlayerSelector", "_type": "Template19"}, {"hole1": {"id": "Stalagg", "_type": "Name"}, "hole0": "InGraveyard", "_type": "Template13"}], "_type": "Call"}, "hole1": 7, "hole0": 7, "_type": "Template9", "hole2": "deathrattle"}], "hole1": "MinionCard", "hole0": "WarGolem", "hole2": [{"hole3": "COMMON", "hole1": 7, "hole0": "War Golem", "_type": "Template6", "hole2": "ALL"}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(CharacterDamaged(\n            MinionIsNotTarget(), BothPlayer()), [ActionTag(Kill(),\n            TargetSelector())])])\n", "beams": [{"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(MinionPlaced(IsType(MINION_TYPE\n            .BEAST)), ActionTag(Summon(Acidmaw()), PlayerSelector()))])\n", "score_history": [-1.9073486328125e-06, -0.000179290771484375, -9.369690087623894e-05, -1.1563301086425781e-05, -0.0005919337272644043, -7.62939453125e-06, 0.0, -0.000865936279296875, -0.000152587890625, -0.000217437744140625, -0.0001430511474609375, 0.0, -1.9073486328125e-06, 0.0, -1.3589859008789062e-05, 0.0, -0.18029022216796875, -2.6702880859375e-05, -6.866455078125e-05, -1.7881390022012056e-06, -3.826618194580078e-05, -0.0001049041748046875, -1.9073486328125e-06, -0.0001885750243673101, -1.2874520507466514e-05, -3.814697265625e-06, -0.0006732940673828125, -7.62939453125e-06, -5.7220458984375e-06, -3.635883331298828e-05, -8.940695806813892e-06, -0.0006638765335083008, -9.536738616588991e-07, -5.7220458984375e-06, -7.62939453125e-05, -3.814697265625e-06, 0.0, -0.00013232229684945196, -1.1920928244535389e-07, -0.004871010780334473, -1.3470649719238281e-05, -0.00146484375, -4.57763671875e-05, -1.1444091796875e-05, -0.00034737581154331565, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -1.5377996533061378e-05, 0.0, -0.0001049041748046875, -0.000148773193359375, -1.1444091796875e-05, -9.894368304230738e-06, 0.0, -0.0014200832229107618, 0.0, -0.0003864765167236328, 0.0, -5.7220458984375e-06, -0.0005950927734375, -1.1682510375976562e-05, 0.0, -1.71661376953125e-05, -0.5387248992919922, -0.2717599868774414, -0.11059320718050003, -0.0039386749267578125, -2.384185791015625e-06, -1.9073486328125e-05, 0.0, -0.17133712768554688, -0.0027161836624145508, -1.33514404296875e-05, -4.1961669921875e-05, -0.000125885009765625, 0.0, -9.5367431640625e-06, 0.0, -0.0002747774124145508, -9.7632386314217e-05, -0.010492324829101562, -0.0001068115234375, -2.86102294921875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -6.4849853515625e-05, -1.52587890625e-05, 0.0, -0.0001316070556640625, -0.0026082992553710938, -0.013180732727050781, -0.14085149765014648, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.5916944146156311, -0.05934620276093483, -0.0002040863037109375, -4.57763671875e-05, -0.32256650924682617, 0.0, 0.0], "choice_history": [54, 122, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Acidmaw", "<EOS>", 42, 115, "7", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Placed", "<EOS>", 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Acidmaw", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -2.4351608135967737, "model_output": {"hole4": "player", "hole6": [{"hole3": {"hole1": [{"hole1": {"id": "IsType", "_type": "Name"}, "hole0": "MinionPlaced", "_type": "Template13", "hole2": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}]}, {"func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole1": {"id": "Acidmaw", "_type": "Name"}, "hole0": "Summon", "_type": "Template13"}, {"hole0": "PlayerSelector", "_type": "Template19"}], "_type": "Call"}], "hole0": "Effect", "_type": "Template18"}, "hole1": 2, "hole0": 4, "_type": "Template9", "hole2": "effects"}], "hole1": "MinionCard", "hole0": "Acidmaw", "hole2": [{"hole3": [{"hole0": "BEAST", "_type": "Template16"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Acidmaw", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "beams": [{"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score_history": [-1.9073486328125e-06, -0.000186920166015625, -0.0003725788265001029, -1.3828277587890625e-05, -6.288290023803711e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -0.1603260040283203, -1.9073486328125e-06, -5.006777428206988e-06, -3.981589543400332e-05, -3.778862446779385e-05, -8.96453857421875e-05, -0.000171661376953125, 0.0, -0.0017130374908447266, 0.0, -3.4332275390625e-05, 0.0, -0.005266070365905762, 0.0, -1.9073486328125e-06, -0.003215789794921875, -0.000102996826171875, -2.1457672119140625e-05, -1.1920928244535389e-07, -0.00010514167661312968, 0.0, -0.0026711225509643555, -9.5367431640625e-06, -3.0517578125e-05, -0.0001049041748046875, -1.1444091796875e-05, -7.62939453125e-06], "choice_history": [54, 122, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -0.17457415507123386, "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole1": 2, "hole0": 4, "_type": "Template9", "hole2": "charge"}], "hole1": "MinionCard", "hole0": "Boar", "hole2": [{"hole3": "COMMON", "hole1": 3, "hole0": "Boar", "_type": "Template6", "hole2": "ALL"}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, choices=[\n            Choice(AttackMode(), Give([Buff(ChangeAttack(1))]),\n            SelfSelector()), Choice(TankMode(), Give([Buff(ChangeHealth(1))\n            ]), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "beams": [{"inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "score_history": [-2.86102294921875e-05, -1.1444091796875e-05, -2.288792165927589e-05, -0.0020792868454009295, -0.0008812256273813546, -0.00012206309475004673, -1.1909287422895432e-07, -5.841255187988281e-06, -2.3841855067985307e-07, -3.814697265625e-06, -6.4849853515625e-05, -0.0002651214599609375, -2.86102294921875e-05, -9.5367431640625e-06, -2.861022494471399e-06, 0.0, -8.225440979003906e-06, 0.0, -5.91278076171875e-05, -2.09808349609375e-05, -0.0002651214599609375, -7.64102369430475e-05, -5.364418029785156e-05, -0.0013482534559443593, -0.000545501708984375, -0.0004699230194091797, -0.0006352663040161133, -1.33514404296875e-05, 0.0, -7.737810392427491e-12, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -4.649161837733118e-06, -0.0004994879709556699, -0.00019240379333496094, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -8.583065209677443e-06, -1.1920928244535389e-07, -0.00018835061928257346, 0.0, -3.814697265625e-06, -0.12528610229492188, -1.33514404296875e-05, -0.006852149963378906, 0.0, -2.288818359375e-05, 0.0, -8.344642265001312e-05, 0.0, -1.52587890625e-05, -0.06273937225341797, -1.9073486328125e-05, -1.9073486328125e-06, -2.9802276912960224e-06, -8.346069080289453e-07, -2.3841855067985307e-07, -0.26713821291923523, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -0.019351601600646973, -1.1920928244535389e-07], "choice_history": [54, 122, "Anodized", "Robo", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -0.48958375679813315, "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole1": 2, "hole0": 2, "_type": "Template9", "hole2": "taunt"}], "hole1": "MinionCard", "hole0": "AnodizedRoboCub", "hole2": [{"hole3": [{"hole0": "TOTEM", "_type": "Template16"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Anodized Robo Cub", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "DRUID", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, False, effects=[Effect(Drawn(), ActionTag(\n            Damage(10), HeroSelector())), Effect(Drawn(), ActionTag(Discard\n            (query=CardQuery(source=CARD_SOURCE.LAST_DRAWN)),\n            PlayerSelector())), Effect(Drawn(), ActionTag(Draw(),\n            PlayerSelector()))])\n\n    def use(self, player, game):\n        super().use(player, game)\n", "beams": [{"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        from hearthbreaker.cards.minions.druid import Burrowing<UNK>\n        for minion in player.minions:\n            if <UNK>(self.target.player, player.game, len(self.target.card)\n                ) == hearthbreaker.cards.minions:\n                card.summon(player, player.game, len(player.minions))\n", "score_history": [-2.288818359375e-05, -4.1961669921875e-05, -4.768370445162873e-07, -0.00010823617776622996, -0.00013863130880054086, -1.1920883480343036e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.0025577545166015625, -2.47955322265625e-05, -1.3470558769768104e-05, -0.0004432572750374675, -3.445148468017578e-05, -4.112720489501953e-05, -3.576278118089249e-07, -4.1126360883936286e-05, -0.17212748527526855, -1.1920928244535389e-07, -0.011554121971130371, 0.0, -1.0013580322265625e-05, 0.0, -2.253034290333744e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, -3.898143768310547e-05, -2.1457672119140625e-06, -0.21631622314453125, -0.00037384033203125, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.537799835205078e-05, 0.0, -2.622604142743512e-06, 0.0, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.8203678131103516, -0.00084686279296875, -0.002055821241810918, -1.9073486328125e-06, -0.006932258605957031, -0.0018291473388671875, -0.007327420637011528, -0.6899814605712891, -0.633731484413147, -0.0010379608720541, -3.576278118089249e-07, -0.10500717163085938, -0.000102996826171875, -3.0517578125e-05, 0.0, -0.019082188606262207, -1.9073486328125e-06, -0.010300636291503906, 0.0, -0.022787094116210938, 0.0, -0.7245650291442871, -1.1920928244535389e-07, -0.02818608283996582, -2.0265579223632812e-06, -7.62939453125e-05, -0.6694488525390625, -0.0006923675537109375, -0.0004482269287109375, -2.86102294921875e-05, -0.4130239486694336, -0.0026369094848632812, -0.000110626220703125, 0.0, -0.5199213027954102, -0.0014041662216186523, -0.2089242935180664, -0.47682952880859375, -3.814697265625e-06, -0.0026683807373046875, 0.0, -0.0004634857177734375, -3.814697265625e-06, -0.04480934143066406, -1.9073486328125e-06, -0.10268795490264893, -1.1920928244535389e-07, -0.15204250812530518, 0.0, -0.18809795379638672, 0.0, -0.20372772216796875, -3.62396240234375e-05, -0.030015945434570312, 0.0, -0.18043816089630127, 0.0, -0.1934041976928711, -0.0005855560302734375, -3.814697265625e-06, 0.0, -0.046586036682128906, 0.0, -0.0002727508544921875, -6.866455078125e-05, 0.0, -0.05098438262939453, 0.0, -0.0020656585693359375, -7.62939453125e-06, -0.07790279388427734, 0.0, -0.27077198028564453, 0.0, -0.21604156494140625, -9.894371032714844e-06, -0.00030517578125, -0.8695640563964844, -1.1444091796875e-05, -7.05718994140625e-05, -3.814697265625e-06, -0.521876335144043, -3.814697265625e-06, -4.76837158203125e-05, -9.5367431640625e-06, -0.6851015090942383, 0.0, -1.3536663055419922, 0.0, -0.20321714878082275, -1.9073486328125e-06, -0.000946044921875, -0.1991558074951172, -0.021440505981445312, -0.05837726593017578, -9.5367431640625e-05, -1.3693231344223022, -3.933906555175781e-06, -0.8395214080810547, -1.1920928244535389e-07, -2.6702880859375e-05, -0.008189201354980469, -6.29425048828125e-05, -0.0012302398681640625, -5.960462772236497e-07, -0.32863903045654297, 0.0, -0.011468887329101562, -3.814697265625e-06, -0.10690784454345703, 0.0, -0.0005893707275390625, 0.0, -6.4849853515625e-05, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -0.0009937286376953125, 0.0, -4.57763671875e-05, -5.7220458984375e-06, 0.0, -0.02897167205810547, 0.0, -4.00543212890625e-05, 0.0, -0.0052013397216796875, -9.5367431640625e-06], "choice_history": [54, 124, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 67, 99, "hearthbreaker.cards.minions.druid", "<EOS>", 160, 155, "Burrowing", "<UNK>", "<EOS>", "0", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 181, 66, 97, 17, 90, 16, 87, 21, 110, "<UNK>", "<EOS>", 171, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "player", "<EOS>", 32, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", 166, 4, 169, 32, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "card", "<EOS>", "summon", "<EOS>", 171, 40, 110, "player", "<EOS>", 32, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>"], "score": -14.150666422989872, "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template12", "hole2": "player"}, "_type": "Expr"}, {"module": "hearthbreaker.cards.minions.druid", "level": 0, "_type": "ImportFrom", "names": [{"name": "Burrowing<UNK>", "_type": "alias"}]}, {"body": [{"test": {"comparators": [{"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "cards", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "left": {"func": {"id": "<UNK>", "_type": "Name"}, "args": [{"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "player", "_type": "Attribute"}, {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "card", "_type": "Attribute"}], "_type": "Call"}], "_type": "Call"}, "ops": [{"_type": "Eq"}], "_type": "Compare"}, "body": [{"hole1": "summon", "hole0": {"id": "card", "_type": "Name"}, "_type": "Template17", "hole2": [{"id": "player", "_type": "Name"}, {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}]}], "_type": "If"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}, "_type": "For"}], "hole1": "SpellCard", "hole0": "BurrowingMine", "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole3": "COMMON", "hole1": 0, "hole0": "Burrowing Mine", "_type": "Template6", "hole2": "HUNTER"}], "_type": "Template0", "hole3": "use"}}]}
{"gold_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(game.random_amount\n            (3, 6)), self)\n", "beams": [{"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score_history": [-3.814697265625e-06, -7.62939453125e-06, -9.595887240720913e-05, -4.649086622521281e-05, -9.532086551189423e-07, -8.96453857421875e-05, 0.0, -2.47955322265625e-05, -0.00011444091796875, -0.000110626220703125, -7.62939453125e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.9431114196777344e-05, 0.0, -0.0001201629638671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.0728830375228426e-06, -7.62939453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.3841852225814364e-07, -1.1801649634435307e-05, -1.9073486328125e-06, 0.0, -2.288818359375e-05, 0.0, -0.0001735687255859375, -2.0265579223632812e-06, -0.04232501983642578, 0.0, -1.9073486328125e-06, -9.72747802734375e-05, -1.71661376953125e-05, 0.0, -3.0517578125e-05, 0.0, -0.0012516975402832031, 0.0, -0.2552957534790039, -1.52587890625e-05, -9.918212890625e-05, -0.0002269744873046875, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0001544952392578125, 0.0, -3.421306610107422e-05, -2.503394853192731e-06, -0.0006501674652099609, -1.049041748046875e-05, -1.52587890625e-05, -1.71661376953125e-05, -0.007107973098754883, -6.4849853515625e-05, -2.6702880859375e-05, 0.0, -0.20968273282051086, -1.9073486328125e-06, -3.445148468017578e-05, 0.0, -3.814697265625e-06, 0.0, -3.24249267578125e-05, -7.62939453125e-06, -4.589557647705078e-05, -9.5367431640625e-06, -0.0003452301025390625, -2.47955322265625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.218649908376392e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.2755393072438892e-05, 0.0, -0.0021514892578125, -0.000308990478515625, -7.05718994140625e-05, -1.71661376953125e-05, -2.09808349609375e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.00018310546875, 0.0, -0.00017368793487548828, 0.0, -1.1444091796875e-05, -8.392333984375e-05, -2.288818359375e-05, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -7.748603820800781e-06, -1.9073486328125e-06, -0.0008072853088378906, -2.288818359375e-05, -1.9073486328125e-06, -0.00128173828125, -3.814697265625e-06, -0.03635326400399208, -1.1920928244535389e-07, -3.814697265625e-06, -3.814697265625e-05, -0.0002346038818359375, 0.0], "choice_history": [54, 124, "Crackle", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Crackle", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 53, 159, "overload", "<EOS>", 23, 115, "2", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "6", "<EOS>", 40, 110, "self", "<EOS>"], "score": -0.560553608149398, "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template12", "hole2": "player"}, "_type": "Expr"}, {"hole1": "damage", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "_type": "Template17", "hole2": [{"func": {"value": {"id": "player", "_type": "Name"}, "attr": "effective_spell_damage", "_type": "Attribute"}, "args": [{"n": 6, "_type": "Num"}], "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "hole1": "SpellCard", "hole0": "Crackle", "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}, {"value": {"n": 2, "_type": "Num"}, "arg": "overload", "_type": "keyword"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Crackle", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "SHAMAN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "use"}}]}
{"gold_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Frozen()))\n", "beams": [{"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(minion()))\n", "score_history": [-1.1444091796875e-05, -0.002780914306640625, -1.5497195136049413e-06, -0.00011073929636040702, -0.0006547214579768479, -4.1940074879676104e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -9.5367431640625e-05, -7.2479248046875e-05, -0.0003528594970703125, -6.29425048828125e-05, -3.814697265625e-06, -4.589557647705078e-05, 0.0, -3.933906555175781e-05, 0.0, -0.003204345703125, -0.0001926422119140625, -5.7220458984375e-06, -2.145764938177308e-06, -0.00018322467803955078, -2.0384708477649838e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.240212052129209e-05, -4.529942543740617e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0002288818359375, -0.0007152557373046875, -0.0013446807861328125, 0.0, -2.86102294921875e-05, 0.0, -3.0517578125e-05, 0.0, -0.0011320114135742188, 0.0, -1.71661376953125e-05, 0.0, -4.1961669921875e-05, -0.0002880096435546875, -0.00018703937530517578, -2.0265579223632812e-06, -0.0001125335693359375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0001373291015625, 0.0, -0.00048065185546875, 0.0, -0.0001087188720703125, -9.5367431640625e-06, -0.025388002395629883, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -3.24249267578125e-05, -9.5367431640625e-06, -0.0017490386962890625, -3.4332275390625e-05, -0.0001373291015625, -4.57763671875e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -4.208087921142578e-05, 0.0, -0.000102996826171875, 0.0, -4.267692565917969e-05, 0.0, -0.0006809234619140625, -0.05683708190917969, -9.5367431640625e-06, 0.0, -3.24249267578125e-05, -4.38690185546875e-05, -1.5616416931152344e-05, -1.1444091796875e-05, -9.5367431640625e-06, -2.2411095415009186e-05, -0.3085670471191406, 0.0, -1.9073486328125e-06, -0.0010890960693359375, -0.00032806396484375, -0.00023174285888671875, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.3210172653198242, -0.0004221169219817966], "choice_history": [54, 124, "Emergency", "Coolant", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Emergency", " ", "Coolant", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "minion", "<EOS>"], "score": -0.7299457624145518, "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template12", "hole2": "player"}, "_type": "Expr"}, {"hole1": "add_buff", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "_type": "Template17", "hole2": [{"hole1": {"id": "minion", "_type": "Name"}, "hole0": "Buff", "_type": "Template13"}]}], "hole1": "SpellCard", "hole0": "EmergencyCoolant", "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Emergency Coolant", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "_type": "Template0", "hole3": "use"}}]}
{"gold_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n", "beams": [{"inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, p):\n        return Minion(1, 4, windfury=True)\n", "score_history": [0.0, -2.47955322265625e-05, -0.0013334201648831367, -0.0011016021016985178, -3.218649908376392e-06, -6.804242730140686e-06, -5.7220458984375e-06, -3.576278118089249e-07, -1.33514404296875e-05, -0.000171661376953125, -8.7738037109375e-05, -6.29425048828125e-05, -7.62939453125e-06, -1.1920928244535389e-07, 0.0, -9.775161743164062e-06, 0.0, -5.340576171875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.6491513785440475e-06, -0.00014495849609375, -1.1205658665858209e-05, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -2.753734588623047e-05, -4.768370445162873e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -0.004482269287109375, 0.0, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0003046989440917969, 0.0, -1.9431114196777344e-05, 0.0, -0.0005435943603515625, -0.0002803802490234375, -7.82012939453125e-05, -0.0013704299926757812, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.020693540573120117, 0.0, -0.001331329345703125, -0.0003185272216796875, -4.00543212890625e-05, -4.899479608866386e-05, -5.125986263010418e-06, -0.0003956554864998907, 0.0, -0.0033452510833740234, 0.0, -0.000141143798828125, -1.9073486328125e-05, -2.6702880859375e-05, 0.0], "choice_history": [54, 122, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Flying", " ", "Machine", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -0.03663224243819485, "model_output": {"hole4": "p", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole1": 4, "hole0": 1, "_type": "Template9", "hole2": "windfury"}], "hole1": "MinionCard", "hole0": "FlyingMachine", "hole2": [{"hole3": [{"hole0": "MECH", "_type": "Template16"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Flying Machine", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class GoblinAutoBarber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(IncreaseWeaponAttack(1), WeaponSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "beams": [{"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeAttack(3)), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score_history": [0.0, -4.1961669921875e-05, -0.000763363263104111, -0.00020503981795627624, -2.2649765014648438e-06, -3.291293978691101e-06, -1.6093243175419047e-05, -1.2636104656849056e-05, -4.9591064453125e-05, -0.0002899169921875, -4.38690185546875e-05, -2.86102294921875e-05, -5.7220458984375e-05, -3.4570680327306036e-06, 0.0, -2.861022494471399e-06, 0.0, -0.00019073486328125, -1.1444091796875e-05, -1.1444091796875e-05, -8.821448318485636e-06, -7.855892181396484e-05, -3.1828880310058594e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.602814326266525e-06, -1.5497195136049413e-06, 0.0, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -4.5299530029296875e-06, -0.07639515399932861, -2.3841855067985307e-07, -2.09808349609375e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001842975616455078, 0.0, -5.984305971651338e-05, 0.0, -0.0013246536254882812, -0.00017547607421875, -0.0002460479736328125, -0.0073909759521484375, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -9.40561294555664e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -2.47955322265625e-05, -7.152531907195225e-06, -0.0017547607421875, -0.010251998901367188, -0.22375774383544922, -0.0038273921236395836, -1.0251998901367188e-05, -3.24249267578125e-05, -9.5367431640625e-06, -0.6377108693122864, -0.1852532923221588, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.24396014213562012, 0.0, -0.25342655181884766, 0.0, -0.00011897031799890101, -2.0265579223632812e-06, 0.0, -1.33514404296875e-05, 0.0, -1.0490395652595907e-05, 0.0, -2.09808349609375e-05, -0.000354766845703125, -4.38690185546875e-05, -3.4570632578834193e-06, -1.6689286894688848e-06, -7.724712486378849e-05, -4.768370445162873e-07], "choice_history": [54, 122, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Goblin", " ", "Auto-Barber", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "2", "<EOS>"], "score": -1.6486196988595907, "model_output": {"hole4": "player", "hole6": [{"hole1": 2, "hole0": 3, "_type": "Template11"}], "hole1": "MinionCard", "hole0": "GoblinAuto-Barber", "hole2": [{"hole3": [{"hole0": "MECH", "_type": "Template16"}, {"value": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"hole1": {"id": "ChangeAttack", "_type": "Name"}, "hole0": "Give", "_type": "Template13", "hole2": [{"n": 3, "_type": "Num"}]}, {"hole0": "SelfSelector", "_type": "Template19"}], "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Goblin Auto-Barber", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ROGUE", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give([\n            Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]), MinionSelector(\n            IsType(MINION_TYPE.MECH), picker=RandomPicker())))])\n", "beams": [{"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(HasMech()), ActionTag\n            (Damage(2), MinionSelector(Null, BothPlayer())))])\n", "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -7.164221460698172e-05, -7.152555099310121e-07, 0.0, -1.0654330253601074e-06, -4.00543212890625e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -9.1552734375e-05, -3.62396240234375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -1.049041748046875e-05, 0.0, -3.814697265625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -2.50339189733495e-06, -3.743171691894531e-05, -6.198883056640625e-06, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.1920926823449918e-07, -4.29153169534402e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.34600830078125e-05, -2.288818359375e-05, -2.622604142743512e-06, -0.16009998321533203, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -0.00020611286163330078, -3.814697265625e-06, -0.0011768341064453125, 0.0, -4.38690185546875e-05, -3.0517578125e-05, -0.0001125335693359375, -0.0008563995361328125, -0.0001678466796875, -0.00048828125, 0.0, -4.6968445531092584e-05, 0.0, -1.71661376953125e-05, -0.0004062652587890625, -2.288818359375e-05, -6.437280717364047e-06, -1.1920928244535389e-07, -0.0013506383402273059, 0.0, -1.20401346066501e-05, -4.410743713378906e-06, -3.814697265625e-06, -0.00045013427734375, -0.00013947486877441406, -5.7220458984375e-06, -4.00543212890625e-05, -0.5585489273071289, -0.014950752258300781, -0.026034116744995117, -0.0017974376678466797, -9.5367431640625e-06, -6.866455078125e-05, 0.0, -0.212149977684021, -0.011995673179626465, -0.0033522837329655886, -0.0001049041748046875, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -9.167194366455078e-05, -1.9073486328125e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0713663101196289, -0.0001049041748046875, -0.24610567092895508, -4.017353057861328e-05, -0.016233131289482117, -3.457069396972656e-05, -0.0001010894775390625, -0.08078765869140625, -3.814697265625e-06, 0.0, -0.022130966186523438, -0.001026153564453125, -9.5367431640625e-06, -0.043712615966796875, -0.0016384124755859375, -0.000278472900390625, -5.352497100830078e-05, 0.0, -2.6702880859375e-05, 0.0, -0.017847061157226562, -4.1961669921875e-05, -0.000110626220703125], "choice_history": [54, 122, "Iron", "Sensei", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Iron", " ", "Sensei", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Turn", "Ended", "<EOS>", 21, 110, "Has", "Mech", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "2", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 170, 41, 112, "Null", "<EOS>", 50, 146, "Both", "Player", "<EOS>"], "score": -1.4970984769224032, "model_output": {"hole4": "player", "hole6": [{"hole3": {"hole1": [{"hole1": {"id": "HasMech", "_type": "Name"}, "hole0": "TurnEnded", "_type": "Template13"}, {"func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole1": 2, "hole0": "Damage", "_type": "Template15"}, {"func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"value": "Null", "_type": "NameConstant"}, {"hole0": "BothPlayer", "_type": "Template19"}], "_type": "Call"}], "_type": "Call"}], "hole0": "Effect", "_type": "Template18"}, "hole1": 2, "hole0": 2, "_type": "Template9", "hole2": "effects"}], "hole1": "MinionCard", "hole0": "IronSensei", "hole2": [{"hole3": [{"hole0": "MECH", "_type": "Template16"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Iron Sensei", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ROGUE", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class MalGanis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeHealth(2), MinionSelector(\n            IsType(MINION_TYPE.DEMON))), Aura(ChangeAttack(2),\n            MinionSelector(IsType(MINION_TYPE.DEMON))), Aura(Immune(),\n            HeroSelector())])\n", "beams": [{"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(Immune(), CharacterSelector(IsHero()))]\n            )\n", "score_history": [0.0, -3.62396240234375e-05, -8.463837730232626e-06, -5.173683166503906e-05, -2.2635795176029205e-06, -1.9073486328125e-05, 0.0, -0.000301361083984375, -0.0001735687255859375, -0.0002765655517578125, -1.1444091796875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -5.483625955093885e-06, 0.0, -0.0001068115234375, -2.288818359375e-05, -1.71661376953125e-05, -4.768370445162873e-07, -2.300739288330078e-05, -2.6702880859375e-05, -5.7220458984375e-06, -0.002151251072064042, -4.529942543740617e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0003477334976196289, -0.0063898563385009766, 0.0, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0013580322265625e-05, -1.1920928244535389e-07, -0.0012929439544677734, -1.9073486328125e-06, -0.000133514404296875, -0.000492095947265625, -5.53131103515625e-05, -0.0006923675537109375, -2.682209014892578e-05, -7.736682891845703e-05, 0.0, -9.298310033045709e-06, 0.0, -7.05718994140625e-05, -0.0074634552001953125, -2.47955322265625e-05, -2.2649765014648438e-06, -0.0006775995134375989, -0.0006740093231201172, -1.1920922133867862e-06, -0.03248941898345947, -6.747245788574219e-05, -2.288818359375e-05, -0.011325836181640625, -0.03880763053894043, -0.0004578828811645508, -8.392333984375e-05, -0.3780231475830078, -9.918212890625e-05, -0.7852404117584229, -0.01033782958984375, -0.1443157196044922, -0.18468093872070312, -0.5165870189666748, -0.009905099868774414, 0.0, -4.57763671875e-05, 0.0, -0.08624763786792755, -0.035286515951156616, -1.9073486328125e-06], "choice_history": [54, 122, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mal'Ganis", "<EOS>", 42, 115, "9", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 50, 146, "Immune", "<EOS>", 46, 128, "Character", "Selector", "<EOS>", 21, 110, "Is", "Hero", "<EOS>"], "score": -2.2557715751555563, "model_output": {"hole4": "player", "hole6": [{"hole3": {"hole1": [{"hole0": "Immune", "_type": "Template19"}, {"hole1": {"id": "IsHero", "_type": "Name"}, "hole0": "CharacterSelector", "_type": "Template13"}], "hole0": "Aura", "_type": "Template18"}, "hole1": 7, "hole0": 9, "_type": "Template9", "hole2": "auras"}], "hole1": "MinionCard", "hole0": "Mal'Ganis", "hole2": [{"hole3": [{"hole0": "DEMON", "_type": "Template16"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARLOCK", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(DidDamage(), ActionTag(Heal(\n            EventValue()), HeroSelector()))])\n", "beams": [{"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(4),\n            HeroSelector()))])\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -3.3854863431770355e-05, -0.003378294175490737, -0.002982705133035779, -3.8266116462182254e-05, -9.942054748535156e-05, -3.4332275390625e-05, 0.0, -2.47955322265625e-05, -0.000202178955078125, -0.000156402587890625, -1.33514404296875e-05, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -1.2755388524965383e-05, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -1.4305104514278355e-06, -0.00012302398681640625, -1.1682508556987159e-05, -0.00010180473327636719, -0.0003484487533569336, -0.0001735687255859375, -5.7220458984375e-06, -3.0517578125e-05, -5.245195097813848e-06, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.239776611328125e-05, -0.000247955322265625, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0003743171691894531, -2.09808349609375e-05, -0.00162506103515625, -0.0013103485107421875, -1.71661376953125e-05, -0.0004444122314453125, -6.29425048828125e-05, -0.00023484230041503906, 0.0, -1.5735622582724318e-05, 0.0, -1.33514404296875e-05, -0.0009899139404296875, -7.82012939453125e-05, -3.266334533691406e-05, -8.344646857949556e-07, -4.124539555050433e-05, 0.0, -0.00033402437111362815, -2.3841855067985307e-07, -1.33514404296875e-05, -0.000274658203125, -6.318092346191406e-05, 0.0, -8.96453857421875e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.1135711669921875, -2.431869324936997e-05, -0.03296375274658203, -3.814697265625e-06, -1.52587890625e-05, 0.0, -4.398822784423828e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0010204315185546875, -0.02050495147705078, -0.000438690185546875, -0.012589097023010254, -6.079669401515275e-05, -0.12092940509319305, -5.125998541188892e-06, -0.0003108978271484375, -9.5367431640625e-06, -0.00051116943359375, -8.7738037109375e-05, 0.0], "choice_history": [54, 122, "Mistress", "Of", "Pain", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Mistress", " ", "of", " ", "Pain", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Damaged", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "4", "<EOS>", 50, 146, "Hero", "Selector", "<EOS>"], "score": -0.3172959434598539, "model_output": {"hole4": "player", "hole6": [{"hole3": {"hole1": [{"hole0": "Damaged", "_type": "Template19"}, {"func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole1": 4, "hole0": "Heal", "_type": "Template15"}, {"hole0": "HeroSelector", "_type": "Template19"}], "_type": "Call"}], "hole0": "Effect", "_type": "Template18"}, "hole1": 4, "hole0": 1, "_type": "Template9", "hole2": "effects"}], "hole1": "MinionCard", "hole0": "MistressOfPain", "hole2": [{"hole3": [{"hole0": "DEMON", "_type": "Template16"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Mistress of Pain", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARLOCK", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Give([Buff(ChangeHealth\n            (2)), Buff(ChangeAttack(2))]), MinionSelector(IsType(\n            MINION_TYPE.MECH), picker=RandomPicker())))\n", "beams": [{"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE\n            )\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionPlaced(IsType(MINION_TYPE\n            .MECH)), ActionTag(Give(Mech()), SelfSelector()))])\n", "score_history": [-1.1444091796875e-05, -0.0001926422119140625, -3.0993964173831046e-05, -6.306171417236328e-05, -0.004145014565438032, -1.9073486328125e-05, -1.7881377516459906e-06, -2.09808349609375e-05, -0.014539718627929688, -6.103515625e-05, -1.0013554856413975e-05, -2.0265579223632812e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.2057666778564453, 0.0, -0.0004811286926269531, 0.0, -0.0031280517578125, 0.0, -1.823902130126953e-05, 0.0, -1.9073486328125e-06, -0.0002231597900390625, -2.47955322265625e-05, -4.5299530029296875e-06, -2.2888067178428173e-05, -0.00016176694771274924, -2.3841855067985307e-07, -0.2039576768875122, 0.0, -3.814697265625e-06, -0.019771575927734375, -7.748603820800781e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.0007038116455078125, -0.00371551513671875, -0.21026287972927094, -0.7596750259399414, -5.960462772236497e-07, -5.7220458984375e-05, -3.814697265625e-06, -0.4540109634399414, -0.0021680593490600586, -1.52587890625e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -4.38690185546875e-05, -0.0004451274871826172, -0.4428844451904297, -1.9073486328125e-06, -1.33514404296875e-05, -0.000164031982421875, -5.7220458984375e-06, 0.0, -0.0002880096435546875, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -0.0016927719116210938, -0.07432174682617188, -0.009089827537536621, -4.768370445162873e-07, -1.9073486328125e-05, 0.0, -0.2105775773525238, -0.1410580575466156, -0.0015773773193359375, -1.9073486328125e-06, -0.598108172416687, 0.0, 0.0], "choice_history": [54, 122, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "Powermace", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 130, "Minion", "Placed", "<EOS>", 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Give", "<EOS>", 21, 110, "Mech", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -3.3637521591025745, "model_output": {"hole4": "player", "hole6": [{"hole3": {"hole1": [{"hole1": {"id": "IsType", "_type": "Name"}, "hole0": "MinionPlaced", "_type": "Template13", "hole2": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}]}, {"func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole1": {"id": "Mech", "_type": "Name"}, "hole0": "Give", "_type": "Template13"}, {"hole0": "SelfSelector", "_type": "Template19"}], "_type": "Call"}], "hole0": "Effect", "_type": "Template18"}, "hole1": 2, "hole0": 3, "_type": "Template9", "hole2": "effects"}], "hole1": "WeaponCard", "hole0": "Powermace", "hole2": [{"hole3": "RARE", "hole1": 3, "hole0": "Powermace", "_type": "Template6", "hole2": "MAGE"}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2))]),\n            MinionSelector(IsType(MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "beams": [{"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(2)), MinionSelector(Null, picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [0.0, -1.33514404296875e-05, -0.00013553177996072918, -7.343036122620106e-05, -1.1920928244535389e-07, -8.260831236839294e-07, -1.5735626220703125e-05, -2.145764938177308e-06, -0.0011386871337890625, -0.000316619873046875, -5.91278076171875e-05, -9.72747802734375e-05, -1.1444091796875e-05, -3.933906555175781e-06, 0.0, -4.0531158447265625e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -7.390948667307384e-06, -7.832050323486328e-05, -5.7220440794480965e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.814689989667386e-06, 0.0, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.103515625e-05, -3.24249267578125e-05, -0.6043635606765747, -5.543231964111328e-05, -3.814697265625e-06, -0.003780364990234375, -1.9073486328125e-06, 0.0, -0.001251220703125, -1.9073486328125e-06, -0.0006986856460571289, -7.62939453125e-06, -0.0014581680297851562, -9.1552734375e-05, -0.000110626220703125, -0.0037527084350585938, 0.0, -2.288818359375e-05, -0.0001697540283203125, -0.0005950927734375, -1.9073486328125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -0.0003681182861328125, -1.9073486328125e-06, -3.24249267578125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, -0.06180000305175781, -0.07972145080566406, -0.0013100161449983716, -8.797645568847656e-05, -0.00031566619873046875, 0.0, -0.057050108909606934, -0.05424678325653076, -1.1920928244535389e-07, 0.0, -2.86102294921875e-05, 0.0, -0.11438309401273727, 0.0, -0.005153656005859375, -0.3256053924560547, -2.47955322265625e-05, 0.0, -0.017526626586914062, -2.09808349609375e-05, -1.9073486328125e-06, -3.24249267578125e-05, -0.35624027252197266, -1.33514404296875e-05, -4.5299530029296875e-05, -1.9073486328125e-06, -0.0007648468017578125, -2.288818359375e-05, -8.58306884765625e-05, -0.004016876220703125, -1.9073486328125e-06, -0.0002994537353515625, 0.0, -0.00573575496673584, -0.0008782148361206055, -4.768370445162873e-07, -0.4690518379211426, 0.0, -5.209329538047314e-05, 0.0, -3.62396240234375e-05, -0.0004482269287109375, -9.5367431640625e-06, -4.410734163684538e-06, -3.933898824470816e-06, -6.949900125619024e-05, -4.0888025978347287e-05], "choice_history": [54, 122, "Screwjank", "Clunker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Screwjank", " ", "Clunker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 177, 52, 135, "MECH", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 35, 88, 21, 110, "Minion", "Selector", "<EOS>", 169, 41, 112, "Null", "<EOS>", 176, 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "5", "<EOS>"], "score": -2.1741682247942293, "model_output": {"hole4": "player", "hole6": [{"hole1": 5, "hole0": 2, "_type": "Template11"}], "hole1": "MinionCard", "hole0": "ScrewjankClunker", "hole2": [{"hole3": [{"hole0": "MECH", "_type": "Template16"}, {"value": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"hole1": {"id": "ChangeHealth", "_type": "Name"}, "hole0": "Give", "_type": "Template13", "hole2": [{"n": 2, "_type": "Num"}]}, {"func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"value": "Null", "_type": "NameConstant"}], "keywords": [{"value": {"hole0": "UserPicker", "_type": "Template19"}, "arg": "picker", "_type": "keyword"}], "_type": "Call"}], "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Screwjank Clunker", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARRIOR", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class SneedsOldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sneed's Old Shredder\", 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[IsRarity(CARD_RARITY.LEGENDARY), IsMinion()])),\n            PlayerSelector()))\n", "beams": [{"inferred_code": "class SneedOldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(minion()),\n            PlayerSelector()))\n", "score_history": [-2.86102294921875e-05, -0.0001239776611328125, -0.273937463760376, -0.12495409697294235, -0.006257469765841961, -2.4318444047821686e-05, -6.540119647979736e-05, -2.682209014892578e-05, -3.576278118089249e-07, -7.62939453125e-06, -0.0001201629638671875, -0.000820159912109375, -9.5367431640625e-06, -1.9073486328125e-06, -7.033342626527883e-06, 0.0, -6.556510470545618e-06, -1.9073486328125e-06, -0.0001125335693359375, -1.71661376953125e-05, -0.0010318756103515625, -0.4873104691505432, -5.5789947509765625e-05, -0.005143295973539352, -0.0005692243576049805, -0.00035273964749649167, -0.000179290771484375, -3.814697265625e-06, 0.0, -0.00022101192735135555, -1.1920928244535389e-07, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.5272369384765625e-05, -0.00012791156768798828, -4.29153169534402e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9311904907226562e-05, 0.0, -2.1696090698242188e-05, -1.1444091796875e-05, -0.0004367828369140625, -0.00011444091796875, -1.52587890625e-05, -0.0010149478912353516, 0.0, -1.9073486328125e-05, 0.0, -5.9604644775390625e-06, 0.0, -3.24249267578125e-05, -0.0002803802490234375, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.3222489356994629, 0.0, -0.00043034550617448986, 0.0, -0.00048828125, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -0.0007964372634887695, -3.933906555175781e-06, -1.33514404296875e-05, -0.0015544891357421875, -0.08539676666259766, -0.007419368252158165, -5.960462772236497e-07, -2.288818359375e-05, 0.0, -0.2772305905818939, -0.015685003250837326, -0.16142749786376953, -5.7220458984375e-06, -0.07097041606903076, -1.9073486328125e-06, 0.0], "choice_history": [54, 122, "Sneed", "Old", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", 42, 115, "8", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "minion", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -1.8472736903952338, "model_output": {"hole4": "player", "hole6": [{"hole3": {"func": {"id": "Deathrattle", "_type": "Name"}, "args": [{"hole1": {"id": "minion", "_type": "Name"}, "hole0": "Summon", "_type": "Template13"}, {"hole0": "PlayerSelector", "_type": "Template19"}], "_type": "Call"}, "hole1": 7, "hole0": 5, "_type": "Template9", "hole2": "deathrattle"}], "hole1": "MinionCard", "hole0": "SneedOldShredder", "hole2": [{"hole3": [{"hole0": "MECH", "_type": "Template16"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "<UNK> Old Shredder", "_type": "Str"}, {"n": 8, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        from hearthbreaker.cards.spells.neutral import spare_part_list\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(AddCard(CardQuery(source=\n            CARD_SOURCE.LIST, source_list=spare_part_list)), PlayerSelector()))\n\n    def create_minion(self, player):\n        from hearthbreaker.cards.spells.neutral import spare_part_list\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=spare_part_list)),\n            PlayerSelector()))\n", "beams": [{"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(AddCard(CardQuery(source=\n            CARD_SOURCE.LIST, source_list=spare_part_list)), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -0.014567017555236816, -5.257129669189453e-05, -2.2635795176029205e-06, -1.9311904907226562e-05, -3.576278118089249e-07, -0.0005931854248046875, -0.000179290771484375, -0.000194549560546875, -3.814697265625e-06, -1.9073486328125e-06, -2.9802317840221804e-06, 0.0, -4.9710244638845325e-05, 0.0, -0.000141143798828125, -1.9073486328125e-06, -1.33514404296875e-05, -7.867813110351562e-06, -0.0002346038818359375, -7.62939453125e-06, -7.62939453125e-06, -1.4901076610840391e-05, -1.9073468138230965e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.7046899301931262e-05, -0.0004540681838989258, -2.1457672119140625e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.745887756347656e-05, 0.0, -0.00012600421905517578, 0.0, -1.52587890625e-05, -3.814697265625e-05, -9.5367431640625e-06, -0.022882580757141113, 0.0, -0.0013322830200195312, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.00016605854034423828, -2.145764938177308e-06, -1.1444091796875e-05, -0.08935737609863281, -0.5144195556640625, -0.0029391497373580933, -0.000869868672452867, -0.0063533782958984375, -0.003368377685546875, -5.7220458984375e-06, -2.7418125682743266e-05, -0.00012493133544921875, -5.7220458984375e-06, -0.005162239074707031, -1.1444091796875e-05, -2.09808349609375e-05, -0.0040721893310546875, -0.0003110170364379883, -0.0001201629638671875, 0.0, -1.33514404296875e-05, 0.0, -0.0002834796905517578, -5.483620952873025e-06, -0.00653529167175293, -9.5367431640625e-06, -2.86102294921875e-05, 0.0, -0.007832775823771954, -0.0014279705937951803, -0.0073108673095703125, -1.9073486328125e-06, -0.1630476713180542, -0.0002984993043355644, -0.000499725341796875, -2.288818359375e-05, -3.0398339731618762e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -2.8014157578581944e-05, 0.0, -0.00025177001953125, -0.0001430511474609375, -7.62939453125e-06, -1.311301275563892e-06, -1.4305104514278355e-06, -0.14372050762176514, -2.3841855067985307e-07], "choice_history": [54, 122, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Toshley", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 129, "Add", "Card", "<EOS>", 21, 110, "Card", "Query", "<EOS>", 177, 53, 159, "source", "<EOS>", 13, 80, 21, 110, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 53, 159, "source_list", "<EOS>", 21, 110, "spare_part_list", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "7", "<EOS>"], "score": -0.9999545948346906, "model_output": {"hole4": "player", "hole6": [{"hole1": 7, "hole0": 5, "_type": "Template11"}], "hole1": "MinionCard", "hole0": "Toshley", "hole2": [{"hole3": [{"value": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"hole1": {"id": "CardQuery", "_type": "Name"}, "hole0": "AddCard", "_type": "Template13", "hole3": [{"value": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "attr": "LIST", "_type": "Attribute"}, "arg": "source", "_type": "keyword"}, {"value": {"id": "spare_part_list", "_type": "Name"}, "arg": "source_list", "_type": "keyword"}]}, {"hole0": "PlayerSelector", "_type": "Template19"}], "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Toshley", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n", "beams": [{"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(5), SelfSelector())])\n", "score_history": [-1.9073486328125e-06, -5.53131103515625e-05, -1.07287787614041e-05, -3.921984534827061e-05, -1.7667189240455627e-06, -2.5033950805664062e-05, -2.622600959512056e-06, -7.62939453125e-06, -0.000171661376953125, -3.24249267578125e-05, -0.0001087188720703125, -2.09808349609375e-05, -1.4066622497921344e-05, 0.0, -5.841253368998878e-06, 0.0, -0.0042667388916015625, -0.0001850128173828125, -0.0001068115234375, -1.1920928244535389e-07, -5.733966827392578e-05, -7.62939453125e-06, 0.0, -0.08609550446271896, -2.622600959512056e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.5033950805664062e-05, -2.1457672119140625e-06, -0.03146851062774658, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0003600120253395289, -1.1920928244535389e-07, -5.2928899094695225e-05, 0.0, -0.000518798828125, -0.0001811981201171875, -7.05718994140625e-05, -0.0999213457107544, 0.0, -0.00013184547424316406, 0.0, -0.002177953254431486, 0.0, -1.71661376953125e-05, -0.011769294738769531, -1.9073486328125e-05, -5.9604644775390625e-06, -1.4305104514278355e-06, -0.0008661052561365068, 0.0, -0.11665020138025284, 0.0, -0.0321502685546875, -0.343658447265625, -0.0010683536529541016, -2.3484230041503906e-05, -0.001186370849609375, -0.0009584426879882812, -0.001125335693359375, -0.0010443748906254768, -0.00010704994201660156, -2.300739288330078e-05, -0.7102088332176208, -4.076957702636719e-05, -0.15093708038330078, -1.9073486328125e-06, -0.020779836922883987, -6.306171417236328e-05, 0.0], "choice_history": [54, 122, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Warbot", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 52, 135, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "5", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -1.6188589024508104, "model_output": {"hole4": "player", "hole6": [{"hole3": {"hole1": [{"hole1": 5, "hole0": "ChangeAttack", "_type": "Template15"}, {"hole0": "SelfSelector", "_type": "Template19"}], "hole0": "Aura", "_type": "Template18"}, "hole1": 3, "hole0": 1, "_type": "Template9", "hole2": "enrage"}], "hole1": "MinionCard", "hole0": "Warbot", "hole2": [{"hole3": [{"hole0": "MECH", "_type": "Template16"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Warbot", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARRIOR", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, taunt=True, deathrattle=Deathrattle(Summon(\n            CardQuery(conditions=[IsMinion()], source=CARD_SOURCE.MY_DECK)),\n            PlayerSelector(EnemyPlayer())))\n", "beams": [{"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(Summon(fromDeathlord()),\n            PlayerSelector()))\n", "score_history": [-5.7220458984375e-06, -0.0003185272216796875, -0.0002039670362137258, -0.0008584260940551758, -1.1897645890712738e-07, -2.7418136596679688e-05, -2.3841855067985307e-07, -4.1961669921875e-05, -0.0059814453125, -1.9073486328125e-05, -4.768370445162873e-07, -6.103515625e-05, -2.6941299438476562e-05, -5.7220458984375e-06, -0.00014901161193847656, -1.9073486328125e-06, -0.0006188154220581055, -3.814697265625e-06, -2.288818359375e-05, 0.0, -1.2874602361989673e-05, 0.0, -7.62939453125e-06, -0.16148757934570312, -1.71661376953125e-05, -7.510183422709815e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -5.960462772236497e-07, -0.5638905763626099, 0.0, -0.009074211120605469, -3.814697265625e-06, -0.0001468658447265625, 0.0, -0.00010538101196289062, -9.655952453613281e-06, -7.62939453125e-06, -0.1225748062133789, -0.5596895217895508, -0.011950276792049408, -5.960462772236497e-07, -2.09808349609375e-05, 0.0, -0.4595978260040283, -0.2534554600715637, -0.3382287621498108, -0.040302276611328125, -3.814697265625e-06, -0.0002613063552416861, 0.0, 0.0], "choice_history": [54, 122, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 16, 87, 21, 110, "Deathrattle", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "from", "Deathlord", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -2.529204867078491, "model_output": {"hole4": "player", "hole6": [{"hole3": {"func": {"id": "Deathrattle", "_type": "Name"}, "args": [{"hole1": {"id": "fromDeathlord", "_type": "Name"}, "hole0": "Summon", "_type": "Template13"}, {"hole0": "PlayerSelector", "_type": "Template19"}], "_type": "Call"}, "hole1": 8, "hole0": 2, "_type": "Template9", "hole2": "deathrattle"}], "hole1": "MinionCard", "hole0": "Deathlord", "hole2": [{"hole3": "RARE", "hole1": 3, "hole0": "Deathlord", "_type": "Template6", "hole2": "ALL"}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class NerubarWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(2), CardSelector(\n            BothPlayer(), HasBattlecry()))])\n", "beams": [{"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(4), CardSelector(\n            condition=IsSpell()))])\n", "score_history": [0.0, -1.52587890625e-05, -1.8358061424805783e-05, -5.280842015054077e-05, -2.3841855067985307e-07, -1.1897645890712738e-07, -9.775161743164062e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -0.20068740844726562, -5.7220458984375e-06, -1.5735502529423684e-05, -0.00016271878848783672, -2.47955322265625e-05, -1.9073486328125e-06, -7.152555099310121e-07, -3.576278118089249e-07, -0.0003204345703125, 0.0, -2.396106719970703e-05, 0.0, -1.52587890625e-05, 0.0, -3.695487976074219e-05, 0.0, -7.62939453125e-06, -0.0002231597900390625, -4.38690185546875e-05, -7.62939453125e-06, -1.156323378381785e-05, -1.311301275563892e-06, 0.0, -0.029572486877441406, -2.0265579223632812e-06, -0.0002040863037109375, -0.026981353759765625, -0.0004940032958984375, -3.24249267578125e-05, -0.022176742553710938, -0.05121326446533203, -7.62939453125e-06, -0.2723059356212616, -0.003693340113386512, -0.00011289119720458984, -0.04451266676187515, -0.0003941059112548828, -0.05328941345214844, -0.0973958969116211, -0.0001316070556640625, -7.05718994140625e-05, -0.01297450065612793, -3.194808232365176e-05, 0.0, -0.11021232604980469, -1.9073486328125e-05, 0.0, -0.004244804382324219, 0.0, -0.004204750061035156, -7.62939453125e-06, -0.0004000108456239104, -0.2176179140806198, -0.009317398071289062], "choice_history": [54, 122, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 47, 134, "Mana", "Change", "<EOS>", "4", "<EOS>", 35, 86, 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Is", "Spell", "<EOS>"], "score": -1.1633106377508966, "model_output": {"hole4": "player", "hole6": [{"hole3": {"hole1": [{"hole1": 4, "hole0": "ManaChange", "_type": "Template15"}, {"func": {"id": "CardSelector", "_type": "Name"}, "keywords": [{"value": {"hole0": "IsSpell", "_type": "Template19"}, "arg": "condition", "_type": "keyword"}], "_type": "Call"}], "hole0": "Aura", "_type": "Template18"}, "hole1": 4, "hole0": 1, "_type": "Template9", "hole2": "auras"}], "hole1": "MinionCard", "hole0": "Nerub'arWeblord", "hole2": [{"hole3": "COMMON", "hole1": 2, "hole0": "Nerub'ar Weblord", "_type": "Template6", "hole2": "ALL"}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=False)\n", "beams": [{"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=True)\n", "score_history": [-1.9073486328125e-06, -4.1961669921875e-05, -0.0004773192631546408, -2.956380194518715e-05, -2.0265579223632812e-06, -2.868473529815674e-06, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -0.17790794372558594, -2.09808349609375e-05, -3.6954811548639555e-06, -0.006325681693851948, -1.788138979463838e-05, -1.9073486328125e-06, -6.902110908413306e-05, -1.1920928244535389e-07, -8.20159912109375e-05, 0.0, -8.153915405273438e-05, 0.0, -1.71661376953125e-05, 0.0, -0.0018144845962524414, 0.0, -1.9073486328125e-06, -0.0002689361572265625, -6.103515625e-05, -3.361701965332031e-05, -3.576278118089249e-07, -0.0001417365565430373, -2.1457672119140625e-06, -0.043753743171691895, -5.7220458984375e-06, -8.7738037109375e-05, -0.0004329681396484375, -0.003505706787109375, -1.9073486328125e-06], "choice_history": [54, 122, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "4", "<EOS>", "6", "<EOS>", "spell_targetable", "<EOS>", 22, 111, "False", "<EOS>"], "score": -0.235222307830945, "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole1": 6, "hole0": 4, "_type": "Template9", "hole2": "spell_targetable"}], "hole1": "MinionCard", "hole0": "SpectralKnight", "hole2": [{"hole3": "COMMON", "hole1": 5, "hole0": "Spectral Knight", "_type": "Template6", "hole2": "ALL"}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "beams": [{"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [0.0, -9.5367431640625e-06, -0.00021431533969007432, -0.00010978593491017818, -2.0265558760002023e-06, -8.331844583153725e-07, -1.072883515007561e-05, -3.814689989667386e-06, -0.00012969970703125, -0.0001373291015625, -5.340576171875e-05, -1.33514404296875e-05, -3.814697265625e-06, -3.123283022432588e-05, 0.0, -0.0001024007797241211, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00014411364099942148, -0.00010502338409423828, -5.960462203802308e-06, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -3.2901763916015625e-05, -0.0003871917724609375, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -6.198883056640625e-06, 0.0, -0.0008414983749389648, 0.0, -0.015893936157226562, -3.814697265625e-06, -1.1444091796875e-05, -8.296965825138614e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.145764938177308e-06, -1.9073486328125e-06, -0.13852310180664062, -0.0005922317504882812, -2.47955322265625e-05, -5.7220458984375e-06, -0.03496519476175308, -0.0015356505755335093, -0.0002536773681640625, -6.67572021484375e-05, -2.288818359375e-05, -0.000476837158203125, -3.814697265625e-06, -0.0007476806640625, -0.0003544777864590287, -1.1920928244535389e-07, -2.09808349609375e-05, -7.62939453125e-06, -0.00021004219888709486, -0.000694034737534821, -1.1920928244535389e-07, -0.002086639404296875, -0.00411224365234375, -3.814697265625e-06, -0.5131653547286987, 0.0, -1.9073486328125e-05, -0.0019664764404296875, -5.936621892033145e-05, -2.86102294921875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -5.054471694165841e-05, -0.0001918058260343969, -2.3841855067985307e-07, -0.0002727508544921875, -0.0001163482666015625, 0.0, -0.2836264371871948, -2.0265579223632812e-06, -0.00064849853515625, -1.9073486328125e-06, -0.0004035232705064118, -4.0531158447265625e-06, 0.0, -2.110004425048828e-05, 0.0, -3.731200922629796e-05, 0.0, -2.288818359375e-05, -0.0001220703125, -1.52587890625e-05, -4.8875799620873295e-06, -3.933898824470816e-06, -0.0022258758544921875, -5.960446742392378e-06], "choice_history": [54, 122, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Wailing", " ", "Soul", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "5", "<EOS>"], "score": -1.0062364868668467, "model_output": {"hole4": "player", "hole6": [{"hole1": 5, "hole0": 3, "_type": "Template11"}], "hole1": "MinionCard", "hole0": "WailingSoul", "hole2": [{"hole3": [{"value": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"func": {"id": "Give", "_type": "Name"}, "args": [{"_type": "List", "elts": [{"hole1": {"id": "ChangeAttack", "_type": "Name"}, "hole0": "Buff", "_type": "Template13", "hole2": [{"n": 2, "_type": "Num"}]}, {"hole1": {"id": "ChangeHealth", "_type": "Name"}, "hole0": "Buff", "_type": "Template13", "hole2": [{"n": 2, "_type": "Num"}]}]}], "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template19"}], "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Wailing Soul", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(3), SelfSelector())])\n", "beams": [{"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(1), SelfSelector()),\n            Aura(Attack(), SelfSelector())])\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -3.2066785934148356e-05, -2.419927841401659e-05, -3.6120007280260324e-05, -2.648215740919113e-05, -2.3961043552844785e-05, -3.4570680327306036e-06, 0.0, -0.01006317138671875, 0.0, -8.702239938429557e-06, -0.00015509067452512681, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00011598503624554724, -1.9073486328125e-06, -0.00018310546875, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, -4.2319297790527344e-05, 0.0, -3.814697265625e-06, -0.2071361541748047, -0.0001544952392578125, -2.622604142743512e-06, -2.3841830625315197e-06, -0.0003030293737538159, 0.0, -0.16050374507904053, 0.0, -0.000240325927734375, -0.30810070037841797, -0.0012580155162140727, -9.5367431640625e-06, -0.000988006591796875, -7.05718994140625e-05, -3.62396240234375e-05, -0.0002698894531931728, -9.930092346621677e-05, -1.1920928244535389e-07, -0.6264063715934753, -3.898136128555052e-05, -0.000461578369140625, 0.0, -0.018298018723726273, -2.515315827622544e-05, 0.0, 0.0, -0.00052642822265625, -0.0018405914306640625, -0.00363922119140625, -7.62939453125e-06, -0.0001926422119140625, -0.03852558135986328, -5.91278076171875e-05, -0.7049668431282043, -0.004284024238586426, -0.004665374755859375, 0.0, -0.02308162860572338, -1.2278556823730469e-05, 0.0], "choice_history": [54, 122, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 28, 142, "Aura", "<EOS>", 170, 47, 134, "Change", "Attack", "<EOS>", "1", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 169, 49, 145, "Aura", "<EOS>", 170, 50, 146, "Attack", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -2.1170053140242473, "model_output": {"hole4": "player", "hole6": [{"hole3": {"hole1": [{"hole1": 1, "hole0": "ChangeAttack", "_type": "Template15"}, {"hole0": "SelfSelector", "_type": "Template19"}], "hole0": "Aura", "_type": "Template18", "hole2": [{"hole1": [{"hole0": "Attack", "_type": "Template19"}, {"hole0": "SelfSelector", "_type": "Template19"}], "hole0": "Aura", "_type": "Template18_expr_seq"}]}, "hole1": 3, "hole0": 2, "_type": "Template9", "hole2": "enrage"}], "hole1": "MinionCard", "hole0": "AmaniBerserker", "hole2": [{"hole3": "COMMON", "hole1": 2, "hole0": "Amani Berserker", "_type": "Template6", "hole2": "ALL"}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(), ActionTag(AddCard(\n            hearthbreaker.cards.Fireball()), PlayerSelector()))])\n", "beams": [{"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Summon(ArchmageAntonidas()), PlayerSelector()))])\n", "score_history": [-1.1444091796875e-05, -2.6702880859375e-05, -0.00139318173751235, -0.0002575780963525176, -5.125993993715383e-06, -9.520445019006729e-07, -1.0013580322265625e-05, -1.1920928244535389e-07, -1.52587890625e-05, -0.00176239013671875, -7.62939453125e-06, -2.3841855067985307e-07, -8.52344383019954e-05, -1.1563301086425781e-05, -1.1444091796875e-05, -0.549074649810791, -4.184158387943171e-05, -0.13152599334716797, 0.0, -0.00016129016876220703, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -1.454353241570061e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.24249267578125e-05, -1.1444091796875e-05, -3.24249267578125e-05, -2.622600959512056e-06, -0.5746912956237793, -5.960462772236497e-07, -0.00013565893459599465, -7.152555099310121e-07, -7.43865966796875e-05, -0.5788164138793945, -0.00019085407257080078, 0.0, -3.814697265625e-06, -0.00998687744140625, -0.41829490661621094, -0.9978654384613037, -0.04451584815979004, -5.91278076171875e-05, -1.9073486328125e-05, 0.0, -0.061733994632959366, -0.07369363307952881, -0.0003757476806640625, -3.0517578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -8.404254913330078e-05, -2.6702880859375e-05, -1.9073486328125e-06, -8.7738037109375e-05, -8.0108642578125e-05, -0.07610702514648438, -0.0017177993431687355, 0.0, -3.814697265625e-06, 0.0, -0.2843307554721832, -0.026850635185837746, -0.12660391628742218, -0.0007686614990234375, 0.0, -6.306169962044805e-05, -1.33514404296875e-05, 0.0], "choice_history": [54, 122, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Card", "Used", "<EOS>", 21, 110, "Is", "Spell", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Archmage", "Antonidas", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -3.96181036216219, "model_output": {"hole4": "player", "hole6": [{"hole3": {"hole1": [{"hole1": {"id": "IsSpell", "_type": "Name"}, "hole0": "CardUsed", "_type": "Template13"}, {"func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole1": {"id": "ArchmageAntonidas", "_type": "Name"}, "hole0": "Summon", "_type": "Template13"}, {"hole0": "PlayerSelector", "_type": "Template19"}], "_type": "Call"}], "hole0": "Effect", "_type": "Template18"}, "hole1": 7, "hole0": 5, "_type": "Template9", "hole2": "effects"}], "hole1": "MinionCard", "hole0": "ArchmageAntonidas", "hole2": [{"hole3": "LEGENDARY", "hole1": 7, "hole0": "Archmage Antonidas", "_type": "Template6", "hole2": "MAGE"}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n        self.target.increase_health(1)\n", "beams": [{"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.DREAM, CARD_RARITY.\n            COMMON, True, hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(ChangeAttack(1)))\n", "score_history": [-1.9073486328125e-06, -0.0002689361572265625, -3.814689989667386e-06, -3.814689989667386e-06, -9.052862878888845e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -0.0002117156982421875, -3.814697265625e-05, -0.5570468902587891, -0.0002422332763671875, -7.62939453125e-06, -0.00010728836059570312, 0.0, -0.00011515617370605469, 0.0, -0.44107627868652344, -3.62396240234375e-05, -1.9073486328125e-06, -1.4662635294371285e-05, -1.1444091796875e-05, -0.000125885009765625, -9.5367431640625e-06, -2.7072615921497345e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0010395050048828125, -1.52587890625e-05, -0.7198162078857422, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.0517578125e-05, 0.0, -0.00024437904357910156, 0.0, -0.0015411376953125, 0.0, -0.005405426025390625, -0.000362396240234375, -0.0003647804260253906, -1.1920922133867862e-06, -0.0002422332763671875, 0.0, -0.0023832321166992188, 0.0, -3.4332275390625e-05, 0.0, -0.0040988922119140625, 0.0, -0.0011692047119140625, -1.9073486328125e-06, -0.009748458862304688, 0.0, -1.9073486328125e-05, 0.0, -0.000438690185546875, 0.0, -1.52587890625e-05, -2.6702880859375e-05, -8.83340835571289e-05, -1.9073486328125e-06, -0.2670869827270508, -7.05718994140625e-05, -1.1444091796875e-05, -5.14984130859375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0004962682723999023, 0.0, -9.5367431640625e-06, 0.0, -2.801417031150777e-05, 0.0, -0.0002040863037109375, -0.05346202850341797, -3.814697265625e-06, 0.0, -0.0005035400390625, -8.20159912109375e-05, -9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.861022494471399e-06, -0.24600982666015625, 0.0, -1.9073486328125e-06, -0.09717273712158203, -0.42263126373291016, -0.00038766805664636195, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -0.004439291078597307, -0.002933382522314787, -9.5367431640625e-06, -2.86102294921875e-05, -6.4849853515625e-05, -1.9073486328125e-05, -0.0018157958984375, 0.0], "choice_history": [54, 124, "Bananas", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 137, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 174, 43, 119, "Bananas", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "DREAM", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 32, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>"], "score": -2.844070852452873, "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template12", "hole2": "player"}, "_type": "Expr"}, {"hole1": "add_buff", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "_type": "Template17", "hole2": [{"hole1": {"id": "ChangeAttack", "_type": "Name"}, "hole0": "Buff", "_type": "Template13", "hole2": [{"n": 1, "_type": "Num"}]}]}], "hole1": "SpellCard", "hole0": "Bananas", "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Bananas", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "DREAM", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "use"}}]}
{"gold_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(DoubleAttack()))\n", "beams": [{"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if self.target.health < self.target - self.target:\n            self.target.change_attack(self.target.health)\n        else:\n            self.target.change_attack(<UNK>)\n", "score_history": [-0.0003757476806640625, -5.14984130859375e-05, -1.2040065485052764e-05, -7.629118044860661e-05, -4.5895460061728954e-05, -2.145709004253149e-06, -8.022785186767578e-05, 0.0, -3.814697265625e-06, -6.4849853515625e-05, -0.0047130584716796875, -3.814697265625e-05, -3.814697265625e-06, -2.1219253540039062e-05, 0.0, -1.823902130126953e-05, -1.9073486328125e-06, -0.0002574920654296875, -1.9073486328125e-06, -3.0517578125e-05, -1.9311717551317997e-05, -5.0067901611328125e-05, -0.0003639456699602306, -0.000446319580078125, -2.288818359375e-05, -1.9073486328125e-06, -1.7881377516459906e-06, -0.000537610612809658, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0011638402938842773, -2.741813204920618e-06, -0.23823654651641846, -2.861018856492592e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.0003142356872558594, -3.576278118089249e-07, -0.00025403499603271484, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -6.103515625e-05, -1.9073486328125e-05, -4.57763671875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0014972686767578125, 0.0, -0.0004100799560546875, 0.0, -0.001219630241394043, 0.0, -3.814697265625e-06, 0.0, -3.933906555175781e-06, 0.0, -5.7220458984375e-05, -5.14984130859375e-05, -2.300739288330078e-05, -3.814697265625e-06, -0.01244354248046875, -6.4849853515625e-05, -7.62939453125e-06, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.3763389587402344e-05, 0.0, -2.0265579223632812e-06, 0.0, -1.52587890625e-05, 0.0, -4.220008850097656e-05, 0.0, -0.6797380447387695, -0.016425132751464844, -0.03739643096923828, -0.0003509521484375, -0.00157928466796875, -0.000274658203125, -0.05208015441894531, 0.0, -0.000301361083984375, 0.0, -0.08869743347167969, 0.0, -7.748603820800781e-06, -1.4305104514278355e-06, -0.08641469478607178, 0.0, -0.0012836456298828125, -0.1394519805908203, -1.9073486328125e-06, -0.7280645370483398, -0.0010232925415039062, -0.646357536315918, -3.814697265625e-06, -0.3637857437133789, 0.0, -0.0027494430541992188, 0.0, -9.918212890625e-05, -8.583032467868179e-06, -0.21004676818847656, -0.8222846984863281, -0.00054931640625, -0.0055408477783203125, -1.9073486328125e-06, -0.0009317398071289062, 0.0, -4.398822784423828e-05, -4.6491513785440475e-06, -0.0054492950439453125, -0.3837709426879883, -0.00060272216796875, -0.03899955749511719, -1.9073486328125e-06, -0.0005645751953125, 0.0, -0.0002834796905517578, 0.0, -1.33514404296875e-05, -4.768370445162873e-07, -0.11530935764312744, 0.0, -0.0005340576171875, -0.9078073501586914, -1.9073486328125e-06, -0.10875701904296875, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -0.00017750263214111328, -5.7220458984375e-06, -1.9073486328125e-05, -1.7881377516459906e-06, -0.7462707757949829, 0.0, -0.013240814208984375, -0.18955612182617188, -2.6702880859375e-05, -0.0010204315185546875, -5.7220458984375e-06, -0.0005283355712890625, -3.814697265625e-06, -0.0008203983306884766, 0.0, -7.62939453125e-06, -1.5497195136049413e-06, -0.03590118885040283, 0.0, -2.86102294921875e-05, -0.12838172912597656, -5.7220458984375e-06, -0.24205303192138672, -1.1444091796875e-05], "choice_history": [54, 124, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blessed", " ", "Champion", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 182, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 66, 98, 17, 90, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 166, 10, 169, 33, 82, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 56, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 40, 110, "<UNK>", "<EOS>"], "score": -7.069254848351932, "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template12", "hole2": "player"}, "_type": "Expr"}, {"test": {"comparators": [{"left": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "op": {"_type": "Sub"}, "_type": "BinOp", "right": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}}], "left": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}, "orelse": [{"hole1": "change_attack", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "_type": "Template17", "hole2": [{"id": "<UNK>", "_type": "Name"}]}], "body": [{"hole1": "change_attack", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "_type": "Template17", "hole2": [{"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}]}], "_type": "If"}], "hole1": "SpellCard", "hole0": "BlessedChampion", "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PRIEST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "use"}}]}
{"gold_code": "class CabalShadowPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Steal(), MinionSelector(\n            AttackLessThanOrEqualTo(2), players=EnemyPlayer(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "beams": [{"inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC, battlecry=Battlecry(GiveAura([AuraUntil(\n            ManaChange(-3), CardSelector(condition=IsSpell()), TurnEnded(),\n            MinionSelector(AttackGreaterThan(6), EnemyPlayer()))]),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [-9.5367431640625e-06, -0.0036830902099609375, -0.0004247716860845685, -0.0177699476480484, -0.037300508469343185, -2.0310282707214355e-05, -5.125998541188892e-06, -7.152555099310121e-07, -0.0005474090576171875, -0.000213623046875, -7.2479248046875e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -2.3126602172851562e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.5258672647178173e-05, -9.739398956298828e-05, -0.0073806047439575195, -0.0068569183349609375, 0.0, -1.9073486328125e-06, -1.1205671398784034e-05, -2.7179348762729205e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.8504123949678615e-05, -0.990959644317627, -2.0265579223632812e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.0003535747528076172, 0.0, -0.0007594823837280273, 0.0, -0.0016765594482421875, -1.9073486328125e-06, -7.62939453125e-06, -0.0019608736038208008, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.7569351196289062, -2.6702880859375e-05, -0.00018310546875, -3.814697265625e-06, -0.018332967534661293, -0.5333255529403687, -0.0013735294342041016, -1.1444091796875e-05, -0.20958518981933594, -0.024232864379882812, -0.02744436264038086, -0.05446743965148926, -2.300739288330078e-05, -0.053778648376464844, -0.0005502700805664062, -0.0002803802490234375, -9.5367431640625e-06, 0.0, -0.012248585000634193, -0.00015270708536263555, -9.894368304230738e-06, -1.33514404296875e-05, -0.03680896759033203, -0.0001316070556640625, -0.00138092041015625, -2.288818359375e-05, -1.1444091796875e-05, -0.08602416515350342, -3.814697265625e-06, -0.0001659393310546875, -0.0012664794921875, -0.0001506805419921875, -7.62939453125e-06, -0.0014258213341236115, -0.012563824653625488, 0.0, -0.008625984191894531, -9.5367431640625e-06, -1.9073486328125e-06, -0.006543396972119808, -2.0265579223632812e-06, -0.060835838317871094, -9.5367431640625e-06, -0.03425776585936546, -0.006023239344358444, -0.0023822784423828125, -0.4590272903442383, -7.62939453125e-05, -0.5989232063293457, -0.0015823841094970703, -1.9073486328125e-06, -0.09061813354492188, -0.04378223419189453, -1.52587890625e-05, 0.0, -0.2631262540817261, -0.0005855560302734375, 0.0, -0.10822391510009766, -0.02776622772216797, -1.33514404296875e-05, -0.20507852733135223, -0.04826843738555908, -0.001408696174621582, -0.029349327087402344, -0.4590723514556885, -0.0007630586624145508, -0.0006256103515625, -1.52587890625e-05, -0.1039276123046875, -4.38690185546875e-05, -0.0002288818359375, -0.054645538330078125, -1.9073486328125e-06, -0.6322568655014038, -1.52587890625e-05, 0.0, -8.392333984375e-05, 0.0, -1.3947477782494389e-05, 0.0, -5.7220458984375e-06, -0.0003223419189453125, -5.7220458984375e-06, -5.173616227693856e-05, -1.1920928244535389e-07, -0.0002249357057735324, 0.0], "choice_history": [54, 122, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cabal", " ", "Shadow", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "Aura", "<EOS>", 169, 48, 141, "Aura", "Until", "<EOS>", 172, 35, 87, 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "3", "<EOS>", 35, 86, 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 29, 146, "Is", "Spell", "<EOS>", 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 170, 47, 134, "Attack", "Greater", "Than", "<EOS>", "6", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "5", "<EOS>"], "score": -6.152150656298311, "model_output": {"hole4": "player", "hole6": [{"hole1": 5, "hole0": 4, "_type": "Template11"}], "hole1": "MinionCard", "hole0": "CabalShadow", "hole2": [{"hole3": [{"value": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"func": {"id": "GiveAura", "_type": "Name"}, "args": [{"hole1": [{"func": {"id": "ManaChange", "_type": "Name"}, "args": [{"operand": {"n": 3, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Call"}, {"func": {"id": "CardSelector", "_type": "Name"}, "keywords": [{"value": {"hole0": "IsSpell", "_type": "Template19"}, "arg": "condition", "_type": "keyword"}], "_type": "Call"}, {"hole0": "TurnEnded", "_type": "Template19"}, {"func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"hole1": 6, "hole0": "AttackGreaterThan", "_type": "Template15"}, {"hole0": "EnemyPlayer", "_type": "Template19"}], "_type": "Call"}], "hole0": "AuraUntil", "_type": "Template18"}], "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template19"}], "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Cabal Shadow", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PALADIN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Frozen()))\n        index = self.target.index\n        if self.target.index < len(self.target.player.minions) - 1:\n            minion = self.target.player.minions[index + 1]\n            minion.damage(player.effective_spell_damage(1), self)\n            minion.add_buff(Buff(Frozen()))\n        self.target.damage(player.effective_spell_damage(1), self)\n        if self.target.index > 0:\n            minion = self.target.player.minions[index - 1]\n            minion.damage(player.effective_spell_damage(1), self)\n            minion.add_buff(Buff(Frozen()))\n", "beams": [{"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions.minions)\n        self.target.change_attack(4)\n", "score_history": [-1.52587890625e-05, -9.34600830078125e-05, -2.1576648578047752e-05, -0.0003285320708528161, -0.0009849007474258542, -1.966933996300213e-05, -5.841247912030667e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.00069427490234375, -0.0001087188720703125, -2.09808349609375e-05, 0.0, -8.106231689453125e-06, 0.0, -1.5139563402044587e-05, 0.0, -0.0011997222900390625, -3.814697265625e-06, -7.62939453125e-06, -1.9073468138230965e-06, -0.00014078617095947266, -3.218649362679571e-05, -0.00012218952178955078, -5.48362331755925e-05, -1.1563301086425781e-05, -5.7220458984375e-06, -1.9073486328125e-06, -2.622600959512056e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -0.0006313323974609375, -9.894371032714844e-06, -0.015460014343261719, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00014889240264892578, 0.0, -2.3365020751953125e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -1.1444091796875e-05, -0.0001583099365234375, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.000118255615234375, 0.0, -8.58306884765625e-05, -1.1920928955078125e-05, -0.0030592679977416992, -2.2649765014648438e-06, -5.364416665543104e-06, 0.0, -0.00014317035675048828, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -4.017353057861328e-05, -7.62939453125e-06, -0.3132896423339844, -0.0001354217529296875, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -8.58306884765625e-06, 0.0, -2.1457672119140625e-06, 0.0, -2.47955322265625e-05, 0.0, -1.3470649719238281e-05, 0.0, -0.010868072509765625, -9.5367431640625e-06, -7.2479248046875e-05, -3.62396240234375e-05, -6.4849853515625e-05, -0.12700462341308594, -2.0265579223632812e-06, -0.0010509490966796875, -6.103515625e-05, -4.76837158203125e-05, -3.814697265625e-06, -0.021802902221679688, 0.0, -0.04569351673126221, 0.0, -0.0010303258895874023, 0.0, 0.0, -3.62396240234375e-05, 0.0, -8.392333984375e-05, 0.0, -0.2646608352661133, 0.0, -0.0001010894775390625, 0.0, -0.02174675464630127, -1.52587890625e-05, -0.25718414783477783, -3.814697265625e-06, -0.44089314341545105, 0.0, -0.0002270928816869855, 0.0, -0.5131063461303711, -0.000125885009765625, -0.006815910339355469, 0.0, -0.26177120208740234, 0.0, -0.00040435791015625, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.479367733001709, -1.9073486328125e-06, -8.20159912109375e-05, -0.002490997314453125, -7.62939453125e-06, -0.8447768092155457, 0.0], "choice_history": [54, 124, "Cone", "Of", "Cold", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Cone", " ", "of", " ", "Cold", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "targets", "<EOS>", 16, 87, 13, 80, 21, 110, "copy", "<EOS>", "copy", "<EOS>", 169, 32, 80, 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", "minions", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 169, 42, 115, "4", "<EOS>"], "score": -3.6393499507819342, "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template12", "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "targets": [{"id": "targets", "_type": "Name"}], "_type": "Assign"}, {"hole1": "change_attack", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "_type": "Template17", "hole2": [{"n": 4, "_type": "Num"}]}], "hole1": "SpellCard", "hole0": "ConeOfCold", "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Cone of Cold", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "MAGE", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "use"}}]}
{"gold_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(Taunt()), Buff\n            (ChangeAttack(1)), Buff(ChangeHealth(1))]), MinionSelector(\n            Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "beams": [{"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [0.0, -0.000530242919921875, -4.207999518257566e-05, -0.0012796581722795963, -0.0018466339679434896, -0.0004680253332480788, -3.574823495000601e-07, -1.5258772691595368e-05, -1.1920922133867862e-06, -1.9073486328125e-05, -0.0001392364501953125, -3.814697265625e-05, -1.1444091796875e-05, 0.0, -5.9604644775390625e-06, 0.0, -1.5258781786542386e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -6.794906312279636e-06, -0.00020396709442138672, -1.7881382518680766e-05, -0.0001035928726196289, -0.00030350685119628906, -0.000583648681640625, -1.9073486328125e-06, 0.0, -2.861022494471399e-06, -1.1920928244535389e-07, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.503394853192731e-06, -0.000244140625, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -9.775161743164062e-06, 0.0, -0.0003343820571899414, -1.9073486328125e-06, -0.0007534027099609375, -5.7220458984375e-06, -5.7220458984375e-06, -0.00017178058624267578, 0.0, -0.0001430511474609375, -7.62939453125e-06, -3.814697265625e-06, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -0.0003185272216796875, -0.07394027709960938, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -0.13547149300575256, -5.459782914840616e-05, -8.20159912109375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.054099082946777344, -1.9073486328125e-06, -0.0032978057861328125, -0.00015246735711116344, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.001545853796415031, -0.5193078517913818, 0.0, -0.08331680297851562, -5.91278076171875e-05, 0.0, -0.008715083822607994, -5.7220458984375e-06, -5.7220458984375e-06, -0.04498577117919922, -4.6491601096931845e-05, -1.52587890625e-05, -3.814697265625e-06, -6.67572021484375e-05, -0.00013136098277755082, -8.964526932686567e-05, -5.960462772236497e-07, -0.14896297454833984, -5.53131103515625e-05, 0.0, -0.007285436149686575, -3.814697265625e-06, -0.01271820068359375, -3.814697265625e-06, -0.00023317337036132812, 0.0, 0.0, -2.86102294921875e-05, 0.0, -2.3603366571478546e-05, 0.0, -7.62939453125e-06, -0.000301361083984375, -1.52587890625e-05, -2.7418097943154862e-06, -1.1920928244535389e-07, -7.6293645179248415e-06, -1.1920928244535389e-07], "choice_history": [54, 122, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Defender", " ", "of", " ", "Argus", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "2", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -1.1028964680385869, "model_output": {"hole4": "player", "hole6": [{"hole1": 3, "hole0": 2, "_type": "Template11"}], "hole1": "MinionCard", "hole0": "DefenderOfArgus", "hole2": [{"hole3": [{"value": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"func": {"id": "Give", "_type": "Name"}, "args": [{"_type": "List", "elts": [{"hole1": {"id": "ChangeAttack", "_type": "Name"}, "hole0": "Buff", "_type": "Template13", "hole2": [{"n": 2, "_type": "Num"}]}, {"hole1": {"id": "ChangeHealth", "_type": "Name"}, "hole0": "Buff", "_type": "Template13", "hole2": [{"n": 2, "_type": "Num"}]}]}], "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template19"}], "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Defender of Argus", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8, buffs=[Buff(Windfury())])\n", "beams": [{"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_minion(self, player):\n        return Minion(2, 8, windfury=True)\n", "score_history": [-1.9073486328125e-06, -0.000896453857421875, -0.00011681914475047961, -0.015337824821472168, -0.0030354636255651712, -1.537799835205078e-05, -2.384185791015625e-06, -0.04106330871582031, -8.20159912109375e-05, -0.0060825347900390625, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.24249267578125e-05, 0.0, -1.1444091796875e-05, -9.5367431640625e-06, -2.288818359375e-05, -1.311301275563892e-06, -2.288818359375e-05, -3.814697265625e-06, 0.0, -7.271765298355604e-06, -0.0008697319426573813, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0011081695556640625, -0.00012028217315673828, -0.0023632049560546875, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0003987550735473633, 0.0, -0.10580742359161377, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -1.71661376953125e-05, -0.0025043487548828125, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.006279348861426115, 0.0, -0.03715229034423828, 0.0, -0.00011837482452392578, 0.0, -5.91278076171875e-05, -0.010412216186523438, -0.000240325927734375, -4.410743713378906e-06, -4.768370445162873e-07, -0.0008196830749511719, -4.768370445162873e-07, -0.14698433876037598, 0.0, -0.000232696533203125, -0.0001678466796875, -0.00037419795989990234, 0.0], "choice_history": [54, 122, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Doomhammer", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 176, 53, 159, "overload", "<EOS>", 23, 115, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "8", "<EOS>", "windfury", "<EOS>", 22, 111, "True", "<EOS>"], "score": -0.38296557675244003, "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole1": 8, "hole0": 2, "_type": "Template9", "hole2": "windfury"}], "hole1": "WeaponCard", "hole0": "Doomhammer", "hole2": [{"hole3": [{"value": {"n": 2, "_type": "Num"}, "arg": "overload", "_type": "keyword"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "SHAMAN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.silence()\n        self.target.damage(player.effective_spell_damage(1), self)\n", "beams": [{"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(1, self)\n        if self.target.health != 0:\n            self.target.damage(player.effective_spell_damage(1), self)\n        if self.target.health != 0:\n            self.target.damage(player.effective_spell_damage(1), self)\n", "score_history": [-7.62939453125e-06, -0.0002651214599609375, -2.3841855067985307e-07, -0.00010954733443213627, -3.576272320060525e-06, -1.192074705613777e-07, -2.09808349609375e-05, 0.0, -2.86102294921875e-05, -8.96453857421875e-05, -0.0074520111083984375, -7.62939453125e-06, 0.0, -1.1920928955078125e-05, -1.1920928244535389e-07, -7.450571865774691e-05, 0.0, -0.0141143798828125, -3.814697265625e-06, -3.814697265625e-06, -7.986990567587782e-06, -4.267692565917969e-05, -1.5377996533061378e-05, -3.576278118089249e-07, -5.7220458984375e-06, 0.0, -2.384184938364342e-07, -1.1205610462639015e-05, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, -6.079673767089844e-06, -0.7605143785476685, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-05, -0.0003147125244140625, 0.0, -2.956390380859375e-05, 0.0, -1.52587890625e-05, -4.57763671875e-05, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -0.000431060791015625, 0.0, -5.543231964111328e-05, -3.814697265625e-06, -0.000845789909362793, -2.1457672119140625e-06, -5.245207830739673e-06, 0.0, -5.352497100830078e-05, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -6.103515625e-05, -1.728534698486328e-05, -1.064401626586914, -0.4302682876586914, -0.0001201629638671875, -2.6702880859375e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.3589859008789062e-05, -8.344646857949556e-07, -2.0861511075054295e-05, 0.0, -7.43865966796875e-05, 0.0, -3.504753112792969e-05, 0.0, -0.01568317413330078, -0.0005245208740234375, -5.53131103515625e-05, -1.1444091796875e-05, -0.017009735107421875, -1.9073486328125e-06, -5.7220458984375e-06, -0.0002498626708984375, -3.24249267578125e-05, 0.0, -0.002344369888305664, -1.9073486328125e-06, -4.38690185546875e-05, -0.39794254302978516, -2.47955322265625e-05, -0.00045959651470184326, -3.099440846199286e-06, -0.006927490234375, -1.52587890625e-05, -0.04059123992919922, -1.9073486328125e-06, -0.05598163604736328, -0.0001201629638671875, -0.005565643310546875, -0.00217437744140625, -0.02049732208251953, 0.0, -0.001628875732421875, 0.0, -4.57763671875e-05, 0.0, -1.1444091796875e-05, -2.47955322265625e-05, -7.43865966796875e-05, 0.0, -0.7081681489944458, 0.0, -1.1444091796875e-05, -1.011026382446289, -7.62939453125e-06, -0.4250459671020508, -1.9073486328125e-06, -0.12019465863704681, -5.5192580475704744e-05, -0.009351730346679688, -0.024785995483398438, -0.000232696533203125, -0.10338687896728516, -0.000331878662109375, -0.008235931396484375, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -0.02727484703063965, -1.1920928244535389e-07, -0.0007610321044921875, -0.6474056243896484, -0.02081775665283203, -0.000125885009765625, -9.5367431640625e-06, -0.0002117156982421875, 0.0, -7.259845733642578e-05, -2.0265579223632812e-06, -0.009495854377746582, -2.09808349609375e-05, -4.38690185546875e-05, -0.0001010894775390625, -7.62939453125e-06, -6.282329559326172e-05, -0.00036519195418804884, -5.91278076171875e-05, -0.000316619873046875, -0.00569915771484375, -1.9073486328125e-06, -0.0060443878173828125, -0.000705718994140625, -0.006989479064941406, -0.002147674560546875, -0.032074928283691406, -7.62939453125e-06, -0.000457763671875, 0.0, -0.000133514404296875, 0.0, -3.635883331298828e-05, -9.5367431640625e-06, -8.392333984375e-05, 0.0, -0.8110073804855347, 0.0, -1.1444091796875e-05, -0.47202396392822266, -1.33514404296875e-05, -0.6428127288818359, -1.9073486328125e-06, -0.24147070944309235, -0.0001205139997182414, -0.007595062255859375, -0.016969680786132812, -0.000225067138671875, -0.12022018432617188, -0.0005168914794921875, -0.00589752197265625, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -0.03260302543640137, -1.1920928244535389e-07, -0.0007266998291015625, -0.6133108139038086, -0.020208358764648438, -0.0001392364501953125, -9.5367431640625e-06, -0.0001811981201171875, 0.0, -7.832050323486328e-05, -2.0265579223632812e-06, -0.010052800178527832, -2.09808349609375e-05, -4.38690185546875e-05, -0.0001010894775390625, -7.62939453125e-06, -6.136298179626465e-05, -0.0003800876147579402, -5.91278076171875e-05, -0.00031280517578125, -0.0062503814697265625, -1.9073486328125e-06], "choice_history": [54, 124, "Earth", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Earth", " ", "Shock", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 184, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>", 66, 97, 17, 90, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 166, 12, 169, 42, 115, "0", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>", 66, 97, 17, 90, 13, 80, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 166, 12, 169, 42, 115, "0", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "1", "<EOS>", 40, 110, "self", "<EOS>"], "score": -9.023818238238768, "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template12", "hole2": "player"}, "_type": "Expr"}, {"hole1": "damage", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "_type": "Template17", "hole2": [{"n": 1, "_type": "Num"}, {"id": "self", "_type": "Name"}]}, {"test": {"comparators": [{"n": 0, "_type": "Num"}], "left": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare"}, "body": [{"hole1": "damage", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "_type": "Template17", "hole2": [{"func": {"value": {"id": "player", "_type": "Name"}, "attr": "effective_spell_damage", "_type": "Attribute"}, "args": [{"n": 1, "_type": "Num"}], "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "_type": "If"}, {"test": {"comparators": [{"n": 0, "_type": "Num"}], "left": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare"}, "body": [{"hole1": "damage", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "_type": "Template17", "hole2": [{"func": {"value": {"id": "player", "_type": "Name"}, "attr": "effective_spell_damage", "_type": "Attribute"}, "args": [{"n": 1, "_type": "Num"}], "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "_type": "If"}], "hole1": "SpellCard", "hole0": "EarthShock", "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Earth Shock", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "use"}}]}
{"gold_code": "class EyeForAnEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for an Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, character, attacker, amount):\n        if character.is_hero():\n            character.player.opponent.hero.damage(amount, self)\n        super().reveal()\n\n    def activate(self, player):\n        player.bind('character_damaged', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('character_damaged', self._reveal)\n", "beams": [{"inferred_code": "class EyeanEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = game.random_choice(game.other_player.minions)\n        if attacker.card.minion_type - 3 > 0:\n            minion.damage(3, self)\n        else:\n            player.hero.change_temp_attack(2)\n\n    def can_use(self, minion, target):\n        if target is MINION_TYPE.DEMON and len(game.other_player.minions\n            ) is not self.player.minions:\n            minion.damage(3, self)\n", "score_history": [-6.4849853515625e-05, -0.3220071792602539, -4.207999518257566e-05, -0.5959020853042603, -0.0008456982905045152, -0.2664935886859894, -0.06106734275817871, -0.00043887473293580115, -1.1444091796875e-05, -0.000301361083984375, -0.0005016326904296875, -4.9591064453125e-05, -7.009260298218578e-05, -0.00027489589410834014, -0.1887330859899521, -0.001061081886291504, -0.007166504859924316, -0.2883751392364502, -0.0004087686538696289, -0.0001583099365234375, -2.9802304197801277e-06, -9.536738616588991e-07, -0.02533245086669922, -1.33514404296875e-05, -0.0006458759307861328, 0.0, -0.10432243347167969, 0.0, -9.894371032714844e-06, 0.0, -0.000102996826171875, -0.0001087188720703125, -0.0005800722865387797, -1.1920928244535389e-07, -0.3193531036376953, -0.0001316070556640625, -1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.86102294921875e-05, 0.0, -2.2649765014648438e-06, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.6174106597900391, -0.0001964569091796875, -9.5367431640625e-06, -0.003086090087890625, -0.00029754638671875, -0.2786135673522949, -4.00543212890625e-05, -0.5444746017456055, -0.010880470275878906, -1.52587890625e-05, -1.9073486328125e-06, -0.024051666259765625, 0.0, -0.521370530128479, -3.814697265625e-06, -0.46532535552978516, -1.7523765563964844e-05, -0.1422557830810547, -0.014492034912109375, 0.0, -0.0057239532470703125, 0.0, -0.0075359344482421875, 0.0, -0.47530901432037354, -3.814697265625e-06, -0.0013775825500488281, -6.4373016357421875e-06, -0.09037236124277115, 0.0, -0.6288881301879883, -0.0020503997802734375, -0.07535743713378906, -4.57763671875e-05, -0.14842605590820312, -0.0001811981201171875, -0.010491371154785156, -0.0014667510986328125, -0.11264610290527344, 0.0, -0.016611099243164062, 0.0, -0.31291210651397705, -1.9073486328125e-06, -0.45217084884643555, 0.0, -0.2763782739639282, 0.0, -0.041245460510253906, -0.4460134506225586, -0.000614166259765625, -0.266679048538208, 0.0, -4.9591064453125e-05, -0.21025371551513672, -9.5367431640625e-06, -0.0006694793701171875, -7.62939453125e-06, -0.020905494689941406, -7.62939453125e-06, -0.0005702972412109375, -0.0002536773681640625, -1.71661376953125e-05, -0.4588203430175781, -0.0003032684326171875, -1.0362434387207031, -1.9073486328125e-06, -0.037606239318847656, -2.3841855067985307e-07, -0.0005130767822265625, -0.14310646057128906, -0.0028553009033203125, -0.8540562391281128, 0.0, -0.03954887390136719, 0.0, -0.04068279266357422, -1.9073486328125e-06, -0.000385284423828125, -0.05049896240234375, -0.0028400421142578125, -0.4639720916748047, -6.29425048828125e-05, -0.0010166168212890625, 0.0, -0.14812850952148438, 0.0, -0.025458335876464844, 0.0, -0.044376492500305176, 0.0, -5.14984130859375e-05, -0.0001430511474609375, -4.9591064453125e-05, -0.3240007758140564, -2.0265579223632812e-06, -0.03397846221923828, -0.00640106201171875, -0.009021759033203125, -0.015212178230285645, -0.000171661376953125, -6.866455078125e-05, -3.814697265625e-05, -0.28900146484375, -0.0001354217529296875, -0.0006241798400878906, 0.0, -7.62939453125e-06, -0.4091770648956299, -5.9604644775390625e-06, -0.0001392364501953125, -0.9850015640258789, -1.2278481335670222e-05, -7.43865966796875e-05, -0.001560211181640625, -0.0003204345703125, -0.051105499267578125, -0.0002288818359375, -0.0001926422119140625, -0.018033981323242188, -0.5329799652099609, -0.0001316070556640625, -0.012724876403808594, -1.9073486328125e-06, -0.2255670577287674, -5.984306335449219e-05, -6.4849853515625e-05, -0.06562519073486328, -5.7220458984375e-06, -0.008177757263183594, -3.814697265625e-06, -0.32276058197021484, -1.9073486328125e-06, -0.40962207317352295, -3.814697265625e-06, -0.15002155303955078, -5.7220458984375e-06, -0.38016510009765625, -1.33514404296875e-05, -0.5593910217285156, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.00031876564025878906, 0.0, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -0.5787639617919922, -1.9073486328125e-06, -0.0011959075927734375, 0.0, -0.015246748924255371, -1.9073486328125e-06, -0.000988006591796875, -1.9073486328125e-06, -0.01935398578643799, 0.0, -1.9073486328125e-06, -0.8992385864257812, -9.5367431640625e-06, -0.0019683837890625, 0.0, -0.6687431335449219, -9.5367431640625e-06, -0.0002040863037109375, 0.0, -0.2662961483001709, -1.9073486328125e-06, -0.003749847412109375, 0.0, -0.05803036689758301, -1.9073486328125e-06, -0.1123189926147461, -0.5599842071533203, -9.1552734375e-05, -0.4848155975341797, -9.5367431640625e-06, -0.7603507041931152, 0.0, -0.15499615669250488, 0.0, -8.7738037109375e-05, -0.47675037384033203, -0.000247955322265625, -1.0385431051254272, 0.0, -0.047751426696777344, 0.0, -0.02640056610107422, -2.1457672119140625e-06], "choice_history": [54, 125, "Eye", "an", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Eye", " ", "for", " ", "Eye", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 59, 79, 169, 40, 110, "<UNK>", "<EOS>", 16, 87, 13, 80, 21, 110, "game", "<EOS>", "random_choice", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 66, 98, 17, 90, 14, 82, 13, 80, 13, 80, 21, 110, "attacker", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 56, 23, 115, "3", "<EOS>", 166, 5, 169, 42, 115, "0", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>", 181, 71, 137, 13, 80, 21, 110, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 169, 42, 115, "2", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "minion", "<EOS>", 156, "target", "<EOS>", 181, 66, 97, 15, 83, 2, 170, 36, 90, 21, 110, "target", "<EOS>", 166, 8, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 9, 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 181, 71, 137, 21, 110, "minion", "<EOS>", "damage", "<EOS>", 170, 42, 115, "3", "<EOS>", 40, 110, "self", "<EOS>"], "score": -22.751614130289873, "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template12", "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "game", "_type": "Name"}, "attr": "random_choice", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "targets": [{"id": "<UNK>", "_type": "Name"}], "_type": "Assign"}, {"test": {"comparators": [{"n": 0, "_type": "Num"}], "left": {"left": {"value": {"value": {"id": "attacker", "_type": "Name"}, "attr": "card", "_type": "Attribute"}, "attr": "minion_type", "_type": "Attribute"}, "op": {"_type": "Sub"}, "_type": "BinOp", "right": {"n": 3, "_type": "Num"}}, "ops": [{"_type": "Gt"}], "_type": "Compare"}, "orelse": [{"hole1": "change_temp_attack", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "_type": "Template17", "hole2": [{"n": 2, "_type": "Num"}]}], "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template17", "hole2": [{"n": 3, "_type": "Num"}, {"id": "self", "_type": "Name"}]}], "_type": "If"}], "hole1": "SecretCard", "hole0": "EyeanEye", "hole5": [{"arg": "game", "_type": "arg"}], "hole7": [{"name": "can_use", "body": [{"test": {"values": [{"comparators": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DEMON", "_type": "Attribute"}], "left": {"id": "target", "_type": "Name"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, {"comparators": [{"value": {"value": {"id": "self", "_type": "Name"}, "attr": "player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "ops": [{"_type": "IsNot"}], "_type": "Compare"}], "op": {"_type": "And"}, "_type": "BoolOp"}, "body": [{"hole1": "damage", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template17", "hole2": [{"n": 3, "_type": "Num"}, {"id": "self", "_type": "Name"}]}], "_type": "If"}], "_type": "FunctionDef", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}, {"arg": "target", "_type": "arg"}], "_type": "arguments"}}], "hole2": [{"hole3": "COMMON", "hole1": 1, "hole0": "Eye for Eye Eye", "_type": "Template6", "hole2": "PALADIN"}], "_type": "Template0", "hole3": "use"}}]}
{"gold_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in hearthbreaker.targeting.find_minion_spell_target(game,\n            lambda m: m.stealth):\n            minion.stealth = False\n        for secret in game.other_player.secrets:\n            secret.deactivate(game.other_player)\n        game.other_player.secrets = []\n        player.draw()\n", "beams": [{"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.<UNK>()\n        player.draw()\n", "score_history": [-0.0004177093505859375, -0.000125885009765625, -0.0006492420216090977, -6.365772424032912e-05, -4.767498467117548e-07, -0.00035858154296875, 0.0, -7.62939453125e-06, -0.000457763671875, -0.0004711151123046875, -1.1920928244535389e-07, -0.00022542476654052734, -2.3841855067985307e-07, -2.384185791015625e-06, -0.4636644124984741, -0.00023877620697021484, -0.0006104044150561094, -1.9073486328125e-06, -6.198883056640625e-06, 0.0, -6.22255465714261e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -1.668929871811997e-05, -2.3841855067985307e-07, -0.17808151245117188, -7.2479248046875e-05, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.537799835205078e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.658604621887207, -6.866455078125e-05, -1.71661376953125e-05, 0.0, -0.0016908645629882812, 0.0, -0.020433425903320312, -0.0003204345703125, -0.017541885375976562, -3.814697265625e-06, -7.05718994140625e-05, 0.0, -0.050037384033203125, -1.9073486328125e-06, -0.0011315345764160156, 0.0, -0.005789451766759157, -1.1920928244535389e-07, -7.62939453125e-05, -0.0009098052978515625, -0.36980533599853516, -6.103515625e-05, 0.0, -0.00023937225341796875, -1.1920928244535389e-07, -0.005278587341308594, 0.0, -0.0004634857177734375, -0.17162704467773438, -0.000141143798828125, 0.0, -0.000714421272277832, 0.0, -0.0022562742233276367, 0.0], "choice_history": [54, 124, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Flare", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 64, 93, 21, 110, "minion", "<EOS>", 13, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 181, 71, 136, 21, 110, "minion", "<EOS>", "<UNK>", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -1.9529363043601862, "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template12", "hole2": "player"}, "_type": "Expr"}, {"body": [{"hole1": "<UNK>", "hole0": {"id": "minion", "_type": "Name"}, "_type": "Template17"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}, "_type": "For"}, {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template17"}], "hole1": "SpellCard", "hole0": "Flare", "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole3": "RARE", "hole1": 2, "hole0": "Flare", "_type": "Template6", "hole2": "WARRIOR"}], "_type": "Template0", "hole3": "use"}}]}
{"gold_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, effects=[Effect(CharacterAttack(And(IsHero(),\n            TargetIsMinion())), [ActionTag(IncreaseDurability(),\n            WeaponSelector()), ActionTag(IncreaseWeaponAttack(-1),\n            WeaponSelector()), ActionTag(Give(BuffUntil(ChangeAttack(1),\n            AttackCompleted())), HeroSelector())])])\n", "beams": [{"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, effects=[Effect(MinionSummoned(), ActionTag(\n            Give([Buff(ChangeAttack(1)), Buff(ChangeHealth(1))]),\n            TargetSelector())), Effect(MinionSummoned(), ActionTag(\n            <UNK>Durability(), WeaponSelector()))])\n", "score_history": [-5.7220458984375e-06, -0.32993221282958984, -0.014127237722277641, -0.00904536247253418, -0.00025567124248482287, -6.35385513305664e-05, -5.960462772236497e-07, -5.7220458984375e-05, -0.5009326934814453, -0.0009250640869140625, -2.1934269170742482e-05, -0.00012409687042236328, -0.05059506744146347, -3.564294092939235e-05, -0.18993306159973145, -2.264974000354414e-06, -0.00040721893310546875, 0.0, -0.022064208984375, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -3.0517578125e-05, -0.001415252685546875, -0.006648063659667969, -0.0001289761275984347, -1.1920928244535389e-07, -0.01894998550415039, -7.152555099310121e-07, -0.000789642333984375, -3.933898824470816e-06, -0.37819480895996094, -5.7220458984375e-06, -1.9073486328125e-06, -0.1104278564453125, 0.0, -0.000457763671875, -0.4396934509277344, -0.0005935430526733398, 0.0, -7.05718994140625e-05, -0.0715789794921875, -4.57763671875e-05, -0.025629162788391113, -0.044559478759765625, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -0.04897785186767578, -2.47955322265625e-05, -0.0001983642578125, -1.9073486328125e-06, -0.0011612173402681947, -0.00011098384857177734, -1.9073486328125e-05, -4.38690185546875e-05, -5.7220458984375e-05, -0.0001735687255859375, -0.00031280517578125, -0.0003528594970703125, -0.0010505893733352423, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0007399320602416992, -0.027825117111206055, -1.1444091796875e-05, -1.1444091796875e-05, -0.000331878662109375, 0.0, -0.0025243014097213745, -1.9073486328125e-06, -1.33514404296875e-05, -0.026292800903320312, -2.586841583251953e-05, -1.1444091796875e-05, -1.33514404296875e-05, -1.1444091796875e-05, -4.076957702636719e-05, -0.0053403377532958984, 0.0, -3.62396240234375e-05, -0.0003452301025390625, -5.7220458984375e-06, -0.0013683885335922241, -7.62939453125e-06, -0.009143829345703125, -8.0108642578125e-05, -0.054306983947753906, -0.00014340877532958984, 0.0, 0.0, -0.0016937255859375, -0.0001430511474609375, -0.09076344966888428, 0.0, -4.9591064453125e-05, -0.03351116180419922, -1.9073486328125e-05, -0.04419231414794922, -0.014414787292480469, -3.933906555175781e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0015742778778076172, -0.0002574920654296875, -2.384185791015625e-06, -7.62939453125e-06, -0.1515188217163086, -1.1444091796875e-05, -0.04714381322264671, -0.01961846835911274, -3.6001059925183654e-05, -0.286163330078125, 0.0, -0.3174114227294922, -4.780292510986328e-05, 0.0], "choice_history": [54, 122, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 181, 73, 149, "Gorehowl", "<EOS>", "7", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 181, 70, 133, "Weapon", "<EOS>", "7", "<EOS>", "1", "<EOS>", 176, 53, 159, "effects", "<EOS>", 28, 142, "Effect", "<EOS>", 170, 50, 146, "Minion", "Summoned", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Health", "<EOS>", 169, 42, 115, "1", "<EOS>", 50, 146, "Target", "Selector", "<EOS>", 169, 49, 145, "Effect", "<EOS>", 170, 50, 146, "Minion", "Summoned", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 50, 146, "<UNK>", "Durability", "<EOS>", 50, 146, "Weapon", "Selector", "<EOS>"], "score": -3.4075791279176926, "model_output": {"hole4": "player", "hole6": [{"hole3": [{"value": {"hole1": [{"hole0": "MinionSummoned", "_type": "Template19"}, {"func": {"id": "ActionTag", "_type": "Name"}, "args": [{"func": {"id": "Give", "_type": "Name"}, "args": [{"_type": "List", "elts": [{"hole1": {"id": "ChangeAttack", "_type": "Name"}, "hole0": "Buff", "_type": "Template13", "hole2": [{"n": 1, "_type": "Num"}]}, {"hole1": {"id": "ChangeHealth", "_type": "Name"}, "hole0": "Buff", "_type": "Template13", "hole2": [{"n": 1, "_type": "Num"}]}]}], "_type": "Call"}, {"hole0": "TargetSelector", "_type": "Template19"}], "_type": "Call"}], "hole0": "Effect", "_type": "Template18", "hole2": [{"hole1": [{"hole0": "MinionSummoned", "_type": "Template19"}, {"func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole0": "<UNK>Durability", "_type": "Template19"}, {"hole0": "WeaponSelector", "_type": "Template19"}], "_type": "Call"}], "hole0": "Effect", "_type": "Template18_expr_seq"}]}, "arg": "effects", "_type": "keyword"}], "hole1": 7, "hole0": "Weapon", "_type": "Template14", "hole2": 1}], "hole1": "WeaponCard", "hole0": "Gorehowl", "hole2": [{"hole3": "EPIC", "hole1": 7, "hole0": "Gorehowl", "_type": "Template6", "hole2": "PRIEST"}], "_type": "Template0", "hole3": "create_weapon"}}]}
{"gold_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n", "beams": [{"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n", "score_history": [-1.9073486328125e-06, -6.4849853515625e-05, -1.4185804502631072e-05, -2.2411286408896558e-05, -3.203749656677246e-06, -1.9073486328125e-05, 0.0, -3.62396240234375e-05, -0.0003414154052734375, -0.024017333984375, -3.814697265625e-06, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -1.3113007298670709e-05, 0.0, -0.001636505126953125, -0.00011444091796875, -2.09808349609375e-05, -1.1920928244535389e-07, -5.7220440794480965e-06, -1.9073486328125e-05, 0.0, -0.004033809062093496, -1.311301275563892e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -6.079673767089844e-06, -0.011701583862304688, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.0001441240165149793, 0.0, -0.0001804828643798828, 0.0, -2.86102294921875e-05, -0.0001506805419921875, -7.092952728271484e-05, -5.7220458984375e-06, -8.0108642578125e-05, -0.00048065185546875, -3.4332275390625e-05, -0.00030553340911865234, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -0.0003037452697753906, 0.0, -3.814697265625e-06, -7.05718994140625e-05, -3.24249267578125e-05, -3.3378603347955504e-06, -1.311301275563892e-06, -1.1026627362298314e-05, -1.1920922133867862e-06, -0.01378178596496582, -3.814697265625e-06, -7.2479248046875e-05, -2.47955322265625e-05, -2.47955322265625e-05, -3.814697265625e-06], "choice_history": [54, 122, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Hound", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 111, "True", "<EOS>"], "score": -0.057997037696040366, "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole1": 1, "hole0": 1, "_type": "Template9", "hole2": "charge"}], "hole1": "MinionCard", "hole0": "Hound", "hole2": [{"hole3": [{"hole0": "BEAST", "_type": "Template16"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Hound", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "beams": [{"inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (Null, EnemyPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [0.0, -8.0108642578125e-05, -0.012846097350120544, -0.00033432678901590407, -5.960462772236497e-07, -1.1897645890712738e-07, -1.5497207641601562e-05, -1.1920928244535389e-07, -3.62396240234375e-05, -0.0001678466796875, -3.24249267578125e-05, -7.62939453125e-06, 0.0, -1.3470649719238281e-05, 0.0, -2.050399598374497e-05, 0.0, -3.814697265625e-05, -3.814697265625e-06, -3.814697265625e-06, -7.152555099310121e-07, -0.00011265277862548828, -1.1682510375976562e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0001220703125, -0.0014362335205078125, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.0994415283203125e-05, -1.9073486328125e-06, -0.0010319948196411133, -7.62939453125e-06, -0.005401611328125, -1.52587890625e-05, -7.62939453125e-06, -0.00024044513702392578, -1.9073486328125e-06, -3.24249267578125e-05, -5.7220458984375e-06, -0.000118255615234375, 0.0, -0.0003032684326171875, 0.0, -0.0001964569091796875, -0.0009975433349609375, -1.9073486328125e-05, -0.00028526782989501953, -0.00010299346467945725, -0.0005919300019741058, -2.3841855067985307e-07, -6.866455078125e-05, -0.2756776809692383, -1.1444091796875e-05, -3.814697265625e-06, -0.0007551908493041992, -0.0006465911865234375, -4.38690185546875e-05, -0.00428009033203125, -0.005680084228515625, -0.00018310546875, -0.00055694580078125, -3.0517578125e-05, -7.62939453125e-06, 0.0, -0.06747817993164062, -0.0001888275146484375, -2.09808349609375e-05, -0.057415008544921875, 0.0, -0.3077378273010254, -6.711483001708984e-05, -4.589557647705078e-05, -2.3365020751953125e-05, 0.0, -4.4465043174568564e-05, 0.0, -7.62939453125e-06, -3.0517578125e-05, -2.6702880859375e-05, -1.0609612218104303e-05, 0.0, -0.14779222011566162, -1.7881377516459906e-06], "choice_history": [54, 122, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Injured", " ", "Blademaster", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "4", "<EOS>", 35, 87, 21, 110, "Minion", "Selector", "<EOS>", 171, 41, 112, "Null", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 50, 146, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "7", "<EOS>"], "score": -0.8935952007275532, "model_output": {"hole4": "player", "hole6": [{"hole1": 7, "hole0": 4, "_type": "Template11"}], "hole1": "MinionCard", "hole0": "InjuredBlademaster", "hole2": [{"hole3": [{"value": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"hole1": 4, "hole0": "Damage", "_type": "Template15"}, {"func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"value": "Null", "_type": "NameConstant"}, {"hole0": "EnemyPlayer", "_type": "Template19"}, {"hole0": "RandomPicker", "_type": "Template19"}], "_type": "Call"}], "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Injured Blademaster", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(AfterAdded(), ActionTag(Damage(\n            1), CharacterSelector(players=EnemyPlayer(), picker=\n            RandomPicker(), condition=None)))])\n", "beams": [{"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Damage(1), CharacterSelector(players=EnemyPlayer(), picker=\n            RandomPicker(), condition=Null)))])\n", "score_history": [0.0, -7.62939453125e-06, -0.00024470672360621393, -9.166917152469978e-05, -1.0728830375228426e-06, -1.1918018572032452e-07, -1.8954275219584815e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0011444091796875, -3.0517578125e-05, -5.245195097813848e-06, -0.00010406957881059498, -1.71661376953125e-05, -1.9073486328125e-06, -0.0002615504781715572, -1.1920928244535389e-07, -0.21060001850128174, -1.9073486328125e-06, -0.0009214878082275391, 0.0, -1.1444091796875e-05, 0.0, -5.841255187988281e-06, 0.0, -1.9073486328125e-06, -0.0001010894775390625, -3.4332275390625e-05, -0.0021135807037353516, -1.776205863279756e-05, -0.00020039081573486328, -1.1920928244535389e-07, -0.0008145569008775055, -3.576278118089249e-07, -3.62396240234375e-05, -0.000377655029296875, -1.919269561767578e-05, 0.0, -3.0517578125e-05, -0.0022830963134765625, -0.46842479705810547, -0.07554206997156143, -0.009427189826965332, -9.72747802734375e-05, -6.29425048828125e-05, -3.814697265625e-06, -0.030718984082341194, -0.04634910821914673, -9.72747802734375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.0023103952407836914, -0.000202178955078125, -0.00017201900482177734, -2.288818359375e-05, -0.0003032684326171875, -2.09808349609375e-05, -0.00027430057525634766, -1.597404116182588e-05, -2.1815067157149315e-05, -0.0007612705230712891, -0.00046539306640625, -0.0002346038818359375, -1.52587890625e-05, -3.814697265625e-06, -0.028621912002563477, -0.0001049041748046875, -2.09808349609375e-05, -0.6094789505004883, -0.000293731689453125, -9.34600830078125e-05, -4.398822784423828e-05, -9.5367431640625e-06, -0.000247955322265625, -3.814697265625e-06, -0.000186920166015625, -0.0002040863037109375, -2.288818359375e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.01493072509765625, 0.0, -0.000457763671875, -1.9073486328125e-06, -0.0010739564895629883, -4.589557647705078e-05, -1.71661376953125e-05, -0.0003509521484375, -1.9073486328125e-06, -0.1287679672241211, 0.0, -0.0006542205810546875, -0.00225830078125, -0.0001163482666015625, -0.0001373291015625], "choice_history": [54, 122, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 46, 128, "Card", "Used", "<EOS>", 21, 110, "Is", "Spell", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Damage", "<EOS>", "1", "<EOS>", 35, 86, 21, 110, "Character", "Selector", "<EOS>", 178, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>", 53, 159, "condition", "<EOS>", 22, 112, "Null", "<EOS>"], "score": -1.64323801900197, "model_output": {"hole4": "player", "hole6": [{"hole3": {"hole1": [{"hole1": {"id": "IsSpell", "_type": "Name"}, "hole0": "CardUsed", "_type": "Template13"}, {"func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole1": 1, "hole0": "Damage", "_type": "Template15"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template19"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "RandomPicker", "_type": "Template19"}, "arg": "picker", "_type": "keyword"}, {"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}], "_type": "Call"}], "_type": "Call"}], "hole0": "Effect", "_type": "Template18"}, "hole1": 2, "hole0": 3, "_type": "Template9", "hole2": "effects"}], "hole1": "MinionCard", "hole0": "KnifeJuggler", "hole2": [{"hole3": "RARE", "hole1": 2, "hole0": "Knife Juggler", "_type": "Template6", "hole2": "ALL"}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(3\n            ), CharacterSelector(condition=IsDamaged(), picker=RandomPicker\n            ())))])\n", "beams": [{"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE\n            )\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(), ActionTag(Heal(3),\n            MinionSelector(condition=Null, players=BothPlayer())))])\n", "score_history": [-1.9073486328125e-06, -0.0002536773681640625, -0.006180182099342346, -0.03960859775543213, -3.5623088479042053e-07, -1.71661376953125e-05, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0020160675048828125, -7.62939453125e-06, -5.650515595334582e-05, -1.52587890625e-05, -7.748603820800781e-06, 0.0, -0.6417579650878906, 0.0, -9.918212890625e-05, 0.0, -6.29425048828125e-05, 0.0, -1.5616416931152344e-05, 0.0, -1.9073486328125e-06, -0.0006313323974609375, -3.814697265625e-05, -8.475780487060547e-05, -4.327203714638017e-05, -1.4781842764932662e-05, -1.9431114196777344e-05, -0.004604935646057129, 0.0, -1.1444091796875e-05, -0.000774383544921875, -2.8848648071289062e-05, -3.814697265625e-06, -3.0517578125e-05, -0.0001201629638671875, -7.62939453125e-06, -0.00012874603271484375, -0.3449563980102539, -4.57763671875e-05, -0.0023555755615234375, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -4.768370445162873e-07, -5.91278076171875e-05, -0.0024852752685546875, -7.62939453125e-06, -0.06904982775449753, -1.7881233361549675e-05, -0.0020285197533667088, -2.0861511075054295e-05, -0.0003795623779296875, -3.62396240234375e-05, -1.9073486328125e-06, 0.0, -0.6467229127883911, -0.0001392364501953125, 0.0, -0.10811042785644531, -1.9073486328125e-06, -1.1444091796875e-05, -0.25891757011413574, -5.7220458984375e-06, -0.002323150634765625, -0.0001239776611328125, -1.1444091796875e-05, -5.7220458984375e-06, -0.001190185546875, -9.5367431640625e-06, -0.0008802413940429688, 0.0, -1.9073486328125e-05, 0.0, -0.22544491291046143, -7.82012939453125e-05, -1.9073486328125e-05], "choice_history": [54, 122, "Lightwell", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Lightwell", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 50, 146, "Turn", "Ended", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 47, 134, "Heal", "<EOS>", "3", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 177, 53, 159, "condition", "<EOS>", 22, 112, "Null", "<EOS>", 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>"], "score": -2.362175404590623, "model_output": {"hole4": "player", "hole6": [{"hole3": {"hole1": [{"hole0": "TurnEnded", "_type": "Template19"}, {"func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole1": 3, "hole0": "Heal", "_type": "Template15"}, {"func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}, {"value": {"hole0": "BothPlayer", "_type": "Template19"}, "arg": "players", "_type": "keyword"}], "_type": "Call"}], "_type": "Call"}], "hole0": "Effect", "_type": "Template18"}, "hole1": 5, "hole0": 0, "_type": "Template9", "hole2": "effects"}], "hole1": "MinionCard", "hole0": "Lightwell", "hole2": [{"hole3": "RARE", "hole1": 2, "hole0": "Lightwell", "_type": "Template6", "hole2": "MAGE"}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(), ActionTag(Give(\n            ChangeAttack(1)), SelfSelector()))])\n", "beams": [{"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "score_history": [0.0, -1.71661376953125e-05, -6.198863957251888e-06, -5.9604644775390625e-06, -1.311301275563892e-06, 0.0, -1.9192693798686378e-05, -2.622600959512056e-06, -1.9073486328125e-06, -0.0013942718505859375, -3.24249267578125e-05, -8.821448318485636e-06, -0.0030245089437812567, -4.589557647705078e-05, -7.62939453125e-06, -0.1371300220489502, -1.8715683836489916e-05, -0.6880693435668945, 0.0, -5.1975250244140625e-05, 0.0, -4.76837158203125e-05, 0.0, -7.998934597708285e-05, 0.0, -1.9073486328125e-06, -0.0001354217529296875, -2.288818359375e-05, -3.576278118089249e-07, -1.7881377516459906e-06, -4.935242759529501e-05, -1.0013580322265625e-05, -0.00015687942504882812, -9.536738616588991e-07, -0.00023651123046875, -0.00237274169921875, -9.405612217960879e-05, 0.0, -6.103515625e-05, -0.20324039459228516, -0.0021295547485351562, -0.0001049041748046875, -1.1444091796875e-05, -0.03611181303858757, -0.0019840002059936523, 0.0, -0.9100122451782227, -3.24249267578125e-05, -7.62939453125e-06, -0.0008031129837036133, -1.1920928244535389e-07, -5.53131103515625e-05, -1.9073486328125e-06, -0.03517316281795502, -0.0009062290191650391, -0.0001678466796875, -1.1444091796875e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -5.924701690673828e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.022205352783203125, -0.001473903190344572, -2.0265579223632812e-06, -1.33514404296875e-05, -2.6702880859375e-05, -0.0001422135392203927, -0.0003274325281381607, -9.5367431640625e-06, -1.1444091796875e-05, -2.09808349609375e-05, -9.5367431640625e-06, -0.0009613037109375, -7.641315460205078e-05, -0.000186920166015625, 0.0, -5.650520324707031e-05, -1.1563301086425781e-05, 0.0], "choice_history": [54, 122, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 28, 141, "Effect", "<EOS>", 170, 35, 86, 21, 110, "Spell", "Cast", "<EOS>", 176, 53, 159, "player", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 35, 87, 21, 110, "Action", "Tag", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "1", "<EOS>", 50, 146, "Self", "Selector", "<EOS>"], "score": -2.0495033033939123, "model_output": {"hole4": "player", "hole6": [{"hole3": {"hole1": [{"func": {"id": "SpellCast", "_type": "Name"}, "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template19"}, "arg": "player", "_type": "keyword"}], "_type": "Call"}, {"func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole1": {"id": "ChangeAttack", "_type": "Name"}, "hole0": "Give", "_type": "Template13", "hole2": [{"n": 1, "_type": "Num"}]}, {"hole0": "SelfSelector", "_type": "Template19"}], "_type": "Call"}], "hole0": "Effect", "_type": "Template18"}, "hole1": 3, "hole0": 1, "_type": "Template9", "hole2": "effects"}], "hole1": "MinionCard", "hole0": "ManaWyrm", "hole2": [{"hole3": "COMMON", "hole1": 1, "hole0": "Mana Wyrm", "_type": "Template6", "hole2": "MAGE"}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class MogushanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n", "beams": [{"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n", "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -5.113947918289341e-05, -0.00017152777581941336, -2.3841855067985307e-07, 0.0, -1.0371208190917969e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.016878128051757812, -7.62939453125e-06, -1.0728830375228426e-06, -0.00011777820327552035, -1.33514404296875e-05, -1.9073486328125e-06, -2.622604142743512e-06, 0.0, -0.0005702972412109375, 0.0, -3.8504600524902344e-05, 0.0, -1.33514404296875e-05, 0.0, -0.010952591896057129, 0.0, 0.0, -4.00543212890625e-05, -0.0003414154052734375, -2.264975591970142e-06, -2.3841855067985307e-07, -0.0006326432339847088, 0.0, -0.0008126497268676758, 0.0, -2.288818359375e-05, -4.9591064453125e-05, -1.9073486328125e-05, -1.9073486328125e-06], "choice_history": [54, 122, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 22, 111, "True", "<EOS>"], "score": -0.03077433819458264, "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole1": 7, "hole0": 1, "_type": "Template9", "hole2": "taunt"}], "hole1": "MinionCard", "hole0": "Mogu'shanWarden", "hole2": [{"hole3": "COMMON", "hole1": 4, "hole0": "Mogu'shan Warden", "_type": "Template6", "hole2": "ALL"}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n\n        class Gain2(ChoiceCard):\n\n            def __init__(self):\n                super().__init__('Gain 2 mana crystals', 0, CHARACTER_CLASS\n                    .DRUID, CARD_RARITY.COMMON, False)\n\n            def use(self, player, game):\n                if player.max_mana < 8:\n                    player.max_mana += 2\n                    player.mana += 2\n                else:\n                    player.max_mana = 10\n                    player.mana += 2\n\n\n        class Draw3(ChoiceCard):\n\n            def __init__(self):\n                super().__init__('Draw three cards', 0, CHARACTER_CLASS.\n                    DRUID, CARD_RARITY.COMMON, False)\n\n            def use(self, player, game):\n                player.draw()\n                player.draw()\n                player.draw()\n        option = player.agent.choose_option([Gain2(), Draw3()], player)\n        option.use(player, game)\n", "beams": [{"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n\n    def use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score_history": [-5.7220458984375e-05, -0.6577072143554688, -3.02787302643992e-05, -0.000370706053217873, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-06, -8.7738037109375e-05, -0.06328964233398438, -2.47955322265625e-05, -1.2755391253449488e-05, -0.000591278076171875, -1.1920928244535389e-07, -2.503394853192731e-06, -0.0011311769485473633, -4.0531076592742465e-06, -0.001667141797952354, 0.0, -0.12115192413330078, 0.0, -0.004834294319152832, 0.0, -0.0002002716064453125, -1.33514404296875e-05, -0.0006639929488301277, -1.9073486328125e-06, -0.03640174865722656, -0.009555816650390625, -0.0003948211669921875, -0.008955955505371094, -0.0001735687255859375, -0.000164031982421875, -0.00519561767578125, -0.0001163482666015625, -0.0006561279296875, -0.0009632110595703125, -6.103515625e-05, -6.306171417236328e-05, -6.675719760096399e-06, -0.0022138357162475586, 0.0, -1.1444091796875e-05, 0.0, -0.0003038644790649414, 0.0, -0.30121898651123047, -9.72747802734375e-05, -5.53131103515625e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.0003532170958351344, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.00115966796875, 0.0, -0.00011169910430908203, -1.1920928244535389e-07, -0.0019850730895996094, 0.0, -0.000156402587890625, -0.0009593963623046875, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -0.26348674297332764, -7.62939453125e-06, -0.0003490447998046875, -0.0022869110107421875, -8.96453857421875e-05, -0.0068305726163089275, -2.264974000354414e-06, -2.288818359375e-05, -1.52587890625e-05, -0.0011081695556640625, -4.00543212890625e-05, -9.179115295410156e-05, 0.0, -2.86102294921875e-05, -0.0002371072769165039, -5.960462772236497e-07, -5.7220458984375e-05, -0.0003024339384865016, 0.0, -0.01824474334716797, -0.04000091552734375, -0.0001125335693359375, -0.4402751922607422, -0.0001678466796875, -0.0001373291015625, -0.001544952392578125, -0.00020599365234375, -6.29425048828125e-05, -0.000240325927734375, -3.814697265625e-06, -0.00034999847412109375, -2.264975046273321e-05, -0.0035216808319091797, 0.0, -2.288818359375e-05, 0.0, -0.0004559755325317383, 0.0, -0.02741527557373047, -3.4332275390625e-05, -3.24249267578125e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.0003638267226051539, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -0.001728057861328125, 0.0, -8.404254913330078e-05, -1.1920928244535389e-07, -0.0024720430374145508, 0.0, -0.000293731689453125, -0.0009555816650390625, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -0.22792863845825195, -7.62939453125e-06], "choice_history": [54, 125, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 181, 65, 94, "use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>"], "score": -2.265086135252467, "model_output": {"hole4": "player", "hole6": [{"value": {"values": [{"hole3": "game", "hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template12", "hole2": "player"}, {"comparators": [{"n": 7, "_type": "Num"}], "left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "hole1": "SpellCard", "hole0": "Nourish", "hole5": [{"arg": "game", "_type": "arg"}], "hole7": [{"name": "use", "body": [{"value": {"values": [{"hole3": "game", "hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template12", "hole2": "player"}, {"comparators": [{"n": 7, "_type": "Num"}], "left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "_type": "FunctionDef", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "hole2": [{"hole3": "RARE", "hole1": 5, "hole0": "Nourish", "_type": "Template6", "hole2": "DRUID"}], "_type": "Template0", "hole3": "can_use"}}]}
{"gold_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.add_aura(AuraUntil(ManaChange(-3), CardSelector(condition=\n            IsSpell()), SpellCast()))\n", "beams": [{"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n\n        def reduce_cost(3):\n            if card.is_minion() and card.minion_type == MINION_TYPE.BEAST:\n                card.add_buff(Buff(ManaChange(-3)))\n        super().use(player, game)\n        player.<UNK>('card_drawn', reduce_cost)\n        player.draw()\n", "score_history": [-5.7220458984375e-06, -0.0008487701416015625, -0.004631387535482645, -0.0005558712291531265, -4.7637149691581726e-07, -1.33514404296875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.0054683685302734375, -3.62396240234375e-05, -4.911301948595792e-05, -2.6702880859375e-05, -7.152555099310121e-07, -6.198873961693607e-06, -0.26091861724853516, -2.0265579223632812e-06, -0.0012760162353515625, 0.0, -3.814697265625e-06, 0.0, -3.4570680327306036e-06, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -5.4001797252567485e-05, -2.0265579223632812e-06, -0.3710012435913086, -0.0023097991943359375, -0.0057525634765625, -0.013097391463816166, -7.987022399902344e-06, -0.0003509521484375, -0.00135040283203125, -0.3110300600528717, 0.0, -0.02303314208984375, -0.0021486282348632812, -0.000118255615234375, -0.001316070556640625, -0.0001430511474609375, -0.000438690185546875, -0.0001544952392578125, -0.0224456787109375, -0.014363288879394531, -0.0008802413940429688, -9.5367431640625e-06, -3.4332275390625e-05, -1.33514404296875e-05, -0.006348472088575363, -0.0009108781814575195, -0.10028254985809326, -2.741813204920618e-06, -0.003391265869140625, -9.34600830078125e-05, -0.004237174987792969, -1.9073486328125e-06, -0.000858306884765625, -1.52587890625e-05, -0.08925807476043701, -4.2319297790527344e-05, -0.2168828248977661, -5.9604644775390625e-06, -1.9073486328125e-06, -0.8180046081542969, -4.38690185546875e-05, -7.05718994140625e-05, -3.814697265625e-06, -0.0017805099487304688, -1.33514404296875e-05, -0.0013272716896608472, -7.998623186722398e-05, -0.4239072799682617, -6.079673767089844e-06, -0.000125885009765625, -0.000240325927734375, -8.0108642578125e-05, -0.000156402587890625, -7.2479248046875e-05, -0.029770825058221817, -7.62939453125e-06, -0.0068874359130859375, -2.0265579223632812e-06, -0.0011463165283203125, -9.918212890625e-05, -0.0011491775512695312, -0.0028746093157678843, -2.0265579223632812e-06, -9.5367431640625e-06, -3.62396240234375e-05, -0.0029195465613156557, -0.0008193156099878252, -2.3841855067985307e-07, -0.001178741455078125, -0.04754829406738281, -0.0002269744873046875, -4.76837158203125e-05, -0.0001277923583984375, -0.000274658203125, -0.00010844040662050247, -7.152551916078664e-06, -0.11905384063720703, -0.000217437744140625, -0.00020599365234375, -6.103515625e-05, -9.5367431640625e-06, 0.0, -7.033347174001392e-06, -0.0003180503845214844, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, 0.0, -4.410743713378906e-05, 0.0, -0.000396728515625, -0.000247955322265625, -0.019201278686523438, -1.9073486328125e-06, -0.005984306335449219, -5.960462772236497e-07, -0.01067054271697998, 0.0, -0.000396728515625, -0.000675201416015625, -5.7220458984375e-06, -0.09381842613220215, -1.52587890625e-05, -0.0058917999267578125, -3.814697265625e-06, -0.009500622749328613, -0.00018143653869628906, -0.0004558563232421875, -0.005684852600097656, -0.00029754638671875, -9.5367431640625e-06, -0.0006885528564453125, -1.1920928244535389e-07, -0.005602121353149414, -1.9073486328125e-06], "choice_history": [54, 124, "Preparation", "<EOS>", "Spell", "Card", "<EOS>", 181, 73, 149, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 184, 65, 94, "reduce_cost", "<EOS>", 0, 150, "3", "<EOS>", 181, 66, 97, 15, 83, 2, 170, 35, 85, 13, 80, 21, 110, "card", "<EOS>", "is_minion", "<EOS>", 36, 90, 13, 80, 21, 110, "card", "<EOS>", "minion_type", "<EOS>", 166, 4, 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 181, 71, 137, 21, 110, "card", "<EOS>", "add_buff", "<EOS>", 169, 46, 130, "Buff", "<EOS>", 21, 110, "Mana", "Change", "<EOS>", 169, 51, 154, 76, 23, 115, "3", "<EOS>", 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 21, 110, "player", "<EOS>", "<UNK>", "<EOS>", 170, 43, 119, "card_drawn", "<EOS>", 40, 110, "reduce_cost", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -3.087140565258345, "model_output": {"hole4": "player", "hole6": [{"name": "reduce_cost", "body": [{"test": {"values": [{"func": {"value": {"id": "card", "_type": "Name"}, "attr": "is_minion", "_type": "Attribute"}, "_type": "Call"}, {"comparators": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}], "left": {"value": {"id": "card", "_type": "Name"}, "attr": "minion_type", "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare"}], "op": {"_type": "And"}, "_type": "BoolOp"}, "body": [{"hole1": "add_buff", "hole0": {"id": "card", "_type": "Name"}, "_type": "Template17", "hole2": [{"hole1": {"id": "ManaChange", "_type": "Name"}, "hole0": "Buff", "_type": "Template13", "hole2": [{"operand": {"n": 3, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}]}]}], "_type": "If"}], "_type": "FunctionDef", "args": {"hole0": "3", "_type": "Template8"}}, {"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template12", "hole2": "player"}, "_type": "Expr"}, {"hole1": "<UNK>", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template17", "hole2": [{"s": "card_drawn", "_type": "Str"}, {"id": "reduce_cost", "_type": "Name"}]}, {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template17"}], "hole1": "SpellCard", "hole0": "Preparation", "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole3": "EPIC", "hole1": 0, "hole0": "Preparation", "_type": "Template6", "hole2": "PRIEST"}], "_type": "Template0", "hole3": "use"}}]}
{"gold_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, minion):\n        minion.set_health_to(1)\n        super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n", "beams": [{"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, <UNK>, attacker):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            minion.player.trigger('<UNK>', mirror)\n            mirror.summon(player, game, len(player.minions))\n            mirror.<UNK>(new_card)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n", "score_history": [-0.0001010894775390625, -0.22747230529785156, -4.994744449504651e-05, -0.005946900229901075, -1.1086458471254446e-05, -0.0008027186850085855, -1.537799835205078e-05, -0.028743743896484375, -0.0010929107666015625, -7.62939453125e-06, -6.7949122239951976e-06, -0.001648545265197754, -1.7881393432617188e-06, -2.0265558760002023e-06, -0.11645269393920898, -1.1444091796875e-05, -0.0011489391326904297, 0.0, -0.0026378631591796875, 0.0, -0.1309490203857422, 0.0, -0.0002994537353515625, -0.0002155303955078125, -0.11980755627155304, -1.561641511216294e-05, -0.011946678161621094, -0.0038995742797851562, -2.09808349609375e-05, -0.11843109130859375, -3.62396240234375e-05, -0.0069751739501953125, -0.0001201629638671875, -0.0035915374755859375, 0.0, -0.0006525501958094537, -1.9073486328125e-06, -1.9073486328125e-05, -0.03217887878417969, 0.0, -0.00043392181396484375, 0.0, -0.00019073486328125, -1.9073486328125e-06, -0.0009198188781738281, 0.0, -0.000316619873046875, 0.0, -0.0013289451599121094, -1.9073486328125e-06, -7.62939453125e-06, -0.001026153564453125, 0.0, -4.1961669921875e-05, -5.7220458984375e-06, -0.005088090896606445, -3.4332275390625e-05, -0.09125518798828125, -0.000125885009765625, -3.62396240234375e-05, -5.7220458984375e-05, -0.0007791519165039062, -1.33514404296875e-05, -0.305600643157959, -8.427802822552621e-05, -0.000415802001953125, -0.02671051025390625, -0.0007724761962890625, -2.86102294921875e-05, -0.000370025634765625, 0.0, -0.13829123973846436, -2.3841855067985307e-07, -0.03751373291015625, 0.0, -1.71661376953125e-05, -0.00026702880859375, 0.0, -0.2642850875854492, 0.0, -0.1024932861328125, 0.0, -0.0045986175537109375, 0.0, -0.0012989044189453125, -0.0004482269287109375, -0.012292861938476562, -1.9073486328125e-06, -0.3169757127761841, 0.0, -0.10250377655029297, -1.9073486328125e-06, -0.0010890960693359375, -0.0807647705078125, -0.000255584716796875, -1.9073486328125e-05, -1.71661376953125e-05, -0.04866276681423187, -8.797645568847656e-05, -5.7220458984375e-06, -0.0001811981201171875, 0.0, -0.00136566162109375, 0.0, -0.00048065185546875, 0.0, -0.016123652458190918, -1.9073486328125e-06, -0.0013599395751953125, 0.0, -0.000518798828125, -7.62939453125e-06, -0.003170013427734375, -0.0005474090576171875, -0.14062881469726562, -9.5367431640625e-06, -0.028616905212402344, 0.0, -0.007854580879211426, -3.933906555175781e-06, -0.18783390522003174, 0.0, -0.19478702545166016, 0.0, -0.0036144256591796875, -2.6702880859375e-05, -1.71661376953125e-05, -0.7631381750106812, -1.1444091796875e-05, -0.0003299713134765625, -6.29425048828125e-05, -0.08769917488098145, -1.2278556823730469e-05, -0.0001010894775390625, -0.06571388244628906, -0.09153175354003906, -1.9073486328125e-06, -0.5011676549911499, -3.933904736186378e-06, -1.262330174446106, -1.5497195136049413e-06, -0.0003986358642578125, -0.0004825592041015625, -5.14984130859375e-05, -0.0040264129638671875, -5.960462772236497e-07, -0.0009479522705078125, -1.71661376953125e-05, -4.38690185546875e-05, -5.7220458984375e-05, -6.103515625e-05, -8.20159912109375e-05, 0.0, 0.0, -0.00012922286987304688, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -0.01913011074066162, -5.8412379075889476e-06, -0.0003567934036254883, -3.814697265625e-06, -0.0015125274658203125, -0.0049381256103515625, -0.3291893005371094, 0.0, -0.6639255285263062, -1.5497195136049413e-06, -0.09679698944091797, 0.0, -0.002941131591796875, -0.29734039306640625, -1.1444091796875e-05, -1.1683639287948608, -3.576278118089249e-07, -0.02908802032470703, -0.0057163238525390625, -0.000186920166015625, -0.02888929843902588, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -0.18570518493652344, -5.7220458984375e-06, -6.127357482910156e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.00764775276184082, -2.9802276912960224e-06, -2.288818359375e-05, -0.0002725118538364768, -1.9073486328125e-06, -1.71661376953125e-05, -0.00518798828125, -0.000213623046875, -0.000904083251953125, -1.52587890625e-05, -9.918212890625e-05, -0.0001583099365234375, -0.018575668334960938, -0.00067901611328125, -9.34600830078125e-05, 0.0, -0.00039899349212646484, -2.50339189733495e-06, -0.0005016326904296875, 0.0, -1.9073486328125e-05, 0.0, -6.079673767089844e-06, 0.0, -0.07430076599121094, -2.86102294921875e-05, -0.0037364959716796875, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -0.00021624563669320196, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.16054153442382812, -3.814697265625e-06, -0.0001163482666015625, 0.0, -0.5572322607040405, -1.9073486328125e-06, -0.0065898895263671875, -3.814697265625e-06, -0.0041159046813845634, 0.0, -1.9073486328125e-06, -0.6408176422119141, -3.4332275390625e-05, -8.392333984375e-05, 0.0, -0.012262776494026184, 0.0], "choice_history": [54, 125, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "_reveal", "<EOS>", "<UNK>", "<EOS>", 163, 156, "attacker", "<EOS>", 181, 66, 97, 17, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 166, 10, 169, 42, 115, "7", "<EOS>", 185, 59, 79, 169, 40, 110, "mirror", "<EOS>", 16, 87, 13, 80, 21, 110, "minion", "<EOS>", "copy", "<EOS>", 169, 32, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "<UNK>", "<EOS>", 169, 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 71, 137, 13, 80, 21, 110, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 170, 43, 119, "<UNK>", "<EOS>", 40, 110, "mirror", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "summon", "<EOS>", 171, 40, 110, "player", "<EOS>", 40, 110, "game", "<EOS>", 35, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 21, 110, "player", "<EOS>", "minions", "<EOS>", 71, 137, 21, 110, "mirror", "<EOS>", "<UNK>", "<EOS>", 169, 40, 110, "new_card", "<EOS>", 181, 65, 94, "can_use", "<EOS>", 1, 157, 165, 156, "self", "<EOS>", 156, "player", "<EOS>", 156, "game", "<EOS>", 181, 68, 117, 15, 83, 2, 170, 45, 127, 29, 146, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 36, 90, 16, 87, 21, 110, "len", "<EOS>", 169, 32, 80, 13, 80, 21, 110, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 166, 6, 169, 42, 115, "1", "<EOS>"], "score": -10.057574354452498, "model_output": {"hole4": "<UNK>", "hole6": [{"test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"value": {"id": "self", "_type": "Name"}, "attr": "player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}, "body": [{"value": {"func": {"value": {"id": "minion", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"id": "self", "_type": "Name"}, "attr": "player", "_type": "Attribute"}], "_type": "Call"}, "targets": [{"id": "mirror", "_type": "Name"}], "_type": "Assign"}, {"hole1": "<UNK>", "hole0": {"id": "mirror", "_type": "Name"}, "_type": "Template17", "hole2": [{"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"value": {"id": "self", "_type": "Name"}, "attr": "player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}]}, {"hole1": "trigger", "hole0": {"value": {"id": "minion", "_type": "Name"}, "attr": "player", "_type": "Attribute"}, "_type": "Template17", "hole2": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}]}, {"hole1": "summon", "hole0": {"id": "mirror", "_type": "Name"}, "_type": "Template17", "hole2": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}]}, {"hole1": "<UNK>", "hole0": {"id": "mirror", "_type": "Name"}, "_type": "Template17", "hole2": [{"id": "new_card", "_type": "Name"}]}], "_type": "If"}], "hole1": "SecretCard", "hole0": "Repentance", "hole5": [{"arg": "attacker", "_type": "arg"}], "hole7": [{"name": "can_use", "body": [{"value": {"values": [{"hole3": "game", "hole1": "can_use", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template12", "hole2": "player"}, {"comparators": [{"n": 1, "_type": "Num"}], "left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "op": {"_type": "And"}, "_type": "BoolOp"}, "_type": "Return"}], "_type": "FunctionDef", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "hole2": [{"hole3": "COMMON", "hole1": 1, "hole0": "Repentance", "_type": "Template6", "hole2": "PALADIN"}], "_type": "Template0", "hole3": "_reveal"}}]}
{"gold_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, False)\n\n    def create_minion(self, p):\n        return Minion(0, 1)\n", "beams": [{"inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellDamage(), PlayerSelector())])\n", "score_history": [-0.0001392364501953125, -0.03618335723876953, -0.00015293381875380874, -0.0011606899788603187, -0.010500148870050907, -0.002059928374364972, -2.1456507965922356e-06, -1.0371208190917969e-05, 0.0, 0.0, -0.01740264892578125, -7.62939453125e-06, -2.145764938177308e-06, -0.0007411219412460923, -0.00012981891632080078, -0.00011467933654785156, -0.0008590221405029297, -8.7738037109375e-05, -0.04658330976963043, -6.091431714594364e-05, -0.16659152507781982, -2.3841855067985307e-07, -0.017113804817199707, 0.0, -0.08768653869628906, 0.0, -1.8954247934743762e-05, 0.0, -1.9073486328125e-06, -0.0039501190185546875, -0.00014495849609375, -8.273124694824219e-05, -3.9219088648678735e-05, -5.888938540010713e-05, -3.576278118089249e-07, -0.04430534318089485, -5.841255187988281e-06, -0.000156402587890625, -0.009775161743164062, -0.005583286285400391, -0.00037086009979248047, -0.000213623046875, -0.013957977294921875, -1.9073486328125e-06, -0.065088652074337, -0.6726865172386169, -0.27566540241241455, -8.869171142578125e-05, -0.0856180191040039, -0.000164031982421875, -0.0013070106506347656, -6.29425048828125e-05, 0.0], "choice_history": [54, 122, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 28, 141, "Aura", "<EOS>", 170, 50, 146, "<UNK>", "Spell", "Damage", "<EOS>", 50, 146, "Player", "Selector", "<EOS>"], "score": -1.5669387541251183, "model_output": {"hole4": "player", "hole6": [{"hole3": {"hole1": [{"hole0": "<UNK>SpellDamage", "_type": "Template19"}, {"hole0": "PlayerSelector", "_type": "Template19"}], "hole0": "Aura", "_type": "Template18"}, "hole1": 1, "hole0": 0, "_type": "Template9", "hole2": "auras"}], "hole1": "MinionCard", "hole0": "ShadowOfNothing", "hole2": [{"hole3": "EPIC", "hole1": 0, "hole0": "Shadow of Nothing", "_type": "Template6", "hole2": "PRIEST"}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if self.target.health > player.effective_spell_damage(2\n            ) or self.target.divine_shield:\n            self.target.damage(player.effective_spell_damage(2), self)\n            player.draw()\n        else:\n            self.target.damage(player.effective_spell_damage(2), self)\n", "beams": [{"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.draw()\n", "score_history": [-1.9073486328125e-06, -4.00543212890625e-05, -2.7656173188006505e-05, -9.536738616588991e-07, -2.383312676101923e-07, -3.4332275390625e-05, -1.1920928244535389e-07, -4.57763671875e-05, -4.76837158203125e-05, -8.96453857421875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -9.775153557711747e-06, 0.0, -0.00046539306640625, -3.814697265625e-06, -1.9073486328125e-05, -1.5497195136049413e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.006722858524881e-06, -1.4305104514278355e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -4.76837158203125e-05, -5.316734313964844e-05, -0.6358261108398438, -2.47955322265625e-05, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.000141143798828125, 0.0, -2.5033950805664062e-05, 0.0, -7.62939453125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002422332763671875, -3.814697265625e-06, -2.288818359375e-05, -6.4849853515625e-05, -1.52587890625e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0014820098876953125, -1.9073486328125e-06, -0.0002384185791015625, -1.1682510375976562e-05, -0.19067811965942383, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.000202178955078125, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -0.00023317337036132812, -7.62939453125e-06, -0.000606536865234375, -0.0008335113525390625, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -7.987022399902344e-06, 0.0, -7.82012939453125e-05, 0.0, -3.9458274841308594e-05, 0.0, -0.03940868377685547, -0.0002689361572265625, -2.09808349609375e-05, -3.814697265625e-05, -0.0003261566162109375, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-05, -0.000240325927734375, -1.1920928244535389e-07, -2.682209014892578e-05, 0.0, -1.52587890625e-05, -0.02096080780029297, -7.2479248046875e-05, -0.0003490447998046875, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.000244140625, -1.9073486328125e-06, -0.0005637407302856445, -5.7220458984375e-06, -1.9073486328125e-05, -0.008612632751464844, -0.000194549560546875, -0.0012574295978993177, -2.9802276912960224e-06, -8.58306884765625e-05, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.18160724639892578, -0.0003204345703125, -4.1961669921875e-05, 0.0, -4.1961669921875e-05, 0.0, -0.050603270530700684, 0.0], "choice_history": [54, 124, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Slam", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "target_func", "<EOS>", 13, 80, 13, 80, 21, 110, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 163, 156, "game", "<EOS>", 183, 63, 92, 25, 127, 29, 146, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 71, 137, 13, 80, 21, 110, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 170, 35, 87, 13, 80, 21, 110, "player", "<EOS>", "effective_spell_damage", "<EOS>", 169, 42, 115, "2", "<EOS>", 40, 110, "self", "<EOS>", 71, 136, 21, 110, "player", "<EOS>", "draw", "<EOS>"], "score": -1.137461075705673, "model_output": {"hole4": "player", "hole6": [{"value": {"hole3": "game", "hole1": "use", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template12", "hole2": "player"}, "_type": "Expr"}, {"hole1": "damage", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "_type": "Template17", "hole2": [{"func": {"value": {"id": "player", "_type": "Name"}, "attr": "effective_spell_damage", "_type": "Attribute"}, "args": [{"n": 2, "_type": "Num"}], "_type": "Call"}, {"id": "self", "_type": "Name"}]}, {"hole1": "draw", "hole0": {"id": "player", "_type": "Name"}, "_type": "Template17"}], "hole1": "SpellCard", "hole0": "Slam", "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Slam", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARRIOR", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "use"}}]}
{"gold_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.NONE, battlecry=\n            Battlecry(Silence(), MinionSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "beams": [{"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Silence(),\n            MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [0.0, -3.814697265625e-05, -0.000816821469925344, -1.8358206943958066e-05, 0.0, -1.5854835510253906e-05, -2.861018856492592e-06, -0.0004367828369140625, -9.72747802734375e-05, -3.0517578125e-05, -3.0517578125e-05, -9.5367431640625e-06, -3.099440846199286e-06, 0.0, -8.344650268554688e-06, 0.0, -0.001476287841796875, -3.814697265625e-06, -3.814697265625e-06, -2.9802322387695312e-06, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -0.0005784038221463561, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -7.62939453125e-06, -0.000812530517578125, 0.0, 0.0, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.0001302957534790039, 0.0, -2.872943878173828e-05, 0.0, -0.004703521728515625, -9.918212890625e-05, -3.814697265625e-06, -8.749960397835821e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -7.62939453125e-06, -1.71661376953125e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.000431060791015625, -1.9073486328125e-06, -0.2781470715999603, -0.00019047902605962008, -2.6702880859375e-05, -6.866455078125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.9948215746553615e-05, -0.0016269683837890625, 0.0, -0.000492095947265625, -2.09808349609375e-05, -1.9073486328125e-06, -0.006716728210449219, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0010696649551391602, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.002506732940673828, 0.0, -8.0108642578125e-05, 0.0, -0.0003395079984329641, -2.47955322265625e-05, -2.0265579223632812e-06, -9.655952453613281e-06, 0.0, -2.133843008778058e-05, 0.0, -2.86102294921875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0004174709029030055, -3.6954811548639555e-06, -0.0007199046085588634, -1.1801719665527344e-05], "choice_history": [54, 122, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Spellbreaker", "<EOS>", 42, 115, "4", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "Silence", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 177, 53, 159, "players", "<EOS>", 29, 146, "Both", "Player", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "4", "<EOS>", "3", "<EOS>"], "score": -0.30274088311963965, "model_output": {"hole4": "player", "hole6": [{"hole1": 3, "hole0": 4, "_type": "Template11"}], "hole1": "MinionCard", "hole0": "Spellbreaker", "hole2": [{"hole3": [{"value": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"hole0": "Silence", "_type": "Template19"}, {"func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template19"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template19"}, "arg": "picker", "_type": "keyword"}], "_type": "Call"}], "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Spellbreaker", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(Buff(Taunt())),\n            MinionSelector(Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "beams": [{"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Summon(Taunt()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.0002818902430590242, -6.97350042173639e-05, -0.0005379670183174312, -2.0265288185328245e-06, -2.4676293833181262e-05, -3.6954811548639555e-06, -5.7220458984375e-06, -9.72747802734375e-05, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, 0.0, -3.4809112548828125e-05, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.811964830267243e-05, -8.213520050048828e-05, -1.5020355931483209e-05, -0.0011615753173828125, -1.9073486328125e-06, 0.0, -1.1205645023437683e-05, -3.576278118089249e-07, 0.0, 0.0, 0.0, 0.0, -1.1682510375976562e-05, -8.10622896096902e-06, -0.000316619873046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -2.1457668481161818e-05, 0.0, -0.0003247261047363281, -1.9073486328125e-06, -0.0007572174072265625, -5.7220458984375e-06, -1.9073486328125e-06, -0.00013267993927001953, -5.7220458984375e-06, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.103515625e-05, -2.9802317840221804e-06, -0.00095367431640625, -0.03471946716308594, -0.35268497467041016, -0.4248192608356476, -3.576278118089249e-07, -1.52587890625e-05, -1.9073486328125e-06, -0.21363089978694916, -0.022087886929512024, -0.4206218719482422, -1.9073486328125e-06, -0.1576671451330185, 0.0, 0.0, -6.079673767089844e-06, 0.0, -9.071482054423541e-05, 0.0, -3.4332275390625e-05, -0.00131988525390625, -1.33514404296875e-05, -9.179100743494928e-06, 0.0, -0.0001866816310212016, -1.1920928244535389e-07], "choice_history": [54, 122, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Sunfury", " ", "Protector", "<EOS>", 42, 115, "2", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 128, "Summon", "<EOS>", 21, 110, "Taunt", "<EOS>", 50, 146, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "3", "<EOS>"], "score": -1.633027438334345, "model_output": {"hole4": "player", "hole6": [{"hole1": 3, "hole0": 2, "_type": "Template11"}], "hole1": "MinionCard", "hole0": "SunfuryProtector", "hole2": [{"hole3": [{"value": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"hole1": {"id": "Taunt", "_type": "Name"}, "hole0": "Summon", "_type": "Template13"}, {"hole0": "PlayerSelector", "_type": "Template19"}], "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Sunfury Protector", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Transform(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=[Devilsaur(), Squirrel()])\n            ), MinionSelector(players=BothPlayer(), picker=RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "beams": [{"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(<UNK>(),\n            MinionSelector(players=EnemyPlayer(), condition=Null, picker=\n            RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score_history": [-3.814697265625e-06, -0.0009975433349609375, -0.0017729768296703696, -0.00017319642938673496, -4.768370445162873e-07, -2.1454179659485817e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-05, -0.00011444091796875, -0.00017547607421875, -7.62939453125e-06, -1.9073486328125e-06, -2.2649765014648438e-06, 0.0, -2.1100042431498878e-05, 0.0, -9.1552734375e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.576278118089249e-07, -0.00012421607971191406, -2.181529998779297e-05, -8.96453857421875e-05, -3.814697265625e-06, 0.0, -2.8610179469978902e-06, -3.576278118089249e-07, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.2649765014648438e-06, -0.000213623046875, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -7.152556463552173e-06, 0.0, -0.00011444091796875, 0.0, -0.0001659393310546875, -2.86102294921875e-05, -1.1444091796875e-05, -0.00019478797912597656, 0.0, -0.00031280517578125, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -2.110004425048828e-05, -3.576278118089249e-07, -3.62396240234375e-05, -0.16636276245117188, -4.57763671875e-05, -0.25931835174560547, -0.12226952612400055, -0.00506591796875, -0.00029754638671875, -9.72747802734375e-05, -1.9073486328125e-06, -0.0001361366012133658, -0.0003204345703125, -2.0265579223632812e-06, -0.3271484375, -9.1552734375e-05, -0.0005397796630859375, -0.00019168853759765625, -4.1961669921875e-05, -0.0001068115234375, 0.0, -0.48200833797454834, -7.2479248046875e-05, -2.86102294921875e-05, -3.4332275390625e-05, 0.0, -0.2747846841812134, 0.0, -0.45179271697998047, -0.033431053161621094, -0.007785797119140625, -1.9073486328125e-06, -0.000354766845703125, -1.9073486328125e-06, -0.06739997863769531, 0.0, -0.0017490386962890625, -7.62939453125e-06, -0.08566009998321533, -0.0017212629318237305, -2.384185791015625e-06, -0.013645768165588379, 0.0, -1.561634780955501e-05, 0.0, -1.33514404296875e-05, -0.00017547607421875, -1.9073486328125e-06, -2.3841871552576777e-06, -1.311301275563892e-06, -2.2649796846963e-06, -1.6689286894688848e-06], "choice_history": [54, 122, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Tinkmaster", " ", "Overspark", "<EOS>", 42, 115, "3", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 50, 146, "<UNK>", "<EOS>", 35, 86, 21, 110, "Minion", "Selector", "<EOS>", 178, 53, 159, "players", "<EOS>", 29, 146, "Enemy", "Player", "<EOS>", 53, 159, "condition", "<EOS>", 22, 112, "Null", "<EOS>", 53, 159, "picker", "<EOS>", 29, 146, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "3", "<EOS>", "3", "<EOS>"], "score": -2.307603812527013, "model_output": {"hole4": "player", "hole6": [{"hole1": 3, "hole0": 3, "_type": "Template11"}], "hole1": "MinionCard", "hole0": "TinkmasterOverspark", "hole2": [{"hole3": [{"value": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"hole0": "<UNK>", "_type": "Template19"}, {"func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template19"}, "arg": "players", "_type": "keyword"}, {"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}, {"value": {"hole0": "RandomPicker", "_type": "Template19"}, "arg": "picker", "_type": "keyword"}], "_type": "Call"}], "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Tinkmaster Overspark", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def _reveal(self, attacker, target):\n        if target is self.player.hero and attacker.is_minion(\n            ) and not attacker.removed:\n            attacker.die(self)\n            attacker.game.check_delayed()\n            super().reveal()\n\n    def activate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n", "beams": [{"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n", "score_history": [-3.0517578125e-05, -0.6700077056884766, -0.0001889295963337645, -0.0005867007421329618, -0.0002076625678455457, -0.00019144988618791103, -1.9073486328125e-06, -0.05491065979003906, -0.0004634857177734375, -9.72747802734375e-05, -1.1682492186082527e-05, -8.940695806813892e-06, -1.1920928244535389e-07, -1.3709068298339844e-05, -0.007541656494140625, 0.0, -0.00368499755859375, -1.9073486328125e-06, -0.056303977966308594, 0.0, -1.1920909855689388e-05, 0.0, -0.005214691162109375, -0.0007753372192382812, -0.0007381439208984375, -0.0001468658447265625, -2.288818359375e-05, -0.0008935928344726562, 0.0, -0.0023174285888671875, 0.0, -6.127357482910156e-05, -6.198883056640625e-06, -0.00021100031153764576, 0.0, -0.0005611181259155273, -1.9073486328125e-06, -0.0009325742721557617, 0.0, -0.0036516189575195312, -1.33514404296875e-05, -3.814697265625e-06, -0.19628284871578217, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.0001068115234375, -1.9073486328125e-06, -0.0001430511474609375, -3.814697265625e-06, -0.00919342041015625, -0.000202178955078125, -3.62396240234375e-05, -0.0007381439208984375, 0.0, -9.5367431640625e-06, -6.866455078125e-05, -0.000194549560546875, -3.0517578125e-05, -0.00020658968423958868, -2.9802317840221804e-06, -1.9073486328125e-06, -4.291534423828125e-06, -1.1920922133867862e-06, -0.03343009948730469, -3.24249267578125e-05, -7.2479248046875e-05, -0.0081939697265625, 0.0, -0.006730079650878906, -3.814697265625e-06, -0.0012216567993164062, -1.9073486328125e-06, -0.00011086463928222656, -3.647804260253906e-05, -7.28368540876545e-05, 0.0, -0.0002598762512207031, 0.0, -0.17964518070220947, -9.5367431640625e-06, -3.62396240234375e-05, -1.1444091796875e-05, -1.9073486328125e-05, -0.2239684760570526, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, 0.0, -0.0001049041748046875, -1.9073486328125e-06, -0.0001373291015625, -5.7220458984375e-06, -0.00144195556640625, -8.0108642578125e-05, -0.033428192138671875, -2.3365017113974318e-05, -0.0001316070556640625, -0.0001239776611328125, -0.2684001922607422, -3.24249267578125e-05, -7.975101470947266e-05, -2.741813204920618e-06, -5.7220458984375e-06, -0.014485359191894531, -2.3841855067985307e-07, -0.021612167358398438, -1.1444091796875e-05, -0.0002193450927734375, -0.02086353302001953, 0.0, -0.011994361877441406, -3.814697265625e-06, -0.0023241043090820312, 0.0, -0.0031853914260864258, -7.748603820800781e-06, -0.0007519721984863281, 0.0, -0.0008127689361572266, 0.0, -0.005909085273742676, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-05, -1.1444091796875e-05, -0.24219000339508057, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0002269744873046875, -1.9073486328125e-06, -0.0002155303955078125, -7.62939453125e-06], "choice_history": [54, 123, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 181, 73, 149, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 182, 65, 94, "deactivate", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>", 65, 94, "_reveal", "<EOS>", 1, 157, 164, 156, "self", "<EOS>", 156, "player", "<EOS>", 181, 71, 137, 13, 80, 13, 80, 21, 110, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 170, 43, 119, "minion_played", "<EOS>", 32, 80, 21, 110, "self", "<EOS>", "_reveal", "<EOS>"], "score": -2.0998150205634474, "model_output": {"hole4": "player", "hole6": [{"hole1": "bind", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "_type": "Template17", "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole1": "SecretCard", "hole0": "Vaporize", "hole7": [{"name": "deactivate", "body": [{"hole1": "unbind", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "_type": "Template17", "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "_type": "FunctionDef", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "_reveal", "body": [{"hole1": "unbind", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "_type": "Template17", "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "_type": "FunctionDef", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "hole2": [{"hole3": "RARE", "hole1": 3, "hole0": "Vaporize", "_type": "Template6", "hole2": "MAGE"}], "_type": "Template0", "hole3": "use"}}]}
{"gold_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n", "beams": [{"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n", "score_history": [0.0, -5.7220458984375e-06, -3.0040289857424796e-05, -0.0001132426259573549, -1.311301275563892e-06, -9.499490261077881e-07, -1.0728831512096804e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.0010547637939453125, -1.9073486328125e-05, -1.4305104514278355e-06, -0.00012183124636067078, -5.841255187988281e-06, 0.0, -0.00025046226801350713, -2.622600959512056e-06, -2.86102294921875e-05, 0.0, -2.3603439331054688e-05, 0.0, -1.33514404296875e-05, 0.0, -3.2782554626464844e-05, 0.0, -1.9073486328125e-06, -0.000324249267578125, -8.96453857421875e-05, -1.5497189451707527e-05, -1.6689286894688848e-06, -0.0001803365012165159, -1.1920928244535389e-07, -0.04404950141906738, 0.0, -0.0003814697265625, -4.9591064453125e-05, -7.557867502328008e-05, -7.152555099310121e-07], "choice_history": [54, 122, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 181, 73, 149, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 74, 151, "2", "<EOS>", "1", "<EOS>", "stealth", "<EOS>", 22, 111, "True", "<EOS>"], "score": -0.04689117779263796, "model_output": {"hole4": "player", "hole6": [{"hole3": {"value": true, "_type": "NameConstant"}, "hole1": 1, "hole0": 2, "_type": "Template9", "hole2": "stealth"}], "hole1": "MinionCard", "hole0": "WorgenInfiltrator", "hole2": [{"hole3": "COMMON", "hole1": 1, "hole0": "Worgen Infiltrator", "_type": "Template6", "hole2": "ALL"}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker()),\n            GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.\n            DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "beams": [{"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(Null, EnemyPlayer(), RandomPicker(4)),\n            GreaterThan(Count(MinionSelector(IsType(MINION_TYPE.DRAGON))),\n            value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score_history": [0.0, -2.6702880859375e-05, -0.00017498392844572663, -5.853036782355048e-05, -4.768367489305092e-06, -1.1909287422895432e-07, -4.88758041683468e-06, -9.536738616588991e-07, -3.62396240234375e-05, -0.000110626220703125, -3.814697265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -6.914137884450611e-06, 0.0, -1.52587890625e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.4570634852570947e-06, -0.00011074542999267578, -6.198883056640625e-06, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -0.002443383913487196, -6.556489552167477e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -6.4373016357421875e-06, -5.53131103515625e-05, 0.0, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -3.4689903259277344e-05, 0.0, -4.3272972106933594e-05, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, -1.1444091796875e-05, -0.00016808509826660156, -4.57763671875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -4.57763671875e-05, 0.0, -0.000453948974609375, 0.0, -0.0036373138427734375, -0.0768117904663086, -0.0003986358642578125, -0.06034111976623535, -2.4199485778808594e-05, -0.19975510239601135, -1.1920922133867862e-06, -1.9073486328125e-05, -0.7316007614135742, -1.9073486328125e-06, -1.71661376953125e-05, -0.03150928020477295, -0.0004941225051879883, 0.0, -0.0014362335205078125, -0.00075531005859375, -6.4849853515625e-05, -0.000701904296875, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.01612865924835205, -7.43865966796875e-05, -8.20159912109375e-05, -0.32232093811035156, -0.0010318756103515625, -0.050079941749572754, -0.0011713459389284253, -0.00018322466348763555, -0.21666502952575684, -6.258478970266879e-05, -0.0045909881591796875, -0.0004673004150390625, -0.00030517578125, 0.0, -0.0036525726318359375, -0.00011253354023210704, -7.62939453125e-06, -7.62939453125e-06, -0.000766754150390625, -0.04450225830078125, -0.003397007705643773, -9.059900548891164e-06, -6.4849853515625e-05, 0.0, -0.0017986297607421875, -0.006632804870605469, -5.7220458984375e-06, -0.000118255615234375, -0.00567626953125, -2.288818359375e-05, -3.62396240234375e-05, 0.0, -0.0003875493712257594, -0.0010707464534789324, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-05, 0.0, -5.14984130859375e-05, 0.0, -8.7738037109375e-05, -2.3841855067985307e-07, -0.1483440399169922, -2.86102294921875e-05, -6.103515625e-05, 0.0, -1.1444091796875e-05, -0.009924888610839844, -8.392333984375e-05, -0.000225067138671875, -1.9073486328125e-06, -0.0009456868283450603, 0.0, -1.4185905456542969e-05, -1.9073486328125e-06, -8.630691445432603e-05, 0.0, -1.9073486328125e-06, -0.0001621246337890625, -5.7220458984375e-06, -0.00024521350860595703, -2.47952248173533e-05, -0.000377655029296875, -2.3841855067985307e-07], "choice_history": [54, 122, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Blackwing", " ", "Corruptor", "<EOS>", 42, 115, "5", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 47, 134, "Damage", "<EOS>", "3", "<EOS>", 35, 87, 21, 110, "Character", "Selector", "<EOS>", 171, 41, 112, "Null", "<EOS>", 50, 146, "Enemy", "Player", "<EOS>", 47, 134, "Random", "Picker", "<EOS>", "4", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 130, "Count", "<EOS>", 21, 110, "Minion", "Selector", "<EOS>", 169, 35, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "5", "<EOS>", "4", "<EOS>"], "score": -1.9539005620083003, "model_output": {"hole4": "player", "hole6": [{"hole1": 4, "hole0": 5, "_type": "Template11"}], "hole1": "MinionCard", "hole0": "BlackwingCorruptor", "hole2": [{"hole3": [{"value": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"hole1": 3, "hole0": "Damage", "_type": "Template15"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "args": [{"value": "Null", "_type": "NameConstant"}, {"hole0": "EnemyPlayer", "_type": "Template19"}, {"hole1": 4, "hole0": "RandomPicker", "_type": "Template15"}], "_type": "Call"}, {"func": {"id": "GreaterThan", "_type": "Name"}, "args": [{"hole1": {"id": "MinionSelector", "_type": "Name"}, "hole0": "Count", "_type": "Template13", "hole2": [{"func": {"id": "IsType", "_type": "Name"}, "args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}], "_type": "Call"}]}], "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}], "_type": "Call"}], "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Blackwing Corruptor", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(3)), Buff(ChangeHealth(3))]),\n            SelfSelector(), Not(GreaterThan(Attribute('health',\n            HeroSelector(EnemyPlayer())), value=15))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "beams": [{"inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Give(Buff(Buff(+3/+3()))), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [0.0, -0.0001010894775390625, -7.4741430580616e-05, -0.0003077620349358767, -2.50339189733495e-06, -1.5310943126678467e-06, -4.172325134277344e-06, -4.172316494077677e-06, -3.4332275390625e-05, -0.00020599365234375, -0.000102996826171875, -3.4332275390625e-05, -1.9073486328125e-06, -2.384185791015625e-06, 0.0, -3.576277322281385e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.4305104514278355e-06, -0.00012421607971191406, -4.148482548771426e-05, -6.67572021484375e-05, -7.62939453125e-06, 0.0, -5.8293764595873654e-05, -5.245195097813848e-06, 0.0, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -2.3841855067985307e-07, -5.841255187988281e-06, 0.0, 0.0, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -4.3153759179404005e-05, -1.1920928244535389e-07, -7.057189213810489e-05, 0.0, -0.21578598022460938, -0.0002155303955078125, -9.5367431640625e-06, -0.18414700031280518, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.9710270104696974e-05, -1.9073486328125e-06, -0.005240440368652344, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -0.31302642822265625, -0.03383922576904297, -0.21255207061767578, -0.0020650746300816536, -0.05997931957244873, -1.9073486328125e-05, -9.5367431640625e-06, -0.41472065448760986, -0.04062211513519287, -7.05718994140625e-05, -0.20559406280517578, -0.011007308959960938, -0.015177488327026367, 0.0, -1.71661376953125e-05, 0.0, -0.14934484660625458, -0.21807488799095154, -0.015157699584960938, -1.9073486328125e-06, -0.2036830186843872, -2.3841855067985307e-07, 0.0, -7.43865966796875e-05, 0.0, -2.384185791015625e-06, 0.0, -6.67572021484375e-05, -8.7738037109375e-05, -5.7220458984375e-06, -2.5033946258190554e-06, -1.1920928244535389e-07, -7.574680239486042e-06, -3.2186455882765586e-06], "choice_history": [54, 122, "Drakonid", "Crusher", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Drakonid", " ", "Crusher", "<EOS>", 42, 115, "6", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 177, 52, 135, "PIRATE", "<EOS>", 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 170, 46, 130, "Give", "<EOS>", 21, 110, "Buff", "<EOS>", 169, 46, 128, "Buff", "<EOS>", 21, 110, "+3/+3", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "6", "<EOS>", "6", "<EOS>"], "score": -2.3020670754959056, "model_output": {"hole4": "player", "hole6": [{"hole1": 6, "hole0": 6, "_type": "Template11"}], "hole1": "MinionCard", "hole0": "DrakonidCrusher", "hole2": [{"hole3": [{"hole0": "PIRATE", "_type": "Template16"}, {"value": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"hole1": {"id": "Buff", "_type": "Name"}, "hole0": "Give", "_type": "Template13", "hole2": [{"hole1": {"id": "+3/+3", "_type": "Name"}, "hole0": "Buff", "_type": "Template13"}]}, {"hole0": "SelfSelector", "_type": "Template19"}], "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Drakonid Crusher", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            False, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "beams": [{"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-1.9073486328125e-06, -0.0001220703125, -1.7404405298293568e-05, -7.510169325541938e-06, -2.956390380859375e-05, -6.103515625e-05, 0.0, -0.0002288818359375, -0.000186920166015625, -0.005733489990234375, -0.000499725341796875, 0.0, -4.4465065002441406e-05, 0.0, -0.00012314139166846871, 0.0, -0.00476837158203125, -0.0031261444091796875, -6.29425048828125e-05, -9.536738616588991e-07, -4.172325134277344e-06, -5.7220458984375e-06, 0.0, -0.0034375328104943037, -1.0728830375228426e-06, -2.6702880859375e-05, -1.52587890625e-05, -2.6702880859375e-05, 0.0, -3.814697265625e-05, -0.0003643035888671875, -0.0002727508544921875, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.894371032714844e-06, -1.9073486328125e-06, -0.07058537006378174, 0.0, -7.05718994140625e-05, -7.62939453125e-05, -0.0006618499755859375, -5.7220458984375e-06, -0.00113677978515625, -0.0007991790771484375, -0.0007152557373046875, -0.001238107681274414, -1.71661376953125e-05, -0.00019681453704833984, 0.0, -0.00014638900756835938, 0.0, -1.71661376953125e-05, -3.24249267578125e-05, -7.62939453125e-05, -0.0007262155413627625, -1.9073486328125e-06, -0.00011098543473053724, -3.814697265625e-06], "choice_history": [54, 122, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 173, 43, 119, "Imp", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 41, 111, "False", "<EOS>", 176, 52, 135, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "1", "<EOS>", "1", "<EOS>"], "score": -0.09586179846462528, "model_output": {"hole4": "player", "hole6": [{"hole1": 1, "hole0": 1, "_type": "Template11"}], "hole1": "MinionCard", "hole0": "Imp", "hole2": [{"hole3": [{"hole0": "DEMON", "_type": "Template16"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Imp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "_type": "Template0", "hole3": "create_minion"}}]}
{"gold_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give(Buff(ChangeHealth(2))), SelfSelector(),\n            GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.\n            DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "beams": [{"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (3)), Buff(+2Whelp())]), SelfSelector(), GreaterThan(Count(\n            CardSelector(condition=IsType(MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score_history": [0.0, -1.9073486328125e-05, -0.0010474200826138258, -0.00013100267096888274, -5.602820692729438e-06, -1.1809170246124268e-06, -6.198883056640625e-06, -1.7881377516459906e-06, -2.09808349609375e-05, -0.0001239776611328125, -2.47955322265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.2186455882765586e-06, 0.0, -2.9802317840221804e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.6689286894688848e-06, -0.00014126300811767578, -5.173683166503906e-05, -1.9073486328125e-06, 0.0, 0.0, -4.649149104807293e-06, -2.3841830625315197e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -2.2649765014648438e-06, -0.1875925064086914, -3.24249267578125e-05, -3.814697265625e-06, -0.0001316070556640625, -7.62939453125e-06, 0.0, -0.00011301040649414062, 0.0, -0.00023829762358218431, 0.0, -0.0018768310546875, -0.000843048095703125, -3.0517578125e-05, -0.0002804994583129883, -1.1444091796875e-05, -3.814697265625e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -4.38690185546875e-05, 0.0, -0.00058746337890625, -0.07206916809082031, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0004781484603881836, -0.00032901763916015625, -5.7220458984375e-06, -0.00096893310546875, -7.43865966796875e-05, -0.004090309143066406, -3.814697265625e-06, -0.003276824951171875, -0.00017237516294699162, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.3841803340474144e-05, -0.3829132318496704, -1.9073486328125e-06, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.15751123428344727, -1.1444091796875e-05, -1.1444091796875e-05, -0.06333351135253906, -0.00023651123046875, -1.1920928244535389e-07, -7.62939453125e-06, -2.6702880859375e-05, -0.07337424904108047, -0.6739678382873535, -1.1324837942083832e-05, -0.030015945434570312, 0.0, -0.027072066441178322, -3.218649908376392e-06, 0.0, -0.28865718841552734, -0.00160980224609375, -2.6702880859375e-05, 0.0, -0.00037229061126708984, -8.130073547363281e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, -0.042514801025390625, -0.0005539525882340968, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.01639091968536377, -0.0007693767547607422, 0.0, -0.0002460479736328125, 0.0, 0.0, -0.06066906452178955, -5.7220458984375e-06, -0.0009765625, -5.53131103515625e-05, -3.24249267578125e-05, 0.0, -0.009618163108825684, -1.3828227565682027e-05, 0.0, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00014913082122802734, -1.0490362910786644e-05, -0.005527496337890625, -4.1961669921875e-05, -0.00011444091796875, 0.0, -5.7220458984375e-06, -0.001523137092590332, -1.728534698486328e-05, -4.00543212890625e-05, 0.0, -0.008841154165565968, 0.0, -5.865095590706915e-05, -1.9073486328125e-06, -0.00018166768131777644, -1.9073486328125e-06, -3.814697265625e-06, -0.0001220703125, -5.7220458984375e-06, -0.00017380710050929338, 0.0, -3.9934315282152966e-05, 0.0], "choice_history": [54, 122, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 181, 71, 138, 29, 146, "super", "<EOS>", "__init__", "<EOS>", 172, 43, 119, "Twilight", " ", "Whelp", "<EOS>", 42, 115, "1", "<EOS>", 32, 80, 21, 110, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 32, 80, 21, 110, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 176, 53, 159, "battlecry", "<EOS>", 16, 87, 21, 110, "Battlecry", "<EOS>", 171, 35, 87, 21, 110, "Give", "<EOS>", 169, 38, 106, 170, 46, 130, "Buff", "<EOS>", 21, 110, "Change", "Attack", "<EOS>", 169, 42, 115, "3", "<EOS>", 46, 128, "Buff", "<EOS>", 21, 110, "+2", "Whelp", "<EOS>", 50, 146, "Self", "Selector", "<EOS>", 35, 88, 21, 110, "Greater", "Than", "<EOS>", 169, 46, 129, "Count", "<EOS>", 21, 110, "Card", "Selector", "<EOS>", 176, 53, 159, "condition", "<EOS>", 16, 87, 21, 110, "Is", "Type", "<EOS>", 169, 32, 80, 21, 110, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 176, 53, 159, "value", "<EOS>", 23, 115, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 181, 69, 126, "2", "<EOS>", "1", "<EOS>"], "score": -2.123266669374509, "model_output": {"hole4": "player", "hole6": [{"hole1": 1, "hole0": 2, "_type": "Template11"}], "hole1": "MinionCard", "hole0": "TwilightWhelp", "hole2": [{"hole3": [{"value": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"func": {"id": "Give", "_type": "Name"}, "args": [{"_type": "List", "elts": [{"hole1": {"id": "ChangeAttack", "_type": "Name"}, "hole0": "Buff", "_type": "Template13", "hole2": [{"n": 3, "_type": "Num"}]}, {"hole1": {"id": "+2Whelp", "_type": "Name"}, "hole0": "Buff", "_type": "Template13"}]}], "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template19"}, {"func": {"id": "GreaterThan", "_type": "Name"}, "args": [{"hole1": {"id": "CardSelector", "_type": "Name"}, "hole0": "Count", "_type": "Template13", "hole3": [{"value": {"func": {"id": "IsType", "_type": "Name"}, "args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}], "_type": "Call"}, "arg": "condition", "_type": "keyword"}]}], "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}], "_type": "Call"}], "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "hole1": "__init__", "hole0": {"hole0": "super", "_type": "Template19"}, "_type": "Template17", "hole2": [{"s": "Twilight Whelp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARRIOR", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}]}], "_type": "Template0", "hole3": "create_minion"}}]}
